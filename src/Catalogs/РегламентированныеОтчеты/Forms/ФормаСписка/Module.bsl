
&НаСервере
Функция ПолучитьОтчет()
	Перем Расширение;
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	РегламентированныеОтчеты.ЭтоГруппа КАК ЭтоГруппа,
		|	РегламентированныеОтчеты.ИсточникОтчета КАК ИсточникОтчета
		|ИЗ
		|	Справочник.РегламентированныеОтчеты КАК РегламентированныеОтчеты
		|ГДЕ
		|	РегламентированныеОтчеты.Ссылка = &ТекущаяСтрока
		|");
	
	Запрос.УстановитьПараметр("ТекущаяСтрока", Элементы.Список.ТекущаяСтрока);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Выборка.Следующий();
	
	Если Выборка.ЭтоГруппа Тогда
		Возврат "ЭтоГруппа";
	КонецЕсли;
	
	ФайлВнешнегоОтчета = Выборка.ИсточникОтчета;
	
	ПравоДоступаКОтчету = РегламентированнаяОтчетностьВызовСервера.ПравоДоступаКРегламентированномуОтчету(ФайлВнешнегоОтчета);
	Если ПравоДоступаКОтчету = Ложь Тогда
				
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Недостаточно прав!';uk='Недостатньо прав!'");
		Сообщение.Сообщить();
		
		Возврат Неопределено;
		
	ИначеЕсли ПравоДоступаКОтчету = Неопределено Тогда
				
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Отчет не найден!';uk='Звіт не знайдений!'");
		Сообщение.Сообщить();
		
		Возврат Неопределено;
		
	КонецЕсли;
		
	Если Метаданные.Документы.Найти(ФайлВнешнегоОтчета) <> Неопределено Тогда // это внутренний отчет-документ
			
		ВнутреннийОтчет = Документы[ФайлВнешнегоОтчета];
		Возврат "Документ." + Сред(ВнутреннийОтчет, Найти(ВнутреннийОтчет, ".") + 1) + ".Форма.ФормаДокумента";
			
	КонецЕсли;
	
	// Возвращает типы ВнешнийОтчетОбъект.<Имя> и ОтчетМенеджер.<Имя>
	ТекОтчет = РегламентированнаяОтчетность.РеглОтчеты(ФайлВнешнегоОтчета);
	Если ТекОтчет = Неопределено Тогда
				
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Не удалось получить отчет!';uk='Не вдалося отримати звіт!'");
		Сообщение.Сообщить();
		
		Возврат Неопределено;
		
	КонецЕсли;
	
	// ВнешнийОтчетОбъект или ОтчетМенеджер
	Возврат ?(Найти(ТекОтчет, "ОтчетМенеджер") > 0, "Отчет.", "ВнешнийОтчет.") + Сред(ТекОтчет, Найти(ТекОтчет, ".") + 1) + ".Форма.ОсновнаяФорма";

КонецФункции

&НаКлиенте
Процедура УстановитьВидимостьКнопок(ТекЭлемент)

	Показать = Истина;

	Если ТекЭлемент.ЭтоГруппа Тогда
		Показать = Ложь;
	КонецЕсли;

	Если РежимВыбора Тогда
		Показать = Ложь;
	КонецЕсли;
	
	Элементы.Новый.Доступность = Показать;

КонецПроцедуры

&НаКлиенте
Функция УстановленаСортировкаПоКоду()
	
	СортировкаПоКоду = Истина;
	
	ПолеДляУпорядочивания = Новый ПолеКомпоновкиДанных("Код");
	Если Список.КомпоновщикНастроек.Настройки.Порядок.Элементы.Количество() = 0 Тогда
		СортировкаПоКоду = Ложь;
	ИначеЕсли Список.КомпоновщикНастроек.Настройки.Порядок.Элементы[0].Поле <> ПолеДляУпорядочивания Тогда
		СортировкаПоКоду = Ложь;
	КонецЕсли;

	Если НЕ СортировкаПоКоду Тогда
		
		ПоказатьПредупреждение(,НСтр("ru='Для изменения порядка следования необходимо установить сортировку по коду!';uk='Для зміни порядку проходження необхідно встановити сортування 
|по коду!'"));
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
		  		
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РежимВыбора = Параметры.РежимВыбора;
		
	УстановитьОтборДанных();
	Список.КомпоновщикНастроек.Настройки.Порядок.Элементы.Очистить();
	ЭлементПорядкаДанных = Список.КомпоновщикНастроек.Настройки.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
	ЭлементПорядкаДанных.Поле = Новый ПолеКомпоновкиДанных("Код");
	ЭлементПорядкаДанных.ТипУпорядочивания = НаправлениеСортировкиКомпоновкиДанных.Возр;
	ЭлементПорядкаДанных.Использование = Истина;
	
	Список.КомпоновщикНастроек.Настройки.Порядок.ИдентификаторПользовательскойНастройки = Строка(Новый УникальныйИдентификатор);
	
	Список.Параметры.УстановитьЗначениеПараметра("Внешний",  НСтр("ru=' (внешний)';uk=' (зовнішній)'"));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборДанных()
	
	СписокСкрытыхРеглОтчетов = Новый СписокЗначений;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
						  | СкрытыеРегламентированныеОтчеты.РегламентированныйОтчет КАК Ссылка
						  |ИЗ
						  |	РегистрСведений.СкрытыеРегламентированныеОтчеты КАК СкрытыеРегламентированныеОтчеты");
						  
	СписокСкрытыхРеглОтчетов.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	Список.КомпоновщикНастроек.Настройки.Отбор.Элементы.Очистить();

	ЭлементОтбораДанных = Список.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
	        	
	ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	ЭлементОтбораДанных.ПравоеЗначение = СписокСкрытыхРеглОтчетов;
	ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке;
	ЭлементОтбораДанных.Использование = Истина;
	
	Список.КомпоновщикНастроек.Настройки.Отбор.ИдентификаторПользовательскойНастройки = Строка(Новый УникальныйИдентификатор);
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	Элементы.Список.ТекущаяСтрока = НовыйОбъект.Ссылка;
		
КонецПроцедуры

&НаКлиенте
Функция СоздатьНовыйОтчет()
	
	Если Элементы.Список.ТекущаяСтрока = Неопределено Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Выберите отчет!';uk='Виберіть звіт!'");
		Сообщение.Сообщить();
		
		Возврат Ложь;
		
	КонецЕсли;
		
	ТекФорма = ПолучитьОтчет();
	
	Если ТекФорма = Неопределено
	 ИЛИ ТекФорма = "ЭтоГруппа" Тогда
		Возврат ТекФорма;
	КонецЕсли;
		
	ТекФорма = ПолучитьФорму(ТекФорма);
		
	Если ТекФорма = Неопределено Тогда
				
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Не удалось открыть отчет!';uk='Не вдалося відкрити звіт!'");
		Сообщение.Сообщить();
		
		Возврат Ложь;
		
	КонецЕсли;
		
	ТекФорма.Открыть();
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура СоздатьНовый(Команда)
		
	СоздатьНовыйОтчет();	
			
КонецПроцедуры

&НаСервере
Процедура СкрытьОтчет()
			
	Если Элементы.Список.ВыделенныеСтроки.Количество() = 0 Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Выберите отчет!';uk='Виберіть звіт!'");
		Сообщение.Сообщить();
		
		Возврат;
		
	КонецЕсли;
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	РегламентированныеОтчеты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.РегламентированныеОтчеты КАК РегламентированныеОтчеты
		|ГДЕ
		|	РегламентированныеОтчеты.Ссылка В(&МассивСсылок)
		|");
	
	Запрос.УстановитьПараметр("МассивСсылок", Элементы.Список.ВыделенныеСтроки);
	Выборка = Запрос.Выполнить().Выбрать();
    	
	НачатьТранзакцию();
	
	Пока Выборка.Следующий() Цикл
				
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		
		Если Объект.ЭтоГруппа Тогда
		
			Попытка
		
				ВыборкаЭлементовГруппы = Справочники.РегламентированныеОтчеты.ВыбратьИерархически(Объект.Ссылка);
				
				Пока ВыборкаЭлементовГруппы.Следующий() Цикл
					
					СкрытыеРегламентированныеОтчеты = РегистрыСведений.СкрытыеРегламентированныеОтчеты.СоздатьМенеджерЗаписи();
					СкрытыеРегламентированныеОтчеты.РегламентированныйОтчет = ВыборкаЭлементовГруппы.Ссылка;
					СкрытыеРегламентированныеОтчеты.Записать();
					
				КонецЦикла;
				
			Исключение
				
				Сообщение = Новый СообщениеПользователю;
				
				Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Не удалось записать ссылку на скрытый отчет в регистр сведений. %1';uk='Не вдалося записати посилання на прихований звіт в регістр відомостей. %1'"), ОписаниеОшибки());
				
				Сообщение.Сообщить();
				
				Возврат;
				
			КонецПопытки;
		
		Иначе
		
			Попытка 
				
				СкрытыеРегламентированныеОтчеты = РегистрыСведений.СкрытыеРегламентированныеОтчеты.СоздатьМенеджерЗаписи();
				СкрытыеРегламентированныеОтчеты.РегламентированныйОтчет = Объект.Ссылка;
				СкрытыеРегламентированныеОтчеты.Записать();
				
			Исключение
								
				Сообщение = Новый СообщениеПользователю;
				
				Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Не удалось записать ссылку на скрытый отчет в регистр сведений. %1';uk='Не вдалося записати посилання на прихований звіт в регістр відомостей. %1'"), ОписаниеОшибки());
				
				Сообщение.Сообщить();
				
				Возврат;
				
			КонецПопытки;
			
		КонецЕсли;
	
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
	УстановитьОтборДанных();
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура Скрыть(Команда)
	
	СкрытьОтчет();
	
КонецПроцедуры

&НаКлиенте
Процедура Восстановить(Команда)
	
	ФормаВыбораЭлементовДляВосстановленияПоказа = ПолучитьФорму("Справочник.РегламентированныеОтчеты.Форма.ФормаВыбораЭлементовДляВосстановленияПоказа", , ЭтаФорма);
	
	Если НЕ ФормаВыбораЭлементовДляВосстановленияПоказа = Неопределено Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ВосстановитьЗавершение", ЭтотОбъект);
		ФормаВыбораЭлементовДляВосстановленияПоказа.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
		ФормаВыбораЭлементовДляВосстановленияПоказа.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		ФормаВыбораЭлементовДляВосстановленияПоказа.Открыть();
	Иначе
		УстановитьОтборДанных();
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	УстановитьОтборДанных();
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВверх(Команда)
		
	Если УстановленаСортировкаПоКоду() Тогда
		ПереместитьЭлементВверхВыполнить(Список, Элементы.Список);
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВниз(Команда)
	
	Если УстановленаСортировкаПоКоду() Тогда
		ПереместитьЭлементВнизВыполнить(Список, Элементы.Список);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
			
	ОткрытьФорму("Обработка.ОбновлениеРегламентированнойОтчетности.Форма.ОсновнаяФорма", , ЭтаФорма);
	
	УстановитьОтборДанных();
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПодробнуюИнформацию(Команда)
	
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		
		ПоказатьПредупреждение(,НСтр("ru='Выберите отчет!';uk='Виберіть звіт!'"));
		
		Возврат;
		
	КонецЕсли;
	
	Если Элементы.Список.ТекущиеДанные.ЭтоГруппа Тогда
				
		ПоказатьПредупреждение(,НСтр("ru='Функция недоступна для группы отчетов!';uk='Функція недоступна для групи звітів!'"));
		
		Возврат;
		
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("НачальноеЗначениеВыбора", Элементы.Список.ТекущаяСтрока);
	
	ФормаПодробнееОФормах = РегламентированнаяОтчетностьКлиент.ПолучитьОбщуюФормуПоИмени("ПодробнееОбОтчете", ПараметрыФормы, ЭтаФорма);
	ФормаПодробнееОФормах.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ФормаПодробнееОФормах.Открыть();

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЖурнал(Команда)
			
	ОткрытьФорму("Документ.РегламентированныйОтчет.ФормаСписка");
		
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если НЕ СоздатьНовыйОтчет() = "ЭтоГруппа" Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)

	ТекущиеДанные = Элемент.ТекущиеДанные;

	Если Не ТекущиеДанные = Неопределено Тогда
		УстановитьВидимостьКнопок(ТекущиеДанные);
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура СписокОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	Элементы.Список.ТекущаяСтрока = НовыйОбъект;
		
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьЭлементВверхВыполнить(СписокРеквизит, СписокЭлемент) Экспорт
	
	ПереместитьЭлементВыполнить(СписокРеквизит, СписокЭлемент, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьЭлементВнизВыполнить(СписокРеквизит, СписокЭлемент) Экспорт
	
	ПереместитьЭлементВыполнить(СписокРеквизит, СписокЭлемент, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьЭлементВыполнить(СписокРеквизит, СписокЭлемент, Вверх)
	
	УстановленныеОтборы = Новый Структура;
	УстановленныеОтборы.Вставить("ЕстьОтборПоРодителю", Ложь);
	УстановленныеОтборы.Вставить("ЕстьОтборПоВладельцу", Ложь);
	
	Если Не ПроверитьСписокПередОперацией(СписокРеквизит, СписокЭлемент, УстановленныеОтборы) Тогда
		Возврат;
	КонецЕсли;
	
	Ссылка = СписокЭлемент.ТекущаяСтрока;
	ОтображениеСписком = (СписокЭлемент.Отображение = ОтображениеТаблицы.Список);
	
	СтрОшибка = РегламентированнаяОтчетностьВызовСервера.ИзменитьПорядокЭлементов(Ссылка, УстановленныеОтборы, ОтображениеСписком, Вверх);
		
	Если СтрОшибка = "" Тогда
		СписокЭлемент.Обновить();
	Иначе
		ПоказатьПредупреждение(,СтрОшибка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьСписокПередОперацией(СписокРеквизит, СписокЭлемент, УстановленныеОтборы)
	
	// Проверим, установлена ли текущая строка
	Если СписокЭлемент.ТекущаяСтрока = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	ЭлементыГруппировки = СписокРеквизит.КомпоновщикНастроек.Настройки.Структура;
	
	Для Каждого ЭлементГруппировки Из ЭлементыГруппировки Цикл
		Если ЭлементГруппировки.Использование Тогда
			ПоказатьПредупреждение(,НСтр("ru='Изменение порядка элементов невозможно при установленной группировке!';uk='Зміна порядку елементів неможлива при встановленому 
|групуванню!'"));
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	ЭлементыСпискаРеквизитов = СписокРеквизит.КомпоновщикНастроек.Настройки.Отбор.Элементы;
	         	
	Для Каждого ЭлементОтбора Из ЭлементыСпискаРеквизитов Цикл
		
		Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Родитель") Тогда
			УстановленныеОтборы.ЕстьОтборПоРодителю = Истина;
		ИначеЕсли ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Владелец") Тогда
			УстановленныеОтборы.ЕстьОтборПоВладельцу = Истина;
		КонецЕсли;
				
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура Изменить(Команда)
	СтруктураПараметров = Новый Структура("Ключ", Элементы.Список.ТекущиеДанные.Ссылка);
	Если Элементы.Список.ТекущиеДанные.ЭтоГруппа Тогда 
		ОткрытьФорму("Справочник.РегламентированныеОтчеты.ФормаГруппы", СтруктураПараметров);
	Иначе
		ОткрытьФорму("Справочник.РегламентированныеОтчеты.ФормаОбъекта", СтруктураПараметров);
	КонецЕсли;
КонецПроцедуры
