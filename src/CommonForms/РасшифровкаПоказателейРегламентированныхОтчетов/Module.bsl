
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ПередаватьДанныеВСистемуЗвит1С", ПередаватьДанныеВСистемуЗвит1С);
	Параметры.Свойство("ОткрыватьРасшифровкуСтрокиДляЗвит1С", ОткрыватьРасшифровкуСтрокиДляЗвит1С);
	Параметры.Свойство("НомерСтрокиРасшифровкиЗвит1С", НомерСтрокиРасшифровкиЗвит1С);
	
	МакетРасшифровки = ПолучитьОбщийМакет("РасшифровкаПоказателейРегламентированныхОтчетов");
	
	ИсходнаяТаблицаРасшифровок = ПолучитьИзВременногоХранилища(Параметры.АдресВременногоХранилищаРасшифровки);
	
	Если ТипЗнч(ИсходнаяТаблицаРасшифровок) <> Тип("ТаблицаЗначений") Тогда
		Возврат;
	КонецЕсли;
	
	Если ИсходнаяТаблицаРасшифровок.Колонки.Найти("Организация") = Неопределено Тогда
		ИсходнаяТаблицаРасшифровок.Колонки.Добавить("Организация");
	КонецЕсли;
	
	ИсходнаяТаблицаРасшифровок.Индексы.Добавить("ИмяПоказателя");
	
	ЕстьПоказателиИзСписка = Ложь;
	
	Для Каждого ИмяПоказателя Из Параметры.ИДИменПоказателей Цикл
		Если ИсходнаяТаблицаРасшифровок.Найти(ИмяПоказателя, "ИмяПоказателя") <> Неопределено Тогда
			ЕстьПоказателиИзСписка = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЕстьПоказателиИзСписка Тогда
		Для Каждого ИмяПоказателя Из Параметры.ИДИменПоказателей Цикл
			ВывестиРасшифровкуПоказателя(МакетРасшифровки, ИсходнаяТаблицаРасшифровок, ИмяПоказателя);
		КонецЦикла;
		
	Иначе
		ВыведенныеПоказатели = Новый ТаблицаЗначений;
		ВыведенныеПоказатели.Колонки.Добавить("ИмяПоказателя");
		ВыведенныеПоказатели.Индексы.Добавить("ИмяПоказателя");
		
		Для Каждого СтрокаТаблицыРасшифровки Из ИсходнаяТаблицаРасшифровок Цикл
			Если ВыведенныеПоказатели.Найти(СтрокаТаблицыРасшифровки.ИмяПоказателя, "ИмяПоказателя") = Неопределено Тогда
				
				ИмяПоказателя = СтрокаТаблицыРасшифровки.ИмяПоказателя;
				ВывестиРасшифровкуПоказателя(МакетРасшифровки, ИсходнаяТаблицаРасшифровок, ИмяПоказателя);
				
				ВыведенныйПоказатель = ВыведенныеПоказатели.Добавить();
				ВыведенныйПоказатель.ИмяПоказателя = ИмяПоказателя;
			КонецЕсли;
		КонецЦикла;
		
		Если Параметры.Свойство("ЗаголовокРасшифровки") Тогда
			ЭтаФорма.Заголовок = Параметры.ЗаголовокРасшифровки;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиРасшифровкуПоказателя(МакетРасшифровки, ТаблицаРасшифровок, ИмяПоказателя)
	
	СекцияЗаголовок = МакетРасшифровки.ПолучитьОбласть("Заголовок");
	СекцияИтог      = МакетРасшифровки.ПолучитьОбласть("Итог");
	СекцияПлюс      = МакетРасшифровки.ПолучитьОбласть("Плюс");
	СекцияМинус     = МакетРасшифровки.ПолучитьОбласть("Минус");
	СекцияСлагаемое = МакетРасшифровки.ПолучитьОбласть("Слагаемое");
	СекцияКомментарий = МакетРасшифровки.ПолучитьОбласть("Подзаголовок");
	
	СекцияНазваниеОрг         = МакетРасшифровки.ПолучитьОбласть("НазваниеОрг");
	СекцияНазваниеОргБезПлюса = МакетРасшифровки.ПолучитьОбласть("НазваниеОргБезПлюса");
	
	СтрокиРасшифровки = ТаблицаРасшифровок.НайтиСтроки(Новый Структура("ИмяПоказателя", ИмяПоказателя));
	Если СтрокиРасшифровки.Количество() > 0 Тогда
		
		НетРасшифровок = Ложь;
		
		Организации = Новый ТаблицаЗначений;
		Организации.Колонки.Добавить("Организация");
		Организации.Колонки.Добавить("Сумма");
		
		Для Каждого СтрокаРасшифровки Из СтрокиРасшифровки Цикл
			Если ЗначениеЗаполнено(СтрокаРасшифровки.Организация) Тогда
				Организация = СтрокаРасшифровки.Организация;
			Иначе
				Организация = НСтр("ru='Без указания организации';uk='Без зазначення організації'");
				Если ТаблицаРасшифровок.Колонки.Найти("ДополнительныеПараметры") <> Неопределено
				   И ТипЗнч(СтрокаРасшифровки.ДополнительныеПараметры) = Тип("Структура")
				   И СтрокаРасшифровки.ДополнительныеПараметры.Свойство("Организация") Тогда
					Если ЗначениеЗаполнено(СтрокаРасшифровки.ДополнительныеПараметры.Организация) Тогда
						Организация = СтрокаРасшифровки.ДополнительныеПараметры.Организация;
					КонецЕсли;
				КонецЕсли;
				СтрокаРасшифровки.Организация = Организация;
			КонецЕсли;
			
			НайденнаяСтрока = Организации.Найти(Организация, "Организация");
			Если НайденнаяСтрока = Неопределено Тогда
				НоваяСтрока = Организации.Добавить();
				НоваяСтрока.Организация = Организация;
				НоваяСтрока.Сумма = СтрокаРасшифровки.Сумма;
			Иначе
				НайденнаяСтрока.Сумма = НайденнаяСтрока.Сумма + СтрокаРасшифровки.Сумма;
			КонецЕсли;
		КонецЦикла;
		
		ПоНесколькимОрганизациям = (Организации.Количество() > 1);
		
		// Вывод пустого заголовка (заполнение произойдет при выводе строки с непустым полем НаименованиеПоказателя).
		ПолеРасшифровки.Вывести(СекцияЗаголовок);
		Если ПередаватьДанныеВСистемуЗвит1С Тогда
			ТаблицаРасшифровкиЗвит1С.Очистить();
			СтрокаРасшифровки = ТаблицаРасшифровкиЗвит1С.Добавить();
			СтрокаРасшифровки.ИмяФункции = "DetailsAddHeader";	
		КонецЕсли;
		
		ИтоговаяСумма = 0;
		ПерваяОрганизация = Истина;
		Для Каждого Организация Из Организации Цикл
			
			Если ПерваяОрганизация Тогда
				СекцияОрганизации = СекцияНазваниеОргБезПлюса;
				ПерваяОрганизация = Ложь;
			Иначе
				СекцияОрганизации = СекцияНазваниеОрг;
			КонецЕсли;
			
			Если ПоНесколькимОрганизациям Тогда
				СекцияОрганизации.Параметры.ИтогПоОрганизации = Организация.Сумма;
				СекцияОрганизации.Параметры.НазваниеОрганизации = Организация.Организация;
				ПолеРасшифровки.Вывести(СекцияОрганизации);
				
				Если ПередаватьДанныеВСистемуЗвит1С Тогда
					СтрокаРасшифровкиЗвит1С = ТаблицаРасшифровкиЗвит1С.Добавить();
					СтрокаРасшифровкиЗвит1С.ИмяФункции = "DetailsAddRow";	
					СтрокаРасшифровкиЗвит1С.Параметр1 = 0;
					СтрокаРасшифровкиЗвит1С.Параметр2 = ?(СекцияОрганизации = СекцияНазваниеОргБезПлюса, "", " + ") + НСтр("ru='ПО ОРГАНИЗАЦИИ: ';uk='ПО ОРГАНІЗАЦІЇ: '") + Организация.Организация;
					СтрокаРасшифровкиЗвит1С.Параметр3 = Организация.Сумма;
				КонецЕсли;
				
			КонецЕсли;
			
			ПерваяСтрока = Истина;
			Для Каждого СтрокаРасшифровки Из СтрокиРасшифровки Цикл
				
				Если СтрокаРасшифровки.Организация <> Организация.Организация Тогда
					Продолжить;
				КонецЕсли;
				
				Если НЕ ПустаяСтрока(СтрокаРасшифровки.НаименованиеПоказателя)
					  И ПустаяСтрока(ПолеРасшифровки.Области.НаименованиеЗаголовок.Значение) Тогда
					ПолеРасшифровки.Области.НаименованиеЗаголовок.Значение = СтрокаРасшифровки.НаименованиеПоказателя;
					ЭтаФорма.Заголовок = СтрокаРасшифровки.НаименованиеПоказателя + НСтр("ru=' - расшифровка значения';uk=' - розшифровка значення'");
					
					Если ПередаватьДанныеВСистемуЗвит1С Тогда
						ТаблицаРасшифровкиЗвит1С[0].Параметр1 = СтрокаРасшифровки.НаименованиеПоказателя;	
					КонецЕсли;
					
				КонецЕсли;
				
				Если Лев(СтрокаРасшифровки.НаименованиеСлагаемого, 1) = "#" Тогда
					ПолеРасшифровки.Вывести(СекцияКомментарий);
					ПолеРасшифровки.Области.ПодзаголовокНаименование.Значение = Сред(СтрокаРасшифровки.НаименованиеСлагаемого, 2);
					
					Если ПередаватьДанныеВСистемуЗвит1С Тогда
						СтрокаРасшифровкиЗвит1С = ТаблицаРасшифровкиЗвит1С.Добавить();
						СтрокаРасшифровкиЗвит1С.ИмяФункции = "DetailsAddRow";	
						СтрокаРасшифровкиЗвит1С.Параметр1 = 0;
						СтрокаРасшифровкиЗвит1С.Параметр2 = ПолеРасшифровки.Области.ПодзаголовокНаименование.Текст;
						СтрокаРасшифровкиЗвит1С.Параметр3 = "";
					КонецЕсли;
					
					Продолжить;
				КонецЕсли;
				
				Если НЕ ПерваяСтрока Тогда
					Если СтрокаРасшифровки.ЗнакОперации = "-" Тогда
						ПолеРасшифровки.Вывести(СекцияМинус);
						Если ПередаватьДанныеВСистемуЗвит1С Тогда
							СтрокаРасшифровкиЗвит1С = ТаблицаРасшифровкиЗвит1С.Добавить();
							СтрокаРасшифровкиЗвит1С.ИмяФункции = "DetailsAddRow";	
							СтрокаРасшифровкиЗвит1С.Параметр1 = 0;
							СтрокаРасшифровкиЗвит1С.Параметр2 = НСтр("ru=' - МИНУС';uk=' - МІНУС'");
							СтрокаРасшифровкиЗвит1С.Параметр3 = "";
						КонецЕсли;
					Иначе
						ПолеРасшифровки.Вывести(СекцияПлюс);
						Если ПередаватьДанныеВСистемуЗвит1С Тогда
							СтрокаРасшифровкиЗвит1С = ТаблицаРасшифровкиЗвит1С.Добавить();
							СтрокаРасшифровкиЗвит1С.ИмяФункции = "DetailsAddRow";	
							СтрокаРасшифровкиЗвит1С.Параметр1 = 0;
							СтрокаРасшифровкиЗвит1С.Параметр2 = " + ПЛЮС";
							СтрокаРасшифровкиЗвит1С.Параметр3 = "";
						КонецЕсли;
					КонецЕсли;
				Иначе
					ПерваяСтрока = Ложь;
				КонецЕсли;
				
				ПолеРасшифровки.Вывести(СекцияСлагаемое);
				ПолеРасшифровки.Области.СлагаемоеНаименование.Значение = ПолучитьПолноеНаименованиеСлагаемого(СтрокаРасшифровки.НаименованиеСлагаемого) + ПолучитьНаименованиеДополнительныхПараметров(СтрокаРасшифровки.ДополнительныеПараметры);
				ПолеРасшифровки.Области.СлагаемоеСумма.Значение        = СтрокаРасшифровки.Сумма;
				
				Если ПередаватьДанныеВСистемуЗвит1С Тогда
					СтрокаРасшифровкиЗвит1С = ТаблицаРасшифровкиЗвит1С.Добавить();
					СтрокаРасшифровкиЗвит1С.ИмяФункции = "DetailsAddRow";	
					СтрокаРасшифровкиЗвит1С.Параметр1 = Формат(ПолеРасшифровки.ВысотаТаблицы, "ЧДЦ=; ЧГ=");
					СтрокаРасшифровкиЗвит1С.Параметр2 = ПолеРасшифровки.Области.СлагаемоеНаименование.Значение;
					СтрокаРасшифровкиЗвит1С.Параметр3 = Формат(СтрокаРасшифровки.Сумма,"ЧЦ=15; ЧДЦ=2; ЧН=0");
				КонецЕсли;
				
				Если СтрокаРасшифровки.ДополнительныеПараметры <> Неопределено
				   И ТипЗнч(СтрокаРасшифровки.ДополнительныеПараметры) = Тип("Структура")
				   И СтрокаРасшифровки.ДополнительныеПараметры.Свойство("Отчет") Тогда
					РасшифровкаОбласти = СтрокаРасшифровки.ДополнительныеПараметры.Отчет;
					ПолеРасшифровки.Области.СлагаемоеНаименование.Расшифровка = РасшифровкаОбласти;
					ПолеРасшифровки.Области.СлагаемоеСумма.Расшифровка = РасшифровкаОбласти;
				КонецЕсли;
				
				Если СтрокаРасшифровки.ЗнакОперации = "-" Тогда
					ИтоговаяСумма = ИтоговаяСумма - СтрокаРасшифровки.Сумма;
				Иначе	
					ИтоговаяСумма = ИтоговаяСумма + СтрокаРасшифровки.Сумма;
				КонецЕсли;
				
				
			КонецЦикла;
		КонецЦикла;
		
		// Вывод итога.
		ПолеРасшифровки.Вывести(СекцияИтог);
		ПолеРасшифровки.Области.ИтогСумма.Значение = ИтоговаяСумма;
		
		Если ПередаватьДанныеВСистемуЗвит1С Тогда
			СтрокаРасшифровкиЗвит1С = ТаблицаРасшифровкиЗвит1С.Добавить();
			СтрокаРасшифровкиЗвит1С.ИмяФункции = "DetailsAddFooter";	
			СтрокаРасшифровкиЗвит1С.Параметр1 = НСтр("ru='Итого по строке:';uk='Разом по рядку:'");
			СтрокаРасшифровкиЗвит1С.Параметр2 = Формат(ИтоговаяСумма,"ЧЦ=15; ЧДЦ=2; ЧН=0");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Функция возвращает полное наименования слагаемого после обработки макросов в имени
//
// Параметры
//     НаименованиеСлагаемого  - Строка - Исходное наименование слагаемого
//                 
// Возвращаемое значение:
//     Строка  - Обработанное наименование слагаемого
//
&НаСервере
Функция ПолучитьПолноеНаименованиеСлагаемого(НаименованиеСлагаемого)

	Если Найти(НаименованиеСлагаемого, "!СКДР") = 1 Тогда
		Возврат НСтр("ru='Развернутое сальдо на конец периода по дебету счета ';uk='Розгорнуте сальдо на кінець періоду по дебету рахунку '") + СокрЛП(Сред(НаименованиеСлагаемого, 6));
		
	ИначеЕсли Найти(НаименованиеСлагаемого, "!СККР") = 1 Тогда
		Возврат НСтр("ru='Развернутое сальдо на конец периода по кредиту счета ';uk='Розгорнуте сальдо на кінець періоду по кредиту рахунку '") + СокрЛП(Сред(НаименованиеСлагаемого, 6));
		
	ИначеЕсли Найти(НаименованиеСлагаемого, "!СНДР") = 1 Тогда
		Возврат НСтр("ru='Развернутое сальдо на начало периода по дебету счета ';uk='Розгорнуте сальдо на початок періоду по дебету рахунку '") + СокрЛП(Сред(НаименованиеСлагаемого, 6));
		
	ИначеЕсли Найти(НаименованиеСлагаемого, "!СНКР") = 1 Тогда
		Возврат НСтр("ru='Развернутое сальдо на начало периода по кредиту счета ';uk='Розгорнуте сальдо на початок періоду по кредиту рахунку '") + СокрЛП(Сред(НаименованиеСлагаемого, 6));
		
	ИначеЕсли Найти(НаименованиеСлагаемого, "!СНД") = 1 Тогда
		Возврат НСтр("ru='Сальдо на начало периода по дебету счета ';uk='Сальдо на початок періоду по дебету рахунку '") + СокрЛП(Сред(НаименованиеСлагаемого, 5));
		
	ИначеЕсли Найти(НаименованиеСлагаемого, "!СНК") = 1 Тогда
		Возврат НСтр("ru='Сальдо на начало периода по кредиту счета ';uk='Сальдо на початок періоду по кредиту рахунку '") + СокрЛП(Сред(НаименованиеСлагаемого, 5));
		
	ИначеЕсли Найти(НаименованиеСлагаемого, "!СКД") = 1 Тогда
		Возврат НСтр("ru='Сальдо на конец периода по дебету счета ';uk='Сальдо на кінець періоду по дебету рахунку '") + СокрЛП(Сред(НаименованиеСлагаемого, 5));
		
	ИначеЕсли Найти(НаименованиеСлагаемого, "!СКК") = 1 Тогда
		Возврат НСтр("ru='Сальдо на конец периода по кредиту счета ';uk='Сальдо на кінець періоду по кредиту рахунку '") + СокрЛП(Сред(НаименованиеСлагаемого, 5));
		
	ИначеЕсли Найти(НаименованиеСлагаемого, "!ДО") = 1 Тогда
		Возврат НСтр("ru='Оборот по дебету счета ';uk='Оборот по дебету рахунку '") + СокрЛП(Сред(НаименованиеСлагаемого, 4));
		
	ИначеЕсли Найти(НаименованиеСлагаемого, "!АС") = 1 Тогда
		Возврат НСтр("ru='Обороты субконто ';uk='Обороти субконто '") + СокрЛП(Сред(НаименованиеСлагаемого, 4));
		
	ИначеЕсли Найти(НаименованиеСлагаемого, "!КО") = 1 Тогда
		Возврат НСтр("ru='Оборот по кредиту счета ';uk='Оборот по кредиту рахунку '") + СокрЛП(Сред(НаименованиеСлагаемого, 4));
		
	ИначеЕсли Найти(НаименованиеСлагаемого, "!ОБ") = 1 Тогда
		КодыСчетов = СокрЛП(Сред(НаименованиеСлагаемого, 4));
		ПозицияПробела = Найти(КодыСчетов, " ");
		КодСчетаДт = СокрЛП(Лев(КодыСчетов, ПозицияПробела));
		КодСчетаКт = СокрЛП(Сред(КодыСчетов, ПозицияПробела + 1));
		
		Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Оборот с дебета счета %1  в кредит счета %2';uk='Оборот з дебету рахунку %1 у кредит рахунку %2'"), КодСчетаДт, КодСчетаКт);
		
	Иначе
		Возврат(НаименованиеСлагаемого);
	КонецЕсли;
	
КонецФункции // ПолучитьПолноеНаименованиеСлагаемого()

Функция ПолучитьНаименованиеДополнительныхПараметров(ДополнительныеПараметры)
	
	НаименованиеДополнительныхПараметров = "";
	
	Если ДополнительныеПараметры <> Неопределено И ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда
		
		Если ДополнительныеПараметры.Свойство("Субконто1") Тогда
			Субконто = ДополнительныеПараметры.Субконто1;
			
			НаименованиеСубконто = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Субконто.ВидСубконто, "Наименование");
			ЗначениеСубконто     = Субконто.ЗначениеСубконто;
			
			Если ЗначениеСубконто <> Неопределено Тогда
				Если ТипЗнч(ЗначениеСубконто) = Тип("СписокЗначений") Тогда
					НаименованиеДополнительныхПараметров = НаименованиеДополнительныхПараметров + "." + Символы.ПС + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Субконто %1 принимает %2:';uk='Субконто %1 приймає %2:'"), НаименованиеСубконто, ?(ЗначениеСубконто.Количество()=1,НСтр("ru='значение';uk= 'значення'"), НСтр("ru='одно из следующих значений';uk='одне з таких значень'"))) + Символы.ПС;
					Для Каждого Эл Из ЗначениеСубконто Цикл
						НаименованиеДополнительныхПараметров = НаименованиеДополнительныхПараметров + Эл.Значение + ", ";
					КонецЦикла;
					НаименованиеДополнительныхПараметров = Лев(НаименованиеДополнительныхПараметров, СтрДлина(НаименованиеДополнительныхПараметров) - 2) + "; ";
				Иначе
					НаименованиеДополнительныхПараметров = НаименованиеДополнительныхПараметров + "." + Символы.ПС + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Субконто %1 принимает значение %2;';uk='Субконто %1 приймає значення %2;'"), НаименованиеСубконто, ЗначениеСубконто);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат НаименованиеДополнительныхПараметров;
	
КонецФункции

&НаКлиенте
Процедура ПолеРасшифровкиОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(Расшифровка) = Тип("Структура") И Расшифровка.Свойство("ИмяОтчета") Тогда
		
		ИмяФормыОтчета = Расшифровка.ИмяОтчета;
		
		ПараметрыФормы = Новый Структура;
		
		Если Расшифровка.Свойство("ПараметрыФормы") Тогда
			Для Каждого ЭлементНастройки Из Расшифровка.ПараметрыФормы Цикл
				ПараметрыФормы.Вставить(ЭлементНастройки.Ключ, ЭлементНастройки.Значение);
			КонецЦикла;
		КонецЕсли;
		
		НесколькоСчетов = Ложь;
		Если Расшифровка.Свойство("ПользовательскиеНастройки") Тогда
			ПараметрыФормы.Вставить("ПользовательскиеНастройки", Расшифровка.ПользовательскиеНастройки);
			
			Если Расшифровка.ПользовательскиеНастройки.ДополнительныеСвойства.Свойство("Счет") Тогда
				Счет = Расшифровка.ПользовательскиеНастройки.ДополнительныеСвойства.Счет;
				Если ТипЗнч(Счет) = Тип("СписокЗначений") Тогда
					НесколькоСчетов = Истина;
				КонецЕсли; 
			
			КонецЕсли;

		КонецЕсли;
		Если НесколькоСчетов Тогда
			Для каждого ЭлементСписка Из Счет Цикл
				ПараметрыФормы.ПользовательскиеНастройки.ДополнительныеСвойства.Счет = ЭлементСписка.Значение;
				ОткрытьФорму(ИмяФормыОтчета, ПараметрыФормы, , Истина);
			КонецЦикла; 
		Иначе
		
			ОткрытьФорму(ИмяФормыОтчета, ПараметрыФормы, , Истина);
			
		КонецЕсли; 
		
		
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если НЕ ТолстыйКлиентОбычноеПриложение Тогда
	 
	Если ОткрыватьРасшифровкуСтрокиДляЗвит1С Тогда
	
		Расшифровка = ПолеРасшифровки.область(НомерСтрокиРасшифровкиЗвит1С, 2, НомерСтрокиРасшифровкиЗвит1С, 2).Расшифровка;
		
		ПолеРасшифровкиОбработкаРасшифровки(Элементы.ПолеРасшифровки, Расшифровка, Истина);
		
		Отказ = Истина;
		
		глКомпонентаЗвит1С.Bring1CToFront();

	ИначеЕсли ПередаватьДанныеВСистемуЗвит1С Тогда
		
		Для каждого СтрокаРасшифровки Из ТаблицаРасшифровкиЗвит1С Цикл
			
			Если СтрокаРасшифровки.ИмяФункции = "DetailsAddHeader" Тогда
				
				глКомпонентаЗвит1С.DetailsAddHeader(СтрокаРасшифровки.Параметр1);
				
			ИначеЕсли СтрокаРасшифровки.ИмяФункции = "DetailsAddFooter" Тогда
				
				глКомпонентаЗвит1С.DetailsAddFooter(СтрокаРасшифровки.Параметр1, СтрокаРасшифровки.Параметр2);
				
			ИначеЕсли СтрокаРасшифровки.ИмяФункции = "DetailsAddRow" Тогда
				
				глКомпонентаЗвит1С.DetailsAddRow(Число(СтрокаРасшифровки.Параметр1), СтрокаРасшифровки.Параметр2, СтрокаРасшифровки.Параметр3);
				
			КонецЕсли;
			
		КонецЦикла;
		
		глКомпонентаЗвит1С.SaveDetails();
		Отказ = Истина;
		
	КонецЕсли;
#КонецЕсли
КонецПроцедуры
