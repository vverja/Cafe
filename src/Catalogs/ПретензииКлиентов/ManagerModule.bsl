#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	Если ПравоДоступа("Добавление", Метаданные.Справочники.ПретензииКлиентов) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Справочники.ПретензииКлиентов.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Справочники.ПретензииКлиентов);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ФиксироватьПретензииКлиентов";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

//Используеся в механизме взаимодействий. Возвращает клиента и участников сделки
//
// Параметры
//  Ссылка  - СправочникСсылка.ПретензииКлиентов - претензия по которой получаются контакты
//
// Возвращаемое значение:
//   Массив   - массив, содержащий контакты
//
Функция ПолучитьКонтакты(Ссылка) Экспорт

	Возврат СделкиСервер.ПолучитьУчастниковПоТабличнойЧастиПредметаВзаимодействия(
		Ссылка, ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка,"Партнер"));

КонецФункции

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияУТКлиентСервер.АвторизованВнешнийПользователь() Тогда
		СтандартнаяОбработка = Ложь;
		Если ВидФормы = "ФормаОбъекта" Тогда
			ВыбраннаяФорма = "ФормаЭлементаСамообслуживание";
		ИначеЕсли ВидФормы = "ФормаСписка" Тогда
			ВыбраннаяФорма = "ФормаСпискаСамообслуживание";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Претензия клиента
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ПретензияКлиента";
	КомандаПечати.Представление = НСтр("ru='Претензия клиента';uk='Претензія клієнта'");
	
КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПретензияКлиента") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
		                                                     "ПретензияКлиента",
		                                                     НСтр("ru='Претензия клиента';uk='Претензія клієнта'"),
		                                                     СформироватьПечатнуюФорму(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПечатнуюФорму(ПретензияКлиента, ОбъектыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПретензииКлиентов.Ссылка,
	|	ПретензииКлиентов.Наименование,
	|	ВЫБОР
	|		КОГДА ПретензииКлиентов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПретензийКлиентов.Зарегистрирована)
	|				ИЛИ ПретензииКлиентов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПретензийКлиентов.Обрабатывается)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(ПретензииКлиентов.Статус)
	|		ИНАЧЕ &Рассмотрена
	|	КОНЕЦ КАК ПредставлениеСтатус,
	|	ПретензииКлиентов.Статус,
	|	ПретензииКлиентов.ОписаниеПретензии,
	|	ПретензииКлиентов.РезультатыОтработки,
	|	ПретензииКлиентов.ДатаРегистрации,
	|	ПретензииКлиентов.ДатаОкончания,
	|	ПретензииКлиентов.Ответственный
	|ИЗ
	|	Справочник.ПретензииКлиентов КАК ПретензииКлиентов
	|ГДЕ
	|	ПретензииКлиентов.Ссылка = &ПретензияКлиента";
	
	Если ТипЗнч(ПретензияКлиента) = Тип("Массив") Тогда
		Запрос.УстановитьПараметр("ПретензияКлиента", ПретензияКлиента[ПретензияКлиента.Количество() - 1]);
	Иначе
		Запрос.УстановитьПараметр("ПретензияКлиента", ПретензияКлиента);
	КонецЕсли;
	Запрос.УстановитьПараметр("Рассмотрена", НСтр("ru='Рассмотрена';uk='Розглянута'"));
	
	ЗаполнитьТабличныйДокументПретензияКлиента(ТабличныйДокумент, Запрос, ОбъектыПечати);
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументПретензияКлиента(ТабличныйДокумент, Запрос, ОбъектыПечати) Экспорт
	
	ДанныеПечати = Запрос.Выполнить().Выбрать();
	ДанныеПечати.Следующий();
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Справочник.ПретензииКлиентов.ПФ_MXL_ПретензияКлиента");

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");

	ОбластьЗаголовок.Параметры.ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ДанныеПечати.Наименование + " %1 " + Формат(ДанныеПечати.ДатаРегистрации,"ДЛФ=DD"),НСтр("ru='от';uk='від'"));
	
	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьЗаголовок, ДанныеПечати.Ссылка);
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	Если ДанныеПечати.Статус = Перечисления.СтатусыПретензийКлиентов.Удовлетворена 
		ИЛИ ДанныеПечати.Статус = Перечисления.СтатусыПретензийКлиентов.НеУдовлетворена Тогда
	
		ОбластьРассмотрение = Макет.ПолучитьОбласть("Рассмотрение");
		ЗаполнитьЗначенияСвойств(ОбластьРассмотрение.Параметры, ДанныеПечати);
		ТабличныйДокумент.Вывести(ОбластьРассмотрение);
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
