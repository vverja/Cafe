////////////////////////////////////////////////////////////////////////////////
// В модуле собраны процедуры и функции, которые вызываются из форм обработки
// "РабочееМестоРаботникаСклада".
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

Процедура ПриЗакрытии(Форма) Экспорт
	
	// МеханизмВнешнегоОборудования
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
	
	МенеджерОборудованияКлиент.ОтключитьОборудованиеПоТипу(Форма.УникальныйИдентификатор, ПоддерживаемыеТипыВО);
	// Конец МеханизмВнешнегоОборудования
	
	Если Не Форма.ЭтоПолноправныйПользователь Тогда
		ЗавершитьРаботуСистемы(Ложь);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВводКоличестваКоличествоПриИзменении(Форма) Экспорт
	
	ТекущаяСтрокаСканирования = Форма.ТекущаяСтрокаСканирования;
	
	Если Не (ТекущаяСтрокаСканирования.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.МногооборотнаяТара"))
		И (ТекущаяСтрокаСканирования.ВесУпаковки <> 0) Тогда
		
		Форма.ВводКоличестваВес = Форма.ВводКоличестваКоличество * ТекущаяСтрокаСканирования.ВесУпаковки
			/ ТекущаяСтрокаСканирования.КоэффициентЕдиницыИзмеренияВеса;
		
	КонецЕсли;
	
	Если Не (ТекущаяСтрокаСканирования.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.МногооборотнаяТара"))
		И (ТекущаяСтрокаСканирования.ОбъемУпаковки <> 0) Тогда
		
		Форма.ВводКоличестваОбъем = Форма.ВводКоличестваКоличество * ТекущаяСтрокаСканирования.ОбъемУпаковки
			/ ТекущаяСтрокаСканирования.КоэффициентЕдиницыИзмеренияОбъема;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВводКоличестваВесПриИзменении(Форма) Экспорт
	
	ТекущаяСтрокаСканирования = Форма.ТекущаяСтрокаСканирования;
	
	Форма.ВводКоличестваКоличество = Форма.ВводКоличестваВес * ТекущаяСтрокаСканирования.КоэффициентЕдиницыИзмеренияВеса
		/ ТекущаяСтрокаСканирования.ВесУпаковки;
	
	Если Не (ТекущаяСтрокаСканирования.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.МногооборотнаяТара"))
		И (ТекущаяСтрокаСканирования.ОбъемУпаковки <> 0) Тогда
		
		Форма.ВводКоличестваОбъем = Форма.ВводКоличестваКоличество * ТекущаяСтрокаСканирования.ОбъемУпаковки
			/ ТекущаяСтрокаСканирования.КоэффициентЕдиницыИзмеренияОбъема;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВводКоличестваОбъемПриИзменении(Форма) Экспорт
	
	ТекущаяСтрокаСканирования = Форма.ТекущаяСтрокаСканирования;
	
	Форма.ВводКоличестваКоличество = Форма.ВводКоличестваОбъем
		* ТекущаяСтрокаСканирования.КоэффициентЕдиницыИзмеренияОбъема / ТекущаяСтрокаСканирования.ОбъемУпаковки;
	
	Если Не (ТекущаяСтрокаСканирования.ТипНоменклатуры = ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.МногооборотнаяТара"))
		И (ТекущаяСтрокаСканирования.ВесУпаковки <> 0) Тогда
		
		Форма.ВводКоличестваВес = Форма.ВводКоличестваКоличество * ТекущаяСтрокаСканирования.ВесУпаковки
			/ ТекущаяСтрокаСканирования.КоэффициентЕдиницыИзмеренияВеса;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВводКоличестваОК(Форма) Экспорт
	
	ТекущееСообщениеПользователю = "";
	
	Если Форма.ТекущаяСтрокаСканирования.КоличествоУпаковокОтсканировано = Форма.ВводКоличестваКоличество Тогда
		Если Форма.ТекущаяСтрокаСканирования.НовоеНазначение = Форма.ТекущаяСтрокаСканирования.Назначение Тогда
			Форма.ВводКоличестваОтменен = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Форма.ПодключитьОбработчикОжидания("Подключаемый_ВводКоличестваОКОбработчикОжидания", 0.5, Истина);
	Форма.ПодключитьОбработчикОжидания("Подключаемый_ВывестиСостояниеВыполненияЗаданияОбработчикОжидания", 5, Истина);
	
КонецПроцедуры

Процедура СканированиеЯчейка(Форма) Экспорт
	
	ТекстСообщенияПользователю = "";
	
КонецПроцедуры

Процедура ЗакрытьФормуМобильногоРабочегоМеста(Форма) Экспорт
	
	Форма.ПараметрыРежима.МожноЗакрытьФорму = Истина;
	Форма.Закрыть();
	
КонецПроцедуры

Процедура ВыборЗначенияОК(Форма) Экспорт
	
	ТекущееСообщениеПользователю = "";
	
КонецПроцедуры

Процедура ШтрихкодПараметраСканированияПриИзменении(Форма) Экспорт
	
	Форма.СрокГодностиСерии = "";
	
	Если Не Форма.Элементы.СрокГодностиСерии.Видимость Тогда
		Форма.ПодключитьОбработчикОжидания("Подключаемый_ВыборЗначенияОКОбработчикОжидания", 0.5, Истина);
		Форма.ПодключитьОбработчикОжидания("Подключаемый_ВывестиСостояниеВыполненияЗаданияОбработчикОжидания", 5, Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура АдресЯчейкиПриИзменении(Форма) Экспорт
	
	Форма.ПодключитьОбработчикОжидания("Подключаемый_ВыборАдресаОКОбработчикОжидания", 0.5, Истина);
	
КонецПроцедуры

Процедура СрокГодностиСерииПриИзменении(Форма) Экспорт
	
	Форма.ПодключитьОбработчикОжидания("Подключаемый_ВыборЗначенияОКОбработчикОжидания", 0.5, Истина);
	Форма.ПодключитьОбработчикОжидания("Подключаемый_ВывестиСостояниеВыполненияЗаданияОбработчикОжидания", 5, Истина);
	
КонецПроцедуры

Процедура ЗаданияОбновить(Форма) Экспорт
	
	Форма.Элементы.Задания.Обновить();
	
КонецПроцедуры

Функция НужноОбновитьСписокЗаданий(Форма) Экспорт
	
	Возврат Форма.Элементы.СтраницыФормы.ТекущаяСтраница = Форма.Элементы.СтраницаВыборОперации
		Или Форма.Элементы.СтраницыФормы.ТекущаяСтраница = Форма.Элементы.СтраницаВыборЗадания;
	
КонецФункции

Функция НужноОбновитьСостояниеВыполненияЗадания(Форма) Экспорт
	
	Возврат Форма.Элементы.СтраницыФормы.ТекущаяСтраница = Форма.Элементы.СтраницаСканирование;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
