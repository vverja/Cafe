#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция СхемаПолученияДанных(ХозяйственнаяОперация) Экспорт

	СхемаПолученияДанных = Неопределено;
	ИмяИсточникаДанных = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ХозяйственнаяОперация, "ИсточникДанных");
	МакетыИсточниковПолученияДанных = Метаданные.Справочники.НастройкиХозяйственныхОпераций.Макеты;
	МакетИсточникаПолученияДанных = МакетыИсточниковПолученияДанных.Найти(ИмяИсточникаДанных);
	Если МакетИсточникаПолученияДанных <> Неопределено Тогда
		ИмяСхемы = МакетИсточникаПолученияДанных.Имя; 
		СхемаПолученияДанных = Справочники.НастройкиХозяйственныхОпераций.ПолучитьМакет(ИмяСхемы);
	КонецЕсли;
	
	Возврат СхемаПолученияДанных;

КонецФункции

Функция ХозяйственныеОперацииАналитическихРегистров(ИмяРегистра) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	НастройкиХозяйственныхОпераций.ХозяйственнаяОперация
	|ИЗ
	|	Справочник.НастройкиХозяйственныхОпераций КАК НастройкиХозяйственныхОпераций
	|ГДЕ
	|	НастройкиХозяйственныхОпераций.ИсточникДанных = &ИмяРегистра";
	Запрос.УстановитьПараметр("ИмяРегистра", ИмяРегистра);
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("ХозяйственнаяОперация");
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

// Обработчик первого запуска.
// Заполняет предопределенные элементы справочника "НастройкиХозяйственныхОпераций".
//
Процедура ЗаполнитьПредопределенныеНастройкиХозяйственныхОпераций() Экспорт

	РеквизитыXML = Справочники.НастройкиХозяйственныхОпераций.ПолучитьМакет("НастройкиПредопределенныхЭлементов").ПолучитьТекст();
	РеквизитыТаблица = ОбщегоНазначения.ПрочитатьXMLВТаблицу(РеквизитыXML).Данные;
	
	СвязанныеДокументыXML = Справочники.НастройкиХозяйственныхОпераций.ПолучитьМакет("СвязанныеДокументы").ПолучитьТекст();
	СвязанныеДокументыТаблица = ОбщегоНазначения.ПрочитатьXMLВТаблицу(СвязанныеДокументыXML).Данные;
	
	Для каждого СтрокаТаблРеквизитов Из РеквизитыТаблица Цикл
		ID = СтрокаТаблРеквизитов.ID;
		Объект = Справочники.НастройкиХозяйственныхОпераций[ID].ПолучитьОбъект();
		ЗаполнитьЗначенияСвойств(Объект, СтрокаТаблРеквизитов);
		
		ИспользоватьВБюджетировании = СтрокаТаблРеквизитов.ИспользоватьВБюджетировании;
		Если ЗначениеЗаполнено(ИспользоватьВБюджетировании) И (ИспользоватьВБюджетировании = "Да") Тогда
			Объект.ИспользоватьВБюджетировании = Истина;
		КонецЕсли;
		ИспользоватьВМеждународномУчете = СтрокаТаблРеквизитов.ИспользоватьВМеждународномУчете;
		Если ЗначениеЗаполнено(ИспользоватьВМеждународномУчете) И (ИспользоватьВМеждународномУчете = "Да") Тогда
			Объект.ИспользоватьВМеждународномУчете = Истина;
		КонецЕсли;
		ИспользоватьДляВыбора = СтрокаТаблРеквизитов.ИспользоватьДляВыбора;
		Если ЗначениеЗаполнено(ИспользоватьДляВыбора) И (ИспользоватьДляВыбора = "Да") Тогда
			Объект.ИспользоватьДляВыбора = Истина;
		КонецЕсли;
		
		Приход = СтрокаТаблРеквизитов.Приход;
		Если ЗначениеЗаполнено(Приход) Тогда
			Объект.Приход = Перечисления.ТипыДанныхУчета[Приход];
		КонецЕсли;
		
		Расход = СтрокаТаблРеквизитов.Расход;
		Если ЗначениеЗаполнено(Расход) Тогда
			Объект.Расход = Перечисления.ТипыДанныхУчета[Расход];
		КонецЕсли;
		
		Хозоперация = СтрокаТаблРеквизитов.ID;
		Если ЗначениеЗаполнено(Хозоперация) Тогда
			Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации[Хозоперация];
		КонецЕсли;
		
		Объект.Документы.Очистить();
		НайденныеСтроки = СвязанныеДокументыТаблица.НайтиСтроки(Новый Структура("OwnerID", ID));
		Для каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			ЗаполнитьЗначенияСвойств(Объект.Документы.Добавить(), НайденнаяСтрока);
		КонецЦикла;
		
		Объект.Документы.Сортировать("ПредставлениеДокумента");
		
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(Объект);
	КонецЦикла;

КонецПроцедуры


//Очищает из базы элементы справочника, которые ранее были предопределенными, но теперь не используются
Процедура ОчиститьНеИспользуемыеЭлементыСправочника() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиХозяйственныхОпераций.Ссылка КАК ХозОперация
	|ИЗ
	|	Справочник.НастройкиХозяйственныхОпераций КАК НастройкиХозяйственныхОпераций
	|ГДЕ
	|	НЕ НастройкиХозяйственныхОпераций.Предопределенный
	|	И НастройкиХозяйственныхОпераций.ПометкаУдаления";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;	
	КонецЕсли; 
	
	ВыборкаХозОперацийКУдалению = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаХозОперацийКУдалению.Следующий() Цикл
		
		Попытка
			ХозОперация = ВыборкаХозОперацийКУдалению.ХозОперация.ПолучитьОбъект();
			ХозОперация.Удалить();
		Исключение
		    ТекстСообщения = НСтр("ru='Не удалось удалить неиспользуемые хоз. операции!';uk='Не вдалося видалити невикористовувані госп. операції!'");
			ЗаписьЖурналаРегистрации(ТекстСообщения, УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецПопытки; 	
			
	КонецЦикла;
	 		
КонецПроцедуры

Процедура ОбновитьНаименованияХозяйственныхОпераций() Экспорт
	
	Обработки.НачальноеЗаполнениеИОбновлениеОбъектов.ЗаполнитьОбъект("Справочник", "НастройкиХозяйственныхОпераций");
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли