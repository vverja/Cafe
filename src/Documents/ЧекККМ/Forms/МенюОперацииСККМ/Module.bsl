#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗакрыватьФормуПослеЗавершенияОперации = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("Документы.ЧекККМ.Форма.МенюОперацийСККМ", "ЗакрыватьФормуПослеЗавершенияОперации", Ложь);
	
	КассаККМ = Параметры.КассаККМ;
	Кассир   = Параметры.Кассир;
	
	СтруктураСостояниеКассовойСмены = РозничныеПродажиВызовСервера.СостояниеКассовойСмены(КассаККМ);
	ПараметрыКассыККМ = Новый ФиксированнаяСтруктура(Справочники.КассыККМ.ПараметрыКассыККМ(КассаККМ));
	
	НастроитьРМК();
	
	ОбновитьЗаголовкиФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если СохранятьНастройкиПриЗакрытии Тогда
		СохранитьНастройки();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ЗакрыватьФормуПослеЗавершенияОперацииПриИзменении(Элемент)
	СохранятьНастройкиПриЗакрытии = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьКассуККМ(Команда)
	
	Отбор = Новый Структура("Ссылка", ДоступныеКассыККМ);
	ПараметрыОткрытия = Новый Структура("Отбор", Отбор);
	
	ОткрытьФорму("Справочник.КассыККМ.ФормаВыбора", ПараметрыОткрытия,,,,,
		Новый ОписаниеОповещения("ИзменитьКассуККМЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьКассовуюСмену(Команда)
	
	ОчиститьСообщения();
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗакрытьКассовуюСменуЗавершение", ЭтотОбъект);
	РозничныеПродажиКлиент.ЗакрытьКассовуюСмену(ПараметрыКассыККМ, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКассовуюСмену(Команда)
	
	ОчиститьСообщения();
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОткрытьКассовуюСменуЗавершение", ЭтотОбъект);
	РозничныеПродажиКлиент.ОткрытьКассовуюСмену(ПараметрыКассыККМ, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВнесениеДенежныхСредств(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("КассаККМ", КассаККМ);
	
	ОткрытьФорму(
		"Документ.ВнесениеДенежныхСредствВКассуККМ.Форма.ФормаВыбораРасходногоКассовогоОрдера",
		ПараметрыОткрытия,,,,,
		Новый ОписаниеОповещения("ВнесениеДенегЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыемкаДенежныхСредств(Команда)
	
	ИзымаемаяСумма = 0;
	
	ОткрытьФорму(
		"Документ.ВыемкаДенежныхСредствИзКассыККМ.Форма.ВводСуммы",
		Новый Структура("Валюта", СтруктураСостояниеКассовойСмены.Валюта),,,,,
		Новый ОписаниеОповещения("ВыемкаДенегЗавершение", ЭтотОбъект),
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДенежныйЯщик(Команда)
	
	ИдентификаторУстройстваФР = ПараметрыКассыККМ.ИдентификаторУстройства;
	
	МенеджерОборудованияКлиент.НачатьОткрытиеДенежногоЯщика(
		Новый ОписаниеОповещения("ЗавершитьВыбораКассыПриОткрытииДенежногоЯщикаЗавершение", ЭтотОбъект),
		ЭтотОбъект,
		ИдентификаторУстройстваФР,
		Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПробитьНулевойЧек(Команда)
	
	ОчиститьСообщения();
	
	ОписаниеОповещенияЗавершение = Новый ОписаниеОповещения("ОткрытьКассовуюСменуЗавершение", ЭтотОбъект);
	
	ИдентификаторУстройства                = ПараметрыКассыККМ.ИдентификаторУстройства;
	ИспользоватьБезПодключенияОборудования = ПараметрыКассыККМ.ИспользоватьБезПодключенияОборудования;
	
	ОборудованиеПодключено = МенеджерОборудованияКлиентПереопределяемый.ОборудованиеПодключено(ИдентификаторУстройства);
	
	Если ОборудованиеПодключено ИЛИ ИспользоватьБезПодключенияОборудования Тогда
		
		ОписаниеОшибки = "";
		
		Результат = Ложь;
		
		Если Не ИспользоватьБезПодключенияОборудования Тогда
			
			ВходныеПараметры  = Неопределено;
			ВыходныеПараметры = Неопределено;
			
			//Напечатать нулевой чек на фискальном регистраторе
			Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
			                                                        "PrintNullReceipt",
			                                                        ВходныеПараметры,
			                                                        ВыходныеПараметры);
			
		КонецЕсли;
		
		Если Не Результат И Не ИспользоватьБезПодключенияОборудования Тогда
			
			ТекстСообщения = НСтр("ru='При печати чека произошла ошибка.
                                  |Чек не напечатан на фискальном регистраторе.
                                  |Дополнительное описание:
                                  |%ДополнительноеОписание%'
                                  |;uk='При друку чека виникла помилка.
                                  |Чек не надрукований на фіскальному реєстраторі.
                                  |Додатковий опис:
                                  |%ДополнительноеОписание%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения,
			                             "%ДополнительноеОписание%",
			                             ВыходныеПараметры[1]);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
		КонецЕсли;
		
		ВыполнитьОбработкуОповещения(ОписаниеОповещенияЗавершение, Истина);
			
	Иначе
		
		ТекстСообщения = НСтр("ru='При подключении устройства произошла ошибка.
                                    |Чек не напечатан на фискальном регистраторе.
                                    |Дополнительное описание:
                                    |%ДополнительноеОписание%'
                                    |;uk='При підключенні пристрою сталася помилка.
                                    |Чек не надрукований на фіскальному реєстраторі.
                                    |Додатковий опис:
                                    |%ДополнительноеОписание%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		ВыполнитьОбработкуОповещения(ОписаниеОповещенияЗавершение, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВнесениеДенегЗавершение(СтруктураВыбранныеДанные, ДополнительныеПараметры) Экспорт
	
	Если СтруктураВыбранныеДанные <> Неопределено Тогда
		
		ОписаниеОшибки = "";
		
		ИдентификаторУстройства                = ПараметрыКассыККМ.ИдентификаторУстройства;
		ИспользоватьБезПодключенияОборудования = ПараметрыКассыККМ.ИспользоватьБезПодключенияОборудования;
		
		Результат = МенеджерОборудованияКлиентПереопределяемый.ОборудованиеПодключено(ИдентификаторУстройства);
		
		Если Результат Или ИспользоватьБезПодключенияОборудования Тогда
			
			Если Не ИспользоватьБезПодключенияОборудования Тогда
				
				//Готовим данные
				ВходныеПараметры  = Новый Массив();
				ВыходныеПараметры = Неопределено;
				
				ВходныеПараметры.Добавить(1);
				ВходныеПараметры.Добавить(СтруктураВыбранныеДанные.СуммаВнесения);
				
				// Печатаем чек.
				Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
					"Encash",
					ВходныеПараметры,
					ВыходныеПараметры);
				
			КонецЕсли;
			
			Если Результат Или ИспользоватьБезПодключенияОборудования Тогда
				
				// Итоговое действие.
				СтруктураВыбранныеДанные.Вставить("Дата", ТекущаяДата());
				
				Результат = СоздатьДокументВнесениеДенежныхСредствВКассуККМ(СтруктураВыбранныеДанные, ОписаниеОшибки);
				Если Не Результат Тогда
					
					ТекстСообщения = НСтр("ru='При внесении денежных средств в кассу ККМ произошла ошибка.
                                                |Дополнительное описание:
                                                |%ДополнительноеОписание%'
                                                |;uk='При внесенні грошових коштів у касу ККМ сталася помилка.
                                                |Додатковий опис:
                                                |%ДополнительноеОписание%'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ОписаниеОшибки);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					
				КонецЕсли;
				
				ОбновитьЗаголовкиФормы(ЭтотОбъект);
				
				Если ЗакрыватьФормуПослеЗавершенияОперации Тогда
					Закрыть();
				КонецЕсли;
				
			Иначе
				
				ТекстСообщения = НСтр("ru='При печати чека произошла ошибка.
                                            |Чек не напечатан на фискальном регистраторе.
                                            |Дополнительное описание:
                                            |%ДополнительноеОписание%'
                                            |;uk='При друку чека виникла помилка.
                                            |Чек не надрукований на фіскальному реєстраторі.
                                            |Додатковий опис:
                                            |%ДополнительноеОписание%'");
				ТекстСообщения = СтрЗаменить(
					ТекстСообщения,
					"%ДополнительноеОписание%",
					ВыходныеПараметры[1]);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				
			КонецЕсли;
			
		Иначе
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru='Фискальный регистратор не подключен. Чек не напечатан на фискальном регистраторе.';uk='Фіскальний реєстратор не підключений. Чек не надрукований на фіскальному реєстраторі.'"));
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыемкаДенегЗавершение(ВозвращенноеЗначение, ДополнительныеПараметры) Экспорт
	
	Если ВозвращенноеЗначение <> Неопределено И ТипЗнч(ВозвращенноеЗначение) = Тип("Число") Тогда
		
		ИзымаемаяСумма = ВозвращенноеЗначение;
		
		ОписаниеОшибки = "";
		
		ИдентификаторУстройства                = ПараметрыКассыККМ.ИдентификаторУстройства;
		ИспользоватьБезПодключенияОборудования = ПараметрыКассыККМ.ИспользоватьБезПодключенияОборудования;
		
		Результат = МенеджерОборудованияКлиентПереопределяемый.ОборудованиеПодключено(ИдентификаторУстройства);
		
		Если Результат Или ИспользоватьБезПодключенияОборудования Тогда
			
			Если Не ИспользоватьБезПодключенияОборудования Тогда
				
				//Готовим данные
				ВходныеПараметры  = Новый Массив();
				ВыходныеПараметры = Неопределено;
				
				ВходныеПараметры.Добавить(0);
				ВходныеПараметры.Добавить(ИзымаемаяСумма);
				
				// Печатаем чек.
				Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(ИдентификаторУстройства,
					"Encash",
					ВходныеПараметры,
					ВыходныеПараметры);
				
			КонецЕсли;
			
			Если Результат Или ИспользоватьБезПодключенияОборудования Тогда
				
				// Итоговое действие.
				Результат = СоздатьДокументВыемкаДенежныхСредствИзКассыККМ(Новый Структура("КассаККМ, СуммаВнесения, Дата", КассаККМ, ИзымаемаяСумма, ТекущаяДата()), ОписаниеОшибки);
				Если Не Результат Тогда
					
					ТекстСообщения = НСтр("ru='При выемке денежных средств из кассы ККМ произошла ошибка.
                                                |Дополнительное описание:
                                                |%ДополнительноеОписание%'
                                                |;uk='При вийманні грошових коштів з каси ККМ сталася помилка.
                                                |Додатковий опис:
                                                |%ДополнительноеОписание%'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ДополнительноеОписание%", ОписаниеОшибки);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					
				КонецЕсли;
				
				ОбновитьЗаголовкиФормы(ЭтотОбъект);
				
				Если ЗакрыватьФормуПослеЗавершенияОперации Тогда
					Закрыть();
				КонецЕсли;
				
			Иначе
				
				ТекстСообщения = НСтр("ru='При печати чека произошла ошибка.
                                            |Чек не напечатан на фискальном регистраторе.
                                            |Дополнительное описание:
                                            |%ДополнительноеОписание%'
                                            |;uk='При друку чека виникла помилка.
                                            |Чек не надрукований на фіскальному реєстраторі.
                                            |Додатковий опис:
                                            |%ДополнительноеОписание%'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения,
					"%ДополнительноеОписание%",
					ВыходныеПараметры[1]);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				
			КонецЕсли;
			
		Иначе
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru='Фискальный регистратор не подключен. Чек не напечатан на фискальном регистраторе.';uk='Фіскальний реєстратор не підключений. Чек не надрукований на фіскальному реєстраторі.'"));
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СоздатьДокументВнесениеДенежныхСредствВКассуККМ(СтруктураВыбранныеДанные, ОписаниеОшибки)
	
	Возврат РозничныеПродажи.СоздатьДокументВнесениеДенежныхСредствВКассуККМ(СтруктураВыбранныеДанные, ОписаниеОшибки);
	
КонецФункции

&НаСервереБезКонтекста
Функция СоздатьДокументВыемкаДенежныхСредствИзКассыККМ(ВходныеДанные, ОписаниеОшибки)
	
	Возврат РозничныеПродажи.СоздатьДокументВыемкаДенежныхСредствИзКассыККМ(ВходныеДанные, ОписаниеОшибки);
	
КонецФункции

&НаКлиенте
Процедура ОткрытьКассовуюСменуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ОбновитьЗаголовкиФормы(ЭтотОбъект);
	
	Если ЗакрыватьФормуПослеЗавершенияОперации Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьКассовуюСменуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ОбновитьЗаголовкиФормы(ЭтотОбъект);
	
	Если ЗакрыватьФормуПослеЗавершенияОперации Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПробитьНулевойЧекЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ОбновитьЗаголовкиФормы(ЭтотОбъект);
	
	Если ЗакрыватьФормуПослеЗавершенияОперации Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьЗаголовкиФормы(Форма)
	
	Форма.СтруктураСостояниеКассовойСмены = РозничныеПродажиВызовСервера.СостояниеКассовойСмены(Форма.КассаККМ);
	
	Форма.Элементы.ОткрытьКассовуюСмену.Доступность = Форма.ПраваДоступа.ОткрытьСмену И Не Форма.СтруктураСостояниеКассовойСмены.СменаОткрыта;
	Форма.Элементы.ЗакрытьКассовуюСмену.Доступность = Форма.ПраваДоступа.ЗакрытьСмену И    Форма.СтруктураСостояниеКассовойСмены.СменаОткрыта;
	Форма.Элементы.ПробитьНулевойЧек.Доступность = Форма.СтруктураСостояниеКассовойСмены.СменаОткрыта;

	Форма.Элементы.ВнесениеДенежныхСредств.Доступность = Форма.ПраваДоступа.ВнесениеДенег;
	Форма.Элементы.ВыемкаДенежныхСредств.Доступность   = Форма.ПраваДоступа.ВыемкаДенег;

	Форма.Элементы.ГруппаКассаККМ.Заголовок = Строка(Форма.КассаККМ);
	
	Если ЗначениеЗаполнено(Форма.СтруктураСостояниеКассовойСмены.СтатусКассовойСмены) Тогда
		
		ЗаголовокГруппыОперацииСКассовойСменой = НСтр("ru='Статус смены: %СтатусСмены% %ВремяИзменения%';uk='Статус зміни: %СтатусСмены% %ВремяИзменения%'");
		
		ЗаголовокГруппыОперацииСКассовойСменой = СтрЗаменить(ЗаголовокГруппыОперацииСКассовойСменой, "%СтатусСмены%", Форма.СтруктураСостояниеКассовойСмены.СтатусКассовойСмены);
		ЗаголовокГруппыОперацииСКассовойСменой = СтрЗаменить(ЗаголовокГруппыОперацииСКассовойСменой, "%ВремяИзменения%", Формат(Форма.СтруктураСостояниеКассовойСмены.ДатаИзмененияСтатуса,"ДФ='dd.MM.yy ЧЧ:мм'"));
		
	Иначе
		
		ЗаголовокГруппыОперацииСКассовойСменой = НСтр("ru='Смена не открыта';uk='Зміна не відкрита'");
		
	КонецЕсли;
	Форма.Элементы.ГруппаОперацииСКассовойСменой.Заголовок = ЗаголовокГруппыОперацииСКассовойСменой;
	
	ЗаголовокГруппыДенежныеОперации = НСтр("ru='В кассе %НаличностьВКассе% %Валюта%';uk='В касі %НаличностьВКассе% %Валюта%'");
	
	ЗаголовокГруппыДенежныеОперации = СтрЗаменить(ЗаголовокГруппыДенежныеОперации, "%НаличностьВКассе%", Форма.СтруктураСостояниеКассовойСмены.НаличностьВКассе);
	ЗаголовокГруппыДенежныеОперации = СтрЗаменить(ЗаголовокГруппыДенежныеОперации, "%Валюта%", Форма.СтруктураСостояниеКассовойСмены.ВалютаПредставление);
	Форма.Элементы.ГруппаДенежныеОперации.Заголовок = ЗаголовокГруппыДенежныеОперации;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройки()
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("Документы.ЧекККМ.Форма.МенюОперацийСККМ", "ЗакрыватьФормуПослеЗавершенияОперации", ЗакрыватьФормуПослеЗавершенияОперации);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьРМК()
	
	ПраваДоступа = НастройкиПродажДляПользователейСервер.ПраваДоступаРМК(Кассир);

	РабочееМесто = МенеджерОборудованияВызовСервера.ПолучитьРабочееМестоКлиента();
	
	РозничныеПродажи.ПодписатьГорячиеКлавишиНаКнопках(ЭтотОбъект);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НастройкиРМК.КассыККМ.(
	|		КассаККМ КАК КассаККМ,
	|		КассаККМ.ТипКассы КАК ТипКассы
	|	) КАК ДоступныеКассыККМ
	|ИЗ
	|	Справочник.НастройкиРМК КАК НастройкиРМК
	|ГДЕ
	|	НастройкиРМК.РабочееМесто = &РабочееМесто
	|	И НастройкиРМК.Ссылка В (ВЫБРАТЬ Различные Т.Ссылка Из Справочник.НастройкиРМК.КассыККМ КАК Т Где Т.КассаККМ = &КассаККМ)
	|");
	
	Запрос.УстановитьПараметр("РабочееМесто", РабочееМесто);
	Запрос.УстановитьПараметр("КассаККМ", КассаККМ);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ДоступныеКассыККМ = Новый СписокЗначений;
		ВыборкаДоступныеКассыККМ = Выборка.ДоступныеКассыККМ.Выбрать();
		Пока ВыборкаДоступныеКассыККМ.Следующий() Цикл
			Если ВыборкаДоступныеКассыККМ.ТипКассы = Перечисления.ТипыКассККМ.ФискальныйРегистратор Тогда
				ДоступныеКассыККМ.Добавить(ВыборкаДоступныеКассыККМ.КассаККМ);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Элементы.ИзменитьКассуККМ.Видимость = ДоступныеКассыККМ.Количество() > 1 И Параметры.ИзменитьКассуККМ;
	
	Элементы.ОткрытьДенежныйЯщик.Видимость = Не ПараметрыКассыККМ.ИспользоватьБезПодключенияОборудования;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьКассуККМЗавершение(ВыбраннаяКассаККМ, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(КассаККМ) Тогда
		Возврат;
	КонецЕсли;
	
	КассаККМ = ВыбраннаяКассаККМ;
	
	ОбновитьЗаголовкиФормы(ЭтотОбъект);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ИзменитьКассуККМЗавершение", ВладелецФормы);
	
	ВыполнитьОбработкуОповещения(ОписаниеОповещения, КассаККМ);
	
	Если ЗакрыватьФормуПослеЗавершенияОперации Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьВыбораКассыПриОткрытииДенежногоЯщикаЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	
	Если НЕ РезультатВыполнения.Результат Тогда  
		ЗаголовокИнформации = НСтр("ru='При открытии денежного ящика возникла ошибка.';uk='При відкритті грошового ящика виникла помилка.'");
		//РезультатВыполнения.ОписаниеОшибки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти