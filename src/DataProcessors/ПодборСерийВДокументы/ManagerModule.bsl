#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаФормированияТаблицыДанныеРегистров(ВариантПолучениеДанныхИзРегистров, СкладИлиПодразделение = Неопределено) Экспорт
	
	ЕстьПравоНаЧтениеРегистра = Истина;
	
	Если ВариантПолучениеДанныхИзРегистров = "ЗаказНакладнаяСерииИзОстатка" Тогда
		
		Если СкладИлиПодразделение = Неопределено ИЛИ ТипЗнч(СкладИлиПодразделение) <> Тип("СправочникСсылка.СтруктураПредприятия") Тогда
		
			Если Не ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ТоварыНаСкладах)
				Или Не ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ТоварыКОтгрузке) Тогда
				
				ЕстьПравоНаЧтениеРегистра = Ложь;
				
			Иначе
				
				//В накладной (или заказе) могут быть указаны любые незарезервированные серии
				//Из остатков серий нужно вычесть резервы серий
				
				ТекстЗапроса = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ДанныеРегистров.Серия КАК Серия,
				|	СУММА(ДанныеРегистров.СвободныйОстаток) КАК СвободныйОстаток
				|ПОМЕСТИТЬ ДанныеРегистровДляЗапроса
				|ИЗ
				|	(ВЫБРАТЬ
				|		ТоварыНаСкладахОстатки.Серия КАК Серия,
				|		ТоварыНаСкладахОстатки.ВНаличииОстаток - ТоварыНаСкладахОстатки.КОтгрузкеОстаток КАК СвободныйОстаток
				|	ИЗ
				|		РегистрНакопления.ТоварыНаСкладах.Остатки(
				|				,
				|				Номенклатура = &Номенклатура
				|					И Характеристика = &Характеристика
				|					И (&БезНазначения ИЛИ Назначение = &Назначение)
				|					И Склад = &Склад) КАК ТоварыНаСкладахОстатки
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ТоварыКОтгрузкеОстатки.Серия,
				|		-ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток - ТоварыКОтгрузкеОстатки.ВРезервеОстаток
				|	ИЗ
				|		РегистрНакопления.ТоварыКОтгрузке.Остатки(
				|				,
				|				Номенклатура = &Номенклатура
				|					И Склад = &Склад
				|					И Характеристика = &Характеристика
				|					И (&БезНазначения ИЛИ Назначение = &Назначение)
				|					И Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК ТоварыКОтгрузкеОстатки
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ТоварыНаСкладах.Серия,
				|		ВЫБОР
				|			КОГДА ТоварыНаСкладах.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
				|				ТОГДА -ТоварыНаСкладах.ВНаличии + ТоварыНаСкладах.КОтгрузке
				|			ИНАЧЕ ТоварыНаСкладах.ВНаличии - ТоварыНаСкладах.КОтгрузке
				|		КОНЕЦ
				|	ИЗ
				|		РегистрНакопления.ТоварыНаСкладах КАК ТоварыНаСкладах
				|	ГДЕ
				|		ТоварыНаСкладах.Номенклатура = &Номенклатура
				|		И ТоварыНаСкладах.Характеристика = &Характеристика
				|		И (&БезНазначения ИЛИ ТоварыНаСкладах.Назначение = &Назначение) 
				|		И ТоварыНаСкладах.Склад = &Склад
				|		И ТоварыНаСкладах.Регистратор = &Регистратор
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		РезервыСерий.Серия,
				|		ВЫБОР
				|			КОГДА РезервыСерий.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
				|				ТОГДА РезервыСерий.КОтгрузке + РезервыСерий.ВРезерве
				|			ИНАЧЕ -РезервыСерий.КОтгрузке - РезервыСерий.ВРезерве
				|		КОНЕЦ
				|	ИЗ
				|		РегистрНакопления.ТоварыКОтгрузке КАК РезервыСерий
				|	ГДЕ
				|		РезервыСерий.Номенклатура = &Номенклатура
				|		И РезервыСерий.Характеристика = &Характеристика
				|		И (&БезНазначения ИЛИ РезервыСерий.Назначение = &Назначение)
				|		И РезервыСерий.Склад = &Склад
				|		И РезервыСерий.Регистратор = &Регистратор
				|		И РезервыСерий.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК ДанныеРегистров
				|
				|СГРУППИРОВАТЬ ПО
				|	ДанныеРегистров.Серия";
				
			КонецЕсли;
			
		КонецЕсли; 
		
	ИначеЕсли ВариантПолучениеДанныхИзРегистров = "НакладнаяСерииИзЗаказа" Тогда
		
		Если Не ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ТоварыКОтгрузке) Тогда
			
			ЕстьПравоНаЧтениеРегистра = Ложь;
			
		Иначе
			
			//В накладной могут быть указаны только серии, указанные в заказе, по которым еще не выписаны накладные
			//Нужно взять остатки резервов серий по заказу
			
			ТекстЗапроса = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ  
			|	ДанныеРегистров.Серия КАК Серия,
			|	СУММА(ДанныеРегистров.СвободныйОстаток) КАК СвободныйОстаток
			|ПОМЕСТИТЬ ДанныеРегистровДляЗапроса
			|ИЗ
			|	(ВЫБРАТЬ
			|		ТоварыКОтгрузкеОстатки.Серия КАК Серия,
			|		ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток КАК СвободныйОстаток
			|	ИЗ
			|		РегистрНакопления.ТоварыКОтгрузке.Остатки(
			|				,
			|				Номенклатура = &Номенклатура
			|					И Склад = &Склад
			|					И Характеристика = &Характеристика
			|					И (&БезНазначения ИЛИ Назначение = &Назначение)
			|					И ДокументОтгрузки = &Распоряжение
			|					И Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК ТоварыКОтгрузкеОстатки
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		РезервыСерий.Серия,
			|		ВЫБОР
			|			КОГДА РезервыСерий.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|				ТОГДА -РезервыСерий.КОтгрузке
			|			ИНАЧЕ РезервыСерий.КОтгрузке
			|		КОНЕЦ
			|	ИЗ
			|		РегистрНакопления.ТоварыКОтгрузке КАК РезервыСерий
			|	ГДЕ
			|		РезервыСерий.Номенклатура = &Номенклатура
			|		И РезервыСерий.Характеристика = &Характеристика
			|		И (&БезНазначения ИЛИ РезервыСерий.Назначение = &Назначение)
			|		И РезервыСерий.Склад = &Склад
			|		И РезервыСерий.Регистратор = &Регистратор
			|		И РезервыСерий.ДокументОтгрузки = &Распоряжение
			|		И РезервыСерий.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК ДанныеРегистров
			|
			|СГРУППИРОВАТЬ ПО
			|	ДанныеРегистров.Серия";
			
		КонецЕсли;
		
	ИначеЕсли ВариантПолучениеДанныхИзРегистров = "ОрдерСерииИзОстатка" Тогда
		
		Если Не ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ТоварыНаСкладах)
			Или Не ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ТоварыКОтгрузке) Тогда
			
			ЕстьПравоНаЧтениеРегистра = Ложь;
			
		Иначе
			//В ордере могут быть указаны любые серии, которые есть на остатке (еще не указаны в других ордерах)
			//Также этот вариант можно использовать в документах по рознице
			
			ТекстЗапроса = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ДанныеРегистров.Серия КАК Серия,
			|	СУММА(ДанныеРегистров.СвободныйОстаток) КАК СвободныйОстаток
			|ПОМЕСТИТЬ ДанныеРегистровДляЗапроса
			|ИЗ
			|	(ВЫБРАТЬ
			|		ТоварыНаСкладахОстатки.Серия КАК Серия,
			|		ТоварыНаСкладахОстатки.ВНаличииОстаток - ТоварыНаСкладахОстатки.КОтгрузкеОстаток КАК СвободныйОстаток
			|	ИЗ
			|		РегистрНакопления.ТоварыНаСкладах.Остатки(
			|				,
			|				Номенклатура = &Номенклатура
			|					И Характеристика = &Характеристика
			|					И (&БезНазначения ИЛИ Назначение = &Назначение)
			|					И Склад = &Склад
			|					И Помещение = &Помещение) КАК ТоварыНаСкладахОстатки
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ТоварыНаСкладах.Серия,
			|		ВЫБОР
			|			КОГДА ТоварыНаСкладах.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|				ТОГДА -ТоварыНаСкладах.ВНаличии + ТоварыНаСкладах.КОтгрузке
			|			ИНАЧЕ ТоварыНаСкладах.ВНаличии - ТоварыНаСкладах.КОтгрузке
			|		КОНЕЦ
			|	ИЗ
			|		РегистрНакопления.ТоварыНаСкладах КАК ТоварыНаСкладах
			|	ГДЕ
			|		ТоварыНаСкладах.Номенклатура = &Номенклатура
			|		И ТоварыНаСкладах.Характеристика = &Характеристика
			|		И (&БезНазначения ИЛИ ТоварыНаСкладах.Назначение = &Назначение)
			|		И ТоварыНаСкладах.Склад = &Склад
			|		И ТоварыНаСкладах.Помещение = &Помещение
			|		И ТоварыНаСкладах.Регистратор = &Регистратор) КАК ДанныеРегистров
			|
			|СГРУППИРОВАТЬ ПО
			|	ДанныеРегистров.Серия";
			
		КонецЕсли;
		
	ИначеЕсли ВариантПолучениеДанныхИзРегистров = "ОрдерСерииИзНакладной" Тогда
		
		Если Не ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ТоварыКОтгрузке)
			Или Не ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ТоварыНаСкладах) Тогда
			
			ЕстьПравоНаЧтениеРегистра = Ложь;
			
		Иначе	
			//Если серии указываются в накладной, то в ордере можно указывать только те серии, которые есть в накладной
			//Информация из накладной в ордер о том, какие серии отгружать передается через регистр "ТоварыКОтгрузке",
			//в нем же фиксируется, что серия уже указана в ордере, поэтому для получения информации, какие серии в накладной
			//нужно использовать регистр "ТоварыКОтгрузке"
			//Накладная резервирует серии в целом по складу без учета помещений, но в ордере нельзя указать больше,
			//чем есть в помещении - поэтому нужно дополнительно анализировать регистр "ТоварыНаСкладах"
			
			ТекстЗапроса = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ДанныеРегистраТоварыКОтрузке.Серия КАК Серия,
			|	СУММА(ДанныеРегистраТоварыКОтрузке.СвободныйОстаток) КАК СвободныйОстаток
			|ПОМЕСТИТЬ ДанныеРегистраТоварыКОтрузке
			|ИЗ
			|	(ВЫБРАТЬ
			|		ТоварыКОтгрузкеОстатки.Серия КАК Серия,
			|		ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток - ТоварыКОтгрузкеОстатки.СобираетсяОстаток - ТоварыКОтгрузкеОстатки.СобраноОстаток КАК СвободныйОстаток
			|	ИЗ
			|		РегистрНакопления.ТоварыКОтгрузке.Остатки(
			|				,
			|				ДокументОтгрузки = &Распоряжение
			|					И Характеристика = &Характеристика
			|					И Номенклатура = &Номенклатура
			|					И (&БезНазначения ИЛИ Назначение = &Назначение)
			|					И Склад = &Склад
			|					И Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК ТоварыКОтгрузкеОстатки
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ТоварыКОтгрузке.Серия,
			|		ВЫБОР
			|			КОГДА ТоварыКОтгрузке.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|				ТОГДА -ТоварыКОтгрузке.КОтгрузке + ТоварыКОтгрузке.Собирается + ТоварыКОтгрузке.Собрано
			|			ИНАЧЕ ТоварыКОтгрузке.КОтгрузке - ТоварыКОтгрузке.Собирается - ТоварыКОтгрузке.Собрано
			|		КОНЕЦ
			|	ИЗ
			|		РегистрНакопления.ТоварыКОтгрузке КАК ТоварыКОтгрузке
			|	ГДЕ
			|		ТоварыКОтгрузке.Номенклатура = &Номенклатура
			|		И ТоварыКОтгрузке.Характеристика = &Характеристика
			|		И (&БезНазначения ИЛИ ТоварыКОтгрузке.Назначение = &Назначение)
			|		И ТоварыКОтгрузке.Склад = &Склад
			|		И ТоварыКОтгрузке.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
			|		И ТоварыКОтгрузке.Регистратор = &Регистратор
			|		И ТоварыКОтгрузке.ДокументОтгрузки = &Распоряжение) КАК ДанныеРегистраТоварыКОтрузке
			|
			|СГРУППИРОВАТЬ ПО
			|	ДанныеРегистраТоварыКОтрузке.Серия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ДанныеРегистраТоварыНаСкладах.Серия КАК Серия,
			|	СУММА(ДанныеРегистраТоварыНаСкладах.СвободныйОстаток) КАК СвободныйОстаток
			|ПОМЕСТИТЬ ДанныеРегистраТоварыНаСкладах
			|ИЗ
			|	(ВЫБРАТЬ
			|		ТоварыНаСкладахОстатки.Серия КАК Серия,
			|		ТоварыНаСкладахОстатки.ВНаличииОстаток - ТоварыНаСкладахОстатки.КОтгрузкеОстаток КАК СвободныйОстаток
			|	ИЗ
			|		РегистрНакопления.ТоварыНаСкладах.Остатки(
			|				,
			|				Номенклатура = &Номенклатура
			|					И Характеристика = &Характеристика
			|					И (&БезНазначения ИЛИ Назначение = &Назначение)
			|					И Склад = &Склад
			|					И Помещение = &Помещение) КАК ТоварыНаСкладахОстатки
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ТоварыНаСкладах.Серия,
			|		ВЫБОР
			|			КОГДА ТоварыНаСкладах.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|				ТОГДА -ТоварыНаСкладах.ВНаличии + ТоварыНаСкладах.КОтгрузке
			|			ИНАЧЕ ТоварыНаСкладах.ВНаличии - ТоварыНаСкладах.КОтгрузке
			|		КОНЕЦ
			|	ИЗ
			|		РегистрНакопления.ТоварыНаСкладах КАК ТоварыНаСкладах
			|	ГДЕ
			|		ТоварыНаСкладах.Номенклатура = &Номенклатура
			|		И ТоварыНаСкладах.Характеристика = &Характеристика
			|		И (&БезНазначения ИЛИ ТоварыНаСкладах.Назначение = &Назначение)
			|		И ТоварыНаСкладах.Склад = &Склад
			|		И ТоварыНаСкладах.Помещение = &Помещение
			|		И ТоварыНаСкладах.Регистратор = &Регистратор) КАК ДанныеРегистраТоварыНаСкладах
			|
			|СГРУППИРОВАТЬ ПО
			|	ДанныеРегистраТоварыНаСкладах.Серия
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ДанныеРегистраТоварыКОтрузке.Серия,
			|	ВЫБОР
			|		КОГДА ДанныеРегистраТоварыКОтрузке.СвободныйОстаток < ЕСТЬNULL(ДанныеРегистраТоварыНаСкладах.СвободныйОстаток, 0)
			|			ТОГДА ДанныеРегистраТоварыКОтрузке.СвободныйОстаток
			|		ИНАЧЕ ЕСТЬNULL(ДанныеРегистраТоварыНаСкладах.СвободныйОстаток, 0)
			|	КОНЕЦ КАК СвободныйОстаток
			|ПОМЕСТИТЬ ДанныеРегистровДляЗапроса
			|ИЗ
			|	ДанныеРегистраТоварыКОтрузке КАК ДанныеРегистраТоварыКОтрузке
			|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеРегистраТоварыНаСкладах КАК ДанныеРегистраТоварыНаСкладах
			|		ПО ДанныеРегистраТоварыКОтрузке.Серия = ДанныеРегистраТоварыНаСкладах.Серия";	
		КонецЕсли;
	ИначеЕсли ВариантПолучениеДанныхИзРегистров = "ТоварыВЯчейках" Тогда
		
		Если Не ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ТоварыВЯчейках) Тогда
			
			ЕстьПравоНаЧтениеРегистра = Ложь;
			
		Иначе	
			ТекстЗапроса = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ДанныеРегистра.Серия КАК Серия,
			|	СУММА(ДанныеРегистра.СвободныйОстаток) КАК СвободныйОстаток
			|ПОМЕСТИТЬ ДанныеРегистровДляЗапроса
			|ИЗ
			|	(ВЫБРАТЬ
			|		ТоварыВЯчейкахОстатки.Серия КАК Серия,
			|		ТоварыВЯчейкахОстатки.ВНаличииОстаток - ТоварыВЯчейкахОстатки.КОтборуОстаток КАК СвободныйОстаток
			|	ИЗ
			|		РегистрНакопления.ТоварыВЯчейках.Остатки(
			|				,
			|				Ячейка = &Ячейка
			|					И Упаковка = &Упаковка
			|					И Характеристика = &Характеристика
			|					И (&БезНазначения ИЛИ Назначение = &Назначение)
			|					И Номенклатура = &Номенклатура) КАК ТоварыВЯчейкахОстатки
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ТоварыВЯчейках.Серия,
			|		ВЫБОР
			|			КОГДА ТоварыВЯчейках.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|				ТОГДА -ТоварыВЯчейках.ВНаличии + ТоварыВЯчейках.КОтбору
			|			ИНАЧЕ ТоварыВЯчейках.ВНаличии - ТоварыВЯчейках.КОтбору
			|		КОНЕЦ
			|	ИЗ
			|		РегистрНакопления.ТоварыВЯчейках КАК ТоварыВЯчейках
			|	ГДЕ
			|		ТоварыВЯчейках.Номенклатура = &Номенклатура
			|		И ТоварыВЯчейках.Характеристика = &Характеристика
			|		И (&БезНазначения ИЛИ ТоварыВЯчейках.Назначение = &Назначение)
			|		И ТоварыВЯчейках.Упаковка = &Упаковка
			|		И ТоварыВЯчейках.Регистратор = &Регистратор
			|		И ТоварыВЯчейках.Ячейка = &Ячейка) КАК ДанныеРегистра
			|
			|СГРУППИРОВАТЬ ПО
			|	ДанныеРегистра.Серия";	
		КонецЕсли;
	ИначеЕсли ВариантПолучениеДанныхИзРегистров = "ТоварыКОформлениюПоступления" Тогда
		
		Если Не ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ТоварыКОформлениюПоступления) Тогда
			
			ЕстьПравоНаЧтениеРегистра = Ложь;
			
		Иначе	
			ТекстЗапроса = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ДанныеРегистров.Серия КАК Серия,
			|	СУММА(ДанныеРегистров.СвободныйОстаток) КАК СвободныйОстаток
			|ПОМЕСТИТЬ ДанныеРегистровДляЗапроса
			|ИЗ
			|	(ВЫБРАТЬ
			|		ТоварыКОформлениюПоступленияОстатки.Серия КАК Серия,
			|		ТоварыКОформлениюПоступленияОстатки.КОформлениюОстаток КАК СвободныйОстаток
			|	ИЗ
			|		РегистрНакопления.ТоварыКОформлениюПоступления.Остатки(
			|				,
			|				Номенклатура = &Номенклатура
			|					И Склад = &Склад
			|					И Характеристика = &Характеристика
			|					И (&БезНазначения ИЛИ Назначение = &Назначение)
			|					И ДокументПоступления = &Распоряжение
			|					И Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК ТоварыКОформлениюПоступленияОстатки
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ТоварыКОформлениюПоступления.Серия,
			|		ВЫБОР
			|			КОГДА ТоварыКОформлениюПоступления.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|				ТОГДА -ТоварыКОформлениюПоступления.КОформлению
			|			ИНАЧЕ ТоварыКОформлениюПоступления.КОформлению
			|		КОНЕЦ
			|	ИЗ
			|		РегистрНакопления.ТоварыКОформлениюПоступления КАК ТоварыКОформлениюПоступления
			|	ГДЕ
			|		ТоварыКОформлениюПоступления.Номенклатура = &Номенклатура
			|		И ТоварыКОформлениюПоступления.Характеристика = &Характеристика
			|		И (&БезНазначения ИЛИ ТоварыКОформлениюПоступления.Назначение = &Назначение)
			|		И ТоварыКОформлениюПоступления.Склад = &Склад
			|		И ТоварыКОформлениюПоступления.Регистратор = &Регистратор
			|		И ТоварыКОформлениюПоступления.ДокументПоступления = &Распоряжение
			|		И ТоварыКОформлениюПоступления.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
			|) КАК ДанныеРегистров
			|
			|СГРУППИРОВАТЬ ПО
			|	ДанныеРегистров.Серия";
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВариантПолучениеДанныхИзРегистров = "ВсеСерииНоменклатуры" Тогда
		Если ПравоДоступа("Чтение",Метаданные.РегистрыНакопления.ДвиженияСерийТоваров) Тогда
			ТекстЗапроса = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	ДвиженияСерийТоваров.Серия,
			|	0 КАК СвободныйОстаток
			|ПОМЕСТИТЬ ДанныеРегистров
			|ИЗ
			|	РегистрНакопления.ДвиженияСерийТоваров КАК ДвиженияСерийТоваров
			|ГДЕ
			|	ДвиженияСерийТоваров.Номенклатура = &Номенклатура
			|	И ДвиженияСерийТоваров.Характеристика = &Характеристика";
		Иначе
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
			|	0 КАК СвободныйОстаток
			|ПОМЕСТИТЬ ДанныеРегистров
			|ГДЕ
			|	ЛОЖЬ";
		КонецЕсли;
	Иначе
		
		Если Не ЕстьПравоНаЧтениеРегистра Тогда
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
			|	0 КАК СвободныйОстаток
			|ПОМЕСТИТЬ ДанныеРегистровДляЗапроса
			|ГДЕ
			|	ЛОЖЬ";
		КонецЕсли;	
		
		ТекстЗапроса = ТекстЗапроса + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
		Если ПравоДоступа("Чтение",Метаданные.РегистрыНакопления.ДвиженияСерийТоваров) Тогда
			
			ТекстЗапроса = ТекстЗапроса + 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	ДвиженияСерийТоваров.Серия
			|ПОМЕСТИТЬ ВсеСерии
			|ИЗ
			|	РегистрНакопления.ДвиженияСерийТоваров КАК ДвиженияСерийТоваров
			|ГДЕ
			|	ДвиженияСерийТоваров.Номенклатура = &Номенклатура
			|	И ДвиженияСерийТоваров.Характеристика = &Характеристика
			|	И ДвиженияСерийТоваров.Назначение = &Назначение
			|	И &ВсеСерии
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВложенныйЗапрос.Серия КАК Серия,
			|	СУММА(ВложенныйЗапрос.СвободныйОстаток) КАК СвободныйОстаток
			|ПОМЕСТИТЬ ДанныеРегистров
			|ИЗ
			|	(ВЫБРАТЬ
			|		ДвиженияСерийТоваров.Серия КАК Серия,
			|		0 КАК СвободныйОстаток
			|	ИЗ
			|		ВсеСерии КАК ДвиженияСерийТоваров
			|	
			|	ОБЪЕДИНИТЬ ВСЕ
			|	
			|	ВЫБРАТЬ
			|		ДанныеРегистровДляЗапроса.Серия,
			|		ДанныеРегистровДляЗапроса.СвободныйОстаток
			|	ИЗ
			|		ДанныеРегистровДляЗапроса КАК ДанныеРегистровДляЗапроса) КАК ВложенныйЗапрос
			|
			|СГРУППИРОВАТЬ ПО
			|	ВложенныйЗапрос.Серия";
		Иначе
			ТекстЗапроса = ТекстЗапроса + 
			"ВЫБРАТЬ
			|	ДанныеРегистровДляЗапроса.Серия,
			|	ДанныеРегистровДляЗапроса.СвободныйОстаток
			|ПОМЕСТИТЬ ДанныеРегистров
			|ИЗ
			|	ДанныеРегистровДляЗапроса КАК ДанныеРегистровДляЗапроса";
		КонецЕсли;
	КонецЕсли;		
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ВариантПолучениеДанныхИзРегистровПоПараметрамФормы(ПараметрыУказанияСерий, Распоряжение, Склад, ВидНоменклатуры) Экспорт
	
	ПараметрыУчетнойПолитикиСерий = Новый ФиксированнаяСтруктура(ЗначениеНастроекПовтИсп.НастройкиИспользованияСерий(
																											ВидНоменклатуры,
																											Склад));
	
	Если ПараметрыУказанияСерий.СкладскиеОперации.Найти(Перечисления.СкладскиеОперации.ОтгрузкаВРозницу) <> Неопределено Тогда
		//Эта форма из расходных ордеров не отрывается, поэтому эта складская операция может быть только 
		//в ОтчетеОРозничныхПродажах, ЧекеККМ и ВводеОстатков
		
		Если ПараметрыУчетнойПолитикиСерий.УчитыватьОстаткиСерий Тогда	
			ВариантПолучениеДанныхИзРегистров = "ОрдерСерииИзОстатка";
		Иначе
			ВариантПолучениеДанныхИзРегистров = "ВсеСерииНоменклатуры";
		КонецЕсли;
	ИначеЕсли ПараметрыУказанияСерий.СкладскиеОперации.Найти(Перечисления.СкладскиеОперации.ВводОстатков) <> Неопределено Тогда
		
		ВариантПолучениеДанныхИзРегистров = "ВсеСерииНоменклатуры";
		
	ИначеЕсли ПараметрыУказанияСерий.ИмяПоляСкладОтправитель <> Неопределено
			И ПараметрыУказанияСерий.ИмяПоляСкладПолучатель <> Неопределено Тогда //это перемещение товаров
		
		Если ПараметрыУчетнойПолитикиСерий.УчитыватьОстаткиСерий Тогда
			Если ПараметрыУчетнойПолитикиСерий.УказыватьПриПланированииОтгрузки 
				И ЗначениеЗаполнено(Распоряжение) Тогда
				ВариантПолучениеДанныхИзРегистров = "НакладнаяСерииИзЗаказа";
			Иначе
				ВариантПолучениеДанныхИзРегистров = "ЗаказНакладнаяСерииИзОстатка";
			КонецЕсли;
		Иначе
			ВариантПолучениеДанныхИзРегистров = "ВсеСерииНоменклатуры";
		КонецЕсли;
		
	ИначеЕсли ПараметрыУказанияСерий.СкладскиеОперации.Найти(Перечисления.СкладскиеОперации.ВозвратНепринятыхТоваров) <> Неопределено Тогда
		ВариантПолучениеДанныхИзРегистров = "ВсеСерииНоменклатуры";
		
	ИначеЕсли Распоряжение <> Неопределено
		И Перечисления.СкладскиеОперации.ЕстьПриемка(ПараметрыУказанияСерий.СкладскиеОперации) Тогда
		
		Если СкладыСервер.ИспользоватьОрдернуюСхемуПриПоступлении(Склад,ПараметрыУказанияСерий.Дата)
			И ПараметрыУчетнойПолитикиСерий.УчитыватьСебестоимостьПоСериям Тогда
			ВариантПолучениеДанныхИзРегистров = "ТоварыКОформлениюПоступления";
		Иначе
			ВариантПолучениеДанныхИзРегистров = "ВсеСерииНоменклатуры";
		КонецЕсли;
		
	ИначеЕсли ПараметрыУказанияСерий.ЭтоЗаказ
		Или (ПараметрыУказанияСерий.ЭтоНакладная
		И (Не ЗначениеЗаполнено(Распоряжение)
		Или Не ПараметрыУчетнойПолитикиСерий.УказыватьПриПланированииОтгрузки))
		И ПараметрыУказанияСерий.СкладскиеОперации.Найти(Перечисления.СкладскиеОперации.ВводОстатков) = Неопределено 
		И ПараметрыУказанияСерий.СкладскиеОперации.Найти(Перечисления.СкладскиеОперации.ПриемкаПоВозвратуОтКлиента) = Неопределено 
		И ПараметрыУказанияСерий.СкладскиеОперации.Найти(Перечисления.СкладскиеОперации.ПустаяСсылка()) = Неопределено Тогда
		
		Если ПараметрыУчетнойПолитикиСерий.УчитыватьОстаткиСерий Тогда	
			ВариантПолучениеДанныхИзРегистров = "ЗаказНакладнаяСерииИзОстатка";
		Иначе
			ВариантПолучениеДанныхИзРегистров = "ВсеСерииНоменклатуры";
		КонецЕсли;
		
	ИначеЕсли ПараметрыУказанияСерий.ЭтоНакладная
		И ЗначениеЗаполнено(Распоряжение) Тогда
		
		Если ПараметрыУчетнойПолитикиСерий.УчитыватьОстаткиСерий
			И ПараметрыУчетнойПолитикиСерий.УказыватьПриПланированииОтгрузки Тогда	
			ВариантПолучениеДанныхИзРегистров = "НакладнаяСерииИзЗаказа";
		Иначе
			ВариантПолучениеДанныхИзРегистров = "ВсеСерииНоменклатуры";
		КонецЕсли;
		
	Иначе	
		Если ПараметрыУчетнойПолитикиСерий.УчитыватьОстаткиСерий Тогда
			Если ПараметрыУказанияСерий.ЭтоОрдер Тогда
				Если ПараметрыУказанияСерий.СкладскиеОперации.Найти(Перечисления.СкладскиеОперации.ПеремещениеМеждуПомещениями) <> Неопределено
					Или Не ПараметрыУчетнойПолитикиСерий.УказыватьПриПланированииОтгрузки
					Или Не ЗначениеЗаполнено(Распоряжение) Тогда
					ВариантПолучениеДанныхИзРегистров = "ОрдерСерииИзОстатка";
				Иначе
					ВариантПолучениеДанныхИзРегистров = "ОрдерСерииИзНакладной";
				КонецЕсли;
			Иначе
				ВариантПолучениеДанныхИзРегистров = "ЗаказНакладнаяСерииИзОстатка";
			КонецЕсли;
		Иначе
			ВариантПолучениеДанныхИзРегистров = "ВсеСерииНоменклатуры";
		КонецЕсли;
	КонецЕсли;
	
	Возврат ВариантПолучениеДанныхИзРегистров;
	
КонецФункции

Функция ЗаголовкиПоВариантуПолучениеДанныхИзРегистров(ВариантПолучениеДанныхИзРегистров) Экспорт
	
	Если ВариантПолучениеДанныхИзРегистров = "ТоварыКОформлениюПоступления" Тогда
		ЗаголовокКнопки            = НСтр("ru='К оформлению поступления';uk='До оформлення надходження'");
		ЗаголовокСвободногоОстатка = НСтр("ru='Остаток по распоряжению, %ЕдиницаИзмерения%';uk='Залишок за розпорядженням, %ЕдиницаИзмерения%'");
	ИначеЕсли ВариантПолучениеДанныхИзРегистров = "ЗаказНакладнаяСерииИзОстатка"
		Или ВариантПолучениеДанныхИзРегистров = "ОрдерСерииИзОстатка" Тогда
		ЗаголовокКнопки            = НСтр("ru='Свободные остатки';uk='Вільні залишки'");
		ЗаголовокСвободногоОстатка = НСтр("ru='Свободный остаток, %ЕдиницаИзмерения%';uk='Вільний залишок, %ЕдиницаИзмерения%'");
	ИначеЕсли ВариантПолучениеДанныхИзРегистров = "НакладнаяСерииИзЗаказа" Тогда
		ЗаголовокКнопки = НСтр("ru='Остатки по заказу';uk='Залишки по замовленню'");
		ЗаголовокСвободногоОстатка = НСтр("ru='Остаток по заказу, %ЕдиницаИзмерения%';uk='Залишок по замовленню, %ЕдиницаИзмерения%'");
	ИначеЕсли ВариантПолучениеДанныхИзРегистров = "ОрдерСерииИзНакладной" Тогда
		ЗаголовокКнопки = НСтр("ru='Остатки по распоряжению';uk='Залишки за розпорядженням'");
		ЗаголовокСвободногоОстатка = НСтр("ru='Остаток по распоряжению, %ЕдиницаИзмерения%';uk='Залишок за розпорядженням, %ЕдиницаИзмерения%'");
	ИначеЕсли ВариантПолучениеДанныхИзРегистров = "ВсеСерииНоменклатуры" Тогда
		ЗаголовокКнопки = "";
		ЗаголовокСвободногоОстатка = "";
	КонецЕсли;

	Результат = Новый Структура;
	Результат.Вставить("ЗаголовокКнопки", ЗаголовокКнопки);
	Результат.Вставить("ЗаголовокСвободногоОстатка", ЗаголовокСвободногоОстатка);
	
	Возврат Результат;
	
КонецФункции

Функция РаспоряжениеПоПараметрамФормы(ПараметрыФормы) Экспорт
	
	Если ПараметрыФормы.ЗначенияПолейДляОпределенияРаспоряжения.Количество() > 0 Тогда
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПараметрыФормы.ПараметрыУказанияСерий.ПолноеИмяОбъекта);
		Распоряжение = МенеджерОбъекта.РаспоряжениеНаВыполнениеСкладскойОперации(ПараметрыФормы.ЗначенияПолейДляОпределенияРаспоряжения);
	Иначе
		Распоряжение = Неопределено;
	КонецЕсли;
	
	Возврат Распоряжение;
	
КонецФункции

Функция ВладелецСвойствСерий(ВидНоменклатуры) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПустаяСерия = Справочники.СерииНоменклатуры.СоздатьЭлемент();
	ПустаяСерия.ВидНоменклатуры = ВидНоменклатуры;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ПустаяСерия;
	
КонецФункции

#КонецОбласти

#КонецЕсли
