
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Ордер        = Параметры.Ордер;
	СтатусОрдера = Параметры.СтатусОрдера;
	РеквизитыОрдера = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ордер, "Получатель,Статус,Склад");
	
	Получатель   = РеквизитыОрдера.Получатель;
	Склад   	 = РеквизитыОрдера.Склад;
	
	Если Не ЗначениеЗаполнено(СтатусОрдера) Тогда
		СтатусОрдера = РеквизитыОрдера.Статус;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РаспоряженияОрдера.Распоряжение
	|ПОМЕСТИТЬ РаспоряженияОрдера
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК РаспоряженияОрдера
	|ГДЕ
	|	РаспоряженияОрдера.Ссылка = &Ордер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Перевозчик
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК Перевозчик
	|	ГДЕ
	|		ЛОЖЬ ";
	
	Для Каждого ТипРаспоряжениеНаДоставку Из Метаданные.ОпределяемыеТипы.РаспоряжениеНаДоставку.Тип.Типы() Цикл
		
		МетаданныеРаспоряжения = Метаданные.НайтиПоТипу(ТипРаспоряжениеНаДоставку);
		Если Не ОбщегоНазначения.ЕстьРеквизитОбъекта("ПеревозчикПартнер", МетаданныеРаспоряжения) Тогда
			Продолжить;
		КонецЕсли;
		ПолноеИмяДокумента = МетаданныеРаспоряжения.ПолноеИмя();
		
		ТекстЗапроса = ТекстЗапроса + "
		|	ОБЪЕДИНИТЬ ВСЕ
		|" + "	
		|	ВЫБРАТЬ
		|		ТаблицаШапкиРаспоряжения.ПеревозчикПартнер
		|	ИЗ
		|		#ПолноеИмяДокумента КАК ТаблицаШапкиРаспоряжения
		|	ГДЕ
		|		ТаблицаШапкиРаспоряжения.Ссылка В
		|				(ВЫБРАТЬ       
		|					РаспоряженияОрдера.Распоряжение
		|				ИЗ
		|					РаспоряженияОрдера)";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ПолноеИмяДокумента", ПолноеИмяДокумента);
		
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + ") КАК ВложенныйЗапрос";	
		
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ордер", Ордер);
	
	Перевозчики.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Перевозчик"));
	
	//Сначала сложим зоны доставки в соотвествие, чтобы гарантировать, что значения не повторяются
	ЗоныДоставкиСоответствие = Новый Соответствие;
	
	//Скорее всего в перевозчиках будет один перевозчик, т.к. в рамках одно ордера маловероятно, что будут распоряжения с разными перевозчиками
	//Если все распоряжения с нашей доставкой без перевозчика, то в списке будет хотя бы пустая ссылка
	//Т.О. штатно тут отработает один раз, без цикла
	Для Каждого Перевозчик из Перевозчики Цикл
	    РеквизитыДоставки = ДоставкаТоваров.ПоследниеРеквизитыДоставкиИзЗаданий(Получатель, Перевозчик.Значение);
		
		Если РеквизитыДоставки.Количество() > 0
			И ЗначениеЗаполнено(РеквизитыДоставки[0].ЗонаДоставки) Тогда
			ЗоныДоставкиСоответствие.Вставить(РеквизитыДоставки[0].ЗонаДоставки);
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого ЗонаДоставки из ЗоныДоставкиСоответствие Цикл
		ЗоныДоставки.Добавить(ЗонаДоставки.Ключ);	
	КонецЦикла;
	
	ЭлементВыбора = Элементы.ОтборПоРаспоряжениям.СписокВыбора.НайтиПоЗначению("ЗаданияПоПолучателю");
	ЭлементВыбора.Представление = СтрЗаменить(ЭлементВыбора.Представление, "%Получатель%", Получатель);
	
	ЭлементВыбора = Элементы.ОтборПоРаспоряжениям.СписокВыбора.НайтиПоЗначению("ЗаданияПоЗонеДоставки");
	Если ЗоныДоставки.Количество() = 0 Тогда
		Элементы.ОтборПоРаспоряжениям.СписокВыбора.Удалить(ЭлементВыбора);		
	Иначе
		ЭлементВыбора.Представление = СтрЗаменить(ЭлементВыбора.Представление, "%ЗонаДоставки%", Строка(ЗоныДоставки));
	КонецЕсли;
		
	ОтборПоРаспоряжениям = "ЗаданияПоРаспоряжениям";
	ОтборПоСтатусуЗадания = Перечисления.СтатусыЗаданийНаПеревозку.КПогрузке;
	
	ЗаполнитьСписокЗаданий();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборПоРаспоряжениямПриИзменении(Элемент)
	Если ОтборПоРаспоряжениям <> "ЗаданияПоРаспоряжениям" Тогда
		ОтборПоСтатусуЗадания = ПредопределенноеЗначение("Перечисление.СтатусыЗаданийНаПеревозку.КПогрузке");
		Элементы.ОтборПоСтатусуЗадания.Доступность = Ложь;	
	Иначе
		Элементы.ОтборПоСтатусуЗадания.Доступность = Истина;	
	КонецЕсли;
	
	ЗаполнитьСписокЗаданий();
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоСтатусуЗаданияПриИзменении(Элемент)
	УстановитьФильтрПоСтатусу();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	ТекущиеДанные = Элементы.ЗаданияНаПеревозку.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		ТекстПредупрежедения = НСтр("ru='Выберите задание на перевозку.';uk='Виберіть завдання на перевезення.'");
		ПоказатьПредупреждение(,ТекстПредупрежедения);
		Возврат;
	КонецЕсли;                     
		
	Если МожноВыбиратьЭтоЗадание() Тогда
		ОповеститьОВыборе(ТекущиеДанные.ЗаданиеНаПеревозку);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРаспоряжения

&НаКлиенте
Процедура ЗаданияНаПеревозкуВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.ЗаданияНаПеревозку.ТекущиеДанные;
	Если МожноВыбиратьЭтоЗадание() Тогда
		ОповеститьОВыборе(ТекущиеДанные.ЗаданиеНаПеревозку);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокЗаданий()
	ЗаданияНаПеревозку.Очистить();
	
	Запрос = Новый Запрос;
	Если ОтборПоРаспоряжениям = "ЗаданияПоРаспоряжениям" Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Распоряжение
		|ПОМЕСТИТЬ РаспоряженияОрдера
		|ИЗ
		|	Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК РасходныйОрдерНаТоварыТоварыПоРаспоряжениям
		|ГДЕ
		|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка = &Ордер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка КАК Ссылка,
		|	ЗаданиеНаПеревозкуРаспоряжения.Распоряжение КАК Распоряжение
		|ПОМЕСТИТЬ ЗаданиеНаПеревозкуРаспоряжения
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|ГДЕ
		|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка.Проведен
		|	И ЗаданиеНаПеревозкуРаспоряжения.Распоряжение В
		|			(ВЫБРАТЬ
		|				РаспоряженияОрдера.Распоряжение
		|			ИЗ
		|				РаспоряженияОрдера)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Ссылка
		|ПОМЕСТИТЬ ОтобранныеЗадания
		|ИЗ
		|	(ВЫБРАТЬ
		|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка КАК Ссылка,
		|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЗаданиеНаПеревозкуРаспоряжения.Распоряжение) КАК КоличествоРаспоряженийВЗадании
		|	ИЗ
		|		ЗаданиеНаПеревозкуРаспоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ЗаданиеНаПеревозкуРаспоряжения.Ссылка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЕСТЬNULL(ЗаданиеНаПеревозкуРаспоряжения.Ссылка, НЕОПРЕДЕЛЕНО),
		|		-КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РаспоряженияОрдера.Распоряжение)
		|	ИЗ
		|		РаспоряженияОрдера КАК РаспоряженияОрдера
		|			ЛЕВОЕ СОЕДИНЕНИЕ ЗаданиеНаПеревозкуРаспоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|			ПО РаспоряженияОрдера.Распоряжение = ЗаданиеНаПеревозкуРаспоряжения.Распоряжение
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ЕСТЬNULL(ЗаданиеНаПеревозкуРаспоряжения.Ссылка, НЕОПРЕДЕЛЕНО)) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Ссылка
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВложенныйЗапрос.КоличествоРаспоряженийВЗадании) = 0";
	ИначеЕсли ОтборПоРаспоряжениям = "ЗаданияПоПолучателю" Тогда 
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка
		|ПОМЕСТИТЬ ОтобранныеЗадания
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|ГДЕ
		|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка.Проведен
		|	И ЗаданиеНаПеревозкуРаспоряжения.ПолучательОтправитель = &Получатель
		|	И ЗаданиеНаПеревозкуРаспоряжения.Перевозчик В(&Перевозчики)
		|	И ЗаданиеНаПеревозкуРаспоряжения.Склад = &Склад";
		Запрос.УстановитьПараметр("Получатель",  Получатель);
		Запрос.УстановитьПараметр("Перевозчики", Перевозчики.ВыгрузитьЗначения());
	ИначеЕсли ОтборПоРаспоряжениям = "ЗаданияПоЗонеДоставки" Тогда 
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаданиеНаПеревозкуМаршрут.Ссылка
		|ПОМЕСТИТЬ ОтобранныеЗадания
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Маршрут КАК ЗаданиеНаПеревозкуМаршрут
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
		|		ПО ЗаданиеНаПеревозкуМаршрут.Ссылка = ЗаданиеНаПеревозкуРаспоряжения.Ссылка
		|			И ЗаданиеНаПеревозкуМаршрут.КлючСвязи = ЗаданиеНаПеревозкуРаспоряжения.КлючСвязи
		|ГДЕ
		|	ЗаданиеНаПеревозкуМаршрут.Ссылка.Проведен
		|	И ЗаданиеНаПеревозкуМаршрут.Зона В(&ЗоныДоставки)
		|	И ЗаданиеНаПеревозкуРаспоряжения.Склад = &Склад";
		Запрос.УстановитьПараметр("ЗоныДоставки", ЗоныДоставки.ВыгрузитьЗначения());
	КонецЕсли;	
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтобранныеЗадания.Ссылка КАК ЗаданиеНаПеревозку,
	|	ОтобранныеЗадания.Ссылка.Статус КАК Статус,
	|	ПРЕДСТАВЛЕНИЕ(ЗаданиеНаПеревозкуМаршрут.Зона) КАК ЗонаДоставки,
	|	ЗаданиеНаПеревозкуМаршрут.Ссылка.ДатаВремяРейсаПланС
	|ИЗ
	|	ОтобранныеЗадания КАК ОтобранныеЗадания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку.Маршрут КАК ЗаданиеНаПеревозкуМаршрут
	|		ПО ОтобранныеЗадания.Ссылка = ЗаданиеНаПеревозкуМаршрут.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаданиеНаПеревозкуМаршрут.Ссылка.ДатаВремяРейсаПланС
	|ИТОГИ ПО
	|	ЗаданиеНаПеревозку";	

	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ордер", Ордер);
	Запрос.УстановитьПараметр("Склад", Склад);
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока Выборка.Следующий() Цикл
		
		ТекстЗоныДоставки = "";
		НоваяСтрока = ЗаданияНаПеревозку.Добавить();
		ВыборкаПоЗонамДоставки = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоЗонамДоставки.Следующий() Цикл
		
			НоваяСтрока.ЗаданиеНаПеревозку = ВыборкаПоЗонамДоставки.ЗаданиеНаПеревозку; 
			НоваяСтрока.Статус = ВыборкаПоЗонамДоставки.Статус; 
			ТекстЗоныДоставки = ТекстЗоныДоставки + ?(ПустаяСтрока(ТекстЗоныДоставки), "","; ") + ВыборкаПоЗонамДоставки.ЗонаДоставки;
			
		КонецЦикла;	
		
		НоваяСтрока.ЗоныДоставки = ТекстЗоныДоставки;
		
	КонецЦикла;
	
	УстановитьФильтрПоСтатусу();

КонецПроцедуры

&НаСервере
Процедура УстановитьФильтрПоСтатусу()
	
	Если ЗначениеЗаполнено(ОтборПоСтатусуЗадания) Тогда
		Элементы.ЗаданияНаПеревозку.ОтборСтрок = Новый ФиксированнаяСтруктура("Статус", ОтборПоСтатусуЗадания);
	Иначе
		Элементы.ЗаданияНаПеревозку.ОтборСтрок = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция МожноВыбиратьЭтоЗадание()
	ТекущиеДанные = Элементы.ЗаданияНаПеревозку.ТекущиеДанные;
	
	Если (ТекущиеДанные.Статус = ПредопределенноеЗначение("Перечисление.СтатусыЗаданийНаПеревозку.Отправлено")
		Или ТекущиеДанные.Статус = ПредопределенноеЗначение("Перечисление.СтатусыЗаданийНаПеревозку.Закрыто"))
		И СтатусОрдера <> ПредопределенноеЗначение("Перечисление.СтатусыРасходныхОрдеров.Отгружен") Тогда
		
		ТекстСообщения = НСтр("ru='Выбранное задание на перевозку находится в статусе ""%СтатусЗадания%"", поэтому его нельзя указать в ордере, который находится в статусе ""%СтатусОрдера%"". Измените статус ордера на ""%СтатусОтгружено%"".';uk='Вибране завдання на перевезення перебуває в статусі ""%СтатусЗадания%"", тому його не можна вказати в ордері, який перебуває в статусі ""%СтатусОрдера%"". Змініть статус ордера на ""%СтатусОтгружено%"".'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СтатусЗадания%", ТекущиеДанные.Статус);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СтатусОрдера%", СтатусОрдера);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СтатусОтгружено%", ПредопределенноеЗначение("Перечисление.СтатусыРасходныхОрдеров.Отгружен"));
		ПоказатьПредупреждение(,ТекстСообщения);
		
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти