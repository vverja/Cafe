#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Если Не ПроведениеСервер.ЗаписыватьПодчиненныеДанные(ДополнительныеСвойства, "СостоянияЗаказов") Тогда
		ПроведениеСервер.ДобавитьСтруктуруЗаписиПодчиненныхДанных(ДополнительныеСвойства, "СостоянияЗаказов");
	КонецЕсли;
	
	ДополнитьМассивЗаказовДляРасчетаСостояний(ДополнительныеСвойства);
	
	Если Не ПроведениеСервер.РассчитыватьИзменения(ДополнительныеСвойства) Тогда
		Возврат;
	КонецЕсли;

	БлокироватьДляИзменения = Истина;

	// Текущее состояние набора помещается во временную таблицу "ДвиженияТоварыКОтгрузкеПередЗаписью",
	// чтобы при записи получить изменение нового набора относительно текущего.

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("ЭтоНовый",    ДополнительныеСвойства.ЭтоНовый);
	Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Таблица.Назначение     КАК Назначение,
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад          КАК Склад,
		|	Таблица.КонтролироватьТолькоНаличиеПодЗаказ КАК КонтролироватьТолькоНаличиеПодЗаказ,
		|	ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|			Таблица.Потребность
		|		ИНАЧЕ
		|			-Таблица.Потребность
		|	КОНЕЦ                  КАК ПотребностьПередЗаписью,
		|
		|	ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|			Таблица.НаличиеПодЗаказ
		|		ИНАЧЕ
		|			-Таблица.НаличиеПодЗаказ
		|	КОНЕЦ                  КАК НаличиеПередЗаписью,
		|
		|	ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|
		|			Таблица.КЗаказу
		|		ИНАЧЕ
		|			-Таблица.КЗаказу
		|	КОНЕЦ                  КАК ЗаказатьПередЗаписью
		|
		|ПОМЕСТИТЬ РезервыТоваровПередЗаписью
		|ИЗ
		|	РегистрНакопления.ОбеспечениеЗаказов КАК Таблица
		|	
		|ГДЕ
		|	Таблица.Регистратор = &Регистратор
		|	И НЕ &ЭтоНовый";

	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();

КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПроведениеСервер.ЗаписыватьПодчиненныеДанные(ДополнительныеСвойства, "СостоянияЗаказов") Тогда
		ПроведениеСервер.ДобавитьСтруктуруЗаписиПодчиненныхДанных(ДополнительныеСвойства, "СостоянияЗаказов");
	КонецЕсли;
	
	ДополнитьМассивЗаказовДляРасчетаСостояний(ДополнительныеСвойства);
	
	Если Не ПроведениеСервер.РассчитыватьИзменения(ДополнительныеСвойства) Тогда
		Возврат;
	КонецЕсли;

	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	
	// Рассчитывается изменение нового набора относительно текущего с учетом накопленных изменений
	// и помещается во временную таблицу.
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("КонтролироватьПревышение",
		Не ПолучитьФункциональнуюОпцию("НеКонтролироватьОбособленноеОбеспечениеСверхПотребности"));

	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаИзмененийПослеГруппировки.Назначение           КАК Назначение,
		|	ТаблицаИзмененийПослеГруппировки.Номенклатура         КАК Номенклатура,
		|	ТаблицаИзмененийПослеГруппировки.Характеристика       КАК Характеристика,
		|	ТаблицаИзмененийПослеГруппировки.Склад                КАК Склад,
		|	ТаблицаИзмененийПослеГруппировки.НаличиеИзменение     КАК НаличиеИзменение,
		|	ВЫБОР КОГДА ТаблицаИзмененийПослеГруппировки.КонтролироватьТолькоНаличиеПодЗаказ
		|			ИЛИ ТаблицаИзмененийПослеГруппировки.ЭтоТолкающееНазначение
		|			ИЛИ НЕ &КонтролироватьПревышение ТОГДА
		|				0
		|			ИНАЧЕ
		|				ТаблицаИзмененийПослеГруппировки.ПотребностьИзменение
		|		КОНЕЦ                                             КАК ПотребностьИзменение,
		|	ВЫБОР КОГДА ТаблицаИзмененийПослеГруппировки.КонтролироватьТолькоНаличиеПодЗаказ
		|			ИЛИ ТаблицаИзмененийПослеГруппировки.ЭтоТолкающееНазначение
		|			ИЛИ НЕ &КонтролироватьПревышение ТОГДА
		|				0
		|			ИНАЧЕ
		|				ТаблицаИзмененийПослеГруппировки.ЗаказатьИзменение
		|		КОНЕЦ                                             КАК ЗаказатьИзменение
		|ПОМЕСТИТЬ ОбеспечениеЗаказовИзменение
		|ИЗ(
		|	ВЫБРАТЬ
		|		ТаблицаИзменений.Назначение                      КАК Назначение,
		|		ТаблицаИзменений.Номенклатура                    КАК Номенклатура,
		|		ТаблицаИзменений.Характеристика                  КАК Характеристика,
		|		ТаблицаИзменений.Склад                           КАК Склад,
		|		СУММА(ТаблицаИзменений.НаличиеИзменение)         КАК НаличиеИзменение,
		|		СУММА(ТаблицаИзменений.ПотребностьИзменение)     КАК ПотребностьИзменение,
		|		СУММА(ТаблицаИзменений.ЗаказатьИзменение)        КАК ЗаказатьИзменение,
		|		
		|		МАКСИМУМ(ТаблицаИзменений.КонтролироватьТолькоНаличиеПодЗаказ) КАК КонтролироватьТолькоНаличиеПодЗаказ,
		|		МАКСИМУМ(ТаблицаИзменений.ЭтоТолкающееНазначение)              КАК ЭтоТолкающееНазначение
		|	ИЗ(
		|		ВЫБРАТЬ
		|			Таблица.Назначение                  КАК Назначение,
		|			ВЫБОР КОГДА Таблица.Назначение.НаправлениеДеятельности.ВариантОбособления
		|					= ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленияПоНаправлениюДеятельности.ПоНаправлениюВЦелом) ТОГДА
		|					ИСТИНА
		|					ИНАЧЕ
		|						ЛОЖЬ
		|				КОНЕЦ                           КАК ЭтоТолкающееНазначение,
		|			Таблица.КонтролироватьТолькоНаличиеПодЗаказ КАК КонтролироватьТолькоНаличиеПодЗаказ,
		|			Таблица.Номенклатура                КАК Номенклатура,
		|			Таблица.Характеристика              КАК Характеристика,
		|			Таблица.Склад                       КАК Склад,
		|			Таблица.НаличиеПередЗаписью         КАК НаличиеИзменение,
		|			Таблица.ПотребностьПередЗаписью     КАК ПотребностьИзменение,
		|			Таблица.ЗаказатьПередЗаписью        КАК ЗаказатьИзменение
		|		ИЗ
		|			РезервыТоваровПередЗаписью КАК Таблица
		|	
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			Таблица.Назначение             КАК Назначение,
		|			ВЫБОР КОГДА Таблица.Назначение.НаправлениеДеятельности.ВариантОбособления
		|						= ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленияПоНаправлениюДеятельности.ПоНаправлениюВЦелом) ТОГДА
		|						ИСТИНА
		|					ИНАЧЕ
		|						ЛОЖЬ
		|				КОНЕЦ                      КАК ЭтоТолкающееНазначение,
		|			Таблица.КонтролироватьТолькоНаличиеПодЗаказ КАК КонтролироватьТолькоНаличиеПодЗаказ,
		|			Таблица.Номенклатура           КАК Номенклатура,
		|			Таблица.Характеристика         КАК Характеристика,
		|			Таблица.Склад                  КАК Склад,
		|			ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|					-Таблица.НаличиеПодЗаказ
		|				ИНАЧЕ
		|					Таблица.НаличиеПодЗаказ
		|			КОНЕЦ                          КАК НаличиеИзменение,
		|			ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|					-Таблица.Потребность
		|				ИНАЧЕ
		|					Таблица.Потребность
		|			КОНЕЦ                          КАК ПотребностьИзменение,
		|			ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|					-Таблица.КЗаказу
		|				ИНАЧЕ
		|					Таблица.КЗаказу
		|			КОНЕЦ                          КАК ЗаказатьИзменение
		|		ИЗ
		|			РегистрНакопления.ОбеспечениеЗаказов КАК Таблица
		|			
		|	
		|		ГДЕ
		|			Таблица.Регистратор = &Регистратор
		|	) КАК ТаблицаИзменений
		|
		|	СГРУППИРОВАТЬ ПО
		|		ТаблицаИзменений.Назначение,
		|		ТаблицаИзменений.Номенклатура,
		|		ТаблицаИзменений.Характеристика,
		|		ТаблицаИзменений.Склад) КАК ТаблицаИзмененийПослеГруппировки
		|
		|ГДЕ
		|	ТаблицаИзмененийПослеГруппировки.НаличиеИзменение > 0
		|	
		|		ИЛИ НЕ КонтролироватьТолькоНаличиеПодЗаказ
		|			И НЕ ТаблицаИзмененийПослеГруппировки.ЭтоТолкающееНазначение
		|			И &КонтролироватьПревышение
		|			И(
		|				ТаблицаИзмененийПослеГруппировки.ПотребностьИзменение <> 0
		|				ИЛИ ТаблицаИзмененийПослеГруппировки.НаличиеИзменение < 0
		|				ИЛИ ТаблицаИзмененийПослеГруппировки.ЗаказатьИзменение > 0)
		|;
		|УНИЧТОЖИТЬ РезервыТоваровПередЗаписью";

	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.ВыполнитьПакет()[0].Выбрать();
	Выборка.Следующий();

	СтруктураВременныеТаблицы.Вставить("ОбеспечениеЗаказовИзменение", Выборка.Количество > 0);

КонецПроцедуры

Процедура ДополнитьМассивЗаказовДляРасчетаСостояний(ДополнительныеСвойства)
	
	Если Не ДополнительныеСвойства.Свойство("ДляЗаписиПодчиненныхДанных") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПроведениеСервер.ЗаписыватьПодчиненныеДанные(ДополнительныеСвойства.ДляЗаписиПодчиненныхДанных, "СостоянияЗаказов") Тогда
		ПроведениеСервер.ДобавитьСтруктуруЗаписиПодчиненныхДанных(ДополнительныеСвойства.ДляЗаписиПодчиненныхДанных, "СостоянияЗаказов");
	КонецЕсли;
	
	СтруктураДляРасчетаСостояний = ДополнительныеСвойства.ДляЗаписиПодчиненныхДанных.СтруктураДляРасчетаСостояний;
	
	// Заказы из текущего состояния набора добавляем к общему массиву заказов.
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("МассивЗаказов", СтруктураДляРасчетаСостояний.МассивЗаказов);
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДвиженияДокумента.Назначение     КАК Назначение,
		|	ДвиженияДокумента.Номенклатура   КАК Номенклатура,
		|	ДвиженияДокумента.Характеристика КАК Характеристика,
		|	ДвиженияДокумента.Склад          КАК Склад
		|ПОМЕСТИТЬ ВтДвиженияДокумента
		|ИЗ
		|	РегистрНакопления.ОбеспечениеЗаказов КАК ДвиженияДокумента
		|ГДЕ
		|	ДвиженияДокумента.Регистратор = &Регистратор
		|	И ДвиженияДокумента.Активность
		|;
		|
		|///////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВсеДвиженияНазначения.Регистратор    КАК Регистратор,
		|	ВсеДвиженияНазначения.Назначение     КАК Назначение,
		|	ВсеДвиженияНазначения.Номенклатура   КАК Номенклатура,
		|	ВсеДвиженияНазначения.Характеристика КАК Характеристика,
		|	ВсеДвиженияНазначения.Склад          КАК Склад
		|ПОМЕСТИТЬ ВтВсеДвиженияНазначения
		|ИЗ
		|	ВтДвиженияДокумента КАК ДвиженияДокумента
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОбеспечениеЗаказов КАК ВсеДвиженияНазначения
		|		ПО ВсеДвиженияНазначения.Назначение        = ДвиженияДокумента.Назначение
		|			И ВсеДвиженияНазначения.Номенклатура   = ДвиженияДокумента.Номенклатура
		|			И ВсеДвиженияНазначения.Характеристика = ДвиженияДокумента.Характеристика
		|			И ВсеДвиженияНазначения.Склад          = ДвиженияДокумента.Склад
		|ГДЕ
		|	ВсеДвиженияНазначения.Активность
		|	И ВсеДвиженияНазначения.Потребность > 0
		|	И ВсеДвиженияНазначения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И НЕ ВсеДвиженияНазначения.Регистратор В(&МассивЗаказов)
		|;
		|
		|///////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ГрафикОтгрузки.Регистратор КАК Заказ
		|ИЗ
		|	ВтВсеДвиженияНазначения КАК ВсеДвиженияНазначения
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ГрафикОтгрузкиТоваров КАК ГрафикОтгрузки
		|		ПО ГрафикОтгрузки.Регистратор       = ВсеДвиженияНазначения.Регистратор
		|			И ГрафикОтгрузки.Назначение     = ВсеДвиженияНазначения.Назначение
		|			И ГрафикОтгрузки.Номенклатура   = ВсеДвиженияНазначения.Номенклатура
		|			И ГрафикОтгрузки.Характеристика = ВсеДвиженияНазначения.Характеристика
		|			И ГрафикОтгрузки.Склад          = ВсеДвиженияНазначения.Склад
		|ГДЕ
		|	ГрафикОтгрузки.Активность";
	МассивЗаказов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Заказ");
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СтруктураДляРасчетаСостояний.МассивЗаказов, МассивЗаказов);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли