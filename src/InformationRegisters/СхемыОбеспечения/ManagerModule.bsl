#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВременнаяТаблицаСпособыОбеспечения(ФорматыСкладов) Экспорт
	
	ТекстЗапроса = "";
	Если ФорматыСкладов = "ВЫЧИСЛЯТЬ" Тогда
		
		ТекстЗапроса = ВременнаяТаблицаФорматыСкладов();
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ТоварнаяМатрица.Номенклатура   КАК Номенклатура,
		|	ТоварнаяМатрица.Характеристика КАК Характеристика,
		|	ТоварнаяМатрица.Склад          КАК Склад,
		|	
		|	ЕСТЬNULL(СпрСпособ.Ссылка,
		|		ЗНАЧЕНИЕ(Справочник.СпособыОбеспеченияПотребностей.ПустаяСсылка)) КАК СпособОбеспеченияПотребностей,
		|	
		|	ВЫБОР КОГДА СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
		|		
		|			СпрНоменклатура.СпособОбеспеченияПотребностей
		|			
		|		ИНАЧЕ
		|			
		|			ЕСТЬNULL(ТаблицаСхемыОбеспеченияСкладов.СпособОбеспеченияПотребностей,
		|					ЕСТЬNULL(ТаблицаСхемыОбеспеченияФорматов.СпособОбеспеченияПотребностей,
		|						ЗНАЧЕНИЕ(Справочник.СпособыОбеспеченияПотребностей.ПустаяСсылка)))
		|			
		|		КОНЕЦ                      КАК СпособОбеспеченияПотребностейУнаследованный,
		|		
		|	ВЫБОР КОГДА НЕ ТаблицаВариантыОбеспеченияТоварами.Номенклатура ЕСТЬ NULL ИЛИ НЕ ТаблицаВариантыОбеспеченияРаботами.Номенклатура ЕСТЬ NULL ТОГДА
		|				
		|				""НоменклатураХарактеристикаСклад""
		|				
		|			КОГДА СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
		|				
		|				""Номенклатура""
		|				
		|			ИНАЧЕ
		|				
		|				""СхемаОбеспечения""
		|				
		|		КОНЕЦ КАК ИсточникНастройки
		|	
		|ПОМЕСТИТЬ ВтСпособыОбеспечения
		|ИЗ
		|	ВтТовары КАК ТоварнаяМатрица
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = ТоварнаяМатрица.Номенклатура
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияРаботами КАК ТаблицаВариантыОбеспеченияРаботами
		|		ПО СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|		 И ТаблицаВариантыОбеспеченияРаботами.Номенклатура   = ТоварнаяМатрица.Номенклатура
		|		 И ТаблицаВариантыОбеспеченияРаботами.Характеристика = ТоварнаяМатрица.Характеристика
		|		 И ТаблицаВариантыОбеспеченияРаботами.РеквизитДопУпорядочивания = 1
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ТаблицаВариантыОбеспеченияТоварами
		|		ПО СпрНоменклатура.ТипНоменклатуры В(
		|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара),
		|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Набор))
		|		 И ТаблицаВариантыОбеспеченияТоварами.Номенклатура   = ТоварнаяМатрица.Номенклатура
		|		 И ТаблицаВариантыОбеспеченияТоварами.Характеристика = ТоварнаяМатрица.Характеристика
		|		 И ТаблицаВариантыОбеспеченияТоварами.Склад          = ТоварнаяМатрица.Склад
		|		 И ТаблицаВариантыОбеспеченияТоварами.РеквизитДопУпорядочивания = 1
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтФорматыСкладов КАК ТаблицаФорматыСкладов
		|		ПО ТаблицаФорматыСкладов.Склад = ТоварнаяМатрица.Склад
		|		 И ТаблицаВариантыОбеспеченияТоварами.Номенклатура ЕСТЬ NULL
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СхемыОбеспечения КАК ТаблицаСхемыОбеспеченияСкладов
		|		ПО ТаблицаСхемыОбеспеченияСкладов.СхемаОбеспечения = СпрНоменклатура.СхемаОбеспечения
		|		 И ТаблицаСхемыОбеспеченияСкладов.Склад = ТоварнаяМатрица.Склад
		|		 И ТаблицаВариантыОбеспеченияТоварами.Номенклатура ЕСТЬ NULL
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СхемыОбеспечения КАК ТаблицаСхемыОбеспеченияФорматов
		|		ПО ТаблицаСхемыОбеспеченияФорматов.СхемаОбеспечения = СпрНоменклатура.СхемаОбеспечения
		|		 И ТаблицаСхемыОбеспеченияФорматов.Склад = ТаблицаФорматыСкладов.ФорматМагазина
		|		 И ТаблицаСхемыОбеспеченияСкладов.СхемаОбеспечения ЕСТЬ NULL
		|		 И ТаблицаВариантыОбеспеченияТоварами.Номенклатура ЕСТЬ NULL
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОбеспеченияПотребностей КАК СпрСпособ
		|		ПО ВЫБОР КОГДА СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
		|						
		|						ЕСТЬNULL(ТаблицаВариантыОбеспеченияРаботами.СпособОбеспеченияПотребностей,
		|							СпрНоменклатура.СпособОбеспеченияПотребностей)
		|						
		|					ИНАЧЕ
		|						
		|						ЕСТЬNULL(ТаблицаВариантыОбеспеченияТоварами.СпособОбеспеченияПотребностей,
		|							ЕСТЬNULL(ТаблицаСхемыОбеспеченияСкладов.СпособОбеспеченияПотребностей,
		|								ЕСТЬNULL(ТаблицаСхемыОбеспеченияФорматов.СпособОбеспеченияПотребностей,
		|									ЗНАЧЕНИЕ(Справочник.СпособыОбеспеченияПотребностей.ПустаяСсылка))))
		|						
		|				КОНЕЦ = СпрСпособ.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад
		|;
		|
		|////////////////////////////////////
		|";
		
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ВременнаяТаблицаСпособыОбеспеченияВсехСкладов(ТипОбеспечения = Неопределено) Экспорт
	
	ТекстЗапроса = ВременнаяТаблицаФорматыСкладов(Ложь);
	ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Набор.Номенклатура   КАК Номенклатура,
		|	Набор.Характеристика КАК Характеристика,
		|	Набор.Склад          КАК Склад,
		|	Набор.СпособОбеспеченияПотребностей КАК СпособОбеспеченияПотребностей
		|ПОМЕСТИТЬ ВтСпособыОбеспечения
		|ИЗ(
		|	ВЫБРАТЬ
		|		ТоварнаяМатрица.Номенклатура   КАК Номенклатура,
		|		ТоварнаяМатрица.Характеристика КАК Характеристика,
		|		
		|		Настройка.Склад                         КАК Склад,
		|		Настройка.СпособОбеспеченияПотребностей КАК СпособОбеспеченияПотребностей
		|	ИЗ
		|		ВтТовары КАК ТоварнаяМатрица
		|			
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК Настройка
		|			ПО Настройка.Номенклатура   = ТоварнаяМатрица.Номенклатура
		|			 И Настройка.Характеристика = ТоварнаяМатрица.Характеристика
		|			 И Настройка.РеквизитДопУпорядочивания = 1
		|	ГДЕ
		|		НЕ Настройка.Склад ЕСТЬ NULL
		|		И &Отборы
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТоварнаяМатрица.Номенклатура   КАК Номенклатура,
		|		ТоварнаяМатрица.Характеристика КАК Характеристика,
		|		
		|		Настройка.Склад                         КАК Склад,
		|		Настройка.СпособОбеспеченияПотребностей КАК СпособОбеспеченияПотребностей
		|	ИЗ
		|		ВтТовары КАК ТоварнаяМатрица
		|			
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СхемыОбеспечения КАК Настройка
		|			ПО Настройка.СхемаОбеспечения = ТоварнаяМатрица.Номенклатура.СхемаОбеспечения
		|			 И Настройка.Склад ССЫЛКА Справочник.Склады
		|			
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВытесняющаяНастройка
		|			ПО ВытесняющаяНастройка.Номенклатура   = ТоварнаяМатрица.Номенклатура
		|			 И ВытесняющаяНастройка.Характеристика = ТоварнаяМатрица.Характеристика
		|			 И ВытесняющаяНастройка.Склад          = Настройка.Склад
		|			 И ВытесняющаяНастройка.РеквизитДопУпорядочивания = 1
		|	ГДЕ
		|		НЕ Настройка.Склад ЕСТЬ NULL
		|		И ВытесняющаяНастройка.Склад ЕСТЬ NULL
		|		И &Отборы
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТоварнаяМатрица.Номенклатура   КАК Номенклатура,
		|		ТоварнаяМатрица.Характеристика КАК Характеристика,
		|		
		|		СкладыФормата.Склад                     КАК Склад,
		|		Настройка.СпособОбеспеченияПотребностей КАК СпособОбеспеченияПотребностей
		|	ИЗ
		|		ВтТовары КАК ТоварнаяМатрица
		|			
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СхемыОбеспечения КАК Настройка
		|			ПО Настройка.СхемаОбеспечения = ТоварнаяМатрица.Номенклатура.СхемаОбеспечения
		|			 И Настройка.Склад ССЫЛКА Справочник.ФорматыМагазинов
		|			
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВтФорматыСкладов КАК СкладыФормата
		|			ПО СкладыФормата.ФорматМагазина = Настройка.Склад
		|			
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СхемыОбеспечения КАК ВытесняющаяНастройкаСхемы
		|			ПО ВытесняющаяНастройкаСхемы.СхемаОбеспечения = ТоварнаяМатрица.Номенклатура.СхемаОбеспечения
		|			 И ВытесняющаяНастройкаСхемы.Склад ССЫЛКА Справочник.Склады
		|			 И ВытесняющаяНастройкаСхемы.Склад = СкладыФормата.Склад
		|			
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ВытесняющаяНастройка
		|			ПО ВытесняющаяНастройка.Номенклатура   = ТоварнаяМатрица.Номенклатура
		|			 И ВытесняющаяНастройка.Характеристика = ТоварнаяМатрица.Характеристика
		|			 И ВытесняющаяНастройка.Склад          = СкладыФормата.Склад
		|			 И ВытесняющаяНастройка.РеквизитДопУпорядочивания = 1
		|	ГДЕ
		|		НЕ Настройка.Склад ЕСТЬ NULL
		|		И НЕ СкладыФормата.Склад ЕСТЬ NULL
		|		И ВытесняющаяНастройкаСхемы.Склад ЕСТЬ NULL
		|		И ВытесняющаяНастройка.Склад ЕСТЬ NULL
		|		И &Отборы) КАК Набор
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад
		|;
		|
		|////////////////////////////////////
		|";
	
	ПодстрокаЗамены = "";
	Если ТипОбеспечения = Перечисления.ТипыОбеспечения.Перемещение Тогда
		
		ПодстрокаЗамены = "Настройка.СпособОбеспеченияПотребностей.ТипОбеспечения = ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.Перемещение)
					|		И НЕ Настройка.СпособОбеспеченияПотребностей.ИсточникОбеспеченияПотребностей В(
					|			ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка),
					|			ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
					|			НЕОПРЕДЕЛЕНО)";
		
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Отборы", ПодстрокаЗамены);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ВременнаяТаблицаФорматыСкладов(ОтбиратьСклады = Истина) Экспорт
	
	Если ОтбиратьСклады Тогда
		
		ТекстЗапроса =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ТаблицаФорматы.Склад          КАК Склад,
			|	ТаблицаФорматы.ФорматМагазина КАК ФорматМагазина
			|ПОМЕСТИТЬ ВтФорматыСкладов
			|ИЗ
			|	РегистрСведений.ИсторияИзмененияФорматовМагазинов.СрезПоследних(,
			|		Склад В(
			|			ВЫБРАТЬ РАЗЛИЧНЫЕ
			|				ТаблицаСклады.Склад
			|			ИЗ
			|				ВтТовары КАК ТаблицаСклады)
			|		{Склад.* КАК Склад}) КАК ТаблицаФорматы
			|ГДЕ
			|	ТаблицаФорматы.ФорматМагазина <> ЗНАЧЕНИЕ(Справочник.ФорматыМагазинов.ПустаяСсылка)
			|ИНДЕКСИРОВАТЬ ПО
			|	Склад
			|;
			|
			|/////////////////////////////////////////////////
			|";
			
	Иначе
		
		ТекстЗапроса =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ТаблицаФорматы.Склад          КАК Склад,
			|	ТаблицаФорматы.ФорматМагазина КАК ФорматМагазина
			|ПОМЕСТИТЬ ВтФорматыСкладов
			|ИЗ
			|	РегистрСведений.ИсторияИзмененияФорматовМагазинов.СрезПоследних(,
			|		{Склад.* КАК Склад}) КАК ТаблицаФорматы
			|ГДЕ
			|	ТаблицаФорматы.ФорматМагазина <> ЗНАЧЕНИЕ(Справочник.ФорматыМагазинов.ПустаяСсылка)
			|ИНДЕКСИРОВАТЬ ПО
			|	Склад
			|;
			|
			|/////////////////////////////////////////////////
			|";
			
	КонецЕсли;
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ПодставитьСоединениеДляПолученияСпособаОбеспечения(ТекстЗапроса, ИмяПараметра, ПоляСоединения = Неопределено) Экспорт
	
	РезультатПодстановки = ТекстЗапроса;
	Пока Истина Цикл
		
		НачалоПараметра = СтрНайти(РезультатПодстановки, ИмяПараметра, НаправлениеПоиска.СНачала);
		
		Если НачалоПараметра = 0 Тогда
			Прервать;
		КонецЕсли;
		
		ПоследнийСимвол = НачалоПараметра + СтрДлина(ИмяПараметра);
		НачалоСинонима = СтрНайти(РезультатПодстановки, "КАК", НаправлениеПоиска.СКонца, НачалоПараметра) + СтрДлина("КАК");
		Синоним = СокрЛП(СтрЗаменить(Сред(РезультатПодстановки, НачалоСинонима, НачалоПараметра - НачалоСинонима - 1), "ПО", ""));
		ПревыйСимвол = СтрНайти(РезультатПодстановки, "СОЕДИНЕНИЕ", НаправлениеПоиска.СКонца, НачалоСинонима) + СтрДлина("СОЕДИНЕНИЕ");
		
		ПодстрокаПоиска = Сред(РезультатПодстановки, ПревыйСимвол, ПоследнийСимвол - ПревыйСимвол);
		ПодстрокаЗамены =
			" Справочник.Номенклатура КАК СпрНоменклатураДляСоединения
			|		ПО СпрНоменклатураДляСоединения.Ссылка = Т.Номенклатура
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияРаботами КАК ТаблицаВариантыОбеспеченияРаботами
			|		ПО СпрНоменклатураДляСоединения.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
			|		 И ТаблицаВариантыОбеспеченияРаботами.Номенклатура   = Т.Номенклатура
			|		 И ТаблицаВариантыОбеспеченияРаботами.Характеристика = Т.Характеристика
			|		 И ТаблицаВариантыОбеспеченияРаботами.РеквизитДопУпорядочивания = 1
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК ТаблицаВариантыОбеспеченияТоварами
			|		ПО СпрНоменклатураДляСоединения.ТипНоменклатуры В(
			|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
			|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара),
			|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Набор))
			|		 И ТаблицаВариантыОбеспеченияТоварами.Номенклатура   = Т.Номенклатура
			|		 И ТаблицаВариантыОбеспеченияТоварами.Характеристика = Т.Характеристика
			|		 И ТаблицаВариантыОбеспеченияТоварами.Склад          = Т.Склад
			|		 И ТаблицаВариантыОбеспеченияТоварами.РеквизитДопУпорядочивания = 1
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВтФорматыСкладов КАК ТаблицаФорматыСкладов
			|		ПО ТаблицаФорматыСкладов.Склад = Т.Склад
			|		 И ТаблицаВариантыОбеспеченияТоварами.Номенклатура ЕСТЬ NULL
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СхемыОбеспечения КАК ТаблицаСхемыОбеспеченияСкладов
			|		ПО ТаблицаСхемыОбеспеченияСкладов.СхемаОбеспечения = СпрНоменклатураДляСоединения.СхемаОбеспечения
			|		 И ТаблицаСхемыОбеспеченияСкладов.Склад = Т.Склад
			|		 И ТаблицаВариантыОбеспеченияТоварами.Номенклатура ЕСТЬ NULL
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СхемыОбеспечения КАК ТаблицаСхемыОбеспеченияФорматов
			|		ПО ТаблицаСхемыОбеспеченияФорматов.СхемаОбеспечения = СпрНоменклатураДляСоединения.СхемаОбеспечения
			|		 И ТаблицаСхемыОбеспеченияФорматов.Склад = ТаблицаФорматыСкладов.ФорматМагазина
			|		 И ТаблицаСхемыОбеспеченияСкладов.СхемаОбеспечения ЕСТЬ NULL
			|		 И ТаблицаВариантыОбеспеченияТоварами.Номенклатура ЕСТЬ NULL
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОбеспеченияПотребностей КАК СпрСпособ
			|		ПО ВЫБОР КОГДА СпрНоменклатураДляСоединения.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
			|						
			|						ЕСТЬNULL(ТаблицаВариантыОбеспеченияРаботами.СпособОбеспеченияПотребностей,
			|							СпрНоменклатураДляСоединения.СпособОбеспеченияПотребностей)
			|						
			|					ИНАЧЕ
			|						
			|						ЕСТЬNULL(ТаблицаВариантыОбеспеченияТоварами.СпособОбеспеченияПотребностей,
			|							ЕСТЬNULL(ТаблицаСхемыОбеспеченияСкладов.СпособОбеспеченияПотребностей,
			|								ЕСТЬNULL(ТаблицаСхемыОбеспеченияФорматов.СпособОбеспеченияПотребностей,
			|									ЗНАЧЕНИЕ(Справочник.СпособыОбеспеченияПотребностей.ПустаяСсылка))))
			|						
			|				КОНЕЦ = СпрСпособ.Ссылка";
			
		ПодстрокаЗамены = СтрЗаменить(ПодстрокаЗамены, "СпрСпособ", Синоним);
		Если ПоляСоединения <> Неопределено Тогда
			МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПоляСоединения);
			ПодстрокаЗамены = СтрЗаменить(ПодстрокаЗамены, "Т.Номенклатура",   МассивПодстрок[0]);
			ПодстрокаЗамены = СтрЗаменить(ПодстрокаЗамены, "Т.Характеристика", МассивПодстрок[1]);
			ПодстрокаЗамены = СтрЗаменить(ПодстрокаЗамены, "Т.Склад",          МассивПодстрок[2]);
		КонецЕсли;
		РезультатПодстановки = СтрЗаменить(РезультатПодстановки, ПодстрокаПоиска, ПодстрокаЗамены);
		
	КонецЦикла;
	
	Возврат РезультатПодстановки;
	
КонецФункции

Процедура Добавить(Склад, СхемаОбеспечения, СпособОбеспечения) Экспорт
	
	Набор = РегистрыСведений.СхемыОбеспечения.СоздатьНаборЗаписей();
	
	Набор.Отбор.СхемаОбеспечения.Установить(СхемаОбеспечения);
	Набор.Отбор.Склад.Установить(Склад);
	
	Запись = Набор.Добавить();
	Запись.СхемаОбеспечения = СхемаОбеспечения;
	Запись.Склад = Склад;
	
	Запись.СпособОбеспеченияПотребностей = СпособОбеспечения;
	Набор.Записать();
	
КонецПроцедуры

Процедура Удалить(Склад, СхемаОбеспечения) Экспорт
	
	Набор = РегистрыСведений.СхемыОбеспечения.СоздатьНаборЗаписей();
	
	Набор.Отбор.СхемаОбеспечения.Установить(СхемаОбеспечения);
	Набор.Отбор.Склад.Установить(Склад);
	
	Набор.Записать();
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура РеструктуризироватьВытесняющиеНастройкиСпособовОбеспеченияПотребностей() Экспорт
	
	СхемаОбеспечения = СоздатьОсновнуюСхемуОбеспечения();
	
	Если ЗначениеЗаполнено(СхемаОбеспечения) Тогда
		
		ЗаполнитьРеквизитСхемаОбеспеченияВНоменклатуре(СхемаОбеспечения);
		
	КонецЕсли;
	
	ЗаписатьСпособОбеспеченияНоменклатурыПоХарактеристикам();
	ЗаполнитьРеквизитСпособОбеспеченияВНоменклатуреРаботе();
	
КонецПроцедуры

Функция СоздатьОсновнуюСхемуОбеспечения()
	
	Запрос = Новый Запрос();
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Таблица.Склад КАК Склад,
		|	Таблица.СпособОбеспеченияПотребностей КАК СпособОбеспеченияПотребностей
		|ИЗ
		|	РегистрСведений.ВариантыОбеспеченияТоварами КАК Таблица
		|ГДЕ
		|	Таблица.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|	И Таблица.РеквизитДопУпорядочивания = 1";
		
	Выборка = Запрос.Выполнить().Выбрать();
	
	СпособОбеспеченияПредприятия = Константы.ОсновнойСпособОбеспеченияПотребностей.Получить();
	
	Если Выборка.Количество() = 0 И Не ЗначениеЗаполнено(СпособОбеспеченияПредприятия) Тогда
		Возврат Справочники.СхемыОбеспечения.ПустаяСсылка();
	КонецЕсли;
	
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Таблица.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.СхемыОбеспечения КАК Таблица";
		
	ВыборкаСхемы = Запрос.Выполнить().Выбрать();
	
	Если ВыборкаСхемы.Следующий() И ЗначениеЗаполнено(ВыборкаСхемы.Ссылка) Тогда
		
		СхемаОбеспечения = ВыборкаСхемы.Ссылка;
		
	Иначе
		
		СхемаОбеспеченияОбъект = Справочники.СхемыОбеспечения.СоздатьЭлемент();
		СхемаОбеспеченияОбъект.Наименование = НСтр("ru='Основная схема обеспечения (создана при обновлении ИБ)';uk='Основна схема забезпечення (створена при оновленні ІБ)'");
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(СхемаОбеспеченияОбъект);
		СхемаОбеспечения = СхемаОбеспеченияОбъект.Ссылка;
		
	КонецЕсли;
	
	Набор = РегистрыСведений.СхемыОбеспечения.СоздатьНаборЗаписей();
	Пока Выборка.Следующий() Цикл
		
		Запись = Набор.Добавить();
		Запись.СхемаОбеспечения = СхемаОбеспечения;
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		
	КонецЦикла;
	
	Склады = Новый Массив();
	Склады = Набор.ВыгрузитьКолонку("Склад");
	
	Если ЗначениеЗаполнено(СпособОбеспеченияПредприятия) Тогда
		
		Запрос.Текст =
			"ВЫБРАТЬ
			|	Таблица.Ссылка КАК Склад
			|ИЗ
			|	Справочник.Склады КАК Таблица
			|ГДЕ
			|	НЕ Таблица.ПометкаУдаления
			|	И НЕ Таблица.ЭтоГруппа
			|	И НЕ Таблица.Ссылка В(&Склады)";
		Запрос.УстановитьПараметр("Склады", Склады);
			
		Выборка = Запрос.Выполнить().Выбрать();
		
	КонецЕсли;
	
	Пока Выборка.Следующий() Цикл
		
		Запись = Набор.Добавить();
		Запись.СхемаОбеспечения = СхемаОбеспечения;
		Запись.Склад = Выборка.Склад;
		Запись.СпособОбеспеченияПотребностей = СпособОбеспеченияПредприятия;
		
	КонецЦикла;
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
	
	Если ЗначениеЗаполнено(СпособОбеспеченияПредприятия) Тогда
		
		Константы.ОсновнойСпособОбеспеченияПотребностей.Установить(Справочники.СпособыОбеспеченияПотребностей.ПустаяСсылка());
		
	КонецЕсли;
	
	Набор = РегистрыСведений.ВариантыОбеспеченияТоварами.СоздатьНаборЗаписей();
	Набор.Отбор.Номенклатура.Значение = Справочники.Номенклатура.ПустаяСсылка();
	Набор.Отбор.Номенклатура.Использование = Истина;
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
	Возврат СхемаОбеспечения;
	
КонецФункции

Процедура ЗаполнитьРеквизитСхемаОбеспеченияВНоменклатуре(СхемаОбеспечения)
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Таблица.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Таблица
		|ГДЕ
		|	НЕ Таблица.ПометкаУдаления
		|	И НЕ Таблица.ЭтоГруппа
		|	И Таблица.ТипНоменклатуры В(
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|	И НЕ Таблица.СхемаОбеспечения = &СхемаОбеспечения";
	
	Запрос.УстановитьПараметр("СхемаОбеспечения", СхемаОбеспечения);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СправочникОбъект = Выборка.Ссылка.ПолучитьОбъект();
		СправочникОбъект.СхемаОбеспечения = СхемаОбеспечения;
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(СправочникОбъект);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаписатьСпособОбеспеченияНоменклатурыПоХарактеристикам()
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Таблица.Склад                         КАК Склад,
		|	Таблица.Номенклатура                  КАК Номенклатура,
		|	Таблица.СпособОбеспеченияПотребностей КАК СпособОбеспеченияПотребностей,
		|	
		|	ТаблицаХарактеристик.Ссылка           КАК Характеристика
		|ИЗ
		|	РегистрСведений.ВариантыОбеспеченияТоварами КАК Таблица
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаНоменклатуры
		|		ПО ТаблицаНоменклатуры.Ссылка = Таблица.Номенклатура
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ТаблицаХарактеристик
		|		ПО ТаблицаХарактеристик.Владелец
		|			= ВЫБОР КОГДА ТаблицаНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры) ТОГДА
		|						ТаблицаНоменклатуры.Ссылка
		|					КОГДА ТаблицаНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры) ТОГДА
		|						ТаблицаНоменклатуры.ВидНоменклатуры
		|					КОГДА ТаблицаНоменклатуры.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры) ТОГДА
		|						ТаблицаНоменклатуры.ВладелецХарактеристик
		|				КОНЕЦ
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВариантыОбеспеченияТоварами КАК Настройка
		|		ПО Настройка.РеквизитДопУпорядочивания = 1
		|		 И Настройка.Склад          = Таблица.Склад
		|		 И Настройка.Номенклатура   = Таблица.Номенклатура
		|		 И Настройка.Характеристика = ТаблицаХарактеристик.Ссылка
		|ГДЕ
		|	Таблица.РеквизитДопУпорядочивания = 1
		|	И Таблица.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|	И НЕ ТаблицаХарактеристик.Ссылка ЕСТЬ NULL
		|	И ТаблицаНоменклатуры.ИспользованиеХарактеристик <> ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)
		|	И Настройка.Склад ЕСТЬ NULL";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Набор = РегистрыСведений.ВариантыОбеспеченияТоварами.СоздатьНаборЗаписей();
	Набор.Отбор.Номенклатура.Использование   = Истина;
	Набор.Отбор.Характеристика.Использование = Истина;
	Набор.Отбор.Склад.Использование          = Истина;
	Запись = Набор.Добавить();

	Пока Выборка.Следующий() Цикл
		
		Набор.Отбор.Номенклатура.Значение   = Выборка.Номенклатура;
		Набор.Отбор.Характеристика.Значение = Выборка.Характеристика;
		Набор.Отбор.Склад.Значение          = Выборка.Склад;
		
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
		
	КонецЦикла;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Таблица.Склад          КАК Склад,
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика
		|ИЗ
		|	РегистрСведений.ВариантыОбеспеченияТоварами КАК Таблица
		|ГДЕ
		|	Таблица.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|	И Таблица.Номенклатура.ИспользованиеХарактеристик <> ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Набор.Отбор.Номенклатура.Значение   = Выборка.Номенклатура;
		Набор.Отбор.Характеристика.Значение = Выборка.Характеристика;
		Набор.Отбор.Склад.Значение          = Выборка.Склад;
		
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитСпособОбеспеченияВНоменклатуреРаботе()
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Таблица.Номенклатура КАК Номенклатура,
		|	Таблица.СпособОбеспеченияПотребностей КАК СпособОбеспеченияПотребностей
		|ИЗ
		|	РегистрСведений.ВариантыОбеспеченияРаботами КАК Таблица
		|ГДЕ
		|	Таблица.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|	И Таблица.Номенклатура.ИспользованиеХарактеристик <> ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Набор = РегистрыСведений.ВариантыОбеспеченияРаботами.СоздатьНаборЗаписей();
	Набор.Отбор.Номенклатура.Использование   = Истина;
	Набор.Отбор.Характеристика.Использование = Истина;
	
	Пока Выборка.Следующий() Цикл
		
		СправочникОбъект = Выборка.Номенклатура.ПолучитьОбъект();
		СправочникОбъект.СпособОбеспеченияПотребностей = Выборка.СпособОбеспеченияПотребностей;
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(СправочникОбъект);
		
		Набор.Отбор.Номенклатура.Значение   = Выборка.Номенклатура;
		Набор.Отбор.Характеристика.Значение = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
		
	КонецЦикла;
	
КонецПРоцедуры

#КонецОбласти

#КонецЕсли
