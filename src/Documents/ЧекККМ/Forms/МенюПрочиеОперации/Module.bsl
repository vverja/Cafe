
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КассаККМ       = Параметры.КассаККМ;
	Кассир         = Параметры.Кассир;
	ТолькоПросмотр = Параметры.ТолькоПросмотр;
	Документ       = Параметры.Документ;
	
	// Управление видимостью комнады загрузки из ТСД.
	ТипыПодключенногоОборудования = ПодключаемоеОборудованиеУТПовтИсп.ТипыПодключенногоОборудования();
	
	ЕстьТСД =
		ТипыПодключенногоОборудования <> Неопределено
		И ТипыПодключенногоОборудования.Найти(Перечисления.ТипыПодключаемогоОборудования.ТерминалСбораДанных) <> Неопределено;
	
	Элементы.ЗагрузитьДанныеИзТСД.Видимость = ОбщегоНазначенияУТ.ИспользоватьПодключаемоеОборудование(ТипыПодключенногоОборудования) И ЕстьТСД;
	Элементы.ПродажаПодарочногоСертификата.Видимость = Параметры.ПродажаПодарочногоСертификата;
	Элементы.ПроверитьКоличествоВДокументе.Видимость = Параметры.ПроверитьКоличествоВДокументе;
	Элементы.ВозвратПодарочногоСертификата.Видимость = Параметры.ВозвратПодарочногоСертификата;
	Элементы.Заблокировать.Видимость                 = Параметры.Заблокировать;
	
	АдресКомандПечатиВоВременномХранилище = Параметры.АдресКомандПечатиВоВременномХранилище;
	КомандыПечати = ПолучитьИзВременногоХранилища(АдресКомандПечатиВоВременномХранилище);
	
	Для Каждого КомандаПечати Из КомандыПечати Цикл
		
		ИмяКнопки = КомандаПечати.ИмяКоманды;
		
		НоваяКоманда = ЭтаФорма.Команды.Добавить(ИмяКнопки);
		НоваяКоманда.Действие = "Подключаемый_ОбработатьКомандуПечати";
		НоваяКоманда.Заголовок = КомандаПечати.Заголовок;
		НоваяКоманда.Отображение = ОтображениеКнопки.Текст;
		
		НоваяКнопка = Элементы.Добавить(ИмяКнопки, Тип("КнопкаФормы"), Элементы.ГруппаПечать);
		НоваяКнопка.ИмяКоманды = НоваяКоманда.Имя;
		НоваяКнопка.Высота = 3;
		НоваяКнопка.Ширина = 12;
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(НоваяКнопка, "РастягиватьПоГоризонтали") Тогда
			НоваяКнопка.РастягиватьПоГоризонтали = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	ЗаполнитьДоступныеКассыККМ();
	
	РозничныеПродажи.ПодписатьГорячиеКлавишиНаКнопках(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ОбработатьКомандуПечати(Команда)
	
	Закрыть();
	
	ВыполнитьОбработкуОповещения(
		Новый ОписаниеОповещения("ОбработатьКомандуПечати", ВладелецФормы),
		Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДанныеИзТСД(Команда)
	
	Закрыть();
	
	МенеджерОборудованияКлиент.НачатьЗагрузкуДанныеИзТСД(
		Новый ОписаниеОповещения("ЗагрузитьИзТСДЗавершение", ВладелецФормы),
		УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьКоличествоВДокументе(Команда)
	
	Закрыть();
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьКоличествоВДокументе", ВладелецФормы);
	ВыполнитьОбработкуОповещения(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПродажаПодарочногоСертификата(Команда)
	
	Закрыть();
	
	ОбработкаОповещения = Новый ОписаниеОповещения("ПродажаПодарочногоСертификатаОбработкаОповещения", ЭтотОбъект);
	
	РозничныеПродажиКлиент.ОбработатьСостояниеСмены(ВладелецФормы, ОбработкаОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВозвратПодарочногоСертификата(Команда)
	
	Закрыть();
	
	ОбработкаОповещения = Новый ОписаниеОповещения("ВозвратПодарочногоСертификатаОбработкаОповещения", ЭтотОбъект);
	
	РозничныеПродажиКлиент.ОбработатьСостояниеСмены(ВладелецФормы, ОбработкаОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура Заблокировать(Команда)
	
	Закрыть();
	
	ОткрытьФорму("Документ.ЧекККМ.Форма.Авторизация", Новый Структура("Режим", "СменитьПрава"), ВладелецФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтложенныйЧек(Команда)
	
	Закрыть();
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("КассаККМ",        КассаККМ);
	ПараметрыОткрытия.Вставить("КартаЛояльности", ПредопределенноеЗначение("Справочник.КартыЛояльности.ПустаяСсылка"));
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.ЧекККМ") Тогда
		ОткрытьФорму("Документ.ЧекККМ.Форма.ВыборОтложенногоЧека", ПараметрыОткрытия, ВладелецФормы);
	ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.ЧекККМВозврат") Тогда
		ОткрытьФорму("Документ.ЧекККМВозврат.Форма.ВыборОтложенногоЧека", ПараметрыОткрытия, ВладелецФормы);
	ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.РеализацияПодарочныхСертификатов") Тогда
		ОткрытьФорму("Документ.РеализацияПодарочныхСертификатов.Форма.ВыборОтложенногоЧека", ПараметрыОткрытия, ВладелецФормы);
	ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.ВозвратПодарочныхСертификатов") Тогда
		ОткрытьФорму("Документ.ВозвратПодарочныхСертификатов.Форма.ВыборОтложенногоЧека", ПараметрыОткрытия, ВладелецФормы);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПродажаПодарочногоСертификатаОбработкаОповещения(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не Результат Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("КассаККМ", КассаККМ);
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("Основание", ПараметрыЗаполнения);
	ОткрытьФорму(
		"Документ.РеализацияПодарочныхСертификатов.Форма.ФормаДокументаРМК",
		ПараметрыОткрытияФормы,
		ВладелецФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ВозвратПодарочногоСертификатаОбработкаОповещения(Результат, ДополнительныеПараметры) Экспорт
	
	Если Не Результат Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму(
		"Документ.ЧекККМ.Форма.ОформлениеВозвратаПодарочныхСертификатов",
		Новый Структура("КассаККМ", КассаККМ),
		ВладелецФормы);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДоступныеКассыККМ()

	РабочееМесто = МенеджерОборудованияВызовСервера.ПолучитьРабочееМестоКлиента();
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НастройкиРМК.КассыККМ.(
	|		КассаККМ КАК КассаККМ,
	|		КассаККМ.ТипКассы КАК ТипКассы
	|	) КАК ДоступныеКассыККМ
	|ИЗ
	|	Справочник.НастройкиРМК КАК НастройкиРМК
	|ГДЕ
	|	НастройкиРМК.РабочееМесто = &РабочееМесто
	|	И НастройкиРМК.Ссылка В (ВЫБРАТЬ Различные Т.Ссылка Из Справочник.НастройкиРМК.КассыККМ КАК Т Где Т.КассаККМ = &КассаККМ)
	|");
	
	Запрос.УстановитьПараметр("РабочееМесто", РабочееМесто);
	Запрос.УстановитьПараметр("КассаККМ", КассаККМ);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ДоступныеКассыККМ = Новый СписокЗначений();
		ВыборкаДоступныеКассыККМ = Выборка.ДоступныеКассыККМ.Выбрать();
		Пока ВыборкаДоступныеКассыККМ.Следующий() Цикл
			Если ВыборкаДоступныеКассыККМ.ТипКассы = Перечисления.ТипыКассККМ.ФискальныйРегистратор Тогда
				ДоступныеКассыККМ.Добавить(ВыборкаДоступныеКассыККМ.КассаККМ);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
