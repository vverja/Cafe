#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы


Процедура ПервоначальноеЗаполнение_ДанныеДляОбновления(Параметры) Экспорт
	
	ШаблонТекстаПоРаспоряжению =
	// Распоряжения незакрытых заданий на перевозку
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Ссылка КАК Распоряжение
	|ИЗ
	|	Документ.ЗаказКлиента КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку.Распоряжения КАК РаспоряженияВЗаданиях
	|		ПО Т.Ссылка = РаспоряженияВЗаданиях.Распоряжение
	|			И (Т.Проведен)
	|			И (НЕ Т.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.Самовывоз),
	|				ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПоставщикаДоНашегоСклада),
	|				ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаДоНашегоСклада),
	|				ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ПустаяСсылка)))
	|			И (РаспоряженияВЗаданиях.Ссылка.Проведен)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияИРеквизитыДоставки КАК СостоянияИРеквизитыДоставки
	|		ПО (СостоянияИРеквизитыДоставки.Распоряжение = Т.Ссылка)
	|ГДЕ
	|	СостоянияИРеквизитыДоставки.Распоряжение ЕСТЬ NULL 
	|	И (&УсловиеНакладнаяНеПоЗаказу ИЛИ Т.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Распоряжения, которые еще не попали в задания на перевозку 
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Ссылка
	|ИЗ
	|	Документ.ЗаказКлиента КАК Т
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку.Распоряжения КАК РаспоряженияВЗаданиях
	|		ПО Т.Ссылка = РаспоряженияВЗаданиях.Распоряжение
	|			И (РаспоряженияВЗаданиях.Ссылка.Проведен)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияИРеквизитыДоставки КАК СостоянияИРеквизитыДоставки
	|		ПО (СостоянияИРеквизитыДоставки.Распоряжение = Т.Ссылка)
	|ГДЕ
	|	Т.Проведен
	|	И НЕ Т.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.Самовывоз),
	|		ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПоставщикаДоНашегоСклада),
	|		ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаДоНашегоСклада),
	|		ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ПустаяСсылка))
	|	И СостоянияИРеквизитыДоставки.Распоряжение ЕСТЬ NULL 
	|	И РаспоряженияВЗаданиях.Распоряжение ЕСТЬ NULL 
	|	И (&УсловиеНакладнаяНеПоЗаказу ИЛИ Т.СпособДоставки = ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчика))";
	
	ПервыйЗапрос = Истина;
	ТекстЗапроса = "";
	
	ТипыРаспоряженийНаДоставку = Метаданные.ОпределяемыеТипы.РаспоряжениеНаДоставку.Тип.Типы();
	Для Каждого ТипДокумента Из ТипыРаспоряженийНаДоставку Цикл
		ТекстЗапросаПоРаспоряжению = ШаблонТекстаПоРаспоряжению;
		Если Не ПервыйЗапрос Тогда
			ТекстЗапроса = ТекстЗапроса + 
			"
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";
		КонецЕсли;
		МетаданныеИмя = Метаданные.НайтиПоТипу(ТипДокумента).ПолноеИмя();
		Если МетаданныеИмя = "Документ.РеализацияТоваровУслуг" Тогда
			ТекстЗапросаПоРаспоряжению = СтрЗаменить(ТекстЗапросаПоРаспоряжению, "&УсловиеНакладнаяНеПоЗаказу", "НЕ Т.РеализацияПоЗаказам");
		ИначеЕсли МетаданныеИмя = "Документ.ПеремещениеТоваров" Тогда
			ТекстЗапросаПоРаспоряжению = СтрЗаменить(ТекстЗапросаПоРаспоряжению, "&УсловиеНакладнаяНеПоЗаказу", "НЕ Т.ПеремещениеПоЗаказам");
		ИначеЕсли МетаданныеИмя = "Документ.ПередачаДавальцу"
			  Или МетаданныеИмя = "Документ.ПередачаСырьяПереработчику" Тогда
			ТекстЗапросаПоРаспоряжению = СтрЗаменить(ТекстЗапросаПоРаспоряжению, "&УсловиеНакладнаяНеПоЗаказу", "ЛОЖЬ");
		Иначе
			ТекстЗапросаПоРаспоряжению = СтрЗаменить(ТекстЗапросаПоРаспоряжению, "&УсловиеНакладнаяНеПоЗаказу", "ИСТИНА");
		КонецЕсли;
			
		ТекстЗапросаПоРаспоряжению = СтрЗаменить(ТекстЗапросаПоРаспоряжению, "Документ.ЗаказКлиента", МетаданныеИмя);
		
		ТекстЗапроса    = ТекстЗапроса
			+ ТекстЗапросаПоРаспоряжению;
		
		ПервыйЗапрос = Ложь;
		
	КонецЦикла;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Распоряжения = Запрос.Выполнить().Выгрузить();
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрСведений.СостоянияИРеквизитыДоставки";
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Распоряжения, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ПервоначальноеЗаполнение(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуИзмеренийНезависимогоРегистраСведенийДляОбработки(
		Параметры.Очередь,
		"РегистрСведений.СостоянияИРеквизитыДоставки",
		Запрос.МенеджерВременныхТаблиц);
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(
		Параметры.Очередь,
		"РегистрНакопления.ТоварыКОтгрузке",
		Запрос.МенеджерВременныхТаблиц);
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(
		Параметры.Очередь,
		"РегистрНакопления.ТоварыКПоступлению",
		Запрос.МенеджерВременныхТаблиц);
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(
		Параметры.Очередь,
		"РегистрСведений.ТоварыКДоставке",
		Запрос.МенеджерВременныхТаблиц);
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(
		Параметры.Очередь,
		"Документ.ВозвратТоваровПоставщику",
		Запрос.МенеджерВременныхТаблиц);
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(
		Параметры.Очередь,
		"Документ.ЗаказКлиента",
		Запрос.МенеджерВременныхТаблиц);
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(
		Параметры.Очередь,
		"Документ.ЗаказНаПеремещение",
		Запрос.МенеджерВременныхТаблиц);
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(
		Параметры.Очередь,
		"Документ.ЗаказПоставщику",
		Запрос.МенеджерВременныхТаблиц);
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(
		Параметры.Очередь,
		"Документ.ЗаявкаНаВозвратТоваровОтКлиента",
		Запрос.МенеджерВременныхТаблиц);
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(
		Параметры.Очередь,
		"Документ.ПеремещениеТоваров",
		Запрос.МенеджерВременныхТаблиц);
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(
		Параметры.Очередь,
		"Документ.ПоступлениеТоваровУслуг",
		Запрос.МенеджерВременныхТаблиц);
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(
		Параметры.Очередь,
		"Документ.РеализацияТоваровУслуг",
		Запрос.МенеджерВременныхТаблиц);
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(
		Параметры.Очередь,
		"Документ.ЗаданиеНаПеревозку",
		Запрос.МенеджерВременныхТаблиц);
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Т.Распоряжение
	|ПОМЕСТИТЬ ВТДляОбработки
	|ИЗ
	|	#ВТДляОбработки КАК Т
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированоПоступлениеТоваровУслуг КАК ВТЗаблокированоПоступлениеТоваровУслуг
	|		ПО (ВТЗаблокированоПоступлениеТоваровУслуг.Ссылка = Т.Распоряжение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированоЗаказПоставщику КАК ВТЗаблокированоЗаказПоставщику
	|		ПО (ВТЗаблокированоЗаказПоставщику.Ссылка = Т.Распоряжение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированоВозвратТоваровПоставщику КАК ВТЗаблокированоВозвратТоваровПоставщику
	|		ПО (ВТЗаблокированоВозвратТоваровПоставщику.Ссылка = Т.Распоряжение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированоЗаявкаНаВозвратТоваровОтКлиента КАК ВТЗаблокированоЗаявкаНаВозвратТоваровОтКлиента
	|		ПО (ВТЗаблокированоЗаявкаНаВозвратТоваровОтКлиента.Ссылка = Т.Распоряжение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированоПеремещениеТоваров КАК ВТЗаблокированоПеремещениеТоваров
	|		ПО (ВТЗаблокированоПеремещениеТоваров.Ссылка = Т.Распоряжение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированоРеализацияТоваровУслуг КАК ВТЗаблокированоРеализацияТоваровУслуг
	|		ПО (ВТЗаблокированоРеализацияТоваровУслуг.Ссылка = Т.Распоряжение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированоЗаказНаПеремещение КАК ВТЗаблокированоЗаказНаПеремещение
	|		ПО (ВТЗаблокированоЗаказНаПеремещение.Ссылка = Т.Распоряжение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированоЗаказКлиента КАК ВТЗаблокированоЗаказКлиента
	|		ПО (ВТЗаблокированоЗаказКлиента.Ссылка = Т.Распоряжение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированоТоварыКДоставке КАК ВТЗаблокированоТоварыКДоставке
	|		ПО (ВТЗаблокированоТоварыКДоставке.Распоряжение = ВТЗаблокированоТоварыКДоставке.Распоряжение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКПоступлению КАК ЗаблокированоТоварыКПоступлению
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗаблокированоТоварыКПоступлению КАК ВТЗаблокированоТоварыКПоступлению
	|			ПО (ВТЗаблокированоТоварыКПоступлению.Регистратор = ЗаблокированоТоварыКПоступлению.Регистратор)
	|		ПО (ЗаблокированоТоварыКПоступлению.ДокументПоступления = Т.Распоряжение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке КАК ЗаблокированоТоварыКОтгрузке
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗаблокированоТоварыКОтгрузке КАК ВТЗаблокированоТоварыКОтгрузке
	|			ПО (ВТЗаблокированоТоварыКОтгрузке.Регистратор = ЗаблокированоТоварыКОтгрузке.Регистратор)
	|		ПО (ЗаблокированоТоварыКОтгрузке.ДокументОтгрузки = Т.Распоряжение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаблокированоЗаданиеНаПеревозку
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗаблокированоЗаданиеНаПеревозку КАК ВТЗаблокированоЗаданиеНаПеревозку
	|			ПО (ВТЗаблокированоЗаданиеНаПеревозку.Ссылка = ЗаблокированоЗаданиеНаПеревозку.Ссылка)
	|		ПО (ЗаблокированоЗаданиеНаПеревозку.Распоряжение = Т.Распоряжение)
	|ГДЕ
	|	ВТЗаблокированоПоступлениеТоваровУслуг.Ссылка ЕСТЬ NULL 
	|	И ВТЗаблокированоЗаказПоставщику.Ссылка ЕСТЬ NULL 
	|	И ВТЗаблокированоВозвратТоваровПоставщику.Ссылка ЕСТЬ NULL 
	|	И ВТЗаблокированоЗаявкаНаВозвратТоваровОтКлиента.Ссылка ЕСТЬ NULL 
	|	И ВТЗаблокированоПеремещениеТоваров.Ссылка ЕСТЬ NULL 
	|	И ВТЗаблокированоРеализацияТоваровУслуг.Ссылка ЕСТЬ NULL 
	|	И ВТЗаблокированоЗаказНаПеремещение.Ссылка ЕСТЬ NULL 
	|	И ВТЗаблокированоЗаказКлиента.Ссылка ЕСТЬ NULL 
	|	И ЗаблокированоТоварыКПоступлению.ДокументПоступления ЕСТЬ NULL 
	|	И ЗаблокированоТоварыКОтгрузке.ДокументОтгрузки ЕСТЬ NULL 
	|	И ЗаблокированоЗаданиеНаПеревозку.Распоряжение ЕСТЬ NULL
	|	И ВТЗаблокированоТоварыКДоставке.Распоряжение ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ #ВТДляОбработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЗаблокированоЗаказПоставщику
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЗаблокированоВозвратТоваровПоставщику
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЗаблокированоЗаявкаНаВозвратТоваровОтКлиента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЗаблокированоПеремещениеТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЗаблокированоРеализацияТоваровУслуг
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЗаблокированоЗаказНаПеремещение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЗаблокированоЗаказКлиента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЗаблокированоТоварыКДоставке
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЗаблокированоТоварыКПоступлению
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЗаблокированоТоварыКОтгрузке
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЗаблокированоЗаданиеНаПеревозку
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДляОбработки.Распоряжение
	|ИЗ
	|	ВТДляОбработки КАК ВТДляОбработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РаспоряженияЗаданий.Ссылка
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК РаспоряженияЗаданий
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляОбработки КАК ВТДляОбработки
	|		ПО (ВТДляОбработки.Распоряжение = РаспоряженияЗаданий.Распоряжение)";
	
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "#ВТДляОбработки", Результат.ИмяВременнойТаблицы);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ТаблицаРаспоряжений = РезультатЗапроса[РезультатЗапроса.ВГраница()-1].Выгрузить();
	МассивСсылок = ТаблицаРаспоряжений.ВыгрузитьКолонку("Распоряжение");
	
	Блокировка = Новый БлокировкаДанных;
	
	Для Каждого Ссылка Из МассивСсылок Цикл
		ЭлементБлокировки = Блокировка.Добавить(Ссылка.Метаданные().ПолноеИмя());
		ЭлементБлокировки.УстановитьЗначение("Ссылка", Ссылка);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
		
		Если Метаданные.ОпределяемыеТипы.РаспоряжениеНаОтгрузку.Тип.Типы().Найти(ТипЗнч(Ссылка)) <> Неопределено Тогда
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыКОтгрузке");
			ЭлементБлокировки.УстановитьЗначение("ДокументОтгрузки", Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
		КонецЕсли;
		
		Если Метаданные.ОпределяемыеТипы.РаспоряжениеНаПоступление.Тип.Типы().Найти(ТипЗнч(Ссылка)) <> Неопределено Тогда
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыКПоступлению");
			ЭлементБлокировки.УстановитьЗначение("ДокументПоступления", Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
		КонецЕсли;
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ТоварыКДоставке");
		ЭлементБлокировки.УстановитьЗначение("Распоряжение", Ссылка);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.СостоянияИРеквизитыДоставки");
		ЭлементБлокировки.УстановитьЗначение("Распоряжение", Ссылка);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		
	КонецЦикла;
	
	ВыборкаЗаданияНаПеревозку = РезультатЗапроса[РезультатЗапроса.ВГраница()].Выбрать();
	Пока ВыборкаЗаданияНаПеревозку.Следующий() Цикл
		ЭлементБлокировки = Блокировка.Добавить(ВыборкаЗаданияНаПеревозку.Ссылка.Метаданные().ПолноеИмя());
		ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаЗаданияНаПеревозку.Ссылка);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
	КонецЦикла;
	
	НачатьТранзакцию();
	Попытка
		Блокировка.Заблокировать();
	Исключение
		ОтменитьТранзакцию();
		ТекстСообщения = НСтр("ru='Не удалось заблокировать документы перед заполнением состояния доставки по причине: %Причина%';uk='Не вдалося заблокувати документи перед заповненням стану доставки з причини: %Причина%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),УровеньЖурналаРегистрации.Предупреждение,,,ТекстСообщения);
		Возврат;
	КонецПопытки;
	
	Попытка
		ДоставкаТоваров.ОтразитьСостояниеДоставки(МассивСсылок,,,Истина);
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ТекстСообщения = НСтр("ru='Не удалось отразить состояние доставки для некоторых документов по причине: %Причина%';uk='Не вдалося відобразити стан доставки для деяких документів з причини: %Причина%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),УровеньЖурналаРегистрации.Предупреждение,,,ТекстСообщения);
		ВызватьИсключение;
	КонецПопытки;
	
	Если ТаблицаРаспоряжений.Количество() > 0 Тогда
		
		ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
		ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
		ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрСведений.СостоянияИРеквизитыДоставки";
		// По части распоряжений могло не произойти записи состояния, исключим все из очереди
		ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ТаблицаРаспоряжений, ДополнительныеПараметры);
		
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
		Параметры.Очередь,
		"РегистрСведений.СостоянияИРеквизитыДоставки");
	
КонецПроцедуры



Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистра.Распоряжение КАК Ссылка
	|ПОМЕСТИТЬ ВТТаблицаРаспоряжений
	|ИЗ
	|	РегистрСведений.СостоянияИРеквизитыДоставки КАК ДанныеРегистра
	|ГДЕ
	|	НЕ ДанныеРегистра.Распоряжение ССЫЛКА Документ.ПоручениеЭкспедитору
	|	И ДанныеРегистра.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияДоставки.ТребуетсяДоставка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКДоставке.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку,
	|	ТоварыКДоставке.Распоряжение КАК Распоряжение,
	|	ТоварыКДоставке.Склад КАК Склад,
	|	ТоварыКДоставке.Номенклатура КАК Номенклатура,
	|	ТоварыКДоставке.Характеристика КАК Характеристика,
	|	ТоварыКДоставке.Назначение КАК Назначение,
	|	ТоварыКДоставке.Серия КАК Серия,
	|	ТоварыКДоставке.Количество КАК Количество,
	|	ТоварыКДоставке.ВсеТовары
	|ПОМЕСТИТЬ ТоварыКДоставке
	|ИЗ
	|	РегистрСведений.ТоварыКДоставке КАК ТоварыКДоставке
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТаблицаРаспоряжений КАК ТаблицаРаспоряжений
	|		ПО (ТаблицаРаспоряжений.Ссылка = ТоварыКДоставке.Распоряжение)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Распоряжение,
	|	Склад,
	|	ЗаданиеНаПеревозку
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РаспоряженияЗаданий.Распоряжение КАК Ссылка,
	|	РаспоряженияЗаданий.Склад КАК Склад,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ТоварыКДоставке.ЗаданиеНаПеревозку ЕСТЬ NULL 
	|					И ЗаданиеНаПеревозкуШапка.Проведен
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ВсеЗаданияБезТоваров,
	|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
	|				КОГДА ТоварыКДоставке.ВсеТовары
	|						И ЗаданиеНаПеревозкуШапка.Проведен
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ), ЛОЖЬ) КАК ВсеТоварыВДоставке,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА ЗаданиеНаПеревозкуШапка.Проведен
	|					И ЗаданиеНаПеревозкуШапка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданийНаПеревозку.Закрыто)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ВсеЗаданияЗакрыты,
	|	МАКСИМУМ(ЗаданиеНаПеревозкуШапка.Проведен) КАК ЕстьПроведенныеЗадания
	|ПОМЕСТИТЬ ТаблицаПроверкиЗаданийИТоваровВДоставке
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК РаспоряженияЗаданий
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозкуШапка
	|		ПО РаспоряженияЗаданий.Ссылка = ЗаданиеНаПеревозкуШапка.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТаблицаРаспоряжений КАК ТаблицаРаспоряжений
	|		ПО (ТаблицаРаспоряжений.Ссылка = РаспоряженияЗаданий.Распоряжение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыКДоставке КАК ТоварыКДоставке
	|		ПО РаспоряженияЗаданий.Распоряжение = ТоварыКДоставке.Распоряжение
	|			И РаспоряженияЗаданий.Склад = ТоварыКДоставке.Склад
	|			И РаспоряженияЗаданий.Ссылка = ТоварыКДоставке.ЗаданиеНаПеревозку
	|
	|СГРУППИРОВАТЬ ПО
	|	РаспоряженияЗаданий.Распоряжение,
	|	РаспоряженияЗаданий.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИСТИНА КАК ЕстьНедоставленные,
	|	Т.Распоряжение КАК Ссылка,
	|	Т.Склад
	|ПОМЕСТИТЬ РаспоряженияЧастичноВДоставке
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыКДоставке.Распоряжение КАК Распоряжение,
	|		ТоварыКДоставке.Склад КАК Склад,
	|		ТоварыКДоставке.Номенклатура КАК Номенклатура,
	|		ТоварыКДоставке.Характеристика КАК Характеристика,
	|		ТоварыКДоставке.Назначение КАК Назначение,
	|		ТоварыКДоставке.Серия КАК Серия,
	|		-ТоварыКДоставке.Количество КАК Количество
	|	ИЗ
	|		ТоварыКДоставке КАК ТоварыКДоставке
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПроверкиЗаданийИТоваровВДоставке КАК ТаблицаПроверки
	|			ПО (ТаблицаПроверки.Склад = ТоварыКДоставке.Склад)
	|				И (ТаблицаПроверки.Ссылка = ТоварыКДоставке.Распоряжение)
	|				И (НЕ ТаблицаПроверки.ВсеТоварыВДоставке)
	|				И (ТаблицаПроверки.ЕстьПроведенныеЗадания)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыКОтгрузке.ДокументОтгрузки,
	|		ТоварыКОтгрузке.Склад,
	|		ТоварыКОтгрузке.Номенклатура,
	|		ТоварыКОтгрузке.Характеристика,
	|		ТоварыКОтгрузке.Назначение,
	|		ТоварыКОтгрузке.Серия,
	|		ТоварыКОтгрузке.КОтгрузкеПриход
	|	ИЗ
	|		РегистрНакопления.ТоварыКОтгрузке.Обороты(, , , ) КАК ТоварыКОтгрузке
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПроверкиЗаданийИТоваровВДоставке КАК ТаблицаПроверки
	|			ПО (ТаблицаПроверки.Склад = ТоварыКОтгрузке.Склад)
	|				И (ТаблицаПроверки.Ссылка = ТоварыКОтгрузке.ДокументОтгрузки)
	|				И (НЕ ТаблицаПроверки.ВсеТоварыВДоставке)
	|				И (ТаблицаПроверки.ЕстьПроведенныеЗадания)
	|	ГДЕ
	|		ТоварыКОтгрузке.КОтгрузкеПриход > 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеРаспоряженийПоТоварам.Ссылка,
	|		ДанныеРаспоряженийПоТоварам.Склад,
	|		ДанныеРаспоряженийПоТоварам.Номенклатура,
	|		ДанныеРаспоряженийПоТоварам.Характеристика,
	|		ДанныеРаспоряженийПоТоварам.Назначение,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка),
	|		ДанныеРаспоряженийПоТоварам.Количество
	|	ИЗ
	|		Документ.ЗаказПоставщику.Товары КАК ДанныеРаспоряженийПоТоварам
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПроверкиЗаданийИТоваровВДоставке КАК ТаблицаПроверки
	|			ПО (ТаблицаПроверки.Склад = ДанныеРаспоряженийПоТоварам.Склад)
	|				И (ТаблицаПроверки.Ссылка = ДанныеРаспоряженийПоТоварам.Ссылка)
	|				И (НЕ ТаблицаПроверки.ВсеТоварыВДоставке)
	|				И (ТаблицаПроверки.ЕстьПроведенныеЗадания)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеРаспоряженийПоТоварам.Ссылка,
	|		ДанныеРаспоряженийПоТоварам.Склад,
	|		ДанныеРаспоряженийПоТоварам.Номенклатура,
	|		ДанныеРаспоряженийПоТоварам.Характеристика,
	|		ДанныеРаспоряженийПоТоварам.Назначение,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка),
	|		ДанныеРаспоряженийПоТоварам.Количество
	|	ИЗ
	|		Документ.ПоступлениеТоваровУслуг.Товары КАК ДанныеРаспоряженийПоТоварам
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПроверкиЗаданийИТоваровВДоставке КАК ТаблицаПроверки
	|			ПО (ТаблицаПроверки.Склад = ДанныеРаспоряженийПоТоварам.Склад)
	|				И (ТаблицаПроверки.Ссылка = ДанныеРаспоряженийПоТоварам.Ссылка)
	|				И (НЕ ТаблицаПроверки.ВсеТоварыВДоставке)
	|				И (ТаблицаПроверки.ЕстьПроведенныеЗадания)) КАК Т
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Распоряжение,
	|	Т.Склад,
	|	Т.Характеристика,
	|	Т.Назначение,
	|	Т.Серия,
	|	Т.Номенклатура
	|
	|ИМЕЮЩИЕ
	|	СУММА(Т.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИСТИНА КАК НетОстатка,
	|	ТоварыКПоступлениюОбороты.ДокументПоступления КАК ДокументОтгрузкиПоступления,
	|	ТоварыКПоступлениюОбороты.Склад КАК Склад
	|ПОМЕСТИТЬ ОстаткиКОтгрузкеКПоступлению
	|ИЗ
	|	РегистрНакопления.ТоварыКПоступлению.Обороты(, , , ) КАК ТоварыКПоступлениюОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТаблицаРаспоряжений КАК ТаблицаРаспоряжений
	|		ПО (ТаблицаРаспоряжений.Ссылка = ТоварыКПоступлениюОбороты.ДокументПоступления)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКПоступлению.Остатки() КАК ОстаткиТоварыКПоступлению
	|		ПО ТоварыКПоступлениюОбороты.ДокументПоступления = ОстаткиТоварыКПоступлению.ДокументПоступления
	|			И ТоварыКПоступлениюОбороты.Склад = ОстаткиТоварыКПоступлению.Склад
	|ГДЕ
	|	ТоварыКПоступлениюОбороты.КПоступлениюПриход > 0
	|	И ОстаткиТоварыКПоступлению.КПоступлениюОстаток ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИСТИНА,
	|	ТоварыКОтгрузкеОбороты.ДокументОтгрузки,
	|	ТоварыКОтгрузкеОбороты.Склад
	|ИЗ
	|	РегистрНакопления.ТоварыКОтгрузке.Обороты(, , , ) КАК ТоварыКОтгрузкеОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТаблицаРаспоряжений КАК ТаблицаРаспоряжений
	|		ПО (ТаблицаРаспоряжений.Ссылка = ТоварыКОтгрузкеОбороты.ДокументОтгрузки)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке.Остатки(, ) КАК ОстаткиТоварыКОтгрузке
	|		ПО ТоварыКОтгрузкеОбороты.ДокументОтгрузки = ОстаткиТоварыКОтгрузке.ДокументОтгрузки
	|			И ТоварыКОтгрузкеОбороты.Склад = ОстаткиТоварыКОтгрузке.Склад
	|ГДЕ
	|	ТоварыКОтгрузкеОбороты.КОтгрузкеПриход > 0
	|	И ОстаткиТоварыКОтгрузке.КОтгрузкеОстаток ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПроверки.Ссылка КАК Распоряжение
	|ИЗ
	|	ТаблицаПроверкиЗаданийИТоваровВДоставке КАК ТаблицаПроверки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РаспоряженияЧастичноВДоставке КАК РаспоряженияЧастичноВДоставке
	|		ПО ТаблицаПроверки.Ссылка = РаспоряженияЧастичноВДоставке.Ссылка
	|			И ТаблицаПроверки.Склад = РаспоряженияЧастичноВДоставке.Склад
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиКОтгрузкеКПоступлению КАК ОстаткиКОтгрузкеКПоступлению
	|		ПО ТаблицаПроверки.Ссылка = ОстаткиКОтгрузкеКПоступлению.ДокументОтгрузкиПоступления
	|			И ТаблицаПроверки.Склад = ОстаткиКОтгрузкеКПоступлению.Склад
	|ГДЕ
	|	(ТаблицаПроверки.ВсеЗаданияБезТоваров
	|			ИЛИ ТаблицаПроверки.ВсеЗаданияЗакрыты = ИСТИНА
	|				И ОстаткиКОтгрузкеКПоступлению.НетОстатка
	|			ИЛИ ТаблицаПроверки.ВсеЗаданияЗакрыты = ИСТИНА
	|				И РаспоряженияЧастичноВДоставке.Ссылка ЕСТЬ NULL )";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрСведений.СостоянияИРеквизитыДоставки";
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить(),ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуИзмеренийНезависимогоРегистраСведенийДляОбработки(
		Параметры.Очередь,
		"РегистрСведений.СостоянияИРеквизитыДоставки",
		Запрос.МенеджерВременныхТаблиц);
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(
		Параметры.Очередь,
		"РегистрНакопления.ТоварыКОтгрузке",
		Запрос.МенеджерВременныхТаблиц);
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(
		Параметры.Очередь,
		"РегистрНакопления.ТоварыКПоступлению",
		Запрос.МенеджерВременныхТаблиц);
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(
		Параметры.Очередь,
		"РегистрСведений.ТоварыКДоставке",
		Запрос.МенеджерВременныхТаблиц);
	
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(
		Параметры.Очередь,
		"Документ.ЗаказПоставщику",
		Запрос.МенеджерВременныхТаблиц);
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(
		Параметры.Очередь,
		"Документ.ПоступлениеТоваровУслуг",
		Запрос.МенеджерВременныхТаблиц);
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(
		Параметры.Очередь,
		"Документ.ЗаданиеНаПеревозку",
		Запрос.МенеджерВременныхТаблиц);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Т.Распоряжение
	|ПОМЕСТИТЬ ВТДляОбработки
	|ИЗ
	|	#ВТДляОбработки КАК Т
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированоПоступлениеТоваровУслуг КАК ВТЗаблокированоПоступлениеТоваровУслуг
	|		ПО (ВТЗаблокированоПоступлениеТоваровУслуг.Ссылка = Т.Распоряжение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированоЗаказПоставщику КАК ВТЗаблокированоЗаказПоставщику
	|		ПО (ВТЗаблокированоЗаказПоставщику.Ссылка = Т.Распоряжение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированоТоварыКДоставке КАК ВТЗаблокированоТоварыКДоставке
	|		ПО (ВТЗаблокированоТоварыКДоставке.Распоряжение = ВТЗаблокированоТоварыКДоставке.Распоряжение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКПоступлению КАК ЗаблокированоТоварыКПоступлению
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗаблокированоТоварыКПоступлению КАК ВТЗаблокированоТоварыКПоступлению
	|			ПО (ВТЗаблокированоТоварыКПоступлению.Регистратор = ЗаблокированоТоварыКПоступлению.Регистратор)
	|		ПО (ЗаблокированоТоварыКПоступлению.ДокументПоступления = Т.Распоряжение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке КАК ЗаблокированоТоварыКОтгрузке
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗаблокированоТоварыКОтгрузке КАК ВТЗаблокированоТоварыКОтгрузке
	|			ПО (ВТЗаблокированоТоварыКОтгрузке.Регистратор = ЗаблокированоТоварыКОтгрузке.Регистратор)
	|		ПО (ЗаблокированоТоварыКОтгрузке.ДокументОтгрузки = Т.Распоряжение)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаблокированоЗаданиеНаПеревозку
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЗаблокированоЗаданиеНаПеревозку КАК ВТЗаблокированоЗаданиеНаПеревозку
	|			ПО (ВТЗаблокированоЗаданиеНаПеревозку.Ссылка = ЗаблокированоЗаданиеНаПеревозку.Ссылка)
	|		ПО (ЗаблокированоЗаданиеНаПеревозку.Распоряжение = Т.Распоряжение)
	|ГДЕ
	|	ВТЗаблокированоПоступлениеТоваровУслуг.Ссылка ЕСТЬ NULL 
	|	И ВТЗаблокированоЗаказПоставщику.Ссылка ЕСТЬ NULL 
	|	И ЗаблокированоТоварыКПоступлению.ДокументПоступления ЕСТЬ NULL 
	|	И ЗаблокированоТоварыКОтгрузке.ДокументОтгрузки ЕСТЬ NULL 
	|	И ЗаблокированоЗаданиеНаПеревозку.Распоряжение ЕСТЬ NULL
	|	И ВТЗаблокированоТоварыКДоставке.Распоряжение ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ #ВТДляОбработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЗаблокированоПоступлениеТоваровУслуг
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЗаблокированоЗаказПоставщику
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЗаблокированоТоварыКДоставке
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЗаблокированоТоварыКПоступлению
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЗаблокированоТоварыКОтгрузке
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЗаблокированоЗаданиеНаПеревозку
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДляОбработки.Распоряжение
	|ИЗ
	|	ВТДляОбработки КАК ВТДляОбработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РаспоряженияЗаданий.Ссылка
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК РаспоряженияЗаданий
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляОбработки КАК ВТДляОбработки
	|		ПО (ВТДляОбработки.Распоряжение = РаспоряженияЗаданий.Распоряжение)";
	
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "#ВТДляОбработки", Результат.ИмяВременнойТаблицы);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ТаблицаРаспоряжений = РезультатЗапроса[РезультатЗапроса.ВГраница()-1].Выгрузить();
	МассивСсылок = ТаблицаРаспоряжений.ВыгрузитьКолонку("Распоряжение");
	
	Блокировка = Новый БлокировкаДанных;
	
	Для Каждого Ссылка Из МассивСсылок Цикл
		ЭлементБлокировки = Блокировка.Добавить(Ссылка.Метаданные().ПолноеИмя());
		ЭлементБлокировки.УстановитьЗначение("Ссылка", Ссылка);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
		
		Если Метаданные.ОпределяемыеТипы.РаспоряжениеНаОтгрузку.Тип.Типы().Найти(ТипЗнч(Ссылка)) <> Неопределено Тогда
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыКОтгрузке");
			ЭлементБлокировки.УстановитьЗначение("ДокументОтгрузки", Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
		КонецЕсли;
		
		Если Метаданные.ОпределяемыеТипы.РаспоряжениеНаПоступление.Тип.Типы().Найти(ТипЗнч(Ссылка)) <> Неопределено Тогда
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыКПоступлению");
			ЭлементБлокировки.УстановитьЗначение("ДокументПоступления", Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
		КонецЕсли;
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ТоварыКДоставке");
		ЭлементБлокировки.УстановитьЗначение("Распоряжение", Ссылка);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.СостоянияИРеквизитыДоставки");
		ЭлементБлокировки.УстановитьЗначение("Распоряжение", Ссылка);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		
	КонецЦикла;
	
	ВыборкаЗаданияНаПеревозку = РезультатЗапроса[РезультатЗапроса.ВГраница()].Выбрать();
	Пока ВыборкаЗаданияНаПеревозку.Следующий() Цикл
		ЭлементБлокировки = Блокировка.Добавить(ВыборкаЗаданияНаПеревозку.Ссылка.Метаданные().ПолноеИмя());
		ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаЗаданияНаПеревозку.Ссылка);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
	КонецЦикла;
	
	НачатьТранзакцию();
	Попытка
		Блокировка.Заблокировать();
	Исключение
		ОтменитьТранзакцию();
		ТекстСообщения = НСтр("ru='Не удалось заблокировать данные перед отражением состояния доставки по причине: %Причина%';uk='Не вдалося заблокувати дані перед відображенням стану доставки з причини: %Причина%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),УровеньЖурналаРегистрации.Предупреждение,,,ТекстСообщения);
		Возврат;
	КонецПопытки;
	
	Попытка
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТоварыКДоставке.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку,
		|	ТоварыКДоставке.Распоряжение КАК Распоряжение,
		|	ТоварыКДоставке.Склад КАК Склад,
		|	ТоварыКДоставке.Номенклатура КАК Номенклатура,
		|	ТоварыКДоставке.Характеристика КАК Характеристика,
		|	ТоварыКДоставке.Назначение КАК Назначение,
		|	ТоварыКДоставке.Серия КАК Серия,
		|	ТоварыКДоставке.Количество КАК Количество,
		|	ТоварыКДоставке.ВсеТовары
		|ПОМЕСТИТЬ ТоварыКДоставке
		|ИЗ
		|	РегистрСведений.ТоварыКДоставке КАК ТоварыКДоставке
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляОбработки КАК ВТДляОбработки
		|		ПО (ВТДляОбработки.Распоряжение = ТоварыКДоставке.Распоряжение)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Распоряжение,
		|	Склад,
		|	ЗаданиеНаПеревозку
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РаспоряженияЗаданий.Распоряжение КАК Ссылка,
		|	РаспоряженияЗаданий.Склад КАК Склад,
		|	МИНИМУМ(ВЫБОР
		|			КОГДА ТоварыКДоставке.ЗаданиеНаПеревозку ЕСТЬ NULL 
		|					И ЗаданиеНаПеревозкуШапка.Проведен
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК ВсеЗаданияБезТоваров,
		|	ЕСТЬNULL(МАКСИМУМ(ВЫБОР
		|				КОГДА ТоварыКДоставке.ВсеТовары
		|						И ЗаданиеНаПеревозкуШапка.Проведен
		|					ТОГДА ИСТИНА
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ), ЛОЖЬ) КАК ВсеТоварыВДоставке,
		|	МИНИМУМ(ВЫБОР
		|			КОГДА ЗаданиеНаПеревозкуШапка.Проведен
		|					И ЗаданиеНаПеревозкуШапка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданийНаПеревозку.Закрыто)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК ВсеЗаданияЗакрыты,
		|	МАКСИМУМ(ЗаданиеНаПеревозкуШапка.Проведен) КАК ЕстьПроведенныеЗадания
		|ПОМЕСТИТЬ ТаблицаПроверкиЗаданийИТоваровВДоставке
		|ИЗ
		|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК РаспоряженияЗаданий
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозкуШапка
		|		ПО РаспоряженияЗаданий.Ссылка = ЗаданиеНаПеревозкуШапка.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляОбработки КАК ВТДляОбработки
		|		ПО (ВТДляОбработки.Распоряжение = РаспоряженияЗаданий.Распоряжение)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыКДоставке КАК ТоварыКДоставке
		|		ПО РаспоряженияЗаданий.Распоряжение = ТоварыКДоставке.Распоряжение
		|			И РаспоряженияЗаданий.Склад = ТоварыКДоставке.Склад
		|			И РаспоряженияЗаданий.Ссылка = ТоварыКДоставке.ЗаданиеНаПеревозку
		|
		|СГРУППИРОВАТЬ ПО
		|	РаспоряженияЗаданий.Распоряжение,
		|	РаспоряженияЗаданий.Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИСТИНА КАК ЕстьНедоставленные,
		|	Т.Распоряжение КАК Ссылка,
		|	Т.Склад
		|ПОМЕСТИТЬ РаспоряженияЧастичноВДоставке
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТоварыКДоставке.Распоряжение КАК Распоряжение,
		|		ТоварыКДоставке.Склад КАК Склад,
		|		ТоварыКДоставке.Номенклатура КАК Номенклатура,
		|		ТоварыКДоставке.Характеристика КАК Характеристика,
		|		ТоварыКДоставке.Назначение КАК Назначение,
		|		ТоварыКДоставке.Серия КАК Серия,
		|		-ТоварыКДоставке.Количество КАК Количество
		|	ИЗ
		|		ТоварыКДоставке КАК ТоварыКДоставке
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПроверкиЗаданийИТоваровВДоставке КАК ТаблицаПроверки
		|			ПО (ТаблицаПроверки.Склад = ТоварыКДоставке.Склад)
		|				И (ТаблицаПроверки.Ссылка = ТоварыКДоставке.Распоряжение)
		|				И (НЕ ТаблицаПроверки.ВсеТоварыВДоставке)
		|				И (ТаблицаПроверки.ЕстьПроведенныеЗадания)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТоварыКОтгрузке.ДокументОтгрузки,
		|		ТоварыКОтгрузке.Склад,
		|		ТоварыКОтгрузке.Номенклатура,
		|		ТоварыКОтгрузке.Характеристика,
		|		ТоварыКОтгрузке.Назначение,
		|		ТоварыКОтгрузке.Серия,
		|		ТоварыКОтгрузке.КОтгрузкеПриход
		|	ИЗ
		|		РегистрНакопления.ТоварыКОтгрузке.Обороты(, , , ) КАК ТоварыКОтгрузке
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПроверкиЗаданийИТоваровВДоставке КАК ТаблицаПроверки
		|			ПО (ТаблицаПроверки.Склад = ТоварыКОтгрузке.Склад)
		|				И (ТаблицаПроверки.Ссылка = ТоварыКОтгрузке.ДокументОтгрузки)
		|				И (НЕ ТаблицаПроверки.ВсеТоварыВДоставке)
		|				И (ТаблицаПроверки.ЕстьПроведенныеЗадания)
		|	ГДЕ
		|		ТоварыКОтгрузке.КОтгрузкеПриход > 0
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДанныеРаспоряженийПоТоварам.Ссылка,
		|		ДанныеРаспоряженийПоТоварам.Склад,
		|		ДанныеРаспоряженийПоТоварам.Номенклатура,
		|		ДанныеРаспоряженийПоТоварам.Характеристика,
		|		ДанныеРаспоряженийПоТоварам.Назначение,
		|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка),
		|		ДанныеРаспоряженийПоТоварам.Количество
		|	ИЗ
		|		Документ.ЗаказПоставщику.Товары КАК ДанныеРаспоряженийПоТоварам
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПроверкиЗаданийИТоваровВДоставке КАК ТаблицаПроверки
		|			ПО (ТаблицаПроверки.Склад = ДанныеРаспоряженийПоТоварам.Склад)
		|				И (ТаблицаПроверки.Ссылка = ДанныеРаспоряженийПоТоварам.Ссылка)
		|				И (НЕ ТаблицаПроверки.ВсеТоварыВДоставке)
		|				И (ТаблицаПроверки.ЕстьПроведенныеЗадания)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДанныеРаспоряженийПоТоварам.Ссылка,
		|		ДанныеРаспоряженийПоТоварам.Склад,
		|		ДанныеРаспоряженийПоТоварам.Номенклатура,
		|		ДанныеРаспоряженийПоТоварам.Характеристика,
		|		ДанныеРаспоряженийПоТоварам.Назначение,
		|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка),
		|		ДанныеРаспоряженийПоТоварам.Количество
		|	ИЗ
		|		Документ.ПоступлениеТоваровУслуг.Товары КАК ДанныеРаспоряженийПоТоварам
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаПроверкиЗаданийИТоваровВДоставке КАК ТаблицаПроверки
		|			ПО (ТаблицаПроверки.Склад = ДанныеРаспоряженийПоТоварам.Склад)
		|				И (ТаблицаПроверки.Ссылка = ДанныеРаспоряженийПоТоварам.Ссылка)
		|				И (НЕ ТаблицаПроверки.ВсеТоварыВДоставке)
		|				И (ТаблицаПроверки.ЕстьПроведенныеЗадания)) КАК Т
		|
		|СГРУППИРОВАТЬ ПО
		|	Т.Распоряжение,
		|	Т.Склад,
		|	Т.Характеристика,
		|	Т.Назначение,
		|	Т.Серия,
		|	Т.Номенклатура
		|
		|ИМЕЮЩИЕ
		|	СУММА(Т.Количество) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИСТИНА КАК НетОстатка,
		|	ТоварыКПоступлениюОбороты.ДокументПоступления КАК ДокументОтгрузкиПоступления,
		|	ТоварыКПоступлениюОбороты.Склад КАК Склад
		|ПОМЕСТИТЬ ОстаткиКОтгрузкеКПоступлению
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению.Обороты() КАК ТоварыКПоступлениюОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляОбработки КАК ВТДляОбработки
		|		ПО (ВТДляОбработки.Распоряжение = ТоварыКПоступлениюОбороты.ДокументПоступления)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКПоступлению.Остатки() КАК ОстаткиТоварыКПоступлению
		|		ПО ТоварыКПоступлениюОбороты.ДокументПоступления = ОстаткиТоварыКПоступлению.ДокументПоступления
		|			И ТоварыКПоступлениюОбороты.Склад = ОстаткиТоварыКПоступлению.Склад
		|ГДЕ
		|	ТоварыКПоступлениюОбороты.КПоступлениюПриход > 0
		|	И ОстаткиТоварыКПоступлению.КПоступлениюОстаток ЕСТЬ NULL 
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ИСТИНА,
		|	ТоварыКОтгрузкеОбороты.ДокументОтгрузки,
		|	ТоварыКОтгрузкеОбороты.Склад
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.Обороты() КАК ТоварыКОтгрузкеОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляОбработки КАК ВТДляОбработки
		|		ПО (ВТДляОбработки.Распоряжение = ТоварыКОтгрузкеОбороты.ДокументОтгрузки)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке.Остатки() КАК ОстаткиТоварыКОтгрузке
		|		ПО ТоварыКОтгрузкеОбороты.ДокументОтгрузки = ОстаткиТоварыКОтгрузке.ДокументОтгрузки
		|			И ТоварыКОтгрузкеОбороты.Склад = ОстаткиТоварыКОтгрузке.Склад
		|ГДЕ
		|	ТоварыКОтгрузкеОбороты.КОтгрузкеПриход > 0
		|	И ОстаткиТоварыКОтгрузке.КОтгрузкеОстаток ЕСТЬ NULL 
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаПроверки.Ссылка КАК Ссылка,
		|	ТаблицаПроверки.Склад КАК Склад
		|ИЗ
		|	ТаблицаПроверкиЗаданийИТоваровВДоставке КАК ТаблицаПроверки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РаспоряженияЧастичноВДоставке КАК РаспоряженияЧастичноВДоставке
		|		ПО ТаблицаПроверки.Ссылка = РаспоряженияЧастичноВДоставке.Ссылка
		|			И ТаблицаПроверки.Склад = РаспоряженияЧастичноВДоставке.Склад
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиКОтгрузкеКПоступлению КАК ОстаткиКОтгрузкеКПоступлению
		|		ПО ТаблицаПроверки.Ссылка = ОстаткиКОтгрузкеКПоступлению.ДокументОтгрузкиПоступления
		|			И ТаблицаПроверки.Склад = ОстаткиКОтгрузкеКПоступлению.Склад
		|ГДЕ
		|	(ТаблицаПроверки.ВсеЗаданияБезТоваров
		|			ИЛИ ТаблицаПроверки.ВсеЗаданияЗакрыты = ИСТИНА
		|				И ОстаткиКОтгрузкеКПоступлению.НетОстатка
		|			ИЛИ ТаблицаПроверки.ВсеЗаданияЗакрыты = ИСТИНА
		|				И РаспоряженияЧастичноВДоставке.Ссылка ЕСТЬ NULL )";
		
		Запрос.Текст = ТекстЗапроса;
		Выборка = Запрос.Выполнить().Выбрать();
		Набор = РегистрыСведений.СостоянияИРеквизитыДоставки.СоздатьНаборЗаписей();
		Пока Выборка.Следующий() Цикл
			Набор.Отбор.Распоряжение.Установить(Выборка.Ссылка);
			Набор.Отбор.Склад.Установить(Выборка.Склад);
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
		КонецЦикла;
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ТекстСообщения = НСтр("ru='Не удалось отразить состояние доставки для некоторых документов по причине: %Причина%';uk='Не вдалося відобразити стан доставки для деяких документів з причини: %Причина%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),УровеньЖурналаРегистрации.Предупреждение,,,ТекстСообщения);
		ВызватьИсключение;
	КонецПопытки;
	
	Если ТаблицаРаспоряжений.Количество() > 0 Тогда
		
		ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
		ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
		ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрСведений.СостоянияИРеквизитыДоставки";
		// По части распоряжений могло не произойти записи состояния, исключим все из очереди
		ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ТаблицаРаспоряжений, ДополнительныеПараметры);
		
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
		Параметры.Очередь,
		"РегистрСведений.СостоянияИРеквизитыДоставки");
	
КонецПроцедуры


#КонецОбласти

#КонецОбласти

#КонецЕсли