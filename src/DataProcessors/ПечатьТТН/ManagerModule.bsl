#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Печать

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТТН") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ТТН",
			НСтр("ru='Товарно-транспортная накладная';uk='Товарно-транспортна накладна'"),
			СформироватьПечатнуюФормуТТН(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));	
	КонецЕсли;
	
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуТТН(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, КомплектыПечати = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТипДокументов = ТипЗнч(МассивОбъектов[0]);

	Если ТипДокументов <> Тип("ДокументСсылка.ТранспортнаяНакладная") Тогда 
		СтруктураВозврата = УправлениеПечатьюУТВызовСервера.ПолучитьТранспортныеНакладныеНаПечать(МассивОбъектов);
		МассивНакладныхНаПечать = СтруктураВозврата.ТранспортныеНакладныеНаПечать;
		
		Для Каждого Документ Из СтруктураВозврата.МассивДокументовБезНакладных Цикл
			
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Для документа %1 не создана ""Транспортная накладная"". Печать документа ""Товарно-транспортная накладная"" невозможна.';uk='Для документа %1 не створена ""Транспортна накладна"". Друк документа ""Товарно-транспортна накладна"" неможливий.'"),
					Документ);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					Текст,
					Документ)
					
		КонецЦикла
				
	Иначе
		МассивНакладныхНаПечать = МассивОбъектов;	
	КонецЕсли;
	
	ТаблицаНакладныхНаПечать = Новый ТаблицаЗначений;
	ОписаниеТипаТранспортнаяНакладная = Новый ОписаниеТипов("ДокументСсылка.ТранспортнаяНакладная");
	ОписаниеТипаЧисло = Новый ОписаниеТипов("Число");
	ТаблицаНакладныхНаПечать.Колонки.Добавить("ТранспортнаяНакладная", ОписаниеТипаТранспортнаяНакладная);
	ТаблицаНакладныхНаПечать.Колонки.Добавить("ПорядковыйНомер", ОписаниеТипаЧисло);
	
	ПорядковыйНомер = 0;
	Для Каждого Накладная Из МассивНакладныхНаПечать Цикл 
		СтрокаТаблицы = ТаблицаНакладныхНаПечать.Добавить();	
		СтрокаТаблицы.ТранспортнаяНакладная = Накладная;
		СтрокаТаблицы.ПорядковыйНомер = ПорядковыйНомер;
		ПорядковыйНомер = ПорядковыйНомер  + 1;
	КонецЦикла;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ЗаполнитьНастройкиТабДокумента(ТабличныйДокумент);
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТТН";
	
	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени("Документ.ТранспортнаяНакладная");
	ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыТТН(ПараметрыПечати, ТаблицаНакладныхНаПечать);
	
	ЗаполнитьТабличныйДокументТТН(
				ТабличныйДокумент,
				ДанныеДляПечати,
				ОбъектыПечати,
				КомплектыПечати);	
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьНастройкиТабДокумента(ТабличныйДокумент)
	
	ТабличныйДокумент.ПолеСверху = 0;
	ТабличныйДокумент.ПолеСлева = 5;
	ТабличныйДокумент.ПолеСнизу = 0;
	ТабличныйДокумент.ПолеСправа = 5;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
КонецПроцедуры // ЗаполнитьНастройкиТабДокумента



Функция СтруктураИтоговыеСуммыТТН()
	
	Структура = Новый Структура;
	
	
	// Инициализация итогов по документу.
	Структура.Вставить("ИтогоМассаБрутто", 0);
	Структура.Вставить("ИтогоМест", 0);
	Структура.Вставить("ИтогоКоличество", 0);
	Структура.Вставить("ИтогоСумма", 0);
	Структура.Вставить("ИтогоМассаНетто", 0);
	
	Структура.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", 0);
	Структура.Вставить("СуммаПрописью", "");
	Структура.Вставить("МассаПрописью", "");
	Структура.Вставить("МестПрописью", "");
	Структура.Вставить("ИтогоСуммаНДС", 0);
	Структура.Вставить("ИтогоСуммаНДССВалютой", "");
	
	Возврат Структура;
	
КонецФункции // СтруктураИтоговыеСуммы()

Функция СтруктураДанныеСтрокиТТН()
	
	Структура = Новый Структура;
	Структура.Вставить("Номер", 0);
	Структура.Вставить("Мест", 0);
	Структура.Вставить("Количество", 0);
	Структура.Вставить("Цена", 0);
	Структура.Вставить("Сумма", 0);
	Структура.Вставить("МассаБрутто", 0);
	Структура.Вставить("СуммаНДС", 0);
	
	Возврат Структура;
	
КонецФункции // СтруктураДанныеСтроки()

Процедура РассчитатьИтоговыеСуммыТТН(ИтоговыеСуммы, ДанныеСтроки)
	
	
	// Увеличим итоги по документу.
	ИтоговыеСуммы.ИтогоМест        = ИтоговыеСуммы.ИтогоМест        + ДанныеСтроки.Мест;
	ИтоговыеСуммы.ИтогоКоличество  = ИтоговыеСуммы.ИтогоКоличество  + ДанныеСтроки.Количество;
	ИтоговыеСуммы.ИтогоСумма       = ИтоговыеСуммы.ИтогоСумма       + ДанныеСтроки.Сумма;
	ИтоговыеСуммы.ИтогоМассаБрутто = ИтоговыеСуммы.ИтогоМассаБрутто + ДанныеСтроки.МассаБрутто;
	ИтоговыеСуммы.ИтогоСуммаНДС    = ИтоговыеСуммы.ИтогоСуммаНДС    + ДанныеСтроки.СуммаНДС;
	
КонецПроцедуры


Процедура ДобавитьИтоговыеДанныеПодвалаТТН(ИтоговыеСуммы, ВсегоНомеров, ВалютаРегламентированногоУчета, КоэффициентПересчетаВТонны)	

	
	ИтоговыеСуммы.Вставить("СуммаПрописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(ИтоговыеСуммы.ИтогоСумма, ВалютаРегламентированногоУчета,,"uk"));
	
	КоличествоМест = ?(Цел(ИтоговыеСуммы.ИтогоМест) = ИтоговыеСуммы.ИтогоМест, ИтоговыеСуммы.ИтогоМест, Цел(ИтоговыеСуммы.ИтогоМест) + 1);
	КоличествоМестПрописью = НРег(ЧислоПрописью(КоличествоМест,"Л=uk_UK", ",,,с"));
	ИтоговыеСуммы.Вставить("МестПрописью", Лев(КоличествоМестПрописью, СтрДлина(КоличествоМестПрописью)-3));
	
	ИтоговыеСуммы.ИтогоМассаБрутто = Окр(ИтоговыеСуммы.ИтогоМассаБрутто*КоэффициентПересчетаВТонны, 2 , РежимОкругления.Окр15как20);
	Масса = ?(Цел(ИтоговыеСуммы.ИтогоМассаБрутто) = ИтоговыеСуммы.ИтогоМассаБрутто, ИтоговыеСуммы.ИтогоМассаБрутто, Цел(ИтоговыеСуммы.ИтогоМассаБрутто) + 1);
	МассаПрописью = НРег(ЧислоПрописью(Масса,"Л=uk_UK", ",,,ж"));
	ИтоговыеСуммы.Вставить("МассаПрописью", ?(Масса = 0, "", Лев(МассаПрописью, СтрДлина(МассаПрописью)-3)));
	
	ИтоговыеСуммы.Вставить("ИтогоСуммаНДССВалютой", ФормированиеПечатныхФорм.ФорматСумм(ИтоговыеСуммы.ИтогоСуммаНДС, ВалютаРегламентированногоУчета, "0"));
	
КонецПроцедуры

Процедура ДобавитьИтоговыеДанныеПодвалаТТНДляНесколькихНакладных(ИтоговыеСуммы, ВсегоНомеров, ВалютаРегламентированногоУчета, КоэффициентПересчетаВТонны)		
	
	ИтоговыеСуммы.Вставить("СуммаПрописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(ИтоговыеСуммы.ИтогоСумма, ВалютаРегламентированногоУчета));
	ДобавитьИтоговыеДанныеПодвалаТТН(ИтоговыеСуммы, ВсегоНомеров, ВалютаРегламентированногоУчета, КоэффициентПересчетаВТонны);
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыСтрокиТовараТТН(ДанныеПечати, СтрокаТовары, ДанныеСтроки, ОбластьМакета, ЕдиницаИзмеренияВеса = Неопределено, КоэффициентПересчетаВТонны = 0)
	
	ОбластьМакета.Параметры.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
		СтрокаТовары.ТоварНаименование,
		СтрокаТовары.Характеристика,
		,
		,
		,
		СтрокаТовары.ЭтоВозвратнаяТара,
		"uk"
	);
	
	ОбластьМакета.Параметры.КодПродукции = СтрокаТовары.ТоварКод;
	
	Если ЕдиницаИзмеренияВеса <> Неопределено Тогда
		Если Не ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) Тогда
			ДанныеСтроки.МассаБрутто = 0;
		Иначе
			ДанныеСтроки.МассаБрутто = СтрокаТовары.МассаБрутто;
		КонецЕсли;
	КонецЕсли;
	
	ДанныеСтроки.Сумма = СтрокаТовары.Сумма + СтрокаТовары.СуммаНДС;
	ДанныеСтроки.Цена = ?(СтрокаТовары.Количество = 0, 0, ДанныеСтроки.Сумма / СтрокаТовары.Количество);
	
	Если СтрокаТовары.КоличествоМест - Цел(СтрокаТовары.КоличествоМест) > 0 Тогда
		ДанныеСтроки.Мест = Цел(СтрокаТовары.КоличествоМест) + 1;
	Иначе
		ДанныеСтроки.Мест = СтрокаТовары.КоличествоМест;
	КонецЕсли;
	ДанныеСтроки.Количество  = СтрокаТовары.Количество;
	
	ОбластьМакета.Параметры.Цена = ДанныеСтроки.Цена;
	ОбластьМакета.Параметры.Сумма = ДанныеСтроки.Сумма;
	ОбластьМакета.Параметры.Количество = ДанныеСтроки.Количество;
	ОбластьМакета.Параметры.КоличествоМест = ДанныеСтроки.Мест;
	ОбластьМакета.Параметры.БазоваяЕдиницаНаименование = СтрокаТовары.БазоваяЕдиницаНаименование;
	ОбластьМакета.Параметры.ВидУпаковки = СтрокаТовары.ВидУпаковки;
		
	
	ОбластьМакета.Параметры.Масса = Окр(СтрокаТовары.МассаБрутто * КоэффициентПересчетаВТонны, 2, РежимОкругления.Окр15как20);
	
КонецПроцедуры // ЗаполнитьРеквизитыСтрокиТовара()

Процедура ЗаполнитьРеквизитыСтрокиТовараТТН_2014(ДанныеПечати, СтрокаТовары, ДанныеСтроки, ОбластьМакета, ЕдиницаИзмеренияВеса = Неопределено, КоэффициентПересчетаВТонны = 0)
	
	ОбластьМакета.Параметры.НомерСтроки = СтрокаТовары.НомерСтроки;
	
	ОбластьМакета.Параметры.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
		СтрокаТовары.ТоварНаименование,
		СтрокаТовары.Характеристика,
		,
		,
		,
		СтрокаТовары.ЭтоВозвратнаяТара,
		"uk"
	);
	
	Если ЕдиницаИзмеренияВеса <> Неопределено Тогда
		Если Не ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) Тогда
			ДанныеСтроки.МассаБрутто = 0;
		Иначе
			ДанныеСтроки.МассаБрутто = СтрокаТовары.МассаБрутто;
		КонецЕсли;
	КонецЕсли;
    
    ДанныеСтроки.Сумма    = СтрокаТовары.Сумма + СтрокаТовары.СуммаНДС;
	ДанныеСтроки.СуммаНДС = СтрокаТовары.СуммаНДС;
    
    ДанныеСтроки.Цена = СтрокаТовары.Цена;
	
	ДанныеСтроки.Мест = СтрокаТовары.КоличествоМест;
	ДанныеСтроки.Количество  = СтрокаТовары.Количество;
	
	ОбластьМакета.Параметры.Цена = ДанныеСтроки.Цена;
	ОбластьМакета.Параметры.Сумма = ДанныеСтроки.Сумма;
	ОбластьМакета.Параметры.Количество = ДанныеСтроки.Количество;
	ОбластьМакета.Параметры.БазоваяЕдиницаНаименование = СтрокаТовары.БазоваяЕдиницаНаименование;
	ОбластьМакета.Параметры.ВидУпаковки = СтрокаТовары.ВидУпаковки;
	ОбластьМакета.Параметры.Масса = Окр(СтрокаТовары.МассаБрутто*КоэффициентПересчетаВТонны, 2 , РежимОкругления.Окр15как20);
		
КонецПроцедуры // ЗаполнитьРеквизитыСтрокиТовараТТН_2014()

Процедура ЗаполнитьНомераНакладныхВСтрокеТовараТТН(ДанныеПечати, ВыборкаНомеровТН, ДанныеСтроки, ОбластьМакета, После2014)		
	
	СтрокаНомеровНакладных = "Товари за накладними: %НомерНакладной%";
	СтруктураПоиска = Новый Структура("ТранспортнаяНакладная", ДанныеПечати.Ссылка);
	Пока ВыборкаНомеровТН.НайтиСледующий(СтруктураПоиска) Цикл
		СтруктураШапки = Новый Структура("Дата, Номер");
		ЗаполнитьЗначенияСвойств(СтруктураШапки, ВыборкаНомеровТН);
		НомерНакладной = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(СтруктураШапки,,"uk");
		СтрокаНомеровНакладных = СтрЗаменить(СтрокаНомеровНакладных, "%НомерНакладной%", НомерНакладной + ", %НомерНакладной%");
	КонецЦикла;
	СтрокаНомеровНакладных = СтрЗаменить(СтрокаНомеровНакладных, ", %НомерНакладной%", "");
	
	ОбластьМакета.Параметры.ТоварНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
		СтрокаНомеровНакладных);
		
	Если НЕ После2014 Тогда
		ОбластьМакета.Параметры.КодПродукции = "";	
	КонецЕсли; 
	
	ДанныеСтроки.Сумма = 0;	
	ДанныеСтроки.СуммаНДС = 0;	
	ДанныеСтроки.Цена = 0;	
	ДанныеСтроки.Мест = 0;
	ДанныеСтроки.Количество  = 0;
	
	ОбластьМакета.Параметры.Цена = "";
	ОбластьМакета.Параметры.Сумма = "";
	ОбластьМакета.Параметры.Количество = "";
	Если НЕ После2014 Тогда
		ОбластьМакета.Параметры.КоличествоМест = "";
	КонецЕсли;	
	ОбластьМакета.Параметры.БазоваяЕдиницаНаименование = "";
	ОбластьМакета.Параметры.ВидУпаковки = "";
				
КонецПроцедуры

Процедура ЗаполнитьРеквизитыШапкиТТН(ДанныеПечати, Макет, ТабличныйДокумент)
	
	КодЯзыкаПечать = "uk";
	
	РеквизитыШапки = Новый Структура;
	
	// Выводим общие реквизиты шапки
	СведенияОПокупателе       = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Плательщик,ДанныеПечати.Дата,, ДанныеПечати.БанковскийСчетПлательщика);
	СведенияОГрузополучателе  = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Грузополучатель,  ДанныеПечати.Дата);
	СведенияОГрузоотправитель = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.Дата);
	СведенияОПеревозчике      = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Перевозчик,       ДанныеПечати.Дата);
	СведенияОПоставщике       = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация,      ДанныеПечати.Дата);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	
	РеквизитыШапки.Вставить("НомерДокумента", ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеПечати.Номер));
	РеквизитыШапки.Вставить("ДатаДокумента", ДанныеПечати.Дата);
	
	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
	
	МаркаИГосНомерАвтомобиля = СокрЛП(ДанныеПечати.МаркаАвтомобиля);
	Если ЗначениеЗаполнено(МаркаИГосНомерАвтомобиля) И ЗначениеЗаполнено(ДанныеПечати.ГосНомерАвтомобиля) Тогда
		МаркаИГосНомерАвтомобиля = МаркаИГосНомерАвтомобиля + ", ";
	КонецЕсли;
	РеквизитыШапки.Вставить("МаркаИГосНомерАвтомобиля",  МаркаИГосНомерАвтомобиля + СокрЛП(ДанныеПечати.ГосНомерАвтомобиля));
	
	РеквизитыШапки.Вставить("ОрганизацияПеревозчик"	, ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПеревозчике, "ПолноеНаименование",,КодЯзыкаПечать));
		
	РеквизитыШапки.Вставить("ФИОВодителя", ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.Водитель));
	
	Если ДанныеПечати.Организация = ДанныеПечати.Грузоотправитель Тогда
		РеквизитыШапки.Вставить("ГрузоотправительПредставление", ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике,
			"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО",,КодЯзыкаПечать));
	Иначе
		РеквизитыШапки.Вставить("ГрузоотправительПредставление", ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузоотправитель, 
			"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО",,КодЯзыкаПечать));
	КонецЕсли;
		   
	РеквизитыШапки.Вставить("ГрузополучательПредставление", ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузополучателе, 
		"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО",,КодЯзыкаПечать));
	
 	РеквизитыШапки.Вставить("ПлательщикПредставление", ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, 
		"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО",,КодЯзыкаПечать));
	
	РеквизитыШапки.Вставить("ГрузоотправительЕДРПОУ",   ?(ЗначениеЗаполнено(СведенияОГрузоотправитель.КодПоЕДРПОУ), СведенияОГрузоотправитель.КодПоЕДРПОУ, СведенияОГрузоотправитель.КодПоДРФО));
	РеквизитыШапки.Вставить("ГрузополучательЕДРПОУ",    ?(ЗначениеЗаполнено(СведенияОГрузополучателе.КодПоЕДРПОУ), СведенияОГрузополучателе.КодПоЕДРПОУ, СведенияОГрузополучателе.КодПоДРФО));
	РеквизитыШапки.Вставить("ПлательщикЕДРПОУ",         ?(ЗначениеЗаполнено(СведенияОПокупателе.КодПоЕДРПОУ), СведенияОПокупателе.КодПоЕДРПОУ, СведенияОПокупателе.КодПоДРФО));
	
	ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, РеквизитыШапки);
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры // ЗаполнитьРеквизитыШапкиТТН()

Процедура ЗаполнитьРеквизитыШапкиТТН_2014(ДанныеПечати, Макет, ТабличныйДокумент, ИтоговыеСуммы)
	
	КодЯзыкаПечать = "uk";
	
	// Выводим общие реквизиты шапки
	СведенияОПеревозчике      = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Перевозчик,       ДанныеПечати.Дата);
	СведенияОПокупателе       = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.ЗаказчикПеревозки,ДанныеПечати.Дата,, ДанныеПечати.БанковскийСчетЗаказчикаПеревозки);
	СведенияОГрузополучателе  = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Грузополучатель,  ДанныеПечати.Дата);
	СведенияОГрузоотправитель = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.Дата);
	СведенияОПоставщике       = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация,      ДанныеПечати.Дата);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	ОбластьМакета.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеПечати.Номер, Ложь, Истина);
	ОбластьМакета.Параметры.ДатаДокумента  = ДанныеПечати.Дата;
	
	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
	
	МаркаИГосНомерАвтомобиля = СокрЛП(ДанныеПечати.МаркаАвтомобиля);
	Если ЗначениеЗаполнено(МаркаИГосНомерАвтомобиля) И ЗначениеЗаполнено(ДанныеПечати.ГосНомерАвтомобиля) Тогда
		МаркаИГосНомерАвтомобиля = МаркаИГосНомерАвтомобиля + ", ";
	КонецЕсли;
	ОбластьМакета.Параметры.МаркаИГосНомерАвтомобиля = МаркаИГосНомерАвтомобиля + СокрЛП(ДанныеПечати.ГосНомерАвтомобиля);
	
	ОбластьМакета.Параметры.ОрганизацияПеревозчик = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПеревозчике,
	    "ПолноеНаименование",,КодЯзыкаПечать);
		
	ОбластьМакета.Параметры.ФИОВодителя = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.Водитель);			
	
	Если ДанныеПечати.Организация = ДанныеПечати.Грузоотправитель Тогда
		ОбластьМакета.Параметры.ГрузоотправительПредставление = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике,
			"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО",,КодЯзыкаПечать);
	Иначе
		ОбластьМакета.Параметры.ГрузоотправительПредставление = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузоотправитель, 
			"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО",,КодЯзыкаПечать);
	КонецЕсли;
	
	ОбластьМакета.Параметры.ГрузополучательПредставление = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузополучателе, 
		"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО",,КодЯзыкаПечать);
	
 	ОбластьМакета.Параметры.ПлательщикПредставление = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, 
		"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО",,КодЯзыкаПечать);
		
	ОбластьМакета.Параметры.ОтпускРазрешил = ДанныеПечати.ОтпускРазрешилДолжность + " " + ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.ОтпускРазрешил);
	ОбластьМакета.Параметры.ОтпущеноНаСуммуПрописью    = ИтоговыеСуммы.СуммаПрописью;
	
	//ПараметрыПрописи = Локализация.ПараметрыПрописи(Валюта, КодЯзыка);
	ОбластьМакета.Параметры.СуммаНДС                = ИтоговыеСуммы.ИтогоСуммаНДССВалютой;
	
	ОбластьМакета.Параметры.КоличествоМестПрописью  = ИтоговыеСуммы.МестПрописью;
	ОбластьМакета.Параметры.ИтогоМасса              = ИтоговыеСуммы.МассаПрописью;
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры // ЗаполнитьРеквизитыШапкиТТН_2014()

Процедура ЗаполнитьРеквизитыШапкиТТН_2019(ДанныеПечати, Макет, ТабличныйДокумент, ИтоговыеСуммы)
	
	КодЯзыкаПечать = "uk";
	
	// Выводим общие реквизиты шапки
	СведенияОПеревозчике      = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Перевозчик,       ДанныеПечати.Дата);
	СведенияОПокупателе       = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.ЗаказчикПеревозки,ДанныеПечати.Дата,, ДанныеПечати.БанковскийСчетЗаказчикаПеревозки);
	СведенияОГрузополучателе  = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Грузополучатель,  ДанныеПечати.Дата);
	СведенияОГрузоотправитель = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Грузоотправитель, ДанныеПечати.Дата);
	СведенияОПоставщике       = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация,      ДанныеПечати.Дата);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	ОбластьМакета.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеПечати.Номер, Ложь, Истина);
	ОбластьМакета.Параметры.ДатаДокумента = Формат(ДанныеПечати.Дата,"Л=uk_UA; ДФ='dd MMMM yyyy'") +" року";
	
	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
	
	МаркаИГосНомерАвтомобиля = СокрЛП(ДанныеПечати.МаркаАвтомобиля);
	Если ЗначениеЗаполнено(МаркаИГосНомерАвтомобиля) И ЗначениеЗаполнено(ДанныеПечати.ГосНомерАвтомобиля) Тогда
		МаркаИГосНомерАвтомобиля = МаркаИГосНомерАвтомобиля + ", ";
	КонецЕсли;
	ОбластьМакета.Параметры.МаркаИГосНомерАвтомобиля = МаркаИГосНомерАвтомобиля + СокрЛП(ДанныеПечати.ГосНомерАвтомобиля);
	
	ОбластьМакета.Параметры.ОрганизацияПеревозчик = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПеревозчике,
	    "ПолноеНаименование",,КодЯзыкаПечать);
		
	ОбластьМакета.Параметры.ФИОВодителя = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.Водитель);			
	
	Если ДанныеПечати.Организация = ДанныеПечати.Грузоотправитель Тогда
		ОбластьМакета.Параметры.ГрузоотправительПредставление = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике,
			"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО",,КодЯзыкаПечать);
	Иначе
		ОбластьМакета.Параметры.ГрузоотправительПредставление = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузоотправитель, 
			"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО",,КодЯзыкаПечать);
	КонецЕсли;
	
	ОбластьМакета.Параметры.ГрузополучательПредставление = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОГрузополучателе, 
		"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО",,КодЯзыкаПечать);
	
 	ОбластьМакета.Параметры.ПлательщикПредставление = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, 
		"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,МФО",,КодЯзыкаПечать);
	ОбластьМакета.Параметры.ОтпущеноНаСуммуПрописью    = ИтоговыеСуммы.СуммаПрописью;
	
	//ПараметрыПрописи = Локализация.ПараметрыПрописи(Валюта, КодЯзыка);
	ОбластьМакета.Параметры.СуммаНДС                = ИтоговыеСуммы.ИтогоСуммаНДССВалютой;
	
	ОбластьМакета.Параметры.КоличествоМестПрописью  = ИтоговыеСуммы.МестПрописью;
	ОбластьМакета.Параметры.ИтогоМасса              = ИтоговыеСуммы.МассаПрописью;
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры // ЗаполнитьРеквизитыШапкиТТН_2019()

Процедура ЗаполнитьРеквизитыПодвалаТТН(ДанныеПечати, ИтоговыеСуммы, Макет, ТабличныйДокумент)		
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	
	
	ОбластьМакета.Параметры.ОтпускРазрешилДолжность = ДанныеПечати.ОтпускРазрешилДолжность;
	ОбластьМакета.Параметры.ОтпущеноНаСуммуПрописью = ИтоговыеСуммы.СуммаПрописью;	
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры // ЗаполнитьРеквизитыПодвалаТТН()


Процедура ЗаполнитьТабличныйДокументТТН(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, КомплектыПечати)
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	ЕдиницаИзмеренияВеса           = Константы.ЕдиницаИзмеренияВеса.Получить(); 
	КоэффициентПересчетаВТонны     = НоменклатураСервер.КоэффициентПересчетаВТонны(Константы.ЕдиницаИзмеренияВеса.Получить());

	ДанныеПечати      					  = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам					  = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаПоНомерамТранспортныхНакладных = ДанныеДляПечати.РезультатПоНомерамНакладных.Выбрать();
	
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		// Для печати комплектов
		Если КомплектыПечати <> Неопределено И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено Тогда
			КомплектПечатиПоСсылке = КомплектыПечати.Найти(ДанныеПечати.Ссылка,"Ссылка");
			Если КомплектПечатиПоСсылке = Неопределено Тогда
				КомплектПечатиПоСсылке = КомплектыПечати[0];
			КонецЕсли;
			Если КомплектПечатиПоСсылке.Экземпляров = 0 Тогда
				Продолжить
			КонецЕсли;
		КонецЕсли;
		
		// Если ТТН с доставкой и нашли связанные с доставкой ошибки - перейдем к следующему документу
		СтруктураЗаданиеНаПеревозку = Новый Структура("НеНайденоЗаданиеНаПеревозку,
													  |БолееОдногоВхожденияВЗаданияНаПеревозку,
													  |РаспоряжениеНеПроведено",
													  Ложь,Ложь,Ложь);
		ЕстьОшибкиДоставки = Ложь;
		ЗаполнитьЗначенияСвойств(СтруктураЗаданиеНаПеревозку,ДанныеПечати);
		Если СтруктураЗаданиеНаПеревозку.НеНайденоЗаданиеНаПеревозку Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Для документа %1 не найдено задание на перевозку. Печать формы 1-Т для документов с доставкой возможна после включения документа в задание на перевозку.';uk='Для документа %1 не знайдено завдання на перевезення. Друк форми 1-Т для документів з доставкою можливий після включення документа в завдання на перевезення.'"),
				ДанныеПечати.Ссылка);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ДанныеПечати.Ссылка);
			ЕстьОшибкиДоставки = Истина;
		КонецЕсли;
		Если СтруктураЗаданиеНаПеревозку.БолееОдногоВхожденияВЗаданияНаПеревозку Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Невозможно напечатать форму 1-Т для %1, т.к. найдено более одного задания на перевозку, в которые включен этот документ.';uk='Неможливо надрукувати форму 1-Т для %1, т. я. знайдено більше одного завдання на перевезення, в яке включений цей документ.'"),
				ДанныеПечати.Ссылка);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ДанныеПечати.Ссылка);
			ЕстьОшибкиДоставки = Истина;
		КонецЕсли;
		Если СтруктураЗаданиеНаПеревозку.РаспоряжениеНеПроведено Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Документ %1 не проведен. Печать товарно - транспортной накладной не будет выполнена.';uk='Документ %1 не проведено. Друк товарно - транспортної накладної не буде виконаний.'"),
				ДанныеПечати.Ссылка);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ДанныеПечати.Ссылка);
			ЕстьОшибкиДоставки = Истина;
		КонецЕсли;
		Если ЕстьОшибкиДоставки Тогда
			Продолжить;
		КонецЕсли;
				
		// Найдем в выборке товары по текущему документу
		СтруктураПоиска = Новый Структура("ПорядковыйНомер", ДанныеПечати.ПорядковыйНомер);
		НайденСледующий = ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		СтрокаТовары = ВыборкаПоДокументам.Выбрать();
		КоличествоСтрок = СтрокаТовары.Количество();
		
		Если ДанныеПечати.ЕстьНепроведенныеДокументыОснования Тогда 
			
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='В документе %1 присутствуют непроведенные документы-основания. Печать товарно - транспортной накладной невозможна.';uk='У документі %1 присутні непроведені документи-підстави. Друк товарно - транспортної накладної неможливий.'"),
				ДанныеПечати.Ссылка);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ДанныеПечати.Ссылка);
			
			Продолжить;
			
		КонецЕсли;
		
		// Если в ТТН только услуги - перейдем к следующему документу
		Если КоличествоСтрок = 0 Тогда
			
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='По документу %1 отсутствуют Товары. Печать товарно - транспортной накладной не требуется.';uk='За документом %1 відсутні Товари. Друк товарно - транспортної накладної не потрібний.'"),
				ДанныеПечати.Ссылка);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ДанныеПечати.Ссылка);
			
			Продолжить;
		КонецЕсли;
		
		Если ДанныеПечати.Дата < Дата("20140114") Тогда
			Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТТН.ПФ_MXL_UK_ТТН");
			НоваяФорма = Ложь;
		ИначеЕсли ДанныеПечати.Дата < Дата("20180910") Тогда
			Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТТН.ПФ_MXL_UK_ТТН_2014");
			НоваяФорма = Истина;
		ИначеЕсли ДанныеПечати.Дата < Дата("20190712") Тогда
	    	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТТН.ПФ_MXL_UK_ТТН_2018");
			НоваяФорма = Истина;
		Иначе
			Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьТТН.ПФ_MXL_UK_ТТН_2019");
			НоваяФорма = Истина;
		КонецЕсли;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
			
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если НЕ НоваяФорма Тогда
			ЗаполнитьРеквизитыШапкиТТН(ДанныеПечати, Макет, ТабличныйДокумент);
		КонецЕсли;
				
		НомерСтраницы = 1;
		ИтоговыеСуммы = СтруктураИтоговыеСуммыТТН();
		
		ДанныеСтроки = СтруктураДанныеСтрокиТТН();
		
		
		// Выводим многострочную часть докмента
		ОбластьЗаголовокТаблицы      = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ОбластьМакета                = Макет.ПолучитьОбласть("Строка");
		ОбластьВсего                 = Макет.ПолучитьОбласть("Всего");
		Если НоваяФорма Тогда
			ТабличныйДокументВременный   = Новый ТабличныйДокумент;
			ОбластьПодписи               = Макет.ПолучитьОбласть("Подписи");
			ОбластьПогрузочныеОперации   = Макет.ПолучитьОбласть("ПогрузочныеОперации");
		Иначе
			ОбластьПодвала               = Макет.ПолучитьОбласть("Подвал");
			ОбластьПогрузочныеОперации   = Макет.ПолучитьОбласть("ПогрузочныеОперации");
			ОбластьПрочихСведений        = Макет.ПолучитьОбласть("ПрочиеСведения");
		КонецЕсли;
		
		Если ДанныеПечати.ВыводДанныхОТоварномСоставе = Перечисления.ВариантыВыводаДанныхОТоварномСоставе.ТоварныйСостав Тогда
			
			Пока СтрокаТовары.Следующий() Цикл
				ДанныеСтроки.Номер = ДанныеСтроки.Номер + 1;
				
				Если НоваяФорма Тогда
					ЗаполнитьРеквизитыСтрокиТовараТТН_2014(ДанныеПечати, СтрокаТовары, ДанныеСтроки, ОбластьМакета, ЕдиницаИзмеренияВеса, КоэффициентПересчетаВТонны);
					ТабличныйДокументВременный.Вывести(ОбластьМакета);
				Иначе
					ЗаполнитьРеквизитыСтрокиТовараТТН(ДанныеПечати, СтрокаТовары, ДанныеСтроки, ОбластьМакета, ЕдиницаИзмеренияВеса, КоэффициентПересчетаВТонны);
				
					Если ДанныеСтроки.Номер = 1 Тогда // первая строка
					
						ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
						
					КонецЕсли;
					
					ТабличныйДокумент.Вывести(ОбластьМакета);
					
				КонецЕсли;	
				
				РассчитатьИтоговыеСуммыТТН(ИтоговыеСуммы, ДанныеСтроки);
				
			КонецЦикла;
			
			Если НоваяФорма Тогда
				ДобавитьИтоговыеДанныеПодвалаТТН(ИтоговыеСуммы, ДанныеСтроки.Номер, ВалютаРегламентированногоУчета, КоэффициентПересчетаВТонны);
				Если ДанныеПечати.Дата < Дата("20190712") Тогда
					ЗаполнитьРеквизитыШапкиТТН_2014(ДанныеПечати, Макет, ТабличныйДокумент, ИтоговыеСуммы);
				Иначе
					ЗаполнитьРеквизитыШапкиТТН_2019(ДанныеПечати, Макет, ТабличныйДокумент, ИтоговыеСуммы);
				КонецЕсли;
				
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
				ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
				ТабличныйДокумент.Вывести(ТабличныйДокументВременный);
			КонецЕсли;
			
			КоличествоПорядковыхНомеровЗаписей = ДанныеСтроки.Номер;
			
		Иначе
			
			ДанныеСтроки.Номер = ДанныеСтроки.Номер + 1;
			
			ЗаполнитьНомераНакладныхВСтрокеТовараТТН(
					ДанныеПечати, 
					ВыборкаПоНомерамТранспортныхНакладных,
					ДанныеСтроки, 
					ОбластьМакета, 
					НоваяФорма
			);
				
			Если НоваяФорма Тогда
				Если ДанныеПечати.Дата < Дата("20190712") Тогда
					ЗаполнитьРеквизитыШапкиТТН_2014(ДанныеПечати, Макет, ТабличныйДокумент, ИтоговыеСуммы);
				Иначе
					ЗаполнитьРеквизитыШапкиТТН_2019(ДанныеПечати, Макет, ТабличныйДокумент, ИтоговыеСуммы);
				КонецЕсли;
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			Иначе	
				ЗаполнитьРеквизитыШапкиТТН(ДанныеПечати, Макет, ТабличныйДокумент);
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
					
			ТабличныйДокумент.Вывести(ОбластьМакета);
					
			КоличествоПорядковыхНомеровЗаписей = 0;
			
		КонецЕсли;
		
		
		// Выводим итоги по документу в целом
		ОбластьМакета = Макет.ПолучитьОбласть("Всего");
		ОбластьМакета.Параметры.ИтогоКоличество = ИтоговыеСуммы.ИтогоКоличество;
		ОбластьМакета.Параметры.ИтогоСуммаСНДС  = ИтоговыеСуммы.ИтогоСумма;
		Если НоваяФорма Тогда
			ОбластьМакета.Параметры.ИтогоМасса  = ИтоговыеСуммы.ИтогоМассаБрутто;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим подвал документа
		
		Если НоваяФорма Тогда
			ТабличныйДокумент.Вывести(ОбластьПодписи);
			ТабличныйДокумент.Вывести(ОбластьПогрузочныеОперации);
		Иначе
			Если ДанныеПечати.ВыводДанныхОТоварномСоставе = Перечисления.ВариантыВыводаДанныхОТоварномСоставе.ТоварныйСостав Тогда
				ДобавитьИтоговыеДанныеПодвалаТТН(ИтоговыеСуммы, КоличествоПорядковыхНомеровЗаписей, ВалютаРегламентированногоУчета, КоэффициентПересчетаВТонны);
			Иначе
				ДобавитьИтоговыеДанныеПодвалаТТНДляНесколькихНакладных(ИтоговыеСуммы, КоличествоПорядковыхНомеровЗаписей, ВалютаРегламентированногоУчета, КоэффициентПересчетаВТонны);
			КонецЕсли;
			ЗаполнитьРеквизитыПодвалаТТН(ДанныеПечати, ИтоговыеСуммы, Макет, ТабличныйДокумент);
			ТабличныйДокумент.Вывести(ОбластьПогрузочныеОперации);
			ТабличныйДокумент.Вывести(ОбластьПрочихСведений);
		КонецЕсли;	
		
		// Выведем нужное количество экземпляров (при печати комплектов)
		Если КомплектыПечати <> Неопределено И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено И КомплектПечатиПоСсылке.Экземпляров > 1 Тогда
			ОбластьКопирования = ТабличныйДокумент.ПолучитьОбласть(НомерСтрокиНачало,,ТабличныйДокумент.ВысотаТаблицы);
			Для Итератор = 2 По КомплектПечатиПоСсылке.Экземпляров Цикл
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьКопирования);
			КонецЦикла;
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьТабличныйДокументТТН()

#КонецОбласти

#КонецОбласти

#КонецЕсли
