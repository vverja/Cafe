
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	УстановитьЗаголовок();
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	ПартнерыИКонтрагенты.ЗаголовокРеквизитаВЗависимостиОтФОИспользоватьПартнеровКакКонтрагентов(
	              ЭтотОбъект, "Партнер", НСтр("ru='Контрагент';uk='Контрагент'"));
				  
	ВводНаОсновании.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюСоздатьНаОсновании);
	
	МенюОтчеты.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюОтчеты);


КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// Обработчик механизма "ДатыЗапретаИзменения"
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	ПрочитатьВалютуДоговоров();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ПрочитатьВалютуДоговоров();
	УстановитьЗаголовок();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПараметрыЗаписи.Вставить("ТипОперации", Объект.ТипОперации);
	Оповестить("Запись_ВводОстатков", ПараметрыЗаписи, Объект.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УстановитьПараметрыВыбораДоговора();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовПодвалаФормы

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования, 
		ЭтотОбъект, 
		"Объект.Комментарий");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРасчетыПоКредитамДепозитам

&НаКлиенте
Процедура РасчетыПоКредитамДепозитамПриАктивизацииЯчейки(Элемент)
	
	ТекущиеДанные = Элементы.РасчетыПоКредитамДепозитам.ТекущиеДанные;
	Если Элемент.ТекущийЭлемент.Имя = "ТипСуммы" И ТекущиеДанные <> Неопределено Тогда
		СписокВыбора = Элемент.ТекущийЭлемент.СписокВыбора;
		СписокВыбора.Очистить();
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг"));
		СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты"));
		Если ТекущиеДанные.ХарактерДоговора = ПредопределенноеЗначение("Перечисление.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм") Тогда
			СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия"));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетыПоКредитамДепозитамПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)

	УстановитьПараметрыВыбораДоговора();
	ТекущиеДанные = Элементы.РасчетыПоКредитамДепозитам.ТекущиеДанные;
	Если НоваяСтрока И НЕ Копирование Тогда
		ТекущиеДанные.ТипСуммы = ПредопределенноеЗначение("Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПартнерПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.РасчетыПоКредитамДепозитам.ТекущиеДанные;
	ПартнерПриИзмененииНаСервере(ТекущиеДанные.Партнер, ТекущиеДанные.Контрагент);
	УстановитьПараметрыВыбораДоговора();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	УстановитьПараметрыВыбораДоговора();
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорПриИзменении(Элемент)

	ТекущиеДанные = Элементы.РасчетыПоКредитамДепозитам.ТекущиеДанные;
	ДанныеДоговора = РеквизитыДоговора(ТекущиеДанные.Договор);
	ЗаполнитьЗначенияСвойств(ТекущиеДанные,ДанныеДоговора);
	Если ДанныеДоговора.ХарактерДоговора <> ПредопределенноеЗначение("Перечисление.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм") Тогда
		ТекущиеДанные.ТипСуммы = ПредопределенноеЗначение("Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СуммаПриИзменении(Элемент)

	ТекущиеДанные = Элементы.РасчетыПоКредитамДепозитам.ТекущиеДанные;
	ТекущиеДанные.СуммаРегл = СуммаРеглУчетаНаСервере(ТекущиеДанные.Сумма, ТекущиеДанные.ВалютаВзаиморасчетов, Объект.Дата);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	МенюОтчетыКлиент.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуСоздатьНаОсновании(Команда)
	
	ВводНаОснованииКлиент.ВыполнитьПодключаемуюКомандуСоздатьНаОсновании(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры


&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
  Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
    РезультатВыполнения = Неопределено;
    ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
    ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
  КонецЕсли;
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
  ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура УстановитьЗаголовок()
	
	АвтоЗаголовок = Ложь;
	Заголовок = Документы.ВводОстатков.ЗаголовокДокументаПоТипуОперации(Объект.Ссылка,
																						  Объект.Номер,
																						  Объект.Дата,
																						  Объект.ТипОперации);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПартнерПриИзмененииНаСервере(Партнер, Контрагент)
	
	ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Партнер, Контрагент);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПараметрыВыбораДоговора()

	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.ПометкаУдаления",Ложь));
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Организация", Объект.Организация));
	КонецЕсли;
	ТекущиеДанные = Элементы.РасчетыПоКредитамДепозитам.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Если ЗначениеЗаполнено(ТекущиеДанные.Партнер) Тогда
			МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Партнер", ТекущиеДанные.Партнер));
		КонецЕсли;
		Если ЗначениеЗаполнено(ТекущиеДанные.Контрагент) Тогда
			МассивПараметров.Добавить(Новый ПараметрВыбора("Отбор.Контрагент", ТекущиеДанные.Контрагент));
		КонецЕсли;
	КонецЕсли;
	Элементы.Договор.ПараметрыВыбора = Новый ФиксированныйМассив(МассивПараметров);

КонецПроцедуры

&НаСервереБезКонтекста
Функция РеквизитыДоговора(Договор)

	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Договор,"Партнер,Контрагент,ВалютаВзаиморасчетов,ХарактерДоговора");

КонецФункции

&НаСервере
Процедура ПрочитатьВалютуДоговоров()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.НомерСтроки КАК НомерСтроки,
	|	ДанныеДокумента.Партнер,
	|	ДанныеДокумента.Контрагент,
	|	ДанныеДокумента.Договор,
	|	ДанныеДокумента.ТипСуммы,
	|	ДанныеДокумента.Сумма,
	|	ДанныеДокумента.СуммаРегл,
	|	ДоговорыКредитовИДепозитов.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДоговорыКредитовИДепозитов.ХарактерДоговора КАК ХарактерДоговора
	|ИЗ
	|	Документ.ВводОстатков.РасчетыПоДоговорамКредитовИДепозитов КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКредитовИДепозитов КАК ДоговорыКредитовИДепозитов
	|		ПО ДанныеДокумента.Договор = ДоговорыКредитовИДепозитов.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() > 0 Тогда
		Объект.РасчетыПоДоговорамКредитовИДепозитов.Очистить();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Объект.РасчетыПоДоговорамКредитовИДепозитов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция СуммаРеглУчетаНаСервере(Сумма, Валюта, Дата)

	Коэффициенты = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Валюта, Валюта, Дата);
	Возврат Сумма * Коэффициенты.КоэффициентПересчетаВВалютуРегл;

КонецФункции

#КонецОбласти
