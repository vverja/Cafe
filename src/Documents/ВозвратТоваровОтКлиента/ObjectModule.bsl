#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область УсловияПродаж

// Заполняет условия продаж в возврате товаров от клиента
//
// Параметры:
//	УсловияПродаж - Структура - Структура для заполнения
//
Процедура ЗаполнитьУсловияПродаж(Знач УсловияПродаж, Знач ЗаполнятьРеквизитыОснования = Истина) Экспорт
	
	Если УсловияПродаж = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗаполнятьРеквизитыОснования Тогда
		
		Если ЗначениеЗаполнено(УсловияПродаж.Валюта) Тогда
			Валюта = УсловияПродаж.Валюта;
		КонецЕсли;
		
		ЦенаВключаетНДС      = УсловияПродаж.ЦенаВключаетНДС;
		НаправлениеДеятельности = УсловияПродаж.НаправлениеДеятельности;
		
		Если ЗначениеЗаполнено(УсловияПродаж.Склад) Тогда
			Склад = УсловияПродаж.Склад;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(УсловияПродаж.Организация) Тогда
		Организация = УсловияПродаж.Организация;
	КонецЕсли;
		
	Если Не УсловияПродаж.Типовое Тогда
		Если ЗначениеЗаполнено(УсловияПродаж.Контрагент) Тогда
			Контрагент = УсловияПродаж.Контрагент;
		КонецЕсли;
	КонецЕсли;
	
	ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Партнер, Контрагент);
	
	Если ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя Тогда
		ХозяйственнаяОперация = ПродажиСервер.ПолучитьХозяйственнуюОперациюВозвратаПоРеализации(УсловияПродаж.ХозяйственнаяОперация);
		ВозвратПереданнойМногооборотнойТары = УсловияПродаж.ВозвращатьМногооборотнуюТару;
		ПредусмотренЗалогЗаТару = УсловияПродаж.ТребуетсяЗалогЗаТару;
	КонецЕсли;
	
	ХозяйственнаяОперацияДоговора = Неопределено;
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента Тогда
		ХозяйственнаяОперацияДоговора = Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера Тогда
		ХозяйственнаяОперацияДоговора = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию;
	КонецЕсли;
	
	Если ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя Тогда
		Договор = ПродажиСервер.ПолучитьДоговорПоУмолчанию(ЭтотОбъект, ХозяйственнаяОперацияДоговора, Валюта);
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьУчетДоходовПоНаправлениямДеятельности") Тогда
			НаправленияДеятельностиСервер.ЗаполнитьНаправлениеПоУмолчанию(НаправлениеДеятельности, Соглашение, Договор);
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

// Заполняет условия продаж по умолчанию в возврате товаров от клиента
//
Процедура ЗаполнитьУсловияПродажПоУмолчанию() Экспорт
	
	ИспользоватьСоглашенияСКлиентами = ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами");
	
	Если ЗначениеЗаполнено (Партнер) ИЛИ НЕ ИспользоватьСоглашенияСКлиентами Тогда
		
		УсловияПродажПоУмолчанию = ПродажиСервер.ПолучитьУсловияПродажПоУмолчанию(
			Партнер, 
			Новый Структура(
			"ВыбранноеСоглашение,
			|ПустаяСсылкаДокумента", 
			Соглашение,
			Документы.ВозвратТоваровОтКлиента.ПустаяСсылка()));
		
		Если УсловияПродажПоУмолчанию <> Неопределено Тогда
			
			Если НЕ ИспользоватьСоглашенияСКлиентами ИЛИ 
				(Соглашение <> УсловияПродажПоУмолчанию.Соглашение И ЗначениеЗаполнено(УсловияПродажПоУмолчанию.Соглашение)) Тогда
				Соглашение = УсловияПродажПоУмолчанию.Соглашение;
				ЗаполнитьУсловияПродаж(УсловияПродажПоУмолчанию);
			Иначе
				Соглашение = УсловияПродажПоУмолчанию.Соглашение;
			КонецЕсли;
			
		Иначе
			ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Партнер, Контрагент);
			Соглашение = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
		
КонецПроцедуры

// Заполняет условия продаж по соглашению в возврате товаров от клиента
//
Процедура ЗаполнитьУсловияПродажПоCоглашению() Экспорт
	
	УсловияПродаж = ПродажиСервер.ПолучитьУсловияПродаж(Соглашение);
	ЗаполнитьУсловияПродаж(УсловияПродаж);
	
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// Функция формирует временные данных документа.
//
// Возвращаемое значение:
//	МенеджерВременныхТаблиц - менеджер временных таблиц
//
Функция ВременныеТаблицыДанныхДокумента() Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	&Дата КАК Дата,
	|	&Организация КАК Организация,
	|	&Партнер КАК Партнер,
	|	&Контрагент КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка) КАК Соглашение,
	|	&Договор КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта,
	|	&ДокументРеализации КАК ДокументРеализации,
	|	&НалоговоеНазначениеОрганизации КАК НалоговоеНазначениеОрганизации,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Ложь КАК ЕстьСделкиВТабличнойЧасти
	|	
	|ПОМЕСТИТЬ ТаблицаДанныхДокумента
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|   ВЫБОР 
	|   	КОГДА НЕ &ОрганизацияПлательщикНДС 
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|		КОГДА ТаблицаТоваров.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) 
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|		КОГДА ТаблицаТоваров.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НеНДС) 
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|		ИНАЧЕ
	|   		ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая)
	|	КОНЕЦ КАК ЦелевоеНалоговоеНазначение,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Серия КАК Серия,
	|	ТаблицаТоваров.НоменклатураОприходование КАК НоменклатураОприходование,
	|	ТаблицаТоваров.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|	ТаблицаТоваров.Количество КАК Количество,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера) ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|	ИНАЧЕ
	|		&Склад
	|	КОНЕЦ КАК Склад,
	|	
	|	ВЫБОР КОГДА ТаблицаТоваров.ДокументРеализации = ЗНАЧЕНИЕ(Документ.РеализацияТоваровУслуг.ПустаяСсылка)
	|	 ИЛИ ТаблицаТоваров.ДокументРеализации = ЗНАЧЕНИЕ(Документ.ОтчетОРозничныхПродажах.ПустаяСсылка) ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		ТаблицаТоваров.ДокументРеализации
	|	КОНЕЦ КАК ДокументРеализации,
	|	
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТоваров.Сумма + (ТаблицаТоваров.СуммаНДС * &ЦенаВключаетНДС) КАК СуммаСНДС,
	|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|	0 КАК СуммаВознаграждения,
	|	0 КАК СуммаНДСВознаграждения
	|	
	|ПОМЕСТИТЬ ВтТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.ЦелевоеНалоговоеНазначение КАК ЦелевоеНалоговоеНазначение,
	|	ТаблицаТоваров.НоменклатураОприходование КАК НоменклатураОприходование,
	|	ТаблицаТоваров.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|	ТаблицаТоваров.Серия КАК Серия,
	|	ТаблицаТоваров.Количество КАК Количество,
	|	ТаблицаТоваров.Склад КАК Склад,
	|	ТаблицаТоваров.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаТоваров.Сделка КАК Сделка,
	|	ТаблицаТоваров.Назначение КАК Назначение,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТоваров.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТоваров.СуммаВознаграждения КАК СуммаВознаграждения,
	|	ТаблицаТоваров.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения,
	|	ВЫБОР КОГДА (СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		И &ВозвратПереданнойМногооборотнойТары)
	|	ТОГДА
	|		ЛОЖЬ
	|	ИНАЧЕ
	|		ИСТИНА
	|	КОНЕЦ КАК ПодбиратьВидыЗапасов,
	|	АналитикаОприходования.КлючАналитики КАК АналитикаУчетаНоменклатурыОприходования
	|	
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	ВтТаблицаТоваров КАК ТаблицаТоваров
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО
	|		ТаблицаТоваров.Номенклатура = СпрНоменклатура.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаОприходования
	|	ПО
	|		ТаблицаТоваров.НоменклатураОприходование = АналитикаОприходования.Номенклатура
	|		И ТаблицаТоваров.ХарактеристикаОприходование = АналитикаОприходования.Характеристика
	|		И ТаблицаТоваров.Серия = АналитикаОприходования.Серия
	|		И ТаблицаТоваров.Склад = АналитикаОприходования.Склад
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.НоменклатураОприходование КАК НоменклатураОприходование,
	|	ТаблицаВидыЗапасов.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|	ТаблицаВидыЗапасов.Серия КАК Серия,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.СкладОтгрузки КАК СкладОтгрузки,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера) ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.ДокументРеализации
	|	КОНЕЦ КАК ДокументРеализации,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС
	|	
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	&ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|;
	|/////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Серия КАК Серия,
	|	ТаблицаВидыЗапасов.НоменклатураОприходование КАК НоменклатураОприходование,
	|	ТаблицаВидыЗапасов.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.СкладОтгрузки КАК СкладОтгрузки,
	|	Аналитика.Склад КАК Склад,
	|	ТаблицаВидыЗапасов.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаВидыЗапасов.Сделка КАК Сделка,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС,
	|	&ВидыЗапасовУказаныВручную КАК ВидыЗапасовУказаныВручную
	|	
	|ПОМЕСТИТЬ ТаблицаВидыЗапасов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|");
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Партнер", Партнер);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.УстановитьПараметр("НалоговоеНазначениеОрганизации", НДСОбщегоНазначенияСервер.ПолучитьНалоговоеНазначениеНДС(Организация, Контрагент, Дата, Истина));
	Запрос.УстановитьПараметр("ОрганизацияПлательщикНДС", НДСОбщегоНазначенияСервер.ОрганизацияПлательщикНДС(Организация, Дата));
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("ДокументРеализации", ДокументРеализации);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС", ?(ЦенаВключаетНДС, 0, 1));
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("ТаблицаТоваров", Товары.Выгрузить());
	Запрос.УстановитьПараметр("ТаблицаВидыЗапасов", ВидыЗапасов.Выгрузить());
	Запрос.УстановитьПараметр("ВозвратПереданнойМногооборотнойТары", ВозвратПереданнойМногооборотнойТары);
	Запрос.УстановитьПараметр("ВидыЗапасовУказаныВручную", ВидыЗапасовУказаныВручную);
	
	Запрос.Выполнить();
	
	Возврат МенеджерВременныхТаблиц;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполненНаОснованииДокумента = Ложь;
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("ЗаполнитьПоПереданнойТаре") Тогда
			ЗаполнитьДокументНаОснованииПереданнойТары(ДанныеЗаполнения);
			ЗаполненНаОснованииДокумента = Истина;
		ИначеЕсли ДанныеЗаполнения.Свойство("АктОРасхождениях") 
			И ДанныеЗаполнения.Свойство("ОснованиеАкта") Тогда
			
			Если ТипЗнч(ДанныеЗаполнения.ОснованиеАкта) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
				ЗаполнитьДокументНаОснованииАктаПослеОтгрузки(ДанныеЗаполнения);
			ИначеЕсли ТипЗнч(ДанныеЗаполнения.ОснованиеАкта) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") Тогда
				ЗаполнитьДокументНаОснованииАктаПослеПриемки(ДанныеЗаполнения);
			КонецЕсли;
		Иначе
			ЗаполнитьДокументПоОтбору(ДанныеЗаполнения);
		КонецЕсли;
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		ЗаполнитьДокументНаОснованииРеализацииТоваровИУслуг(ДанныеЗаполнения);
		ЗаполненНаОснованииДокумента = Истина;
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ЧекККМ") Тогда
		ЗаполнитьДокументНаОснованииЧекаККМ(ДанныеЗаполнения);
		ЗаполненНаОснованииДокумента = Истина;
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента") Тогда
		ЗаполнитьДокументНаОснованииЗаявкиНаВозвратТоваровОтКлиента(ДанныеЗаполнения);
		ЗаполненНаОснованииДокумента = Истина;
	КонецЕсли;
	
	Если Не ЗаполненНаОснованииДокумента Тогда
		ИнициализироватьУсловияПродаж();
	КонецЕсли;
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
	
	БонусныеБаллыСервер.ЗаполнитьБонусныеБаллыВозвратТоваровОтКлиента(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если Не ЗначениеЗаполнено(Соглашение) Или Не ОбщегоНазначенияУТ.ЗначениеРеквизитаОбъектаТипаБулево(Соглашение, "ИспользуютсяДоговорыКонтрагентов") Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Договор");
	КонецЕсли;
	
	ОбщегоНазначенияУТ.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ);
	
	МассивНепроверяемыхРеквизитов.Добавить("Товары.НоменклатураОприходование");
	
	Для Каждого СтрТабл Из Товары Цикл
		АдресОшибки = НСтр("ru=' в строке %НомерСтроки% списка ""Товары""';uk=' у рядку %НомерСтроки% списку ""Товари""'");
		АдресОшибки =  СтрЗаменить(АдресОшибки, "%НомерСтроки%", СтрТабл.НомерСтроки);
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", СтрТабл.НомерСтроки, "НоменклатураОприходование");
		
		Если СтрТабл.Порча Тогда
			
			Если Не ЗначениеЗаполнено(СтрТабл.НоменклатураОприходование) Тогда
				ТекстОшибки = НСтр("ru=' Не заполнена колонка ""Номенклатура (оприходование)""';uk=' Не заповнена колонка ""Номенклатура (оприбуткування)""'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки + АдресОшибки,ЭтотОбъект,Поле,,Отказ);
			ИначеЕсли СтрТабл.Номенклатура = СтрТабл.НоменклатураОприходование Тогда
				ТекстОшибки = НСтр("ru='Товар исходного качества совпадает с товаром другого качества';uk='Товар вихідної якості збігається з товаром іншої якості'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки + АдресОшибки,ЭтотОбъект,Поле,,Отказ);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("РасшифровкаПлатежа.Сумма");
		
	Иначе
		
		МассивНепроверяемыхРеквизитов.Добавить("Соглашение");
		
	КонецЕсли;
	
	ДенежныеСредстваСервер.ПроверитьЗаполнениеРасшифровкиПлатежа(
		ЭтотОбъект,
		ПолучитьСуммуДокумента(),
		ХозяйственнаяОперация,
		Отказ);
	
	МассивВсехРеквизитов = Новый Массив;
	МассивРеквизитовОперации = Новый Массив;
	
	Документы.ВозвратТоваровОтКлиента.ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(
		ХозяйственнаяОперация, 
		МассивВсехРеквизитов, 
		МассивРеквизитовОперации);
		
	Если Не ВыданыДенежныеСредства Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НомерРасходногоКассовогоОрдера");
		МассивНепроверяемыхРеквизитов.Добавить("ДатаРасходногоКассовогоОрдера");
	КонецЕсли;
	
	Для Каждого ЭлементМассива Из МассивВсехРеквизитов Цикл
		
		// Если реквизит не используется для хозяйственной операции, исключаем данный реквизит из проверки.
		Если МассивРеквизитовОперации.Найти(ЭлементМассива) = Неопределено Тогда
			МассивНепроверяемыхРеквизитов.Добавить(ЭлементМассива);
		КонецЕсли;
		
	КонецЦикла;
	
	
	ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
	ПараметрыПроверки.СуффиксДопРеквизита = "Оприходование";
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ,ПараметрыПроверки);
	
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ВозвратТоваровОтКлиента);
	НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект,
	                                            ПараметрыУказанияСерий,
	                                            Отказ,
	                                            МассивНепроверяемыхРеквизитов);
	
	НоменклатураСервер.ПроверитьВидНоменклатурыОприходования(ЭтотОбъект,Отказ);
	
	Если ЗначениеЗаполнено(НаправлениеДеятельности) 
		ИЛИ НЕ НаправленияДеятельностиСервер.УказаниеНаправленияДеятельностиОбязательно(ХозяйственнаяОперация) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НаправлениеДеятельности");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
	
	ПродажиСервер.ПроверитьКорректностьЗаполненияДокументаПродажи(ЭтотОбъект, Отказ);
	ПродажиСервер.ПроверитьКорректностьВозвращаемыхТоваров(ЭтотОбъект, "Товары", Отказ);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеСервер.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);

	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Если Ссылка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера
	 ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера Тогда
        // Если это была/будет передача на комиссию, то документ сам двигает и 
		// отчищает свои движения по регистру НДСРасчетНалоговыхОбязательств
		ДополнительныеСвойства.Вставить("ОчищатьДвиженияНДСРасчетНалоговыхОбязательств");
	КонецЕсли;
	
	Если ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение И АвторасчетНДС И НДСИсходящийСервер.НуженАвторасчетНДС(Товары) Тогда
		// соответствие для хранения погрешностей округлений
		ПогрешностиОкругления = Новый Соответствие();
		// пересчет сумм НДС с учетом ошибок округления
		НДСИсходящийСервер.ПересчитатьНДСсУчетомПогрешностиОкругления(Товары, ЭтотОбъект, ЦенаВключаетНДС, ПогрешностиОкругления, "Товары", Строка(Валюта));
		
	КонецЕсли;
	
	ОбщегоНазначенияУТ.ОкруглитьКоличествоШтучныхТоваров(ЭтотОбъект, РежимЗаписи);
	
	СформироватьСписокЗависимыхЗаказов();
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьКачествоТоваров") Тогда
		ВозвратПорчи = Ложь;
		Для Каждого СтрТабл из Товары Цикл
			Если СтрТабл.Порча Тогда
				ВозвратПорчи = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Не ВозвратПереданнойМногооборотнойТары
		И ПредусмотренЗалогЗаТару Тогда
		ПредусмотренЗалогЗаТару = Ложь;
	КонецЕсли;
	
	СуммаДокумента = ПолучитьСуммуДокумента();
	
	ПараметрыУказанияСерий = НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ВозвратТоваровОтКлиента);
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ЭтотОбъект,ПараметрыУказанияСерий);
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Если ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера И СуммаДокумента > 0 Тогда
		
			Если РасшифровкаПлатежа.Количество() = 0 Тогда
				НоваяСтрока = РасшифровкаПлатежа.Добавить();
				НоваяСтрока.Сумма = СуммаДокумента;
			КонецЕсли;
			
			ВзаиморасчетыСервер.ЗаполнитьСуммуВзаиморасчетовВТабличнойЧасти(
				Валюта,
				Дата,
				РасшифровкаПлатежа);
		Иначе
			Если РасшифровкаПлатежа.Количество() <> 0 Тогда
				РасшифровкаПлатежа.Очистить();
			КонецЕсли;
		КонецЕсли;
		
		МестаУчета = РегистрыСведений.АналитикаУчетаНоменклатуры.МестаУчета(ХозяйственнаяОперация, Склад, Подразделение, Партнер);
		РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(Товары, МестаУчета);
		
		РегистрыСведений.АналитикаУчетаНаборов.ЗаполнитьВКоллекции(Товары);
		
		ЗаполнитьВидыЗапасов(Отказ);
		ЗаполнитьКлючиАналитикиУчетаПартийДокумента();
		ВзаиморасчетыСервер.ЗаполнитьИдентификаторыСтрокВТабличнойЧасти(ВидыЗапасов);
		
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		Если Не ВидыЗапасовУказаныВручную Тогда
			ВидыЗапасов.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	Если ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя Тогда
		ЧекККМ = Неопределено;
	КонецЕсли;
	
	БонусныеБаллыСервер.ЗаполнитьБонусныеБаллыВозвратТоваровОтКлиента(ЭтотОбъект);
	
	
	
	Если Не ВыданыДенежныеСредства Тогда
		НомерРасходногоКассовогоОрдера = "";
		ДатаРасходногоКассовогоОрдера = '00010101';
	КонецЕсли;
	
	ПорядокРасчетов = ВзаиморасчетыСервер.ПорядокРасчетовПоУмолчанию(ЭтотОбъект);
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера Тогда
		ОжидаемыйСпособПогашенияЗадолженности = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	Документы.ВозвратТоваровОтКлиента.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ЗаказыСервер.ОтразитьТоварыКПоступлению(ДополнительныеСвойства, Движения, Отказ);
	РегистрыНакопления.ТоварыКОформлениюПоступления.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ);
	ЗаказыСервер.ОтразитьЗаявкиНаВозвратТоваровОтКлиентов(ДополнительныеСвойства, Движения, Отказ);
	ЗаказыСервер.ОтразитьДвижениеТоваров(ДополнительныеСвойства, Движения, Отказ);
	
	ЗапасыСервер.ОтразитьТоварыНаСкладах(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыПереданныеНаКомиссию(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыКОформлениюОтчетовКомитента(ДополнительныеСвойства, Движения, Отказ);
	ВзаиморасчетыСервер.ОтразитьРасчетыСКлиентами(ДополнительныеСвойства, Движения, Отказ);
	ДоходыИРасходыСервер.ОтразитьСебестоимостьТоваров(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьСвободныеОстатки(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыОрганизаций(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыОрганизацийКПередаче(ДополнительныеСвойства, Движения, Отказ);
	ДоходыИРасходыСервер.ОтразитьВыручкуИСебестоимостьПродаж(ДополнительныеСвойства, Движения, Отказ);
	СкладыСервер.ОтразитьДвиженияСерийТоваров(ДополнительныеСвойства, Движения, Отказ);
	ПартионныйУчетСервер.ОтразитьПартииТоваровОрганизаций(ДополнительныеСвойства, Движения, Отказ);
	ВзаиморасчетыСервер.ОтразитьСуммыДокументаВВалютеРегл(ДополнительныеСвойства, Движения, Отказ);
	МногооборотнаяТараСервер.ОтразитьПереданнуюВозвратнуюТару(ДополнительныеСвойства, Движения, Отказ);
	НДСИсходящийСервер.ОтразитьНДСНоменклатурныйСоставДляНалоговыхНакладных(ДополнительныеСвойства, Движения, Отказ);
	НДСИсходящийСервер.ОтразитьНДСРасчетНалоговыхОбязательств(ДополнительныеСвойства, Движения, Отказ);
	СкидкиНаценкиСервер.ОтразитьБонусныеБаллы(ДополнительныеСвойства, Движения, Отказ);
	
	
	// Движения по оборотным регистрам управленческого учета
	УправленческийУчетПроведениеСервер.ОтразитьДвиженияНоменклатураНоменклатура(ДополнительныеСвойства, Движения, Отказ);
	
	
	СформироватьСписокРегистровДляКонтроля();
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	
	РегистрыСведений.СостоянияЗаказовКлиентов.ОтразитьСостояниеЗаказа(ЭтотОбъект, Отказ);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	СформироватьСписокРегистровДляКонтроля();
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	
	РегистрыСведений.СостоянияЗаказовКлиентов.ОтразитьСостояниеЗаказа(ЭтотОбъект, Отказ);
	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ИнициализироватьДокумент();
	ЗаявкаНаВозвратТоваровОтКлиента = Документы.ЗаявкаНаВозвратТоваровОтКлиента.ПустаяСсылка();
	СостояниеЗаполненияМногооборотнойТары = Перечисления.СостоянияЗаполненияМногооборотнойТары.ПустаяСсылка();
	
	ВидыЗапасов.Очистить();
	
	Серии.Очистить();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка ИЛИ ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Запись Тогда
		Возврат;
	КонецЕсли;
	

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеПоОснованию

Процедура ЗаполнитьДокументПоОтбору(Знач ДанныеЗаполнения)
	
	Если ДанныеЗаполнения.Свойство("ХозяйственнаяОперация") Тогда
		ХозяйственнаяОперация = ДанныеЗаполнения.ХозяйственнаяОперация;
		Если ДанныеЗаполнения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя Тогда
			Партнер = Справочники.Партнеры.РозничныйПокупатель;
			Если ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами") Тогда
				ЗаполнитьУсловияПродажПоУмолчанию();
			КонецЕсли;
		ИначеЕсли ДанныеЗаполнения.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера Тогда
		КонецЕсли;
	ИначеЕсли ДанныеЗаполнения.Свойство("Партнер") Тогда
		Партнер = ДанныеЗаполнения.Партнер;
		Если ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами") Тогда
			ЗаполнитьУсловияПродажПоУмолчанию();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДокументНаОснованииРеализацииТоваровИУслуг(Знач ДокументОснование)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка
	|
	|ПОМЕСТИТЬ ОбъектыРасчетов
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Договор КАК Ссылка
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.ЗаказКлиента КАК Ссылка
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|	И ТаблицаТовары.Ссылка.РеализацияПоЗаказам
	|	И ТаблицаТовары.ЗаказКлиента <> НЕОПРЕДЕЛЕНО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК ДокументРеализации,
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	РеализацияТоваровУслуг.Соглашение КАК Соглашение,
	|	РеализацияТоваровУслуг.Организация КАК Организация,
	|	РеализацияТоваровУслуг.Партнер КАК Партнер,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.КонтактноеЛицо КАК КонтактноеЛицо,
	|	РеализацияТоваровУслуг.Валюта КАК Валюта,
	|	РеализацияТоваровУслуг.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	РеализацияТоваровУслуг.Сделка КАК Сделка,
	|	РеализацияТоваровУслуг.Подразделение КАК Подразделение,
	|	РеализацияТоваровУслуг.Статус КАК СтатусДокумента,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Склад.ЭтоГруппа
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|		ИНАЧЕ РеализацияТоваровУслуг.Склад
	|	КОНЕЦ КАК Склад,
	|	РеализацияТоваровУслуг.ХозяйственнаяОперация КАК ХозяйственнаяОперацияРеализация,
	|	РеализацияТоваровУслуг.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	РеализацияТоваровУслуг.Договор КАК Договор,
	|	РеализацияТоваровУслуг.ВернутьМногооборотнуюТару КАК ВозвратПереданнойМногооборотнойТары,
	|	РеализацияТоваровУслуг.ТребуетсяЗалогЗаТару КАК ПредусмотренЗалогЗаТару,
	|	НЕ РеализацияТоваровУслуг.Проведен КАК ЕстьОшибкиПроведен,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.Отгружено)
	|			ИЛИ РеализацияТоваровУслуг.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьОшибкиСтатус,
	|	РеализацияТоваровУслуг.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыСКлиентами.ЗаказКлиента КАК ЗаказКлиента,
	|	РасчетыСКлиентами.Валюта КАК ВалютаВзаиморасчетов,
	|	ЕСТЬNULL(РасчетыСКлиентами.СуммаОстаток, 0) КАК СуммаОстаток
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами.Остатки(
	|			,
	|			ЗаказКлиента В
	|				(ВЫБРАТЬ
	|					ОбъектыРасчетов.Ссылка
	|				ИЗ
	|					ОбъектыРасчетов)) КАК РасчетыСКлиентами
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НоменклатураНабора КАК НоменклатураНабора,
	|	ТаблицаТовары.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ТаблицаТовары.Упаковка КАК Упаковка,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.ВидЦены КАК ВидЦены,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаТовары.КодСтроки КАК КодСтроки,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.ЗаказКлиента КАК ЗаказКлиента,
	|	ТаблицаТовары.СуммаРучнойСкидки КАК СуммаРучнойСкидки,
	|	ТаблицаТовары.СуммаАвтоматическойСкидки КАК СуммаАвтоматическойСкидки
	|ПОМЕСТИТЬ ТоварыДокументаПродажи
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	ТоварыДокументаПродажи.НоменклатураНабора КАК НоменклатураНабора,
	|	ТоварыДокументаПродажи.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ТоварыДокументаПродажи.Номенклатура КАК Номенклатура,
	|	ТоварыДокументаПродажи.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТоварыДокументаПродажи.Характеристика КАК Характеристика,
	|	ТоварыДокументаПродажи.Серия КАК Серия,
	|	ТоварыДокументаПродажи.Упаковка КАК Упаковка,
	|	СУММА(ТоварыДокументаПродажи.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СРЕДНЕЕ(ТоварыДокументаПродажи.Цена) КАК Цена,
	|	СУММА(ТоварыДокументаПродажи.Количество) КАК Количество,
	|	СУММА(ТоварыДокументаПродажи.Сумма) КАК Сумма,
	|	ТоварыДокументаПродажи.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ТоварыДокументаПродажи.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ТоварыДокументаПродажи.СуммаСНДС) КАК СуммаСНДС,
	|	СУММА(ТоварыДокументаПродажи.СуммаРучнойСкидки) КАК СуммаРучнойСкидки,
	|	СУММА(ТоварыДокументаПродажи.СуммаАвтоматическойСКидки) КАК СуммаАвтоматическойСКидки
	|ПОМЕСТИТЬ ТоварыРеализации
	|ИЗ
	|	ТоварыДокументаПродажи КАК ТоварыДокументаПродажи
	|СГРУППИРОВАТЬ ПО
	|	ТоварыДокументаПродажи.НоменклатураНабора,
	|	ТоварыДокументаПродажи.ХарактеристикаНабора,
	|	ТоварыДокументаПродажи.Номенклатура,
	|	ТоварыДокументаПродажи.ТипНоменклатуры,
	|	ТоварыДокументаПродажи.Характеристика,
	|	ТоварыДокументаПродажи.Серия,
	|	ТоварыДокументаПродажи.Упаковка,
	|	ТоварыДокументаПродажи.СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВозвратТоваровОтКлиентаТовары.НоменклатураНабора КАК НоменклатураНабора,
	|	ВозвратТоваровОтКлиентаТовары.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ВозвратТоваровОтКлиентаТовары.Номенклатура КАК Номенклатура,
	|	ВозвратТоваровОтКлиентаТовары.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ВозвратТоваровОтКлиентаТовары.Характеристика КАК Характеристика,
	|	ВозвратТоваровОтКлиентаТовары.Серия КАК Серия,
	|	ВозвратТоваровОтКлиентаТовары.Упаковка КАК Упаковка,
	|	СУММА(ВозвратТоваровОтКлиентаТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(ВозвратТоваровОтКлиентаТовары.Количество) КАК Количество,
	|	СУММА(ВозвратТоваровОтКлиентаТовары.Сумма) КАК Сумма,
	|	ВозвратТоваровОтКлиентаТовары.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ВозвратТоваровОтКлиентаТовары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ВозвратТоваровОтКлиентаТовары.СуммаСНДС) КАК СуммаСНДС,
	|	СРЕДНЕЕ(ВозвратТоваровОтКлиентаТовары.Цена) КАК Цена
	|ПОМЕСТИТЬ ТоварыПредыдущихВозвратов
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Товары КАК ВозвратТоваровОтКлиентаТовары
	|ГДЕ
	|	ВозвратТоваровОтКлиентаТовары.ДокументРеализации = &ДокументОснование
	|	И ВозвратТоваровОтКлиентаТовары.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ВозвратТоваровОтКлиентаТовары.НоменклатураНабора,
	|	ВозвратТоваровОтКлиентаТовары.ХарактеристикаНабора,
	|	ВозвратТоваровОтКлиентаТовары.Номенклатура,
	|	ВозвратТоваровОтКлиентаТовары.Номенклатура.ТипНоменклатуры,
	|	ВозвратТоваровОтКлиентаТовары.Характеристика,
	|	ВозвратТоваровОтКлиентаТовары.Серия,
	|	ВозвратТоваровОтКлиентаТовары.Упаковка,
	|	ВозвратТоваровОтКлиентаТовары.СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыРеализации.НоменклатураНабора КАК НоменклатураНабора,
	|	ТоварыРеализации.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ТоварыРеализации.Номенклатура КАК Номенклатура,
	|	ТоварыРеализации.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТоварыРеализации.Характеристика КАК Характеристика,
	|	ТоварыРеализации.Серия КАК Серия,
	|	ТоварыРеализации.Количество - ЕСТЬNULL(ТоварыПредыдущихВозвратов.Количество, 0) КАК Количество,
	|	ТоварыРеализации.КоличествоУпаковок - ЕСТЬNULL(ТоварыПредыдущихВозвратов.КоличествоУпаковок, 0) КАК КоличествоУпаковок,
	|	ТоварыРеализации.Упаковка КАК Упаковка,
	|	ТоварыРеализации.СтавкаНДС КАК СтавкаНДС,
	|	ВЫБОР
	|		КОГДА ТоварыРеализации.КоличествоУпаковок - ЕСТЬNULL(ТоварыПредыдущихВозвратов.КоличествоУпаковок, 0) = 0
	|			ТОГДА ТоварыРеализации.Цена
	|		ИНАЧЕ (ТоварыРеализации.Сумма - ЕСТЬNULL(ТоварыПредыдущихВозвратов.Сумма, 0)) / (ТоварыРеализации.КоличествоУпаковок - ЕСТЬNULL(ТоварыПредыдущихВозвратов.КоличествоУпаковок, 0))
	|	КОНЕЦ КАК Цена,
	|	ТоварыРеализации.Сумма - ЕСТЬNULL(ТоварыПредыдущихВозвратов.Сумма, 0) КАК Сумма,
	|	ТоварыРеализации.СуммаНДС - ЕСТЬNULL(ТоварыПредыдущихВозвратов.СуммаНДС, 0) КАК СуммаНДС,
	|	ТоварыРеализации.СуммаСНДС - ЕСТЬNULL(ТоварыПредыдущихВозвратов.СуммаСНДС, 0) КАК СуммаСНДС,
	|	&ДокументОснование КАК ДокументРеализации
	|ИЗ
	|	ТоварыРеализации КАК ТоварыРеализации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыПредыдущихВозвратов КАК ТоварыПредыдущихВозвратов
	|		ПО    ТоварыРеализации.Номенклатура = ТоварыПредыдущихВозвратов.Номенклатура
	|			И ТоварыРеализации.Характеристика = ТоварыПредыдущихВозвратов.Характеристика
	|			И ТоварыРеализации.НоменклатураНабора = ТоварыПредыдущихВозвратов.НоменклатураНабора
	|			И ТоварыРеализации.ХарактеристикаНабора = ТоварыПредыдущихВозвратов.ХарактеристикаНабора
	|			И ТоварыРеализации.Серия = ТоварыПредыдущихВозвратов.Серия
	|ГДЕ
	|	ТоварыРеализации.Количество - ЕСТЬNULL(ТоварыПредыдущихВозвратов.Количество, 0) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПереданнаяВозвратнаяТараОстатки.Номенклатура КАК Номенклатура,
	|	ПереданнаяВозвратнаяТараОстатки.Характеристика КАК Характеристика,
	|	ПереданнаяВозвратнаяТараОстатки.Партнер КАК Партнер,
	|	ПереданнаяВозвратнаяТараОстатки.ДокументПередачи КАК ДокументПередачи,
	|	ПереданнаяВозвратнаяТараОстатки.КоличествоОстаток КАК Количество,
	|	ПереданнаяВозвратнаяТараОстатки.СуммаОстаток КАК Сумма
	|ПОМЕСТИТЬ втПереданнаяВозвратнаяТара
	|ИЗ
	|	РегистрНакопления.ПереданнаяВозвратнаяТара.Остатки(, ДокументПередачи = &ДокументОснование) КАК ПереданнаяВозвратнаяТараОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПереданнаяВозвратнаяТара.Номенклатура КАК Номенклатура,
	|	втПереданнаяВозвратнаяТара.Характеристика КАК Характеристика,
	|	втПереданнаяВозвратнаяТара.ДокументПередачи КАК ДокументРеализации,
	|	СУММА(втПереданнаяВозвратнаяТара.Количество) КАК Количество,
	|	СУММА(втПереданнаяВозвратнаяТара.Количество) КАК КоличествоУпаковок,
	|	СУММА(втПереданнаяВозвратнаяТара.Сумма) КАК Сумма,
	|	СУММА(втПереданнаяВозвратнаяТара.Сумма) КАК СуммаСНДС,
	|	ВЫБОР
	|		КОГДА СУММА(втПереданнаяВозвратнаяТара.Количество) = 0
	|			ТОГДА СУММА(втПереданнаяВозвратнаяТара.Сумма)
	|		ИНАЧЕ СУММА(втПереданнаяВозвратнаяТара.Сумма) / СУММА(втПереданнаяВозвратнаяТара.Количество)
	|	КОНЕЦ КАК Цена,
	|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) КАК СтавкаНДС
	|ИЗ
	|	втПереданнаяВозвратнаяТара КАК втПереданнаяВозвратнаяТара
	|
	|СГРУППИРОВАТЬ ПО
	|	втПереданнаяВозвратнаяТара.Номенклатура,
	|	втПереданнаяВозвратнаяТара.Характеристика,
	|	втПереданнаяВозвратнаяТара.ДокументПередачи
	|
	|ИМЕЮЩИЕ
	|	СУММА(втПереданнаяВозвратнаяТара.Количество) > 0");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	ВыборкаШапка = ПакетЗапросов[1].Выбрать();
	ВыборкаРасчетыПоОснованию = ПакетЗапросов[2].Выбрать();
	
	ВыборкаШапка.Следующий();
	
	МассивДопустимыхСтатусов = Новый Массив();
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыРеализацийТоваровУслуг.Отгружено);
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		ВыборкаШапка.Ссылка,
		ВыборкаШапка.СтатусДокумента,
		ВыборкаШапка.ЕстьОшибкиПроведен,
		ВыборкаШапка.ЕстьОшибкиСтатус,
		МассивДопустимыхСтатусов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапка);
	
	ХозяйственнаяОперация = ПродажиСервер.ПолучитьХозяйственнуюОперациюВозвратаПоРеализации(ВыборкаШапка.ХозяйственнаяОперацияРеализация);
	
	ТаблицаТоваров = ПакетЗапросов[6].Выгрузить();
	
	Для Каждого ТекСтрока Из ТаблицаТоваров Цикл
		
		Если ТекСтрока.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар
			Или (ТекСтрока.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.МногооборотнаяТара И НЕ ВыборкаШапка.ВозвратПереданнойМногооборотнойТары) Тогда
			
			НоваяСтрока = Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекСтрока);
			Ценообразование.ПересчитатьСуммыВСтрокеПоСуммеСНДС(
				НоваяСтрока,
				ВыборкаШапка.ЦенаВключаетНДС,
				Ложь,
				Ложь,
				Истина);
				
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаТары = ПакетЗапросов[8].Выгрузить();
	
	Для каждого ТекущаяСтрока Из ТаблицаТары Цикл
		
		НоваяСтрока = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекущаяСтрока);
		
		Ценообразование.ПересчитатьСуммыВСтрокеПоСуммеСНДС(НоваяСтрока, ВыборкаШапка.ЦенаВключаетНДС, Ложь, Ложь, Истина);
		
	КонецЦикла;
	
	ЗаполнитьВзаиморасчеты(ВыборкаРасчетыПоОснованию);
	
КонецПроцедуры

Процедура ЗаполнитьДокументНаОснованииЧекаККМ(Знач ДокументОснование)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя) КАК ХозяйственнаяОперация,
		|	ОтчетОРозничныхПродажах.Ссылка    КАК ДокументРеализации,
		|	ОтчетОРозничныхПродажах.Подразделение КАК Подразделение,
		|	ЧекККМ.Партнер                    КАК Партнер,
		|	ЧекККМ.Ссылка                     КАК ЧекККМ,
		|	ЧекККМ.Статус                     КАК Статус,
		|	ЧекККМ.КассоваяСмена              КАК КассоваяСмена,
		|	ЧекККМ.Организация                КАК Организация,
		|	ЧекККМ.Валюта                     КАК Валюта,
		|	ЧекККМ.Валюта                     КАК ВалютаВзаиморасчетов,
		|	ЧекККМ.Склад                      КАК Склад,
		|	ЧекККМ.ЦенаВключаетНДС            КАК ЦенаВключаетНДС,
		|
		|	ВЫБОР КОГДА ЧекККМ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЧековККМ.Пробит) ТОГДА ЛОЖЬ ИНАЧЕ ИСТИНА КОНЕЦ КАК ЕстьОшибкиСтатус,
		|
		|	ЧекККМ.Товары.(
		|		НоменклатураНабора                            КАК НоменклатураНабора,
		|		ХарактеристикаНабора                          КАК ХарактеристикаНабора,
		|		Номенклатура                                  КАК Номенклатура,
		|		Номенклатура.ТипНоменклатуры                  КАК ТипНоменклатуры,
		|		Характеристика                                КАК Характеристика,
		|		Серия                                         КАК Серия,
		|		Упаковка                                      КАК Упаковка,
		|		КоличествоУпаковок                            КАК КоличествоУпаковок,
		|		Количество                                    КАК Количество,
		|		ВЫБОР
		|			КОГДА
		|				СуммаРучнойСкидки + СуммаАвтоматическойСкидки = 0
		|				ИЛИ КоличествоУпаковок = 0
		|			ТОГДА
		|				Цена
		|			ИНАЧЕ
		|				Сумма / КоличествоУпаковок
		|		КОНЕЦ                                         КАК Цена,
		|		Сумма                                         КАК Сумма,
		|		СтавкаНДС                                     КАК СтавкаНДС,
		|		СуммаНДС                                      КАК СуммаНДС,
		|		ВЫБОР КОГДА ЧекККМ.ЦенаВключаетНДС
		|			ТОГДА Сумма
		|			ИНАЧЕ Сумма + СуммаНДС
		|		КОНЕЦ                                         КАК СуммаСНДС,
		|		СуммаРучнойСкидки                             КАК СуммаРучнойСкидки,
		|		СуммаАвтоматическойСкидки                     КАК СуммаАвтоматическойСкидки,
		|		ПроцентРучнойСкидки                           КАК ПроцентРучнойСкидки,
		|		ПроцентАвтоматическойСкидки                   КАК ПроцентАвтоматическойСкидки
		|	) КАК Товары,
		|
		|	ЧекККМ.Серии.(
		|		Номенклатура                                 КАК Номенклатура,
		|		Характеристика                               КАК Характеристика,
		|		Серия                                        КАК Серия,
		|		Количество                                   КАК Количество
		|	) КАК Серии
		|
		|ИЗ
		|	Документ.ЧекККМ КАК ЧекККМ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
		|		ПО ЧекККМ.КассоваяСмена = ОтчетОРозничныхПродажах.КассоваяСмена
		|ГДЕ
		|	ЧекККМ.Ссылка = &ДокументОснование");
		
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	ВыборкаШапка = Запрос.Выполнить().Выбрать();
	ВыборкаШапка.Следующий();
		
	МассивДопустимыхСтатусов = Новый Массив();
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыЧековККМ.Пробит);
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		ВыборкаШапка.ЧекККМ,
		ВыборкаШапка.Статус,
		,
		ВыборкаШапка.ЕстьОшибкиСтатус,
		МассивДопустимыхСтатусов);
	
	Если РозничныеПродажи.СменаОткрыта(ВыборкаШапка.КассоваяСмена, Дата) Тогда
		ВызватьИсключение НСтр("ru='Кассовая смена открыта! Ввод на основании чека документа ""Возврат товаров от клиента"" при открытой кассовой смене запрещен.';uk='Касова зміна відкрита! Введення на підставі чека документа ""Повернення товарів від клієнта"" при відкритій касової зміні заборонене.'");
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапка);
	
	ТаблицаТоваров = ВыборкаШапка.Товары.Выгрузить();
	
	ДокументРеализации = РозничныеПродажи.ПолучитьОтчетОРозничныхПродажахПоЧекуККМ(ДокументОснование);
	
	Для Каждого ТекСтрока Из ТаблицаТоваров Цикл
		
		Если ТекСтрока.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар
			Или ТекСтрока.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.МногооборотнаяТара Тогда
		
			НоваяСтрока = Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекСтрока);
			НоваяСтрока.ДокументРеализации = ДокументРеализации;
		КонецЕсли;
		
	КонецЦикла;
	
	Серии.Загрузить(ВыборкаШапка.Серии.Выгрузить());
	
	Если ЗначениеЗаполнено (Партнер) Тогда
		
		УсловияПродажПоУмолчанию = ПродажиСервер.ПолучитьУсловияПродажПоУмолчанию(Партнер);
		
		Если УсловияПродажПоУмолчанию <> Неопределено Тогда
			
			Соглашение = УсловияПродажПоУмолчанию.Соглашение;
			ЗаполнитьУсловияПродаж(УсловияПродажПоУмолчанию, Ложь);
			
		Иначе
			ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Партнер, Контрагент);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДокументНаОснованииЗаявкиНаВозвратТоваровОтКлиента(Знач ДокументОснование)
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("ИспользоватьРасширенныеВозможностиЗаказаКлиента",
		ПолучитьФункциональнуюОпцию("ИспользоватьРасширенныеВозможностиЗаказаКлиента"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВозвращаемыеТовары.ДокументРеализации КАК Ссылка
	|
	|ПОМЕСТИТЬ ОбъектыРасчетов
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента.ВозвращаемыеТовары КАК ВозвращаемыеТовары
	|ГДЕ
	|	ВозвращаемыеТовары.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВозвращаемыеТовары.ДокументРеализации.Договор КАК Ссылка
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента.ВозвращаемыеТовары КАК ВозвращаемыеТовары
	|ГДЕ
	|	ВозвращаемыеТовары.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.ЗаказКлиента КАК Ссылка
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозврат
	|	ПО
	|		ЗаявкаНаВозврат.ДокументРеализации = ТаблицаТовары.Ссылка
	|
	|ГДЕ
	|	ЗаявкаНаВозврат.Ссылка = &ДокументОснование
	|	И ТаблицаТовары.Ссылка.РеализацияПоЗаказам
	|	И ТаблицаТовары.ЗаказКлиента <> НЕОПРЕДЕЛЕНО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаявкаНаВозврат.Ссылка КАК Ссылка
	|
	|ПОМЕСТИТЬ ОбъектыРасчетовПоЗаявке
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозврат
	|ГДЕ
	|	ЗаявкаНаВозврат.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаявкаНаВозврат.Договор КАК Ссылка
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозврат
	|ГДЕ
	|	ЗаявкаНаВозврат.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозврат
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
	|	ПО
	|		ТаблицаТовары.ЗаказКлиента = ЗаявкаНаВозврат.Ссылка
	|
	|ГДЕ
	|	ЗаявкаНаВозврат.Ссылка = &ДокументОснование
	|	И ТаблицаТовары.Ссылка.РеализацияПоЗаказам
	|	И ТаблицаТовары.ЗаказКлиента <> НЕОПРЕДЕЛЕНО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаявкаНаВозвратТоваровОтКлиента.Ссылка                КАК ЗаявкаНаВозвратТоваровОтКлиента,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Партнер               КАК Партнер,
	|	ЗаявкаНаВозвратТоваровОтКлиента.ДокументРеализации    КАК ДокументРеализации,
	|	ЗаявкаНаВозвратТоваровОтКлиента.ЧекККМ                КАК ЧекККМ,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Контрагент            КАК Контрагент,
	|	ЗаявкаНаВозвратТоваровОтКлиента.КонтактноеЛицо        КАК КонтактноеЛицо,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Организация           КАК Организация,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Соглашение            КАК Соглашение,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Валюта                КАК Валюта,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Склад                 КАК Склад,
	|	ЗаявкаНаВозвратТоваровОтКлиента.ВозвратПорчи          КАК ВозвратПорчи,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Сделка                КАК Сделка,
	|	ЗаявкаНаВозвратТоваровОтКлиента.ЦенаВключаетНДС       КАК ЦенаВключаетНДС,
	|	ЗаявкаНаВозвратТоваровОтКлиента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Статус                КАК СтатусДокумента,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Договор               КАК Договор,
	|	
	|	ВЫБОР КОГДА ЗаявкаНаВозвратТоваровОтКлиента.СпособКомпенсации = ЗНАЧЕНИЕ(Перечисление.СпособыКомпенсацииВозвратовТоваров.ЗаменитьТовары) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СпособыКомпенсацииВозвратовТоваров.ВернутьДенежныеСредства)
	|	ИНАЧЕ
	|		ЗаявкаНаВозвратТоваровОтКлиента.СпособКомпенсации
	|	КОНЕЦ КАК СпособКомпенсации,
	|	
	|	НЕ ЗаявкаНаВозвратТоваровОтКлиента.Проведен           КАК ЕстьОшибкиПроведен,
	|	ЗаявкаНаВозвратТоваровОтКлиента.ВернутьМногооборотнуюТару КАК ВозвратПереданнойМногооборотнойТары,
	|	ЗаявкаНаВозвратТоваровОтКлиента.ТребуетсяЗалогЗаТару КАК ПредусмотренЗалогЗаТару,
	|	ЗаявкаНаВозвратТоваровОтКлиента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|
	|	ЗаявкаНаВозвратТоваровОтКлиента.ВозвращаемыеСерии.(
	|		Номенклатура                                 КАК Номенклатура,
	|		Характеристика                               КАК Характеристика,
	|		Серия                                        КАК Серия,
	|		Количество                                   КАК Количество,
	|		ДокументРеализации                           КАК ДокументРеализации
	|	) КАК Серии
	|
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозвратТоваровОтКлиента
	|ГДЕ
	|	ЗаявкаНаВозвратТоваровОтКлиента.Ссылка = &ДокументОснование
	|;
	|ВЫБРАТЬ
	|	РасчетыСКлиентами.ЗаказКлиента                КАК ЗаказКлиента,
	|	РасчетыСКлиентами.Валюта                      КАК ВалютаВзаиморасчетов,
	|	РасчетыСКлиентами.КОплатеОстаток             КАК Сумма,
	|	ЕСТЬNULL(РасчетыСКлиентами.КОплатеОстаток, 0) + ЕСТЬNULL(РасчетыСКлиентами.СуммаОстаток, 0) КАК СуммаОстаток
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами.Остатки(,
	|		ЗаказКлиента В
	|			(ВЫБРАТЬ
	|				Ссылка
	|			ИЗ
	|				ОбъектыРасчетовПоЗаявке)
	|			И ЗаказКлиента <> НЕОПРЕДЕЛЕНО) КАК РасчетыСКлиентами
	|;
	|ВЫБРАТЬ
	|	РасчетыСКлиентами.ЗаказКлиента                КАК ЗаказКлиента,
	|	РасчетыСКлиентами.Валюта                      КАК ВалютаВзаиморасчетов,
	|	РасчетыСКлиентами.КОплатеОстаток              КАК Сумма,
	|	ЕСТЬNULL(РасчетыСКлиентами.СуммаОстаток, 0)   КАК СуммаОстаток
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами.Остатки(,
	|		ЗаказКлиента В
	|			(ВЫБРАТЬ
	|				Ссылка
	|			ИЗ
	|				ОбъектыРасчетов)) КАК РасчетыСКлиентами
	|";
	
	МассивРезультатов                = Запрос.ВыполнитьПакет();
	ВыборкаШапка                     = МассивРезультатов[2].Выбрать();
	ВыборкаРасчетыПоЗаявке           = МассивРезультатов[3].Выбрать();
	ВыборкаРасчетыПоОснованиюЗаявки  = МассивРезультатов[4].Выбрать();
	
	ВыборкаШапка.Следующий();
	
	Документы.ЗаявкаНаВозвратТоваровОтКлиента.ПроверитьВозможностьВводаНаОсновании(
		ВыборкаШапка.ЗаявкаНаВозвратТоваровОтКлиента,
		ВыборкаШапка.СтатусДокумента,
		ВыборкаШапка.ЕстьОшибкиПроведен,
		Истина);
	
	// Заполнение шапки.
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапка);
	
	Серии.Загрузить(ВыборкаШапка.Серии.Выгрузить());
	
	// Заполнение ТЧ товары.
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗаявкаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗаявкаТовары.НоменклатураНабора КАК НоменклатураНабора,
	|	ЗаявкаТовары.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ЗаявкаТовары.Номенклатура КАК Номенклатура,
	|	ЗаявкаТовары.Характеристика КАК Характеристика,
	|	ЗаявкаТовары.Серия КАК Серия,
	|	ЗаявкаТовары.Количество КАК КоличествоВЗаявке,
	|	ЗаявкаТовары.Порча КАК Порча,
	|	ЗаявкаТовары.НоменклатураОприходование КАК НоменклатураОприходование,
	|	ЗаявкаТовары.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|	ЗаявкаТовары.КодСтроки КАК КодСтроки,
	|	ВЫБОР
	|		КОГДА ЗаявкаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ &ТекстЗапросаКоэффициентУпаковки
	|	КОНЕЦ КАК Коэффициент,
	|	ЗаявкаТовары.Упаковка КАК Упаковка,
	|	ЗаявкаТовары.Цена КАК Цена,
	|	ЗаявкаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ЗаявкиНаВозвратТоваровОтКлиентов.КОформлениюОстаток КАК Количество,
	|	ЗаявкаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ЗаявкаТовары.Сумма КАК Сумма,
	|	ЗаявкаТовары.ДокументРеализации КАК ДокументРеализации
	|ИЗ
	|	РегистрНакопления.ЗаявкиНаВозвратТоваровОтКлиентов.Остатки(, ЗаявкаНаВозвратТоваровОтКлиента = &ДокументОснование) КАК ЗаявкиНаВозвратТоваровОтКлиентов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВозвратТоваровОтКлиента.ВозвращаемыеТовары КАК ЗаявкаТовары
	|		ПО (ЗаявкаТовары.Ссылка = &ДокументОснование)
	|			И ЗаявкиНаВозвратТоваровОтКлиентов.КодСтроки = ЗаявкаТовары.КодСтроки
	|			И (ЗаявкиНаВозвратТоваровОтКлиентов.Номенклатура = ВЫБОР
	|				КОГДА ЗаявкаТовары.Порча
	|						И ЗаявкаТовары.Ссылка.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|					ТОГДА ЗаявкаТовары.НоменклатураОприходование
	|				ИНАЧЕ ЗаявкаТовары.Номенклатура
	|			КОНЕЦ)
	|			И (ЗаявкиНаВозвратТоваровОтКлиентов.Характеристика = ВЫБОР
	|				КОГДА ЗаявкаТовары.Порча
	|						И ЗаявкаТовары.Ссылка.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|					ТОГДА ЗаявкаТовары.ХарактеристикаОприходование
	|				ИНАЧЕ ЗаявкаТовары.Характеристика
	|			КОНЕЦ)
	|ГДЕ
	|	ЗаявкиНаВозвратТоваровОтКлиентов.КОформлениюОстаток > 0 И &ИспользоватьРасширенныеВозможностиЗаказаКлиента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаявкаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗаявкаТовары.НоменклатураНабора КАК НоменклатураНабора,
	|	ЗаявкаТовары.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	ЗаявкаТовары.Номенклатура КАК Номенклатура,
	|	ЗаявкаТовары.Характеристика КАК Характеристика,
	|	ЗаявкаТовары.Серия КАК Серия,
	|	ЗаявкаТовары.Количество КАК КоличествоВЗаявке,
	|	ЗаявкаТовары.Порча КАК Порча,
	|	ЗаявкаТовары.НоменклатураОприходование КАК НоменклатураОприходование,
	|	ЗаявкаТовары.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|	ЗаявкаТовары.КодСтроки КАК КодСтроки,
	|	ВЫБОР
	|		КОГДА ЗаявкаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА 1
	|		ИНАЧЕ &ТекстЗапросаКоэффициентУпаковки
	|	КОНЕЦ КАК Коэффициент,
	|	ЗаявкаТовары.Упаковка КАК Упаковка,
	|	ЗаявкаТовары.Цена КАК Цена,
	|	ЗаявкаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ЗаявкаТовары.Количество КАК Количество,
	|	ЗаявкаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ЗаявкаТовары.Сумма КАК Сумма,
	|	ЗаявкаТовары.ДокументРеализации КАК ДокументРеализации
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента.ВозвращаемыеТовары КАК ЗаявкаТовары
	|
	|ГДЕ
	|	ЗаявкаТовары.Ссылка = &ДокументОснование И НЕ &ИспользоватьРасширенныеВозможностиЗаказаКлиента
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ЗаявкаТовары.Упаковка",
		"ЗаявкаТовары.Номенклатура"));
	
	Запрос.Текст = ТекстЗапроса;
	ВыборкаТовары = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаТовары.Следующий() Цикл
		
		СтрокаТаб = Товары.Добавить();
		
		ЗаполнитьЗначенияСвойств(СтрокаТаб, ВыборкаТовары, "НоменклатураНабора, ХарактеристикаНабора, Номенклатура, Характеристика, Серия, Упаковка,
			|КодСтроки, Цена, СтавкаНДС, ДокументРеализации");
		
		СтрокаТаб.Количество         = ВыборкаТовары.Количество;
		СтрокаТаб.КоличествоУпаковок = ВыборкаТовары.Количество / ВыборкаТовары.Коэффициент;
		Если ВыборкаТовары.КоличествоВЗаявке = СтрокаТаб.Количество Тогда
			СтрокаТаб.Сумма = ВыборкаТовары.Сумма;
		Иначе
			СтрокаТаб.Сумма = СтрокаТаб.КоличествоУпаковок * СтрокаТаб.Цена;
		КонецЕсли; 
		СтрокаТаб.СуммаНДС           = Ценообразование.РассчитатьСуммуНДС(СтрокаТаб.Сумма, СтрокаТаб.СтавкаНДС, ЦенаВключаетНДС);
		СтрокаТаб.СуммаСНДС          = ?(ЦенаВключаетНДС, СтрокаТаб.Сумма, СтрокаТаб.Сумма+СтрокаТаб.СуммаНДС);
		
		Если ВыборкаТовары.Порча
			И ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера Тогда
			
			ЗаполнитьЗначенияСвойств(СтрокаТаб, ВыборкаТовары, "Порча, НоменклатураОприходование, ХарактеристикаОприходование")
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Товары.Количество() = 0 Тогда
		
		ТекстСообщения = НСтр("ru='Нет данных для заполнения по документу ""%Заявка%"" .';uk='Немає даних для заповнення за документом ""%Заявка%"" .'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Заявка%", ВыборкаШапка.ЗаявкаНаВозвратТоваровОтКлиента);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ЗаявкаНаВозвратТоваровОтКлиента");
		
	Иначе
		
		Если ВыборкаШапка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента Или
			 ВыборкаШапка.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя Тогда
			
			СуммаКРаспределению = ПолучитьСуммуДокумента();
			
			Пока СуммаКРаспределению > 0 И ВыборкаРасчетыПоОснованиюЗаявки.Следующий() Цикл
				
				Если ВыборкаРасчетыПоОснованиюЗаявки.СуммаОстаток > 0 Тогда
				
					НоваяСтрока                      = РасшифровкаПлатежа.Добавить();
					НоваяСтрока.ВалютаВзаиморасчетов = ВыборкаРасчетыПоОснованиюЗаявки.ВалютаВзаиморасчетов;
					НоваяСтрока.Заказ                = ВыборкаРасчетыПоОснованиюЗаявки.ЗаказКлиента;
					
					Коэффициенты  = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Валюта, ВыборкаРасчетыПоОснованиюЗаявки.ВалютаВзаиморасчетов, ТекущаяДата());
					СуммаПоСтроке = ?(Коэффициенты.КоэффициентПересчетаВВалютуВзаиморасчетов <> 0, ВыборкаРасчетыПоОснованиюЗаявки.СуммаОстаток / Коэффициенты.КоэффициентПересчетаВВалютуВзаиморасчетов, 0);
					
					Если СуммаКРаспределению > СуммаПоСтроке Тогда
						
						НоваяСтрока.Сумма = СуммаПоСтроке;
						
					Иначе
						
						НоваяСтрока.Сумма = СуммаКРаспределению;
						
					КонецЕсли;
						
					СуммаКРаспределению = СуммаКРаспределению - НоваяСтрока.Сумма;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если СуммаКРаспределению > 0 И ВыборкаРасчетыПоЗаявке.Следующий() Тогда
					
				Если ВыборкаРасчетыПоЗаявке.СуммаОстаток > 0 Тогда
					
					НоваяСтрока                      = РасшифровкаПлатежа.Добавить();
					НоваяСтрока.ВалютаВзаиморасчетов = ВыборкаРасчетыПоЗаявке.ВалютаВзаиморасчетов;
					НоваяСтрока.Заказ                = ВыборкаРасчетыПоЗаявке.ЗаказКлиента;
						
					Если СуммаКРаспределению > ВыборкаРасчетыПоЗаявке.СуммаОстаток Тогда
						
						НоваяСтрока.Сумма = ВыборкаРасчетыПоЗаявке.СуммаОстаток;
						
					Иначе
						
						НоваяСтрока.Сумма = СуммаКРаспределению;
						
					КонецЕсли;
						
					СуммаКРаспределению = СуммаКРаспределению - НоваяСтрока.Сумма;
					
				КонецЕсли;
					
			КонецЕсли;
				
			Если СуммаКРаспределению > 0 Тогда
				
				НоваяСтрока = РасшифровкаПлатежа.Добавить();
				
				НоваяСтрока.ВалютаВзаиморасчетов = Валюта;
				НоваяСтрока.Заказ                = Неопределено;
				НоваяСтрока.Сумма                = СуммаКРаспределению;
				
			КонецЕсли;
			
			РасшифровкаПлатежа.Свернуть("Заказ, ВалютаВзаиморасчетов", "Сумма"); 
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера Тогда
		ОжидаемыйСпособПогашенияЗадолженности  = ?(ДокументОснование.ЗаменяющиеТовары.Количество() = 0, 
		                                           Перечисления.СпособыПогашенияЗадолженностиПоВозвратам.ВозвратДенег, 
											       Перечисления.СпособыПогашенияЗадолженностиПоВозвратам.ЗаменаТоваров);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

Процедура ЗаполнитьДокументНаОснованииПереданнойТары(Знач РеквизитыЗаполнения)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыЗаполнения.РеквизитыШапки);
	ПартнерыИКонтрагенты.ЗаполнитьКонтрагентаПартнераПоУмолчанию(Партнер, Контрагент);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами") Тогда
		Если Не ЗначениеЗаполнено(Соглашение) Тогда
			ЗаполнитьУсловияПродажПоУмолчанию();
		КонецЕсли;
	Иначе
		
		Если РеквизитыЗаполнения.РеквизитыШапки.ЦенаВключаетНДС = Неопределено Тогда
			
			РеквизитыЦеныПоУмолчанию = Справочники.ВидыЦен.ВидЦеныИПризнакЦенаВключаетНДСПоУмолчанию(
				Новый Структура("ИспользоватьПриПродаже", Истина),
				Документы.ВозвратТоваровОтКлиента.ПустаяСсылка());
			
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыЦеныПоУмолчанию);
		КонецЕсли;
		
	КонецЕсли;
	
	ВозвратПереданнойМногооборотнойТары = Истина;
	ПредусмотренЗалогЗаТару = РеквизитыЗаполнения.РеквизитыШапки.ПредусмотренЗалогЗаТару;
	
	Если ЭтоАдресВременногоХранилища(РеквизитыЗаполнения.АдресТарыВоВременномХранилище) Тогда
		
		ПереданнаяТара = ПолучитьИзВременногоХранилища(РеквизитыЗаполнения.АдресТарыВоВременномХранилище);
		Товары.Загрузить(ПереданнаяТара);
		
		Для каждого ТекущаяСтрока Из Товары Цикл
			
			ТекущаяСтрока.СуммаСНДС = ТекущаяСтрока.Сумма;
			ТекущаяСтрока.КоличествоУпаковок = ТекущаяСтрока.Количество;
			ТекущаяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
			
			Ценообразование.ПересчитатьСуммыВСтрокеПоСуммеСНДС(ТекущаяСтрока, ЦенаВключаетНДС, Ложь, Ложь, Истина);
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Заполним взаиморасчеты.
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя Тогда
	
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка КАК Ссылка
		|
		|ПОМЕСТИТЬ ОбъектыРасчетов
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Ссылка В (&ДокументыОснования)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Договор КАК Ссылка
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Ссылка  В (&ДокументыОснования)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаТовары.ЗаказКлиента КАК Ссылка
		|ИЗ
		|	Документ.РеализацияТоваровУслуг.Товары КАК ТаблицаТовары
		|ГДЕ
		|	ТаблицаТовары.Ссылка  В (&ДокументыОснования)
		|	И ТаблицаТовары.Ссылка.РеализацияПоЗаказам
		|	И ТаблицаТовары.ЗаказКлиента <> НЕОПРЕДЕЛЕНО
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасчетыСКлиентами.ЗаказКлиента КАК ЗаказКлиента,
		|	РасчетыСКлиентами.Валюта КАК ВалютаВзаиморасчетов,
		|	ЕСТЬNULL(РасчетыСКлиентами.СуммаОстаток, 0) КАК СуммаОстаток
		|ИЗ
		|	РегистрНакопления.РасчетыСКлиентами.Остатки(
		|			,
		|			ЗаказКлиента В
		|				(ВЫБРАТЬ
		|					ОбъектыРасчетов.Ссылка
		|				ИЗ
		|					ОбъектыРасчетов)) КАК РасчетыСКлиентами
		|;
		|");
		
		Запрос.УстановитьПараметр("ДокументыОснования", Товары.ВыгрузитьКолонку("ДокументРеализации"));
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаРасчетыПоОснованию = РезультатЗапроса.Выбрать();
		
		СуммаКРаспределению = ПолучитьСуммуДокумента();
		
		Пока СуммаКРаспределению > 0 И ВыборкаРасчетыПоОснованию.Следующий() Цикл
			
			Если ВыборкаРасчетыПоОснованию.СуммаОстаток > 0 Тогда
				
				НоваяСтрока = РасшифровкаПлатежа.Добавить();
				НоваяСтрока.ВалютаВзаиморасчетов = ВыборкаРасчетыПоОснованию.ВалютаВзаиморасчетов;
				НоваяСтрока.Заказ = ВыборкаРасчетыПоОснованию.ЗаказКлиента;
				
				Если СуммаКРаспределению > ВыборкаРасчетыПоОснованию.СуммаОстаток Тогда
					НоваяСтрока.Сумма = ВыборкаРасчетыПоОснованию.СуммаОстаток;
				Иначе
					НоваяСтрока.Сумма = СуммаКРаспределению;
				КонецЕсли;
				
				СуммаКРаспределению = СуммаКРаспределению - НоваяСтрока.Сумма;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если СуммаКРаспределению > 0 Тогда
			
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			НоваяСтрока.ВалютаВзаиморасчетов = Валюта;
			НоваяСтрока.Сумма = СуммаКРаспределению;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДокументНаОснованииАктаПослеОтгрузки(Знач ДанныеЗаполнения)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса = Документы.АктОРасхожденияхПослеОтгрузки.ТекстЗапросаПерепоставленныйТовар();
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения.ОснованиеАкта);
	Запрос.УстановитьПараметр("АктОРасхождениях",  ДанныеЗаполнения.АктОРасхождениях);
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	ВыборкаШапка = ПакетЗапросов[1].Выбрать();
	ВыборкаРасчетыПоОснованию = ПакетЗапросов[2].Выбрать();
	
	ВыборкаШапка.Следующий();
	
	МассивДопустимыхСтатусов = Новый Массив();
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыРеализацийТоваровУслуг.Отгружено);
	
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		ВыборкаШапка.Ссылка,
		ВыборкаШапка.СтатусДокумента,
		ВыборкаШапка.ЕстьОшибкиПроведен,
		ВыборкаШапка.ЕстьОшибкиСтатус,
		МассивДопустимыхСтатусов);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапка);
	
	ХозяйственнаяОперация = ПродажиСервер.ПолучитьХозяйственнуюОперациюВозвратаПоРеализации(ВыборкаШапка.ХозяйственнаяОперацияРеализация);
	
	ТаблицаТоваров = ПакетЗапросов[12].Выгрузить();
	
	Для Каждого ТекСтрока Из ТаблицаТоваров Цикл
			
		НоваяСтрока = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекСтрока);
		Ценообразование.ПересчитатьСуммыВСтроке(
			НоваяСтрока,
			Ложь,
			Ложь,
			Ложь,
			ВыборкаШапка.ЦенаВключаетНДС);
		
	КонецЦикла;
	
	ЗаполнитьВзаиморасчеты(ВыборкаРасчетыПоОснованию);
	
КонецПроцедуры

Процедура ЗаполнитьДокументНаОснованииАктаПослеПриемки(ДанныеЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ВозвратТоваровОтКлиента.Ссылка                              КАК ДовозвратПоВозврату,
	|	АктОРасхожденияхПослеПриемки.Ссылка                         КАК АктОРасхождениях,
	|	ВозвратТоваровОтКлиента.Соглашение                          КАК Соглашение,
	|	ВозвратТоваровОтКлиента.Организация                         КАК Организация,
	|	ВозвратТоваровОтКлиента.Партнер                             КАК Партнер,
	|	ВозвратТоваровОтКлиента.Контрагент                          КАК Контрагент,
	|	ВозвратТоваровОтКлиента.Валюта                              КАК Валюта,
	|	ВозвратТоваровОтКлиента.Сделка                              КАК Сделка,
	|	ВозвратТоваровОтКлиента.Подразделение                       КАК Подразделение,
	|	ВозвратТоваровОтКлиента.ДокументРеализации                  КАК ДокументРеализации,
	|	ВозвратТоваровОтКлиента.Склад                               КАК Склад,
	|	ВозвратТоваровОтКлиента.ХозяйственнаяОперация               КАК ХозяйственнаяОперация,
	|	ВозвратТоваровОтКлиента.ЗаявкаНаВозвратТоваровОтКлиента     КАК ЗаявкаНаВозвратТоваровОтКлиента,
	|	ВозвратТоваровОтКлиента.ЦенаВключаетНДС                     КАК ЦенаВключаетНДС,
	|	ВозвратТоваровОтКлиента.НалогообложениеНДС                  КАК НалогообложениеНДС,
	|	ВозвратТоваровОтКлиента.Договор                             КАК Договор,
	|	ВозвратТоваровОтКлиента.ПричинаВозврата                     КАК ПричинаВозврата,
	|	ВозвратТоваровОтКлиента.ВозвратПереданнойМногооборотнойТары КАК ВозвратПереданнойМногооборотнойТары,
	|	ВозвратТоваровОтКлиента.ПредусмотренЗалогЗаТару             КАК ПредусмотренЗалогЗаТару,
	|	ВозвратТоваровОтКлиента.СпособКомпенсации                   КАК СпособКомпенсации,
	|	НЕ ВозвратТоваровОтКлиента.Проведен                         КАК ЕстьОшибкиПроведенОснование,
	|	НЕ АктОРасхожденияхПослеПриемки.Проведен                    КАК ЕстьОшибкиПроведенАктОРасхождениях,
	|	АктОРасхожденияхПослеПриемки.Статус                         КАК СтатусАктаОРасхождениях,
	|	НЕ АктОРасхожденияхПослеПриемки.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению), ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано)) КАК ЕстьОшибкиСтатусАкт
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктОРасхожденияхПослеПриемки КАК АктОРасхожденияхПослеПриемки
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ВозвратТоваровОтКлиента.Ссылка = &ДокументОснование
	|	И АктОРасхожденияхПослеПриемки.Ссылка = &АктОРасхождениях
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////1
	|ВЫБРАТЬ
	|	АктОРасхожденияхПослеПриемки.Номенклатура           КАК Номенклатура,
	|	АктОРасхожденияхПослеПриемки.Характеристика         КАК Характеристика,
	|	АктОРасхожденияхПослеПриемки.Серия                  КАК Серия,
	|	АктОРасхожденияхПослеПриемки.СтатусУказанияСерий    КАК СтатусУказанияСерий,
	|	АктОРасхожденияхПослеПриемки.Упаковка               КАК Упаковка,
	|	АктОРасхожденияхПослеПриемки.Цена                   КАК Цена,
	|	АктОРасхожденияхПослеПриемки.СтавкаНДС              КАК СтавкаНДС,
	|	АктОРасхожденияхПослеПриемки.ДокументРеализации     КАК ДокументРеализации,
	|	АктОРасхожденияхПослеПриемки.КодСтроки              КАК КодСтроки,
	|
	|	СУММА(АктОРасхожденияхПослеПриемки.КоличествоПоДокументу - АктОРасхожденияхПослеПриемки.Количество)                 КАК Количество,
	|	СУММА(АктОРасхожденияхПослеПриемки.КоличествоУпаковокПоДокументу - АктОРасхожденияхПослеПриемки.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(АктОРасхожденияхПослеПриемки.СуммаПоДокументу - АктОРасхожденияхПослеПриемки.Сумма)                           КАК Сумма,
	|	СУММА(АктОРасхожденияхПослеПриемки.СуммаНДСПоДокументу - АктОРасхожденияхПослеПриемки.СуммаНДС)                     КАК СуммаНДС,
	|	СУММА(АктОРасхожденияхПослеПриемки.СуммаСНДСПоДокументу - АктОРасхожденияхПослеПриемки.СуммаСНДС)                   КАК СуммаСНДС
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки.Товары КАК АктОРасхожденияхПослеПриемки
	|ГДЕ
	|	АктОРасхожденияхПослеПриемки.Ссылка = &АктОРасхождениях
	|	И АктОРасхожденияхПослеПриемки.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку)
	|	И АктОРасхожденияхПослеПриемки.ДокументОснование = &ДокументОснование
	|	И АктОРасхожденияхПослеПриемки.КоличествоУпаковокПоДокументу - АктОРасхожденияхПослеПриемки.КоличествоУпаковок > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Серия,
	|	СтатусУказанияСерий,
	|	Упаковка,
	|	Цена,
	|	СтавкаНДС,
	|	ДокументРеализации,
	|	КодСтроки
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////2
	|ВЫБРАТЬ
	|	АктОРасхожденияхПослеПриемкиСерии.Номенклатура                                                                 КАК Номенклатура,
	|	АктОРасхожденияхПослеПриемкиСерии.Характеристика                                                               КАК Характеристика,
	|	АктОРасхожденияхПослеПриемкиСерии.Серия                                                                        КАК Серия,
	|	СУММА(АктОРасхожденияхПослеПриемкиСерии.КоличествоПоДокументу - АктОРасхожденияхПослеПриемкиСерии.Количество)  КАК Количество
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки.Серии КАК АктОРасхожденияхПослеПриемкиСерии
	|ГДЕ
	|	АктОРасхожденияхПослеПриемкиСерии.Ссылка = &АктОРасхождениях
	|	И АктОРасхожденияхПослеПриемкиСерии.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку)
	|	И АктОРасхожденияхПослеПриемкиСерии.ДокументОснование = &ДокументОснование
	|	И АктОРасхожденияхПослеПриемкиСерии.КоличествоПоДокументу - АктОРасхожденияхПослеПриемкиСерии.Количество > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	АктОРасхожденияхПослеПриемкиСерии.Номенклатура,
	|	АктОРасхожденияхПослеПриемкиСерии.Характеристика,
	|	АктОРасхожденияхПослеПриемкиСерии.Серия
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////3
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АктОРасхожденияхПослеПриемкиТовары.ДокументРеализации КАК ДокументРеализации
	|
	|ПОМЕСТИТЬ РеализацииВозврата
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки.Товары КАК АктОРасхожденияхПослеПриемкиТовары
	|ГДЕ
	|	АктОРасхожденияхПослеПриемкиТовары.Ссылка = &АктОРасхождениях
	|	И АктОРасхожденияхПослеПриемкиТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку)
	|	И АктОРасхожденияхПослеПриемкиТовары.ДокументОснование = &ДокументОснование
	|	И АктОРасхожденияхПослеПриемкиТовары.КоличествоУпаковокПоДокументу - АктОРасхожденияхПослеПриемкиТовары.КоличествоУпаковок > 0
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////4
	|
	|ВЫБРАТЬ
	|	РеализацииВозврата.ДокументРеализации КАК Ссылка
	|ПОМЕСТИТЬ ОбъектыРасчетов
	|ИЗ
	|	РеализацииВозврата КАК РеализацииВозврата
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АктОРасхожденияхПослеПриемки.Договор КАК Ссылка
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки КАК АктОРасхожденияхПослеПриемки
	|ГДЕ
	|	АктОРасхожденияхПослеПриемки.Ссылка = &АктОРасхождениях
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеализацияТоваровУслугТовары.ЗаказКлиента
	|ИЗ
	|Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка В
	|		(ВЫБРАТЬ
	|			РеализацииВозврата.ДокументРеализации
	|		ИЗ
	|			РеализацииВозврата КАК РеализацииВозврата)
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////5
	|ВЫБРАТЬ
	|	РасчетыСКлиентами.ЗаказКлиента              КАК ЗаказКлиента,
	|	РасчетыСКлиентами.Валюта                    КАК ВалютаВзаиморасчетов,
	|	ЕСТЬNULL(РасчетыСКлиентами.СуммаОстаток, 0) КАК СуммаОстаток
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами.Остатки(
	|			,
	|			ЗаказКлиента В
	|				(ВЫБРАТЬ
	|					ОбъектыРасчетов.Ссылка
	|				ИЗ
	|					ОбъектыРасчетов)) КАК РасчетыСКлиентами";
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения.ОснованиеАкта);
	Запрос.УстановитьПараметр("АктОРасхождениях", ДанныеЗаполнения.АктОРасхождениях);
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	ВыборкаШапка = ПакетЗапросов[0].Выбрать();
	
	ВыборкаШапка.Следующий();
	
	// По документу возврата
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		ВыборкаШапка.ДовозвратПоВозврату,
		,
		ВыборкаШапка.ЕстьОшибкиПроведенОснование,
		,
		);
		
	// По акту о расхождениях
	ОбщегоНазначенияУТ.ПроверитьВозможностьВводаНаОсновании(
		ВыборкаШапка.АктОРасхождениях,
		ВыборкаШапка.СтатусАктаОРасхождениях,
		ВыборкаШапка.ЕстьОшибкиПроведенАктОРасхождениях,
		ВыборкаШапка.ЕстьОшибкиСтатусАкт,
		РасхожденияСервер.МассивДопустимыхСтатусовАктовОРасхожденияхПриСозданииНаОсновании());
		
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапка);
	
	ТаблицаТоваров = ПакетЗапросов[1].Выгрузить();
	
	Для Каждого ТекСтрока Из ТаблицаТоваров Цикл
			
		НоваяСтрока = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекСтрока);
		Ценообразование.ПересчитатьСуммыВСтроке(
			НоваяСтрока,
			Ложь,
			Ложь,
			Ложь,
			ВыборкаШапка.ЦенаВключаетНДС);
		
	КонецЦикла;
		
	Серии.Загрузить(ПакетЗапросов[2].Выгрузить());
	
	ВыборкаРасчетыПоОснованию = ПакетЗапросов[5].Выбрать();
	ЗаполнитьВзаиморасчеты(ВыборкаРасчетыПоОснованию);
	
КонецПроцедуры

#КонецОбласти

#Область Инициализация

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)
	
	Менеджер             = Пользователи.ТекущийПользователь();
	Валюта               = ЗначениеНастроекПовтИсп.ПолучитьВалютуРегламентированногоУчета(Валюта);
	ВалютаВзаиморасчетов = ЗначениеНастроекПовтИсп.ПолучитьВалютуРегламентированногоУчета(ВалютаВзаиморасчетов);
	Организация          = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	Склад                = ЗначениеНастроекПовтИсп.ПолучитьСкладПоУмолчанию(Склад);
	Подразделение        = ЗначениеНастроекПовтИсп.ПодразделениеПользователя(Менеджер, Подразделение);
	НалогообложениеНДСПоУмолчанию   = НДСОбщегоНазначенияСервер.ПолучитьНалогообложениеНДС(Организация, Контрагент, Дата, Истина);
	АвторасчетНДС	                = НДСИсходящийСервер.ПолучитьФлагАвторасчетНДС(НалогообложениеНДСПоУмолчанию);
	
КонецПроцедуры

Процедура ИнициализироватьУсловияПродаж()
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами") Тогда
		ЗаполнитьУсловияПродажПоУмолчанию();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ВидыЗапасов

Процедура ЗаполнитьВидыЗапасов(Отказ)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерВременныхТаблиц = ВременныеТаблицыДанныхДокумента();
	
	Если Не Проведен
		Или ДополнительныеСвойства.Свойство("ПерезаполнитьВидыЗапасов")
		Или ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц)
		Или ПроверитьИзменениеТоваров(МенеджерВременныхТаблиц) Тогда
		
		// Проверка заполнения документов реализации
		СтрокиБезДокументаРеализации = УникальностьДокументовРеализацииНоНоменклатуре();
		
		Если СтрокиБезДокументаРеализации.Количество() Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru='В документе нельзя указывать строки по одной и той же позиции номенклатуры и с документом продажи и без него.';uk='В документі не можна вказувати рядки по одній і тій же позиції номенклатури та з документом продажу і без нього.'"),
				ЭтотОбъект,
				,
				,
				Отказ);
			
			Пока СтрокиБезДокументаРеализации.Следующий() Цикл
				
				АдресОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru=' в строке %1 списка ""Товары""';uk=' у рядку %1 списку ""Товари""'"),
					СтрокиБезДокументаРеализации.НомерСтроки);
				
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
					"Товары",
					СтрокиБезДокументаРеализации.НомерСтроки,
					"ДокументРеализации");
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru='Не заполнена колонка ""Документ продажи""';uk='Не заповнена колонка ""Документ продажу""'") + АдресОшибки,
					ЭтотОбъект,
					Поле,
					,
					Отказ);
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если Не Отказ Тогда
			
			СформироватьДоступныеВидыЗапасов(МенеджерВременныхТаблиц);
			ЗапасыСервер.УстановитьБлокировкуОстатковТоваровОрганизаций(МенеджерВременныхТаблиц);
			ЗапасыСервер.ТаблицаОстатковРеализованныхТоваров(
				Ссылка,
				Организация,
				Склад,
				ХозяйственнаяОперация,
				МенеджерВременныхТаблиц,
				ВозвратПереданнойМногооборотнойТары
				);
			ТаблицаОшибок = ЗапасыСервер.ТаблицаОшибокЗаполненияВидовЗапасов();
			
			ЗапасыСервер.ЗаполнитьВидыЗапасовДокумента(
				МенеджерВременныхТаблиц,
				ДополнительныеСвойства,
				ВидыЗапасов,
				ТаблицаОшибок);
			ВидыЗапасов.Свернуть("АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД, ВидЗапасовОтгрузки, СкладОтгрузки, СтавкаНДС, ЦелевоеНалоговоеНазначение, ДокументРеализации", "Количество, СуммаСНДС, СуммаНДС");
			
			// Скорректируем заполнение видов запасов с учетом остатков у комиссионера.
			Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера Тогда
				ЗаполнитьВидыЗапасовПоОстаткамУКомиссионера(МенеджерВременныхТаблиц, Отказ);
			КонецЕсли;
			
			Если Не Отказ Тогда
				ЗаполнитьНоменклатуруОприходованиеВидовЗапасов(Отказ);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьВидыЗапасовПоОстаткамУКомиссионера(МенеджерВременныхТаблиц, Отказ)
	
	Запрос = Новый Запрос("
	|УНИЧТОЖИТЬ ТаблицаОстатков
	|;
	|УНИЧТОЖИТЬ ВтВидыЗапасов
	|;
	|УНИЧТОЖИТЬ ТаблицаДокумента
	|;
	|УНИЧТОЖИТЬ ВтВидыЗапасовСводно
	|;
	|УНИЧТОЖИТЬ ВтОстатки
	|;
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.НоменклатураОприходование,
	|	ТаблицаВидыЗапасов.ХарактеристикаОприходование,
	|	ТаблицаВидыЗапасов.Серия,
	|	ТаблицаВидыЗапасов.ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД,
	|	ТаблицаВидыЗапасов.СтавкаНДС,
	|	ТаблицаВидыЗапасов.СкладОтгрузки,
	|	ВЫБОР КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера) ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.ДокументРеализации
	|	КОНЕЦ КАК ДокументРеализации,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	ТаблицаВидыЗапасов.Количество,
	|	ТаблицаВидыЗапасов.СуммаСНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС
	|ПОМЕСТИТЬ
	|	ВтВидыЗапасов
	|ИЗ
	|	&ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|");
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("ТаблицаВидыЗапасов", ВидыЗапасов.Выгрузить());
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	ЗапасыСервер.ТаблицаОстатковТоваровПереданныхНаКомиссию(
		Ссылка,
		Организация,
		Партнер,
		Соглашение,
		КонецМесяца(Дата),
		ДополнительныеСвойства,
		МенеджерВременныхТаблиц,
		Склад);
	ТаблицаОшибок = ЗапасыСервер.ТаблицаОшибокЗаполненияВидовЗапасов();
			
	ЗапасыСервер.ЗаполнитьВидыЗапасовДокумента(
		МенеджерВременныхТаблиц,
		ДополнительныеСвойства,
		ВидыЗапасов,
		ТаблицаОшибок);
	ВидыЗапасов.Свернуть("АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД, ВидЗапасовОтгрузки, СкладОтгрузки, СтавкаНДС, ЦелевоеНалоговоеНазначение, ДокументРеализации", "Количество, СуммаСНДС, СуммаНДС");	
	СообщитьОбОшибкахЗаполненияКомиссионныхВидовЗапасов(ТаблицаОшибок, Отказ);
	
КонецПроцедуры

Процедура ЗаполнитьНоменклатуруОприходованиеВидовЗапасов(Отказ)
	
	Если ВозвратПорчи Тогда

		СтруктураПоиска = Новый Структура("АналитикаУчетаНоменклатуры");
		МассивТоваров = Товары.НайтиСтроки(Новый Структура("Порча", Истина));
		Для Каждого СтрокаТоваров Из МассивТоваров Цикл

			КоличествоТоваров = СтрокаТоваров.Количество;
			СуммаСНДС = СтрокаТоваров.СуммаСНДС;
			СуммаНДС = СтрокаТоваров.СуммаНДС;
			
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТоваров);
			Для Каждого СтрокаЗапасов Из ВидыЗапасов.НайтиСтроки(СтруктураПоиска) Цикл

				Если СтрокаЗапасов.Количество = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				Количество = Мин(КоличествоТоваров, СтрокаЗапасов.Количество);

				НоваяСтрока = ВидыЗапасов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
				
				НоваяСтрока.НоменклатураОприходование = СтрокаТоваров.НоменклатураОприходование;
				НоваяСтрока.ХарактеристикаОприходование = СтрокаТоваров.ХарактеристикаОприходование;
				НоваяСтрока.Количество = Количество;
				НоваяСтрока.СуммаСНДС = Мин(СуммаСНДС, ?(СтрокаЗапасов.Количество <> 0, Количество * СтрокаЗапасов.СуммаСНДС / СтрокаЗапасов.Количество, 0));
				НоваяСтрока.СуммаНДС = Мин(СуммаНДС, ?(СтрокаЗапасов.Количество <> 0, Количество * СтрокаЗапасов.СуммаНДС / СтрокаЗапасов.Количество, 0));

				СтрокаЗапасов.Количество = СтрокаЗапасов.Количество - НоваяСтрока.Количество;
				СтрокаЗапасов.СуммаСНДС = СтрокаЗапасов.СуммаСНДС - НоваяСтрока.СуммаСНДС;
				СтрокаЗапасов.СуммаНДС = СтрокаЗапасов.СуммаНДС - НоваяСтрока.СуммаНДС;
				
				КоличествоТоваров = КоличествоТоваров - НоваяСтрока.Количество;
				СуммаСНДС = СуммаСНДС - НоваяСтрока.СуммаСНДС;
				СуммаНДС = СуммаНДС - НоваяСтрока.СуммаНДС;

				Если КоличествоТоваров = 0 Тогда
					Прервать;
				КонецЕсли;

			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	МассивУдаляемыхСтрок = ВидыЗапасов.НайтиСтроки(Новый Структура("Количество", 0));
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		ВидыЗапасов.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
	ЗапасыСервер.ЗаполнитьНоменклатуруГТДОприходованиеВидовЗапасов(Ссылка, ВидыЗапасов, Отказ);
	
КонецПроцедуры

Процедура СообщитьОбОшибкахЗаполненияКомиссионныхВидовЗапасов(ТаблицаОшибок, Отказ)
	
	Если ТаблицаОшибок.Количество() > 0 Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из ТаблицаОшибок Цикл
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Номенклатура: %1, у партнера %2 недостаточно %3 %4';uk='Номенклатура: %1, у партнера %2 недостатньо %3 %4'"),
			НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрокаТаблицы.Номенклатура, СтрокаТаблицы.Характеристика),
			Партнер,
			СтрокаТаблицы.Количество,
			СтрокаТаблицы.ЕдиницаИзмерения);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			ЭтотОбъект);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция УникальностьДокументовРеализацииНоНоменклатуре()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ 
	|	ВЫБОР КОГДА Товары.ДокументРеализации В (&ПустыеЗначенияДокументов) ТОГДА
	|		ЛОЖЬ
	|	ИНАЧЕ
	|		ИСТИНА
	|	КОНЕЦ					КАК ДокументУказан,
	|	Товары.НомерСтроки		КАК НомерСтроки,
	|	Товары.Номенклатура		КАК Номенклатура,
	|	Товары.Характеристика	КАК Характеристика
	|
	|ПОМЕСТИТЬ ВтТовары
	|
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика
	|
	|ПОМЕСТИТЬ ВтНеверноЗаполненные
	|
	|ИЗ
	|	ВтТовары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика
	|
	|ИМЕЮЩИЕ
	|	НЕ МАКСИМУМ(Товары.ДокументУказан) = МИНИМУМ(Товары.ДокументУказан)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки,
	|	Товары.Номенклатура,
	|	Товары.Характеристика
	|
	|ИЗ
	|	ВтТовары КАК Товары
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ВтНеверноЗаполненные КАК НеверноЗаполненные
	|	ПО
	|		Товары.Номенклатура = НеверноЗаполненные.Номенклатура
	|		И Товары.Характеристика = НеверноЗаполненные.Характеристика
	|		И НЕ Товары.ДокументУказан
	|");
	
	МассивПустыхЗначений = Новый Массив;
	МассивПустыхЗначений.Добавить(Неопределено);
	МассивПустыхЗначений.Добавить(Документы.РеализацияТоваровУслуг.ПустаяСсылка());
	МассивПустыхЗначений.Добавить(Документы.ОтчетОРозничныхПродажах.ПустаяСсылка());
	
	Запрос.УстановитьПараметр("Товары", Товары.Выгрузить(, "НомерСтроки, Номенклатура, Характеристика, ДокументРеализации"));
	Запрос.УстановитьПараметр("ПустыеЗначенияДокументов", МассивПустыхЗначений);
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ПолучитьСуммуДокумента() Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.СуммаСНДС КАК СуммаСНДС
	|ПОМЕСТИТЬ
	|	Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(Товары.СуммаСНДС),0) КАК СуммаСНДС
	|ИЗ
	|	Товары КАК Товары
	|ГДЕ
	|	Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|	ИЛИ НЕ &ВернутьМногооборотнуюТару
	|	ИЛИ &ПредусмотренЗалогЗаТару
	|");
	
	Запрос.УстановитьПараметр("Товары", Товары.Выгрузить(,"Номенклатура,СуммаСНДС"));
	Запрос.УстановитьПараметр("ВернутьМногооборотнуюТару", ВозвратПереданнойМногооборотнойТары);
	Запрос.УстановитьПараметр("ПредусмотренЗалогЗаТару", ПредусмотренЗалогЗаТару);
	
	Выгрузка = Запрос.Выполнить().Выгрузить();
	СуммаИтого = Выгрузка[0].СуммаСНДС;
	Возврат СуммаИтого;
	
КонецФункции

Функция ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.ДокументРеализации
	|
	|ПОМЕСТИТЬ СохраненныеДанныеДокумента
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА ДанныеДокумента.Организация <> СохраненныеДанные.Организация ТОГДА
	|		Истина
	|	КОГДА ДанныеДокумента.Дата <> СохраненныеДанные.Дата ТОГДА
	|		Истина
	|	КОГДА ДанныеДокумента.ДокументРеализации <> СохраненныеДанные.ДокументРеализации ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК РеквизитыИзменены
	|ИЗ
	|	ТаблицаДанныхДокумента КАК ДанныеДокумента
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СохраненныеДанныеДокумента КАК СохраненныеДанные
	|	ПО
	|		Истина
	|");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		РеквизитыИзменены = Выборка.РеквизитыИзменены;
	Иначе
		РеквизитыИзменены = Ложь;
	КонецЕсли;
	
	Возврат РеквизитыИзменены;
	
КонецФункции

Функция ПроверитьИзменениеТоваров(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос("
	|////////////////////////////////////////////////////////////////////////////////
	|// Проверим соответствие табличных частей Товары и ВидыЗапасов
	|ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ИЗ (
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаТоваров.НоменклатураОприходование КАК НоменклатураОприходование,
	|		ТаблицаТоваров.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|		ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|   	ВЫБОР 
	|			КОГДА НЕ &ОрганизацияПлательщикНДС 
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность) 
	|			КОГДА ТаблицаТоваров.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) 
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|			КОГДА ТаблицаТоваров.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НеНДС) 
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая)
	|		КОНЕЦ КАК НалоговоеНазначение,
	|		ТаблицаТоваров.Количество КАК Количество,
	|		ТаблицаТоваров.СуммаСНДС КАК СуммаСНДС,
	|		ТаблицаТоваров.СуммаНДС КАК СуммаНДС
	|	ИЗ
	|		ТаблицаТоваров КАК ТаблицаТоваров
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаВидыЗапасов.НоменклатураОприходование КАК НоменклатураОприходование,
	|		ТаблицаВидыЗапасов.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|		ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|		ТаблицаВидыЗапасов.ВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,	
	|		-ТаблицаВидыЗапасов.Количество КАК Количество,
	|		-ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаСНДС,
	|		-ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	) КАК ТаблицаТоваров
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ПО
	|		ТаблицаТоваров.АналитикаУчетаНоменклатуры = ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры
	|		И ТаблицаТоваров.НоменклатураОприходование = ТаблицаВидыЗапасов.НоменклатураОприходование
	|		И ТаблицаТоваров.ХарактеристикаОприходование = ТаблицаВидыЗапасов.ХарактеристикаОприходование
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.НоменклатураОприходование,
	|	ТаблицаТоваров.ХарактеристикаОприходование,
	|	ТаблицаТоваров.СтавкаНДС,
	|	ТаблицаТоваров.НалоговоеНазначение
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаТоваров.Количество) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаСНДС) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаНДС) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.СкладОтгрузки = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	Запрос.УстановитьПараметр("ОрганизацияПлательщикНДС", НДСОбщегоНазначенияСервер.ОрганизацияПлательщикНДС(Организация, Дата));
	
	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции

Процедура СформироватьСписокРегистровДляКонтроля()

	Массив = Новый Массив;
	
 	Если ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда

		Массив.Добавить(Движения.РасчетыСКлиентами);
		Массив.Добавить(Движения.ЗаявкиНаВозвратТоваровОтКлиентов);
		Массив.Добавить(Движения.ПереданнаяВозвратнаяТара);

	КонецЕсли;
	
	// Приходы в регистр (сторно расхода из регистра) контролируем при перепроведении и отмене проведения
	Если Не ДополнительныеСвойства.ЭтоНовый Тогда
		Массив.Добавить(Движения.ТоварыОрганизаций);
	КонецЕсли;

	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);
	
КонецПроцедуры

// Процедура формирует временную таблицу товаров с аналитикой обособленного учета
//
Процедура СформироватьВременнуюТаблицуТоваровИАналитики(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Характеристика,
	|	ТаблицаТоваров.Серия,
	|	ТаблицаТоваров.Склад,
	|
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка) КАК Менеджер,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	ТаблицаТоваров.Назначение КАК Назначение,
	|
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК Партнер,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка) КАК Соглашение,
	|	ТаблицаТоваров.ЦелевоеНалоговоеНазначение КАК НалоговоеНазначение,
	|
	|	ТаблицаТоваров.Количество КАК Количество
	|	
	|ПОМЕСТИТЬ ТаблицаТоваровИАналитики
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|	ПО
	|		Истина
	|;
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

// Процедура формирует временную таблицу доступных видов запасов
//
// Параметры:
//	МенеджерВременныхТаблиц - Менеджер временных таблиц
//
Процедура СформироватьДоступныеВидыЗапасов(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов,
	|	ВидыЗапасов.Ссылка КАК ВидЗапасовПродавца
	|
	|ПОМЕСТИТЬ ДоступныеВидыЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	Не ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И ВидыЗапасов.Организация = &Организация
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|");
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗаполнитьКлючиАналитикиУчетаПартийДокумента() Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки 					КАК НомерСтроки,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.НоменклатураОприходование 	КАК НоменклатураОприходование,
	|	ТаблицаТоваров.СтавкаНДС 					КАК СтавкаНДС,
	|	ТаблицаТоваров.ВидЗапасов                   КАК ВидЗапасов,
	|	ТаблицаТоваров.АналитикаУчетаПартий 		КАК АналитикаУчетаПартий,
	|	ТаблицаТоваров.ДокументРеализации			КАК ДокументРеализации
	|
	|ПОМЕСТИТЬ ТаблицаТоваровДокумента
	|
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.ДокументРеализации = НЕОПРЕДЕЛЕНО
	|	ИЛИ ТаблицаТоваров.НоменклатураОприходование <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки 				КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.НоменклатураОприходование <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		ТОГДА ТаблицаТоваров.НоменклатураОприходование
	|		ИНАЧЕ Аналитика.Номенклатура
	|	КОНЕЦ 									КАК Номенклатура,
	|	ТаблицаТоваров.СтавкаНДС 				КАК СтавкаНДС,
	|	ТаблицаТоваров.ВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
	|	&Поставщик 								КАК Поставщик,
	|	&Контрагент 							КАК Контрагент,
	|	ТаблицаТоваров.АналитикаУчетаПартий		КАК АналитикаУчетаПартий
	|
	|ПОМЕСТИТЬ ИсходнаяТаблицаТоваров
	|
	|ИЗ
	|	ТаблицаТоваровДокумента КАК ТаблицаТоваров
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаТоваров.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|ГДЕ
	|	ТаблицаТоваров.АналитикаУчетаПартий = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
	|	ИЛИ ТаблицаТоваров.АналитикаУчетаПартий.НалоговоеНазначение <> ТаблицаТоваров.ВидЗапасов.НалоговоеНазначение 
	|
	|");
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаТоваров"		, ВидыЗапасов.Выгрузить(, 
 														"НомерСтроки, АналитикаУчетаНоменклатуры, НоменклатураОприходование, СтавкаНДС, АналитикаУчетаПартий, ДокументРеализации, ВидЗапасов"));
	Запрос.УстановитьПараметр("Поставщик"			, Партнер);
	Запрос.УстановитьПараметр("Контрагент"			, Контрагент);
				
	Запрос.Выполнить();
	
	ПартионныйУчетСервер.ЗаполнитьАналитикуУчетаПартийВТабличнойЧастиТовары(МенеджерВременныхТаблиц, ВидыЗапасов);
	
КонецПроцедуры

Процедура СформироватьСписокЗависимыхЗаказов()
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ЗаказКлиента.Ссылка КАК ЗаказКлиента
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|ГДЕ
	|	ЗаказКлиента.Ссылка В(&МассивЗаказов)
	|	
	|СГРУППИРОВАТЬ ПО
	|	ЗаказКлиента.Ссылка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗаказКлиента.Ссылка КАК ЗаказКлиента
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаказКлиента
	|ГДЕ
	|	ЗаказКлиента.Ссылка В(&МассивЗаказов)
	|	
	|СГРУППИРОВАТЬ ПО
	|	ЗаказКлиента.Ссылка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗаказКлиента.Ссылка КАК ЗаказКлиента
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|ГДЕ
	|	ЗаказКлиента.Ссылка В (ВЫБРАТЬ
	|			РасшифровкаПлатежа.Заказ
	|		ИЗ
	|			Документ.ВозвратТоваровОтКлиента.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|		ГДЕ
	|			РасшифровкаПлатежа.Ссылка = &Ссылка
	|		СГРУППИРОВАТЬ ПО
	|			РасшифровкаПлатежа.Заказ)
	|	
	|СГРУППИРОВАТЬ ПО
	|	ЗаказКлиента.Ссылка
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ЗаказКлиента.Ссылка КАК ЗаказКлиента
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаказКлиента
	|ГДЕ
	|	ЗаказКлиента.Ссылка В (ВЫБРАТЬ
	|			РасшифровкаПлатежа.Заказ
	|		ИЗ
	|			Документ.ВозвратТоваровОтКлиента.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|		ГДЕ
	|			РасшифровкаПлатежа.Ссылка = &Ссылка
	|		СГРУППИРОВАТЬ ПО
	|			РасшифровкаПлатежа.Заказ)
	|	
	|СГРУППИРОВАТЬ ПО
	|	ЗаказКлиента.Ссылка
	|";
	
	Запрос.УстановитьПараметр("МассивЗаказов", ЭтотОбъект.РасшифровкаПлатежа.ВыгрузитьКолонку("Заказ"));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	
	МассивЗависимыхЗаказов = Результат.Выгрузить().ВыгрузитьКолонку("ЗаказКлиента");
	ЭтотОбъект.ДополнительныеСвойства.Вставить("МассивЗависимыхЗаказовКлиентов", Новый ФиксированныйМассив(МассивЗависимыхЗаказов));
	
КонецПроцедуры

Процедура ЗаполнитьВзаиморасчеты(ВыборкаРасчетыПоОснованию)
	
	// Заполним взаиморасчеты.
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя Тогда
		
		СуммаКРаспределению = ПолучитьСуммуДокумента();
		
		Пока СуммаКРаспределению > 0 И ВыборкаРасчетыПоОснованию.Следующий() Цикл
			
			Если ВыборкаРасчетыПоОснованию.СуммаОстаток > 0 Тогда
				
				НоваяСтрока = РасшифровкаПлатежа.Добавить();
				НоваяСтрока.ВалютаВзаиморасчетов = ВыборкаРасчетыПоОснованию.ВалютаВзаиморасчетов;
				НоваяСтрока.Заказ = ВыборкаРасчетыПоОснованию.ЗаказКлиента;
				
				Если СуммаКРаспределению > ВыборкаРасчетыПоОснованию.СуммаОстаток Тогда
					НоваяСтрока.Сумма = ВыборкаРасчетыПоОснованию.СуммаОстаток;
				Иначе
					НоваяСтрока.Сумма = СуммаКРаспределению;
				КонецЕсли;
				
				СуммаКРаспределению = СуммаКРаспределению - НоваяСтрока.Сумма;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если СуммаКРаспределению > 0 Тогда
			
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			НоваяСтрока.ВалютаВзаиморасчетов = Валюта;
			НоваяСтрока.Сумма = СуммаКРаспределению;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#КонецОбласти

#КонецЕсли
