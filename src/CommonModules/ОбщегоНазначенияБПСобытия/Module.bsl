Процедура ПередЗаписьюДокументаДляУдаленияДвиженийПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	Источник.ДополнительныеСвойства.Вставить("ЭтоНовый", Источник.ЭтоНовый());
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение 
		И НЕ Источник.ДополнительныеСвойства.ЭтоНовый 
		И Источник.Проведен Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Док.Дата КАК Дата
		|ИЗ
		|	Документ." + Источник.Метаданные().Имя + " КАК Док
		|ГДЕ
		|	Док.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		Выборка.Следующий();
		Источник.ДополнительныеСвойства.Вставить("ДатаДокументаСдвинутаВперед", Источник.Дата > Выборка.Дата);
	Иначе
		Источник.ДополнительныеСвойства.Вставить("ДатаДокументаСдвинутаВперед", Ложь);
	КонецЕсли;
	
КонецПроцедуры

// Процедура очищает реквизит РучнаяКорректировка при копировании отредактированных вручную документов
//
Процедура ПриКопированииДокументаСВозможностьюРучногоРедактированияПриКопировании(Источник, ОбъектКопирования) Экспорт
	
	Источник.РучнаяКорректировка = Ложь;
	
КонецПроцедуры

// Обработчик подписки на событие ЗарегистрироватьДанныеПервичныхДокументов
Процедура ПриЗаписиДокументаРегистрацияДанныхПервичныхДокументов(Источник, Отказ) Экспорт
	Перем НомерДокумента, ДатаДокумента;
	
	Если Источник.ОбменДанными.Загрузка = Истина
		И Источник.ДополнительныеСвойства.Свойство("РегистрироватьДанныеПервичныхДокументов")
		И Источник.ДополнительныеСвойства.РегистрироватьДанныеПервичныхДокументов = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Ссылка = Источник.Ссылка;
	МетаданныеДокумента = Источник.Метаданные();
	
	Если МетаданныеДокумента.Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить 
		И НЕ Источник.Проведен Тогда
		Возврат;
	КонецЕсли;
	
	ИменаРеквизитов = "Номер, Дата";
	
	ЭтоДокументИнтеркампани     = ОбщегоНазначения.ЕстьРеквизитОбъекта("РасчетыЧерезОтдельногоКонтрагента", МетаданныеДокумента);
	ЕстьНомерВходящегоДокумента = ОбщегоНазначения.ЕстьРеквизитОбъекта("НомерВходящегоДокумента", МетаданныеДокумента);
	ЕстьДатаВходящегоДокумента  = ОбщегоНазначения.ЕстьРеквизитОбъекта("ДатаВходящегоДокумента", МетаданныеДокумента); 
	
	Если ?(ЭтоДокументИнтеркампани, Источник["РасчетыЧерезОтдельногоКонтрагента"], Истина) 
		 И ЕстьНомерВходящегоДокумента Тогда
		 
		ИменаРеквизитов = ИменаРеквизитов + ", НомерВходящегоДокумента";
		Если ЕстьДатаВходящегоДокумента Тогда
			ИменаРеквизитов = ИменаРеквизитов + ", ДатаВходящегоДокумента";
		КонецЕсли;
		
	КонецЕсли;
	
	Реквизиты = Новый Структура(ИменаРеквизитов);
	ЗаполнитьЗначенияСвойств(Реквизиты, Источник);
	
	//Установка управляемой блокировки
	ПараметрыБлокировки	= Новый Структура("ТипТаблицы, ИмяТаблицы", "РегистрСведений", "ДанныеПервичныхДокументов");
	ЗначенияБлокировки	= Новый Структура("Документ", Ссылка);
	ОбщегоНазначенияБПВызовСервера.УстановитьУправляемуюБлокировку(ПараметрыБлокировки, ЗначенияБлокировки);
	
	НомерДокумента	= "";
	ДатаДокумента	= '00010101';
	
	Если Реквизиты.Свойство("НомерВходящегоДокумента") Тогда
		НомерДокумента	= СокрЛП(Реквизиты.НомерВходящегоДокумента);
		Если Реквизиты.Свойство("ДатаВходящегоДокумента") Тогда
			ДатаДокумента = Реквизиты.ДатаВходящегоДокумента;
		КонецЕсли;
	Иначе
		НомерДокумента	= ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Реквизиты.Номер, Истина, Истина);
		ДатаДокумента	= Реквизиты.Дата;
	КонецЕсли;
	
	ОрганизацииКРегистрации = Новый Соответствие;
	
	// Дополним МассивОрганизаций организациями из шапки документа
	МассивРеквизитовОрганизация = ИменаРеквизитовОраганизаций(МетаданныеДокумента);
	Для каждого РеквизитОрганизация Из МассивРеквизитовОрганизация Цикл
		ДобавитьОрганизацию(ОрганизацииКРегистрации, Источник, РеквизитОрганизация);
	КонецЦикла;
	
	// Дополним МассивОрганизаций организациями из табличных частей
	Для каждого ТабличнаяЧасть Из МетаданныеДокумента.ТабличныеЧасти Цикл
		
		МассивРеквизитовОрганизация = ИменаРеквизитовОраганизаций(ТабличнаяЧасть);
		Если МассивРеквизитовОрганизация.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Для каждого Строка Из Источник[ТабличнаяЧасть.Имя] Цикл
			Для каждого РеквизитОрганизация Из МассивРеквизитовОрганизация Цикл
				ДобавитьОрганизацию(ОрганизацииКРегистрации, Строка, РеквизитОрганизация);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	НаборЗаписейРегистра = РегистрыСведений.ДанныеПервичныхДокументов.СоздатьНаборЗаписей();
	НаборЗаписейРегистра.Отбор.Документ.Установить(Ссылка);
	
	Для каждого КлючИЗначение Из ОрганизацииКРегистрации Цикл
		
		Организация = КлючИЗначение.Ключ;
		ИмяРеквизита = КлючИЗначение.Значение;
		
		НоваяЗапись = НаборЗаписейРегистра.Добавить();
		НоваяЗапись.Организация = Организация;
		НоваяЗапись.Документ    = Ссылка;
		
		Если ЭтоДокументИнтеркампани И ИмяРеквизита = "Организация" Тогда
			НоваяЗапись.Номер    = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Реквизиты.Номер, Истина, Истина);
			НоваяЗапись.Дата     = Реквизиты.Дата;
		Иначе
			НоваяЗапись.Номер    = НомерДокумента;
			НоваяЗапись.Дата     = ДатаДокумента;
		КонецЕсли;
		
		НоваяЗапись.НомерРегистратора = Реквизиты.Номер;
		НоваяЗапись.ДатаРегистратора = Реквизиты.Дата;
		
	КонецЦикла;
	
	НаборЗаписейРегистра.Записать(Истина);
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Функция ИменаРеквизитовОраганизаций(ОбъектМетаданных)
	
	Результат = Новый Массив;
	
	ТипОрганизация = Тип("СправочникСсылка.Организации");
	Для каждого Реквизит Из ОбъектМетаданных.Реквизиты Цикл
		Если Реквизит.Тип.СодержитТип(ТипОрганизация) Тогда
			Результат.Добавить(Реквизит.Имя);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура ДобавитьОрганизацию(ОрганизацииКРегистрации, Данные, ИмяРеквизита)
	
	ЗначениеРеквизита = Данные[ИмяРеквизита];
	
	Если ЗначениеЗаполнено(ЗначениеРеквизита) 
		И ТипЗнч(ЗначениеРеквизита) = Тип("СправочникСсылка.Организации") Тогда
		
		ОрганизацииКРегистрации.Вставить(ЗначениеРеквизита, ИмяРеквизита);
		
	КонецЕсли;
	
КонецПроцедуры