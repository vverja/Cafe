
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	Если Не Параметры.ЭтоРасчетыСКлиентами Тогда
		Заголовок = НСтр("ru='Выбор документа расчетов с поставщиком';uk='Вибір документа розрахунків з постачальником'");
		Элементы.ДанныеКонтрагента.Заголовок = НСтр("ru='Данные поставщика';uk='Дані постачальника'");
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("Партнер") Тогда
		
		Партнер = Параметры.Отбор.Партнер;
		
		СписокПартнеров = Новый СписокЗначений;
		ПартнерыИКонтрагенты.ЗаполнитьСписокПартнераСРодителями(Партнер, СписокПартнеров);
		
		Параметры.Отбор.Партнер = СписокПартнеров;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровКакКонтрагентов")
		И Параметры.Отбор.Свойство("Контрагент") Тогда
		
		Если ТипЗнч(Параметры.Отбор.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
			Если ЗначениеЗаполнено(Параметры.Отбор.Контрагент) Тогда
				ПартнерКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Отбор.Контрагент, "Партнер");
			Иначе
				ПартнерКонтрагента = Неопределено;
			КонецЕсли;
			СписокПартнеров = Новый СписокЗначений;
			ПартнерыИКонтрагенты.ЗаполнитьСписокПартнераСРодителями(ПартнерКонтрагента, СписокПартнеров);
			
			Параметры.Отбор.Вставить("Партнер", СписокПартнеров);
		ИначеЕсли ТипЗнч(Параметры.Отбор.Контрагент) = Тип("СправочникСсылка.Организации") Тогда
			Параметры.Отбор.Вставить("Партнер",Справочники.Партнеры.НашеПредприятие);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьОбособленныеПодразделенияВыделенныеНаБаланс")
		И Параметры.Отбор.Свойство("Организация")
		И Параметры.УчитыватьФилиалы Тогда
		
		Организация = Параметры.Отбор.Организация;
		
		Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Организации.Ссылка
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.ГоловнаяОрганизация = &Организация
		|	И Организации.ДопускаютсяВзаиморасчетыЧерезГоловнуюОрганизацию");
		Запрос.УстановитьПараметр("Организация", Организация);
		ДоступныеОрганизации = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
		ДоступныеОрганизации.Добавить(Организация);
		
		Параметры.Отбор.Организация = ДоступныеОрганизации;
		
	КонецЕсли;
	
	Если Параметры.ЭтоРасчетыСКлиентами Тогда
		
		ПараметрыОтбора = ВзаиморасчетыСервер.ПараметрыОтбораПриВыбореДокументаРасчетовСКлиентами();
		ПараметрыОтбора.ИсключитьРедактируемыйДокумент = Истина;
		ПараметрыОтбора.ЗапретитьДоговорыПоДокументам  = Параметры.ЗапретитьДоговорыПоДокументам;
		
		Если Параметры.Отбор.Свойство("Организация") И Параметры.Отбор.Свойство("Контрагент") Тогда
			ПараметрыОтбора.ОтборПоОрганизацииИКонтрагенту = Истина;
		КонецЕсли;
		
		ТекстЗапроса = ВзаиморасчетыСервер.ПолучитьТекстЗапросаДокументыРасчетовСКлиентами(
			Параметры.ВыборОснованияПлатежа, 
			ПараметрыОтбора);
		Если ЗначениеЗаполнено(ТекстЗапроса) Тогда
			Список.ТекстЗапроса = ТекстЗапроса;
		КонецЕсли;
			
		Если Список.Параметры.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВыборОснованияПлатежа")) <> Неопределено Тогда
			Список.Параметры.УстановитьЗначениеПараметра("ВыборОснованияПлатежа", Параметры.ВыборОснованияПлатежа);
		КонецЕсли;
		
		Если ПараметрыОтбора.ОтборПоОрганизацииИКонтрагенту Тогда
			Список.Параметры.УстановитьЗначениеПараметра("Организация", Параметры.Отбор.Организация);
			Список.Параметры.УстановитьЗначениеПараметра("Контрагент", Параметры.Отбор.Контрагент);
		КонецЕсли;
		
	Иначе
		
		ПараметрыОтбора = ВзаиморасчетыСервер.ПараметрыОтбораПриВыбореДокументаРасчетовСПоставщиками();
		ПараметрыОтбора.ИсключитьРедактируемыйДокумент = Истина;
		ПараметрыОтбора.ИсключитьХозяйственнуюОперацию = Параметры.ИсключитьХозяйственнуюОперацию;
		ПараметрыОтбора.ЗапретитьДоговорыПоДокументам  = Параметры.ЗапретитьДоговорыПоДокументам;
		
		Если Параметры.Отбор.Свойство("Организация") И Параметры.Отбор.Свойство("Контрагент") Тогда
			ПараметрыОтбора.ОтборПоОрганизацииИКонтрагенту = Истина;
		КонецЕсли;
		
		ТекстЗапроса = ВзаиморасчетыСервер.ПолучитьТекстЗапросаДокументыРасчетовСПоставщиками(ПараметрыОтбора);
		Если ЗначениеЗаполнено(ТекстЗапроса) Тогда
			Список.ТекстЗапроса = ТекстЗапроса;
		КонецЕсли;
		
		СтатьяДвиженияДенежныхСредств = Неопределено;
		Если ТипЗнч(Параметры.Отбор) = Тип("Структура") Тогда
			Если Параметры.Отбор.Свойство("ХозяйственнаяОперация") Тогда
				СтатьяДвиженияДенежныхСредств =
					Справочники.СтатьиДвиженияДенежныхСредств.СтатьяДвиженияДенежныхСредствПоХозяйственнойОперации(Параметры.Отбор.ХозяйственнаяОперация);
			КонецЕсли;
		КонецЕсли;
		
		Если Список.Параметры.Элементы.Найти("СтатьяДвиженияДенежныхСредств") <> Неопределено Тогда
			Список.Параметры.УстановитьЗначениеПараметра("СтатьяДвиженияДенежныхСредств", СтатьяДвиженияДенежныхСредств);
		КонецЕсли;
		
		Если ПараметрыОтбора.ОтборПоОрганизацииИКонтрагенту Тогда
			Если Список.Параметры.Элементы.Найти("Организация") <> Неопределено Тогда
				Список.Параметры.УстановитьЗначениеПараметра("Организация", Параметры.Отбор.Организация);
			КонецЕсли;
			Если Список.Параметры.Элементы.Найти("Контрагент") <> Неопределено Тогда
				Список.Параметры.УстановитьЗначениеПараметра("Контрагент", Параметры.Отбор.Контрагент);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Список.Параметры.Элементы.Найти("ИсключаемыйДокумент") <> Неопределено Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ИсключаемыйДокумент", Параметры.РедактируемыйДокумент);
	КонецЕсли;
	
	ИспользоватьНесколькоВалют = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВалют");
	ВалютаУправленческогоУчета = ДоходыИРасходыСервер.ПолучитьВалютуУправленческогоУчета();
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Валюта", "Видимость", ИспользоватьНесколькоВалют);
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтрокаТаблицы = Элементы.Список.ТекущиеДанные;
	
	Если Не ИспользоватьНесколькоВалют Тогда
		ВалютаДокумента = ВалютаУправленческогоУчета;
	Иначе
		ВалютаДокумента = СтрокаТаблицы.Валюта;
	КонецЕсли;
	
	ДокументРасчетов = Новый Структура;
	ДокументРасчетов.Вставить("ОснованиеПлатежа", СтрокаТаблицы.Ссылка);
	ДокументРасчетов.Вставить("Заказ", СтрокаТаблицы.ОбъектРасчетов);
	ДокументРасчетов.Вставить("Договор", СтрокаТаблицы.Договор);
	ДокументРасчетов.Вставить("Партнер", СтрокаТаблицы.Партнер);
	ДокументРасчетов.Вставить("ВалютаВзаиморасчетов", ВалютаДокумента);
	ДокументРасчетов.Вставить("СуммаВзаиморасчетов", 0);
	ДокументРасчетов.Вставить("Дата", СтрокаТаблицы.Дата);
	ДокументРасчетов.Вставить("Номер", СтрокаТаблицы.Номер);
	ДокументРасчетов.Вставить("СтатьяДвиженияДенежныхСредств", СтрокаТаблицы.СтатьяДвиженияДенежныхСредств);
	
	ОповеститьОВыборе(ДокументРасчетов);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьДокумент(Команда)
	
	СтрокаТаблицы = Элементы.Список.ТекущиеДанные;
	Если СтрокаТаблицы <> Неопределено Тогда
		
		Если Не ИспользоватьНесколькоВалют Тогда
			ВалютаДокумента = ВалютаУправленческогоУчета;
		Иначе
			ВалютаДокумента = СтрокаТаблицы.Валюта;
		КонецЕсли;
		
		ОповеститьОВыборе(Новый Структура("ОснованиеПлатежа, Заказ, Партнер, ВалютаВзаиморасчетов, СуммаВзаиморасчетов, Дата, Номер, СтатьяДвиженияДенежныхСредств",
			СтрокаТаблицы.Ссылка, 
			СтрокаТаблицы.ОбъектРасчетов,
			СтрокаТаблицы.Партнер,
			ВалютаДокумента,
			0,
			СтрокаТаблицы.Дата,
			СтрокаТаблицы.Номер,
			СтрокаТаблицы.СтатьяДвиженияДенежныхСредств));
	Иначе
		Закрыть();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокумент(Команда)
	
	СтрокаТаблицы = Элементы.Список.ТекущиеДанные;
	Если СтрокаТаблицы <> Неопределено Тогда
		ПоказатьЗначение(Неопределено, СтрокаТаблицы.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Номер.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Дата.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Тип.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Сумма.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Валюта.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Организация.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Партнер.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Контрагент.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Ссылка.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Список.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.СостояниеДокумента");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = 0;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаОтмененнойСтрокиДокумента);

КонецПроцедуры

#КонецОбласти
