#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Документы.ОперацияПоПлатежнойКарте.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	
	НоваяКоманда = Документы.РасходныйКассовыйОрдер.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	Если НоваяКоманда <> Неопределено Тогда
		НоваяКоманда.Обработчик = "ВводНаОснованииУТКлиент.СоздатьРасходныйКассовыйОрдер";
		НоваяКоманда.СписокФорм = "ФормаСпискаДокументов,ФормаСписка";
		НоваяКоманда.РежимИспользованияПараметра = РежимИспользованияПараметраКоманды.Множественный;
	КонецЕсли;
	
	НоваяКоманда = Документы.РасходныйКассовыйОрдер.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	Если НоваяКоманда <> Неопределено Тогда
		НоваяКоманда.СписокФорм = "ФормаДокумента";
	КонецЕсли;
	
	НоваяКоманда = Документы.СписаниеБезналичныхДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	Если НоваяКоманда <> Неопределено Тогда
		НоваяКоманда.Обработчик = "ВводНаОснованииУТКлиент.СоздатьСписаниеБезналичныхДС";
		НоваяКоманда.СписокФорм = "ФормаСпискаДокументов,ФормаСписка";
		НоваяКоманда.РежимИспользованияПараметра = РежимИспользованияПараметраКоманды.Множественный;
	КонецЕсли;
	
	НоваяКоманда = Документы.СписаниеБезналичныхДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	Если НоваяКоманда <> Неопределено Тогда
		НоваяКоманда.СписокФорм = "ФормаДокумента";
	КонецЕсли;
	
	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);
	
	
КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.ЗаявкаНаРасходованиеДенежныхСредств) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ЗаявкаНаРасходованиеДенежныхСредств.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.ЗаявкаНаРасходованиеДенежныхСредств);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьЗаявкиНаРасходованиеДенежныхСредств";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуЛимитыРасходаДенежныхСредств(КомандыОтчетов);
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуОплатаЗаявок(КомандыОтчетов);
	
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуКонтрольВыданныхПодотчетномуЛицуАвансовПоЗаявке(КомандыОтчетов);
	
КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

КонецПроцедуры

// Функция возвращает таблицу реквизитов, зависимых от хозяйственной операции документа.
//
// Параметры:
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа
//	МассивВсехРеквизитов - Массив - Массив всех реквизитов, зависимых от хозяйственной операции
//	МассивРеквизитовОперации - Массив - Массив имен реквизитов, используемыз в выбранной хозяйственной операции
//
Функция ПолучитьМассивыРеквизитов(ХозяйственнаяОперация, ПеречислениеВБюджет, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("БанковскийСчетКонтрагента");
	МассивВсехРеквизитов.Добавить("БанковскийСчетПолучатель");
	МассивВсехРеквизитов.Добавить("ВалютаКонвертации");
	МассивВсехРеквизитов.Добавить("ВедомостиНаВыплатуЗарплаты");
	МассивВсехРеквизитов.Добавить("ДатаАвансовогоОтчета");
	МассивВсехРеквизитов.Добавить("ДатаВедомостиНаВыплатуЗарплаты");
	МассивВсехРеквизитов.Добавить("КассаПолучатель");
	МассивВсехРеквизитов.Добавить("Контрагент");
	МассивВсехРеквизитов.Добавить("КурсКонвертации");
	МассивВсехРеквизитов.Добавить("ЛицевыеСчетаСотрудников");
	МассивВсехРеквизитов.Добавить("НомерВедомостиНаВыплатуЗарплаты");
	МассивВсехРеквизитов.Добавить("ОрганизацияПолучатель");
	МассивВсехРеквизитов.Добавить("ПланированиеСуммы");
	МассивВсехРеквизитов.Добавить("ПодотчетноеЛицо");
	МассивВсехРеквизитов.Добавить("СтатьяАктивовПассивов");
	МассивВсехРеквизитов.Добавить("АналитикаАктивовПассивов");
	МассивВсехРеквизитов.Добавить("СтатьяДвиженияДенежныхСредств");
	МассивВсехРеквизитов.Добавить("СуммаПослеКонвертации");
	МассивВсехРеквизитов.Добавить("ХозяйственнаяОперацияПоЗарплате");
	
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.АналитикаРасходов");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.АналитикаАктивовПассивов");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ДоговорКредитаДепозита");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ДоговорЛизинга");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ДоговорЗаймаСотруднику");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Заказ");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Комментарий");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.Партнер");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СтатьяРасходов");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ТипПлатежаПоЛизингу");
	МассивВсехРеквизитов.Добавить("РасшифровкаПлатежа.ТипСуммыКредитаДепозита");
	
	МассивРеквизитовОперации = Новый Массив;
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ПланированиеСуммы");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Заказ");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
	
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ПланированиеСуммы");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Заказ");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ДатаАвансовогоОтчета");
		МассивРеквизитовОперации.Добавить("ПодотчетноеЛицо");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("Контрагент");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяРасходов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.АналитикаРасходов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.АналитикаАктивовПассивов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеТаможне Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ПланированиеСуммы");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Заказ");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("Контрагент");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяРасходов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.АналитикаРасходов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.АналитикаАктивовПассивов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетПолучатель");
		МассивРеквизитовОперации.Добавить("КассаПолучатель");
		МассивРеквизитовОперации.Добавить("ОрганизацияПолучатель");
		МассивРеквизитовОперации.Добавить("ПланированиеСуммы");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Заказ");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетПолучатель");
		МассивРеквизитовОперации.Добавить("КассаПолучатель");
		МассивРеквизитовОперации.Добавить("ОрганизацияПолучатель");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Заказ");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств Тогда
		МассивРеквизитовОперации.Добавить("ОрганизацияПолучатель");
		МассивРеквизитовОперации.Добавить("БанковскийСчетПолучатель");
		МассивРеквизитовОперации.Добавить("КассаПолучатель");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КонвертацияВалюты Тогда
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ВалютаКонвертации");
		МассивРеквизитовОперации.Добавить("КурсКонвертации");
		МассивРеквизитовОперации.Добавить("СуммаПослеКонвертации");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты Тогда
		МассивРеквизитовОперации.Добавить("ВедомостиНаВыплатуЗарплаты");
		МассивРеквизитовОперации.Добавить("НомерВедомостиНаВыплатуЗарплаты");
		МассивРеквизитовОперации.Добавить("ДатаВедомостиНаВыплатуЗарплаты");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("ХозяйственнаяОперацияПоЗарплате");
		МассивРеквизитовОперации.Добавить("ЛицевыеСчетаСотрудников");
		МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоКредитам Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ПланированиеСуммы");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДоговорКредитаДепозита");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ТипСуммыКредитаДепозита");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ПланированиеСуммы");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДоговорКредитаДепозита");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймов Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ПланированиеСуммы");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Партнер");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДоговорКредитаДепозита");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаЗаймаСотруднику Тогда
		
		МассивРеквизитовОперации.Добавить("ПодотчетноеЛицо");
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплатыУТ") Тогда
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДоговорЗаймаСотруднику");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
			МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		Иначе
			МассивРеквизитовОперации.Добавить("СтатьяДвиженияДенежныхСредств");
		КонецЕсли;
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаЛизингодателю Тогда
		МассивРеквизитовОперации.Добавить("БанковскийСчетКонтрагента");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ПланированиеСуммы");
		
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ДоговорЛизинга");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ТипПлатежаПоЛизингу");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СуммаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств");
		МассивРеквизитовОперации.Добавить("РасшифровкаПлатежа.Комментарий");
		
	КонецЕсли;
	
	
КонецФункции

// Функция формирует массив хозяйственных операций, для которых доступно перечисление в бюджет.
//
// Возвращаемое значение:
//	Массив - массив хозяйствненых операций
//
Функция МассивОперацийПеречисленияВБюджет() Экспорт
	
	МассивОпераций = Новый Массив;
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ОплатаПоставщику);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ПеречислениеТаможне);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	МассивОпераций.Добавить(Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);
	
	Возврат МассивОпераций;
	
КонецФункции

// Функция получает реквизиты выбранной заявки на расходование денежных средств.
//
// Параметры:
//  Заявка - ДокументСсылка.ЗаявкаНаРасходованиеДенежныхСредств - Ссылка на заявку
//
// Возвращаемое значение:
//	Структура - Реквизиты выбранной заявки
//
Функция ПолучитьРеквизитыЗаявки(Заявка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|				И ДанныеДокумента.Касса <> ЗНАЧЕНИЕ(Справочник.Кассы.ПустаяСсылка)
	|			ТОГДА ДанныеДокумента.Касса.ВалютаДенежныхСредств
	|		КОГДА ДанныеДокумента.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|				И ДанныеДокумента.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
	|			ТОГДА ДанныеДокумента.БанковскийСчет.ВалютаДенежныхСредств
	|		ИНАЧЕ ДанныеДокумента.Валюта
	|	КОНЕЦ КАК Валюта,
	|	ДанныеДокумента.Статус КАК Статус
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Заявка
	|");
	
	Запрос.УстановитьПараметр("Заявка", Заявка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Организация = Выборка.Организация;
		Валюта = Выборка.Валюта;
		Статус = Выборка.Статус;
	Иначе
		Организация = Неопределено;
		Валюта = Неопределено;
		Статус = Неопределено;
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Организация, Валюта, Статус",
		Организация,
		Валюта,
		Статус);
	
	Возврат СтруктураРеквизитов;

КонецФункции

// Дополняет переданную структуру значениями реквизитов доступных формы оплаты в зависимости от хозяйственной операции
//
// Параметры:
//    ДанныеЗаполнения - Структура - Структура, содержащая хоз. операцию
//
Процедура ЗаполнитьФормуОплатыПоХозОперации(ДанныеЗаполнения) Экспорт
	
	Если ТипЗнч(ДанныеЗаполнения) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	ХозяйственнаяОперация = "";
	ХозяйственнаяОперацияПоЗарплате = "";
	ДанныеЗаполнения.Свойство("ХозяйственнаяОперация", ХозяйственнаяОперация);
	ДанныеЗаполнения.Свойство("ХозяйственнаяОперацияПоЗарплате", ХозяйственнаяОперацияПоЗарплате);
	
		Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты Тогда
			ФормаОплаты = ОграничениеФормыОплаты(ХозяйственнаяОперацияПоЗарплате);
		Иначе
			ФормаОплаты = ОграничениеФормыОплаты(ХозяйственнаяОперация);
		КонецЕсли;
	
	Если ФормаОплаты <> Неопределено Тогда
		ДанныеЗаполнения.Вставить("ФормаОплатыНаличная",         (ФормаОплаты = Перечисления.ФормыОплаты.Наличная));
		ДанныеЗаполнения.Вставить("ФормаОплатыБезналичная",      (ФормаОплаты = Перечисления.ФормыОплаты.Безналичная));
		ДанныеЗаполнения.Вставить("ФормаОплатыПлатежнаяКарта",   (ФормаОплаты = Перечисления.ФормыОплаты.ПлатежнаяКарта));
		ДанныеЗаполнения.Вставить("ФормаОплатыЗаявки",           ФормаОплаты);
	Иначе // Значения по умолчанию
		РеквизитыЗаявки = Метаданные.Документы.ЗаявкаНаРасходованиеДенежныхСредств.Реквизиты;
		ДанныеЗаполнения.Вставить("ФормаОплатыНаличная",         РеквизитыЗаявки["ФормаОплатыНаличная"].ЗначениеЗаполнения);
		ДанныеЗаполнения.Вставить("ФормаОплатыБезналичная",      РеквизитыЗаявки["ФормаОплатыБезналичная"].ЗначениеЗаполнения);
		ДанныеЗаполнения.Вставить("ФормаОплатыПлатежнаяКарта",   РеквизитыЗаявки["ФормаОплатыПлатежнаяКарта"].ЗначениеЗаполнения);
		ДанныеЗаполнения.Вставить("ФормаОплатыЗаявки",           РеквизитыЗаявки["ФормаОплатыЗаявки"].ЗначениеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

// Функция определяет доступную для хозяйственной операции форму оплаты
//
// Параметры:
//    Операция - Перечисление.ХозяйственнаяОперация - Хоз. операция, для которой производится проверка
//
// Возвращаемое значение:
//    Перечисление.ФормаОплаты, Неопределено - Ограничение по форме оплаты, либо Неопределено, если нет ограничений
//
Функция ОграничениеФормыОплаты(Операция) Экспорт
	
	Ограничения = Новый Соответствие;
	Ограничения.Вставить(Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет,                    Перечисления.ФормыОплаты.Безналичная);
	Ограничения.Вставить(Перечисления.ХозяйственныеОперации.ПеречислениеТаможне,                    Перечисления.ФормыОплаты.Безналичная);
	Ограничения.Вставить(Перечисления.ХозяйственныеОперации.ПеречислениеНаДепозиты,                 Перечисления.ФормыОплаты.Безналичная);
	Ограничения.Вставить(Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту,    Перечисления.ФормыОплаты.Безналичная);
	Ограничения.Вставить(Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета,          Перечисления.ФормыОплаты.Безналичная);
	Ограничения.Вставить(Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыЧерезКассу,              Перечисления.ФормыОплаты.Наличная);
	Ограничения.Вставить(Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыРаздатчиком,             Перечисления.ФормыОплаты.Наличная);
	
	Возврат Ограничения.Получить(Операция);
	
КонецФункции

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	// Текст запроса, формирующего таблицы движений
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаТаблицаДенежныеСредстваКВыплате(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаЛимитыРасходаДенежныхСредств(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияДенежныхСредств(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияДенежныеСредстваДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияДенежныеСредстваКонтрагент(Запрос, ТекстыЗапроса, Регистры);
	
	// Выполение запроса и выгрузка полученных таблиц для формирования движений
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата                                     КАК Период,
	|	ДанныеДокумента.ДатаПлатежа                              КАК ДатаПлатежа,
	|	ДанныеДокумента.ЖелательнаяДатаПлатежа                   КАК ЖелательнаяДатаПлатежа,
	|	ДанныеДокумента.Организация                              КАК Организация,
	|	ДанныеДокумента.Подразделение                            КАК Подразделение,
	|	ДанныеДокумента.ОрганизацияПолучатель                    КАК ОрганизацияПолучатель,
	|	ДанныеДокумента.Контрагент                               КАК Контрагент,
	|	ДанныеДокумента.ПодотчетноеЛицо                          КАК ПодотчетноеЛицо,
	|	ДанныеДокумента.Валюта                                   КАК Валюта,
	|	ДанныеДокумента.Статус                                   КАК Статус,
	|	ДанныеДокумента.ХозяйственнаяОперация                    КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств            КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.ХозяйственнаяОперацияПоЗарплате          КАК ХозяйственнаяОперацияПоЗарплате,
	|	ДанныеДокумента.ФормаОплатыЗаявки                        КАК ФормаОплаты,
	|	ДанныеДокумента.СверхЛимита                              КАК СверхЛимита
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Период", Реквизиты.Период);
	Запрос.УстановитьПараметр("ДатаПлатежа", Реквизиты.ДатаПлатежа);
	Запрос.УстановитьПараметр("ЖелательнаяДатаПлатежа", Реквизиты.ЖелательнаяДатаПлатежа);
	Запрос.УстановитьПараметр("Статус", Реквизиты.Статус);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("Подразделение", Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("Контрагент", Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("ОрганизацияПолучатель", Реквизиты.ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("ПодотчетноеЛицо", Реквизиты.ПодотчетноеЛицо);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("ХозяйственнаяОперацияПоЗарплате", Реквизиты.ХозяйственнаяОперацияПоЗарплате);
	Запрос.УстановитьПараметр("ФормаОплаты", Реквизиты.ФормаОплаты);
	Запрос.УстановитьПараметр("Валюта", Реквизиты.Валюта);
	
	Запрос.УстановитьПараметр("СтатьяДвиженияДенежныхСредств", СтатьяДвиженияДенежныхСредствДокумента(Реквизиты));
	Запрос.УстановитьПараметр("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств",
		ПолучитьФункциональнуюОпцию("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств"));
	Запрос.УстановитьПараметр("ИспользоватьНачислениеЗарплаты", Константы.ИспользоватьНачислениеЗарплаты.Получить());
	
	Запрос.УстановитьПараметр("СверхЛимита", Реквизиты.СверхЛимита); 
	Запрос.УстановитьПараметр("ИспользоватьЛимитыРасходаДенежныхСредств",   ПолучитьФункциональнуюОпцию("ИспользоватьЛимитыРасходаДенежныхСредств"));
	Запрос.УстановитьПараметр("ИспользоватьЛимитыРасходаПоОрганизациям",    ПолучитьФункциональнуюОпцию("ИспользоватьЛимитыРасходаДенежныхСредствПоОрганизациям"));
	Запрос.УстановитьПараметр("ИспользоватьЛимитыРасходаПоПодразделениям",  ПолучитьФункциональнуюОпцию("ИспользоватьЛимитыРасходаДенежныхСредствПоПодразделениям"));
	Запрос.УстановитьПараметр("ИспользоватьУчетПрочихАктивовПассивов",      ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихАктивовПассивов"));
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Реквизиты, ДокументСсылка, МенеджерВременныхТаблиц)

	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаРасшифровкаПлатежа.Заказ   КАК Заказ,
	|	ТаблицаРасшифровкаПлатежа.Партнер КАК Партнер,
	|
	|	ВЫБОР КОГДА ТаблицаРасшифровкаПлатежа.Заказ ССЫЛКА Справочник.ДоговорыКонтрагентов ТОГДА
	|		ТаблицаРасшифровкаПлатежа.Заказ
	|	ИНАЧЕ
	|		ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Заказ.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|	КОНЕЦ КАК Договор,
	|	ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Заказ.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности
	|
	|ПОМЕСТИТЬ ТаблицаОбъектовРасчетов
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаЛизингодателю)
	|		)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Заказ
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация                    КАК Организация,
	|	&Контрагент                     КАК Контрагент,
	|	ТаблицаОбъектовРасчетов.Партнер КАК Партнер,
	|	ТаблицаОбъектовРасчетов.Договор КАК Договор,
	|	ТаблицаОбъектовРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаОбъектовРасчетов.Партнер = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	Аналитика.КлючАналитики ЕСТЬ NULL
	|");
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("Контрагент", Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", Реквизиты.ХозяйственнаяОперация);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.СоздатьКлючАналитики(Выборка);
	КонецЦикла;

КонецПроцедуры

Функция ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ТаблицаРасшифровкаПлатежа";
	
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	ТаблицаРасшифровкаПлатежа.Заказ КАК Заказ,
	|
	|	ТаблицаРасшифровкаПлатежа.Сумма КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено) КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита КАК ДоговорКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита КАК ТипСуммыКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЗаймаСотруднику КАК ДоговорЗаймаСотруднику,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЛизинга КАК ДоговорЛизинга,
	|	ТаблицаРасшифровкаПлатежа.ТипПлатежаПоЛизингу КАК ТипПлатежаПоЛизингу,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов
	|
	|ПОМЕСТИТЬ ТаблицаРасшифровкаПлатежа
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	ПО
	|		ТаблицаРасшифровкаПлатежа.Заказ = ТаблицаОбъектовРасчетов.Заказ
	|		И ТаблицаРасшифровкаПлатежа.Партнер = ТаблицаОбъектовРасчетов.Партнер
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаОбъектовРасчетов.Партнер = Аналитика.Партнер
	|		И ТаблицаОбъектовРасчетов.Договор = Аналитика.Договор
	|		И ТаблицаОбъектовРасчетов.НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаЛизингодателю)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	ТаблицаРасшифровкаПлатежа.Заказ КАК Заказ,
	|
	|	ТаблицаРасшифровкаПлатежа.Сумма КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено) КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита КАК ДоговорКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита КАК ТипСуммыКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЗаймаСотруднику КАК ДоговорЗаймаСотруднику,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЛизинга КАК ДоговорЛизинга,
	|	ТаблицаРасшифровкаПлатежа.ТипПлатежаПоЛизингу КАК ТипПлатежаПоЛизингу,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|
	|	ВЫБОР КОГДА &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств))
	|		ТОГДА ТаблицаРасшифровкаПлатежа.СтатьяРасходов
	|		КОГДА &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет))
	|		ТОГДА
	|			ВЫБОР КОГДА &ИспользоватьУчетПрочихАктивовПассивов ТОГДА
	|				ТаблицаРасшифровкаПлатежа.СтатьяРасходов
	|			ИНАЧЕ
	|				НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатьяРасходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаРасходов КАК АналитикаРасходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов
	|
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И ТаблицаРасшифровкаПлатежа.Партнер = Аналитика.Партнер
	|		И Аналитика.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|		И Аналитика.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	ТаблицаРасшифровкаПлатежа.Заказ КАК Заказ,
	|
	|	ТаблицаРасшифровкаПлатежа.Сумма КАК Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|
	|	ЕСТЬNULL(Аналитика.КлючАналитики, Неопределено) КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита КАК ДоговорКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита КАК ТипСуммыКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЗаймаСотруднику КАК ДоговорЗаймаСотруднику,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЛизинга КАК ДоговорЛизинга,
	|	ТаблицаРасшифровкаПлатежа.ТипПлатежаПоЛизингу КАК ТипПлатежаПоЛизингу,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов
	|	
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &ОрганизацияПолучатель = Аналитика.Контрагент
	|		И ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) = Аналитика.Партнер
	|		И ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) = Аналитика.Договор
	|		И ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки,
	|	ТаблицаРасшифровкаПлатежа.Заказ,
	|
	|	ТаблицаРасшифровкаПлатежа.Сумма,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|
	|	ЕСТЬNULL(Аналитика.КлючАналитики, НЕОПРЕДЕЛЕНО),
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЗаймаСотруднику,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЛизинга КАК ДоговорЛизинга,
	|	ТаблицаРасшифровкаПлатежа.ТипПлатежаПоЛизингу КАК ТипПлатежаПоЛизингу,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов
	|
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО (&Организация = Аналитика.Организация)
	|			И (&Контрагент = Аналитика.Контрагент)
	|			И ТаблицаРасшифровкаПлатежа.Партнер = Аналитика.Партнер
	|			И ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) = Аналитика.Договор
	|			И ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	НЕОПРЕДЕЛЕНО,
	|
	|	Заявка.СуммаДокумента,
	|	Заявка.СуммаДокумента,
	|	Заявка.Валюта,
	|
	|	&АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	Заявка.СтатьяДвиженияДенежныхСредств,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов
	|
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК Заявка
	|ГДЕ
	|	Заявка.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику)
	|	И НЕ &ИспользоватьНачислениеЗарплаты
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции


Функция ТекстЗапросаТаблицаДенежныеСредстваКВыплате(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваКВыплате";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтрокиЗаявки,
	|	0 КАК НомерСтрокиВедомости,
	|	
	|	ВЫБОР КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		&ДатаПлатежа
	|	КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		&ЖелательнаяДатаПлатежа
	|	ИНАЧЕ
	|		&Период
	|	КОНЕЦ КАК Период,
	|	
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&Ссылка КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.Заказ КАК Заказ,
	|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаРасходов КАК АналитикаРасходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита КАК ДоговорКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ТипСуммыКредитаДепозита КАК ТипСуммыКредитаДепозита,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЛизинга КАК ДоговорЛизинга,
	|	ТаблицаРасшифровкаПлатежа.ТипПлатежаПоЛизингу КАК ТипПлатежаПоЛизингу,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЗаймаСотруднику КАК ДоговорЗаймаСотруднику,
	|	ТаблицаРасшифровкаПлатежа.Сумма КАК Сумма
	|
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		Истина
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств
	|	И &Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Отклонена)
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаЛизингодателю)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтрокиЗаявки,
	|	0 КАК НомерСтрокиВедомости,
	|	
	|	ВЫБОР КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		&ДатаПлатежа
	|	КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		&ЖелательнаяДатаПлатежа
	|	ИНАЧЕ
	|		&Период
	|	КОНЕЦ КАК Период,
	|	
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&Ссылка КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&ПодотчетноеЛицо КАК ПодотчетноеЛицо,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	Неопределено КАК Заказ,
	|	Неопределено КАК СтатьяРасходов,
	|	Неопределено КАК АналитикаРасходов,
	|	Неопределено КАК АналитикаАктивовПассивов,
	|	Неопределено КАК ДоговорКредитаДепозита,
	|	Неопределено КАК ТипСуммыКредитаДепозита,
	|	Неопределено КАК ДоговорЗаймаСотруднику,
	|	Неопределено КАК ДоговорЛизинга,
	|	Неопределено КАК ТипПлатежаПоЛизингу,
	|	ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента) КАК Сумма
	|
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ДанныеДокумента.Ссылка = ТаблицаРасшифровкаПлатежа.Ссылка
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств
	|	И &Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Отклонена)
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0 КАК НомерСтрокиЗаявки,
	|	0 КАК НомерСтрокиВедомости,
	|	
	|	ВЫБОР КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		&ДатаПлатежа
	|	КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		&ЖелательнаяДатаПлатежа
	|	ИНАЧЕ
	|		&Период
	|	КОНЕЦ КАК Период,
	|	
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&Ссылка КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК ПодотчетноеЛицо,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО КАК Заказ,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКредитаДепозита,
	|	НЕОПРЕДЕЛЕНО КАК ТипСуммыКредитаДепозита,
	|	НЕОПРЕДЕЛЕНО КАК ВыдачаЗаймаСотруднику,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорЛизинга,
	|	НЕОПРЕДЕЛЕНО КАК ТипПлатежаПоЛизингу,
	|	ДанныеДокумента.СуммаДокумента КАК Сумма
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств
	|	И &Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Отклонена)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплаты)
	|	И &ХозяйственнаяОперацияПоЗарплате <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета)
	|	И НЕ &ИспользоватьНачислениеЗарплаты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0 КАК НомерСтрокиЗаявки,
	|	0 КАК НомерСтрокиВедомости,
	|	
	|	ВЫБОР КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		&ДатаПлатежа
	|	КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		&ЖелательнаяДатаПлатежа
	|	ИНАЧЕ
	|		&Период
	|	КОНЕЦ КАК Период,
	|	
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Организация КАК Организация,
	|	&Ссылка КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.ФизическоеЛицо КАК ПодотчетноеЛицо,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	Неопределено КАК Заказ,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорКредитаДепозита,
	|	НЕОПРЕДЕЛЕНО КАК ТипСуммыКредитаДепозита,
	|	НЕОПРЕДЕЛЕНО КАК ВыдачаЗаймаСотруднику,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорЛизинга,
	|	НЕОПРЕДЕЛЕНО КАК ТипПлатежаПоЛизингу,
	|	ДанныеДокумента.Сумма КАК Сумма
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств.ЛицевыеСчетаСотрудников КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ИспользоватьЗаявкиНаРасходованиеДенежныхСредств
	|	И &Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Отклонена)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплаты)
	|	И &ХозяйственнаяОперацияПоЗарплате = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета)
	|	И НЕ &ИспользоватьНачислениеЗарплаты
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиЗаявки,
	|	НомерСтрокиВедомости
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЛимитыРасходаДенежныхСредств(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЛимитыРасходаДенежныхСредств";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтрокиЗаявки,
	|	0 КАК НомерСтрокиВедомости,
	|	
	|	ВЫБОР КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		НАЧАЛОПЕРИОДА(&ДатаПлатежа, МЕСЯЦ)
	|	КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		НАЧАЛОПЕРИОДА(&ЖелательнаяДатаПлатежа, МЕСЯЦ)
	|	ИНАЧЕ
	|		НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
	|	КОНЕЦ КАК Период,
	|	
	|	ВЫБОР
	|		КОГДА &ИспользоватьЛимитыРасходаПоОрганизациям
	|			ТОГДА &Организация 
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	КОНЕЦ КАК Организация,
	|	ВЫБОР
	|		КОГДА &ИспользоватьЛимитыРасходаПоПодразделениям
	|			ТОГДА &Подразделение 
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	КОНЕЦ КАК Подразделение,
	|	
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ВЫБОР
	|		КОГДА НЕ &СверхЛимита
	|			ТОГДА ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр 
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РасходВПределахЛимита,
	|	
	|	ВЫБОР
	|		КОГДА &СверхЛимита
	|			ТОГДА ТаблицаРасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУпр 
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РасходСверхЛимита
	|
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		Истина
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ИспользоватьЛимитыРасходаДенежныхСредств
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате)
	|		)
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймаСотруднику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаЛизингодателю)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтрокиЗаявки,
	|	0 КАК НомерСтрокиВедомости,
	|	
	|	ВЫБОР КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		НАЧАЛОПЕРИОДА(&ДатаПлатежа, МЕСЯЦ)
	|	КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		НАЧАЛОПЕРИОДА(&ЖелательнаяДатаПлатежа, МЕСЯЦ)
	|	ИНАЧЕ
	|		НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
	|	КОНЕЦ КАК Период,
	|	
	|	ВЫБОР
	|		КОГДА &ИспользоватьЛимитыРасходаПоОрганизациям
	|			ТОГДА &Организация 
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	КОНЕЦ КАК Организация,
	|	ВЫБОР
	|		КОГДА &ИспользоватьЛимитыРасходаПоПодразделениям
	|			ТОГДА &Подразделение 
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	КОНЕЦ КАК Подразделение,
	|	
	|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ВЫБОР
	|		КОГДА НЕ &СверхЛимита
	|			ТОГДА ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента) * &КоэффициентПересчетаВВалютуУпр 
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РасходВПределахЛимита,
	|	
	|	ВЫБОР
	|		КОГДА &СверхЛимита
	|			ТОГДА ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента) * &КоэффициентПересчетаВВалютуУпр 
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РасходСверхЛимита
	|	
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|	ПО
	|		ДанныеДокумента.Ссылка = ТаблицаРасшифровкаПлатежа.Ссылка
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ИспользоватьЛимитыРасходаДенежныхСредств
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате)
	|		)
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|		)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0 КАК НомерСтрокиЗаявки,
	|	0 КАК НомерСтрокиВедомости,
	|	
	|	ВЫБОР КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		НАЧАЛОПЕРИОДА(&ДатаПлатежа, МЕСЯЦ)
	|	КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		НАЧАЛОПЕРИОДА(&ЖелательнаяДатаПлатежа, МЕСЯЦ)
	|	ИНАЧЕ
	|		НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
	|	КОНЕЦ КАК Период,
	|	
	|	ВЫБОР
	|		КОГДА &ИспользоватьЛимитыРасходаПоОрганизациям
	|			ТОГДА &Организация 
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|	КОНЕЦ КАК Организация,
	|	ВЫБОР
	|		КОГДА &ИспользоватьЛимитыРасходаПоПодразделениям
	|			ТОГДА &Подразделение 
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|	КОНЕЦ КАК Подразделение,
	|	
	|	&СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ВЫБОР
	|		КОГДА НЕ &СверхЛимита 
	|			ТОГДА ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр 
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РасходВПределахЛимита,
	|	
	|	ВЫБОР
	|		КОГДА &СверхЛимита 
	|			ТОГДА ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр 
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РасходСверхЛимита
	|	
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ИспользоватьЛимитыРасходаДенежныхСредств
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате)
	|		)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплаты)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСПоставщиками";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРасшифровкаПлатежа.ВалютаВзаиморасчетов КАК Валюта,
	|	ТаблицаРасшифровкаПлатежа.Заказ КАК ЗаказПоставщику,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&ФормаОплаты КАК ФормаОплаты,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	&Ссылка КАК ЗаявкаНаРасходованиеДенежныхСредств,
	|
	|	0 КАК Сумма,
	|	0 КАК КОплате,
	|	ТаблицаРасшифровкаПлатежа.СуммаВзаиморасчетов КАК Оплачивается,
	|	0 КАК СуммаРегл,
	|	0 КАК СуммаУпр,
	|
	|	&Организация КАК Организация
	|ИЗ
	|	ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне)
	|	)
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате)
	|		)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныхСредств(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДенежныхСредств";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫБОР КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		НАЧАЛОПЕРИОДА(&ДатаПлатежа, МЕСЯЦ)
	|	КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		НАЧАЛОПЕРИОДА(&ЖелательнаяДатаПлатежа, МЕСЯЦ)
	|	ИНАЧЕ
	|		НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
	|	КОНЕЦ КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|			ТОГДА ДанныеДокумента.Подразделение
	|		ИНАЧЕ ДанныеДокумента.БанковскийСчет.Подразделение
	|	КОНЕЦ КАК Подразделение,
	|	ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные) КАК ТипДенежныхСредств,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|			ТОГДА ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|		ИНАЧЕ &СтатьяДвиженияДенежныхСредств
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет)
	|				ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
	|			ТОГДА ДанныеДокумента.БанковскийСчетПолучатель
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств)
	|			ТОГДА ДанныеДокумента.КассаПолучатель
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|			ТОГДА ДанныеДокумента.ПодотчетноеЛицо
	|	КОНЕЦ КАК КорДенежныеСредства,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваУПодотчетногоЛица)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваВПути)
	|	КОНЕЦ КАК КорТипДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК КорВалюта,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СверхЛимита = ЛОЖЬ
	|			ТОГДА ВЫБОР
	|					КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|						ТОГДА ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента)
	|					ИНАЧЕ ДанныеДокумента.СуммаДокумента
	|				КОНЕЦ
	|	КОНЕЦ КАК СуммаКВыплатеВРамкахЛимита,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СверхЛимита = ИСТИНА
	|			ТОГДА ВЫБОР
	|					КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику)
	|						ТОГДА ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента)
	|					ИНАЧЕ ДанныеДокумента.СуммаДокумента
	|				КОНЕЦ
	|	КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
	|	ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет)
	|				ИЛИ &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
	|			ТОГДА ДанныеДокумента.БанковскийСчетПолучатель
	|		КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств)
	|			ТОГДА ДанныеДокумента.КассаПолучатель
	|	КОНЕЦ КАК ИсточникКорГФУДенежныхСредств
	|
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате)
	|		)
	|	И &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику), 
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		НАЧАЛОПЕРИОДА(&ДатаПлатежа, МЕСЯЦ)
	|	КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1,1,1) ТОГДА
	|		НАЧАЛОПЕРИОДА(&ЖелательнаяДатаПлатежа, МЕСЯЦ)
	|	ИНАЧЕ
	|		НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
	|	КОНЕЦ,
	|	&ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация,
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита.Подразделение,
	|	ДанныеДокумента.БанковскийСчет,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные),
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта,
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Депозиты),
	|	ДанныеДокумента.Валюта КАК КорВалюта,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СверхЛимита = ЛОЖЬ
	|			ТОГДА ТаблицаРасшифровкаПлатежа.Сумма
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СверхЛимита = ИСТИНА
	|			ТОГДА ТаблицаРасшифровкаПлатежа.Сумма
	|	КОНЕЦ,
	|	ДанныеДокумента.БанковскийСчет,
	|	ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате)
	|		)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты)"
	+"
	|
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныеСредстваДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДенежныеСредстваДоходыРасходы";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА НАЧАЛОПЕРИОДА(&ДатаПлатежа, МЕСЯЦ)
	|		КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА НАЧАЛОПЕРИОДА(&ЖелательнаяДатаПлатежа, МЕСЯЦ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
	|	КОНЕЦ КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные) КАК ТипДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов КАК СтатьяДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаРасходов КАК АналитикаРасходов,
	|	ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СверхЛимита = ЛОЖЬ
	|			ТОГДА ТаблицаРасшифровкаПлатежа.Сумма
	|	КОНЕЦ КАК СуммаКВыплатеВРамкахЛимита,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СверхЛимита = ИСТИНА
	|			ТОГДА ТаблицаРасшифровкаПлатежа.Сумма
	|	КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
	|	ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
	|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов КАК ИсточникГФУДоходовРасходов
	|
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате)
	|		)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА НАЧАЛОПЕРИОДА(&ДатаПлатежа, МЕСЯЦ)
	|		КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА НАЧАЛОПЕРИОДА(&ЖелательнаяДатаПлатежа, МЕСЯЦ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
	|	КОНЕЦ,
	|	&ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.БанковскийСчет.Подразделение,
	|	ДанныеДокумента.БанковскийСчет,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные),
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта,
	|	ТаблицаРасшифровкаПлатежа.СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ТаблицаРасшифровкаПлатежа.АналитикаАктивовПассивов,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СверхЛимита = ЛОЖЬ
	|			ТОГДА ДанныеДокумента.СуммаДокумента
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СверхЛимита = ИСТИНА
	|			ТОГДА ДанныеДокумента.СуммаДокумента
	|	КОНЕЦ,
	|	ДанныеДокумента.БанковскийСчет,
	|	НЕОПРЕДЕЛЕНО
	|
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате)
	|		)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА НАЧАЛОПЕРИОДА(&ДатаПлатежа, МЕСЯЦ)
	|		КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА НАЧАЛОПЕРИОДА(&ЖелательнаяДатаПлатежа, МЕСЯЦ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
	|	КОНЕЦ,
	|	&ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.БанковскийСчет.Подразделение,
	|	ДанныеДокумента.БанковскийСчет,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные),
	|	&СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта,
	|	ДанныеДокумента.СтатьяАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ДанныеДокумента.АналитикаАктивовПассивов,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СверхЛимита = ЛОЖЬ
	|			ТОГДА ДанныеДокумента.СуммаДокумента
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СверхЛимита = ИСТИНА
	|			ТОГДА ДанныеДокумента.СуммаДокумента
	|	КОНЕЦ,
	|	ДанныеДокумента.БанковскийСчет,
	|	НЕОПРЕДЕЛЕНО
	|
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате)
	|		)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплаты)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА НАЧАЛОПЕРИОДА(&ДатаПлатежа, МЕСЯЦ)
	|		КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА НАЧАЛОПЕРИОДА(&ЖелательнаяДатаПлатежа, МЕСЯЦ)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
	|	КОНЕЦ,
	|	&ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.БанковскийСчет.Подразделение,
	|	ДанныеДокумента.БанковскийСчет,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные),
	|	ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПредметыЛизинга),
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ТаблицаРасшифровкаПлатежа.ДоговорЛизинга,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СверхЛимита = ЛОЖЬ
	|			ТОГДА ДанныеДокумента.СуммаДокумента
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СверхЛимита = ИСТИНА
	|			ТОГДА ДанныеДокумента.СуммаДокумента
	|	КОНЕЦ,
	|	ДанныеДокумента.БанковскийСчет,
	|	НЕОПРЕДЕЛЕНО
	|
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате)
	|		)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаЛизингодателю)"
	+"
	|
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныеСредстваКонтрагент(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДенежныеСредстваКонтрагент";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ТаблицаРасшифровкаПлатежа", ТекстыЗапроса) Тогда
		ТекстЗапросаВременнаяТаблицаРасшифровкаПлатежа(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Период КАК Период,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована)
	|			ТОГДА ВЫБОР
	|					КОГДА ДанныеДокумента.ФормаОплатыНаличная
	|						ТОГДА ДанныеДокумента.Касса
	|					ИНАЧЕ ДанныеДокумента.ДенежныеСредства
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДанныеДокумента.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|					ТОГДА ДанныеДокумента.Касса
	|				ИНАЧЕ ДанныеДокумента.ДенежныеСредства
	|			КОНЕЦ
	|	КОНЕЦ КАК ДенежныеСредства,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована)
	|			ТОГДА ВЫБОР
	|					КОГДА ДанныеДокумента.ФормаОплатыНаличная
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные)
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДанныеДокумента.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные)
	|			КОНЕЦ
	|	КОНЕЦ КАК ТипДенежныхСредств,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.ВалютаПлатежа КАК ВалютаПлатежа,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.ОбъектРасчетов КАК ОбъектРасчетов,
	|	НЕОПРЕДЕЛЕНО КАК РасчетныйДокумент,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СверхЛимита = ЛОЖЬ
	|			ТОГДА СУММА(ДанныеДокумента.СуммаКВыплате)
	|	КОНЕЦ КАК СуммаКВыплатеВРамкахЛимита,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СверхЛимита = ИСТИНА
	|			ТОГДА СУММА(ДанныеДокумента.СуммаКВыплате)
	|	КОНЕЦ КАК СуммаКВыплатеСверхЛимита,
	|	ДанныеДокумента.ИсточникГФУДенежныхСредств КАК ИсточникГФУДенежныхСредств,
	|	ДанныеДокумента.ИсточникГФУРасчетов КАК ИсточникГФУРасчетов
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА НАЧАЛОПЕРИОДА(&ДатаПлатежа, МЕСЯЦ)
	|			КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА НАЧАЛОПЕРИОДА(&ЖелательнаяДатаПлатежа, МЕСЯЦ)
	|			ИНАЧЕ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
	|		КОНЕЦ КАК Период,
	|		ДанныеДокумента.ФормаОплатыНаличная КАК ФормаОплатыНаличная,
	|		ДанныеДокумента.ФормаОплатыЗаявки КАК ФормаОплатыЗаявки,
	|		ДанныеДокумента.Статус КАК Статус,
	|		&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ДанныеДокумента.Организация КАК Организация,
	|		ТаблицаРасшифровкаПлатежа.Заказ.Подразделение КАК Подразделение,
	|		ДанныеДокумента.БанковскийСчет КАК ДенежныеСредства,
	|		ДанныеДокумента.Касса КАК Касса,
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|		ДанныеДокумента.Валюта КАК ВалютаПлатежа,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер КАК Партнер,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|		ВЫБОР
	|			КОГДА ТаблицаРасшифровкаПлатежа.Заказ ССЫЛКА Справочник.ДоговорыКонтрагентов
	|				ТОГДА ТаблицаРасшифровкаПлатежа.Заказ
	|			ИНАЧЕ ТаблицаРасшифровкаПлатежа.Заказ.Договор
	|		КОНЕЦ КАК Договор,
	|		ТаблицаРасшифровкаПлатежа.Заказ КАК ОбъектРасчетов,
	|		ТаблицаРасшифровкаПлатежа.Сумма КАК СуммаКВыплате,
	|		ДанныеДокумента.БанковскийСчет КАК ИсточникГФУДенежныхСредств,
	|		ТаблицаРасшифровкаПлатежа.Заказ КАК ИсточникГФУРасчетов,
	|		ДанныеДокумента.СверхЛимита КАК СверхЛимита
	|
	|	ИЗ
	|		Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|			ПО (ИСТИНА)
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И &Статус В (
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате)
	|		)
	|		И &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику), ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту), ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию), ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию), ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА НАЧАЛОПЕРИОДА(&ДатаПлатежа, МЕСЯЦ)
	|			КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА НАЧАЛОПЕРИОДА(&ЖелательнаяДатаПлатежа, МЕСЯЦ)
	|			ИНАЧЕ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
	|		КОНЕЦ,
	|		ДанныеДокумента.ФормаОплатыНаличная,
	|		ДанныеДокумента.ФормаОплатыЗаявки,
	|		ДанныеДокумента.Статус,
	|		&ХозяйственнаяОперация,
	|		ДанныеДокумента.Организация,
	|		ДанныеДокумента.Подразделение,
	|		ДанныеДокумента.БанковскийСчет,
	|		ДанныеДокумента.Касса,
	|		&СтатьяДвиженияДенежныхСредств,
	|		ДанныеДокумента.Валюта,
	|		НЕОПРЕДЕЛЕНО,
	|		ДанныеДокумента.БанковскийСчетПолучатель.Владелец,
	|		НЕОПРЕДЕЛЕНО,
	|		НЕОПРЕДЕЛЕНО,
	|		ДанныеДокумента.СуммаДокумента,
	|		ДанныеДокумента.БанковскийСчет,
	|		НЕОПРЕДЕЛЕНО,
	|		ДанныеДокумента.СверхЛимита
	|	
	|	ИЗ
	|		Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И &Статус В (
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате)
	|		)
	|		И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА &ДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА НАЧАЛОПЕРИОДА(&ДатаПлатежа, МЕСЯЦ)
	|			КОГДА &ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА НАЧАЛОПЕРИОДА(&ЖелательнаяДатаПлатежа, МЕСЯЦ)
	|			ИНАЧЕ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
	|		КОНЕЦ,
	|		ДанныеДокумента.ФормаОплатыНаличная,
	|		ДанныеДокумента.ФормаОплатыЗаявки,
	|		ДанныеДокумента.Статус,
	|		ВЫБОР
	|			КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам)
	|					И (ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита.СтатьяДДСОсновногоДолга = ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|						ИЛИ ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита.СтатьяДДСПоступленияВыдачи = ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам)
	|			КОГДА &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам)
	|					И (ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита.СтатьяДДСПроцентов = ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств
	|						ИЛИ ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита.СтатьяДДСКомиссии = ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств)
	|				ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПроцентовПоКредитам)
	|			ИНАЧЕ &ХозяйственнаяОперация
	|		КОНЕЦ,
	|		ДанныеДокумента.Организация,
	|		ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита.Подразделение,
	|		ДанныеДокумента.БанковскийСчет,
	|		ДанныеДокумента.Касса,
	|		ТаблицаРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств,
	|		ДанныеДокумента.Валюта,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Партнер,
	|		ТаблицаРасшифровкаПлатежа.АналитикаУчетаПоПартнерам.Контрагент,
	|		ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита,
	|		НЕОПРЕДЕЛЕНО,
	|		ЕСТЬNULL(ТаблицаРасшифровкаПлатежа.Сумма, ДанныеДокумента.СуммаДокумента),
	|		ДанныеДокумента.БанковскийСчет,
	|		ТаблицаРасшифровкаПлатежа.ДоговорКредитаДепозита,
	|		ДанныеДокумента.СверхЛимита
	|
	|	ИЗ
	|		Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|			ПО (ИСТИНА)
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И &Статус В (
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате)
	|		)
	|		И &ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам), ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов))) КАК ДанныеДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Период,
	|	ДанныеДокумента.Статус,
	|	ДанныеДокумента.ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.Подразделение,
	|	ДанныеДокумента.ДенежныеСредства,
	|	ДанныеДокумента.Касса,
	|	ДанныеДокумента.СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.ВалютаПлатежа,
	|	ДанныеДокумента.Партнер,
	|	ДанныеДокумента.Контрагент,
	|	ДанныеДокумента.Договор,
	|	ДанныеДокумента.ОбъектРасчетов,
	|	ДанныеДокумента.ИсточникГФУДенежныхСредств,
	|	ДанныеДокумента.ИсточникГФУРасчетов,
	|	ДанныеДокумента.СверхЛимита,
	|	ДанныеДокумента.ФормаОплатыНаличная,
	|	ДанныеДокумента.ФормаОплатыЗаявки"
	+"
	|
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуУПР") Тогда
		Возврат;
	КонецЕсли;
	
	КоэффициентПересчетаВВалютуУпр = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(
		Запрос.Параметры.Валюта, 
		Константы.ВалютаУправленческогоУчета.Получить(), 
		Запрос.Параметры.Период);
	
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр", КоэффициентПересчетаВВалютуУпр);
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаУчетаПоПартнерам") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос.Параметры, Запрос.Параметры.Ссылка, Запрос.МенеджерВременныхТаблиц);
	
	Если Запрос.Параметры.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию
		Или Запрос.Параметры.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию
	Тогда
		СтруктураАналитики = Новый Структура("Организация, Контрагент, Партнер, Договор, НаправлениеДеятельности",
			Запрос.Параметры.Организация,
			Запрос.Параметры.ОрганизацияПолучатель,
			Справочники.Партнеры.НашеПредприятие,
			Справочники.ДоговорыКонтрагентов.ПустаяСсылка(),
			Справочники.НаправленияДеятельности.ПустаяСсылка());
	ИначеЕсли Запрос.Параметры.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты Тогда
		СтруктураАналитики = Новый Структура("Организация, Контрагент, Партнер, Договор, НаправлениеДеятельности",
			Запрос.Параметры.Организация,
			Справочники.Контрагенты.ПустаяСсылка(),
			Справочники.Партнеры.ПустаяСсылка(),
			Справочники.ДоговорыКонтрагентов.ПустаяСсылка(),
			Справочники.НаправленияДеятельности.ПустаяСсылка());
	Иначе
		
		СтруктураАналитики = Новый Структура("Организация, Контрагент, Партнер, Договор, НаправлениеДеятельности",
			Запрос.Параметры.Организация,
			Запрос.Параметры.Контрагент,
			Справочники.Партнеры.ПустаяСсылка(),
			Справочники.ДоговорыКонтрагентов.ПустаяСсылка(),
			Справочники.НаправленияДеятельности.ПустаяСсылка());
	КонецЕсли;
	АналитикаУчетаПоПартнерам = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураАналитики);
	
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерам", АналитикаУчетаПоПартнерам);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция СформироватьЗапросПроверкиПриСменеСтатуса(МассивДокументов, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	ЗначениеНовогоСтатуса = Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств[НовыйСтатус];
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Ссылка) КАК Представление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Статус) КАК ПредставлениеТекущегоСтатуса,
	|	ПРЕДСТАВЛЕНИЕ(&Статус) КАК ПредставлениеНовогоСтатуса,
	|	ВЫБОР
	|		КОГДА ТаблицаДокументов.Статус = &Статус
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СтатусСовпадает,
	|	ТаблицаДокументов.Проведен КАК Проведен,
	|	ТаблицаДокументов.ПометкаУдаления КАК ПометкаУдаления,
	|	ИСТИНА КАК ЗаписьПроведением
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ТаблицаДокументов
	|ГДЕ
	|	ТаблицаДокументов.Ссылка В(&МассивДокументов)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Статус", ЗначениеНовогоСтатуса);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Возврат Запрос;
	
КонецФункции

Функция ПроверкаПередСменойСтатуса(ВыборкаПроверки, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	Возврат Истина; // Для документа "ЗаявкаНаРасходованиеДенежныхСредств" дополнительные проверки отсутствуют
	
КонецФункции

Функция СтатьяДвиженияДенежныхСредствДокумента(ДанныеДокумента)

	Если ЗначениеЗаполнено(ДанныеДокумента.СтатьяДвиженияДенежныхСредств) Тогда
		СтатьяДвиженияДенежныхСредств = ДанныеДокумента.СтатьяДвиженияДенежныхСредств;
	Иначе
		СтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.ПредопределеннаяСтатьяДДС(
			ДанныеДокумента.ХозяйственнаяОперация,
			ДанныеДокумента.Валюта);
	КонецЕсли;
	
	Возврат СтатьяДвиженияДенежныхСредств;

КонецФункции

Функция ВалютаПланированияДенежныхСредств(ДанныеДокумента, ВалютаБанковскогоСчета) Экспорт
	
	Если ДанныеДокумента.ФормаОплатыЗаявки <> Перечисления.ФормыОплаты.Безналичная Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ДанныеДокумента.ПланированиеСуммы = Перечисления.СпособыПланированияОплатыЗаявок.ВВалютеВзаиморасчетов Тогда
		Возврат ВалютаБанковскогоСчета;
	Иначе
		Возврат ДанныеДокумента.Валюта;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область ТекущиеДела

// Заполняет список текущих дел пользователя.
// Описание параметров процедуры см. в ТекущиеДелаСлужебный.НоваяТаблицаТекущихДел()
//
Процедура ПриЗаполненииСпискаТекущихДел(ТекущиеДела) Экспорт
	
	ИмяФормы = "Документ.ЗаявкаНаРасходованиеДенежныхСредств.Форма.ФормаСпискаЗаявокКСогласованию";
	
	ОбщиеПараметрыЗапросов = ТекущиеДелаСлужебный.ОбщиеПараметрыЗапросов();
	
	// Определим доступны ли текущему пользователю показатели группы
	Доступность =
		(ОбщиеПараметрыЗапросов.ЭтоПолноправныйПользователь
			Или ПравоДоступа("Просмотр", Метаданные.Документы.ЗаявкаНаРасходованиеДенежныхСредств))
		И (ПравоДоступа("Изменение", Метаданные.Документы.ЗаявкаНаРасходованиеДенежныхСредств)
			ИЛИ ПраваПользователяПовтИсп.СогласованиеЗаявокНаРасходованиеДенежныхСредств())
		И ПолучитьФункциональнуюОпцию("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств");
	
	Если НЕ Доступность Тогда
		Возврат;
	КонецЕсли;
	
	// Расчет показателей
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|			КОГДА ЗаявкаНаРасходованиеДенежныхСредств.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована)
	|				ТОГДА ЗаявкаНаРасходованиеДенежныхСредств.Ссылка
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК ЗаявкиНаОплатуКСогласованию,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|			КОГДА ЗаявкаНаРасходованиеДенежныхСредств.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована)
	|					И ЗаявкаНаРасходованиеДенежныхСредств.ДатаПлатежа < НАЧАЛОПЕРИОДА(&ДатаАктуальности, ДЕНЬ)
	|				ТОГДА ЗаявкаНаРасходованиеДенежныхСредств.Ссылка
	|			ИНАЧЕ NULL
	|		КОНЕЦ) КАК ЗаявкиНаОплатуКСогласованиюПросрочено
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|ГДЕ
	|	ЗаявкаНаРасходованиеДенежныхСредств.Проведен";
	
	Результат = ТекущиеДелаСлужебный.ЧисловыеПоказателиТекущихДел(Запрос, ОбщиеПараметрыЗапросов);
	
	// Заполнение дел.
	// ЗаявкиНаОплату
	ДелоРодитель = ТекущиеДела.Добавить();
	ДелоРодитель.Идентификатор  = "ЗаявкиНаОплату";
	ДелоРодитель.Представление  = НСтр("ru='Заявки на оплату';uk='Заявки на оплату'");
	ДелоРодитель.Владелец       = Метаданные.Подсистемы.Закупки;
	
	// ЗаявкиНаОплатуКСогласованию
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Статус", Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована);
	ПараметрыОтбора.Вставить("ДатаОплаты", ОбщиеПараметрыЗапросов.ПустаяДата);
	ПараметрыОтбора.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	ПараметрыОтбора.Вставить("Приоритет", Справочники.Приоритеты.ПустаяСсылка());
	
	Дело = ТекущиеДела.Добавить();
	Дело.Идентификатор  = "ЗаявкиНаОплатуКСогласованию";
	Дело.ЕстьДела       = Результат.ЗаявкиНаОплатуКСогласованию > 0;
	Дело.Представление  = НСтр("ru='Заявки к согласованию';uk='Заявки до погодження'");
	Дело.Количество     = Результат.ЗаявкиНаОплатуКСогласованию;
	Дело.Важное         = Ложь;
	Дело.Форма          = ИмяФормы;
	Дело.ПараметрыФормы = Новый Структура("СтруктураБыстрогоОтбора", ПараметрыОтбора);
	Дело.Владелец       = "ЗаявкиНаОплату";
	
	// ЗаявкиНаОплатуКСогласованиюПросрочено
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Статус", Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована);
	ПараметрыОтбора.Вставить("ДатаОплаты", НачалоДня(ОбщиеПараметрыЗапросов.ТекущаяДата - 86400));
	ПараметрыОтбора.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	ПараметрыОтбора.Вставить("Приоритет", Справочники.Приоритеты.ПустаяСсылка());
	
	Дело = ТекущиеДела.Добавить();
	Дело.Идентификатор  = "ЗаявкиНаОплатуКСогласованиюПросрочено";
	Дело.ЕстьДела       = Результат.ЗаявкиНаОплатуКСогласованиюПросрочено > 0;
	Дело.Представление  = НСтр("ru='Согласование просрочено';uk='Погодження прострочено'");
	Дело.Количество     = Результат.ЗаявкиНаОплатуКСогласованиюПросрочено;
	Дело.Важное         = Истина;
	Дело.Форма          = ИмяФормы;
	Дело.ПараметрыФормы = Новый Структура("СтруктураБыстрогоОтбора", ПараметрыОтбора);
	Дело.Владелец       = "ЗаявкиНаОплату";
	
	Если Результат.ЗаявкиНаОплатуКСогласованию > 0
		Или Результат.ЗаявкиНаОплатуКСогласованиюПросрочено > 0 Тогда
		ДелоРодитель.ЕстьДела = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы


Функция ПолноеИмяДокумента()
	Возврат "Документ.ЗаявкаНаРасходованиеДенежныхСредств";
КонецФункции

Процедура СформироватьДвиженияДеньгиВПути_ДанныеДляОбновления(Параметры) Экспорт
    
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств") Тогда
		Возврат;
	КонецЕсли;
    
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСПоставщиками КАК РасчетыСПоставщиками
	|		ПО РасчетыСПоставщиками.Регистратор = ДанныеДокумента.Ссылка
	|ГДЕ
	|	РасчетыСПоставщиками.Период ЕСТЬ NULL
	|	И ДанныеДокумента.Проведен
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне))
	|	И ДанныеДокумента.Статус В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате))
    |");
    
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(
        Параметры, 
        Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка")
    );	
	
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.1
// Заполняет движения по регистру "Расчеты с поставщиками".
// Выполняется только при включенной ФО "Использовать заявки на расходование денежных средств".
Процедура СформироватьДвиженияДеньгиВПути(Параметры) Экспорт
    
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьЗаявкиНаРасходованиеДенежныхСредств") Тогда
        Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
    
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(
        Параметры.Очередь, 
        ПолноеИмяДокумента()
    );
    
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка	
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяДокумента());
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
            ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РасчетыСПоставщиками.НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Ссылка);
			Блокировка.Заблокировать();
            
            ДопСвойства = Новый Структура;
            ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Выборка.Ссылка, ДопСвойства);
            ИнициализироватьДанныеДокумента(Выборка.Ссылка, ДопСвойства, "РасчетыСПоставщиками");
            ТаблицаРасчетыСПоставщиками = ДопСвойства.ТаблицыДляДвижений["ТаблицаРасчетыСПоставщиками"];
            
			НаборЗаписей = РегистрыНакопления.РасчетыСПоставщиками.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Ссылка);
			НаборЗаписей.Загрузить(ТаблицаРасчетыСПоставщиками);
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей, Истина);
            
            ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
            ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(Выборка.Ссылка);
										
		КонецПопытки;
		
    КонецЦикла;
    
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
        Параметры.Очередь, 
        ПолноеИмяДокумента()
    );
	
КонецПроцедуры

Процедура ИзменитьОперациюПрочиеРасходыНаПрочаяВыдачаДСЗаполнитьДанныеДляОбновления(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|ГДЕ
	|	ЗаявкаНаРасходованиеДенежныхСредств.ХозяйственнаяОперация = &ПрочиеРасходы
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаявкаНаРасходованиеДенежныхСредств.Дата УБЫВ";
    
    Запрос.УстановитьПараметр("ПрочиеРасходы", Перечисления.ХозяйственныеОперации.ПрочиеРасходы);
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(
        Параметры, 
        Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка")
    );
	
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.2
// Изменяет в документах операцию с ПрочиеРасходы на ПрочаяВыдачаДенежныхСредств
Процедура ИзменитьОперациюПрочиеРасходыНаПрочаяВыдачаДС(Параметры) Экспорт
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(
        Параметры.Очередь, 
        ПолноеИмяДокумента()
    );
    
	Пока Выборка.Следующий() Цикл
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
            
            ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяДокумента());
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
            
			Блокировка.Заблокировать();
			
			Объект = Выборка.Ссылка.ПолучитьОбъект();
			Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств;
            
            ОбновлениеИнформационнойБазы.ЗаписатьДанные(Объект);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(Выборка.Ссылка);
			ВызватьИсключение;
		КонецПопытки;
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(
        Параметры.Очередь, 
        ПолноеИмяДокумента()
    ); 

КонецПроцедуры

Процедура ПеренестиАналитикиПеречисленияНалоговДанныеДляОбновления(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа как Расшифровка
	|	ПО
	|		Расшифровка.Ссылка = ДанныеДокумента.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Хозяйственнаяоперация = &ПеречислениеНалога
	|	И Расшифровка.Ссылка Есть NULL
	|";
	
	Запрос.УстановитьПараметр("ПеречислениеНалога", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.2
Процедура ПеренестиАналитикиПеречисленияНалогов(Параметры) Экспорт
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, "Документ.ЗаявкаНаРасходованиеДенежныхСредств");
	
    Пока Выборка.Следующий() Цикл
        
        НачатьТранзакцию();
		
		Попытка
			
            Блокировка = Новый БлокировкаДанных;
            
            ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяДокумента());
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			Блокировка.Заблокировать();
            
            ДокОбъект = Выборка.Ссылка.ПолучитьОбъект();
			
			НоваяСтрока = ДокОбъект.РасшифровкаПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ДокОбъект);
			НоваяСтрока.Сумма = ДокОбъект.СуммаДокумента;
			НоваяСтрока.СтатьяРасходов = ДокОбъект.СтатьяАктивовПассивов;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокОбъект);
            ЗафиксироватьТранзакцию();
			
		Исключение
            
			ОтменитьТранзакцию();
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(Выборка.Ссылка);
			ВызватьИсключение;
			
		КонецПопытки;
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, "Документ.ЗаявкаНаРасходованиеДенежныхСредств");
	
КонецПроцедуры

Процедура ЗаполнитьДатуАвансовогоОтчетаДанныеДляОбновления(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.ХозяйственнаяОперация = &ВыдачаПодотчетнику
	|	И ДанныеДокумента.ДатаАвансовогоОтчета = ДАТАВРЕМЯ(1,1,1)
	|";
	
	Запрос.УстановитьПараметр("ВыдачаПодотчетнику", Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику);
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.2
Процедура ЗаполнитьДатуАвансовогоОтчета(Параметры) Экспорт
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, "Документ.ЗаявкаНаРасходованиеДенежныхСредств");
	
	Пока Выборка.Следующий() Цикл
		
		Заблокирован = Ложь;
		Попытка
			
			ДокОбъект = Выборка.Ссылка.ПолучитьОбъект();
			ДокОбъект.Заблокировать();
			Заблокирован = Истина;
			
			ДокОбъект.ДатаАвансовогоОтчета = ДокОбъект.Дата;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокОбъект);
			
		Исключение
			
			Если Заблокирован Тогда
				ТекстСообщения = НСтр("ru='Не удалось обработать документ: %Ссылка% по причине: %Причина%';uk='Не вдалося обробити документ: %Ссылка% з причини: %Причина%'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			Иначе
				ТекстСообщения = НСтр("ru='Не удалось заблокировать документ: %Ссылка%';uk='Не вдалося заблокувати документ: %Ссылка%'");
			КонецЕсли;
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Документы[Выборка.Ссылка.Метаданные().Имя], Выборка.Ссылка, ТекстСообщения);
			Если Заблокирован Тогда
				ВызватьИсключение;
			КонецЕсли;
			
		КонецПопытки;
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, "Документ.ЗаявкаНаРасходованиеДенежныхСредств");
	
КонецПроцедуры

Процедура ЗаполнитьРасшифровкуПлатежаДляДокументовПрочаяВыдачаДСЗаполнитьДанныеДляОбновления(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|	
	|ГДЕ
	|	ЗаявкаНаРасходованиеДенежныхСредств.ХозяйственнаяОперация = &ПрочаяВыдачаДС
	|	И ЗаявкаНаРасходованиеДенежныхСредств.СтатьяДвиженияДенежныхСредств <> &ПустаяСтатьяДДС
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ЗаявкаНаРасходованиеДенежныхСредств.Дата УБЫВ
	|";
	Запрос.УстановитьПараметр("ПрочаяВыдачаДС",  Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств);
	Запрос.УстановитьПараметр("ПустаяСтатьяДДС", Справочники.СтатьиДвиженияДенежныхСредств.ПустаяСсылка());
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.2
// Заполняет табличную часть РасшифровкаПлатежа для документов ПрочаяВыдачаДенежныхСредств
Процедура ЗаполнитьРасшифровкуПлатежаДляДокументовПрочаяВыдачаДС(Параметры) Экспорт
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, "Документ.ЗаявкаНаРасходованиеДенежныхСредств");
	Пока Выборка.Следующий() Цикл
		НачатьТранзакцию();
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Документ.ЗаявкаНаРасходованиеДенежныхСредств");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			Блокировка.Заблокировать();
			
			Объект = Выборка.Ссылка.ПолучитьОбъект();
			
			Объект.РасшифровкаПлатежа.Очистить();
			НоваяСтрока = Объект.РасшифровкаПлатежа.Добавить();
			НоваяСтрока.СтатьяДвиженияДенежныхСредств = Объект.СтатьяДвиженияДенежныхСредств;
			НоваяСтрока.СтатьяРасходов = Объект.СтатьяАктивовПассивов;
			Если НЕ ЗначениеЗаполнено(НоваяСтрока.СтатьяРасходов) Тогда
				НоваяСтрока.СтатьяРасходов = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ПрочиеАктивы;
			КонецЕсли;
			НоваяСтрока.АналитикаАктивовПассивов = Объект.АналитикаАктивовПассивов;
			НоваяСтрока.Сумма = Объект.СуммаДокумента;
			Объект.СтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.ПустаяСсылка();
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(Объект);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru='Не удалось обработать %Документ% по причине: %Причина%';uk='Не вдалося обробити %Документ% з причини: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%",  ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Предупреждение,
				Выборка.Ссылка.Метаданные(), 
				Выборка.Ссылка, 
				ТекстСообщения);
			ВызватьИсключение;
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, "Документ.ЗаявкаНаРасходованиеДенежныхСредств"); 
	
КонецПроцедуры




Процедура ЗаполнитьСтатьиАктивовПассивовНалоги_КОбработке(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Заявка.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК Заявка
	|ГДЕ
	|	(Заявка.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ИмущественныеНалоги)
	|			ИЛИ Заявка.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.НалогиИВзносыСОплатыТруда))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК Расшифровка
	|		ПО (Расшифровка.Ссылка = ДанныеДокумента.Ссылка)
	|ГДЕ
	|	ДанныеДокумента.ХозяйственнаяОперация = &ПеречислениеНалога
	|	И (Расшифровка.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|		ИЛИ Расшифровка.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка))
	|	И ДанныеДокумента.СтатьяАктивовПассивов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(Расшифровка.НомерСтроки) = 1
	|";
	
	Запрос.УстановитьПараметр("ПеречислениеНалога", Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет);
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.3
// Перезаполняет в документе статьи активов и пассивов при оплате налогов на предопределенную статью "Налоги"
Процедура ЗаполнитьСтатьиАктивовПассивовНалоги(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.ЗаявкаНаРасходованиеДенежныхСредств";
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	Пока Выборка.Следующий() Цикл
		НачатьТранзакцию();
		
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			Блокировка.Заблокировать();
			
			Объект = Выборка.Ссылка.ПолучитьОбъект();
			
			ЗаписатьДанные = Ложь;
			
			Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет
				И Объект.РасшифровкаПлатежа.Количество() = 1 
				И ЗначениеЗаполнено(Объект.СтатьяАктивовПассивов) 
				И Объект.СтатьяАктивовПассивов <> Объект.РасшифровкаПлатежа[0].СтатьяРасходов Тогда 
				
				СтрокаРасшифровки = Объект.РасшифровкаПлатежа[0];
				ЗаполнитьЗначенияСвойств(СтрокаРасшифровки, Объект);
				СтрокаРасшифровки.Сумма = Объект.СуммаДокумента;
				СтрокаРасшифровки.СтатьяРасходов = Объект.СтатьяАктивовПассивов;
				
				ЗаписатьДанные = Истина;
			КонецЕсли;
			
			// Налоги
			Для каждого СтрокаРасшифровка из Объект.РасшифровкаПлатежа Цикл
				
				// ИмущественныеНалоги
				Если СтрокаРасшифровка.СтатьяРасходов = ПланыВидовХарактеристик.СтатьиАктивовПассивов.ИмущественныеНалоги Тогда
					СтрокаРасшифровка.СтатьяРасходов = ПланыВидовХарактеристик.СтатьиАктивовПассивов.Налоги;
					СтрокаРасшифровка.АналитикаАктивовПассивов = Неопределено;
					
					ЗаписатьДанные = Истина;
				КонецЕсли;
				
				// НалогиИВзносыСОплатыТруда
				Если СтрокаРасшифровка.СтатьяРасходов = ПланыВидовХарактеристик.СтатьиАктивовПассивов.НалогиИВзносыСОплатыТруда Тогда
					
					СтрокаРасшифровка.СтатьяРасходов = ПланыВидовХарактеристик.СтатьиАктивовПассивов.Налоги;

					
					ЗаписатьДанные = Истина;
				КонецЕсли;
				
			КонецЦикла;
				
			Если ЗаписатьДанные Тогда
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(Объект);
			Иначе
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			КонецЕсли;
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(Выборка.Ссылка);
			ВызватьИсключение;
		КонецПопытки;
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры


#КонецОбласти

#КонецОбласти

#КонецЕсли
