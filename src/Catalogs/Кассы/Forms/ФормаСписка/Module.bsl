
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	УстановитьОтборыСписка();
	
	Список.Параметры.УстановитьЗначениеПараметра("ОсновнаяКассоваяКнига", НСтр("ru='<Основная кассовая книга организации>';uk='<Основна касова книга організації>'"));
	
	ЗаполнитьСписокВыбораОбособленныхПодразделений();
	
	ДоступноСоздание = ПравоДоступа("Изменение", Метаданные.Справочники.Кассы);
	Элементы.СписокСоздать.Видимость = ДоступноСоздание;
	
	МожноРедактировать = ПравоДоступа("Редактирование", Метаданные.Справочники.Кассы);
	Элементы.СписокИзменитьВыделенные.Видимость = МожноРедактировать;
	Элементы.СписокКонтекстноеМенюИзменитьВыделенные.Видимость = МожноРедактировать;
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма, Элементы.ГруппаГлобальныеКоманды);
	// Конец ИнтеграцияС1СДокументооборотом

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Элементы.ОрганизацияОтбор.ТолькоПросмотр Тогда
		Настройки.Удалить("ОрганизацияОтбор");
	Иначе
		ОрганизацияОтбор = Настройки.Получить("ОрганизацияОтбор");
	КонецЕсли;
	
	Если Элементы.ОбособленноеПодразделениеОтбор.ТолькоПросмотр Тогда
	  	Настройки.Удалить("ОбособленноеПодразделениеОтбор");
	Иначе
	  	ОбособленноеПодразделениеОтбор = Настройки.Получить("ОбособленноеПодразделениеОтбор");
	КонецЕсли;
	ЗаполнитьСписокВыбораОбособленныхПодразделений();
	УстановитьДоступностьОбособленноеПодразделениеОтбор();
	
	УстановитьОтборДинамическогоСписка();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияОтборПриИзменении(Элемент)
	
	ОрганизацияОтборПриИзмененииСервер();
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияОтборПриИзмененииСервер()
	
	ЗаполнитьСписокВыбораОбособленныхПодразделений();
	УстановитьДоступностьОбособленноеПодразделениеОтбор();
	
	УстановитьОтборДинамическогоСписка();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбособленноеПодразделениеОтборПриИзменении(Элемент)
	ОбособленноеПодразделениеОтборПриИзмененииСервер();
КонецПроцедуры

&НаСервере
Процедура ОбособленноеПодразделениеОтборПриИзмененииСервер()
	УстановитьОтборДинамическогоСписка();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовСписка

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбраннаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		СтандартнаяОбработка = Ложь;
		ПоказатьЗначение( ,ВыбраннаяСтрока.Ключ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список);
	
КонецПроцедуры


// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры
//Конец ИнтеграцияС1СДокументооборотом

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокВыбораОбособленныхПодразделений()
	Справочники.ОбособленныеПодразделенияОрганизаций.ОбособленныеПодразделенияОрганизации(ОрганизацияОтбор, Элементы.ОбособленноеПодразделениеОтбор.СписокВыбора);
	Элементы.ОбособленноеПодразделениеОтбор.СписокВыбора.Вставить(0, Справочники.ОбособленныеПодразделенияОрганизаций.ПустаяСсылка(), НСтр("ru='<Основная кассовая книга организации>';uk='<Основна касова книга організації>'"));
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборДинамическогоСписка()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Организация", ОрганизацияОтбор, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(ОрганизацияОтбор));
		
	Если ОбособленноеПодразделениеОтбор = Справочники.ОбособленныеПодразделенияОрганизаций.ПустаяСсылка() Тогда
		ОбособленноеПодразделениеЭлементОтбора = НСтр("ru='<Основная кассовая книга организации>';uk='<Основна касова книга організації>'");
	Иначе
		ОбособленноеПодразделениеЭлементОтбора = ОбособленноеПодразделениеОтбор;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "ОбособленноеПодразделениеОрганизации", ОбособленноеПодразделениеЭлементОтбора, ВидСравненияКомпоновкиДанных.Равно,, ОбособленноеПодразделениеОтбор <> Неопределено);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборыСписка()
	
	Если Параметры.Свойство("Отбор") Тогда
		Если Параметры.Отбор.Свойство("Организация") Тогда
			ОрганизацияОтбор = Параметры.Отбор.Организация;
			Элементы.ОрганизацияОтбор.ТолькоПросмотр = Истина;
		КонецЕсли;
		Если Параметры.Отбор.Свойство("ОбособленноеПодразделение") Тогда
			ОбособленноеПодразделениеОтбор = Параметры.Отбор.ОбособленноеПодразделение;
			Элементы.ОбособленноеПодразделениеОтбор.ТолькоПросмотр = Истина;
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьОбособленноеПодразделениеОтбор()
	
	Если ЗначениеЗаполнено(ОрганизацияОтбор) Тогда
		ИспользоватьУчетДенежныхСредствПоОбособленнымПодразделениямОрганизация = ПолучитьФункциональнуюОпцию("ИспользоватьУчетДенежныхСредствПоОбособленнымПодразделениямОрганизация", Новый Структура("Организация", ОрганизацияОтбор));
		ДоступностьОбособленноеПодразделениеОтбор = ИспользоватьУчетДенежныхСредствПоОбособленнымПодразделениямОрганизация;	
	Иначе
		ДоступностьОбособленноеПодразделениеОтбор = Ложь;
	КонецЕсли; 
	
	Элементы.ОбособленноеПодразделениеОтбор.Доступность = ДоступностьОбособленноеПодразделениеОтбор;

КонецПроцедуры // УстановитьДоступностьОбособленноеПодразделениеОтбор

#КонецОбласти