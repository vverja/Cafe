#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт



КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.ПрочиеДоходыРасходы) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ПрочиеДоходыРасходы.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.ПрочиеДоходыРасходы);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьУчетПрочихДоходовРасходов";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

КонецПроцедуры

// Заполняет таблицу реквизитов, зависимых от хозяйственной операции
//
// Параметры:
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - хозяйственная операция соглашения
//	МассивВсехРеквизитов - Массив - реквизиты, которые не зависят от хозяйственной операции
//	МассивРеквизитовОперации - Массив - реквизиты, которые зависят от хозяйственной операции
//
Процедура ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(ХозяйственнаяОперация, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("Валюта");
	
	МассивРеквизитовОперации = Новый Массив;
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочиеРасходы Тогда
		МассивРеквизитовОперации.Добавить("Валюта");
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПрочиеДоходы Тогда
		МассивРеквизитовОперации.Добавить("Валюта");
	КонецЕсли;
	
КонецПроцедуры

// Заполняет таблицу остатков расходов для подбора
//
// Параметры:
//	ДанныеОтбора			 - Структура - поля, по которым будут отобраны остатки для заполнения документа
//		ДанныеОтбора.Дата		 - Дата - дата среза, на которую будут получены остатки
//		ДанныеОтбора.Валюта		 - СправочникСсылка.Валюта - валюта документа
//		ДанныеОтбора.Ссылка		 - ДокументСсылка.РаспределениеРасходовНаПрочиеАктивы, Неопределено - документ, который необходимо обновить
//		ДанныеОтбора.Организация - СправочникСсылка.Организации, Неопределено - Организация, по которой будет осуществляться отбор остатков
//	Расходы					 - ДанныеФормыКоллекция - таблица расходов, в которую будут помещены данные
//
Процедура ПолучитьОстаткиПрочихРасходов(ДанныеОтбора, Расходы) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Параметры отбора
	Запрос.УстановитьПараметр("Ссылка",			ДанныеОтбора.Ссылка);
	Запрос.УстановитьПараметр("Организация",	ДанныеОтбора.Организация);
	Запрос.УстановитьПараметр("Граница",		Новый Граница(КонецДня(ДанныеОтбора.Дата), ВидГраницы.Включая));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.Подразделение КАК Подразделение,
	|	ВложенныйЗапрос.СтатьяРасходов КАК СтатьяРасходов,
	|	ВложенныйЗапрос.АналитикаРасходов КАК АналитикаРасходов,
	|	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма,
	|	СУММА(ВложенныйЗапрос.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ВложенныйЗапрос.СуммаРегл) КАК СуммаРегл,
	|	СУММА(ВложенныйЗапрос.ПостояннаяРазница) КАК ПостояннаяРазница,
	|	СУММА(ВложенныйЗапрос.ВременнаяРазница) КАК ВременнаяРазница
	|ИЗ
	|	(ВЫБРАТЬ
	|		Регистр.Организация КАК Организация,
	|		Регистр.Подразделение КАК Подразделение,
	|		Регистр.СтатьяРасходов КАК СтатьяРасходов,
	|		Регистр.АналитикаРасходов КАК АналитикаРасходов,
	|		Регистр.СуммаОстаток КАК Сумма,
	|		Регистр.СуммаБезНДСОстаток КАК СуммаБезНДС,
	|		Регистр.СуммаРеглОстаток КАК СуммаРегл,
	|		Регистр.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
	|		Регистр.ВременнаяРазницаОстаток КАК ВременнаяРазница
	|	ИЗ
	|		РегистрНакопления.ПрочиеРасходы.Остатки(&Граница, Организация = &Организация) КАК Регистр
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Регистр.Организация,
	|		Регистр.Подразделение,
	|		Регистр.СтатьяРасходов,
	|		Регистр.АналитикаРасходов,
	|		ВЫБОР
	|			КОГДА Регистр.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Регистр.Сумма
	|			ИНАЧЕ -Регистр.Сумма
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА Регистр.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Регистр.СуммаБезНДС
	|			ИНАЧЕ -Регистр.СуммаБезНДС
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА Регистр.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Регистр.СуммаРегл
	|			ИНАЧЕ -Регистр.СуммаРегл
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА Регистр.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Регистр.ПостояннаяРазница
	|			ИНАЧЕ -Регистр.ПостояннаяРазница
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА Регистр.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Регистр.ВременнаяРазница
	|			ИНАЧЕ -Регистр.ВременнаяРазница
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ПрочиеРасходы КАК Регистр
	|	ГДЕ
	|		Регистр.Регистратор = &Ссылка) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.Подразделение,
	|	ВложенныйЗапрос.СтатьяРасходов,
	|	ВложенныйЗапрос.АналитикаРасходов
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.Сумма) > 0
	|		ИЛИ СУММА(ВложенныйЗапрос.СуммаБезНДС) > 0
	|		ИЛИ СУММА(ВложенныйЗапрос.СуммаРегл) > 0
	|		ИЛИ СУММА(ВложенныйЗапрос.ПостояннаяРазница) > 0
	|		ИЛИ СУММА(ВложенныйЗапрос.ВременнаяРазница) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Подразделение,
	|	СтатьяРасходов,
	|	АналитикаРасходов";
	
	ВыборкаРасходы = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаРасходы.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Расходы.Добавить(), ВыборкаРасходы);
	КонецЦикла;
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиСобытий

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаДвиженияДоходыРасходыПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Документ.Дата                  КАК Дата,
	|	Документ.Валюта                КАК Валюта,
	|	Документ.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Документ.Организация           КАК Организация
	|ИЗ
	|	Документ.ПрочиеДоходыРасходы КАК Документ
	|ГДЕ
	|	Документ.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",                          Реквизиты.Дата);
	Запрос.УстановитьПараметр("Валюта",                          Реквизиты.Валюта);
	Запрос.УстановитьПараметр("Организация",                     Реквизиты.Организация);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",  Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",      Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",           Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("НалоговоеНазначениеОрганизации",  Справочники.Организации.НалоговоеНазначениеНДС(Реквизиты.Организация, Реквизиты.Дата));
	
КонецПроцедуры

Процедура УстановитьПараметрКоэффициентПересчетаВВалютуУпр(Запрос)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуУпр") Тогда
		Возврат;
	КонецЕсли;
	
	КоэффициентПересчетаВВалютуУпр = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(
	                                   Запрос.Параметры.Валюта, 
	                                   Запрос.Параметры.ВалютаУправленческогоУчета, 
	                                   Запрос.Параметры.Период);
	
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр", КоэффициентПересчетаВВалютуУпр);
	
КонецПроцедуры

Функция ТекстЗапросаВтДанныеРасходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтДанныеРасходы";
	
	УстановитьПараметрКоэффициентПересчетаВВалютуУпр(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Документ.Организация                                        КАК Организация,
	|	ВЫБОР КОГДА РАЗНОСТЬДАТ(ДанныеДокументаРасходы.ДатаОтражения, Документ.Дата, ДЕНЬ) = 0
	|				ИЛИ ДанныеДокументаРасходы.ДатаОтражения = ДАТАВРЕМЯ(1, 1, 1) ТОГДА
	|		Документ.Дата
	|	ИНАЧЕ
	|		ДанныеДокументаРасходы.ДатаОтражения
	|	КОНЕЦ                                                       КАК Дата,
	|	ДанныеДокументаРасходы.НомерСтроки                          КАК НомерСтроки,
	|	ДанныеДокументаРасходы.Подразделение                        КАК Подразделение,
	|	ДанныеДокументаРасходы.СтатьяРасходов                       КАК СтатьяРасходов,
	|	ДанныеДокументаРасходы.АналитикаРасходов                    КАК АналитикаРасходов,
	|	ДанныеДокументаРасходы.СтатьяАктивовПассивов                КАК СтатьяАктивовПассивов,
	|	ДанныеДокументаРасходы.АналитикаАктивовПассивов             КАК АналитикаАктивовПассивов,
	|	ДанныеДокументаРасходы.Ссылка                               КАК ДокументПоступленияРасходов,
	|	СтатьиРасходов.ВариантРаспределенияРасходов                 КАК ВариантРаспределенияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеПрочихРасходов),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихРасходов))
	|			ТОГДА ДанныеДокументаРасходы.Сумма
	|		ИНАЧЕ ДанныеДокументаРасходы.Сумма * &КоэффициентПересчетаВВалютуУпр
	|	КОНЕЦ                                      КАК Сумма,
	|	ВЫБОР
	|		КОГДА &ХозяйственнаяОперация В (
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеПрочихРасходов),
	|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихРасходов))
	|			ТОГДА ДанныеДокументаРасходы.СуммаБезНДС
	|		ИНАЧЕ ДанныеДокументаРасходы.Сумма * &КоэффициентПересчетаВВалютуУпр
	|	КОНЕЦ                                      КАК СуммаБезНДС,
	|	ДанныеДокументаРасходы.СуммаРегл           КАК СуммаРегл,
    |	ДанныеДокументаРасходы.СуммаРегл           КАК СуммаРеглБезНДС,
    |	ДанныеДокументаРасходы.НДСРегл             КАК НДСРегл,
	|	&НалоговоеНазначениеОрганизации            КАК НалоговоеНазначение,
	|	ДанныеДокументаРасходы.Сумма               КАК СуммаВВалюте
	|ПОМЕСТИТЬ ВтДанныеРасходы
	|ИЗ
	|	Документ.ПрочиеДоходыРасходы.ПрочиеРасходы КАК ДанныеДокументаРасходы
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПрочиеДоходыРасходы КАК Документ
	|	ПО
	|		ДанныеДокументаРасходы.Ссылка = Документ.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		ДанныеДокументаРасходы.СтатьяРасходов = СтатьиРасходов.Ссылка
	|
	|ГДЕ
	|	ДанныеДокументаРасходы.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеРасходы),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеПрочихРасходов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихРасходов))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтДанныеДоходы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтДанныеДоходы";
	
	УстановитьПараметрКоэффициентПересчетаВВалютуУпр(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Документ.Организация                           КАК Организация,
	|	ВЫБОР КОГДА РАЗНОСТЬДАТ(ДанныеДокументаДоходы.ДатаОтражения, Документ.Дата, ДЕНЬ) = 0
	|				ИЛИ ДанныеДокументаДоходы.ДатаОтражения = ДАТАВРЕМЯ(1, 1, 1) ТОГДА
	|		Документ.Дата
	|	ИНАЧЕ
	|		ДанныеДокументаДоходы.ДатаОтражения
	|	КОНЕЦ                                          КАК Дата,
	|	ДанныеДокументаДоходы.НомерСтроки              КАК НомерСтроки,
	|	ДанныеДокументаДоходы.Подразделение            КАК Подразделение,
	|	ДанныеДокументаДоходы.СтатьяДоходов            КАК СтатьяДоходов,
	|	ДанныеДокументаДоходы.АналитикаДоходов         КАК АналитикаДоходов,
	|	ДанныеДокументаДоходы.СтатьяАктивовПассивов    КАК СтатьяАктивовПассивов,
	|	ДанныеДокументаДоходы.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
	|	ДанныеДокументаДоходы.Сумма*&КоэффициентПересчетаВВалютуУпр КАК Сумма,
	|	ДанныеДокументаДоходы.СуммаРегл                КАК СуммаРегл,
	|	ДанныеДокументаДоходы.Сумма                    КАК СуммаВВалюте
	|ПОМЕСТИТЬ ВтДанныеДоходы
	|ИЗ
	|	Документ.ПрочиеДоходыРасходы.ПрочиеДоходы КАК ДанныеДокументаДоходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрочиеДоходыРасходы КАК Документ
	|		ПО ДанныеДокументаДоходы.Ссылка = Документ.Ссылка
	|ГДЕ
	|	ДанныеДокументаДоходы.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеДоходы),
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихДоходов))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтДанныеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанныеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВтДанныеРасходы.НомерСтроки КАК НомерСтроки,
	|	ВтДанныеРасходы.Дата КАК Период,
	|	ВтДанныеРасходы.Организация,
	|	ВтДанныеРасходы.Подразделение,
	|	ВтДанныеРасходы.СтатьяРасходов,
	|	ВтДанныеРасходы.АналитикаРасходов,
	|	ВтДанныеРасходы.Сумма
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	ВтДанныеРасходы.ВариантРаспределенияРасходов <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеРасходы)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВтДанныеРасходы.НомерСтроки КАК НомерСтроки,
	|	ВтДанныеРасходы.Дата КАК Период,
	|	ВтДанныеРасходы.Организация,
	|	ВтДанныеРасходы.Подразделение,
	|	ВтДанныеРасходы.СтатьяРасходов,
	|	ВтДанныеРасходы.АналитикаРасходов,
	|	ВтДанныеРасходы.Сумма КАК Сумма
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	ВтДанныеРасходы.ВариантРаспределенияРасходов <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеПрочихРасходов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВтДанныеРасходы.НомерСтроки КАК НомерСтроки,
	|	ВтДанныеРасходы.Дата КАК Период,
	|	ВтДанныеРасходы.Организация,
	|	ВтДанныеРасходы.Подразделение,
	|	ВтДанныеРасходы.СтатьяРасходов,
	|	ВтДанныеРасходы.АналитикаРасходов,
	|	- ВтДанныеРасходы.Сумма КАК Сумма
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	ВтДанныеРасходы.ВариантРаспределенияРасходов <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихРасходов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтДанныеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанныеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ВтДанныеРасходы.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВтДанныеРасходы.Дата      КАК Период,
	|	ВтДанныеРасходы.Организация,
	|	ВтДанныеРасходы.Подразделение,
	|	ВтДанныеРасходы.СтатьяРасходов,
	|	ВтДанныеРасходы.АналитикаРасходов,
	|	ВтДанныеРасходы.ДокументПоступленияРасходов,
	|	ВтДанныеРасходы.АналитикаУчетаПартий,
	|	ВтДанныеРасходы.Сумма     КАК Стоимость,
	|	ВтДанныеРасходы.Сумма     КАК СтоимостьБезНДС,
    |	ВтДанныеРасходы.СуммаРеглБезНДС КАК СтоимостьРегл,
	|	
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
    |	ВтДанныеРасходы.НДСРегл КАК НДСРегл
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	ВтДанныеРасходы.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеРасходы)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	ВтДанныеРасходы.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВтДанныеРасходы.Дата      КАК Период,
	|	ВтДанныеРасходы.Организация,
	|	ВтДанныеРасходы.Подразделение,
	|	ВтДанныеРасходы.СтатьяРасходов,
	|	ВтДанныеРасходы.АналитикаРасходов,
	|	ВтДанныеРасходы.ДокументПоступленияРасходов,
	|	ВтДанныеРасходы.АналитикаУчетаПартий,
	|	ВтДанныеРасходы.Сумма     КАК Стоимость,
	|	ВтДанныеРасходы.Сумма     КАК СтоимостьБезНДС,
    |	ВтДанныеРасходы.СуммаРеглБезНДС КАК СтоимостьРегл,
	|	
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
    |	ВтДанныеРасходы.НДСРегл КАК НДСРегл
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	ВтДанныеРасходы.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеПрочихРасходов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	ВтДанныеРасходы.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВтДанныеРасходы.Дата      КАК Период,
	|	ВтДанныеРасходы.Организация,
	|	ВтДанныеРасходы.Подразделение,
	|	ВтДанныеРасходы.СтатьяРасходов,
	|	ВтДанныеРасходы.АналитикаРасходов,
	|	ВтДанныеРасходы.ДокументПоступленияРасходов,
	|	ВтДанныеРасходы.АналитикаУчетаПартий,
	|	-ВтДанныеРасходы.Сумма     КАК Стоимость,
	|	-ВтДанныеРасходы.Сумма     КАК СтоимостьБезНДС,
    |	-ВтДанныеРасходы.СуммаРеглБезНДС КАК СтоимостьРегл,
	|
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|
    |	-ВтДанныеРасходы.НДСРегл КАК НДСРегл
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	ВтДанныеРасходы.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихРасходов)
	|	
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеДоходы";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтДанныеДоходы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанныеДоходы(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВтДанныеДоходы.НомерСтроки             КАК НомерСтроки,
	|	ВтДанныеДоходы.Дата                    КАК Период,
	|	ВтДанныеДоходы.Организация             КАК Организация,
	|	ВтДанныеДоходы.Подразделение           КАК Подразделение,
	|	ВтДанныеДоходы.СтатьяДоходов           КАК СтатьяДоходов,
	|	ВтДанныеДоходы.АналитикаДоходов        КАК АналитикаДоходов,
	|	ВтДанныеДоходы.Сумма                   КАК Сумма
	|ИЗ
	|	ВтДанныеДоходы КАК ВтДанныеДоходы
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеДоходы)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВтДанныеДоходы.НомерСтроки             КАК НомерСтроки,
	|	ВтДанныеДоходы.Дата                    КАК Период,
	|	ВтДанныеДоходы.Организация             КАК Организация,
	|	ВтДанныеДоходы.Подразделение           КАК Подразделение,
	|	ВтДанныеДоходы.СтатьяДоходов           КАК СтатьяДоходов,
	|	ВтДанныеДоходы.АналитикаДоходов        КАК АналитикаДоходов,
	|	-ВтДанныеДоходы.Сумма                  КАК Сумма
	|ИЗ
	|	ВтДанныеДоходы КАК ВтДанныеДоходы
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихДоходов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтДанныеДоходы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанныеДоходы(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтДанныеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанныеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВтДанныеДоходы.Дата КАК Период,
	|	ВтДанныеДоходы.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВтДанныеДоходы.Организация КАК Организация,
	|	ВтДанныеДоходы.СтатьяАктивовПассивов КАК Статья,
	|	ВтДанныеДоходы.АналитикаАктивовПассивов КАК Аналитика,
	|	ВтДанныеДоходы.Сумма КАК Сумма
	|ИЗ
	|	ВтДанныеДоходы КАК ВтДанныеДоходы
	|	
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеДоходы)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтДанныеДоходы.Дата КАК Период,
	|	ВтДанныеДоходы.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВтДанныеДоходы.Организация КАК Организация,
	|	ВтДанныеДоходы.СтатьяАктивовПассивов КАК Статья,
	|	ВтДанныеДоходы.АналитикаАктивовПассивов КАК Аналитика,
	|	-ВтДанныеДоходы.Сумма КАК Сумма
	|ИЗ
	|	ВтДанныеДоходы КАК ВтДанныеДоходы
	|	
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихДоходов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтДанныеРасходы.Дата КАК Период,
	|	ВтДанныеРасходы.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВтДанныеРасходы.Организация КАК Организация,
	|	ВтДанныеРасходы.СтатьяАктивовПассивов КАК Статья,
	|	ВтДанныеРасходы.АналитикаАктивовПассивов КАК Аналитика,
	|	ВтДанныеРасходы.Сумма КАК Сумма
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеРасходы)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтДанныеРасходы.Дата КАК Период,
	|	ВтДанныеРасходы.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ВтДанныеРасходы.Организация КАК Организация,
	|	ВтДанныеРасходы.СтатьяАктивовПассивов КАК Статья,
	|	ВтДанныеРасходы.АналитикаАктивовПассивов КАК Аналитика,
	|	ВтДанныеРасходы.Сумма КАК Сумма
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеПрочихРасходов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтДанныеРасходы.Дата КАК Период,
	|	ВтДанныеРасходы.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ВтДанныеРасходы.Организация КАК Организация,
	|	ВтДанныеРасходы.СтатьяАктивовПассивов КАК Статья,
	|	ВтДанныеРасходы.АналитикаАктивовПассивов КАК Аналитика,
	|	-ВтДанныеРасходы.Сумма КАК Сумма
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихРасходов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДвиженияДоходыРасходыПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "ДвиженияДоходыРасходыПрочиеАктивыПассивы";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтДанныеДоходы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанныеДоходы(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтДанныеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанныеРасходы(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВтДанныеДоходы.Дата КАК Период,
	|	ВтДанныеДоходы.НомерСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеДоходыАктивыПассивы) КАК ХозяйственнаяОперация,
	|	ВтДанныеДоходы.Организация КАК Организация,
	|	ВтДанныеДоходы.Подразделение КАК Подразделение,
	|
	|	ВтДанныеДоходы.СтатьяДоходов КАК Статья,
	|	ВтДанныеДоходы.АналитикаДоходов КАК АналитикаДоходов,
	|	NULL КАК АналитикаРасходов,
	|
	|	ВтДанныеДоходы.СтатьяАктивовПассивов КАК КорСтатья,
	|	ВтДанныеДоходы.АналитикаАктивовПассивов КАК КорАналитикаАктивовПассивов,
	|
	|	ВтДанныеДоходы.Сумма КАК Сумма,
	|	ВтДанныеДоходы.СуммаРегл КАК СуммаРегл,
	|
	|	&Валюта КАК Валюта,
	|	ВтДанныеДоходы.СуммаВВалюте КАК СуммаВВалюте
	|
	|ИЗ
	|	ВтДанныеДоходы КАК ВтДанныеДоходы
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеДоходы)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтДанныеДоходы.Дата КАК Период,
	|	ВтДанныеДоходы.НомерСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихДоходов) КАК ХозяйственнаяОперация,
	|	ВтДанныеДоходы.Организация КАК Организация,
	|	ВтДанныеДоходы.Подразделение КАК Подразделение,
	|
	|	ВтДанныеДоходы.СтатьяДоходов КАК Статья,
	|	ВтДанныеДоходы.АналитикаДоходов КАК АналитикаДоходов,
	|	NULL КАК АналитикаРасходов,
	|
	|	ВтДанныеДоходы.СтатьяАктивовПассивов КАК КорСтатья,
	|	ВтДанныеДоходы.АналитикаАктивовПассивов КАК КорАналитикаАктивовПассивов,
	|
	|	-ВтДанныеДоходы.Сумма КАК Сумма,
	|	-ВтДанныеДоходы.СуммаРегл КАК СуммаРегл,
	|
	|	&Валюта КАК Валюта,
	|	-ВтДанныеДоходы.СуммаВВалюте КАК СуммаВВалюте
	|
	|ИЗ
	|	ВтДанныеДоходы КАК ВтДанныеДоходы
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихДоходов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтДанныеРасходы.Дата КАК Период,
	|	ВтДанныеРасходы.НомерСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеРасходыАктивыПассивы) КАК ХозяйственнаяОперация,
	|	ВтДанныеРасходы.Организация КАК Организация,
	|	ВтДанныеРасходы.Подразделение КАК Подразделение,
	|
	|	ВтДанныеРасходы.СтатьяРасходов КАК Статья,
	|	NULL КАК АналитикаДоходов,
	|	ВтДанныеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|
	|	ВтДанныеРасходы.СтатьяАктивовПассивов КАК КорСтатья,
	|	ВтДанныеРасходы.АналитикаАктивовПассивов КАК КорАналитикаАктивовПассивов,
	|
	|	ВтДанныеРасходы.Сумма КАК Сумма,
	|	ВтДанныеРасходы.СуммаРегл КАК СуммаРегл,
	|
	|	&Валюта КАК Валюта,
	|	ВтДанныеРасходы.СуммаВВалюте КАК СуммаВВалюте
	|
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочиеРасходы),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеПрочихРасходов))
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВтДанныеРасходы.Дата КАК Период,
	|	ВтДанныеРасходы.НомерСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихРасходов) КАК ХозяйственнаяОперация,
	|	ВтДанныеРасходы.Организация КАК Организация,
	|	ВтДанныеРасходы.Подразделение КАК Подразделение,
	|
	|	ВтДанныеРасходы.СтатьяРасходов КАК Статья,
	|	NULL КАК АналитикаДоходов,
	|	ВтДанныеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|
	|	ВтДанныеРасходы.СтатьяАктивовПассивов КАК КорСтатья,
	|	ВтДанныеРасходы.АналитикаАктивовПассивов КАК КорАналитикаАктивовПассивов,
	|
	|	-ВтДанныеРасходы.Сумма КАК Сумма,
	|	-ВтДанныеРасходы.СуммаРегл КАК СуммаРегл,
	|
	|	&Валюта КАК Валюта,
	|	-ВтДанныеРасходы.СуммаВВалюте КАК СуммаВВалюте
	|
	|ИЗ
	|	ВтДанныеРасходы КАК ВтДанныеРасходы
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторнированиеПрочихРасходов))
	|	
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции


#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	Возврат;
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы


Процедура ЗаполнитьДатуОтражения_ОтметитьКОбработке(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Операция.Ссылка
	|ПОМЕСТИТЬ ДокументыКОбработке
	|ИЗ
	|	Документ.ПрочиеДоходыРасходы КАК Операция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрочиеДоходыРасходы.ПрочиеРасходы КАК Расходы
	|		ПО Операция.Ссылка = Расходы.Ссылка
	|			И (Расходы.ДатаОтражения = ДАТАВРЕМЯ(1, 1, 1))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Операция.Ссылка
	|ИЗ
	|	Документ.ПрочиеДоходыРасходы КАК Операция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрочиеДоходыРасходы.ПрочиеДоходы КАК Доходы
	|		ПО Операция.Ссылка = Доходы.Ссылка
	|			И (Доходы.ДатаОтражения = ДАТАВРЕМЯ(1, 1, 1))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыКОбработке.Ссылка КАК Ссылка
	|ИЗ
	|	ДокументыКОбработке КАК ДокументыКОбработке";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ЗаполнитьДатуОтражения(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.ПрочиеДоходыРасходы";
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта, МенеджерВТ);
	
	Если Не Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	#Область ТекстЗапроса
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДокументыКОбработке.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ДокументыКОбработке
	|ИЗ
	|	ВТДляОбработки КАК ДокументыКОбработке
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыКОбработке.Ссылка КАК Ссылка
	|ИЗ
	|	ДокументыКОбработке КАК ДокументыКОбработке
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка КАК Ссылка,
	|	ТабличнаяЧасть.НомерСтроки - 1 КАК ИндексСтроки,
	|	
	|	
	|	ВЫБОР КОГДА ТабличнаяЧасть.ДатаОтражения = ДАТАВРЕМЯ(1, 1, 1)
	|		ТОГДА Операция.Дата
	|		ИНАЧЕ ТабличнаяЧасть.ДатаОтражения
	|	КОНЕЦ КАК ДатаОтражения
	|ИЗ
	|	Документ.ПрочиеДоходыРасходы КАК Операция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыКОбработке КАК ДокументыКОбработке
	|		ПО Операция.Ссылка = ДокументыКОбработке.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрочиеДоходыРасходы.ПрочиеДоходы КАК ТабличнаяЧасть
	|		ПО Операция.Ссылка = ТабличнаяЧасть.Ссылка
	|	
	|	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка КАК Ссылка,
	|	ТабличнаяЧасть.НомерСтроки - 1 КАК ИндексСтроки,
	|	
	|	
	|	ВЫБОР КОГДА ТабличнаяЧасть.ДатаОтражения = ДАТАВРЕМЯ(1, 1, 1)
	|		ТОГДА Операция.Дата
	|		ИНАЧЕ ТабличнаяЧасть.ДатаОтражения
	|	КОНЕЦ КАК ДатаОтражения
	|ИЗ
	|	Документ.ПрочиеДоходыРасходы КАК Операция
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыКОбработке КАК ДокументыКОбработке
	|		ПО Операция.Ссылка = ДокументыКОбработке.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрочиеДоходыРасходы.ПрочиеРасходы КАК ТабличнаяЧасть
	|		ПО Операция.Ссылка = ТабличнаяЧасть.Ссылка
	|	
	|";
	#КонецОбласти
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТДляОбработки", Результат.ИмяВременнойТаблицы);
	Пакет = Запрос.ВыполнитьПакет();
	
	Если Пакет[1].Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	#Область БлокировкаДанных
	Попытка
		
		Блокировка = Новый БлокировкаДанных;
		
		ЭлементБлокировки = Блокировка.Добавить("Документ.ПрочиеДоходыРасходы");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = Пакет[1];
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Ссылка", "Ссылка");
		
		
		Блокировка.Заблокировать();
		
	Исключение
		ОтменитьТранзакцию();
		Возврат;
		
	КонецПопытки;
	#КонецОбласти
	
	Выборка = Пакет[1].Выбрать();
	ВыборкаДоходов = Пакет[2].Выбрать();
	ВыборкаРасходов = Пакет[3].Выбрать();
	ПараметрыОбходаВыборки = Новый Структура("Ссылка");
	
	ОбработаноОбъектов = 0;
	ПроблемныхОбъектов = 0;
	
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(ПараметрыОбходаВыборки, Выборка);
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		ВыборкаДоходов.Сбросить();
		Пока ВыборкаДоходов.НайтиСледующий(ПараметрыОбходаВыборки) Цикл
			СписокСвойств = "ДатаОтражения";
			ЗаполнитьЗначенияСвойств(ДокументОбъект.ПрочиеДоходы[ВыборкаДоходов.ИндексСтроки], ВыборкаДоходов, СписокСвойств);
		КонецЦикла;
		ВыборкаРасходов.Сбросить();
		Пока ВыборкаРасходов.НайтиСледующий(ПараметрыОбходаВыборки) Цикл
			СписокСвойств = "ДатаОтражения";
			ЗаполнитьЗначенияСвойств(ДокументОбъект.ПрочиеРасходы[ВыборкаРасходов.ИндексСтроки], ВыборкаРасходов, СписокСвойств);
		КонецЦикла;
		
		
		ОбработаноОбъектов = ОбработаноОбъектов + 1;
		
		Попытка
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект, Истина);
		Исключение
			
			ОбработаноОбъектов = ОбработаноОбъектов - 1;
			ПроблемныхОбъектов = ПроблемныхОбъектов + 1;
			
			ТекстСообщения = НСтр("ru='Не удалось обработать документ %1 по причине: %2';uk='Не вдалося обробити документ %1 з причини: %2'");
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ТекстСообщения, Выборка.Ссылка, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				Выборка.Ссылка.Метаданные(),
				Выборка.Ссылка,
				ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Если ОбработаноОбъектов > 0 Тогда
		
		ЗафиксироватьТранзакцию();
		
	ИначеЕсли ПроблемныхОбъектов > 0 Тогда
		
		ОтменитьТранзакцию();
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не выполнена обработка заполнения в некоторых документах ""Прочие доходы и расходы"". Документов пропущено: %1';uk='Не виконана обробка заповнення в деяких документах ""Інші доходи і витрати"". Документів пропущено: %1'"), 
			ПроблемныхОбъектов);
		ВызватьИсключение ТекстСообщения;
		
	КонецЕсли;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее


#КонецОбласти

#КонецОбласти

#КонецЕсли
