
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ВалютаДокумента = Параметры.ВалютаДокумента;
	ЦенаВключетНДСДокумента = Параметры.ЦенаВключаетНДС;
	ПолучатьСерииНоменклатуры = Параметры.ПолучатьСерииНоменклатуры;
	ЗаявкаНаВозвратТоваровОтКлиента = Параметры.ЗаявкаНаВозвратТоваровОтКлиента;
	
	ЗаполнитьТаблицуТоваров(Параметры.ЗаявкаНаВозвратТоваровОтКлиента, Параметры.ВозвратТоваровОтКлиента , ВалютаДокумента);
	
	ПодборТоваровКлиентСервер.СформироватьЗаголовокФормыПодбора(Заголовок, ЗаявкаНаВозвратТоваровОтКлиента);
	НоменклатураСервер.УстановитьУсловноеОформлениеЕдиницИзмерения(ЭтаФорма, "ТаблицаТоваровНоменклатураЕдиницаИзмерения", "ТаблицаТоваров.Упаковка");
	
	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Склад",Параметры.Склад));

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ПринудительноЗакрытьФорму Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ПередЗакрытиемВопросЗавершение", ЭтотОбъект),
			НСтр("ru='Данные были изменены. Перенести изменения в документ?';uk='Дані були змінені. Перенести зміни в документ?'"),
			РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемВопросЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ПринудительноЗакрытьФорму = Истина;
		ПеренестиТоварыВДокумент();
		
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		
		ПринудительноЗакрытьФорму = Истина;
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокумент()

	ПринудительноЗакрытьФорму = Истина;
	ПеренестиТоварыВДокумент();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьТоварыВыполнить()
	
	ВыбратьВсеТоварыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьТоварыВыполнить()
	
	ВыбратьВсеТоварыНаСервере(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаСервере
Процедура ВыбратьВсеТоварыНаСервере(ЗначениеВыбора = Истина)
	
	Для Каждого СтрокаТаблицы Из ТаблицаТоваров.НайтиСтроки(Новый Структура("СтрокаВыбрана", Не ЗначениеВыбора)) Цикл
		
		СтрокаТаблицы.СтрокаВыбрана = ЗначениеВыбора;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьТекстЗапросаПоСериямДокументаЗаявки(ТекстЗапроса)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ВЫРАЗИТЬ(Товары.Характеристика КАК Справочник.ХарактеристикиНоменклатуры) КАК Характеристика,
	|	ВЫРАЗИТЬ(Товары.Количество КАК ЧИСЛО) КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&ТаблицаТовары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура КАК Номенклатура,
	|	Серии.Характеристика КАК Характеристика,
	|	Серии.Серия,
	|	Серии.Количество
	|ПОМЕСТИТЬ СерииДокумента
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента.ВозвращаемыеСерии КАК Серии
	|ГДЕ
	|	Серии.Ссылка = &Документ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ СгруппированныеТовары
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СерииДокумента.Номенклатура КАК Номенклатура,
	|	СерииДокумента.Характеристика КАК Характеристика,
	|	СерииДокумента.Серия,
	|	СерииДокумента.Количество,
	|	СгруппированныеТовары.Количество КАК КоличествоВыбрано
	|ИЗ
	|	СерииДокумента КАК СерииДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СгруппированныеТовары КАК СгруппированныеТовары
	|		ПО (СгруппированныеТовары.Номенклатура = СерииДокумента.Номенклатура)
	|			И (СгруппированныеТовары.Характеристика = СерииДокумента.Характеристика)
	|ИТОГИ
	|	МАКСИМУМ(КоличествоВыбрано)
	|ПО
	|	Номенклатура,
	|	Характеристика";
	
КонецПроцедуры

&НаСервере
Функция ПоместитьТоварыВХранилище()
	
	// Формирование таблицы для возврата в документ.
	ТаблицаВыбранныхТоваров = ТаблицаТоваров.Выгрузить(Новый Структура("СтрокаВыбрана", Истина));
	
	// Формирование таблицы серии номеров для возврата в документ.
	Серии = Новый ТаблицаЗначений;
	Серии.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Серии.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	Серии.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	Серии.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,3)));
	
	Если ПолучатьСерииНоменклатуры Тогда
		
		Запрос = Новый Запрос;
		СформироватьТекстЗапросаПоСериямДокументаЗаявки(Запрос.Текст);
		Запрос.УстановитьПараметр("ТаблицаТовары", ТаблицаВыбранныхТоваров);
		Запрос.УстановитьПараметр("Документ", ЗаявкаНаВозвратТоваровОтКлиента);
		
		ВыборкаПоНоменклатуре = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоНоменклатуре.Следующий() Цикл
			
			ВыборкаПоХарактеристикам = ВыборкаПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоХарактеристикам.Следующий() Цикл
				
				КоличествоКРаспределению = ВыборкаПоХарактеристикам.КоличествоВыбрано;
				Выборка = ВыборкаПоХарактеристикам.Выбрать();
				Пока Выборка.Следующий() Цикл
					
					СтрокаСерии = Серии.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаСерии, Выборка);
					КоличествоКРаспределению = КоличествоКРаспределению - СтрокаСерии.Количество;
					Если КоличествоКРаспределению < 0 Тогда
						СтрокаСерии.Количество = СтрокаСерии.Количество + КоличествоКРаспределению;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
				Если КоличествоКРаспределению < 0 Тогда
					Продолжить;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	АдресТоваровВХранилище =  ПоместитьВоВременноеХранилище(
		Новый Структура("Товары, Серии", ТаблицаВыбранныхТоваров, Серии));
	
	Возврат АдресТоваровВХранилище;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуТоваров(ЗаявкаНаВозвратТоваровОтКлиента, ВозвратТоваровОтКлиента, ВалютаДокумента)

	Запрос = Новый Запрос(
	"
	|ВЫБРАТЬ
	|	ЗаявкаНаВозврат.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ЗаявкаНаВозврат.Валюта          КАК Валюта
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозврат
	|ГДЕ
	|	ЗаявкаНаВозврат.Ссылка = &ДокументОснование
	|");
	Запрос.УстановитьПараметр("ДокументОснование", ЗаявкаНаВозвратТоваровОтКлиента);
	РеквизитыЗаявки = Запрос.Выполнить().Выбрать();
	РеквизитыЗаявки.Следующий();
	
	ПересчитатьВВалютуДокумента = РеквизитыЗаявки.Валюта <> ВалютаДокумента;
	
	СтруктураДанных = Документы.ВозвратТоваровОтКлиента.ПолучитьРезультатЗапросаПоОстаткамЗаявкиНаВозврат(
		ЗаявкаНаВозвратТоваровОтКлиента,
		ВозвратТоваровОтКлиента);
	
	ВыборкаТовары = СтруктураДанных.Выбрать();
	
	ПересчитатьСтроки = (РеквизитыЗаявки.ЦенаВключаетНДС <> ЦенаВключетНДСДокумента);
	
	Пока ВыборкаТовары.Следующий() Цикл
		
		СтрокаТаб = ТаблицаТоваров.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаб,ВыборкаТовары,
			"КодСтроки, ИндексНабора, НоменклатураНабора, ХарактеристикаНабора, Номенклатура, Характеристика, Серия,
			|НоменклатураОприходование, ХарактеристикаОприходование,
			|Порча, Упаковка, Количество, Цена, СтавкаНДС,
			|СтавкаНДС, ДатаПоступления, ДокументРеализации");
		
		СтрокаТаб.КоличествоУпаковок = ВыборкаТовары.Количество / ВыборкаТовары.Коэффициент;
		
		Если ВыборкаТовары.КоличествоВЗаявке = СтрокаТаб.Количество Тогда
			СтрокаТаб.Сумма = ВыборкаТовары.Сумма;
		Иначе
			СтрокаТаб.Сумма = СтрокаТаб.КоличествоУпаковок * СтрокаТаб.Цена;
		КонецЕсли; 
		
		СтрокаТаб.СуммаНДС = Ценообразование.РассчитатьСуммуНДС(СтрокаТаб.Сумма, СтрокаТаб.СтавкаНДС, ЦенаВключетНДСДокумента);
		СтрокаТаб.СуммаСНДС = СтрокаТаб.Сумма + ?(ЦенаВключетНДСДокумента, 0, СтрокаТаб.СуммаНДС);
		
		Если ПересчитатьСтроки Тогда
			Ценообразование.ПересчитатьСуммыВСтрокеПоСуммеСНДС(СтрокаТаб, ЦенаВключетНДСДокумента, Ложь, Ложь, Истина);
		КонецЕсли;
		
		СтрокаТаб.ПрисутствуетВДокументе = Параметры.МассивКодовСтрок.Найти(СтрокаТаб.КодСтроки) <> Неопределено;
		СтрокаТаб.СтрокаВыбрана          = Не СтрокаТаб.ПрисутствуетВДокументе;
		
	КонецЦикла;
	
	Если ПересчитатьВВалютуДокумента Тогда
		
		СтруктураКурсовСтаройВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(РеквизитыЗаявки.Валюта, ТекущаяДата());
		СтруктураКурсовНовойВалюты  = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаДокумента, ТекущаяДата());
		
		Ценообразование.ПересчитатьСуммыТабличнойЧастиВВалюту(
			ТаблицаТоваров,
			ЦенаВключетНДСДокумента,
			РеквизитыЗаявки.Валюта,
			ВалютаДокумента,
			СтруктураКурсовСтаройВалюты,
			СтруктураКурсовНовойВалюты,
			Истина,
			Истина);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиТоварыВДокумент()
	
	АдресТоваровВХранилище = ПоместитьТоварыВХранилище();
	
	ОповеститьОВыборе(Новый Структура("АдресТоваровВХранилище", АдресТоваровВХранилище));
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
