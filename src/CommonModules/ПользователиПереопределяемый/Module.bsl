////////////////////////////////////////////////////////////////////////////////
// Подсистема "Пользователи".
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Переопределяет стандартное поведение подсистемы Пользователи.
//
// Параметры:
//  Настройки - Структура - со свойствами:
//   * ОбщиеНастройкиВхода - Булево - начальное значение Истина, если установить Ложь,
//          тогда в панели администрирования "Настройки прав и пользователей" возможность
//          открытия формы настроек входа будет скрыта, как и настройка ограничения срока действия
//          в карточках пользователя и внешнего пользователя. Для базовых версий конфигурации всегда Ложь.
//
//   * РедактированиеРолей - Булево - начальное значение Истина, если установить Ложь, тогда
//          интерфейс изменения ролей в карточках пользователя, внешнего пользователя и
//          группы внешних пользователей будет скрыт (в том числе для администратора).
//
Процедура ПриОпределенииНастроек(Настройки) Экспорт
	
КонецПроцедуры

// Позволяет указать роли специального назначения. Все остальные роли не требуется указывать -
// это роли которые можно назначать любым пользователям, кроме внешних пользователей.
//
// Параметры:
//  НазначениеРолей - Структура - со свойствами:
//   * ТолькоДляАдминистраторовСистемы - Массив - имена ролей, которые при выключенном разделении
//     можно назначать любым пользователям, кроме внешних пользователей, а в разделенном режиме
//     можно назначать только администраторам сервиса, например:
//       Администрирование, ОбновлениеКонфигурацииБазыДанных, АдминистраторСистемы,
//     а также все роли с правами:
//       Администрирование,
//       Администрирование расширений конфигурации,
//       Обновление конфигурации базы данных.
//     Такие роли, как правило, существуют только в БСП и их не требуется добавлять в прикладных решениях.
//
//   * ТолькоДляПользователейСистемы - Массив - имена ролей, которые при выключенном разделении
//     можно назначать любым пользователям, кроме внешних пользователей, а в разделенном режиме
//     можно назначать только неразделенным пользователям (сотрудникам технической поддержки сервиса и
//     администраторам сервиса), например:
//       ДобавлениеИзменениеАдресныхСведений, ДобавлениеИзменениеБанков,
//     а также все роли с правами изменения неразделенных данных и следующими правами:
//       Толстый клиент,
//       Внешнее соединение,
//       Automation,
//       Режим все функции,
//       Интерактивное открытие внешних обработок,
//       Интерактивное открытие внешних отчетов.
//     Такие роли в большей части существует в БСП, но могут встречаться и в прикладных решениях.
//
//   * ТолькоДляВнешнихПользователей - Массив - имена ролей, которые можно назначать
//     только внешним пользователям (роли со специально разработанным набором прав), например:
//       ДобавлениеИзменениеОтветовНаВопросыАнкет, БазовыеПраваВнешнегоПользователя.
//     Такие роли существуют и в БСП, и в прикладных решениях (если используются внешние пользователи).
//
//   * СовместноДляПользователейИВнешнихПользователей - Массив - имена ролей, которые можно назначать
//     любым пользователям (и внутренним, и внешним, и неразделенным), например:
//       ЧтениеОтветовНаВопросыАнкет, ИспользованиеВариантовОтчетов.
//     Такие роли существуют и в БСП, и в прикладных решениях (если используются внешние пользователи).
//
Процедура ПриОпределенииНазначенияРолей(НазначениеРолей) Экспорт
	
#Область БиблиотечныеРоли	

	
	// ИнтернетПоддержкаПользователей
	ИнтернетПоддержкаПользователей.ПриОпределенииНазначенияРолей(НазначениеРолей);
	// Конец ИнтернетПоддержкаПользователей
	
	// БРО

#КонецОбласти

#Область РолиТолькоДляВнешнихПользователей

	НазначениеРолей.ТолькоДляВнешнихПользователей.Добавить(
		Метаданные.Роли.БазовыеПраваВнешнегоПользователя.Имя);
	НазначениеРолей.ТолькоДляВнешнихПользователей.Добавить(
		Метаданные.Роли.БазовыеПраваВнешнегоПользователяУТ.Имя);
	НазначениеРолей.ТолькоДляВнешнихПользователей.Добавить(
		Метаданные.Роли.СамообслуживаниеВнешнийПользовательБазовыеПрава.Имя);
	НазначениеРолей.ТолькоДляВнешнихПользователей.Добавить(
		Метаданные.Роли.СамообслуживаниеВнешнийПользовательЧтениеНСИ.Имя);
	НазначениеРолей.ТолькоДляВнешнихПользователей.Добавить(
		Метаданные.Роли.СамообслуживаниеВнешнийПользовательОформлениеПлановПродаж.Имя);
	НазначениеРолей.ТолькоДляВнешнихПользователей.Добавить(
		Метаданные.Роли.СамообслуживаниеВнешнийПользовательРедактированиеПодписокНаРассылкиИОповещения.Имя);
	НазначениеРолей.ТолькоДляВнешнихПользователей.Добавить(
		Метаданные.Роли.СамообслуживаниеВнешнийПользовательИзменениеКонтактнойИнформацииКлиента.Имя);
	НазначениеРолей.ТолькоДляВнешнихПользователей.Добавить(
		Метаданные.Роли.СамообслуживаниеВнешнийПользовательИзменениеКонтактныхЛиц.Имя);
	НазначениеРолей.ТолькоДляВнешнихПользователей.Добавить(
		Метаданные.Роли.СамообслуживаниеВнешнийПользовательИзменениеКонтрагентов.Имя);
	НазначениеРолей.ТолькоДляВнешнихПользователей.Добавить(
		Метаданные.Роли.СамообслуживаниеВнешнийПользовательОформлениеПретензий.Имя);
	НазначениеРолей.ТолькоДляВнешнихПользователей.Добавить(
		Метаданные.Роли.СамообслуживаниеВнешнийПользовательПросмотрДокументовУсловийПродажи.Имя);
	НазначениеРолей.ТолькоДляВнешнихПользователей.Добавить(
		Метаданные.Роли.СамообслуживаниеВнешнийПользовательОформлениеАктовПриемки.Имя);
	НазначениеРолей.ТолькоДляВнешнихПользователей.Добавить(
		Метаданные.Роли.СамообслуживаниеВнешнийПользовательОформлениеЗаказов.Имя);
	НазначениеРолей.ТолькоДляВнешнихПользователей.Добавить(
		Метаданные.Роли.СамообслуживаниеВнешнийПользовательОформлениеЗаявокНаВозврат.Имя);
	НазначениеРолей.ТолькоДляВнешнихПользователей.Добавить(
		Метаданные.Роли.СамообслуживаниеВнешнийПользовательОформлениеОтчетовКомиссионеров.Имя);
	НазначениеРолей.ТолькоДляВнешнихПользователей.Добавить(
		Метаданные.Роли.СамообслуживаниеВнешнийПользовательПросмотрОтчетаСостояниеРасчетов.Имя);
	НазначениеРолей.ТолькоДляВнешнихПользователей.Добавить(
		Метаданные.Роли.СамообслуживаниеВнешнийПользовательИзменениеБанковскихСчетов.Имя);
	НазначениеРолей.ТолькоДляВнешнихПользователей.Добавить(
		Метаданные.Роли.СамообслуживаниеВнешнийПользовательЧтениеДанныхПоРасчетам.Имя);
	НазначениеРолей.ТолькоДляВнешнихПользователей.Добавить(
		Метаданные.Роли.СамообслуживаниеВнешнийПользовательПросмотрСостоянияОбеспеченияЗаказа.Имя);
	НазначениеРолей.ТолькоДляВнешнихПользователей.Добавить(
		Метаданные.Роли.СамообслуживаниеВнешнийПользовательПросмотрОтчетаСостояниеДоступностиТоваров.Имя);
	НазначениеРолей.ТолькоДляВнешнихПользователей.Добавить(
		Метаданные.Роли.СамообслуживаниеВнешнийПользовательПереходКСпискуАнкет.Имя);

#КонецОбласти

#Область РолиСовместногоИспользованияДляВнешнихПользователейИПользователей
	
	НазначениеРолей.СовместноДляПользователейИВнешнихПользователей.Добавить(
		Метаданные.Роли.БазовыеПраваЭД.Имя);
	НазначениеРолей.СовместноДляПользователейИВнешнихПользователей.Добавить(
		Метаданные.Роли.ЗапускТонкогоКлиента.Имя);
	НазначениеРолей.СовместноДляПользователейИВнешнихПользователей.Добавить(
		Метаданные.Роли.СохранениеДанныхПользователя.Имя);
	НазначениеРолей.СовместноДляПользователейИВнешнихПользователей.Добавить(
		Метаданные.Роли.ВыводНаПринтерФайлБуферОбмена.Имя);
	НазначениеРолей.СовместноДляПользователейИВнешнихПользователей.Добавить(
		Метаданные.Роли.ЗапускВебКлиента.Имя);
	НазначениеРолей.СовместноДляПользователейИВнешнихПользователей.Добавить(
		Метаданные.Роли.ПечатьДокументовОтгрузки.Имя);
	НазначениеРолей.СовместноДляПользователейИВнешнихПользователей.Добавить(
		Метаданные.Роли.ПросмотрОтчетаСостояниеВыполненияДокумента.Имя);
	НазначениеРолей.СовместноДляПользователейИВнешнихПользователей.Добавить(
		Метаданные.Роли.ЧтениеВерсийОбъектов.Имя);
	НазначениеРолей.СовместноДляПользователейИВнешнихПользователей.Добавить(
		Метаданные.Роли.ПечатьДокументовОтгрузки.Имя);
	НазначениеРолей.СовместноДляПользователейИВнешнихПользователей.Добавить(
		Метаданные.Роли.ЧтениеОстатковДоступныхТоваров.Имя);
	НазначениеРолей.СовместноДляПользователейИВнешнихПользователей.Добавить(
		Метаданные.Роли.ЧтениеОтветовНаВопросыАнкет.Имя);
	
#КонецОбласти
	
КонецПроцедуры

// Переопределяет поведение формы пользователя и формы внешнего пользователя,
// группы внешних пользователей.
//
// Параметры:
//  Ссылка - СправочникСсылка.Пользователи,
//           СправочникСсылка.ВнешниеПользователи,
//           СправочникСсылка.ГруппыВнешнихПользователей - ссылка на пользователя,
//           внешнего пользователя или группу внешних пользователей при создании формы.
//
//  ДействияВФорме - Структура - со свойствами:
//         * Роли                   - Строка - "", "Просмотр",     "Редактирование".
//         * КонтактнаяИнформация   - Строка - "", "Просмотр",     "Редактирование".
//         * СвойстваПользователяИБ - Строка - "", "Просмотр",     "Редактирование".
//         * СвойстваЭлемента       - Строка - "", "Просмотр",     "Редактирование".
//           
//           Для групп внешних пользователей КонтактнаяИнформация и СвойстваПользователяИБ не существуют.
//
Процедура ИзменитьДействияВФорме(Знач Ссылка, Знач ДействияВФорме) Экспорт
	
КонецПроцедуры

// Доопределяет действия при записи пользователя информационной базы.
//  Вызывается из процедуры ЗаписатьПользователяИБ(), если пользователь был действительно изменен.
//
// Параметры:
//  СтарыеСвойства - Структура - см. параметры возвращаемые функцией Пользователи.ПрочитатьПользователяИБ().
//  НовыеСвойства  - Структура - см. параметры возвращаемые функцией Пользователи.ЗаписатьПользователяИБ().
//
Процедура ПриЗаписиПользователяИнформационнойБазы(Знач СтарыеСвойства, Знач НовыеСвойства) Экспорт
	
КонецПроцедуры

// Доопределяет действия после удаления пользователя информационной базы.
//  Вызывается из процедуры УдалитьПользователяИБ(), если пользователь был удален.
//
// Параметры:
//  СтарыеСвойства - Структура - см. параметры возвращаемые функцией Пользователи.ПрочитатьПользователяИБ().
//
Процедура ПослеУдаленияПользователяИнформационнойБазы(Знач СтарыеСвойства) Экспорт
	
КонецПроцедуры

// Переопределяет настройки интерфейса, устанавливаемые для новых пользователей.
//
// Параметры:
//  НачальныеНастройки - Структура - настройки по умолчанию:
//   * НастройкиКлиента    - НастройкиКлиентскогоПриложения           - настройки клиентского приложения.
//   * НастройкиИнтерфейса - НастройкиКомандногоИнтерфейса            - настройки командного интерфейса (панели
//                                                                      разделов, панели навигации, панели действий).
//   * НастройкиТакси      - НастройкиИнтерфейсаКлиентскогоПриложения - настройки интерфейса клиентского приложения
//                                                                      (состав и размещение панелей).
//
//   * ЭтоВнешнийПользователь - Булево - если Истина, то это внешний пользователь.
//
Процедура ПриУстановкеНачальныхНастроек(НачальныеНастройки) Экспорт
	
	НастройкиКлиента = НачальныеНастройки.НастройкиКлиента;
	
	// Первый запуск до установки начальных значений констант выполняется в режиме по умолчанию
	Если ОбновлениеИнформационнойБазыСлужебный.ВерсияИБ("СтандартныеПодсистемы",
		ОбщегоНазначенияПовтИсп.РазделениеВключено()) <> "0.0.0.0" Тогда
		
		Если Константы.ИнтерфейсВерсии82.Получить() Тогда
			НастройкиКлиента.ВариантИнтерфейсаКлиентскогоПриложения = ВариантИнтерфейсаКлиентскогоПриложения.Версия8_2;
		Иначе
			НастройкиКлиента.ВариантИнтерфейсаКлиентскогоПриложения = ВариантИнтерфейсаКлиентскогоПриложения.Такси;
		КонецЕсли;
		
	КонецЕсли;
	
	НачальныеНастройки.НастройкиТакси = Новый НастройкиИнтерфейсаКлиентскогоПриложения;
	НастройкиСостава = Новый НастройкиСоставаИнтерфейсаКлиентскогоПриложения;
	ГруппаВерх = Новый ГруппаНастройкиСоставаИнтерфейсаКлиентскогоПриложения;
	ГруппаВерх.Добавить(Новый ЭлементНастройкиСоставаИнтерфейсаКлиентскогоПриложения("ПанельИнструментов"));
	ГруппаВерх.Добавить(Новый ЭлементНастройкиСоставаИнтерфейсаКлиентскогоПриложения("ПанельОткрытых"));
	НастройкиСостава.Верх.Добавить(ГруппаВерх);
	НастройкиСостава.Лево.Добавить(Новый ЭлементНастройкиСоставаИнтерфейсаКлиентскогоПриложения("ПанельРазделов"));
	НачальныеНастройки.НастройкиТакси.УстановитьСостав(НастройкиСостава);
	
	Если НЕ НастройкиКлиента.ВариантИнтерфейсаКлиентскогоПриложения = ВариантИнтерфейсаКлиентскогоПриложения.Такси Тогда
	
		НачальныеНастройки.НастройкиИнтерфейса.ОтображениеПанелиРазделов = ОтображениеПанелиРазделов.Текст;
	
	КонецЕсли;
	
КонецПроцедуры

// Дополняет список настроек переданного пользователя на вкладке "Прочее" обработки НастройкиПользователей.
//
// Параметры:
//  СведенияОПользователе - Структура - строковое и ссылочное представление пользователя.
//       * ПользовательСсылка  - СправочникСсылка.Пользователи - пользователь,
//                               у которого нужно получить настройки.
//       * ИмяПользователяИнформационнойБазы - Строка - пользователь информационной базы,
//                                             у которого нужно получить настройки.
//  Настройки - Структура - прочие пользовательские настройки.
//       * Ключ     - Строка - строковый идентификатор настройки, используемый в дальнейшем
//                             для копирования и очистки этой настройки.
//       * Значение - Структура - информация о настройке.
//              ** НазваниеНастройки  - Строка - название, которое будет отображаться в дереве настроек.
//              ** КартинкаНастройки  - Картинка - картинка, которая будет отображаться в дереве настроек.
//              ** СписокНастроек     - СписокЗначений - список полученных настроек.
//
Процедура ПриПолученииПрочихНастроек(СведенияОПользователе, Настройки) Экспорт
	
	
	
КонецПроцедуры

// Сохраняет настройки переданному пользователю.
//
// Параметры:
//  Настройки - Структура - структура с полями:
//       * ИдентификаторНастройки - Строка - строковый идентификатор копируемой настройки.
//       * ЗначениеНастройки      - СписокЗначений - список значений копируемых настроек.
//  СведенияОПользователе - Структура - строковое и ссылочное представление пользователя.
//       * ПользовательСсылка - СправочникСсылка.Пользователи - пользователь,
//                              которому нужно скопировать настройку.
//       * ИмяПользователяИнформационнойБазы - Строка - пользователь информационной базы,
//                                             которому нужно скопировать настройку.
//
Процедура ПриСохраненииПрочихНастроек(СведенияОПользователе, Настройки) Экспорт
	
	
	
КонецПроцедуры

// Очищает настройки переданному пользователю.
//
// Параметры:
//  Настройки - Структура - структура с полями:
//       * ИдентификаторНастройки - Строка - строковый идентификатор очищаемой настройки.
//       * ЗначениеНастройки      - СписокЗначений - список значений очищаемых настроек.
//  СведенияОПользователе - Структура - строковое и ссылочное представление пользователя.
//       * ПользовательСсылка - СправочникСсылка.Пользователи - пользователь,
//                              которому нужно очистить настройку.
//       * ИмяПользователяИнформационнойБазы - Строка - пользователь информационной базы,
//                                             которому нужно очистить настройку.
//
Процедура ПриУдаленииПрочихНастроек(СведенияОПользователе, Настройки) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти
