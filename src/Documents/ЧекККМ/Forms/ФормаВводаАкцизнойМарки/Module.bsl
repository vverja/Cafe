
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Если Параметры.Редактирование Тогда
		
		АкцизныеМарки.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресВоВременномХранилище));
		
		Заголовок = НСтр("ru='Редактирование акцизных марок';uk='Редагування акцизних марок'");
		
		Элементы.ЗавершитьРедактирование.Видимость = Истина;
		
		Элементы.Редактирование.Видимость                              = Истина;
		Элементы.СканированиеМаркиПослеСканированияШтрихкода.Видимость = Ложь;
		
	Иначе
		
		Заголовок = НСтр("ru='Сканирование акцизной марки';uk='Сканування акцизної марки'");
		
		Элементы.ЗавершитьРедактирование.Видимость = Ложь;
		
		Элементы.Редактирование.Видимость                              = Ложь;
		Элементы.СканированиеМаркиПослеСканированияШтрихкода.Видимость = Истина;
		
	КонецЕсли;
	
	Номенклатура = Параметры.Номенклатура;
	Характеристика = Параметры.Характеристика;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
	ОповещенияПриПодключении = Новый ОписаниеОповещения("ПодключитьОборудованиеЗавершение", ЭтотОбъект);  
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПоТипу(ОповещенияПриПодключении, ЭтотОбъект, ПоддерживаемыеТипыВО);
	// Конец ПодключаемоеОборудование
	
	ЭтотОбъект.ТекущийЭлемент = Элементы.ДекорацияКартинка;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	// ПодключаемоеОборудование
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПоТипу(, ЭтотОбъект, ПоддерживаемыеТипыВО);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование"
		И ВводДоступен() Тогда
		Если ИмяСобытия = "ScanData" Тогда
			
			Если Параметр[1] = Неопределено Тогда
				ШтрихкодАкцизнойМарки = Параметр[0];
			Иначе
				ШтрихкодАкцизнойМарки = Параметр[1][1];
			КонецЕсли;
			
			СопоставленнаяНоменклатура = Неопределено;
			Если Не РозничныеПродажиВызовСервера.ЭтоШтрихкодАкцизнойМарки(ШтрихкодАкцизнойМарки) Тогда
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru='Штрихкод не соответствует формату штрихкода акцизной марки.';uk='Штрихкод не відповідає формату штрихкоду акцизної марки.'"));
				Возврат;
			КонецЕсли;
			
						
			Если Элементы.СканированиеМаркиПослеСканированияШтрихкода.Видимость Тогда
				
				ПодключитьОбработчикОжидания("ЗакрытьФормуПриСканировании", 0.1, Истина);
				
			Иначе
				
				Отбор = Новый Структура;
				Отбор.Вставить("ШтрихкодАкцизнойМарки", ШтрихкодАкцизнойМарки);
				
				НайденныеСтроки = АкцизныеМарки.НайтиСтроки(Отбор);
				Если НайденныеСтроки.Количество() = 0 Тогда
					
					НоваяСтрока = АкцизныеМарки.Добавить();
					НоваяСтрока.ШтрихкодАкцизнойМарки = ШтрихкодАкцизнойМарки;
					
				Иначе
					
					Элементы.АкцизныеМарки.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗавершитьРедактирование(Команда)
	
	Закрыть(АдресТаблицыАкцизныхМаркиВоВременномХранилище(ВладелецФормы.УникальныйИдентификатор));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗакрытьФормуПриСканировании()
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("ШтрихкодАкцизнойМарки",           ШтрихкодАкцизнойМарки);
	
	Закрыть(ВозвращаемоеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьОборудованиеЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Если Не РезультатВыполнения.Результат Тогда
		ТекстСообщения = НСтр("ru='При подключении оборудования произошла ошибка:""%ОписаниеОшибки%"".';uk='При підключенні устаткування виникла помилка:""%ОписаниеОшибки%"".'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция АдресТаблицыАкцизныхМаркиВоВременномХранилище(УникальныйИдентификатор)
	
	Возврат ПоместитьВоВременноеХранилище(АкцизныеМарки.Выгрузить(), УникальныйИдентификатор);
	
КонецФункции

&НаКлиенте
Процедура ВводШтрихкода(Команда)
	ОчиститьСообщения();
	Оповещение = Новый ОписаниеОповещения("ВводШтрихкодаЗавершение", ЭтотОбъект);
	ШтрихкодированиеНоменклатурыКлиент.ПоказатьВводШтрихкода(Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура ВводШтрихкодаЗавершение(ДанныеШтрихкода, ДополнительныеПараметры) Экспорт
	
	ШтрихкодАкцизнойМарки ="";
	Если ДанныеШтрихкода.Свойство("Штрихкод") Тогда 
		ШтрихкодАкцизнойМарки = СокрЛП(ДанныеШтрихкода.Штрихкод);
	КонецЕсли;
	
	Если Не РозничныеПродажиВызовСервера.ЭтоШтрихкодАкцизнойМарки(ШтрихкодАкцизнойМарки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
		НСтр("ru='Штрихкод не соответствует формату штрихкода акцизной марки.';uk='Штрихкод не відповідає формату штрихкоду акцизної марки.'"));
		Возврат;
	КонецЕсли;
	
	ОбработатьШтрихкод(ШтрихкодАкцизнойМарки);

КонецПроцедуры

&НаКлиенте
Процедура ОбработатьШтрихкод(ШтрихкодАкцизнойМарки)
	
	Отбор = Новый Структура;
	Отбор.Вставить("ШтрихкодАкцизнойМарки", ШтрихкодАкцизнойМарки);
	
	НайденныеСтроки = АкцизныеМарки.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() = 0 Тогда
		НоваяСтрока = АкцизныеМарки.Добавить();
		НоваяСтрока.ШтрихкодАкцизнойМарки = ШтрихкодАкцизнойМарки;
	Иначе
		Элементы.АкцизныеМарки.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти
