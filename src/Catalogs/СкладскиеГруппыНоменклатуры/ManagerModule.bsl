#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Получает складскую группу, если она одна в справочнике.
//
// Возвращаемое значение:
//	СправочникСсылка.СкладскиеГруппыНоменклатуры - найденная складская группа
//
Функция СкладскаяГруппаНоменклатурыПоУмолчанию() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 2
	|	СкладскиеГруппыНоменклатуры.Ссылка КАК СкладскаяГруппаНоменклатуры
	|ИЗ
	|	Справочник.СкладскиеГруппыНоменклатуры КАК СкладскиеГруппыНоменклатуры
	|ГДЕ
	|	НЕ СкладскиеГруппыНоменклатуры.ПометкаУдаления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		СкладскаяГруппаНоменклатуры = Выборка.СкладскаяГруппаНоменклатуры;
	Иначе
		СкладскаяГруппаНоменклатуры = Справочники.СкладскиеГруппыНоменклатуры.ПустаяСсылка();
	КонецЕсли;
	
	Возврат СкладскаяГруппаНоменклатуры;

КонецФункции

//Возвращает имена блокруемых реквизитов для механизма блокирования реквизитов БСП
//	Возвращаемое значание:
//		Массив - имена блокируемых реквизитов
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт

	Результат = Новый Массив;
	
	Результат.Добавить("ФизическиРазличаетсяОтНазначения");

	Возврат Результат;

КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	// Получим структуру возможных полей отбора справочника номенклатуры
	СтруктураРеквизитов = ЗначениеНастроекПовтИсп.РеквизитыСправочника("СкладскиеГруппыНоменклатуры");
	
	Запрос        = Новый Запрос;
	СтрокаПоиска  = Параметры.СтрокаПоиска;
	УсловиеОтбора = "";
	
	Для Каждого КлючИЗначениеОтбора Из Параметры.Отбор Цикл
		Если СтруктураРеквизитов.Свойство(КлючИЗначениеОтбора.Ключ) Тогда
			УсловиеОтбора = УсловиеОтбора + "
				|	И СкладскиеГруппыНоменклатуры." + КлючИЗначениеОтбора.Ключ + " В (&" + КлючИЗначениеОтбора.Ключ + ")";
			Запрос.УстановитьПараметр(КлючИЗначениеОтбора.Ключ,КлючИЗначениеОтбора.Значение);
		КонецЕсли;
	КонецЦикла;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СкладскиеГруппыНоменклатуры.Ссылка КАК Ссылка,
	|	СкладскиеГруппыНоменклатуры.Наименование КАК Наименование
	|ИЗ
	|	Справочник.СкладскиеГруппыНоменклатуры КАК СкладскиеГруппыНоменклатуры
	|ГДЕ
	|	СкладскиеГруппыНоменклатуры.Наименование ПОДОБНО &СтрокаПоиска
	|	И (НЕ &ТолькоФизическиРазличаетсяОтНазначения
	|			ИЛИ &ТолькоФизическиРазличаетсяОтНазначения
	|				И НЕ СкладскиеГруппыНоменклатуры.ФизическиРазличаетсяОтНазначения)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование";
	
	Если ЗначениеЗаполнено(УсловиеОтбора) Тогда 
		ТекстЗапроса = СтрЗаменить(
			ТекстЗапроса, 
			"СкладскиеГруппыНоменклатуры.Наименование ПОДОБНО &СтрокаПоиска",
			"СкладскиеГруппыНоменклатуры.Наименование ПОДОБНО &СтрокаПоиска" + УсловиеОтбора);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТолькоФизическиРазличаетсяОтНазначения", НЕ Параметры.ОбособленнаяЗакупкаПродажа);
	Запрос.УстановитьПараметр("СтрокаПоиска", СтрокаПоиска + "%");
	
	Запрос.Текст = ТекстЗапроса;                                  	
	
	ДанныеВыбора = Новый СписокЗначений;

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ДанныеВыбора.Добавить(Выборка.Ссылка, Выборка.Наименование);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы


// Обработчик обновления BAS УТ 3.2.2
// Процедура заполняет реквизиты ОграничиватьПоВесу и ОграничиватьПоОбъему 
Процедура ЗаполнитьРеквизитыОграничиватьПоВесуОграничиватьПоОбъему() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СкладскиеГруппыНоменклатуры.Ссылка
	|ИЗ
	|	Справочник.СкладскиеГруппыНоменклатуры КАК СкладскиеГруппыНоменклатуры";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СправочникОбъект = Выборка.Ссылка.ПолучитьОбъект();
		СправочникОбъект.ОграничиватьПоВесу = Истина;
		СправочникОбъект.ОграничиватьПоОбъему = Истина;
		СправочникОбъект.Записать();
		
	КонецЦикла;
	
КонецПроцедуры


#КонецОбласти

#Область Отчеты

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли

