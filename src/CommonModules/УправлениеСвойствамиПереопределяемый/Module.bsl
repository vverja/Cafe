////////////////////////////////////////////////////////////////////////////////
// Подсистема "Свойства"
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Заполняет наборы свойств объекта. Обычно требуется, если наборов более одного.
//
// Параметры:
//  Объект       - Ссылка на владельца свойств.
//                 Объект владельца свойств.
//                 ДанныеФормыСтруктура (по типу объекта владельца свойств).
//
//  ТипСсылки    - Тип - тип ссылки владельца свойств.
//
//  НаборыСвойств - ТаблицаЗначений с колонками:
//                    Набор - СправочникСсылка.НаборыДополнительныхРеквизитовИСведений.
//
//                    // Далее свойства элемента формы типа ГруппаФормы вида обычная группа
//                    // или страница, которая создается, если наборов больше одного без учета
//                    // пустого набора, который описывает свойства группы удаленных реквизитов.
//                    
//                    // Если значение Неопределено, значит использовать значение по умолчанию.
//                    
//                    // Для любой группы управляемой формы.
//                    Высота                   - Число.
//                    Заголовок                - Строка.
//                    Подсказка                - Строка.
//                    РастягиватьПоВертикали   - Булево.
//                    РастягиватьПоГоризонтали - Булево.
//                    ТолькоПросмотр           - Булево.
//                    ЦветТекстаЗаголовка      - Цвет.
//                    Ширина                   - Число.
//                    ШрифтЗаголовка           - Шрифт.
//                    
//                    // Для обычной группы и страницы.
//                    Группировка              - ГруппировкаПодчиненныхЭлементовФормы.
//                    
//                    // Для обычной группы.
//                    Отображение                - ОтображениеОбычнойГруппы.
//                    ШиринаПодчиненныхЭлементов - ШиринаПодчиненныхЭлементовФормы.
//                    
//                    // Для страницы.
//                    Картинка                 - Картинка.
//                    ОтображатьЗаголовок      - Булево.
//
//  СтандартнаяОбработка - Булево - начальное значение Истина. Указывает получать ли
//                         основной набор, когда НаборыСвойств.Количество() равно нулю.
//
//  КлючНазначения   - Неопределено - (начальное значение) - указывает вычислить
//                      ключ назначения автоматически и добавить к значениям свойств
//                      формы КлючНазначенияИспользования и КлючСохраненияПоложенияОкна,
//                      чтобы изменения формы (настройки, положение и размер) сохранялись
//                      отдельно для разного состава наборов.
//                      Например, для каждого вида номенклатуры - свой состав наборов.
//
//                    - Строка - (не более 32 символа) - использовать указанный ключ
//                      назначения для добавления к значениям свойств формы.
//                      Пустая строка - не изменять свойства ключей формы, т.к. они
//                      устанавливается в форме и уже учитывают различия состава наборов.
//
//                    Добавка имеет формат "КлючНаборовСвойств<КлючНазначения>",
//                    чтобы <КлючНазначения> можно было обновлять без повторной добавки.
//                    При автоматическом вычислении <КлючНазначения> содержит хэш
//                    идентификаторов ссылок упорядоченных наборов свойств.
//
Процедура ЗаполнитьНаборыСвойствОбъекта(Объект, ТипСсылки, НаборыСвойств, СтандартнаяОбработка, КлючНазначения) Экспорт
	
	//++ НЕ ГИСМ
	
	Если ТипСсылки = Тип("СправочникСсылка.Партнеры") Тогда
		
		СписокСвойств = ПолучитьНаборыСвойствДляПартнеров(Объект.Клиент, Объект.Конкурент, Объект.Поставщик, Объект.ПрочиеОтношения);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.Номенклатура") И НЕ Объект.ЭтоГруппа Тогда
		
		СписокСвойств = ПолучитьНаборыСвойствДляНоменклатуры(Объект);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.ХарактеристикиНоменклатуры") Тогда
		
		СписокСвойств = ПолучитьНаборыСвойствДляХарактеристикНоменклатуры(Объект);
		
	ИначеЕсли ТипСсылки = Тип("СправочникСсылка.СерииНоменклатуры") Тогда
		
		СписокСвойств = ПолучитьНаборыСвойствДляСерииНоменклатуры(Объект);
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	Для Каждого ЭлементСписка Из СписокСвойств Цикл
		
		СтрокаНабора = НаборыСвойств.Добавить();
		
		СтрокаНабора.Набор 	   = ЭлементСписка.Значение;
		СтрокаНабора.Заголовок = ЭлементСписка.Представление;
		
	КонецЦикла;
	
	//-- НЕ ГИСМ
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ФУНКЦИИ ДЛЯ РАБОТЫ СО СПРАВОЧНИКОМ ПАРТНЕРЫ

Функция ПолучитьНаборыСвойствДляПартнеров(Клиент, Конкурент, Поставщик, ПрочиеОтношения) Экспорт
	
	Наборы = Новый СписокЗначений;
	
	//++ НЕ ГИСМ
	
	Наборы.Добавить(Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Партнеры_Общие, НСтр("ru='Общие для всех партнеров';uk='Загальні для всіх партнерів'"));
	
	Если Клиент Тогда
		Наборы.Добавить(Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Партнеры_Клиенты,    НСтр("ru='Для клиентов';uk='Для клієнтів'"));
	КонецЕсли;
	
	Если Конкурент Тогда
		Наборы.Добавить(Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Партнеры_Конкуренты, НСтр("ru='Для конкурентов';uk='Для конкурентів'"));
	КонецЕсли;
	
	Если Поставщик Тогда
		Наборы.Добавить(Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Партнеры_Поставщики, НСтр("ru='Для поставщиков';uk='Для постачальників'"));
	КонецЕсли;
	
	Если ПрочиеОтношения Тогда
		Наборы.Добавить(Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Партнеры_Прочие,     НСтр("ru='Для прочих';uk='Для інших'"));
	КонецЕсли;
	
	//-- НЕ ГИСМ
	
	Возврат Наборы;
	
КонецФункции // ПолучитьНаборыСвойствДляПартнеров()

////////////////////////////////////////////////////////////////////////////////
// ФУНКЦИИ ДЛЯ РАБОТЫ СО СПРАВОЧНИКОМ НОМЕНКЛАТУРЫ

Функция ПолучитьНаборыСвойствДляНоменклатуры(Объект) Экспорт
	
	Наборы = Новый СписокЗначений;
	
	//++ НЕ ГИСМ
	
	НаборСвойств = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Номенклатура_Общие;
	Наборы.Добавить(НаборСвойств, НСтр("ru='Общие свойства';uk='Загальні властивості'"));
	
	НаборСвойств = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ВидНоменклатуры, "НаборСвойств");
	Наборы.Добавить(НаборСвойств, НСтр("ru='Свойства для вида номенклатуры';uk='Властивості виду номенклатури'"));
	
	//-- НЕ ГИСМ
	
	Возврат Наборы;
	
КонецФункции // ПолучитьНаборыСвойствДляНоменклатуры()

Функция ПолучитьНаборыСвойствДляХарактеристикНоменклатуры(Объект) Экспорт
	
	Наборы = Новый СписокЗначений;
	
	//++ НЕ ГИСМ
	
	НаборСвойств = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_ХарактеристикиНоменклатуры_Общие;
	Наборы.Добавить(НаборСвойств, НСтр("ru='Общие свойства характеристик';uk='Загальні властивості характеристик'"));
	
	Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.ВидыНоменклатуры") Тогда
		
		НаборСвойств = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Владелец, "НаборСвойствХарактеристик");
		Наборы.Добавить(НаборСвойств, НСтр("ru='Свойства характеристик для вида номенклатуры';uk='Властивості характеристик для виду номенклатури'"));
		
	ИначеЕсли ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Номенклатура") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.ВидНоменклатуры КАК ВидНоменклатуры
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Объект.Владелец);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			НаборСвойств = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.ВидНоменклатуры, "НаборСвойствХарактеристик");
			Наборы.Добавить(НаборСвойств, НСтр("ru='Свойства характеристик для номенклатуры';uk='Властивості характеристик для номенклатури'"));
		КонецЕсли;
		
	КонецЕсли;
	
	//-- НЕ ГИСМ
	
	Возврат Наборы;
	
КонецФункции // ПолучитьНаборыСвойствДляХарактеристикНоменклатуры()

Функция ПолучитьНаборыСвойствДляСерииНоменклатуры(Объект) Экспорт
	
	Наборы = Новый СписокЗначений;
	
	//++ НЕ ГИСМ
	
	НаборСвойств = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_СерииНоменклатуры_Общие;
	Наборы.Добавить(НаборСвойств, НСтр("ru='Общие свойства';uk='Загальні властивості'"));
	
	НаборСвойств = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ВидНоменклатуры, "НаборСвойствСерий");
	Наборы.Добавить(НаборСвойств, НСтр("ru='Свойства для шаблона серий номенклатуры';uk='Властивості шаблону серій номенклатури'"));
	
	//-- НЕ ГИСМ
	
	Возврат Наборы;
	
КонецФункции // ПолучитьНаборыСвойствДляНоменклатуры()

//++ НЕ ГИСМ

//-- НЕ ГИСМ
#КонецОбласти
