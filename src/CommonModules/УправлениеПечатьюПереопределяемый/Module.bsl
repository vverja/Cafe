////////////////////////////////////////////////////////////////////////////////
// Подсистема "Печать".
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Переопределяет таблицу возможных форматов для сохранения табличного документа.
// Вызывается из ОбщегоНазначения.НастройкиФорматовСохраненияТабличногоДокумента()
//
// Параметры:
//  ТаблицаФорматов - ТаблицаЗначений:
//                   *  ТипФайлаТабличногоДокумента - ТипФайлаТабличногоДокумента                 - значение в
//                                                                                                  платформе,
//                                                                                                  соответствующее
//                                                                                                  формату;
//                   *  Ссылка                      - ПеречислениеСсылка.ФорматыСохраненияОтчетов - ссылка на
//                                                                                                  метаданные, где
//                                                                                                  хранится
//                                                                                                  представление;
//                   *  Представление               - Строка -                                    - представление типа
//                                                             файла (заполняется из перечисления);
//                   *  Расширение                  - Строка -                                    - тип файла для
//                                                             операционной системы;
//                   *  Картинка                    - Картинка                                    - значок формата.
//
Процедура ПриЗаполненииНастроекФорматовСохраненияТабличногоДокумента(ТаблицаФорматов) Экспорт
	
КонецПроцедуры

// Переопределяет список команд печати, получаемый функцией УправлениеПечатью.КомандыПечатиФормы.
Процедура ПередДобавлениемКомандПечати(ИмяФормы, КомандыПечати, СтандартнаяОбработка) Экспорт
	
	Если ИмяФормы = "Документ.ЛистКассовойКниги.Форма.ФормаСпискаДокументов" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		КоллекцияКомандПечати = УправлениеПечатью.СоздатьКоллекциюКомандПечати();
		Документы.ПриходныйКассовыйОрдер.ДобавитьКомандыПечати(КоллекцияКомандПечати);
		Для Каждого КомандаПечати Из КоллекцияКомандПечати Цикл
			Если ПустаяСтрока(КомандаПечати.МенеджерПечати) Тогда
				КомандаПечати.МенеджерПечати = "Документ.ПриходныйКассовыйОрдер";
			КонецЕсли;
		КонецЦикла;
		ДополнительныеОтчетыИОбработки.ПриПолученииКомандПечати(КоллекцияКомандПечати, "Документ.ПриходныйКассовыйОрдер");
		КоллекцияКомандПечати.ЗаполнитьЗначения("ПриходныеКассовыеОрдераКоманднаяПанель", "МестоРазмещения");
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(КоллекцияКомандПечати, КомандыПечати);
		
		КоллекцияКомандПечати = УправлениеПечатью.СоздатьКоллекциюКомандПечати();
		Документы.РасходныйКассовыйОрдер.ДобавитьКомандыПечати(КоллекцияКомандПечати);
		Для Каждого КомандаПечати Из КоллекцияКомандПечати Цикл
			Если ПустаяСтрока(КомандаПечати.МенеджерПечати) Тогда
				КомандаПечати.МенеджерПечати = "Документ.РасходныйКассовыйОрдер";
			КонецЕсли;
		КонецЦикла;
		ДополнительныеОтчетыИОбработки.ПриПолученииКомандПечати(КоллекцияКомандПечати, "Документ.РасходныйКассовыйОрдер");
		КоллекцияКомандПечати.ЗаполнитьЗначения("РасходныеКассовыеОрдераКоманднаяПанель", "МестоРазмещения");
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(КоллекцияКомандПечати, КомандыПечати);
		
		КоллекцияКомандПечати = УправлениеПечатью.СоздатьКоллекциюКомандПечати();
		Документы.ЛистКассовойКниги.ДобавитьКомандыПечати(КоллекцияКомандПечати);
		Для Каждого КомандаПечати Из КоллекцияКомандПечати Цикл
			Если ПустаяСтрока(КомандаПечати.МенеджерПечати) Тогда
				КомандаПечати.МенеджерПечати = "Документ.ЛистКассовойКниги";
			КонецЕсли;
		КонецЦикла;
		ДополнительныеОтчетыИОбработки.ПриПолученииКомандПечати(КоллекцияКомандПечати, "Документ.ЛистКассовойКниги");
		КоллекцияКомандПечати.ЗаполнитьЗначения("КассовыеКнигиКоманднаяПанель", "МестоРазмещения");
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(КоллекцияКомандПечати, КомандыПечати);
		
	ИначеЕсли ИмяФормы = "Документ.ОрдерНаОтражениеПорчиТоваров.Форма.ФормаСписка" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		КоллекцияКомандПечати = УправлениеПечатью.СоздатьКоллекциюКомандПечати();
		Документы.СписаниеБезналичныхДенежныхСредств.ДобавитьКомандыПечати(КоллекцияКомандПечати);
		Для Каждого КомандаПечати Из КоллекцияКомандПечати Цикл
			Если ПустаяСтрока(КомандаПечати.МенеджерПечати) Тогда
				КомандаПечати.МенеджерПечати = "Документ.ОрдерНаОтражениеПорчиТоваров";
			КонецЕсли;
		КонецЦикла;
		ДополнительныеОтчетыИОбработки.ПриПолученииКомандПечати(КоллекцияКомандПечати, "Документ.ОрдерНаОтражениеПорчиТоваров");
		КоллекцияКомандПечати.ЗаполнитьЗначения("СписокОрдеровКоманднаяПанель", "МестоРазмещения");
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(КоллекцияКомандПечати, КомандыПечати);
		
	
	ИначеЕсли ИмяФормы = "ЖурналДокументов.ОтчетыКомитентам.Форма.ФормаСпискаДокументов" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Документы.ОтчетКомитенту.ДобавитьКомандыПечати(КомандыПечати);
		Для Каждого КомандаПечати Из КомандыПечати Цикл
			Если ПустаяСтрока(КомандаПечати.МенеджерПечати) Тогда
				КомандаПечати.МенеджерПечати = "Документ.ОтчетКомитенту";
			КонецЕсли;
		КонецЦикла;
		
		ДобавляемыеКомандыПечати = УправлениеПечатью.СоздатьКоллекциюКомандПечати();
		Документы.ОтчетКомитентуОСписании.ДобавитьКомандыПечати(ДобавляемыеКомандыПечати);
		Для Каждого КомандаПечати Из ДобавляемыеКомандыПечати Цикл
			Если ПустаяСтрока(КомандаПечати.МенеджерПечати) Тогда
				КомандаПечати.МенеджерПечати = "Документ.ОтчетКомитентуОСписании";
			КонецЕсли;
			Отбор = Новый Структура("Идентификатор,Представление,МенеджерПечати,Обработчик");
			ЗаполнитьЗначенияСвойств(Отбор, КомандаПечати);
			НайденныеКоманды = КомандыПечати.НайтиСтроки(Отбор);
			Если НайденныеКоманды.Количество() = 0 Тогда
				ЗаполнитьЗначенияСвойств(КомандыПечати.Добавить(), КомандаПечати);
			КонецЕсли;
		КонецЦикла;
		
		ДополнительныеОтчетыИОбработки.ПриПолученииКомандПечати(КомандыПечати, "Документ.ОтчетКомитенту");
		ДополнительныеОтчетыИОбработки.ПриПолученииКомандПечати(КомандыПечати, "Документ.ОтчетКомитентуОСписании");
	
	ИначеЕсли ИмяФормы = "ЖурналДокументов.ПередачиВозвратыТоваровМеждуОрганизациями.Форма.ФормаРабочееМесто" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Документы.ВозвратТоваровМеждуОрганизациями.ДобавитьКомандыПечати(КомандыПечати);
		Для Каждого КомандаПечати Из КомандыПечати Цикл
			Если ПустаяСтрока(КомандаПечати.МенеджерПечати) Тогда
				КомандаПечати.МенеджерПечати = "Документ.ВозвратТоваровМеждуОрганизациями";
			КонецЕсли;
			КомандаПечати.ТипыОбъектовПечати.Добавить(Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями"));
		КонецЦикла;
		
		ДобавляемыеКомандыПечати = УправлениеПечатью.СоздатьКоллекциюКомандПечати();
		Документы.ПередачаТоваровМеждуОрганизациями.ДобавитьКомандыПечати(ДобавляемыеКомандыПечати);
		Для Каждого КомандаПечати Из ДобавляемыеКомандыПечати Цикл
			Если ПустаяСтрока(КомандаПечати.МенеджерПечати) Тогда
				КомандаПечати.МенеджерПечати = "Документ.ПередачаТоваровМеждуОрганизациями";
			КонецЕсли;
			Отбор = Новый Структура("Идентификатор,Представление,МенеджерПечати,Обработчик");
			ЗаполнитьЗначенияСвойств(Отбор, КомандаПечати);
			НайденныеКоманды = КомандыПечати.НайтиСтроки(Отбор);
			КомандаПечати.ТипыОбъектовПечати.Добавить(Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями"));
			Если НайденныеКоманды.Количество() = 0 Тогда
				ЗаполнитьЗначенияСвойств(КомандыПечати.Добавить(), КомандаПечати);
			Иначе
				Для каждого КомандаПечати Из НайденныеКоманды Цикл
					КомандаПечати.ТипыОбъектовПечати.Добавить(Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями"));
				КонецЦикла; 
			КонецЕсли;
		КонецЦикла;
		
		ДополнительныеОтчетыИОбработки.ПриПолученииКомандПечати(КомандыПечати, "Документ.ВозвратТоваровМеждуОрганизациями");
		ДополнительныеОтчетыИОбработки.ПриПолученииКомандПечати(КомандыПечати, "Документ.ПередачаТоваровМеждуОрганизациями");
		
	ИначеЕсли ИмяФормы = "ЖурналДокументов.ДокументыПродажи.Форма.ФормаСписка" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Документы.РеализацияТоваровУслуг.ДобавитьКомандыПечати(КомандыПечати);
		Для Каждого КомандаПечати Из КомандыПечати Цикл
			Если ПустаяСтрока(КомандаПечати.Обработчик) И ПустаяСтрока(КомандаПечати.МенеджерПечати) Тогда
				КомандаПечати.МенеджерПечати = "Документ.РеализацияТоваровУслуг";
			КонецЕсли;
			КомандаПечати.ТипыОбъектовПечати.Добавить(Тип("ДокументСсылка.РеализацияТоваровУслуг"));
		КонецЦикла;
		
		ДобавляемыеКомандыПечати = УправлениеПечатью.СоздатьКоллекциюКомандПечати();
		Документы.АктВыполненныхРабот.ДобавитьКомандыПечати(ДобавляемыеКомандыПечати);
		Для Каждого КомандаПечати Из ДобавляемыеКомандыПечати Цикл
			Если ПустаяСтрока(КомандаПечати.Обработчик) И ПустаяСтрока(КомандаПечати.МенеджерПечати) Тогда
				КомандаПечати.МенеджерПечати = "Документ.АктВыполненныхРабот";
			КонецЕсли;
			Отбор = Новый Структура("Идентификатор,Представление,МенеджерПечати,Обработчик");
			ЗаполнитьЗначенияСвойств(Отбор, КомандаПечати);
			НайденныеКоманды = КомандыПечати.НайтиСтроки(Отбор);
			КомандаПечати.ТипыОбъектовПечати.Добавить(Тип("ДокументСсылка.АктВыполненныхРабот"));
			Если НайденныеКоманды.Количество() = 0 Тогда
				ЗаполнитьЗначенияСвойств(КомандыПечати.Добавить(), КомандаПечати);
			Иначе
				Для каждого КомандаПечати Из НайденныеКоманды Цикл
					КомандаПечати.ТипыОбъектовПечати.Добавить(Тип("ДокументСсылка.АктВыполненныхРабот"));
				КонецЦикла; 
			КонецЕсли;
		КонецЦикла;
		
		ДополнительныеОтчетыИОбработки.ПриПолученииКомандПечати(КомандыПечати, "Документ.РеализацияТоваровУслуг");
		ДополнительныеОтчетыИОбработки.ПриПолученииКомандПечати(КомандыПечати, "Документ.АктВыполненныхРабот");
		
	ИначеЕсли ИмяФормы = "Документ.ПоступлениеТоваровУслуг.Форма.ФормаВыбораРаспоряжения" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Документы.ЗаказПоставщику.ДобавитьКомандыПечати(КомандыПечати);
		Для Каждого КомандаПечати Из КомандыПечати Цикл
			Если ПустаяСтрока(КомандаПечати.МенеджерПечати) Тогда
				КомандаПечати.МенеджерПечати = "Документ.ЗаказПоставщику";
			КонецЕсли;
		КонецЦикла;
		
		ДополнительныеОтчетыИОбработки.ПриПолученииКомандПечати(КомандыПечати, "Документ.ЗаказПоставщику");
	
	ИначеЕсли ИмяФормы = "Справочник.СертификатыНоменклатуры.Форма.ФормаСпискаКонтекст" 
	 ИЛИ ИмяФормы = "Справочник.СертификатыНоменклатуры.Форма.ФормаСписка" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Справочники.СертификатыНоменклатуры.ДобавитьКомандыПечати(КомандыПечати);	
		КомандыПечати.ЗаполнитьЗначения("КоманднаяПанельСписокСертификатыНоменклатурыПечать", "МестоРазмещения");
		
		ДополнительныеОтчетыИОбработки.ПриПолученииКомандПечати(КомандыПечати, "Справочник.СертификатыНоменклатуры");
		
	
	ИначеЕсли ИмяФормы = "ЖурналДокументов.ИсходящиеНалоговыеДокументы.Форма.ФормаСписка"
	 ИЛИ ИмяФормы = "ЖурналДокументов.ИсходящиеНалоговыеДокументы.Форма.ОформлениеНалоговыхДокументовПоРегистратору" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Документы.НалоговаяНакладная.ДобавитьКомандыПечати(КомандыПечати);
		Для Каждого КомандаПечати Из КомандыПечати Цикл
			Если ПустаяСтрока(КомандаПечати.Обработчик) И ПустаяСтрока(КомандаПечати.МенеджерПечати) Тогда
				КомандаПечати.МенеджерПечати = "Документ.НалоговаяНакладная";
			КонецЕсли;
			КомандаПечати.ТипыОбъектовПечати.Добавить(Тип("ДокументСсылка.НалоговаяНакладная"));
		КонецЦикла;
		
		ДобавляемыеКомандыПечати = УправлениеПечатью.СоздатьКоллекциюКомандПечати();
		Документы.Приложение2КНалоговойНакладной.ДобавитьКомандыПечати(ДобавляемыеКомандыПечати);
		Для Каждого КомандаПечати Из ДобавляемыеКомандыПечати Цикл
			Если ПустаяСтрока(КомандаПечати.Обработчик) И ПустаяСтрока(КомандаПечати.МенеджерПечати) Тогда
				КомандаПечати.МенеджерПечати = "Документ.Приложение2КНалоговойНакладной";
			КонецЕсли;
			Отбор = Новый Структура("Идентификатор,Представление,МенеджерПечати,Обработчик");
			ЗаполнитьЗначенияСвойств(Отбор, КомандаПечати);
			НайденныеКоманды = КомандыПечати.НайтиСтроки(Отбор);
			КомандаПечати.ТипыОбъектовПечати.Добавить(Тип("ДокументСсылка.Приложение2КНалоговойНакладной"));
			Если НайденныеКоманды.Количество() = 0 Тогда
				ЗаполнитьЗначенияСвойств(КомандыПечати.Добавить(), КомандаПечати);
			Иначе
				Для каждого КомандаПечати Из НайденныеКоманды Цикл
					КомандаПечати.ТипыОбъектовПечати.Добавить(Тип("ДокументСсылка.Приложение2КНалоговойНакладной"));
				КонецЦикла; 
			КонецЕсли;
		КонецЦикла;
		
		ДополнительныеОтчетыИОбработки.ПриПолученииКомандПечати(КомандыПечати, "Документ.НалоговаяНакладная");
		ДополнительныеОтчетыИОбработки.ПриПолученииКомандПечати(КомандыПечати, "Документ.Приложение2КНалоговойНакладной");
		
	ИначеЕсли ИмяФормы = "ЖурналДокументов.ОтчетыОРозничныхПродажахИВыручке.Форма.ФормаСписка" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Документы.ОтчетОРозничныхПродажах.ДобавитьКомандыПечати(КомандыПечати);
		Для Каждого КомандаПечати Из КомандыПечати Цикл
			Если ПустаяСтрока(КомандаПечати.Обработчик) И ПустаяСтрока(КомандаПечати.МенеджерПечати) Тогда
				КомандаПечати.МенеджерПечати = "Документ.ОтчетОРозничныхПродажах";
			КонецЕсли;
			КомандаПечати.ТипыОбъектовПечати.Добавить(Тип("ДокументСсылка.ОтчетОРозничныхПродажах"));
		КонецЦикла;
		
		ДобавляемыеКомандыПечати = УправлениеПечатью.СоздатьКоллекциюКомандПечати();
		Документы.ОтчетОРозничнойВыручке.ДобавитьКомандыПечати(ДобавляемыеКомандыПечати);
		Для Каждого КомандаПечати Из ДобавляемыеКомандыПечати Цикл
			Если ПустаяСтрока(КомандаПечати.Обработчик) И ПустаяСтрока(КомандаПечати.МенеджерПечати) Тогда
				КомандаПечати.МенеджерПечати = "Документ.ОтчетОРозничнойВыручке";
			КонецЕсли;
			Отбор = Новый Структура("Идентификатор,Представление,МенеджерПечати,Обработчик");
			ЗаполнитьЗначенияСвойств(Отбор, КомандаПечати);
			НайденныеКоманды = КомандыПечати.НайтиСтроки(Отбор);
			КомандаПечати.ТипыОбъектовПечати.Добавить(Тип("ДокументСсылка.ОтчетОРозничнойВыручке"));
			Если НайденныеКоманды.Количество() = 0 Тогда
				ЗаполнитьЗначенияСвойств(КомандыПечати.Добавить(), КомандаПечати);
			Иначе
				Для каждого КомандаПечати Из НайденныеКоманды Цикл
					КомандаПечати.ТипыОбъектовПечати.Добавить(Тип("ДокументСсылка.ОтчетОРозничнойВыручке"));
				КонецЦикла; 
			КонецЕсли;
		КонецЦикла;
		
		ДополнительныеОтчетыИОбработки.ПриПолученииКомандПечати(КомандыПечати, "Документ.ОтчетОРозничныхПродажах");
		ДополнительныеОтчетыИОбработки.ПриПолученииКомандПечати(КомандыПечати, "Документ.ОтчетОРозничнойВыручке");

	КонецЕсли;
	
КонецПроцедуры

// Дополнительные настройки списка команд печати.
//
// Параметры:
//  НастройкиСписка - Структура - модификаторы списка команд печати.
//   * МенеджерКомандПечати     - МенеджерОбъекта - менеджер объекта, в котором формируется список команд печати;
//   * АвтоматическоеЗаполнение - Булево - заполнять команды печати из объектов, входящих в состав журнала.
//                                         Значение по умолчанию: Истина.
//
Процедура ПриПолученииНастроекСпискаКомандПечати(НастройкиСписка) Экспорт
	
КонецПроцедуры

// Определяет объекты, в которых есть процедура ДобавитьКомандыПечати().
//
// Параметры:
//  СписокОбъектов - Массив - список менеджеров объектов.
//
Процедура ПриОпределенииОбъектовСКомандамиПечати(СписокОбъектов) Экспорт
	
	
	
	СписокОбъектов.Добавить(Справочники.ВариантыГрафиковКредитовИДепозитов);
	СписокОбъектов.Добавить(Справочники.ГорячиеКлавиши);
	СписокОбъектов.Добавить(Справочники.ГруппыАналитическогоУчетаНоменклатуры);
	СписокОбъектов.Добавить(Справочники.ГруппыФинансовогоУчетаНоменклатуры);
	СписокОбъектов.Добавить(Справочники.ДоговорыКонтрагентов);
	СписокОбъектов.Добавить(Справочники.ДоговорыКредитовИДепозитов);
	СписокОбъектов.Добавить(Справочники.КартыЛояльности);
	СписокОбъектов.Добавить(Справочники.Контрагенты);
	СписокОбъектов.Добавить(Справочники.Номенклатура);
	СписокОбъектов.Добавить(Справочники.ОбластиХранения);
	СписокОбъектов.Добавить(Справочники.Организации);
	СписокОбъектов.Добавить(Справочники.Партнеры);
	СписокОбъектов.Добавить(Справочники.ПодарочныеСертификаты);
	СписокОбъектов.Добавить(Справочники.ПравилаОбменаСПодключаемымОборудованиемOffline);
	СписокОбъектов.Добавить(Справочники.ПретензииКлиентов);
	СписокОбъектов.Добавить(Справочники.РабочиеУчастки);
	СписокОбъектов.Добавить(Справочники.СделкиСКлиентами);
	СписокОбъектов.Добавить(Справочники.СертификатыНоменклатуры);
	СписокОбъектов.Добавить(Справочники.СкладскиеПомещения);
	СписокОбъектов.Добавить(Справочники.СкладскиеЯчейки);
	СписокОбъектов.Добавить(Справочники.Склады);
	СписокОбъектов.Добавить(Справочники.СоглашенияСКлиентами);
	СписокОбъектов.Добавить(Справочники.СоглашенияСПоставщиками);
	СписокОбъектов.Добавить(Справочники.ФизическиеЛица);
	СписокОбъектов.Добавить(Документы.АвансовыйОтчет);
	СписокОбъектов.Добавить(Документы.АктВыполненныхРабот);
	СписокОбъектов.Добавить(Документы.АктОРасхожденияхПослеОтгрузки);
	СписокОбъектов.Добавить(Документы.АктОРасхожденияхПослеПеремещения);
	СписокОбъектов.Добавить(Документы.АктОРасхожденияхПослеПриемки);
	СписокОбъектов.Добавить(Документы.ВводОстатков);
	СписокОбъектов.Добавить(Документы.ВзаимозачетЗадолженности);
	СписокОбъектов.Добавить(Документы.ВнесениеДенежныхСредствВКассуККМ);
	СписокОбъектов.Добавить(Документы.ВнутреннееПотреблениеТоваров);
	СписокОбъектов.Добавить(Документы.ВозвратПодарочныхСертификатов);
	СписокОбъектов.Добавить(Документы.ВозвратТоваровМеждуОрганизациями);
	СписокОбъектов.Добавить(Документы.ВозвратТоваровОтКлиента);
	СписокОбъектов.Добавить(Документы.ВозвратТоваровПоставщику);
	СписокОбъектов.Добавить(Документы.ВыемкаДенежныхСредствИзКассыККМ);
	СписокОбъектов.Добавить(Документы.ВыкупВозвратнойТарыКлиентом);
	СписокОбъектов.Добавить(Документы.ДоверенностьВыданная);
	СписокОбъектов.Добавить(Документы.ЗаданиеНаПеревозку);
	СписокОбъектов.Добавить(Документы.ЗаданиеТорговомуПредставителю);
	СписокОбъектов.Добавить(Документы.ЗаказКлиента);
	СписокОбъектов.Добавить(Документы.ЗаказНаВнутреннееПотребление);
	СписокОбъектов.Добавить(Документы.ЗаказНаПеремещение);
	СписокОбъектов.Добавить(Документы.ЗаказНаСборку);
	СписокОбъектов.Добавить(Документы.ЗаказПоставщику);
	СписокОбъектов.Добавить(Документы.ЗаявкаНаВозвратТоваровОтКлиента);
	СписокОбъектов.Добавить(Документы.ЗаявкаНаРасходованиеДенежныхСредств);
	СписокОбъектов.Добавить(Документы.ИзменениеАссортимента);
	СписокОбъектов.Добавить(Документы.ИнвентаризационнаяОпись);
	СписокОбъектов.Добавить(Документы.ИнвентаризацияНаличныхДенежныхСредств);
	СписокОбъектов.Добавить(Документы.КассоваяСмена);
	СписокОбъектов.Добавить(Документы.КоммерческоеПредложениеКлиенту);
	СписокОбъектов.Добавить(Документы.КорректировкаПоОрдеруНаТовары);
	СписокОбъектов.Добавить(Документы.КорректировкаРегистров);
	СписокОбъектов.Добавить(Документы.ЛимитыРасходаДенежныхСредств);
	СписокОбъектов.Добавить(Документы.ЛистКассовойКниги);
	СписокОбъектов.Добавить(Документы.НормативРаспределенияПлановПродажПоКатегориям);
	СписокОбъектов.Добавить(Документы.ОжидаемоеПоступлениеДенежныхСредств);
	СписокОбъектов.Добавить(Документы.ОперацияПоПлатежнойКарте);
	СписокОбъектов.Добавить(Документы.ОприходованиеИзлишковТоваров);
	СписокОбъектов.Добавить(Документы.ОрдерНаОтражениеИзлишковТоваров);
	СписокОбъектов.Добавить(Документы.ОрдерНаОтражениеНедостачТоваров);
	СписокОбъектов.Добавить(Документы.ОрдерНаОтражениеПорчиТоваров);
	СписокОбъектов.Добавить(Документы.ОрдерНаПеремещениеТоваров);
	СписокОбъектов.Добавить(Документы.ОтборРазмещениеТоваров);
	СписокОбъектов.Добавить(Документы.ОтражениеРасхожденийПриИнкассацииДенежныхСредств);
	СписокОбъектов.Добавить(Документы.ОтчетБанкаПоОперациямЭквайринга);
	СписокОбъектов.Добавить(Документы.ОтчетКомиссионера);
	СписокОбъектов.Добавить(Документы.ОтчетКомиссионераОСписании);
	СписокОбъектов.Добавить(Документы.ОтчетКомитенту);
	СписокОбъектов.Добавить(Документы.ОтчетКомитентуОСписании);
	СписокОбъектов.Добавить(Документы.ОтчетОРозничныхПродажах);
	СписокОбъектов.Добавить(Документы.ОтчетПоКомиссииМеждуОрганизациями);
	СписокОбъектов.Добавить(Документы.ОтчетПоКомиссииМеждуОрганизациямиОСписании);
	СписокОбъектов.Добавить(Документы.ПередачаТоваровМеждуОрганизациями);
	СписокОбъектов.Добавить(Документы.ПеремещениеТоваров);
	СписокОбъектов.Добавить(Документы.ПересортицаТоваров);
	СписокОбъектов.Добавить(Документы.ПересчетТоваров);
	СписокОбъектов.Добавить(Документы.ПланЗакупок);
	СписокОбъектов.Добавить(Документы.ПланПродаж);
	СписокОбъектов.Добавить(Документы.ПланПродажПоКатегориям);
	СписокОбъектов.Добавить(Документы.ПланСборкиРазборки);
	СписокОбъектов.Добавить(Документы.ПорчаТоваров);
	СписокОбъектов.Добавить(Документы.ПоступлениеБезналичныхДенежныхСредств);
	СписокОбъектов.Добавить(Документы.ПоступлениеТоваровУслуг);
	СписокОбъектов.Добавить(Документы.ПоступлениеУслугПрочихАктивов);
	СписокОбъектов.Добавить(Документы.ПриходныйКассовыйОрдер);
	СписокОбъектов.Добавить(Документы.ПриходныйОрдерНаТовары);
	СписокОбъектов.Добавить(Документы.ПрочееОприходованиеТоваров);
	СписокОбъектов.Добавить(Документы.РаспоряжениеНаПеремещениеДенежныхСредств);
	СписокОбъектов.Добавить(Документы.РаспределениеДоходовИРасходовПоНаправлениямДеятельности);
	СписокОбъектов.Добавить(Документы.КорректировкаНалоговогоНазначенияЗапасов);
	СписокОбъектов.Добавить(Документы.РаспределениеРасходовБудущихПериодов);
	СписокОбъектов.Добавить(Документы.РасходныйКассовыйОрдер);
	СписокОбъектов.Добавить(Документы.РасходныйОрдерНаТовары);
	СписокОбъектов.Добавить(Документы.РасчетСебестоимостиТоваров);
	СписокОбъектов.Добавить(Документы.РеализацияПодарочныхСертификатов);
	СписокОбъектов.Добавить(Документы.РеализацияТоваровУслуг);
	СписокОбъектов.Добавить(Документы.РеализацияУслугПрочихАктивов);
	СписокОбъектов.Добавить(Документы.РегистрацияЦенНоменклатурыПоставщика);
	СписокОбъектов.Добавить(Документы.СборкаТоваров);
	СписокОбъектов.Добавить(Документы.СверкаВзаиморасчетов);
	СписокОбъектов.Добавить(Документы.СписаниеБезналичныхДенежныхСредств);
	СписокОбъектов.Добавить(Документы.СписаниеЗадолженности);
	СписокОбъектов.Добавить(Документы.СписаниеНедостачТоваров);
	СписокОбъектов.Добавить(Документы.СчетНаОплатуКлиенту);
	СписокОбъектов.Добавить(Документы.ТаможеннаяДекларацияИмпорт);
	СписокОбъектов.Добавить(Документы.ТранспортнаяНакладная);
	СписокОбъектов.Добавить(Документы.УпаковочныйЛист);
	СписокОбъектов.Добавить(Документы.УстановкаБлокировокЯчеек);
	СписокОбъектов.Добавить(Документы.УстановкаКвотАссортимента);
	СписокОбъектов.Добавить(Документы.УстановкаЦенНоменклатуры);
	СписокОбъектов.Добавить(Документы.ЧекККМ);
	СписокОбъектов.Добавить(Документы.ЧекККМВозврат);
	СписокОбъектов.Добавить(Обработки.ПечатьЗаданияНаОтборРазмещениеТоваров);
	СписокОбъектов.Добавить(Обработки.РабочееМестоМенеджераПоДоставке);
	СписокОбъектов.Добавить(Обработки.СамообслуживаниеПартнеров);
	СписокОбъектов.Добавить(Обработки.УправлениеОтгрузкой);
	СписокОбъектов.Добавить(Обработки.УправлениеПереданнойВозвратнойТарой);
	СписокОбъектов.Добавить(Обработки.УправлениеПоступлением);
	
КонецПроцедуры

// Вызывается после завершения вызова процедуры Печать менеджера печати объекта, имеет те же параметры.
// 
// Параметры:
//  МассивОбъектов - Массив - список объектов, для которых была выполнена процедура Печать;
//  ПараметрыПечати - Структура - произвольные параметры, переданные при вызове команды печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - содержит табличные документы и дополнительную информацию;
//  ОбъектыПечати - СписокЗначений - соответствие между объектами и именами областей в табличных документах, где
//                                   значение - Объект, представление - имя области с объектом в табличных документах;
//  ПараметрыВывода - Структура - параметры, связанные с выводом табличных документов:
//   * ПараметрыОтправки - Структура - информация для заполнения письма при отправке печатной формы по электронной почте.
//                                     Содержит следующие поля (описание см. в общем модуле конфигурации
//                                     РаботаСПочтовымиСообщениямиКлиент в процедуре СоздатьНовоеПисьмо):
//    ** Получатель;
//    ** Тема,
//    ** Текст.
Процедура ПриПечати(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
	
КонецПроцедуры

// Переопределяет параметры отправки печатных форм при подготовке письма.
// 
// Параметры:
//
//  ПараметрыОтправки
//    * Получатель - Массив
//    * Тема - Строка
//    * Текст - Строка
//    * Вложения - Структура:
//      ** АдресВоВременномХранилище - Строка
//      ** Представление - Строка - имя файла.
//  ОбъектыПечати - Массив - параметр МассивСсылок в вызове процедуры Печать
//  ПараметрыВывода - Структура - параметр ПараметрыВывода в вызове процедуры Печать
//  ПечатныеФормы - ТаблицаЗначений - коллекция табличных документов:
//    * Название - Строка - название печатной формы;
//    * ТабличныйДокумент - ТабличныйДокумент - печатая форма.
Процедура ПередОтправкойПоПочте(ПараметрыОтправки, ПараметрыВывода, ОбъектыПечати, ПечатныеФормы) Экспорт
	
КонецПроцедуры

#КонецОбласти
