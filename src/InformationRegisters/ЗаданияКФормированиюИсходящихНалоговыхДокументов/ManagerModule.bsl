#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

//Метод возвращает значение константы "Номер задания",
//считанной при разделяемой блокировке
Функция ПолучитьНомерЗадания() Экспорт
	НачатьТранзакцию();
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("Константа.НомерЗаданияКФормированиюИсходящихНалоговыхДокументов");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
	Блокировка.Заблокировать();
	НомерЗадания = Константы.НомерЗаданияКФормированиюИсходящихНалоговыхДокументов.Получить();
	
	ЗафиксироватьТранзакцию();
	
	Возврат НомерЗадания;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция КоличествоНеактуальныхДокументов(НачалоРасчета, КонецРасчета, АналитикиРасчета = Неопределено) Экспорт
	Запрос = Новый Запрос("
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		КОЛИЧЕСТВО(Расчеты.Регистратор) КАК Количество
	|	ИЗ
	|		РегистрНакопления.НДСНоменклатурныйСоставДляНалоговыхНакладных КАК Расчеты
	|	ГДЕ
	|		Расчеты.Период МЕЖДУ &НачалоРасчета И &КонецРасчета
	|		И (Расчеты.АналитикаУчетаПоПартнерам В (&АналитикиРасчета)
	|			ИЛИ Расчеты.АналитикаУчетаПоПартнерам = ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка)
	|			ИЛИ &ПоВсемАналитикам)
	|");
	
	Запрос.УстановитьПараметр("НачалоРасчета", НачалоРасчета);
	Запрос.УстановитьПараметр("КонецРасчета", КонецРасчета);
	Запрос.УстановитьПараметр("АналитикиРасчета", АналитикиРасчета);
	Запрос.УстановитьПараметр("ПоВсемАналитикам", НЕ Значениезаполнено(АналитикиРасчета));
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		КоличествоДокументов = 0;
	Иначе
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		КоличествоДокументов = Выборка.Количество;
	КонецЕсли;
	Возврат КоличествоДокументов;
КонецФункции

#Область ОбновлениеИнформационнойБазы


// Обработчик обновления BAS УТ 3.3.2
// Производится перенос неактуальных границ последовательности "Формирование исходящих налоговых документов" в регистр заданий.
Процедура ПеренестиГраницыФормированиеИсходящихНалоговыхДокументов() Экспорт
    
    Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Границы.Период, ДЕНЬ) КАК День,
	|	РегистрыНДС.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	РегистрыНДС.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Границы.Регистратор КАК Документ,
    |	РегистрыНДС.КодОтслеживаемогоРегистра КАК КодОтслеживаемогоРегистра
	|ИЗ
	|	(ВЫБРАТЬ 
    |       НДСНоменклатурныйСоставДляНалоговыхНакладных.Период КАК Период,
    |       НДСНоменклатурныйСоставДляНалоговыхНакладных.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
    |       НДСНоменклатурныйСоставДляНалоговыхНакладных.ОбъектРасчетов КАК ОбъектРасчетов,
    |       1 КАК КодОтслеживаемогоРегистра
    |   ИЗ 
    |       РегистрНакопления.НДСНоменклатурныйСоставДляНалоговыхНакладных КАК НДСНоменклатурныйСоставДляНалоговыхНакладных
    |
    |   ОБЪЕДИНИТЬ ВСЕ    
    |
	|	ВЫБРАТЬ 
    |       НДСРасчетНалоговыхОбязательств.Период КАК Период,
    |       НДСРасчетНалоговыхОбязательств.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
    |       НДСРасчетНалоговыхОбязательств.ОбъектРасчетов КАК ОбъектРасчетов,
    |       2 КАК КодОтслеживаемогоРегистра
    |   ИЗ 
    |       РегистрНакопления.НДСРасчетНалоговыхОбязательств КАК НДСРасчетНалоговыхОбязательств
	|	) КАК РегистрыНДС
	|	    ВНУТРЕННЕЕ СОЕДИНЕНИЕ Последовательность.УДАЛИТЬФормированиеИсходящихНалоговыхДокументов.Границы КАК Границы
	|	    ПО РегистрыНДС.АналитикаУчетаПоПартнерам = Границы.АналитикаУчетаПоПартнерам
	|		    И НАЧАЛОПЕРИОДА(Границы.Период, ДЕНЬ) <> ДАТАВРЕМЯ(1,1,1)
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(Границы.Период, ДЕНЬ),
	|	РегистрыНДС.АналитикаУчетаПоПартнерам,
	|	РегистрыНДС.ОбъектРасчетов,
	|	Границы.Регистратор,
    |   РегистрыНДС.КодОтслеживаемогоРегистра
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ЕСТЬNULL(Границы.Период, ДАТАВРЕМЯ(1,1,1))) <= МАКСИМУМ(РегистрыНДС.Период)
	|");
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
        
        НачатьТранзакцию();
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Константа.НомерЗаданияКФормированиюИсходящихНалоговыхДокументов");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
		Блокировка.Заблокировать();
		
		НаборЗаписей = РегистрыСведений.ЗаданияКФормированиюИсходящихНалоговыхДокументов.СоздатьНаборЗаписей();
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
            
            Если Не ЗначениеЗаполнено(Выборка.День) Тогда
				Продолжить;
            КонецЕсли;
            
			Задание = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(Задание, Выборка);
            
			Если ТипЗнч(Выборка.Документ) = Тип("ДокументСсылка.Приложение2КНалоговойНакладной") Тогда
				БазовыйДокумент = НДСИсходящийКлиентСервер.ПолучитьБазовыйНалоговыйДокументДляП2(Выборка.Документ);
				Если НЕ БазовыйДокумент = Неопределено Тогда
					НаборЗаписей.День = НачалоДня(БазовыйДокумент.Дата);
				КонецЕсли;
			КонецЕсли;
            
            Задание.НомерЗадания = Константы.НомерЗаданияКФормированиюИсходящихНалоговыхДокументов.Получить();
            
		КонецЦикла;
        
        ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей);
		ЗафиксироватьТранзакцию();
        
	КонецЕсли;
КонецПроцедуры

Процедура ЗаменитьАналитикуУчетаПоПартнерам_ДанныеДляОбновления(Параметры) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Задания.День                                         КАК День,
	|	Задания.НомерЗадания                                 КАК НомерЗадания,
	|	Задания.АналитикаУчетаПоПартнерам                    КАК АналитикаУчетаПоПартнерам,
	|	Задания.ОбъектРасчетов                               КАК ОбъектРасчетов,
	|	Задания.Документ                                     КАК Документ,
    |	Задания.КодОтслеживаемогоРегистра                    КАК КодОтслеживаемогоРегистра
	|ИЗ
	|	РегистрСведений.ЗаданияКФормированиюИсходящихНалоговыхДокументов КАК Задания
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРегистра
	|		ПО Задания.АналитикаУчетаПоПартнерам = АналитикаРегистра.КлючАналитики
	|			И (АналитикаРегистра.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК Договоры
	|		ПО (Договоры.Ссылка = 
	|				ВЫБОР КОГДА Задания.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ТОГДА Задания.ОбъектРасчетов
	|				ИНАЧЕ Задания.ОбъектРасчетов.Договор
	|			КОНЕЦ)
	|ГДЕ
	|	НЕ Договоры.Ссылка ЕСТЬ NULL");
	
	СтруктураОтбора = Новый Структура("День, НомерЗадания, АналитикаУчетаПоПартнерам, ОбъектРасчетов, Документ, КодОтслеживаемогоРегистра");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, Выборка);
		
		НаборЗаписей = РегистрыСведений.ЗаданияКФормированиюИсходящихНалоговыхДокументов.СоздатьНаборЗаписей();
		Для Каждого ТекОтбор Из СтруктураОтбора Цикл
			НаборЗаписей.Отбор[ТекОтбор.Ключ].Установить(ТекОтбор.Значение);
		КонецЦикла;
		
		ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, НаборЗаписей);
		
	КонецЦикла;
	
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.2
// Производит замену измерения "АналитикаУчетаПоПартнерам" с учетом договора в измерении "ОбъектРасчетов".
Процедура ЗаменитьАналитикуУчетаПоПартнерам(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрСведений.ЗаданияКФормированиюИсходящихНалоговыхДокументов";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
    
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуИзмеренийНезависимогоРегистраСведенийДляОбработки(
		Параметры.Очередь,
		ПолноеИмяРегистра,
		МенеджерВременныхТаблиц
    );
		
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ 
	|	Задания.День КАК День,
	|	Задания.НомерЗадания КАК НомерЗадания,
	|	Задания.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Задания.ОбъектРасчетов КАК ОбъектРасчетов,
	|	Задания.Документ КАК Документ,
    |	Задания.КодОтслеживаемогоРегистра КАК КодОтслеживаемогоРегистра,
	|	АналитикаРегистра.Партнер КАК Партнер,
	|	АналитикаРегистра.Организация КАК Организация,
	|	АналитикаРегистра.Контрагент КАК Контрагент,
	|	АналитикаРегистра.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Договоры.Ссылка КАК Договор,
	|	ЕСТЬNULL(НоваяАналитика.КлючАналитики, НЕОПРЕДЕЛЕНО) КАК КлючНовойАналитики
	|ИЗ
	|	РегистрСведений.ЗаданияКФормированиюИсходящихНалоговыхДокументов КАК Задания
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляОбработки КАК ДляОбработки
	|			ПО Задания.День = ДляОбработки.День
	|				И Задания.НомерЗадания = ДляОбработки.НомерЗадания
	|				И Задания.АналитикаУчетаПоПартнерам = ДляОбработки.АналитикаУчетаПоПартнерам
	|				И Задания.ОбъектРасчетов = ДляОбработки.ОбъектРасчетов
	|				И Задания.Документ = ДляОбработки.Документ
	|				И Задания.КодОтслеживаемогоРегистра = ДляОбработки.КодОтслеживаемогоРегистра
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРегистра
	|		ПО Задания.АналитикаУчетаПоПартнерам = АналитикаРегистра.КлючАналитики
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК Договоры
	|		ПО (Договоры.Ссылка = ВЫБОР
	|				КОГДА Задания.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ТОГДА Задания.ОбъектРасчетов
	|				ИНАЧЕ Задания.ОбъектРасчетов.Договор
	|			КОНЕЦ)
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК НоваяАналитика
	|		ПО (АналитикаРегистра.Партнер = НоваяАналитика.Партнер)
	|			И (АналитикаРегистра.Организация = НоваяАналитика.Организация)
	|			И (АналитикаРегистра.Контрагент = НоваяАналитика.Контрагент)
	|			И АналитикаРегистра.НаправлениеДеятельности = НоваяАналитика.НаправлениеДеятельности
	|			И (Договоры.Ссылка = НоваяАналитика.Договор)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|	ДляОбработки.День                 		КАК День,
	|	ДляОбработки.НомерЗадания				КАК НомерЗадания,
	|	ДляОбработки.АналитикаУчетаПоПартнерам  КАК АналитикаУчетаПоПартнерам,
	|	ДляОбработки.ОбъектРасчетов             КАК ОбъектРасчетов,
	|	ДляОбработки.Документ                   КАК Документ,
    |	ДляОбработки.КодОтслеживаемогоРегистра  КАК КодОтслеживаемогоРегистра
	|ИЗ 
	|	ВТДляОбработки КАК ДляОбработки
    |");
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Результат = Запрос.ВыполнитьПакет();	
	КоличествоЗапросов = Результат.ВГраница();

	ТаблицаАналитик = Результат[КоличествоЗапросов-1].Выгрузить();
	Для Каждого СтрокаАналитики Из ТаблицаАналитик Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаАналитики.КлючНовойАналитики) Тогда
			НоваяАналитика = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтрокаАналитики);
			СтрокаАналитики.КлючНовойАналитики = НоваяАналитика;
		КонецЕсли;
	КонецЦикла;
	
	СтруктураОтбора = Новый Структура("День, НомерЗадания, АналитикаУчетаПоПартнерам, ОбъектРасчетов, Документ, КодОтслеживаемогоРегистра");
	
	Выборка = Результат[1].Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра);
			ЭлементБлокировки.УстановитьЗначение("День",   				      Выборка.День);
			ЭлементБлокировки.УстановитьЗначение("НомерЗадания", 			  Выборка.НомерЗадания);
			ЭлементБлокировки.УстановитьЗначение("АналитикаУчетаПоПартнерам", Выборка.АналитикаУчетаПоПартнерам);
			ЭлементБлокировки.УстановитьЗначение("ОбъектРасчетов",            Выборка.ОбъектРасчетов);
			ЭлементБлокировки.УстановитьЗначение("Документ",          		  Выборка.Документ);
            ЭлементБлокировки.УстановитьЗначение("КодОтслеживаемогоРегистра", Выборка.КодОтслеживаемогоРегистра);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
		Исключение
			
			Отказ = Истина;
			ОтменитьТранзакцию();
			Продолжить;
			
		КонецПопытки;
				
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, Выборка);
		
		// Отмечаем обработку
		НаборЗаписей = РегистрыСведений.ЗаданияКФормированиюИсходящихНалоговыхДокументов.СоздатьНаборЗаписей();
		
		Для Каждого ТекОтбор Из СтруктураОтбора Цикл
			НаборЗаписей.Отбор[ТекОтбор.Ключ].Установить(ТекОтбор.Значение);
		КонецЦикла;
		
		ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей,,Параметры.Очередь);
		
		НаборЗаписей.Прочитать();	
		Записи = НаборЗаписей.Выгрузить();
		НаборЗаписей.Очистить();
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
		
		//Создаем записи
		НаборЗаписей = РегистрыСведений.ЗаданияКФормированиюИсходящихНалоговыхДокументов.СоздатьНаборЗаписей();
		
		Для Каждого ТекОтбор Из СтруктураОтбора Цикл
			Если НЕ ТекОтбор.Ключ = "АналитикаУчетаПоПартнерам" Тогда
				НаборЗаписей.Отбор[ТекОтбор.Ключ].Установить(ТекОтбор.Значение);
			КонецЕсли;
		КонецЦикла;
		
		Для каждого ЗаписьНабора Из Записи Цикл
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, СтруктураОтбора);
			
			Если ЗначениеЗаполнено(ЗаписьНабора.АналитикаУчетаПоПартнерам) Тогда
					
				СтруктураОтбора.Вставить("АналитикаУчетаПоПартнерам", ЗаписьНабора.АналитикаУчетаПоПартнерам);
				МассивСтрок = ТаблицаАналитик.НайтиСтроки(СтруктураОтбора);
					
				НоваяЗапись.АналитикаУчетаПоПартнерам = МассивСтрок[0].КлючНовойАналитики;
				
			КонецЕсли;
		
		КонецЦикла;
		
		Попытка
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);

			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru='Не удалось дополнить аналитику по партнерам договором при обработке регистра сведений ""Задания к формированию исходящих налоговых документов"" по причине: %Причина%';uk='Не вдалося доповнити аналітику за партнерам договором при обробці регістра відомостей ""Завдання до формування вихідних податкових документів"" з причини: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
                ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
                УровеньЖурналаРегистрации.Предупреждение,
				, 
                , 
                ТекстСообщения
            );
            
            ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(
        Параметры.Очередь, 
        ПолноеИмяРегистра
    );
	
КонецПроцедуры


#КонецОбласти

#КонецОбласти

#КонецЕсли