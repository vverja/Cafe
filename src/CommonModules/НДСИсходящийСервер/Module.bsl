
#Область ОбработкаДвиженийПоРегистрамУчетаНДС

Процедура ОтразитьНДСНоменклатурныйСоставДляНалоговыхНакладных(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладных;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОтменаПроверкиИзменений = ?(ДополнительныеСвойства.Свойство("ЭтоАвтоформирование"), ДополнительныеСвойства.ЭтоАвтоформирование, Ложь);
	
	Движения.НДСНоменклатурныйСоставДляНалоговыхНакладных.ДополнительныеСвойства.Вставить("ОтменаПроверкиИзменений", ОтменаПроверкиИзменений);
	Движения.НДСНоменклатурныйСоставДляНалоговыхНакладных.Записывать = Истина;
	Движения.НДСНоменклатурныйСоставДляНалоговыхНакладных.Загрузить(Таблица);

КонецПроцедуры

Процедура ОтразитьНДСРасчетНалоговыхОбязательств(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаНДСРасчетНалоговыхОбязательств;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.НДСРасчетНалоговыхОбязательств.Записывать = Истина;
	Движения.НДСРасчетНалоговыхОбязательств.Загрузить(Таблица);

КонецПроцедуры

Процедура ОтразитьНДСРеестрВыданныхНалоговыхДокументов(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаНДСРеестрВыданныхНалоговыхДокументов;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.НДСРеестрВыданныхНалоговыхДокументов.Записывать = Истина;
	Движения.НДСРеестрВыданныхНалоговыхДокументов.Загрузить(Таблица);

КонецПроцедуры

Процедура ОтразитьНДСУсловныеПродажи(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаНДСУсловныеПродажи;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.НДСУсловныеПродажи.Записывать = Истина;
	Движения.НДСУсловныеПродажи.Загрузить(Таблица);

КонецПроцедуры



Процедура ЗаполнитьРегистрЗаданияКРасчетуНалоговыхОбязательствДополнительно(ДокументСсылка, Отказ)
	
	Если Отказ ИЛИ (НЕ ПланыОбмена.ГлавныйУзел() = Неопределено) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	НДСНачальныеПериоды.ДокументПоставки КАК Документ,
				   |	НАЧАЛОПЕРИОДА(НДСНачальныеПериоды.Дата, День) КАК День,
	               |	НДСНачальныеПериоды.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	               |ИЗ
	               |	РегистрСведений.НДСНачальныеПериодыНОДляДокументовПоставки КАК НДСНачальныеПериоды
	               |ГДЕ
	               |	НДСНачальныеПериоды.ДокументПоставки = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("Константа.НомерЗаданияКРасчетуНалоговыхОбязательствДополнительно");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
		Блокировка.Заблокировать();
		
		НаборЗаписей = РегистрыСведений.ЗаданияКРасчетуНалоговыхОбязательствДополнительно.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(НаборЗаписей, Выборка);
		НаборЗаписей.НомерЗадания = Константы.НомерЗаданияКРасчетуНалоговыхОбязательствДополнительно.Получить();
		НаборЗаписей.Записать();
		
		НаборЗаписейКУдалению = РегистрыСведений.НДСНачальныеПериодыНОДляДокументовПоставки.СоздатьМенеджерЗаписи();
		НаборЗаписейКУдалению.ДокументПоставки = ДокументСсылка;
		НаборЗаписейКУдалению.Удалить();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДокументПоставкиОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт
	
	ЗаполнитьРегистрЗаданияКРасчетуНалоговыхОбязательствДополнительно(Источник.Ссылка, Отказ);
	
КонецПроцедуры

Процедура ДокументПоставкиОбработкаУдаленияПроведения(Источник, Отказ, РежимПроведения) Экспорт
	
	ЗаполнитьРегистрЗаданияКРасчетуНалоговыхОбязательствДополнительно(Источник.Ссылка, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс


#КонецОбласти

#Область НастройкиУчетаНДС

// Функция возвращает момент определения базы НДС по переданным параметрам
//
Функция ОпределитьМоментОпределенияБазыНДС(ВидПоставки, ХозяйственнаяОперация, ВалютаДокумента, Организация, ДоговорКонтрагента = Неопределено) Экспорт
	
	// Данные договора могут быть использованы только в случае когда валюта взаиморасчетов указанная в документах
	// совпадает с валютой договора. Для входящего НДС автоматизированны только операции в гривнах. Соответственно
	// анализируются только гривневые договора
	Договор = Неопределено;
	Если ЗначениеЗаполнено(ДоговорКонтрагента)
	   И ДоговорКонтрагента.ВалютаВзаиморасчетов = ВалютаДокумента Тогда
		Договор = ДоговорКонтрагента;
	КонецЕсли;
	
	ЭтоКомиссия = (ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию) ИЛИ                   // РеализацияТоваровУслуг
	              (ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера) ИЛИ                // ВозвратТоваровОтКлиента
	              (ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию) ИЛИ // ПередачаТоваровМеждуОрганизациями
	              (ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями) ИЛИ  // ВозвратТоваровМеждуОрганизациями
	              (ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтчетКомиссионера);                       // ОтчетКомиссионера, ОтчетПоКомиссииМеждуОрганизациями
				  
	Если ЗначениеЗаполнено(ВидПоставки) Тогда
		
		Если ВидПоставки = Перечисления.ВидыПоставки.ВводОстатков Тогда
			
			Возврат Перечисления.МоментыОпределенияНалоговойБазы.ПоПервомуСобытию;
			
		ИначеЕсли ЭтоКомиссия Тогда
			
			Возврат Перечисления.МоментыОпределенияНалоговойБазы.ПоПервомуСобытию; // Авансы не автоматизированы
			  
		ИначеЕсли ВидПоставки = Перечисления.ВидыПоставки.Розница
			  ИЛИ ВидПоставки = Перечисления.ВидыПоставки.РозницаВозврат Тогда
			  
			Возврат Перечисления.МоментыОпределенияНалоговойБазы.ПоПервомуСобытию;
			
		ИначеЕсли ВидПоставки = Перечисления.ВидыПоставки.Поставка
		      ИЛИ ВидПоставки = Перечисления.ВидыПоставки.Возврат Тогда
		 
			Если ЗначениеЗаполнено(Договор) Тогда
				Возврат Договор.МоментОпределенияБазыНДС;
			Иначе
				Если ВалютаДокумента <> Константы.ВалютаРегламентированногоУчета.Получить() Тогда
					Возврат Организация.МоментОпределенияБазыНДСПоЭкспорту;
				Иначе
					Возврат Организация.МоментОпределенияБазыНДСПоПродажам;
				КонецЕсли;
			КонецЕсли;
						
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Неопределено;
		
КонецФункции

Функция ОпределитьНомеклатуруЗаполненияНалоговыхНаАванс(Организация, ДоговорКонтрагента = Неопределено, Кеш = Неопределено) Экспорт
	
	Если Кеш = Неопределено Тогда
		Кеш = Новый Структура("ПоОрганизациям, ПоДоговорам", Новый Соответствие, Новый Соответствие);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		НайденноеЗначение = Кеш.ПоДоговорам[ДоговорКонтрагента];
		Если ЗначениеЗаполнено(НайденноеЗначение) Тогда
			Возврат НайденноеЗначение;
		КонецЕсли;
		
		НайденноеЗначение = ДоговорКонтрагента.НоменклатураЗаполненияНалоговыхНаАванс;
		Если ЗначениеЗаполнено(НайденноеЗначение) Тогда
			Кеш.ПоДоговорам[ДоговорКонтрагента] = НайденноеЗначение;
			Возврат НайденноеЗначение;
		КонецЕсли;
		
	КонецЕсли;
	
	НайденноеЗначение = Кеш.ПоОрганизациям[Организация];
	Если ЗначениеЗаполнено(НайденноеЗначение) Тогда
		Возврат НайденноеЗначение;
	КонецЕсли;
		
	НайденноеЗначение = Организация.НоменклатураЗаполненияНалоговыхНаАванс;
	Если ЗначениеЗаполнено(НайденноеЗначение) Тогда
		Кеш.ПоОрганизациям[Организация] = НайденноеЗначение;
		
		Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
			Кеш.ПоДоговорам[ДоговорКонтрагента] = НайденноеЗначение;			
		КонецЕсли;
		
		Возврат НайденноеЗначение;
	КонецЕсли;
	
	ТекстСсобщения = НСтр("ru='Формирование налоговых документов прервано с ошибкой';uk='Формування податкових документів перервано з помилкою'") + Символы.ПС 
		           + НСтр("ru='В настройках учета НДС организации ""';uk='У настройках обліку ПДВ організації ""'")
		           + Строка(Организация) 
				   + НСтр("ru='"" не определена номенклатура для заполнения налоговых на аванс';uk='"" не визначена номенклатура для заповнення податкових на аванс'");
				   
	ВызватьИсключение ТекстСсобщения;
			
КонецФункции

Функция ОпределитьОбособленноеПодразделениеПоУмолчанию(Организация, ДоговорКонтрагента = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		НайденноеЗначение = ДоговорКонтрагента.ОбособленноеПодразделениеПоУмолчанию;
		Если ЗначениеЗаполнено(НайденноеЗначение) Тогда
			Возврат НайденноеЗначение;
		КонецЕсли;
	КонецЕсли;
	
	НайденноеЗначение = Организация.ОбособленноеПодразделениеПоУмолчанию;
	Если ЗначениеЗаполнено(НайденноеЗначение) Тогда
		Возврат НайденноеЗначение;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ОпределитьОтветственногоЗаВыпискуНалоговыхДокументов(Организация, ДоговорКонтрагента = Неопределено, Кеш = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		НайденноеЗначение = ДоговорКонтрагента.ОтветственныйЗаВыпискуНалоговыхДокументов;
		Если ЗначениеЗаполнено(НайденноеЗначение) Тогда
			Возврат НайденноеЗначение;
		КонецЕсли;
		
	КонецЕсли;
		
	НайденноеЗначение = Организация.ОтветственныйЗаВыпискуНалоговыхДокументов;
	Если ЗначениеЗаполнено(НайденноеЗначение) Тогда
		Возврат НайденноеЗначение;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

#КонецОбласти

#Область ФормированиеНалоговыхДокументовПоНалоговымОбязательствам_НН_и_П2

Процедура СформироватьНалоговыеДокументыЧерезРегламентированноеЗадание() Экспорт
	
	СформироватьНалоговыеНакладные(КонецДня(ТекущаяДата()));
	
КонецПроцедуры // СформироватьНалоговыеДокументыЧерезРегламентированноеЗадание()


// Процедура выполняет проведение документов по расчетам с клиентами.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц
//
Процедура СформироватьНалоговыеНакладные(КонецПериодаРасчета, СтруктураПараметров = Неопределено, Пользователь = Неопределено) Экспорт
	
	Если Не Пользователи.РолиДоступны("ДобавлениеИзменениеДокументовРегламентированногоУчета", Пользователь) Тогда
		ТекстОшибки = НСтр("ru='Формирование исходящий налоговых документов прервано
                                 |Отсутсвует разрешение на действие (роль) ""Добавление изменение исходящих документов НДС""'
                                 |;uk='Формування вихідних податкових документів перервано
                                 |Відсутній дозвіл на дію (роль) ""Додавання зміна вихідних документів ПДВ""'");
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);

	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	АналитикаУчетаПоПартнерамОтбор = Неопределено;
	
	РаспределениеВзаиморасчетов.РаспределитьВсеРасчетыСКлиентами(КонецМесяца(КонецПериодаРасчета) + 1);
	
	НомерЗадания = УвеличитьНомерЗадания("НомерЗаданияКФормированиюИсходящихНалоговыхДокументов");
	
	НачалоПериодаРасчета = ПолучитьДатуНачалаФормированияНалоговыхДокументов(КонецПериодаРасчета, СтруктураПараметров, АналитикаУчетаПоПартнерамОтбор, НомерЗадания);
	
	Если НачалоПериодаРасчета = Неопределено Тогда
		Возврат;
	КонецЕсли;

	
	КешНоменклатурыДляАвансовыхНН = Неопределено;

//  Этап 1 - Превышение сумм существующих налоговых документов над сумамми налоговых обязательств (например - уменьшили реализацию, по которой уже была сформирован налоговый документ)
//  Корректируем и перепроводим существующие налоговые документы, отвязывая строки от документов поставки на сумму превышения 
//  (но суммы существующих налоговых документов остаются прежними)
//  Корректировка строк в налоговом документе может не совпадать с корректировкой строк в документе реализации
#Область Этап1 
 
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	НДСРасчетНалоговыхОбязательствОбороты.АналитикаУчетаПоПартнерам,
	|	НДСРасчетНалоговыхОбязательствОбороты.Валюта,
	|	СУММА(НДСРасчетНалоговыхОбязательствОбороты.СуммаПоставкиТребующаяРегистрацииННОборот) КАК СуммаВозникшихНОЗаДень,
	|	НАЧАЛОПЕРИОДА(НДСРасчетНалоговыхОбязательствОбороты.Период, ДЕНЬ) КАК День,
	|	НДСРасчетНалоговыхОбязательствОбороты.ОбъектРасчетов,
	|	НДСРасчетНалоговыхОбязательствОбороты.ДокументПоставки,
	|	ВЫБОР
	|		КОГДА НДСРасчетНалоговыхОбязательствОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|		КОГДА НДСРасчетНалоговыхОбязательствОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Розница)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Розница)
	|		КОГДА НДСРасчетНалоговыхОбязательствОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Поставка)
	|	КОНЕЦ КАК РазрезВидПоставки
	|ПОМЕСТИТЬ ТаблицаНалоговыхОбязательств
	|ИЗ
	|	РегистрНакопления.НДСРасчетНалоговыхОбязательств.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			День,
	|			(&НеИспользоватьОтборПоАналитикеУчетаПоПартнерам ИЛИ АналитикаУчетаПоПартнерам В (&АналитикаУчетаПоПартнерамОтбор))
	|	) КАК НДСРасчетНалоговыхОбязательствОбороты
	|ГДЕ
	|	НДСРасчетНалоговыхОбязательствОбороты.ДокументПоставки <> НЕОПРЕДЕЛЕНО
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСРасчетНалоговыхОбязательствОбороты.Валюта,
	|	НДСРасчетНалоговыхОбязательствОбороты.АналитикаУчетаПоПартнерам,
	|	НАЧАЛОПЕРИОДА(НДСРасчетНалоговыхОбязательствОбороты.Период, ДЕНЬ),
	|	НДСРасчетНалоговыхОбязательствОбороты.ОбъектРасчетов,
	|	НДСРасчетНалоговыхОбязательствОбороты.ДокументПоставки,
	|	ВЫБОР
	|		КОГДА НДСРасчетНалоговыхОбязательствОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|		КОГДА НДСРасчетНалоговыхОбязательствОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Розница)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Розница)
	|		КОГДА НДСРасчетНалоговыхОбязательствОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Поставка)
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.АналитикаУчетаПоПартнерам,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Валюта,
	|	НАЧАЛОПЕРИОДА(НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Период, ДЕНЬ) КАК День,
	|	МАКСИМУМ(НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор) КАК ОсновнаяНалоговая,
	|	ВЫБОР
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОблагаемыеОперации)
	|			    ТОГДА ""07_ОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОсвобожденныеОперации)
	|			    ТОГДА ""07_ОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.НеНДСОперации)
	|			    ТОГДА ""07_НеНДСОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОблагаемыеОперации)
	|			    ТОГДА ""07_ИтоговаяРозницаОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОсвобожденныеОперации)
	|			    ТОГДА ""07_ИтоговаяРозницаОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.УсловнаяПродажа)
	|			    ТОГДА ""07_УсловнаяПродажа""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОблагаемыеОперации)
	|			    ТОГДА ""07_РозницаКонрагентуОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОсвобожденныеОперации)
	|			    ТОГДА ""07_РозницаКонрагентуОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РаботыОтНерезидента)
	|			    ТОГДА ""07_РаботыОтНерезидента""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ПродажаНижеОбычнойЦены)
	|			    ТОГДА ""07_ПродажаНижеОбычнойЦены""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОблагаемыеОперации)
	|			    ТОГДА ""14_ОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОсвобожденныеОперации)
	|			    ТОГДА ""14_ОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.НеНДСОперации)
	|			    ТОГДА ""14_НеНДСОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОблагаемыеОперации)
	|			    ТОГДА ""14_ИтоговаяРозницаОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОсвобожденныеОперации)
	|			    ТОГДА ""14_ИтоговаяРозницаОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.УсловнаяПродажа)
	|			    ТОГДА ""14_УсловнаяПродажа""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОблагаемыеОперации)
	|			    ТОГДА ""14_РозницаКонрагентуОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОсвобожденныеОперации)
	|			    ТОГДА ""14_РозницаКонрагентуОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РаботыОтНерезидента)
	|			    ТОГДА ""14_РаботыОтНерезидента""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ПродажаНижеОбычнойЦены)
	|			    ТОГДА ""14_ПродажаНижеОбычнойЦены""
    |
	|		ИНАЧЕ НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации
	|	КОНЕЦ КАК ВидОперацииОсновнойНалоговой,
	|	ВЫБОР
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Розница)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Розница)
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Поставка)
	|	КОНЕЦ КАК РазрезВидПоставки
	|ПОМЕСТИТЬ ТаблицаНалоговыхНакладных
	|ИЗ
	|	РегистрНакопления.НДСНоменклатурныйСоставДляНалоговыхНакладных.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Регистратор,
	|			(&НеИспользоватьОтборПоАналитикеУчетаПоПартнерам ИЛИ АналитикаУчетаПоПартнерам В (&АналитикаУчетаПоПартнерамОтбор))
	|	) КАК НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты
	|ГДЕ
	|	(ТИПЗНАЧЕНИЯ(НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор) = ТИП(Документ.НалоговаяНакладная)
	|			ИЛИ ТИПЗНАЧЕНИЯ(НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор) = ТИП(Документ.Приложение2КНалоговойНакладной)
	|				И (НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|					ИЛИ НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)))
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.АналитикаУчетаПоПартнерам,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Валюта,
	|	НАЧАЛОПЕРИОДА(НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Период, ДЕНЬ),
	|	ВЫБОР
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОблагаемыеОперации)
	|			    ТОГДА ""07_ОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОсвобожденныеОперации)
	|			    ТОГДА ""07_ОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.НеНДСОперации)
	|			    ТОГДА ""07_НеНДСОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОблагаемыеОперации)
	|			    ТОГДА ""07_ИтоговаяРозницаОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОсвобожденныеОперации)
	|			    ТОГДА ""07_ИтоговаяРозницаОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.УсловнаяПродажа)
	|			    ТОГДА ""07_УсловнаяПродажа""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОблагаемыеОперации)
	|			    ТОГДА ""07_РозницаКонрагентуОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОсвобожденныеОперации)
	|			    ТОГДА ""07_РозницаКонрагентуОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РаботыОтНерезидента)
	|			    ТОГДА ""07_РаботыОтНерезидента""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ПродажаНижеОбычнойЦены)
	|			    ТОГДА ""07_ПродажаНижеОбычнойЦены""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОблагаемыеОперации)
	|			    ТОГДА ""14_ОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОсвобожденныеОперации)
	|			    ТОГДА ""14_ОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.НеНДСОперации)
	|			    ТОГДА ""14_НеНДСОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОблагаемыеОперации)
	|			    ТОГДА ""14_ИтоговаяРозницаОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОсвобожденныеОперации)
	|			    ТОГДА ""14_ИтоговаяРозницаОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.УсловнаяПродажа)
	|			    ТОГДА ""14_УсловнаяПродажа""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОблагаемыеОперации)
	|			    ТОГДА ""14_РозницаКонрагентуОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОсвобожденныеОперации)
	|			    ТОГДА ""14_РозницаКонрагентуОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РаботыОтНерезидента)
	|			    ТОГДА ""14_РаботыОтНерезидента""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ПродажаНижеОбычнойЦены)
	|			    ТОГДА ""14_ПродажаНижеОбычнойЦены""
	|		ИНАЧЕ НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Розница)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Розница)
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Поставка)
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНалоговыхНакладных.АналитикаУчетаПоПартнерам,
	|	ТаблицаНалоговыхНакладных.Валюта,
	|	ТаблицаНалоговыхНакладных.День,
	|	ТаблицаНалоговыхНакладных.ОсновнаяНалоговая,
	|	ТаблицаНалоговыхНакладных.ВидОперацииОсновнойНалоговой,
	|	ТаблицаНалоговыхНакладных.РазрезВидПоставки,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор КАК ТекущийНалоговыйДокумент,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.СтавкаНДС,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.НомерГТД,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Номенклатура,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Характеристика,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Упаковка,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.ЦенаНН,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.ОбъектРасчетов,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.ДокументПоставки,
	|	СУММА(НДСНоменклатурныйСоставДляНалоговыхНакладных.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(НДСНоменклатурныйСоставДляНалоговыхНакладных.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов
	|ПОМЕСТИТЬ ТаблицаРеальныхНалоговыхПоДням
	|ИЗ
	|	ТаблицаНалоговыхНакладных КАК ТаблицаНалоговыхНакладных
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСНоменклатурныйСоставДляНалоговыхНакладных КАК НДСНоменклатурныйСоставДляНалоговыхНакладных
	|		ПО (ТаблицаНалоговыхНакладных.ОсновнаяНалоговая = НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор
	|				ИЛИ ТаблицаНалоговыхНакладных.ОсновнаяНалоговая = НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор.НалоговаяНакладная
	|					И НДСНоменклатурныйСоставДляНалоговыхНакладных.ВидПоставки <> ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|					И НДСНоменклатурныйСоставДляНалоговыхНакладных.ВидПоставки <> ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|				ИЛИ ТаблицаНалоговыхНакладных.ОсновнаяНалоговая = НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор.ОсновноеП2ДляВозврата
	|					И (НДСНоменклатурныйСоставДляНалоговыхНакладных.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|						ИЛИ НДСНоменклатурныйСоставДляНалоговыхНакладных.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)))
	|ГДЕ
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.ДокументПоставки <> НЕОПРЕДЕЛЕНО
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.НомерГТД,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.ОбъектРасчетов,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Номенклатура,
	|	ТаблицаНалоговыхНакладных.АналитикаУчетаПоПартнерам,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Упаковка,
	|	ТаблицаНалоговыхНакладных.ОсновнаяНалоговая,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Характеристика,
	|	ТаблицаНалоговыхНакладных.День,
	|	ТаблицаНалоговыхНакладных.ВидОперацииОсновнойНалоговой,
	|	ТаблицаНалоговыхНакладных.РазрезВидПоставки,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.СтавкаНДС,
	|	ТаблицаНалоговыхНакладных.Валюта,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.ДокументПоставки,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.ЦенаНН,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.АналитикаУчетаПоПартнерам,
	|	ВложенныйЗапрос.Валюта,
	|	ВложенныйЗапрос.День,
	|	ВложенныйЗапрос.РазрезВидПоставки,
	|	ВложенныйЗапрос.ОбъектРасчетов,
	|	ВложенныйЗапрос.ДокументПоставки,
	|	ВложенныйЗапрос.СуммаВзаиморасчетов,
	|	ЕСТЬNULL(ТаблицаНалоговыхОбязательств.СуммаВозникшихНОЗаДень, 0) КАК СуммаВозникшихНОЗаДень,
	|	ВложенныйЗапрос.СуммаВзаиморасчетов - ЕСТЬNULL(ТаблицаНалоговыхОбязательств.СуммаВозникшихНОЗаДень, 0) КАК СуммаПревышения
	|ПОМЕСТИТЬ ТаблицаПревышенийПоДокументамПоДням
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаРеальныхНалоговыхПоДням.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|		ТаблицаРеальныхНалоговыхПоДням.Валюта КАК Валюта,
	|		ТаблицаРеальныхНалоговыхПоДням.День КАК День,
	|		ТаблицаРеальныхНалоговыхПоДням.РазрезВидПоставки КАК РазрезВидПоставки,
	|		ТаблицаРеальныхНалоговыхПоДням.ОбъектРасчетов КАК ОбъектРасчетов,
	|		ТаблицаРеальныхНалоговыхПоДням.ДокументПоставки КАК ДокументПоставки,
	|		СУММА(ТаблицаРеальныхНалоговыхПоДням.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов
	|	ИЗ
	|		ТаблицаРеальныхНалоговыхПоДням КАК ТаблицаРеальныхНалоговыхПоДням
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаРеальныхНалоговыхПоДням.День,
	|		ТаблицаРеальныхНалоговыхПоДням.Валюта,
	|		ТаблицаРеальныхНалоговыхПоДням.ДокументПоставки,
	|		ТаблицаРеальныхНалоговыхПоДням.РазрезВидПоставки,
	|		ТаблицаРеальныхНалоговыхПоДням.АналитикаУчетаПоПартнерам,
	|		ТаблицаРеальныхНалоговыхПоДням.ОбъектРасчетов
	|	) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаНалоговыхОбязательств КАК ТаблицаНалоговыхОбязательств
	|		ПО ВложенныйЗапрос.АналитикаУчетаПоПартнерам = ТаблицаНалоговыхОбязательств.АналитикаУчетаПоПартнерам
	|			И ВложенныйЗапрос.ОбъектРасчетов = ТаблицаНалоговыхОбязательств.ОбъектРасчетов
	|			И ВложенныйЗапрос.Валюта = ТаблицаНалоговыхОбязательств.Валюта
	|			И ВложенныйЗапрос.День = ТаблицаНалоговыхОбязательств.День
	|			И ВложенныйЗапрос.РазрезВидПоставки = ТаблицаНалоговыхОбязательств.РазрезВидПоставки
	|			И ВложенныйЗапрос.ДокументПоставки = ТаблицаНалоговыхОбязательств.ДокументПоставки
	|ГДЕ
	|	ЕСТЬNULL(ТаблицаНалоговыхОбязательств.СуммаВозникшихНОЗаДень, 0) < ВложенныйЗапрос.СуммаВзаиморасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПревышенийПоДокументамПоДням.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаПревышенийПоДокументамПоДням.Валюта КАК Валюта,
	|	ТаблицаПревышенийПоДокументамПоДням.День КАК День,
	|	ТаблицаПревышенийПоДокументамПоДням.РазрезВидПоставки КАК РазрезВидПоставки,
	|	ТаблицаПревышенийПоДокументамПоДням.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ТаблицаПревышенийПоДокументамПоДням.ДокументПоставки КАК ДокументПоставки,
	|	ТаблицаРеальныхНалоговыхПоДням.ТекущийНалоговыйДокумент,
	|	ТаблицаРеальныхНалоговыхПоДням.ТекущийНалоговыйДокумент.Дата КАК ТекущийНалоговыйДокументДата,
	|	МАКСИМУМ(ТаблицаПревышенийПоДокументамПоДням.СуммаПревышения) КАК СуммаПревышения
	|ИЗ
	|	ТаблицаПревышенийПоДокументамПоДням КАК ТаблицаПревышенийПоДокументамПоДням
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРеальныхНалоговыхПоДням КАК ТаблицаРеальныхНалоговыхПоДням
	|		ПО ТаблицаПревышенийПоДокументамПоДням.АналитикаУчетаПоПартнерам = ТаблицаРеальныхНалоговыхПоДням.АналитикаУчетаПоПартнерам
	|			И ТаблицаПревышенийПоДокументамПоДням.ОбъектРасчетов = ТаблицаРеальныхНалоговыхПоДням.ОбъектРасчетов
	|			И ТаблицаПревышенийПоДокументамПоДням.Валюта = ТаблицаРеальныхНалоговыхПоДням.Валюта
	|			И ТаблицаПревышенийПоДокументамПоДням.День = ТаблицаРеальныхНалоговыхПоДням.День
	|			И ТаблицаПревышенийПоДокументамПоДням.РазрезВидПоставки = ТаблицаРеальныхНалоговыхПоДням.РазрезВидПоставки
	|			И ТаблицаПревышенийПоДокументамПоДням.ДокументПоставки = ТаблицаРеальныхНалоговыхПоДням.ДокументПоставки
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПревышенийПоДокументамПоДням.Валюта,
	|	ТаблицаПревышенийПоДокументамПоДням.День,
	|	ТаблицаПревышенийПоДокументамПоДням.РазрезВидПоставки,
	|	ТаблицаПревышенийПоДокументамПоДням.ОбъектРасчетов,
	|	ТаблицаРеальныхНалоговыхПоДням.ТекущийНалоговыйДокумент,
	|	ТаблицаПревышенийПоДокументамПоДням.ДокументПоставки,
	|	ТаблицаПревышенийПоДокументамПоДням.АналитикаУчетаПоПартнерам,
	|	ТаблицаРеальныхНалоговыхПоДням.ТекущийНалоговыйДокумент.Дата
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчетаПоПартнерам,
	|	Валюта,
	|	День,
	|	ОбъектРасчетов,
	|	ДокументПоставки,
	|	РазрезВидПоставки,
	|	ТекущийНалоговыйДокументДата УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаПревышенийПоДокументамПоДням
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаРеальныхНалоговыхПоДням
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаНалоговыхНакладных
	|";
	
				   
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериодаРасчета));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериодаРасчета));
	
	Запрос.УстановитьПараметр("НеИспользоватьОтборПоАналитикеУчетаПоПартнерам", АналитикаУчетаПоПартнерамОтбор = Неопределено);
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерамОтбор", АналитикаУчетаПоПартнерамОтбор);
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
				   
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаПоПревышениям = РезультатЗапроса[4].Выбрать();
	
	ОтборПоДокументуОтгрузки = Новый Структура("ДокументПоставки");
	
	СтарыеАналитики = Новый Структура("АналитикаУчетаПоПартнерам, ОбъектРасчетов, Валюта, День, ДокументПоставки, РазрезВидПоставки");
	
	Пока ВыборкаПоПревышениям.Следующий() Цикл
		
		Если АналитикиИзменились(СтарыеАналитики, ВыборкаПоПревышениям) = Истина Тогда
			
			Если ВыборкаПоПревышениям.РазрезВидПоставки = Перечисления.ВидыПоставки.Возврат Тогда
				КоэффициентНаправлениеДвижения = -1;
			Иначе
				КоэффициентНаправлениеДвижения = 1;
			КонецЕсли;
			
			СуммаПревышения = КоэффициентНаправлениеДвижения * ВыборкаПоПревышениям.СуммаПревышения;
			
			ЗаполнитьЗначенияСвойств(СтарыеАналитики, ВыборкаПоПревышениям);
			
		КонецЕсли;
		
		Если СуммаПревышения = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НалоговаяОбъект = ВыборкаПоПревышениям.ТекущийНалоговыйДокумент.ПолучитьОбъект();
		
		ОтборПоДокументуОтгрузки.ДокументПоставки = ВыборкаПоПревышениям.ДокументПоставки;
		НайденныеСтроки = НалоговаяОбъект.Товары.НайтиСтроки(ОтборПоДокументуОтгрузки);
		
		Для каждого Строка из НайденныеСтроки Цикл
			
			Если КоэффициентНаправлениеДвижения * (СуммаПревышения - Строка.СуммаСНДС) < 0 Тогда
					
				//Нужно разбить строку и отменить часть.
				ИндексТекущейСтроки 	 = НалоговаяОбъект.Товары.Индекс(Строка);
				НоваяСтрока 			 = НалоговаяОбъект.Товары.Вставить(ИндексТекущейСтроки + 1);
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
				Если ТипЗнч(НалоговаяОбъект) = Тип("ДокументОбъект.Приложение2КНалоговойНакладной") Тогда
					НоваяСтрока.ДокументПоставкиДляВозвратов = Неопределено;
				КонецЕсли;
				НоваяСтрока.ДокументПоставки = Неопределено;
				
				ПолнаяСумма				= Строка.СуммаСНДС;
				Строка.СуммаСНДС		= Строка.СуммаСНДС - СуммаПревышения;
				НоваяСтрока.СуммаСНДС	= СуммаПревышения;
				
				Строка.КоличествоУпаковок = Окр((Строка.КоличествоУпаковок * Строка.СуммаСНДС) / ПолнаяСумма, 2);
				НоваяСтрока.КоличествоУпаковок = НоваяСтрока.КоличествоУпаковок - Строка.КоличествоУпаковок;
				
				СуммаПревышения = 0;
				
			Иначе
				
				СуммаПревышения = СуммаПревышения - Строка.СуммаСНДС;
				Если ТипЗнч(НалоговаяОбъект) = Тип("ДокументОбъект.Приложение2КНалоговойНакладной") Тогда
					Строка.ДокументПоставкиДляВозвратов = Неопределено;
				КонецЕсли;
				Строка.ДокументПоставки = Неопределено;
				
			КонецЕсли;
			
			Если СуммаПревышения = 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		НалоговаяОбъект.ЗаполнитьРеквизитыПослеАвтоформирования(Ложь);
		НалоговаяОбъект.ДополнительныеСвойства.Вставить("ПроверкаДатыЗапретаИзменения", Ложь);
		НалоговаяОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
		
	КонецЦикла;
	
#КонецОбласти // Этап1 

#Область Этап2
 
	
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.АналитикаУчетаПоПартнерам,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.ВидПоставки,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.Валюта,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.СпособЗаполнения,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.СтавкаНДС,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.НомерГТД,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.Номенклатура,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.Характеристика,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.Упаковка,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.ЦенаНН,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.ОбъектРасчетов,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.ДокументПоставки,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.ДокументПоставкиДляВозвратов,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.КоличествоУпаковокОстаток
	|ПОМЕСТИТЬ ТаблицаОтрицательныхОстатков
	|ИЗ
	|	РегистрНакопления.НДСНоменклатурныйСоставДляНалоговыхНакладных.Остатки(
	|			,
	|			(НЕ ДокументПоставки = НЕОПРЕДЕЛЕНО
	|				ИЛИ НЕ ДокументПоставкиДляВозвратов = НЕОПРЕДЕЛЕНО)
	|				И (&НеИспользоватьОтборПоАналитикеУчетаПоПартнерам ИЛИ АналитикаУчетаПоПартнерам В (&АналитикаУчетаПоПартнерамОтбор))
	|	) КАК НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки
	|ГДЕ
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.КоличествоУпаковокОстаток < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.КоличествоУпаковок,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.ВидДвижения,
	|	ТаблицаОтрицательныхОстатков.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаОтрицательныхОстатков.ВидПоставки КАК ВидПоставки,
	|	ТаблицаОтрицательныхОстатков.Валюта КАК Валюта,
	|	ТаблицаОтрицательныхОстатков.СпособЗаполнения КАК СпособЗаполнения,
	|	ТаблицаОтрицательныхОстатков.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаОтрицательныхОстатков.НомерГТД КАК НомерГТД,
	|	ТаблицаОтрицательныхОстатков.Номенклатура КАК Номенклатура,
	|	ТаблицаОтрицательныхОстатков.Характеристика КАК Характеристика,
	|	ТаблицаОтрицательныхОстатков.Упаковка КАК Упаковка,
	|	ТаблицаОтрицательныхОстатков.ЦенаНН,
	|	ТаблицаОтрицательныхОстатков.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ТаблицаОтрицательныхОстатков.ДокументПоставки КАК ДокументПоставки,
	|	ТаблицаОтрицательныхОстатков.ДокументПоставкиДляВозвратов КАК ДокументПоставкиДляВозвратов,
	|	ТаблицаОтрицательныхОстатков.КоличествоУпаковокОстаток КАК КоличествоУпаковокОстаток
	|ИЗ
	|	ТаблицаОтрицательныхОстатков КАК ТаблицаОтрицательныхОстатков
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСНоменклатурныйСоставДляНалоговыхНакладных КАК НДСНоменклатурныйСоставДляНалоговыхНакладных
	|		ПО ТаблицаОтрицательныхОстатков.АналитикаУчетаПоПартнерам = НДСНоменклатурныйСоставДляНалоговыхНакладных.АналитикаУчетаПоПартнерам
	|			И ТаблицаОтрицательныхОстатков.ОбъектРасчетов = НДСНоменклатурныйСоставДляНалоговыхНакладных.ОбъектРасчетов
	|			И ТаблицаОтрицательныхОстатков.ВидПоставки = НДСНоменклатурныйСоставДляНалоговыхНакладных.ВидПоставки
	|			И ТаблицаОтрицательныхОстатков.Валюта = НДСНоменклатурныйСоставДляНалоговыхНакладных.Валюта
	|			И ТаблицаОтрицательныхОстатков.СпособЗаполнения = НДСНоменклатурныйСоставДляНалоговыхНакладных.СпособЗаполнения
	|			И ТаблицаОтрицательныхОстатков.СтавкаНДС = НДСНоменклатурныйСоставДляНалоговыхНакладных.СтавкаНДС
	|			И ТаблицаОтрицательныхОстатков.НомерГТД = НДСНоменклатурныйСоставДляНалоговыхНакладных.НомерГТД
	|			И ТаблицаОтрицательныхОстатков.Номенклатура = НДСНоменклатурныйСоставДляНалоговыхНакладных.Номенклатура
	|			И ТаблицаОтрицательныхОстатков.Характеристика = НДСНоменклатурныйСоставДляНалоговыхНакладных.Характеристика
	|			И ТаблицаОтрицательныхОстатков.Упаковка = НДСНоменклатурныйСоставДляНалоговыхНакладных.Упаковка
	|			И ТаблицаОтрицательныхОстатков.ЦенаНН = НДСНоменклатурныйСоставДляНалоговыхНакладных.ЦенаНН
	|			И ТаблицаОтрицательныхОстатков.ДокументПоставки = НДСНоменклатурныйСоставДляНалоговыхНакладных.ДокументПоставки
	|			И ТаблицаОтрицательныхОстатков.ДокументПоставкиДляВозвратов = НДСНоменклатурныйСоставДляНалоговыхНакладных.ДокументПоставкиДляВозвратов
	|ГДЕ
	|	(ТИПЗНАЧЕНИЯ(НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор) = ТИП(Документ.НалоговаяНакладная)
	|			ИЛИ ТИПЗНАЧЕНИЯ(НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор) = ТИП(Документ.Приложение2КНалоговойНакладной))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Период УБЫВ
	|ИТОГИ
	|	МАКСИМУМ(КоличествоУпаковокОстаток)
	|ПО
	|	ВидПоставки,
	|	Валюта,
	|	СтавкаНДС,
	|	ДокументПоставки,
	|	ДокументПоставкиДляВозвратов,
	|	СпособЗаполнения,
	|	ОбъектРасчетов,
	|	Характеристика,
	|	АналитикаУчетаПоПартнерам,
	|	НомерГТД,
	|	Номенклатура,
	|	Упаковка
	|";
				   


	ВыборкаПоОстаткам = Запрос.Выполнить().Выбрать();
	
	СтруктураОтбора = Новый Структура("Номенклатура, Характеристика, НомерГТД, Упаковка, СтавкаНДС, Цена, ОбъектРасчетов, ДокументПоставки");
	СтруктураОтбораП2 = Новый Структура("Номенклатура, Характеристика, НомерГТД, Упаковка, СтавкаНДС, Цена, ОбъектРасчетов, ДокументПоставки, ДокументПоставкиДляВозвратов");
	
	Пока Истина Цикл
		
		Если ВыборкаПоОстаткам.Уровень() <> 11 Тогда
			Если НЕ ВыборкаПоОстаткам.Следующий() Тогда
				Прервать;
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		КоличествоОтмены = - ВыборкаПоОстаткам.КоличествоУпаковокОстаток;
		
		ВыборкаПоРегистратору = ВыборкаПоОстаткам;

		Пока ВыборкаПоРегистратору.Следующий() И КоличествоОтмены > 0 Цикл
			
			Если ВыборкаПоОстаткам.Уровень() <> 12 Тогда
				Прервать;
			КонецЕсли;
			
			НалоговаяДляКорректировки = ВыборкаПоРегистратору.Регистратор.ПолучитьОбъект();
			
			Если ТипЗнч(НалоговаяДляКорректировки) = Тип("ДокументОбъект.Приложение2КНалоговойНакладной") Тогда
				ЗаполнитьЗначенияСвойств(СтруктураОтбораП2, ВыборкаПоРегистратору);
				СтруктураОтбораП2.Цена = ВыборкаПоРегистратору.ЦенаНН;
				СтрокиДляКорректировки = НалоговаяДляКорректировки.Товары.НайтиСтроки(СтруктураОтбораП2);
			Иначе
				ЗаполнитьЗначенияСвойств(СтруктураОтбора, ВыборкаПоРегистратору);
				СтруктураОтбора.Цена = ВыборкаПоРегистратору.ЦенаНН;
				СтрокиДляКорректировки = НалоговаяДляКорректировки.Товары.НайтиСтроки(СтруктураОтбора);
			КонецЕсли;
			
			
			Для Каждого Строка Из СтрокиДляКорректировки Цикл
				
				Если КоличествоОтмены < Строка.КоличествоУпаковок Тогда
					
					// Нужно разбить строку и отменить часть.
					ИндексТекущейСтроки 	 = НалоговаяДляКорректировки.Товары.Индекс(Строка);
					НоваяСтрока 			 = НалоговаяДляКорректировки.Товары.Вставить(ИндексТекущейСтроки + 1);
					
					ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
					НоваяСтрока.ДокументПоставки = Неопределено;
					Если ТипЗнч(НалоговаяДляКорректировки) = Тип("ДокументОбъект.Приложение2КНалоговойНакладной") Тогда
						НоваяСтрока.ДокументПоставкиДляВозвратов = Неопределено;
					КонецЕсли;
					
					ПолноеКоличество 				= Строка.КоличествоУпаковок;
					Строка.КоличествоУпаковок 		= Строка.КоличествоУпаковок - КоличествоОтмены;
					НоваяСтрока.КоличествоУпаковок 	= КоличествоОтмены;
					
					Строка.СуммаСНДС = Окр((Строка.СуммаСНДС * Строка.КоличествоУпаковок) / ПолноеКоличество, 2);
					НоваяСтрока.СуммаСНДС = НоваяСтрока.СуммаСНДС - Строка.СуммаСНДС;
					
					КоличествоОтмены = 0;
					
				Иначе
					
					КоличествоОтмены = КоличествоОтмены - Строка.КоличествоУпаковок;
					Строка.ДокументПоставки = Неопределено;
					Если ТипЗнч(НалоговаяДляКорректировки) = Тип("ДокументОбъект.Приложение2КНалоговойНакладной") Тогда
						Строка.ДокументПоставкиДляВозвратов = Неопределено;
					КонецЕсли;
					
				КонецЕсли;
				
				Если КоличествоОтмены = 0 Тогда
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
			НалоговаяДляКорректировки.ЗаполнитьРеквизитыПослеАвтоформирования(Ложь);
			НалоговаяДляКорректировки.ДополнительныеСвойства.Вставить("ПроверкаДатыЗапретаИзменения", Ложь);
			НалоговаяДляКорректировки.Записать(РежимЗаписиДокумента.Проведение);
			
		КонецЦикла;
		
	КонецЦикла;
	
#КонецОбласти // Этап2	

#Область Этап3

	Запрос.Текст = "
	|ВЫБРАТЬ
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.АналитикаУчетаПоПартнерам,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Валюта,
	|	НАЧАЛОПЕРИОДА(НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Период, ДЕНЬ) КАК День,
	|	МАКСИМУМ(НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор) КАК ОсновнаяНалоговая,
	|	ВЫБОР
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОблагаемыеОперации)
	|			    ТОГДА ""07_ОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОсвобожденныеОперации)
	|			    ТОГДА ""07_ОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.НеНДСОперации)
	|			    ТОГДА ""07_НеНДСОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОблагаемыеОперации)
	|			    ТОГДА ""07_ИтоговаяРозницаОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОсвобожденныеОперации)
	|			    ТОГДА ""07_ИтоговаяРозницаОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.УсловнаяПродажа)
	|			    ТОГДА ""07_УсловнаяПродажа""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОблагаемыеОперации)
	|			    ТОГДА ""07_РозницаКонрагентуОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОсвобожденныеОперации)
	|			    ТОГДА ""07_РозницаКонрагентуОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РаботыОтНерезидента)
	|			    ТОГДА ""07_РаботыОтНерезидента""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ПродажаНижеОбычнойЦены)
	|			    ТОГДА ""07_ПродажаНижеОбычнойЦены""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОблагаемыеОперации)
	|			    ТОГДА ""14_ОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОсвобожденныеОперации)
	|			    ТОГДА ""14_ОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.НеНДСОперации)
	|			    ТОГДА ""14_НеНДСОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОблагаемыеОперации)
	|			    ТОГДА ""14_ИтоговаяРозницаОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОсвобожденныеОперации)
	|			    ТОГДА ""14_ИтоговаяРозницаОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.УсловнаяПродажа)
	|			    ТОГДА ""14_УсловнаяПродажа""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОблагаемыеОперации)
	|			    ТОГДА ""14_РозницаКонрагентуОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОсвобожденныеОперации)
	|			    ТОГДА ""14_РозницаКонрагентуОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РаботыОтНерезидента)
	|			    ТОГДА ""14_РаботыОтНерезидента""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ПродажаНижеОбычнойЦены)
	|			    ТОГДА ""14_ПродажаНижеОбычнойЦены""
	|		ИНАЧЕ НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации
	|	КОНЕЦ КАК ВидОперацииОсновнойНалоговой,
	|	ВЫБОР
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Розница)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Розница)
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Поставка)
	|	КОНЕЦ КАК РазрезВидПоставки
	|ПОМЕСТИТЬ ТаблицаНалоговыхНакладных
	|ИЗ
	|	РегистрНакопления.НДСНоменклатурныйСоставДляНалоговыхНакладных.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Регистратор,
	|			(&НеИспользоватьОтборПоАналитикеУчетаПоПартнерам ИЛИ АналитикаУчетаПоПартнерам В (&АналитикаУчетаПоПартнерамОтбор))
	|	) КАК НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты
	|ГДЕ
	|	(ТИПЗНАЧЕНИЯ(НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор) = ТИП(Документ.НалоговаяНакладная)
	|			ИЛИ ТИПЗНАЧЕНИЯ(НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор) = ТИП(Документ.Приложение2КНалоговойНакладной)
	|				И (НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|					ИЛИ НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)))
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.АналитикаУчетаПоПартнерам,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Валюта,
	|	НАЧАЛОПЕРИОДА(НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Период, ДЕНЬ),
	|	ВЫБОР
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОблагаемыеОперации)
	|			    ТОГДА ""07_ОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОсвобожденныеОперации)
	|			    ТОГДА ""07_ОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.НеНДСОперации)
	|			    ТОГДА ""07_НеНДСОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОблагаемыеОперации)
	|			    ТОГДА ""07_ИтоговаяРозницаОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОсвобожденныеОперации)
	|			    ТОГДА ""07_ИтоговаяРозницаОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.УсловнаяПродажа)
	|			    ТОГДА ""07_УсловнаяПродажа""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОблагаемыеОперации)
	|			    ТОГДА ""07_РозницаКонрагентуОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОсвобожденныеОперации)
	|			    ТОГДА ""07_РозницаКонрагентуОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РаботыОтНерезидента)
	|			    ТОГДА ""07_РаботыОтНерезидента""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ПродажаНижеОбычнойЦены)
	|			    ТОГДА ""07_ПродажаНижеОбычнойЦены""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОблагаемыеОперации)
	|			    ТОГДА ""14_ОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОсвобожденныеОперации)
	|			    ТОГДА ""14_ОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.НеНДСОперации)
	|			    ТОГДА ""14_НеНДСОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОблагаемыеОперации)
	|			    ТОГДА ""14_ИтоговаяРозницаОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОсвобожденныеОперации)
	|			    ТОГДА ""14_ИтоговаяРозницаОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.УсловнаяПродажа)
	|			    ТОГДА ""14_УсловнаяПродажа""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОблагаемыеОперации)
	|			    ТОГДА ""14_РозницаКонрагентуОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОсвобожденныеОперации)
	|			    ТОГДА ""14_РозницаКонрагентуОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РаботыОтНерезидента)
	|			    ТОГДА ""14_РаботыОтНерезидента""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ПродажаНижеОбычнойЦены)
	|			    ТОГДА ""14_ПродажаНижеОбычнойЦены""
	|		ИНАЧЕ НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Розница)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Розница)
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Поставка)
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНалоговыхНакладных.АналитикаУчетаПоПартнерам,
	|	ТаблицаНалоговыхНакладных.Валюта,
	|	ТаблицаНалоговыхНакладных.День,
	|	ТаблицаНалоговыхНакладных.ОсновнаяНалоговая,
	|	ТаблицаНалоговыхНакладных.ВидОперацииОсновнойНалоговой,
	|	ТаблицаНалоговыхНакладных.РазрезВидПоставки,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор КАК ТекущийНалоговыйДокумент,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.СтавкаНДС,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.НомерГТД,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Номенклатура,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Характеристика,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Упаковка,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.ЦенаНН,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.ОбъектРасчетов,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.ДокументПоставки,
	|	СУММА(НДСНоменклатурныйСоставДляНалоговыхНакладных.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(НДСНоменклатурныйСоставДляНалоговыхНакладных.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов
	|ПОМЕСТИТЬ ТаблицаРеальныхНалоговыхПоДням
	|ИЗ
	|	ТаблицаНалоговыхНакладных КАК ТаблицаНалоговыхНакладных
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСНоменклатурныйСоставДляНалоговыхНакладных КАК НДСНоменклатурныйСоставДляНалоговыхНакладных
	|		ПО (ТаблицаНалоговыхНакладных.ОсновнаяНалоговая = НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор
	|				ИЛИ ТаблицаНалоговыхНакладных.ОсновнаяНалоговая = НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор.НалоговаяНакладная
	|					И НДСНоменклатурныйСоставДляНалоговыхНакладных.ВидПоставки <> ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|					И НДСНоменклатурныйСоставДляНалоговыхНакладных.ВидПоставки <> ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|				ИЛИ ТаблицаНалоговыхНакладных.ОсновнаяНалоговая = НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор.ОсновноеП2ДляВозврата
	|					И (НДСНоменклатурныйСоставДляНалоговыхНакладных.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|						ИЛИ НДСНоменклатурныйСоставДляНалоговыхНакладных.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)))
	|ГДЕ
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.ДокументПоставки <> НЕОПРЕДЕЛЕНО
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.НомерГТД,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.ОбъектРасчетов,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Номенклатура,
	|	ТаблицаНалоговыхНакладных.АналитикаУчетаПоПартнерам,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Упаковка,
	|	ТаблицаНалоговыхНакладных.ОсновнаяНалоговая,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Характеристика,
	|	ТаблицаНалоговыхНакладных.День,
	|	ТаблицаНалоговыхНакладных.ВидОперацииОсновнойНалоговой,
	|	ТаблицаНалоговыхНакладных.РазрезВидПоставки,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.СтавкаНДС,
	|	ТаблицаНалоговыхНакладных.Валюта,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.ДокументПоставки,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.ЦенаНН,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНалоговыхОбязательств.АналитикаУчетаПоПартнерам,
	|	ТаблицаНалоговыхОбязательств.Валюта,
	|	ТаблицаНалоговыхОбязательств.День,
	|	ТаблицаНалоговыхОбязательств.РазрезВидПоставки,
	|	ТаблицаНалоговыхОбязательств.ОбъектРасчетов,
	|	ТаблицаНалоговыхОбязательств.ДокументПоставки,
	|	ЕСТЬNULL(ВложенныйЗапрос.СуммаВзаиморасчетов, 0) КАК СуммаВзаиморасчетов,
	|	ЕСТЬNULL(ТаблицаНалоговыхОбязательств.СуммаВозникшихНОЗаДень, 0) КАК СуммаВозникшихНОЗаДень,
	|	ЕСТЬNULL(ТаблицаНалоговыхОбязательств.СуммаВозникшихНОЗаДень, 0) - ЕСТЬNULL(ВложенныйЗапрос.СуммаВзаиморасчетов, 0) КАК СуммаПревышенияНО
	|ПОМЕСТИТЬ ТаблицаПревышенийНОПоДокументамПоДням
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаРеальныхНалоговыхПоДням.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|		ТаблицаРеальныхНалоговыхПоДням.Валюта КАК Валюта,
	|		ТаблицаРеальныхНалоговыхПоДням.День КАК День,
	|		ТаблицаРеальныхНалоговыхПоДням.РазрезВидПоставки КАК РазрезВидПоставки,
	|		ТаблицаРеальныхНалоговыхПоДням.ДокументПоставки КАК ДокументПоставки,
	|		ТаблицаРеальныхНалоговыхПоДням.ОбъектРасчетов КАК ОбъектРасчетов,
	|		СУММА(ТаблицаРеальныхНалоговыхПоДням.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов
	|	ИЗ
	|		ТаблицаРеальныхНалоговыхПоДням КАК ТаблицаРеальныхНалоговыхПоДням
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаРеальныхНалоговыхПоДням.День,
	|		ТаблицаРеальныхНалоговыхПоДням.Валюта,
	|		ТаблицаРеальныхНалоговыхПоДням.ДокументПоставки,
	|		ТаблицаРеальныхНалоговыхПоДням.РазрезВидПоставки,
	|		ТаблицаРеальныхНалоговыхПоДням.АналитикаУчетаПоПартнерам,
	|		ТаблицаРеальныхНалоговыхПоДням.ОбъектРасчетов) КАК ВложенныйЗапрос
	|		ПРАВОЕ СОЕДИНЕНИЕ ТаблицаНалоговыхОбязательств КАК ТаблицаНалоговыхОбязательств
	|		ПО ВложенныйЗапрос.АналитикаУчетаПоПартнерам = ТаблицаНалоговыхОбязательств.АналитикаУчетаПоПартнерам
	|			И ВложенныйЗапрос.ОбъектРасчетов = ТаблицаНалоговыхОбязательств.ОбъектРасчетов
	|			И ВложенныйЗапрос.Валюта = ТаблицаНалоговыхОбязательств.Валюта
	|			И ВложенныйЗапрос.День = ТаблицаНалоговыхОбязательств.День
	|			И ВложенныйЗапрос.РазрезВидПоставки = ТаблицаНалоговыхОбязательств.РазрезВидПоставки
	|			И ВложенныйЗапрос.ДокументПоставки = ТаблицаНалоговыхОбязательств.ДокументПоставки
	|ГДЕ
	|	ЕСТЬNULL(ТаблицаНалоговыхОбязательств.СуммаВозникшихНОЗаДень, 0) > ЕСТЬNULL(ВложенныйЗапрос.СуммаВзаиморасчетов, 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.АналитикаУчетаПоПартнерам,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.ВидПоставки,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.Валюта,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.СпособЗаполнения,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.СтавкаНДС,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.НомерГТД,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.Номенклатура,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.Характеристика,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.Упаковка,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.ЦенаНН,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.ОбъектРасчетов,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.ДокументПоставки,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.ДокументПоставкиДляВозвратов,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.КоличествоУпаковокОстаток,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.СуммаВзаиморасчетовОстаток
	|ПОМЕСТИТЬ ТаблицаОстатковПоДокументамОтгрузки
	|ИЗ
	|	РегистрНакопления.НДСНоменклатурныйСоставДляНалоговыхНакладных.Остатки(
	|			,
	|			ДокументПоставки В
	|					(ВЫБРАТЬ
	|						ТаблицаПревышенийНОПоДокументамПоДням.ДокументПоставки
	|					ИЗ
	|						ТаблицаПревышенийНОПоДокументамПоДням)
	|			И (&НеИспользоватьОтборПоАналитикеУчетаПоПартнерам ИЛИ АналитикаУчетаПоПартнерам В (&АналитикаУчетаПоПартнерамОтбор))
	|	) КАК НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки
	|ГДЕ
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.ДокументПоставки <> НЕОПРЕДЕЛЕНО
	|	И НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.СуммаВзаиморасчетовОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНалоговыхНакладныхАванс.АналитикаУчетаПоПартнерам,
	|	ТаблицаНалоговыхНакладныхАванс.Валюта,
	|	ТаблицаНалоговыхНакладныхАванс.День,
	|	ТаблицаНалоговыхНакладныхАванс.ОсновнаяНалоговая,
	|	ТаблицаНалоговыхНакладныхАванс.ВидОперацииОсновнойНалоговой,
	|	ТаблицаНалоговыхНакладныхАванс.РазрезВидПоставки,
	|	ЕСТЬNULL(ВложенныйЗапрос.ТекущийНалоговыйДокумент, ТаблицаНалоговыхНакладныхАванс.ОсновнаяНалоговая) КАК ТекущийНалоговыйДокумент,
	|	ВложенныйЗапрос.СтавкаНДС,
	|	ВложенныйЗапрос.НомерГТД,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Упаковка,
	|	ВложенныйЗапрос.ЦенаНН,
	|	СУММА(ВложенныйЗапрос.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(ВложенныйЗапрос.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов
	|ПОМЕСТИТЬ ТаблицаРеальныхНалоговыхПоДнямАванс
	|ИЗ
	|	ТаблицаНалоговыхНакладных КАК ТаблицаНалоговыхНакладныхАванс
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТаблицаНалоговыхНакладныхАванс.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|			ТаблицаНалоговыхНакладныхАванс.Валюта КАК Валюта,
	|			ТаблицаНалоговыхНакладныхАванс.День КАК День,
	|			ТаблицаНалоговыхНакладныхАванс.РазрезВидПоставки КАК РазрезВидПоставки,
	|			ТаблицаНалоговыхНакладныхАванс.ОсновнаяНалоговая КАК ОсновнаяНалоговая,
	|			ТаблицаНалоговыхНакладныхАванс.ВидОперацииОсновнойНалоговой КАК ВидОперацииОсновнойНалоговой,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор КАК ТекущийНалоговыйДокумент,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.СтавкаНДС КАК СтавкаНДС,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.НомерГТД КАК НомерГТД,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.Номенклатура КАК Номенклатура,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.Характеристика КАК Характеристика,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.Упаковка КАК Упаковка,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.ЦенаНН КАК ЦенаНН,
	|			СУММА(НДСНоменклатурныйСоставДляНалоговыхНакладных.КоличествоУпаковок) КАК КоличествоУпаковок,
	|			СУММА(НДСНоменклатурныйСоставДляНалоговыхНакладных.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов
	|		ИЗ
	|			ТаблицаНалоговыхНакладных КАК ТаблицаНалоговыхНакладныхАванс
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСНоменклатурныйСоставДляНалоговыхНакладных КАК НДСНоменклатурныйСоставДляНалоговыхНакладных
	|				ПО (ТаблицаНалоговыхНакладныхАванс.ОсновнаяНалоговая = НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор
	|						ИЛИ ТаблицаНалоговыхНакладныхАванс.ОсновнаяНалоговая = НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор.НалоговаяНакладная
	|							И НДСНоменклатурныйСоставДляНалоговыхНакладных.ВидПоставки <> ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|							И НДСНоменклатурныйСоставДляНалоговыхНакладных.ВидПоставки <> ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|						ИЛИ ТаблицаНалоговыхНакладныхАванс.ОсновнаяНалоговая = НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор.ОсновноеП2ДляВозврата
	|							И (НДСНоменклатурныйСоставДляНалоговыхНакладных.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|								ИЛИ НДСНоменклатурныйСоставДляНалоговыхНакладных.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)))
	|		ГДЕ
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.ДокументПоставки = НЕОПРЕДЕЛЕНО
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаНалоговыхНакладныхАванс.АналитикаУчетаПоПартнерам,
	|			ТаблицаНалоговыхНакладныхАванс.ОсновнаяНалоговая,
	|			ТаблицаНалоговыхНакладныхАванс.День,
	|			ТаблицаНалоговыхНакладныхАванс.РазрезВидПоставки,
	|			ТаблицаНалоговыхНакладныхАванс.ВидОперацииОсновнойНалоговой,
	|			ТаблицаНалоговыхНакладныхАванс.Валюта,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.СтавкаНДС,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.НомерГТД,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.Номенклатура,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.Характеристика,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.Упаковка,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.ЦенаНН) КАК ВложенныйЗапрос
	|		ПО ТаблицаНалоговыхНакладныхАванс.АналитикаУчетаПоПартнерам = ВложенныйЗапрос.АналитикаУчетаПоПартнерам
	|			И ТаблицаНалоговыхНакладныхАванс.Валюта = ВложенныйЗапрос.Валюта
	|			И ТаблицаНалоговыхНакладныхАванс.День = ВложенныйЗапрос.День
	|			И ТаблицаНалоговыхНакладныхАванс.РазрезВидПоставки = ВложенныйЗапрос.РазрезВидПоставки
	|			И ТаблицаНалоговыхНакладныхАванс.ОсновнаяНалоговая = ВложенныйЗапрос.ОсновнаяНалоговая
	|			И ТаблицаНалоговыхНакладныхАванс.ВидОперацииОсновнойНалоговой = ВложенныйЗапрос.ВидОперацииОсновнойНалоговой
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.НомерГТД,
	|	ТаблицаНалоговыхНакладныхАванс.АналитикаУчетаПоПартнерам,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Упаковка,
	|	ТаблицаНалоговыхНакладныхАванс.ВидОперацииОсновнойНалоговой,
	|	ТаблицаНалоговыхНакладныхАванс.Валюта,
	|	ЕСТЬNULL(ВложенныйЗапрос.ТекущийНалоговыйДокумент, ТаблицаНалоговыхНакладныхАванс.ОсновнаяНалоговая),
	|	ТаблицаНалоговыхНакладныхАванс.День,
	|	ТаблицаНалоговыхНакладныхАванс.РазрезВидПоставки,
	|	ВложенныйЗапрос.СтавкаНДС,
	|	ТаблицаНалоговыхНакладныхАванс.ОсновнаяНалоговая,
	|	ВложенныйЗапрос.ЦенаНН
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатковПоДокументамОтгрузки.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаОстатковПоДокументамОтгрузки.ВидПоставки,
	|	ТаблицаОстатковПоДокументамОтгрузки.Валюта КАК Валюта,
	|	ТаблицаОстатковПоДокументамОтгрузки.СпособЗаполнения,
	|	ТаблицаОстатковПоДокументамОтгрузки.СтавкаНДС,
	|	ТаблицаОстатковПоДокументамОтгрузки.НомерГТД,
	|	ТаблицаОстатковПоДокументамОтгрузки.Номенклатура,
	|	ТаблицаОстатковПоДокументамОтгрузки.Характеристика,
	|	ТаблицаОстатковПоДокументамОтгрузки.Упаковка,
	|	ТаблицаОстатковПоДокументамОтгрузки.ЦенаНН,
	|	ТаблицаОстатковПоДокументамОтгрузки.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ТаблицаОстатковПоДокументамОтгрузки.ДокументПоставки КАК ДокументПоставки,
	|	ТаблицаОстатковПоДокументамОтгрузки.ДокументПоставкиДляВозвратов,
	|	ТаблицаОстатковПоДокументамОтгрузки.КоличествоУпаковокОстаток,
	|	ТаблицаОстатковПоДокументамОтгрузки.СуммаВзаиморасчетовОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаПревышенийНОПоДокументамПоДням.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|		ТаблицаПревышенийНОПоДокументамПоДням.Валюта КАК Валюта
	|	ИЗ
	|		ТаблицаПревышенийНОПоДокументамПоДням КАК ТаблицаПревышенийНОПоДокументамПоДням
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаПревышенийНОПоДокументамПоДням.Валюта,
	|		ТаблицаПревышенийНОПоДокументамПоДням.АналитикаУчетаПоПартнерам) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатковПоДокументамОтгрузки КАК ТаблицаОстатковПоДокументамОтгрузки
	|		ПО ВложенныйЗапрос.АналитикаУчетаПоПартнерам = ТаблицаОстатковПоДокументамОтгрузки.АналитикаУчетаПоПартнерам
	|			И ВложенныйЗапрос.Валюта = ТаблицаОстатковПоДокументамОтгрузки.Валюта
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчетаПоПартнерам,
	|	Валюта,
	|	ОбъектРасчетов,
	|	ДокументПоставки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРеальныхНалоговыхПоДнямАванс.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаРеальныхНалоговыхПоДнямАванс.Валюта КАК Валюта,
	|	ВложенныйЗапрос.День КАК День,
	|	ТаблицаРеальныхНалоговыхПоДнямАванс.ОсновнаяНалоговая,
	|	ТаблицаРеальныхНалоговыхПоДнямАванс.ВидОперацииОсновнойНалоговой,
	|	ТаблицаРеальныхНалоговыхПоДнямАванс.РазрезВидПоставки,
	|	ТаблицаРеальныхНалоговыхПоДнямАванс.ТекущийНалоговыйДокумент КАК ТекущийНалоговыйДокумент,
	|	ТаблицаРеальныхНалоговыхПоДнямАванс.СтавкаНДС,
	|	ТаблицаРеальныхНалоговыхПоДнямАванс.НомерГТД,
	|	ТаблицаРеальныхНалоговыхПоДнямАванс.Номенклатура,
	|	ТаблицаРеальныхНалоговыхПоДнямАванс.Характеристика,
	|	ТаблицаРеальныхНалоговыхПоДнямАванс.Упаковка,
	|	ТаблицаРеальныхНалоговыхПоДнямАванс.ЦенаНН,
	|	ТаблицаРеальныхНалоговыхПоДнямАванс.КоличествоУпаковок,
	|	ТаблицаРеальныхНалоговыхПоДнямАванс.СуммаВзаиморасчетов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаПревышенийНОПоДокументамПоДням.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|		ТаблицаПревышенийНОПоДокументамПоДням.Валюта КАК Валюта,
	|		ТаблицаПревышенийНОПоДокументамПоДням.День КАК День
	|	ИЗ
	|		ТаблицаПревышенийНОПоДокументамПоДням КАК ТаблицаПревышенийНОПоДокументамПоДням
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаПревышенийНОПоДокументамПоДням.Валюта,
	|		ТаблицаПревышенийНОПоДокументамПоДням.День,
	|		ТаблицаПревышенийНОПоДокументамПоДням.АналитикаУчетаПоПартнерам) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРеальныхНалоговыхПоДнямАванс КАК ТаблицаРеальныхНалоговыхПоДнямАванс
	|		ПО ВложенныйЗапрос.АналитикаУчетаПоПартнерам = ТаблицаРеальныхНалоговыхПоДнямАванс.АналитикаУчетаПоПартнерам
	|			И ВложенныйЗапрос.Валюта = ТаблицаРеальныхНалоговыхПоДнямАванс.Валюта
	|			И ВложенныйЗапрос.День = ТаблицаРеальныхНалоговыхПоДнямАванс.День
	|
	|УПОРЯДОЧИТЬ ПО
	|	День,
	|	АналитикаУчетаПоПартнерам,
	|	Валюта,
	|	ТекущийНалоговыйДокумент
	|ИТОГИ ПО
	|	День
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПревышенийНОПоДокументамПоДням.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаПревышенийНОПоДокументамПоДням.Валюта КАК Валюта,
	|	ТаблицаПревышенийНОПоДокументамПоДням.День КАК День,
	|	ТаблицаПревышенийНОПоДокументамПоДням.РазрезВидПоставки,
	|	ТаблицаПревышенийНОПоДокументамПоДням.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ТаблицаПревышенийНОПоДокументамПоДням.ДокументПоставки КАК ДокументПоставки,
	|	ТаблицаПревышенийНОПоДокументамПоДням.СуммаВзаиморасчетов,
	|	ТаблицаПревышенийНОПоДокументамПоДням.СуммаВозникшихНОЗаДень,
	|	ТаблицаПревышенийНОПоДокументамПоДням.СуммаПревышенияНО
	|ИЗ
	|	ТаблицаПревышенийНОПоДокументамПоДням КАК ТаблицаПревышенийНОПоДокументамПоДням
	|
	|УПОРЯДОЧИТЬ ПО
	|	День,
	|	АналитикаУчетаПоПартнерам,
	|	Валюта,
	|	ОбъектРасчетов,
	|	ДокументПоставки
	|ИТОГИ ПО
	|	День
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаНалоговыхНакладных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаРеальныхНалоговыхПоДням
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаПревышенийНОПоДокументамПоДням
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаОстатковПоДокументамОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаРеальныхНалоговыхПоДнямАванс
	|";
						
						
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаОстатковНоменклатурыДляПодбора = РезультатЗапроса[5].Выгрузить();
	
	ВыборкаАвансовНалоговыхПоДням = РезультатЗапроса[6].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаПоПревышениямПоДням = РезультатЗапроса[7].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	

	Пока ВыборкаПоПревышениямПоДням.Следующий() Цикл
		
        ВыборкаПоПревышениямЗаДень = ВыборкаПоПревышениямПоДням.Выбрать();
		
		ВыборкаАвансовНалоговыхПоДням.Следующий();
		
		ВыборкаАвансовНалоговыхЗаДень = ВыборкаАвансовНалоговыхПоДням.Выбрать();
		
		ТаблицаСуммПревышенийПоДокументамПоставкиЗаДень = СформироватьТаблицуСуммПревышенийПоДокументаПоставкиЗаДень(ВыборкаПоПревышениямЗаДень);

		СопоставитьСтрокиНаСуммуПоДокументамОтгрузкиЗаДень(ТаблицаОстатковНоменклатурыДляПодбора, ТаблицаСуммПревышенийПоДокументамПоставкиЗаДень, ВыборкаАвансовНалоговыхЗаДень);
		
	КонецЦикла;

#КонецОбласти // Этап3

#Область Этап4


	ТаблицаСформированыхНалоговых = Новый ТаблицаЗначений;//"АналитикаУчетаПоПартнерам, ОбъектРасчетов, Валюта, День, ВидОперацииОсновнойНалоговой"
	ТаблицаСформированыхНалоговых.Колонки.Добавить("ОсновнаяНалоговая");
	ТаблицаСформированыхНалоговых.Колонки.Добавить("НалоговыйДокументДляКорректировки");
	ТаблицаСформированыхНалоговых.Колонки.Добавить("ВидОперацииОсновнойНалоговой");
	ТаблицаСформированыхНалоговых.Колонки.Добавить("РазрезВидПоставки");
	ТаблицаСформированыхНалоговых.Колонки.Добавить("АналитикаУчетаПоПартнерам");
	ТаблицаСформированыхНалоговых.Колонки.Добавить("ОбъектРасчетов");
	ТаблицаСформированыхНалоговых.Колонки.Добавить("Валюта");
	ТаблицаСформированыхНалоговых.Колонки.Добавить("День");
	ТаблицаСформированыхНалоговых.Колонки.Добавить("ДеньДокумента");
	
	МожноЗаписыватьТекущий = Ложь;


	Запрос.Текст = "
	|ВЫБРАТЬ
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.АналитикаУчетаПоПартнерам,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Валюта,
	|	НАЧАЛОПЕРИОДА(НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Период, ДЕНЬ) КАК День,
	|	МАКСИМУМ(НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор) КАК ОсновнаяНалоговая,
	|	ВЫБОР
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОблагаемыеОперации)
	|			    ТОГДА ""07_ОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОсвобожденныеОперации)
	|			    ТОГДА ""07_ОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.НеНДСОперации)
	|			    ТОГДА ""07_НеНДСОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОблагаемыеОперации)
	|			    ТОГДА ""07_ИтоговаяРозницаОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОсвобожденныеОперации)
	|			    ТОГДА ""07_ИтоговаяРозницаОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.УсловнаяПродажа)
	|			    ТОГДА ""07_УсловнаяПродажа""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОблагаемыеОперации)
	|			    ТОГДА ""07_РозницаКонрагентуОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОсвобожденныеОперации)
	|			    ТОГДА ""07_РозницаКонрагентуОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РаботыОтНерезидента)
	|			    ТОГДА ""07_РаботыОтНерезидента""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ПродажаНижеОбычнойЦены)
	|			    ТОГДА ""07_ПродажаНижеОбычнойЦены""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОблагаемыеОперации)
	|			    ТОГДА ""14_ОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОсвобожденныеОперации)
	|			    ТОГДА ""14_ОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.НеНДСОперации)
	|			    ТОГДА ""14_НеНДСОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОблагаемыеОперации)
	|			    ТОГДА ""14_ИтоговаяРозницаОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОсвобожденныеОперации)
	|			    ТОГДА ""14_ИтоговаяРозницаОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.УсловнаяПродажа)
	|			    ТОГДА ""14_УсловнаяПродажа""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОблагаемыеОперации)
	|			    ТОГДА ""14_РозницаКонрагентуОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОсвобожденныеОперации)
	|			    ТОГДА ""14_РозницаКонрагентуОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РаботыОтНерезидента)
	|			    ТОГДА ""14_РаботыОтНерезидента""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ПродажаНижеОбычнойЦены)
	|			    ТОГДА ""14_ПродажаНижеОбычнойЦены""
	|		ИНАЧЕ НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации
	|	КОНЕЦ КАК ВидОперацииОсновнойНалоговой,
	|	ВЫБОР
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Розница)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Розница)
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Поставка)
	|	КОНЕЦ КАК РазрезВидПоставки
	|ПОМЕСТИТЬ ТаблицаНалоговыхНакладных
	|ИЗ
	|	РегистрНакопления.НДСНоменклатурныйСоставДляНалоговыхНакладных.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Регистратор,
	|			(&НеИспользоватьОтборПоАналитикеУчетаПоПартнерам ИЛИ АналитикаУчетаПоПартнерам В (&АналитикаУчетаПоПартнерамОтбор))
	|	) КАК НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты
	|ГДЕ
	|	(ТИПЗНАЧЕНИЯ(НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор) = ТИП(Документ.НалоговаяНакладная)
	|	 ИЛИ ТИПЗНАЧЕНИЯ(НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор) = ТИП(Документ.Приложение2КНалоговойНакладной)
	|	 И (НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|		ИЛИ НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)))
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.АналитикаУчетаПоПартнерам,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Валюта,
	|	НАЧАЛОПЕРИОДА(НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Период, ДЕНЬ),
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации,
	|	ВЫБОР
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОблагаемыеОперации)
	|			    ТОГДА ""07_ОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОсвобожденныеОперации)
	|			    ТОГДА ""07_ОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.НеНДСОперации)
	|			    ТОГДА ""07_НеНДСОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОблагаемыеОперации)
	|			    ТОГДА ""07_ИтоговаяРозницаОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОсвобожденныеОперации)
	|			    ТОГДА ""07_ИтоговаяРозницаОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.УсловнаяПродажа)
	|			    ТОГДА ""07_УсловнаяПродажа""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОблагаемыеОперации)
	|			    ТОГДА ""07_РозницаКонрагентуОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОсвобожденныеОперации)
	|			    ТОГДА ""07_РозницаКонрагентуОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РаботыОтНерезидента)
	|			    ТОГДА ""07_РаботыОтНерезидента""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ПродажаНижеОбычнойЦены)
	|			    ТОГДА ""07_ПродажаНижеОбычнойЦены""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОблагаемыеОперации)
	|			    ТОГДА ""14_ОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОсвобожденныеОперации)
	|			    ТОГДА ""14_ОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.НеНДСОперации)
	|			    ТОГДА ""14_НеНДСОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОблагаемыеОперации)
	|			    ТОГДА ""14_ИтоговаяРозницаОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОсвобожденныеОперации)
	|			    ТОГДА ""14_ИтоговаяРозницаОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.УсловнаяПродажа)
	|			    ТОГДА ""14_УсловнаяПродажа""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОблагаемыеОперации)
	|			    ТОГДА ""14_РозницаКонрагентуОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОсвобожденныеОперации)
	|			    ТОГДА ""14_РозницаКонрагентуОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РаботыОтНерезидента)
	|			    ТОГДА ""14_РаботыОтНерезидента""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ПродажаНижеОбычнойЦены)
	|			    ТОГДА ""14_ПродажаНижеОбычнойЦены""
	|		ИНАЧЕ НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Розница)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Розница)
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Поставка)
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНалоговыхНакладных.АналитикаУчетаПоПартнерам,
	|	ТаблицаНалоговыхНакладных.Валюта,
	|	ТаблицаНалоговыхНакладных.День,
	|	ТаблицаНалоговыхНакладных.ОсновнаяНалоговая,
	|	ТаблицаНалоговыхНакладных.ВидОперацииОсновнойНалоговой,
	|	ТаблицаНалоговыхНакладных.РазрезВидПоставки,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор КАК ТекущийНалоговыйДокумент,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.СтавкаНДС,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.НомерГТД,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Номенклатура,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Характеристика,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Упаковка,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.ЦенаНН,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.ОбъектРасчетов,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.ДокументПоставки,
	|	СУММА(НДСНоменклатурныйСоставДляНалоговыхНакладных.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(НДСНоменклатурныйСоставДляНалоговыхНакладных.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов
	|ПОМЕСТИТЬ ТаблицаРеальныхНалоговыхПоДням
	|ИЗ
	|	ТаблицаНалоговыхНакладных КАК ТаблицаНалоговыхНакладных
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСНоменклатурныйСоставДляНалоговыхНакладных КАК НДСНоменклатурныйСоставДляНалоговыхНакладных
	|		ПО (ТаблицаНалоговыхНакладных.ОсновнаяНалоговая = НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор
	|				ИЛИ ТаблицаНалоговыхНакладных.ОсновнаяНалоговая = НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор.НалоговаяНакладная
	|					И НДСНоменклатурныйСоставДляНалоговыхНакладных.ВидПоставки <> ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|					И НДСНоменклатурныйСоставДляНалоговыхНакладных.ВидПоставки <> ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|				ИЛИ ТаблицаНалоговыхНакладных.ОсновнаяНалоговая = НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор.ОсновноеП2ДляВозврата
	|					И (НДСНоменклатурныйСоставДляНалоговыхНакладных.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|						ИЛИ НДСНоменклатурныйСоставДляНалоговыхНакладных.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)))
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.НомерГТД,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.ОбъектРасчетов,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Номенклатура,
	|	ТаблицаНалоговыхНакладных.АналитикаУчетаПоПартнерам,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Упаковка,
	|	ТаблицаНалоговыхНакладных.ОсновнаяНалоговая,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Характеристика,
	|	ТаблицаНалоговыхНакладных.День,
	|	ТаблицаНалоговыхНакладных.ВидОперацииОсновнойНалоговой,
	|	ТаблицаНалоговыхНакладных.РазрезВидПоставки,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.СтавкаНДС,
	|	ТаблицаНалоговыхНакладных.Валюта,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.ДокументПоставки,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.ЦенаНН,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВложенныйЗапрос.СуммаВзаиморасчетов, 0) КАК СуммаВзаиморасчетов,
	|	ТаблицаНалоговыхОбязательств.СуммаВозникшихНОЗаДень КАК СуммаВозникшихНОЗаДень,
	|	ТаблицаНалоговыхОбязательств.СуммаВозникшихНОЗаДень - ЕСТЬNULL(ВложенныйЗапрос.СуммаВзаиморасчетов, 0) КАК СуммаПревышения,
	|	ТаблицаНалоговыхОбязательств.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаНалоговыхОбязательств.Валюта КАК Валюта,
	|	ТаблицаНалоговыхОбязательств.День КАК День,
	|	ТаблицаНалоговыхОбязательств.РазрезВидПоставки КАК РазрезВидПоставки,
	|	ТаблицаНалоговыхОбязательств.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ТаблицаНалоговыхОбязательств.ДокументПоставки КАК ДокументПоставки
	|ПОМЕСТИТЬ ТаблицаПревышенийНОПоДокументамПоДням
	|ИЗ
	|	ТаблицаНалоговыхОбязательств КАК ТаблицаНалоговыхОбязательств
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТаблицаРеальныхНалоговыхПоДням.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|			ТаблицаРеальныхНалоговыхПоДням.Валюта КАК Валюта,
	|			ТаблицаРеальныхНалоговыхПоДням.День КАК День,
	|			ТаблицаРеальныхНалоговыхПоДням.РазрезВидПоставки КАК РазрезВидПоставки,
	|			ТаблицаРеальныхНалоговыхПоДням.ОбъектРасчетов КАК ОбъектРасчетов,
	|			ТаблицаРеальныхНалоговыхПоДням.ДокументПоставки КАК ДокументПоставки,
	|			СУММА(ТаблицаРеальныхНалоговыхПоДням.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов
	|		ИЗ
	|			ТаблицаРеальныхНалоговыхПоДням КАК ТаблицаРеальныхНалоговыхПоДням
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаРеальныхНалоговыхПоДням.День,
	|			ТаблицаРеальныхНалоговыхПоДням.Валюта,
	|			ТаблицаРеальныхНалоговыхПоДням.ДокументПоставки,
	|			ТаблицаРеальныхНалоговыхПоДням.РазрезВидПоставки,
	|			ТаблицаРеальныхНалоговыхПоДням.АналитикаУчетаПоПартнерам,
	|			ТаблицаРеальныхНалоговыхПоДням.ОбъектРасчетов
	|		) КАК ВложенныйЗапрос
	|		ПО (ВложенныйЗапрос.АналитикаУчетаПоПартнерам = ТаблицаНалоговыхОбязательств.АналитикаУчетаПоПартнерам)
	|			И (ВложенныйЗапрос.ОбъектРасчетов = ТаблицаНалоговыхОбязательств.ОбъектРасчетов)
	|			И (ВложенныйЗапрос.Валюта = ТаблицаНалоговыхОбязательств.Валюта)
	|			И (ВложенныйЗапрос.День = ТаблицаНалоговыхОбязательств.День)
	|			И (ВложенныйЗапрос.РазрезВидПоставки = ТаблицаНалоговыхОбязательств.РазрезВидПоставки)
	|			И (ВложенныйЗапрос.ДокументПоставки = ТаблицаНалоговыхОбязательств.ДокументПоставки)
	|ГДЕ
	|	ЕСТЬNULL(ВложенныйЗапрос.СуммаВзаиморасчетов, 0) < ТаблицаНалоговыхОбязательств.СуммаВозникшихНОЗаДень
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПревышенийНОПоДокументамПоДням.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаПревышенийНОПоДокументамПоДням.Валюта КАК Валюта,
	|	ТаблицаПревышенийНОПоДокументамПоДням.День КАК День,
	|	ТаблицаПревышенийНОПоДокументамПоДням.РазрезВидПоставки КАК РазрезВидПоставки,
	|	ТаблицаПревышенийНОПоДокументамПоДням.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ТаблицаПревышенийНОПоДокументамПоДням.ДокументПоставки КАК ДокументПоставки,
	|	ТаблицаПревышенийНОПоДокументамПоДням.СуммаПревышения
	|ИЗ
	|	ТаблицаПревышенийНОПоДокументамПоДням КАК ТаблицаПревышенийНОПоДокументамПоДням
	|
	|УПОРЯДОЧИТЬ ПО
	|	День,
	|	АналитикаУчетаПоПартнерам,
	|	Валюта,
	|	РазрезВидПоставки,
	|	ОбъектРасчетов,
	|	ДокументПоставки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРеальныхНалоговыхПоДням.АналитикаУчетаПоПартнерам,
	|	ТаблицаРеальныхНалоговыхПоДням.Валюта,
	|	ТаблицаРеальныхНалоговыхПоДням.День,
	|	ТаблицаРеальныхНалоговыхПоДням.ОсновнаяНалоговая,
	|	ТаблицаРеальныхНалоговыхПоДням.ВидОперацииОсновнойНалоговой,
	|	ТаблицаРеальныхНалоговыхПоДням.РазрезВидПоставки,
	|	ВЫБОР
	|		КОГДА ТаблицаРеальныхНалоговыхПоДням.РазрезВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|				ИЛИ ТаблицаРеальныхНалоговыхПоДням.РазрезВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|			ТОГДА ЕСТЬNULL(ТаблицаРеальныхНалоговыхПоДням.ОсновнаяНалоговая.НалоговаяНакладная, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НалоговаяНакладнаяДляВозвратов,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ТаблицаРеальныхНалоговыхПоДням.ТекущийНалоговыйДокумент.РазрешенаАвтоКорректировка
	|				ТОГДА ТаблицаРеальныхНалоговыхПоДням.ТекущийНалоговыйДокумент
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ) КАК НалоговыйДокументДляКорректировки
	|ИЗ
	|	ТаблицаРеальныхНалоговыхПоДням КАК ТаблицаРеальныхНалоговыхПоДням
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРеальныхНалоговыхПоДням.День,
	|	ТаблицаРеальныхНалоговыхПоДням.Валюта,
	|	ТаблицаРеальныхНалоговыхПоДням.АналитикаУчетаПоПартнерам,
	|	ТаблицаРеальныхНалоговыхПоДням.ВидОперацииОсновнойНалоговой,
	|	ТаблицаРеальныхНалоговыхПоДням.РазрезВидПоставки,
	|	ТаблицаРеальныхНалоговыхПоДням.ОсновнаяНалоговая,
	|	ВЫБОР
	|		КОГДА ТаблицаРеальныхНалоговыхПоДням.РазрезВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|				ИЛИ ТаблицаРеальныхНалоговыхПоДням.РазрезВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|			ТОГДА ЕСТЬNULL(ТаблицаРеальныхНалоговыхПоДням.ОсновнаяНалоговая.НалоговаяНакладная, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.АналитикаУчетаПоПартнерам,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.ВидПоставки,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.Валюта,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.СпособЗаполнения,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.СтавкаНДС,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.НомерГТД,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.Номенклатура,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.Характеристика,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.Упаковка,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.ЦенаНН,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.ОбъектРасчетов,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.ДокументПоставки,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.ДокументПоставкиДляВозвратов,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.КоличествоУпаковокОстаток,
	|   НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.СуммаВзаиморасчетовОстаток
	|
	|ПОМЕСТИТЬ ТаблицаОстатковПоДокументамОтгрузки
	|
	|ИЗ
	|	РегистрНакопления.НДСНоменклатурныйСоставДляНалоговыхНакладных.Остатки(
	|			,
	|			ДокументПоставки В
	|					(ВЫБРАТЬ
	|						ТаблицаПревышенийНОПоДокументамПоДням.ДокументПоставки
	|					ИЗ
	|						ТаблицаПревышенийНОПоДокументамПоДням)
	|			И (&НеИспользоватьОтборПоАналитикеУчетаПоПартнерам ИЛИ АналитикаУчетаПоПартнерам В (&АналитикаУчетаПоПартнерамОтбор))
	|   ) КАК НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки
	|ГДЕ
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.ДокументПоставки <> НЕОПРЕДЕЛЕНО
	|	И НДСНоменклатурныйСоставДляНалоговыхНакладныхОстатки.СуммаВзаиморасчетовОстаток > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатковПоДокументамОтгрузки.АналитикаУчетаПоПартнерам,
	|	ТаблицаОстатковПоДокументамОтгрузки.ВидПоставки,
	|	ТаблицаОстатковПоДокументамОтгрузки.Валюта,
	|	ТаблицаОстатковПоДокументамОтгрузки.СпособЗаполнения,
	|	ТаблицаОстатковПоДокументамОтгрузки.СтавкаНДС,
	|	ТаблицаОстатковПоДокументамОтгрузки.НомерГТД,
	|	ТаблицаОстатковПоДокументамОтгрузки.Номенклатура,
	|	ТаблицаОстатковПоДокументамОтгрузки.Характеристика,
	|	ТаблицаОстатковПоДокументамОтгрузки.Упаковка,
	|	ТаблицаОстатковПоДокументамОтгрузки.ЦенаНН,
	|	ТаблицаОстатковПоДокументамОтгрузки.ОбъектРасчетов,
	|	ТаблицаОстатковПоДокументамОтгрузки.ДокументПоставки,
	|	ТаблицаОстатковПоДокументамОтгрузки.ДокументПоставкиДляВозвратов,
	|	ТаблицаОстатковПоДокументамОтгрузки.КоличествоУпаковокОстаток,
	|	ТаблицаОстатковПоДокументамОтгрузки.СуммаВзаиморасчетовОстаток,
	|	ЕСТЬNULL(ВложенныйЗапрос.НалоговаяНакладнаяДляВозвратов, ЕСТЬNULL(ВложенныйЗапрос1.НалоговаяНакладнаяДляПереоценки, НЕОПРЕДЕЛЕНО)) КАК НалоговаяНакладнаяДляВозвратов
	|ИЗ
	|	ТаблицаОстатковПоДокументамОтгрузки КАК ТаблицаОстатковПоДокументамОтгрузки
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВложенныйЗапрос.ДокументПоставкиДляВозвратов КАК ДокументПоставкиДляВозвратов,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА ТИПЗНАЧЕНИЯ(НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор) = ТИП(Документ.НалоговаяНакладная)
	|						ТОГДА НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор
	|					ИНАЧЕ НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор.НалоговаяНакладная
	|				КОНЕЦ) КАК НалоговаяНакладнаяДляВозвратов
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ТаблицаОстатковПоДокументамОтгрузки.ДокументПоставкиДляВозвратов КАК ДокументПоставкиДляВозвратов
	|			ИЗ
	|				ТаблицаОстатковПоДокументамОтгрузки КАК ТаблицаОстатковПоДокументамОтгрузки
	|			ГДЕ
	|				ТаблицаОстатковПоДокументамОтгрузки.ДокументПоставкиДляВозвратов <> НЕОПРЕДЕЛЕНО
	|				И ТаблицаОстатковПоДокументамОтгрузки.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ТаблицаОстатковПоДокументамОтгрузки.ДокументПоставкиДляВозвратов) КАК ВложенныйЗапрос
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСНоменклатурныйСоставДляНалоговыхНакладных КАК НДСНоменклатурныйСоставДляНалоговыхНакладных
	|				ПО ВложенныйЗапрос.ДокументПоставкиДляВозвратов = НДСНоменклатурныйСоставДляНалоговыхНакладных.ДокументПоставки
	|		ГДЕ
	|			(ТИПЗНАЧЕНИЯ(НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор) = ТИП(Документ.НалоговаяНакладная)
	|					ИЛИ ТИПЗНАЧЕНИЯ(НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор) = ТИП(Документ.Приложение2КНалоговойНакладной))
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВложенныйЗапрос.ДокументПоставкиДляВозвратов) КАК ВложенныйЗапрос
	|		ПО ТаблицаОстатковПоДокументамОтгрузки.ДокументПоставкиДляВозвратов = ВложенныйЗапрос.ДокументПоставкиДляВозвратов
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МАКСИМУМ(НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор) КАК НалоговаяНакладнаяДляПереоценки,
	|			ВложенныйЗапрос.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|			ВложенныйЗапрос.Валюта КАК Валюта
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ТаблицаОстатковПоДокументамОтгрузки.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|				ТаблицаОстатковПоДокументамОтгрузки.Валюта КАК Валюта
	|			ИЗ
	|				ТаблицаОстатковПоДокументамОтгрузки КАК ТаблицаОстатковПоДокументамОтгрузки
	|			ГДЕ
	|				ТаблицаОстатковПоДокументамОтгрузки.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)) КАК ВложенныйЗапрос
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСНоменклатурныйСоставДляНалоговыхНакладных КАК НДСНоменклатурныйСоставДляНалоговыхНакладных
	|				ПО ВложенныйЗапрос.АналитикаУчетаПоПартнерам = НДСНоменклатурныйСоставДляНалоговыхНакладных.АналитикаУчетаПоПартнерам
	|					И ВложенныйЗапрос.Валюта = НДСНоменклатурныйСоставДляНалоговыхНакладных.Валюта
	|		ГДЕ
	|			ТИПЗНАЧЕНИЯ(НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор) = ТИП(Документ.НалоговаяНакладная)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВложенныйЗапрос.Валюта,
	|			ВложенныйЗапрос.АналитикаУчетаПоПартнерам) КАК ВложенныйЗапрос1
	|		ПО ТаблицаОстатковПоДокументамОтгрузки.АналитикаУчетаПоПартнерам = ВложенныйЗапрос1.АналитикаУчетаПоПартнерам
	|			И ТаблицаОстатковПоДокументамОтгрузки.Валюта = ВложенныйЗапрос1.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаПревышенийНОПоДокументамПоДням.АналитикаУчетаПоПартнерам КАК Справочник.КлючиАналитикиУчетаПоПартнерам).Организация КАК Объект
	|ИЗ
	|	ТаблицаПревышенийНОПоДокументамПоДням КАК ТаблицаПревышенийНОПоДокументамПоДням
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(ТаблицаПревышенийНОПоДокументамПоДням.АналитикаУчетаПоПартнерам КАК Справочник.КлючиАналитикиУчетаПоПартнерам).Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаНалоговыхНакладных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаРеальныхНалоговыхПоДням
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаПревышенийНОПоДокументамПоДням
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаНалоговыхОбязательств
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаОстатковПоДокументамОтгрузки
	|";

	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаПоПревышениямНО = РезультатЗапроса[3].Выбрать();
	
	ТаблицаНалоговыхПоДням = РезультатЗапроса[4].Выгрузить();
	ТаблицаНоменклатурыДляЗаполнения = РезультатЗапроса[6].Выгрузить();
	

	ВыборкаДанныхДляПроверкиДатЗапрета = РезультатЗапроса[7].Выбрать();
	
	ТаблицаОграниченийПоДатамЗапрета = ПолучитьТаблицуОграниченийПоДатамЗапрета(ВыборкаДанныхДляПроверкиДатЗапрета, Пользователь, Метаданные.Документы.НалоговаяНакладная.ПолноеИмя());
	
	
	
	ТаблицаНоменклатурыНаСумму = ТаблицаНоменклатурыДляЗаполнения.СкопироватьКолонки();
	ТаблицаНоменклатурыНаСумму.Колонки.Добавить("ВидОперации");
	
	ОтборПоВидуОперации = Новый Структура("ВидОперации, НалоговаяНакладнаяДляВозвратов");
	ОтборПоВидуОперацииДляТаблицыПоНалоговым = Новый Структура("ВидОперацииОсновнойНалоговой, НалоговаяНакладнаяДляВозвратов");
	ОтборПоСтавке = Новый Структура("СтавкаНДС");
	МассивСтрокСНалоговымиЗаДень = Новый Массив;
	ТаблицаСНалоговымиЗаДень = Новый ТаблицаЗначений;
	
	ДатаЗапрета = Неопределено;
	
	ОтборПоСтроке = Новый Структура("Номенклатура, Характеристика, Цена, СтавкаНДС");
	
	СтарыеАналитики = Новый Структура("АналитикаУчетаПоПартнерам, Валюта, РазрезВидПоставки, День");
	
	Пока ВыборкаПоПревышениямНО.Следующий() Цикл
		
		Если АналитикиИзменились(СтарыеАналитики, ВыборкаПоПревышениямНО) Тогда
			
			ЗаполнитьЗначенияСвойств(СтарыеАналитики, ВыборкаПоПревышениямНО);
			
			МассивСтрокСНалоговымиЗаДень = ТаблицаНалоговыхПоДням.НайтиСтроки(СтарыеАналитики);
			
			Если МассивСтрокСНалоговымиЗаДень.Количество() > 0 Тогда
				ТаблицаСНалоговымиЗаДень = ТаблицаНалоговыхПоДням.Скопировать(МассивСтрокСНалоговымиЗаДень, "ВидОперацииОсновнойНалоговой, НалоговаяНакладнаяДляВозвратов, НалоговыйДокументДляКорректировки, ОсновнаяНалоговая");
			Иначе
				ТаблицаСНалоговымиЗаДень = ТаблицаНалоговыхПоДням.СкопироватьКолонки("ВидОперацииОсновнойНалоговой, НалоговаяНакладнаяДляВозвратов, НалоговыйДокументДляКорректировки, ОсновнаяНалоговая");
			КонецЕсли;
			
			ДатаЗапрета = ПолучитьКонечнуюДатуЗапретаИзТаблицы(ТаблицаОграниченийПоДатамЗапрета, СтарыеАналитики.АналитикаУчетаПоПартнерам.Организация, СтарыеАналитики.День);
			
		КонецЕсли;
		
		НайтиСтрокиНаСуммуПревышения(ВыборкаПоПревышениямНО.СуммаПревышения, ВыборкаПоПревышениямНО.ДокументПоставки, ТаблицаНоменклатурыДляЗаполнения, ТаблицаНоменклатурыНаСумму, ВыборкаПоПревышениямНО.День);
		
		ТаблицаВидовОпераций = ТаблицаНоменклатурыНаСумму.Скопировать(,"ВидОперации, НалоговаяНакладнаяДляВозвратов");
		ТаблицаВидовОпераций.Свернуть("ВидОперации, НалоговаяНакладнаяДляВозвратов");
		
		Для каждого СтрокаВидаОперации ИЗ ТаблицаВидовОпераций Цикл
			
			ОтборПоВидуОперации.ВидОперации = СтрокаВидаОперации.ВидОперации;
			ОтборПоВидуОперации.НалоговаяНакладнаяДляВозвратов = СтрокаВидаОперации.НалоговаяНакладнаяДляВозвратов;
			ОтборПоВидуОперацииДляТаблицыПоНалоговым.ВидОперацииОсновнойНалоговой = СтрокаВидаОперации.ВидОперации;
			ОтборПоВидуОперацииДляТаблицыПоНалоговым.НалоговаяНакладнаяДляВозвратов = СтрокаВидаОперации.НалоговаяНакладнаяДляВозвратов;
			
			СтрокиПоВидуОперации = ТаблицаНоменклатурыНаСумму.НайтиСтроки(ОтборПоВидуОперации);
			
			
			СтрокиСНалоговыми = ТаблицаСНалоговымиЗаДень.НайтиСтроки(ОтборПоВидуОперацииДляТаблицыПоНалоговым);
			СтрокаСНалоговой = ?(СтрокиСНалоговыми.Количество() > 0, СтрокиСНалоговыми[0], Неопределено);
			
			Если СтарыеАналитики.РазрезВидПоставки = Перечисления.ВидыПоставки.Возврат Тогда
				КоэффициентНаправлениеДвижения = -1;
			Иначе
				КоэффициентНаправлениеДвижения = 1;
			КонецЕсли;
			
			Если СтарыеАналитики.РазрезВидПоставки = Перечисления.ВидыПоставки.Переоценка Тогда
				ЭтоПереоценка = Истина;
			Иначе
				ЭтоПереоценка = Ложь;
			КонецЕсли;
			
/////////////////////////////////////////Отдельной процедурой///////////////////////////////////////////////

			Если СтрокаСНалоговой = Неопределено ИЛИ (ДатаЗапрета <> Неопределено) Тогда
				
				НалоговыйОбъект = СформироватьИЗаполнитьНалоговыйОбъект(СтарыеАналитики, Новый Структура("ВидОперации, ДатаЗапрета, НалоговаяНакладнаяДляВозвратов",
																											СтрокаВидаОперации.ВидОперации,
																											ДатаЗапрета,
																											СтрокаВидаОперации.НалоговаяНакладнаяДляВозвратов));
			
				СтрокаНовойНалоговой = ТаблицаСформированыхНалоговых.Добавить();
								
				СтрокаНовойНалоговой.ОсновнаяНалоговая = НалоговыйОбъект;
				СтрокаНовойНалоговой.ВидОперацииОсновнойНалоговой = СтрокаВидаОперации.ВидОперации;
				СтрокаНовойНалоговой.НалоговыйДокументДляКорректировки = НалоговыйОбъект;
				СтрокаНовойНалоговой.АналитикаУчетаПоПартнерам = СтарыеАналитики.АналитикаУчетаПоПартнерам;
				СтрокаНовойНалоговой.Валюта = СтарыеАналитики.Валюта;
				СтрокаНовойНалоговой.День = СтарыеАналитики.День;
				СтрокаНовойНалоговой.РазрезВидПоставки = СтарыеАналитики.РазрезВидПоставки;
				СтрокаНовойНалоговой.ДеньДокумента = СтарыеАналитики.День;
				
				МожноЗаписыватьТекущий = Ложь;
			
			ИначеЕсли ЗначениеЗаполнено(СтрокаСНалоговой.НалоговыйДокументДляКорректировки) Тогда
			
				НалоговыйОбъект = СтрокаСНалоговой.НалоговыйДокументДляКорректировки.ПолучитьОбъект();	
				
				НалоговыйОбъект.Статус = Перечисления.СтатусыНалоговыхДокументов.Сформирован;
				
				МожноЗаписыватьТекущий = Истина;
				
			ИначеЕсли ЗначениеЗаполнено(СтрокаСНалоговой.ОсновнаяНалоговая) Тогда
				
				НалоговыйОбъект = СформироватьИЗаполнитьНалоговыйОбъект(СтарыеАналитики, Новый Структура("НалоговаяНакладнаяДляВозвратов, ОсновнаяНалоговаяДляП2",
																											СтрокаСНалоговой.НалоговаяНакладнаяДляВозвратов,
																											СтрокаСНалоговой.ОсновнаяНалоговая));
			
				СтрокаНовойНалоговой = ТаблицаСформированыхНалоговых.Добавить();
				
				СтрокаНовойНалоговой.ОсновнаяНалоговая = СтрокаСНалоговой.ОсновнаяНалоговая;
                СтрокаНовойНалоговой.ВидОперацииОсновнойНалоговой = ?(СтрокаСНалоговой.ОсновнаяНалоговая.СпецРежимНалогообложения = 7,
                    СформироватьВидОперацииПоСтавке7(СтрокаСНалоговой.ОсновнаяНалоговая.ВидОперации),
                    ?(СтрокаСНалоговой.ОсновнаяНалоговая.НалоговаяНакладнаяПоСтавке14,
                        СформироватьВидОперацииПоСтавке14(СтрокаСНалоговой.ОсновнаяНалоговая.ВидОперации),
                        СтрокаСНалоговой.ОсновнаяНалоговая.ВидОперации
                    )    
                );
				СтрокаНовойНалоговой.НалоговыйДокументДляКорректировки = НалоговыйОбъект;
				СтрокаНовойНалоговой.АналитикаУчетаПоПартнерам = СтарыеАналитики.АналитикаУчетаПоПартнерам;
				СтрокаНовойНалоговой.Валюта = СтарыеАналитики.Валюта;
				СтрокаНовойНалоговой.День = СтарыеАналитики.День;
				СтрокаНовойНалоговой.РазрезВидПоставки = СтарыеАналитики.РазрезВидПоставки;
				СтрокаНовойНалоговой.ДеньДокумента = ТекущаяДата();
				
				МожноЗаписыватьТекущий = Ложь;
			
			КонецЕсли;

				
			Для каждого СтрокаТовара Из СтрокиПоВидуОперации Цикл
				
				Если СтрокаТовара.СпособЗаполнения = Перечисления.СпособыЗаполненияНоменклатурыНалоговыхДокументов.ТоварыУслуги Тогда
					
					НоваяСтрока = НалоговыйОбъект.Товары.Добавить();
					
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТовара);
					НоваяСтрока.Цена = СтрокаТовара.ЦенаНН;
					НоваяСтрока.КоличествоУпаковок = КоэффициентНаправлениеДвижения * СтрокаТовара.КоличествоУпаковокОстаток;
					Если ЭтоПереоценка Тогда
						НоваяСтрока.ЭтоКорректировкаКоличества = Ложь;
						НоваяСтрока.СуммаСНДС = ?(НоваяСтрока.Цена < 0, -1, 1) * СтрокаТовара.СуммаВзаиморасчетовОстаток;
					Иначе
						НоваяСтрока.СуммаСНДС = КоэффициентНаправлениеДвижения * СтрокаТовара.СуммаВзаиморасчетовОстаток;
					КонецЕсли;
					
				ИначеЕсли СтрокаТовара.СпособЗаполнения = Перечисления.СпособыЗаполненияНоменклатурыНалоговыхДокументов.УслугиССдержанием Тогда
					
					НоваяСтрока = НалоговыйОбъект.Товары.Добавить();
					
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТовара);
					НоваяСтрока.Цена = СтрокаТовара.ЦенаНН;
					НоваяСтрока.КоличествоУпаковок = КоэффициентНаправлениеДвижения * СтрокаТовара.КоличествоУпаковокОстаток;
					Если ЭтоПереоценка Тогда
						НоваяСтрока.ЭтоКорректировкаКоличества = Ложь;
						НоваяСтрока.СуммаСНДС = ?(НоваяСтрока.Цена < 0, -1, 1) * СтрокаТовара.СуммаВзаиморасчетовОстаток;
					Иначе
						НоваяСтрока.СуммаСНДС = КоэффициентНаправлениеДвижения * СтрокаТовара.СуммаВзаиморасчетовОстаток;
					КонецЕсли;
					
					ЗаполнитьЗначенияСвойств(ОтборПоСтроке, СтрокаТовара);
					Если СтрокаТовара.ДокументПоставки.ЦенаВключаетНДС Тогда
						ОтборПоСтроке.Цена = Окр(СтрокаТовара.ЦенаНН * (1 + НДСОбщегоНазначенияКлиентСервер.ПолучитьСтавкуНДСЧислом(ОтборПоСтроке.СтавкаНДС)), 2);
					Иначе
						ОтборПоСтроке.Цена = СтрокаТовара.ЦенаНН;
					КонецЕсли;
					
						ТЧДляПоиска = СтрокаТовара.ДокументПоставки.Услуги;
					
					МассивСтрок = ТЧДляПоиска.НайтиСтроки(ОтборПоСтроке);
					
					Если МассивСтрок.Количество() > 0 Тогда
						НоваяСтрока.Содержание = МассивСтрок[0].Содержание;
					КонецЕсли;
					
				ИначеЕсли СтрокаТовара.СпособЗаполнения = Перечисления.СпособыЗаполненияНоменклатурыНалоговыхДокументов.ТоварыПрочее Тогда
					
					ОтборПоСтавке.СтавкаНДС = СтрокаТовара.СтавкаНДС;
					
					ТаблицаСтрокТЧ = СтрокаТовара.ДокументПоставки.Доходы.Выгрузить(ОтборПоСтавке);
					
					СуммаСНДСПолная = ТаблицаСтрокТЧ.Итог("СуммаСНДС");
					
					Для каждого Строка Из ТаблицаСтрокТЧ Цикл
						
						НоваяСтрока = НалоговыйОбъект.Товары.Добавить();
					
						ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
						
						НоваяСтрока.ОбъектРасчетов = СтрокаТовара.ОбъектРасчетов;
						НоваяСтрока.ДокументПоставки = СтрокаТовара.ДокументПоставки;
						
						НоваяСтрока.КоличествоУпаковок = КоэффициентНаправлениеДвижения * ((Строка.Количество * СтрокаТовара.СуммаВзаиморасчетовОстаток) / СуммаСНДСПолная);
						НоваяСтрока.СуммаСНДС = КоэффициентНаправлениеДвижения * ((Строка.СуммаСНДС * СтрокаТовара.СуммаВзаиморасчетовОстаток) / СуммаСНДСПолная);
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если МожноЗаписыватьТекущий Тогда
				НалоговыйОбъект.ЗаполнитьРеквизитыПослеАвтоформирования();
				НалоговыйОбъект.Записать(РежимЗаписиДокумента.Проведение);
            Иначе     
            	НалоговыйОбъект.ЗаполнитьСпецРежимНалогообложения();
			КонецЕсли;
			
			Если СтрокаСНалоговой = Неопределено ИЛИ (ДатаЗапрета <> Неопределено) Тогда
				НоваяСтрока = ТаблицаСНалоговымиЗаДень.Добавить();
                НоваяСтрока.ВидОперацииОсновнойНалоговой = ?(НалоговыйОбъект.СпецРежимНалогообложения = 7,
                    СформироватьВидОперацииПоСтавке7(НалоговыйОбъект.ВидОперации),
                    ?(НалоговыйОбъект.НалоговаяНакладнаяПоСтавке14,
                        СформироватьВидОперацииПоСтавке14(НалоговыйОбъект.ВидОперации),
                        НалоговыйОбъект.ВидОперации
                    )    
                );
				НоваяСтрока.НалоговыйДокументДляКорректировки = НалоговыйОбъект.Ссылка;
				НоваяСтрока.ОсновнаяНалоговая = НалоговыйОбъект.Ссылка;
			ИначеЕсли ЗначениеЗаполнено(СтрокаСНалоговой.ОсновнаяНалоговая) Тогда
				СтрокаСНалоговой.НалоговыйДокументДляКорректировки = НалоговыйОбъект.Ссылка;
			КонецЕсли;
			
			
		КонецЦикла;
		
		
	КонецЦикла;
	
#КонецОбласти // Этап4

#Область Этап5 

	
	ЗапросАванс = Новый Запрос;
	ЗапросАванс.Текст = "
	|ВЫБРАТЬ
	|	НДСРасчетНалоговыхОбязательствОбороты.АналитикаУчетаПоПартнерам,
	|	НДСРасчетНалоговыхОбязательствОбороты.ОбъектРасчетов,
	|	НДСРасчетНалоговыхОбязательствОбороты.Валюта,
	|	СУММА(НДСРасчетНалоговыхОбязательствОбороты.СуммаПоставкиТребующаяРегистрацииННОборот) КАК СуммаВозникшихНОЗаДень,
	|	НАЧАЛОПЕРИОДА(НДСРасчетНалоговыхОбязательствОбороты.Период, ДЕНЬ) КАК День,
	|	ВЫБОР
	|		КОГДА НДСРасчетНалоговыхОбязательствОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|		КОГДА НДСРасчетНалоговыхОбязательствОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|		КОГДА НДСРасчетНалоговыхОбязательствОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Розница)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Розница)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Поставка)
	|	КОНЕЦ КАК РазрезВидПоставки
	|ПОМЕСТИТЬ ТаблицаНалоговыхОбязательств
	|ИЗ
	|	РегистрНакопления.НДСРасчетНалоговыхОбязательств.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			День,
	|			(&НеИспользоватьОтборПоАналитикеУчетаПоПартнерам ИЛИ АналитикаУчетаПоПартнерам В (&АналитикаУчетаПоПартнерамОтбор))
	|	) КАК НДСРасчетНалоговыхОбязательствОбороты
	|ГДЕ
	|	НДСРасчетНалоговыхОбязательствОбороты.ДокументПоставки = НЕОПРЕДЕЛЕНО
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСРасчетНалоговыхОбязательствОбороты.Валюта,
	|	НДСРасчетНалоговыхОбязательствОбороты.ОбъектРасчетов,
	|	НДСРасчетНалоговыхОбязательствОбороты.АналитикаУчетаПоПартнерам,
	|	НАЧАЛОПЕРИОДА(НДСРасчетНалоговыхОбязательствОбороты.Период, ДЕНЬ),
	|	ВЫБОР
	|		КОГДА НДСРасчетНалоговыхОбязательствОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|		КОГДА НДСРасчетНалоговыхОбязательствОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|		КОГДА НДСРасчетНалоговыхОбязательствОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Розница)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Розница)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Поставка)
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.АналитикаУчетаПоПартнерам,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Валюта,
	|	НАЧАЛОПЕРИОДА(НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Период, ДЕНЬ) КАК День,
	|	МАКСИМУМ(НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор) КАК ОсновнаяНалоговая,
	|	ВЫБОР
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОблагаемыеОперации)
	|			    ТОГДА ""07_ОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОсвобожденныеОперации)
	|			    ТОГДА ""07_ОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.НеНДСОперации)
	|			    ТОГДА ""07_НеНДСОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОблагаемыеОперации)
	|			    ТОГДА ""07_ИтоговаяРозницаОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОсвобожденныеОперации)
	|			    ТОГДА ""07_ИтоговаяРозницаОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.УсловнаяПродажа)
	|			    ТОГДА ""07_УсловнаяПродажа""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОблагаемыеОперации)
	|			    ТОГДА ""07_РозницаКонрагентуОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОсвобожденныеОперации)
	|			    ТОГДА ""07_РозницаКонрагентуОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РаботыОтНерезидента)
	|			    ТОГДА ""07_РаботыОтНерезидента""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ПродажаНижеОбычнойЦены)
	|			    ТОГДА ""07_ПродажаНижеОбычнойЦены""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОблагаемыеОперации)
	|			    ТОГДА ""14_ОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОсвобожденныеОперации)
	|			    ТОГДА ""14_ОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.НеНДСОперации)
	|			    ТОГДА ""14_НеНДСОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОблагаемыеОперации)
	|			    ТОГДА ""14_ИтоговаяРозницаОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОсвобожденныеОперации)
	|			    ТОГДА ""14_ИтоговаяРозницаОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.УсловнаяПродажа)
	|			    ТОГДА ""14_УсловнаяПродажа""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОблагаемыеОперации)
	|			    ТОГДА ""14_РозницаКонрагентуОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОсвобожденныеОперации)
	|			    ТОГДА ""14_РозницаКонрагентуОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РаботыОтНерезидента)
	|			    ТОГДА ""14_РаботыОтНерезидента""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ПродажаНижеОбычнойЦены)
	|			    ТОГДА ""14_ПродажаНижеОбычнойЦены""
	|		ИНАЧЕ НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации
	|	КОНЕЦ КАК ВидОперацииОсновнойНалоговой,
	|	ВЫБОР
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Розница)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Розница)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Поставка)
	|	КОНЕЦ КАК РазрезВидПоставки
	|ПОМЕСТИТЬ ТаблицаНалоговыхНакладных
	|ИЗ
	|	РегистрНакопления.НДСНоменклатурныйСоставДляНалоговыхНакладных.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Регистратор,
	|			(&НеИспользоватьОтборПоАналитикеУчетаПоПартнерам ИЛИ АналитикаУчетаПоПартнерам В (&АналитикаУчетаПоПартнерамОтбор))
	|	) КАК НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты
	|ГДЕ
	|	(ТИПЗНАЧЕНИЯ(НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор) = ТИП(Документ.НалоговаяНакладная)
	|			ИЛИ ТИПЗНАЧЕНИЯ(НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор) = ТИП(Документ.Приложение2КНалоговойНакладной)
	|				И (НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|					ИЛИ НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)))
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.АналитикаУчетаПоПартнерам,
	|	НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Валюта,
	|	НАЧАЛОПЕРИОДА(НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Период, ДЕНЬ),
	|	ВЫБОР
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОблагаемыеОперации)
	|			    ТОГДА ""07_ОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОсвобожденныеОперации)
	|			    ТОГДА ""07_ОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.НеНДСОперации)
	|			    ТОГДА ""07_НеНДСОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОблагаемыеОперации)
	|			    ТОГДА ""07_ИтоговаяРозницаОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОсвобожденныеОперации)
	|			    ТОГДА ""07_ИтоговаяРозницаОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.УсловнаяПродажа)
	|			    ТОГДА ""07_УсловнаяПродажа""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОблагаемыеОперации)
	|			    ТОГДА ""07_РозницаКонрагентуОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОсвобожденныеОперации)
	|			    ТОГДА ""07_РозницаКонрагентуОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РаботыОтНерезидента)
	|			    ТОГДА ""07_РаботыОтНерезидента""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.СпецРежимНалогообложения = 7
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ПродажаНижеОбычнойЦены)
	|			    ТОГДА ""07_ПродажаНижеОбычнойЦены""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОблагаемыеОперации)
	|			    ТОГДА ""14_ОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ОсвобожденныеОперации)
	|			    ТОГДА ""14_ОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.НеНДСОперации)
	|			    ТОГДА ""14_НеНДСОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОблагаемыеОперации)
	|			    ТОГДА ""14_ИтоговаяРозницаОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОсвобожденныеОперации)
	|			    ТОГДА ""14_ИтоговаяРозницаОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.УсловнаяПродажа)
	|			    ТОГДА ""14_УсловнаяПродажа""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОблагаемыеОперации)
	|			    ТОГДА ""14_РозницаКонрагентуОблагаемыеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОсвобожденныеОперации)
	|			    ТОГДА ""14_РозницаКонрагентуОсвобожденныеОперации""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РаботыОтНерезидента)
	|			    ТОГДА ""14_РаботыОтНерезидента""
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.НалоговаяНакладнаяПоСтавке14
	|            И НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.ПродажаНижеОбычнойЦены)
	|			    ТОГДА ""14_ПродажаНижеОбычнойЦены""
	|		ИНАЧЕ НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.Регистратор.ВидОперации
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|		КОГДА НДСНоменклатурныйСоставДляНалоговыхНакладныхОбороты.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Розница)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Розница)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Поставка)
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНалоговыхНакладных.АналитикаУчетаПоПартнерам,
	|	ТаблицаНалоговыхНакладных.Валюта,
	|	ТаблицаНалоговыхНакладных.День,
	|	ТаблицаНалоговыхНакладных.ОсновнаяНалоговая,
	|	ТаблицаНалоговыхНакладных.ВидОперацииОсновнойНалоговой,
	|	ТаблицаНалоговыхНакладных.РазрезВидПоставки,
	|	ЕСТЬNULL(ВложенныйЗапрос.ТекущийНалоговыйДокумент, ТаблицаНалоговыхНакладных.ОсновнаяНалоговая) КАК ТекущийНалоговыйДокумент,
	|	ВложенныйЗапрос.СтавкаНДС,
	|	ВложенныйЗапрос.НомерГТД,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Упаковка,
	|	ВложенныйЗапрос.ЦенаНН,
	|	ВложенныйЗапрос.ОбъектРасчетов,
	|	СУММА(ВложенныйЗапрос.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(ВложенныйЗапрос.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов
	|ПОМЕСТИТЬ ТаблицаРеальныхНалоговыхПоДням
	|ИЗ
	|	ТаблицаНалоговыхНакладных КАК ТаблицаНалоговыхНакладных
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТаблицаНалоговыхНакладных.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|			ТаблицаНалоговыхНакладных.Валюта КАК Валюта,
	|			ТаблицаНалоговыхНакладных.День КАК День,
	|			ТаблицаНалоговыхНакладных.РазрезВидПоставки КАК РазрезВидПоставки,
	|			ТаблицаНалоговыхНакладных.ОсновнаяНалоговая КАК ОсновнаяНалоговая,
	|			ТаблицаНалоговыхНакладных.ВидОперацииОсновнойНалоговой КАК ВидОперацииОсновнойНалоговой,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор КАК ТекущийНалоговыйДокумент,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.СтавкаНДС КАК СтавкаНДС,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.НомерГТД КАК НомерГТД,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.Номенклатура КАК Номенклатура,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.Характеристика КАК Характеристика,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.Упаковка КАК Упаковка,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.ЦенаНН КАК ЦенаНН,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.ОбъектРасчетов КАК ОбъектРасчетов,
	|			СУММА(НДСНоменклатурныйСоставДляНалоговыхНакладных.КоличествоУпаковок) КАК КоличествоУпаковок,
	|			СУММА(НДСНоменклатурныйСоставДляНалоговыхНакладных.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов
	|		ИЗ
	|			ТаблицаНалоговыхНакладных КАК ТаблицаНалоговыхНакладных
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСНоменклатурныйСоставДляНалоговыхНакладных КАК НДСНоменклатурныйСоставДляНалоговыхНакладных
	|				ПО (ТаблицаНалоговыхНакладных.ОсновнаяНалоговая = НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор
	|						ИЛИ ТаблицаНалоговыхНакладных.ОсновнаяНалоговая = НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор.НалоговаяНакладная
	|							И НДСНоменклатурныйСоставДляНалоговыхНакладных.ВидПоставки <> ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|							И НДСНоменклатурныйСоставДляНалоговыхНакладных.ВидПоставки <> ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|						ИЛИ ТаблицаНалоговыхНакладных.ОсновнаяНалоговая = НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор.ОсновноеП2ДляВозврата
	|							И (НДСНоменклатурныйСоставДляНалоговыхНакладных.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|								ИЛИ НДСНоменклатурныйСоставДляНалоговыхНакладных.ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)))
	|		ГДЕ
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.ДокументПоставки = НЕОПРЕДЕЛЕНО
	|		
	|		СГРУППИРОВАТЬ ПО
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.ОбъектРасчетов,
	|			ТаблицаНалоговыхНакладных.АналитикаУчетаПоПартнерам,
	|			ТаблицаНалоговыхНакладных.ОсновнаяНалоговая,
	|			ТаблицаНалоговыхНакладных.День,
	|			ТаблицаНалоговыхНакладных.РазрезВидПоставки,
	|			ТаблицаНалоговыхНакладных.ВидОперацииОсновнойНалоговой,
	|			ТаблицаНалоговыхНакладных.Валюта,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.СтавкаНДС,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.НомерГТД,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.Номенклатура,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.Характеристика,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.Упаковка,
	|			НДСНоменклатурныйСоставДляНалоговыхНакладных.ЦенаНН) КАК ВложенныйЗапрос
	|		ПО ТаблицаНалоговыхНакладных.АналитикаУчетаПоПартнерам = ВложенныйЗапрос.АналитикаУчетаПоПартнерам
	|			И ТаблицаНалоговыхНакладных.Валюта = ВложенныйЗапрос.Валюта
	|			И ТаблицаНалоговыхНакладных.День = ВложенныйЗапрос.День
	|			И ТаблицаНалоговыхНакладных.РазрезВидПоставки = ВложенныйЗапрос.РазрезВидПоставки
	|			И ТаблицаНалоговыхНакладных.ОсновнаяНалоговая = ВложенныйЗапрос.ОсновнаяНалоговая
	|			И ТаблицаНалоговыхНакладных.ВидОперацииОсновнойНалоговой = ВложенныйЗапрос.ВидОперацииОсновнойНалоговой
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.НомерГТД,
	|	ТаблицаНалоговыхНакладных.АналитикаУчетаПоПартнерам,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Упаковка,
	|	ТаблицаНалоговыхНакладных.ВидОперацииОсновнойНалоговой,
	|	ТаблицаНалоговыхНакладных.Валюта,
	|	ЕСТЬNULL(ВложенныйЗапрос.ТекущийНалоговыйДокумент, ТаблицаНалоговыхНакладных.ОсновнаяНалоговая),
	|	ВложенныйЗапрос.ОбъектРасчетов,
	|	ТаблицаНалоговыхНакладных.День,
	|	ТаблицаНалоговыхНакладных.РазрезВидПоставки,
	|	ВложенныйЗапрос.СтавкаНДС,
	|	ТаблицаНалоговыхНакладных.ОсновнаяНалоговая,
	|	ВложенныйЗапрос.ЦенаНН
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВложенныйЗапрос.СуммаВзаиморасчетов, 0) КАК СуммаВзаиморасчетов,
	|	ЕСТЬNULL(ТаблицаНалоговыхОбязательств.СуммаВозникшихНОЗаДень, 0) КАК СуммаВозникшихНОЗаДень,
	|	ЕСТЬNULL(ВложенныйЗапрос.СуммаВзаиморасчетов, 0) - ЕСТЬNULL(ТаблицаНалоговыхОбязательств.СуммаВозникшихНОЗаДень, 0) КАК СуммаПревышения,
	|	ЕСТЬNULL(ТаблицаНалоговыхОбязательств.АналитикаУчетаПоПартнерам, ВложенныйЗапрос.АналитикаУчетаПоПартнерам) КАК АналитикаУчетаПоПартнерам,
	|	ЕСТЬNULL(ТаблицаНалоговыхОбязательств.ОбъектРасчетов, ВложенныйЗапрос.ОбъектРасчетов) КАК ОбъектРасчетов,
	|	ЕСТЬNULL(ТаблицаНалоговыхОбязательств.Валюта, ВложенныйЗапрос.Валюта) КАК Валюта,
	|	ЕСТЬNULL(ТаблицаНалоговыхОбязательств.День, ВложенныйЗапрос.День) КАК День,
	|	ЕСТЬNULL(ТаблицаНалоговыхОбязательств.РазрезВидПоставки, ВложенныйЗапрос.РазрезВидПоставки) КАК РазрезВидПоставки
	|ПОМЕСТИТЬ ТаблицаПревышенийНОПоДокументамПоДням
	|ИЗ
	|	ТаблицаНалоговыхОбязательств КАК ТаблицаНалоговыхОбязательств
	|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТаблицаРеальныхНалоговыхПоДням.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|			ТаблицаРеальныхНалоговыхПоДням.ОбъектРасчетов КАК ОбъектРасчетов,
	|			ТаблицаРеальныхНалоговыхПоДням.Валюта КАК Валюта,
	|			ТаблицаРеальныхНалоговыхПоДням.День КАК День,
	|			ТаблицаРеальныхНалоговыхПоДням.РазрезВидПоставки КАК РазрезВидПоставки,
	|			СУММА(ТаблицаРеальныхНалоговыхПоДням.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов
	|		ИЗ
	|			ТаблицаРеальныхНалоговыхПоДням КАК ТаблицаРеальныхНалоговыхПоДням
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаРеальныхНалоговыхПоДням.День,
	|			ТаблицаРеальныхНалоговыхПоДням.РазрезВидПоставки,
	|			ТаблицаРеальныхНалоговыхПоДням.Валюта,
	|			ТаблицаРеальныхНалоговыхПоДням.АналитикаУчетаПоПартнерам,
	|			ТаблицаРеальныхНалоговыхПоДням.ОбъектРасчетов) КАК ВложенныйЗапрос
	|		ПО (ВложенныйЗапрос.АналитикаУчетаПоПартнерам = ТаблицаНалоговыхОбязательств.АналитикаУчетаПоПартнерам)
	|			И (ВложенныйЗапрос.ОбъектРасчетов = ТаблицаНалоговыхОбязательств.ОбъектРасчетов)
	|			И (ВложенныйЗапрос.Валюта = ТаблицаНалоговыхОбязательств.Валюта)
	|			И (ВложенныйЗапрос.День = ТаблицаНалоговыхОбязательств.День)
	|			И (ВложенныйЗапрос.РазрезВидПоставки = ТаблицаНалоговыхОбязательств.РазрезВидПоставки)
	|ГДЕ
	|	ЕСТЬNULL(ТаблицаНалоговыхОбязательств.СуммаВозникшихНОЗаДень, 0) <> ЕСТЬNULL(ВложенныйЗапрос.СуммаВзаиморасчетов, 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.АналитикаУчетаПоПартнерам,
	|	ВложенныйЗапрос.ОбъектРасчетов,
	|	ВложенныйЗапрос.Валюта,
	|	МАКСИМУМ(ЕСТЬNULL(НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор, НЕОПРЕДЕЛЕНО)) КАК НалоговаяНакладнаяДляВозвратов
	|ПОМЕСТИТЬ АналитикаСНалоговымиНаВозврат
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаПревышенийНОПоДокументамПоДням.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|		ТаблицаПревышенийНОПоДокументамПоДням.ОбъектРасчетов КАК ОбъектРасчетов,
	|		ТаблицаПревышенийНОПоДокументамПоДням.Валюта КАК Валюта
	|	ИЗ
	|		ТаблицаПревышенийНОПоДокументамПоДням КАК ТаблицаПревышенийНОПоДокументамПоДням
	|	ГДЕ
	|		ТаблицаПревышенийНОПоДокументамПоДням.РазрезВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	|		ИЛИ ТаблицаПревышенийНОПоДокументамПоДням.РазрезВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаПревышенийНОПоДокументамПоДням.Валюта,
	|		ТаблицаПревышенийНОПоДокументамПоДням.АналитикаУчетаПоПартнерам,
	|		ТаблицаПревышенийНОПоДокументамПоДням.ОбъектРасчетов
	|	) КАК ВложенныйЗапрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.НДСНоменклатурныйСоставДляНалоговыхНакладных КАК НДСНоменклатурныйСоставДляНалоговыхНакладных
	|		ПО ВложенныйЗапрос.АналитикаУчетаПоПартнерам = НДСНоменклатурныйСоставДляНалоговыхНакладных.АналитикаУчетаПоПартнерам
	|			И ВложенныйЗапрос.ОбъектРасчетов = НДСНоменклатурныйСоставДляНалоговыхНакладных.ОбъектРасчетов
	|			И ВложенныйЗапрос.Валюта = НДСНоменклатурныйСоставДляНалоговыхНакладных.Валюта
	|ГДЕ
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.ДокументПоставки = НЕОПРЕДЕЛЕНО
	|	И ТИПЗНАЧЕНИЯ(НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор) = ТИП(Документ.НалоговаяНакладная)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.АналитикаУчетаПоПартнерам,
	|	ВложенныйЗапрос.Валюта,
	|	ВложенныйЗапрос.ОбъектРасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПревышенийНОПоДокументамПоДням.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаПревышенийНОПоДокументамПоДням.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ТаблицаПревышенийНОПоДокументамПоДням.Валюта КАК Валюта,
	|	ТаблицаПревышенийНОПоДокументамПоДням.День КАК День,
	|	ТаблицаПревышенийНОПоДокументамПоДням.РазрезВидПоставки КАК РазрезВидПоставки,
	|	МАКСИМУМ(ТаблицаПревышенийНОПоДокументамПоДням.СуммаПревышения) КАК СуммаПревышения,
	|	ТаблицаРеальныхНалоговыхПоДням.ОсновнаяНалоговая,
	|	ТаблицаРеальныхНалоговыхПоДням.ВидОперацииОсновнойНалоговой,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ТаблицаРеальныхНалоговыхПоДням.ТекущийНалоговыйДокумент.РазрешенаАвтоКорректировка
	|				ТОГДА ТаблицаРеальныхНалоговыхПоДням.ТекущийНалоговыйДокумент
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ) КАК НалоговыйДокументДляКорректировки,
	|	ЕСТЬNULL(ТаблицаРеальныхНалоговыхПоДням.ОсновнаяНалоговая.НалоговаяНакладная, ЕСТЬNULL(АналитикаСНалоговымиНаВозврат.НалоговаяНакладнаяДляВозвратов, НЕОПРЕДЕЛЕНО)) КАК НалоговаяНакладнаяДляВозвратов
	|ИЗ
	|	ТаблицаПревышенийНОПоДокументамПоДням КАК ТаблицаПревышенийНОПоДокументамПоДням
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТаблицаРеальныхНалоговыхПоДням.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|			ТаблицаРеальныхНалоговыхПоДням.Валюта КАК Валюта,
	|			ТаблицаРеальныхНалоговыхПоДням.День КАК День,
	|			ТаблицаРеальныхНалоговыхПоДням.РазрезВидПоставки КАК РазрезВидПоставки,
	|			ТаблицаРеальныхНалоговыхПоДням.ОсновнаяНалоговая КАК ОсновнаяНалоговая,
	|			ТаблицаРеальныхНалоговыхПоДням.ВидОперацииОсновнойНалоговой КАК ВидОперацииОсновнойНалоговой,
	|			ТаблицаРеальныхНалоговыхПоДням.ТекущийНалоговыйДокумент КАК ТекущийНалоговыйДокумент
	|		ИЗ
	|			ТаблицаРеальныхНалоговыхПоДням КАК ТаблицаРеальныхНалоговыхПоДням
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТаблицаРеальныхНалоговыхПоДням.День,
	|			ТаблицаРеальныхНалоговыхПоДням.РазрезВидПоставки,
	|			ТаблицаРеальныхНалоговыхПоДням.Валюта,
	|			ТаблицаРеальныхНалоговыхПоДням.АналитикаУчетаПоПартнерам,
	|			ТаблицаРеальныхНалоговыхПоДням.ОсновнаяНалоговая,
	|			ТаблицаРеальныхНалоговыхПоДням.ВидОперацииОсновнойНалоговой,
	|			ТаблицаРеальныхНалоговыхПоДням.ТекущийНалоговыйДокумент) КАК ТаблицаРеальныхНалоговыхПоДням
	|		ПО ТаблицаПревышенийНОПоДокументамПоДням.АналитикаУчетаПоПартнерам = ТаблицаРеальныхНалоговыхПоДням.АналитикаУчетаПоПартнерам
	|			И ТаблицаПревышенийНОПоДокументамПоДням.Валюта = ТаблицаРеальныхНалоговыхПоДням.Валюта
	|			И ТаблицаПревышенийНОПоДокументамПоДням.День = ТаблицаРеальныхНалоговыхПоДням.День
	|			И ТаблицаПревышенийНОПоДокументамПоДням.РазрезВидПоставки = ТаблицаРеальныхНалоговыхПоДням.РазрезВидПоставки
	|		ЛЕВОЕ СОЕДИНЕНИЕ АналитикаСНалоговымиНаВозврат КАК АналитикаСНалоговымиНаВозврат
	|		ПО ТаблицаПревышенийНОПоДокументамПоДням.АналитикаУчетаПоПартнерам = АналитикаСНалоговымиНаВозврат.АналитикаУчетаПоПартнерам
	|			И ТаблицаПревышенийНОПоДокументамПоДням.ОбъектРасчетов = АналитикаСНалоговымиНаВозврат.ОбъектРасчетов
	|			И ТаблицаПревышенийНОПоДокументамПоДням.Валюта = АналитикаСНалоговымиНаВозврат.Валюта
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПревышенийНОПоДокументамПоДням.ОбъектРасчетов,
	|	ТаблицаРеальныхНалоговыхПоДням.ОсновнаяНалоговая,
	|	ТаблицаПревышенийНОПоДокументамПоДням.АналитикаУчетаПоПартнерам,
	|	ТаблицаПревышенийНОПоДокументамПоДням.Валюта,
	|	ТаблицаПревышенийНОПоДокументамПоДням.День,
	|	ТаблицаПревышенийНОПоДокументамПоДням.РазрезВидПоставки,
	|	ТаблицаРеальныхНалоговыхПоДням.ВидОперацииОсновнойНалоговой,
	|	ЕСТЬNULL(ТаблицаРеальныхНалоговыхПоДням.ОсновнаяНалоговая.НалоговаяНакладная, ЕСТЬNULL(АналитикаСНалоговымиНаВозврат.НалоговаяНакладнаяДляВозвратов, НЕОПРЕДЕЛЕНО))
	|
	|УПОРЯДОЧИТЬ ПО
	|	День,
	|	РазрезВидПоставки,
	|	АналитикаУчетаПоПартнерам,
	|	Валюта,
	|	ОбъектРасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРеальныхНалоговыхПоДням.АналитикаУчетаПоПартнерам,
	|	ТаблицаРеальныхНалоговыхПоДням.ОбъектРасчетов,
	|	ТаблицаРеальныхНалоговыхПоДням.Валюта,
	|	ТаблицаРеальныхНалоговыхПоДням.День,
	|	ТаблицаРеальныхНалоговыхПоДням.РазрезВидПоставки,
	|	ТаблицаРеальныхНалоговыхПоДням.ОсновнаяНалоговая,
	|	ТаблицаРеальныхНалоговыхПоДням.ВидОперацииОсновнойНалоговой,
	|	ТаблицаРеальныхНалоговыхПоДням.СтавкаНДС,
	|	ТаблицаРеальныхНалоговыхПоДням.НомерГТД,
	|	ТаблицаРеальныхНалоговыхПоДням.Номенклатура,
	|	ТаблицаРеальныхНалоговыхПоДням.Характеристика,
	|	ТаблицаРеальныхНалоговыхПоДням.Упаковка,
	|	ТаблицаРеальныхНалоговыхПоДням.ЦенаНН КАК Цена,
	|	ЕСТЬNULL(СУММА(ТаблицаРеальныхНалоговыхПоДням.КоличествоУпаковок), 0) КАК КоличествоУпаковок,
	|	ЕСТЬNULL(СУММА(ТаблицаРеальныхНалоговыхПоДням.СуммаВзаиморасчетов), 0) КАК СуммаСНДС
	|ИЗ
	|	ТаблицаРеальныхНалоговыхПоДням КАК ТаблицаРеальныхНалоговыхПоДням
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРеальныхНалоговыхПоДням.День,
	|	ТаблицаРеальныхНалоговыхПоДням.РазрезВидПоставки,
	|	ТаблицаРеальныхНалоговыхПоДням.АналитикаУчетаПоПартнерам,
	|	ТаблицаРеальныхНалоговыхПоДням.ОбъектРасчетов,
	|	ТаблицаРеальныхНалоговыхПоДням.Валюта,
	|	ТаблицаРеальныхНалоговыхПоДням.СтавкаНДС,
	|	ТаблицаРеальныхНалоговыхПоДням.ОсновнаяНалоговая,
	|	ТаблицаРеальныхНалоговыхПоДням.ВидОперацииОсновнойНалоговой,
	|	ТаблицаРеальныхНалоговыхПоДням.Номенклатура,
	|	ТаблицаРеальныхНалоговыхПоДням.Характеристика,
	|	ТаблицаРеальныхНалоговыхПоДням.НомерГТД,
	|	ТаблицаРеальныхНалоговыхПоДням.Упаковка,
	|	ТаблицаРеальныхНалоговыхПоДням.ЦенаНН
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТаблицаПревышенийНОПоДокументамПоДням.АналитикаУчетаПоПартнерам КАК Справочник.КлючиАналитикиУчетаПоПартнерам).Организация КАК Объект
	|ИЗ
	|	ТаблицаПревышенийНОПоДокументамПоДням КАК ТаблицаПревышенийНОПоДокументамПоДням
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫРАЗИТЬ(ТаблицаПревышенийНОПоДокументамПоДням.АналитикаУчетаПоПартнерам КАК Справочник.КлючиАналитикиУчетаПоПартнерам).Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказыКлиентовОстатки.ЗаказКлиента,
	|	ЗаказыКлиентовОстатки.Номенклатура,
	|	ЗаказыКлиентовОстатки.Характеристика,
	|	ЗаказыКлиентовОстатки.КодСтроки,
	|	СУММА(ЗаказыКлиентовОстатки.ЗаказаноОстаток) КАК ЗаказаноОстаток,
	|	СУММА(ЗаказыКлиентовОстатки.СуммаОстаток) КАК СуммаОстаток
	|ПОМЕСТИТЬ ОстаткиПоЗаказам
	|ИЗ
	|	РегистрНакопления.ЗаказыКлиентов.Остатки(
	|			,
	|			ЗаказКлиента В
	|				(ВЫБРАТЬ
	|					ТаблицаПревышенийНОПоДокументамПоДням.ОбъектРасчетов
	|				ИЗ
	|					ТаблицаПревышенийНОПоДокументамПоДням)) КАК ЗаказыКлиентовОстатки
	|
	|ГДЕ
	|	ЗаказыКлиентовОстатки.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|	ИЛИ НЕ ЕСТЬNULL(ЗаказыКлиентовОстатки.ЗаказКлиента.ВернутьМногооборотнуюТару, ИСТИНА)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказыКлиентовОстатки.ЗаказКлиента,
	|	ЗаказыКлиентовОстатки.Характеристика,
	|	ЗаказыКлиентовОстатки.Номенклатура,
	|	ЗаказыКлиентовОстатки.КодСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказыКлиентовОстатки.ЗаказКлиента,
	|	ЗаказКлиентаТовары.Номенклатура,
	|	ЗаказКлиентаТовары.Содержание КАК Содержание,	
	|	ЗаказКлиентаТовары.Номенклатура.НоменклатураГТД КАК НомерГТД,
	|	ЗаказКлиентаТовары.Номенклатура.ВестиУчетПоГТД КАК ВестиУчетПоГТД,
	|	ЗаказКлиентаТовары.Характеристика,
	|	ЗаказКлиентаТовары.Упаковка,
	|	ЗаказКлиентаТовары.СтавкаНДС,
	|	(ЗаказКлиентаТовары.СуммаСНДС - ЗаказКлиентаТовары.СуммаНДС) / ЗаказКлиентаТовары.КоличествоУпаковок КАК ЦенаНН,
	|	ЗаказыКлиентовОстатки.ЗаказаноОстаток / ЕСТЬNULL(&ЗаказКлиентаТоварыКоэффициентУпаковки, 1) КАК КоличествоУпаковокОстаток,
	|	ЗаказыКлиентовОстатки.СуммаОстаток
	|ИЗ
	|	ОстаткиПоЗаказам КАК ЗаказыКлиентовОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|		ПО ЗаказыКлиентовОстатки.ЗаказКлиента = ЗаказКлиентаТовары.Ссылка
	|			И ЗаказыКлиентовОстатки.Номенклатура = ЗаказКлиентаТовары.Номенклатура
	|			И ЗаказыКлиентовОстатки.Характеристика = ЗаказКлиентаТовары.Характеристика
	|			И ЗаказыКлиентовОстатки.КодСтроки = ЗаказКлиентаТовары.КодСтроки
	|
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ЗаказыКлиентовОстатки.ЗаказКлиента) = ТИП(Документ.ЗаказКлиента)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаказыКлиентовОстатки.ЗаказКлиента,
	|	ЗаявкаЗаменяющиеТовары.Номенклатура,
	|	ЗаявкаЗаменяющиеТовары.Содержание,
	|	ЗаявкаЗаменяющиеТовары.Номенклатура.НоменклатураГТД,
	|	ЗаявкаЗаменяющиеТовары.Номенклатура.ВестиУчетПоГТД,
	|	ЗаявкаЗаменяющиеТовары.Характеристика,
	|	ЗаявкаЗаменяющиеТовары.Упаковка,
	|	ЗаявкаЗаменяющиеТовары.СтавкаНДС,
	|	(ЗаявкаЗаменяющиеТовары.СуммаСНДС - ЗаявкаЗаменяющиеТовары.СуммаНДС) / ЗаявкаЗаменяющиеТовары.КоличествоУпаковок КАК ЦенаНН,
	|	ЗаказыКлиентовОстатки.ЗаказаноОстаток / ЕСТЬNULL(&ЗаявкаЗаменяющиеТоварыКоэффициентУпаковки, 1) КАК КоличествоУпаковокОстаток,
	|	ЗаказыКлиентовОстатки.СуммаОстаток
	|ИЗ
	|	ОстаткиПоЗаказам КАК ЗаказыКлиентовОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВозвратТоваровОтКлиента.ЗаменяющиеТовары КАК ЗаявкаЗаменяющиеТовары
	|		ПО ЗаказыКлиентовОстатки.ЗаказКлиента = ЗаявкаЗаменяющиеТовары.Ссылка
	|			И ЗаказыКлиентовОстатки.Номенклатура = ЗаявкаЗаменяющиеТовары.Номенклатура
	|			И ЗаказыКлиентовОстатки.Характеристика = ЗаявкаЗаменяющиеТовары.Характеристика
	|			И ЗаказыКлиентовОстатки.КодСтроки = ЗаявкаЗаменяющиеТовары.КодСтроки
	|
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ЗаказыКлиентовОстатки.ЗаказКлиента) = ТИП(Документ.ЗаявкаНаВозвратТоваровОтКлиента)";
	
	
	ЗапросАванс.УстановитьПараметр("НачалоПериода", Запрос.Параметры.НачалоПериода);
	ЗапросАванс.УстановитьПараметр("КонецПериода", Запрос.Параметры.КонецПериода);
	
	ЗапросАванс.УстановитьПараметр("НеИспользоватьОтборПоАналитикеУчетаПоПартнерам", Запрос.Параметры.НеИспользоватьОтборПоАналитикеУчетаПоПартнерам);
	ЗапросАванс.УстановитьПараметр("АналитикаУчетаПоПартнерамОтбор", Запрос.Параметры.АналитикаУчетаПоПартнерамОтбор);
	
	ЗапросАванс.Текст = СтрЗаменить(ЗапросАванс.Текст,
		"&ЗаказКлиентаТоварыКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ЗаказКлиентаТовары.Упаковка",
		"ЗаказКлиентаТовары.Номенклатура"));
		
	ЗапросАванс.Текст = СтрЗаменить(ЗапросАванс.Текст,
		"&ЗаявкаЗаменяющиеТоварыКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ЗаявкаЗаменяющиеТовары.Упаковка",
		"ЗаявкаЗаменяющиеТовары.Номенклатура"));
	
	
	РезультатЗапроса = ЗапросАванс.ВыполнитьПакет();
	
	ВыборкаПоПревышениям = РезультатЗапроса[5].Выбрать();
	
	ТаблицаНоменклатурыДляОчистки = РезультатЗапроса[6].Выгрузить();
	

	ВыборкаДанныхДляПроверкиДатЗапрета = РезультатЗапроса[7].Выбрать();
	
	ТаблицаОграниченийПоДатамЗапрета = ПолучитьТаблицуОграниченийПоДатамЗапрета(ВыборкаДанныхДляПроверкиДатЗапрета, Пользователь, Метаданные.Документы.НалоговаяНакладная.ПолноеИмя());
	

	ТаблицаЗаказов = РезультатЗапроса[9].Выгрузить();
	
	ОтборПоискаПоЗаказу = Новый Структура("ЗаказКлиента");
	
	ОтборСформированыхНалоговых = Новый Структура("АналитикаУчетаПоПартнерам, Валюта, РазрезВидПоставки, День, ВидОперацииОсновнойНалоговой");
	
	СтарыеАналитики = Новый Структура("АналитикаУчетаПоПартнерам, ОбъектРасчетов, Валюта, РазрезВидПоставки, День, НалоговаяНакладнаяДляВозвратов");
	АналитикиБезОбъектРасчетов = Новый Структура("АналитикаУчетаПоПартнерам, Валюта, РазрезВидПоставки, День, НалоговаяНакладнаяДляВозвратов");
	
	ОтборПоСтавкамНДС = Новый Структура("СтавкаНДС");
	ОбъектРасчетовЭтоЗаказ = Ложь;
	СуммаАвансаПослеЗаказа = 0;
	ТаблицаСтрокЗаказа = Неопределено;
	ПогрешностиОкругления = Новый Соответствие();
	ТаблицаВидовОперацийННДляЗаказа = Неопределено;
	ТаблицаДопНалоговыхДляПоиска = Новый ТаблицаЗначений;//"АналитикаУчетаПоПартнерам, ОбъектРасчетов, Валюта, День, ВидОперацииОсновнойНалоговой"
	ТаблицаДопНалоговыхДляПоиска.Колонки.Добавить("ОсновнаяНалоговая");
	ТаблицаДопНалоговыхДляПоиска.Колонки.Добавить("НалоговыйДокументДляКорректировки");
	ТаблицаДопНалоговыхДляПоиска.Колонки.Добавить("ВидОперацииОсновнойНалоговой");
	ТаблицаДопНалоговыхДляПоиска.Колонки.Добавить("РазрезВидПоставки");
	ТаблицаДопНалоговыхДляПоиска.Колонки.Добавить("АналитикаУчетаПоПартнерам");
	ТаблицаДопНалоговыхДляПоиска.Колонки.Добавить("ОбъектРасчетов");
	ТаблицаДопНалоговыхДляПоиска.Колонки.Добавить("Валюта");
	ТаблицаДопНалоговыхДляПоиска.Колонки.Добавить("День");
	ТаблицаДопНалоговыхДляПоиска.Колонки.Добавить("ДеньДокумента");
	
	ИзменилсяТолькоОбъектРасчетов = Ложь;
	
	ДатаЗапрета = Неопределено;
	СуммаПревышенияНО = 0;
	
	Пока ВыборкаПоПревышениям.Следующий() Цикл
		
		Если АналитикиИзменились(СтарыеАналитики, ВыборкаПоПревышениям) = Истина Тогда
			
			ЗаполнитьЗначенияСвойств(АналитикиБезОбъектРасчетов, СтарыеАналитики);
			Если АналитикиИзменились(АналитикиБезОбъектРасчетов, ВыборкаПоПревышениям) = Истина Тогда
				ИзменилсяТолькоОбъектРасчетов = Ложь;
			Иначе
				ИзменилсяТолькоОбъектРасчетов = Истина;
			КонецЕсли;
			
			Если СуммаПревышенияНО > 0 Тогда
				
				Если ОбъектРасчетовЭтоЗаказ Тогда
					
					СтарыйВидОперации = Неопределено;
					
					Для каждого СтрокаВидаОперации из ТаблицаВидовОперацийННДляЗаказа Цикл
						
						Если СтарыйВидОперации <> СтрокаВидаОперации.ВидОперации Тогда
							
							СтарыйВидОперации = СтрокаВидаОперации.ВидОперации;
							
							ЗаполнитьЗначенияСвойств(ОтборСформированыхНалоговых, СтарыеАналитики);
							ОтборСформированыхНалоговых.ВидОперацииОсновнойНалоговой = СтарыйВидОперации;
							НайденныеНалоговые = ТаблицаСформированыхНалоговых.НайтиСтроки(ОтборСформированыхНалоговых);
							
							Если НайденныеНалоговые.Количество() > 0 Тогда
				
								НалоговыйОбъект = НайденныеНалоговые[0].НалоговыйДокументДляКорректировки;
							
							Иначе
								
								НайденныеНалоговые = ТаблицаДопНалоговыхДляПоиска.НайтиСтроки(ОтборСформированыхНалоговых);
								
								Если НайденныеНалоговые.Количество() > 0 Тогда
				
									НалоговыйОбъект = НайденныеНалоговые[0].НалоговыйДокументДляКорректировки;
									
								Иначе
									
									НалоговыйОбъект = СформироватьИЗаполнитьНалоговыйОбъект(СтарыеАналитики, Новый Структура("ВидОперации, ДатаЗапрета",
																																СтарыйВидОперации,
																																ДатаЗапрета));
									
									СтрокаНовойНалоговой = ТаблицаСформированыхНалоговых.Добавить();
													
									СтрокаНовойНалоговой.ОсновнаяНалоговая = НалоговыйОбъект;
									СтрокаНовойНалоговой.ВидОперацииОсновнойНалоговой = СтарыйВидОперации;
									СтрокаНовойНалоговой.НалоговыйДокументДляКорректировки = НалоговыйОбъект;
									СтрокаНовойНалоговой.АналитикаУчетаПоПартнерам = СтарыеАналитики.АналитикаУчетаПоПартнерам;
									СтрокаНовойНалоговой.ОбъектРасчетов = СтарыеАналитики.ОбъектРасчетов;
									СтрокаНовойНалоговой.Валюта = СтарыеАналитики.Валюта;
									СтрокаНовойНалоговой.День = СтарыеАналитики.День;
									СтрокаНовойНалоговой.РазрезВидПоставки = СтарыеАналитики.РазрезВидПоставки;
									СтрокаНовойНалоговой.ДеньДокумента = СтарыеАналитики.День;
									
									МожноЗаписыватьТекущий = Ложь;
									
								КонецЕсли;
								
							КонецЕсли;
								
						КонецЕсли;
						
						ОтборПоСтавкамНДС.СтавкаНДС = СтрокаВидаОперации.СтавкаНДС;
						СтрокиДляЗаполненияПоВидуОперации = ТаблицаСтрокЗаказа.НайтиСтроки(ОтборПоСтавкамНДС);
						
						Для каждого СтрокаДляЗаполнения Из СтрокиДляЗаполненияПоВидуОперации Цикл
							
							НоваяСтрока = НалоговыйОбъект.Товары.Добавить();
							
							НоваяСтрока.Номенклатура = СтрокаДляЗаполнения.Номенклатура;
							НоваяСтрока.Содержание = СтрокаДляЗаполнения.Содержание;
							НоваяСтрока.Характеристика = СтрокаДляЗаполнения.Характеристика;
							НоваяСтрока.Упаковка = СтрокаДляЗаполнения.Упаковка;
							НоваяСтрока.СтавкаНДС = СтрокаДляЗаполнения.СтавкаНДС;
							Если СтрокаДляЗаполнения.ВестиУчетПоГТД Тогда
								НоваяСтрока.НомерГТД = СтрокаДляЗаполнения.НомерГТД;
							КонецЕсли; 
							НоваяСтрока.ОбъектРасчетов = ?(ЗначениеЗаполнено(СтрокаДляЗаполнения.ЗаказКлиента), СтрокаДляЗаполнения.ЗаказКлиента, СтарыеАналитики.ОбъектРасчетов);
							
							НоваяСтрока.КоличествоУпаковок = СтрокаДляЗаполнения.КоличествоУпаковокОстаток;
							НоваяСтрока.СуммаСНДС = СтрокаДляЗаполнения.СуммаПревышенияПострочно;
							НоваяСтрока.Цена = СтрокаДляЗаполнения.ЦенаНН;
							
						КонецЦикла;
						
					КонецЦикла;
					
					Если НЕ НалоговыйОбъект.ЭтоНовый() Тогда
						НалоговыйОбъект.ЗаполнитьРеквизитыПослеАвтоформирования();
						НалоговыйОбъект.Записать(РежимЗаписиДокумента.Проведение);
					КонецЕсли;
					
				Иначе
				
					Если СтарыеАналитики.РазрезВидПоставки = Перечисления.ВидыПоставки.Розница Тогда
						НоменклатураДляРозницы = СтарыеАналитики.АналитикаУчетаПоПартнерам.Организация.НоменклатураЗаполненияИтоговыхНалоговыхПоРознице;
						ВидОперацииДляЗаполнения = ПолучитьВидОперации(СтарыеАналитики.ОбъектРасчетов, СтарыеАналитики.РазрезВидПоставки, СтарыеАналитики.День);
					Иначе
						НоменклатураДляАвансовыхНН = ОпределитьНомеклатуруЗаполненияНалоговыхНаАванс(НалоговыйОбъект.Организация, НалоговыйОбъект.Договор,  КешНоменклатурыДляАвансовыхНН);
						ВидОперацииДляЗаполнения = ПолучитьВидОперации(НоменклатураДляАвансовыхНН.СтавкаНДС, СтарыеАналитики.РазрезВидПоставки, СтарыеАналитики.День);
					КонецЕсли;
					
					Если НЕ ИзменилсяТолькоОбъектРасчетов Тогда
						НалоговыйОбъект = СформироватьИЗаполнитьНалоговыйОбъект(СтарыеАналитики, Новый Структура("ВидОперации, ДатаЗапрета",
																													ВидОперацииДляЗаполнения,
																													ДатаЗапрета));
					КонецЕсли;
					
					НоваяСтрока = НалоговыйОбъект.Товары.Добавить();
					
					Если СтарыеАналитики.РазрезВидПоставки = Перечисления.ВидыПоставки.Розница Тогда
						
						НоваяСтрока.Номенклатура = НоменклатураДляРозницы;
						НоваяСтрока.СтавкаНДС = СтарыеАналитики.ОбъектРасчетов;
						Если НоменклатураДляРозницы.ВестиУчетПоГТД Тогда
							НоваяСтрока.НомерГТД = НоменклатураДляРозницы.НоменклатураГТД;
						КонецЕсли; 
						НоваяСтрока.ОбъектРасчетов = СтарыеАналитики.ОбъектРасчетов;
						
						НоваяСтрока.КоличествоУпаковок = 0;
						НоваяСтрока.СуммаСНДС = КоэффициентНаправлениеДвижения * СуммаПревышенияНО;
						НоваяСтрока.Цена = 0;
						
					Иначе
						
						НоваяСтрока.Номенклатура = НоменклатураДляАвансовыхНН;
						НоваяСтрока.СтавкаНДС = НоменклатураДляАвансовыхНН.СтавкаНДС;
						Если НоменклатураДляАвансовыхНН.ВестиУчетПоГТД Тогда
							НоваяСтрока.НомерГТД = НоменклатураДляАвансовыхНН.НоменклатураГТД;
						КонецЕсли;
						НоваяСтрока.ОбъектРасчетов = СтарыеАналитики.ОбъектРасчетов;
						
						НоваяСтрока.КоличествоУпаковок = КоэффициентНаправлениеДвижения;
						НоваяСтрока.СуммаСНДС = КоэффициентНаправлениеДвижения * СуммаПревышенияНО;
						НоваяСтрока.Цена = ПолучитьЦенуДляНН(СуммаПревышенияНО, НоменклатураДляАвансовыхНН.СтавкаНДС);
						
					КонецЕсли;
					
					
					СтрокаНовойНалоговой = ТаблицаСформированыхНалоговых.Добавить();
									
					СтрокаНовойНалоговой.ОсновнаяНалоговая = НалоговыйОбъект;
					СтрокаНовойНалоговой.ВидОперацииОсновнойНалоговой = ВидОперацииДляЗаполнения;
					СтрокаНовойНалоговой.НалоговыйДокументДляКорректировки = НалоговыйОбъект;
					СтрокаНовойНалоговой.АналитикаУчетаПоПартнерам = СтарыеАналитики.АналитикаУчетаПоПартнерам;
					СтрокаНовойНалоговой.ОбъектРасчетов = СтарыеАналитики.ОбъектРасчетов;
					СтрокаНовойНалоговой.Валюта = СтарыеАналитики.Валюта;
					СтрокаНовойНалоговой.День = СтарыеАналитики.День;
					СтрокаНовойНалоговой.РазрезВидПоставки = СтарыеАналитики.РазрезВидПоставки;
					СтрокаНовойНалоговой.ДеньДокумента = СтарыеАналитики.День;
					
					МожноЗаписыватьТекущий = Ложь;

				КонецЕсли;

			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(СтарыеАналитики, ВыборкаПоПревышениям);
			
			ЗаполнитьЗначенияСвойств(ОтборСформированыхНалоговых, СтарыеАналитики);

			ДатаЗапрета = ПолучитьКонечнуюДатуЗапретаИзТаблицы(ТаблицаОграниченийПоДатамЗапрета, СтарыеАналитики.АналитикаУчетаПоПартнерам.Организация, СтарыеАналитики.День);
			
			//МассивСтрокСНалоговымиЗаДень = ТаблицаНалоговыхПоДням.НайтиСтроки(СтарыеАналитики);
			СуммаПревышенияНО = - ВыборкаПоПревышениям.СуммаПревышения;
			
			Если (ТипЗнч(СтарыеАналитики.ОбъектРасчетов) = Тип("ДокументСсылка.ЗаказКлиента") ИЛИ ТипЗнч(СтарыеАналитики.ОбъектРасчетов) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента"))
				 И (СтарыеАналитики.РазрезВидПоставки = Перечисления.ВидыПоставки.Поставка) И (СуммаПревышенияНО > 0) Тогда
				ОбъектРасчетовЭтоЗаказ = Истина;
				ОтборПоискаПоЗаказу.ЗаказКлиента = СтарыеАналитики.ОбъектРасчетов;
				ТаблицаСтрокЗаказа = ТаблицаЗаказов.Скопировать(ОтборПоискаПоЗаказу);
				ТаблицаВидовОперацийННДляЗаказа = ТаблицаСтрокЗаказа.Скопировать();
				ТаблицаВидовОперацийННДляЗаказа.Свернуть("СтавкаНДС");
				ТаблицаВидовОперацийННДляЗаказа.Колонки.Добавить("ВидОперации");
				Для каждого Строка из ТаблицаВидовОперацийННДляЗаказа Цикл
					Строка.ВидОперации = ПолучитьВидОперации(Строка.СтавкаНДС, СтарыеАналитики.РазрезВидПоставки, СтарыеАналитики.День);
				КонецЦикла;
				ТаблицаСтрокЗаказа.Колонки.Добавить("СуммаПревышенияПострочно");
				СуммаЗаказа = ТаблицаСтрокЗаказа.Итог("СуммаОстаток");
				СуммаАвансаПослеЗаказа = ?(СуммаПревышенияНО - СуммаЗаказа < 0, 0, СуммаПревышенияНО - СуммаЗаказа);
				ПогрешностиОкругления.Очистить();
				Для каждого Строка из ТаблицаСтрокЗаказа Цикл
					Если СуммаАвансаПослеЗаказа = 0 Тогда
						Строка.СуммаПревышенияПострочно = ОкруглитьСУчетомПогрешности(Строка.СуммаОстаток * СуммаПревышенияНО / СуммаЗаказа, 2, , ПогрешностиОкругления, "Сумма");
						Строка.КоличествоУпаковокОстаток = ОкруглитьСУчетомПогрешности(Строка.КоличествоУпаковокОстаток * СуммаПревышенияНО / СуммаЗаказа, 3, , ПогрешностиОкругления, "Количество");
					Иначе
						Строка.СуммаПревышенияПострочно = Строка.СуммаОстаток;
					КонецЕсли;
				КонецЦикла;
				Если СуммаАвансаПослеЗаказа > 0 Тогда
					
					НоменклатураДляАвансовыхНН = ОпределитьНомеклатуруЗаполненияНалоговыхНаАванс(СтарыеАналитики.АналитикаУчетаПоПартнерам.Организация, СтарыеАналитики.АналитикаУчетаПоПартнерам.Договор,  КешНоменклатурыДляАвансовыхНН);
					
					Если ТаблицаВидовОперацийННДляЗаказа.Найти(НоменклатураДляАвансовыхНН.СтавкаНДС, "СтавкаНДС") = Неопределено Тогда
						СтрокаВидаОперации = ТаблицаВидовОперацийННДляЗаказа.Добавить();
						СтрокаВидаОперации.СтавкаНДС = НоменклатураДляАвансовыхНН.СтавкаНДС;
						СтрокаВидаОперации.ВидОперации = ПолучитьВидОперации(НоменклатураДляАвансовыхНН.СтавкаНДС, СтарыеАналитики.РазрезВидПоставки, СтарыеАналитики.День);
					КонецЕсли;
					
					Строка = ТаблицаСтрокЗаказа.Добавить();
					Строка.Номенклатура = НоменклатураДляАвансовыхНН;
					Строка.Характеристика = Неопределено;
					Строка.Упаковка = Неопределено;
					Строка.СтавкаНДС = НоменклатураДляАвансовыхНН.СтавкаНДС;
					Строка.ВестиУчетПоГТД = НоменклатураДляАвансовыхНН.ВестиУчетПоГТД;
					Если НоменклатураДляАвансовыхНН.ВестиУчетПоГТД Тогда
						Строка.НомерГТД = НоменклатураДляАвансовыхНН.НоменклатураГТД;
					КонецЕсли; 
					
					Строка.КоличествоУпаковокОстаток = 1;
					Строка.СуммаПревышенияПострочно = 1 * СуммаАвансаПослеЗаказа;
					Строка.СуммаОстаток = 1 * СуммаАвансаПослеЗаказа;
					Строка.ЦенаНН = ПолучитьЦенуДляНН(СуммаАвансаПослеЗаказа, НоменклатураДляАвансовыхНН.СтавкаНДС);
					
				КонецЕсли;
				ТаблицаДопНалоговыхДляПоиска.Очистить();
			Иначе
				ОбъектРасчетовЭтоЗаказ = Ложь;
				ТаблицаСтрокЗаказа = Неопределено;
				ТаблицаВидовОперацийННДляЗаказа = Неопределено;
				ТаблицаДопНалоговыхДляПоиска.Очистить();
			КонецЕсли;
			
		КонецЕсли;
		
		// сумма превышения могла обнулиться на предыдущем витке по тем же значениям аналитики, дальнейшие документы корректировать нет необходимости
		Если СуммаПревышенияНО = 0 Тогда
			
			Продолжить;
			
		Иначе
			

			Если ОбъектРасчетовЭтоЗаказ Тогда
				ПропускатьДоОтбора = Истина;
			Иначе
				ПропускатьДоОтбора = Ложь;
			КонецЕсли;

			Если ВыборкаПоПревышениям.ВидОперацииОсновнойНалоговой = Перечисления.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОблагаемыеОперации Тогда
				ПропускатьПоВидуОперации = Истина;
				ВидОперацииОсновнойНалоговой = Перечисления.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОблагаемыеОперации;
			ИначеЕсли ВыборкаПоПревышениям.ВидОперацииОсновнойНалоговой = Перечисления.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОсвобожденныеОперации Тогда
				ПропускатьПоВидуОперации = Истина;
				ВидОперацииОсновнойНалоговой = Перечисления.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОсвобожденныеОперации;
			ИначеЕсли НЕ ЗначениеЗаполнено(ВыборкаПоПревышениям.ВидОперацииОсновнойНалоговой) Тогда
				Если ОбъектРасчетовЭтоЗаказ И (СуммаАвансаПослеЗаказа > 0) Тогда
					ПропускатьДоОтбора = Ложь;
				КонецЕсли;
				ПропускатьПоВидуОперации = Ложь;
				НоменклатураДляАвансовыхНН = ОпределитьНомеклатуруЗаполненияНалоговыхНаАванс(ВыборкаПоПревышениям.АналитикаУчетаПоПартнерам.Организация, Неопределено, КешНоменклатурыДляАвансовыхНН);
				ВидОперацииОсновнойНалоговой = ПолучитьВидОперации(НоменклатураДляАвансовыхНН.СтавкаНДС, ВыборкаПоПревышениям.РазрезВидПоставки, ВыборкаПоПревышениям.День)
			Иначе
				ПропускатьПоВидуОперации = Ложь;
				ВидОперацииОсновнойНалоговой = ВыборкаПоПревышениям.ВидОперацииОсновнойНалоговой;
				Если ОбъектРасчетовЭтоЗаказ Тогда
					Если НЕ (ТаблицаВидовОперацийННДляЗаказа.Найти(ВидОперацииОсновнойНалоговой, "ВидОперации") = Неопределено) Тогда
						ПропускатьДоОтбора = Ложь;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;

			Если ПропускатьДоОтбора Тогда
				Продолжить;
			КонецЕсли;
			
			ОтборСформированыхНалоговых.ВидОперацииОсновнойНалоговой = ВидОперацииОсновнойНалоговой;
			НайденныеНалоговые = ТаблицаСформированыхНалоговых.НайтиСтроки(ОтборСформированыхНалоговых);
			
			Если СтарыеАналитики.РазрезВидПоставки = Перечисления.ВидыПоставки.Возврат Тогда
				КоэффициентНаправлениеДвижения = -1;
			Иначе
				КоэффициентНаправлениеДвижения = 1;
			КонецЕсли;
			
			Если СтарыеАналитики.РазрезВидПоставки = Перечисления.ВидыПоставки.Переоценка Тогда
				ЭтоПереоценка = Истина;
			Иначе
				ЭтоПереоценка = Ложь;
			КонецЕсли;
			
			Если НайденныеНалоговые.Количество() > 0 Тогда
				
				НалоговыйОбъект = НайденныеНалоговые[0].НалоговыйДокументДляКорректировки;

			ИначеЕсли ПропускатьПоВидуОперации Тогда
				
				 Продолжить;

/////////////////////////////////////////Отдельной процедурой///////////////////////////////////////////////
			ИначеЕсли ЗначениеЗаполнено(ВыборкаПоПревышениям.НалоговыйДокументДляКорректировки) И (ДатаЗапрета = Неопределено) Тогда
			
				НалоговыйОбъект = ВыборкаПоПревышениям.НалоговыйДокументДляКорректировки.ПолучитьОбъект();	
				
				НалоговыйОбъект.Статус = Перечисления.СтатусыНалоговыхДокументов.Сформирован;
				
				МожноЗаписыватьТекущий = Истина;

			ИначеЕсли ЗначениеЗаполнено(ВыборкаПоПревышениям.ОсновнаяНалоговая) И (ДатаЗапрета = Неопределено) Тогда
				
				НалоговыйОбъект = СформироватьИЗаполнитьНалоговыйОбъект(СтарыеАналитики, Новый Структура("НалоговаяНакладнаяДляВозвратов, ОсновнаяНалоговаяДляП2",
																											ВыборкаПоПревышениям.НалоговаяНакладнаяДляВозвратов,
																											ВыборкаПоПревышениям.ОсновнаяНалоговая));

				СтрокаНовойНалоговой = ТаблицаСформированыхНалоговых.Добавить();
								
				СтрокаНовойНалоговой.ОсновнаяНалоговая = ВыборкаПоПревышениям.ОсновнаяНалоговая;
				СтрокаНовойНалоговой.ВидОперацииОсновнойНалоговой = ВыборкаПоПревышениям.ВидОперацииОсновнойНалоговой;
				СтрокаНовойНалоговой.НалоговыйДокументДляКорректировки = НалоговыйОбъект;
				СтрокаНовойНалоговой.АналитикаУчетаПоПартнерам = СтарыеАналитики.АналитикаУчетаПоПартнерам;
				СтрокаНовойНалоговой.ОбъектРасчетов = СтарыеАналитики.ОбъектРасчетов;
				СтрокаНовойНалоговой.Валюта = СтарыеАналитики.Валюта;
				СтрокаНовойНалоговой.День = СтарыеАналитики.День;
				СтрокаНовойНалоговой.РазрезВидПоставки = СтарыеАналитики.РазрезВидПоставки;
				СтрокаНовойНалоговой.ДеньДокумента = ТекущаяДата();
				
				МожноЗаписыватьТекущий = Ложь;
			
			Иначе
				
				Если СтарыеАналитики.РазрезВидПоставки = Перечисления.ВидыПоставки.Розница Тогда
					НоменклатураДляРозницы = СтарыеАналитики.АналитикаУчетаПоПартнерам.Организация.НоменклатураЗаполненияИтоговыхНалоговыхПоРознице;
					ВидОперацииОсновнойНалоговой = ПолучитьВидОперации(СтарыеАналитики.ОбъектРасчетов, СтарыеАналитики.РазрезВидПоставки, СтарыеАналитики.День);
				Иначе
					НоменклатураДляАвансовыхНН = ОпределитьНомеклатуруЗаполненияНалоговыхНаАванс(СтарыеАналитики.АналитикаУчетаПоПартнерам.Организация, СтарыеАналитики.АналитикаУчетаПоПартнерам.Договор, КешНоменклатурыДляАвансовыхНН);
					ВидОперацииОсновнойНалоговой = ПолучитьВидОперации(НоменклатураДляАвансовыхНН.СтавкаНДС, СтарыеАналитики.РазрезВидПоставки, СтарыеАналитики.День);
				КонецЕсли;

				НалоговыйОбъект = СформироватьИЗаполнитьНалоговыйОбъект(СтарыеАналитики, Новый Структура("ВидОперации, ДатаЗапрета",
																											ВидОперацииОсновнойНалоговой,
																											ДатаЗапрета));
			
				СтрокаНовойНалоговой = ТаблицаСформированыхНалоговых.Добавить();
								
				СтрокаНовойНалоговой.ОсновнаяНалоговая = НалоговыйОбъект;
				СтрокаНовойНалоговой.ВидОперацииОсновнойНалоговой = ВидОперацииОсновнойНалоговой;
				СтрокаНовойНалоговой.НалоговыйДокументДляКорректировки = НалоговыйОбъект;
				СтрокаНовойНалоговой.АналитикаУчетаПоПартнерам = СтарыеАналитики.АналитикаУчетаПоПартнерам;
				СтрокаНовойНалоговой.ОбъектРасчетов = СтарыеАналитики.ОбъектРасчетов;
				СтрокаНовойНалоговой.Валюта = СтарыеАналитики.Валюта;
				СтрокаНовойНалоговой.День = СтарыеАналитики.День;
				СтрокаНовойНалоговой.РазрезВидПоставки = СтарыеАналитики.РазрезВидПоставки;
				СтрокаНовойНалоговой.ДеньДокумента = СтарыеАналитики.День;
				
				МожноЗаписыватьТекущий = Ложь;
			
			КонецЕсли;

			Если ОбъектРасчетовЭтоЗаказ Тогда
				СтрокаНовойНалоговой = ТаблицаДопНалоговыхДляПоиска.Добавить();
								
				СтрокаНовойНалоговой.ОсновнаяНалоговая = НалоговыйОбъект;
				СтрокаНовойНалоговой.ВидОперацииОсновнойНалоговой = ВидОперацииОсновнойНалоговой;
				СтрокаНовойНалоговой.НалоговыйДокументДляКорректировки = НалоговыйОбъект;
				СтрокаНовойНалоговой.АналитикаУчетаПоПартнерам = СтарыеАналитики.АналитикаУчетаПоПартнерам;
				СтрокаНовойНалоговой.ОбъектРасчетов = СтарыеАналитики.ОбъектРасчетов;
				СтрокаНовойНалоговой.Валюта = СтарыеАналитики.Валюта;
				СтрокаНовойНалоговой.День = СтарыеАналитики.День;
				СтрокаНовойНалоговой.РазрезВидПоставки = СтарыеАналитики.РазрезВидПоставки;
				СтрокаНовойНалоговой.ДеньДокумента = СтарыеАналитики.День;
				Продолжить;
			КонецЕсли;

			Если СуммаПревышенияНО > 0 Тогда
			
				// Нужно ДОПИСАТЬ строки товаров на абсолютную сумму превышения
				
				Если СтарыеАналитики.РазрезВидПоставки = Перечисления.ВидыПоставки.Розница Тогда
					НоменклатураДляРозницы = СтарыеАналитики.АналитикаУчетаПоПартнерам.Организация.НоменклатураЗаполненияИтоговыхНалоговыхПоРознице;
					ВидОперации = ПолучитьВидОперации(СтарыеАналитики.ОбъектРасчетов, СтарыеАналитики.РазрезВидПоставки, СтарыеАналитики.День);
				Иначе
					НоменклатураДляАвансовыхНН = ОпределитьНомеклатуруЗаполненияНалоговыхНаАванс(НалоговыйОбъект.Организация, НалоговыйОбъект.Договор, КешНоменклатурыДляАвансовыхНН);
					ВидОперации = ПолучитьВидОперации(НоменклатураДляАвансовыхНН.СтавкаНДС, СтарыеАналитики.РазрезВидПоставки, СтарыеАналитики.День);
				КонецЕсли;
				
				Если ВидОперации = ВидОперацииОсновнойНалоговой Тогда
					
					НоваяСтрока = НалоговыйОбъект.Товары.Добавить();
					
					Если СтарыеАналитики.РазрезВидПоставки = Перечисления.ВидыПоставки.Розница Тогда
						
						НоваяСтрока.Номенклатура = НоменклатураДляРозницы;
						НоваяСтрока.СтавкаНДС = СтарыеАналитики.ОбъектРасчетов;
						Если НоменклатураДляРозницы.ВестиУчетПоГТД Тогда
							НоваяСтрока.НомерГТД = НоменклатураДляРозницы.НоменклатураГТД;
						КонецЕсли; 
						НоваяСтрока.ОбъектРасчетов = СтарыеАналитики.ОбъектРасчетов;
						
						НоваяСтрока.КоличествоУпаковок = 0;
						НоваяСтрока.СуммаСНДС = КоэффициентНаправлениеДвижения * СуммаПревышенияНО;
						НоваяСтрока.Цена = 0;
						
					Иначе
						
						НоваяСтрока.Номенклатура = НоменклатураДляАвансовыхНН;
						НоваяСтрока.СтавкаНДС = НоменклатураДляАвансовыхНН.СтавкаНДС;
						Если НоменклатураДляАвансовыхНН.ВестиУчетПоГТД Тогда
							НоваяСтрока.НомерГТД = НоменклатураДляАвансовыхНН.НоменклатураГТД;
						КонецЕсли; 
						НоваяСтрока.ОбъектРасчетов = СтарыеАналитики.ОбъектРасчетов;
						
						НоваяСтрока.КоличествоУпаковок = КоэффициентНаправлениеДвижения;
						НоваяСтрока.СуммаСНДС = КоэффициентНаправлениеДвижения * СуммаПревышенияНО;
						НоваяСтрока.Цена = ПолучитьЦенуДляНН(СуммаПревышенияНО, НоменклатураДляАвансовыхНН.СтавкаНДС);
						
					КонецЕсли;
					
					
					СуммаПревышенияНО = 0;
					
				КонецЕсли;
				
			Иначе
				//Если СуммаПревышенияНО < 0 Тогда
				
				НайтиИСторнироватьСтроки(СуммаПревышенияНО, НалоговыйОбъект, ТаблицаНоменклатурыДляОчистки, ВыборкаПоПревышениям.ОбъектРасчетов, ВыборкаПоПревышениям.ОсновнаяНалоговая
											, КоэффициентНаправлениеДвижения, ЭтоПереоценка, ВыборкаПоПревышениям.ВидОперацииОсновнойНалоговой, ВыборкаПоПревышениям.День);
				
			КонецЕсли;
			
			Если МожноЗаписыватьТекущий Тогда
				НалоговыйОбъект.ЗаполнитьРеквизитыПослеАвтоформирования();
				НалоговыйОбъект.Записать(РежимЗаписиДокумента.Проведение);
			КонецЕсли;
			
		КонецЕсли;
		
		
		
	КонецЦикла;
	
	
	Если СуммаПревышенияНО > 0 Тогда
		
		Если ОбъектРасчетовЭтоЗаказ Тогда
					
			СтарыйВидОперации = Неопределено;
			
			Для каждого СтрокаВидаОперации из ТаблицаВидовОперацийННДляЗаказа Цикл
				
				Если СтарыйВидОперации <> СтрокаВидаОперации.ВидОперации Тогда
					
					СтарыйВидОперации = СтрокаВидаОперации.ВидОперации;
							
					ЗаполнитьЗначенияСвойств(ОтборСформированыхНалоговых, СтарыеАналитики);
					ОтборСформированыхНалоговых.ВидОперацииОсновнойНалоговой = СтарыйВидОперации;
					НайденныеНалоговые = ТаблицаСформированыхНалоговых.НайтиСтроки(ОтборСформированыхНалоговых);
					
					Если НайденныеНалоговые.Количество() > 0 Тогда
		
						НалоговыйОбъект = НайденныеНалоговые[0].НалоговыйДокументДляКорректировки;
					
					Иначе
						
						НайденныеНалоговые = ТаблицаДопНалоговыхДляПоиска.НайтиСтроки(ОтборСформированыхНалоговых);
						
						Если НайденныеНалоговые.Количество() > 0 Тогда
		
							НалоговыйОбъект = НайденныеНалоговые[0].НалоговыйДокументДляКорректировки;
							
						Иначе
							
							НалоговыйОбъект = СформироватьИЗаполнитьНалоговыйОбъект(СтарыеАналитики, Новый Структура("ВидОперации, ДатаЗапрета",
																														СтарыйВидОперации,
																														ДатаЗапрета));
									
							СтрокаНовойНалоговой = ТаблицаСформированыхНалоговых.Добавить();
											
							СтрокаНовойНалоговой.ОсновнаяНалоговая = НалоговыйОбъект;
							СтрокаНовойНалоговой.ВидОперацииОсновнойНалоговой = СтарыйВидОперации;
							СтрокаНовойНалоговой.НалоговыйДокументДляКорректировки = НалоговыйОбъект;
							СтрокаНовойНалоговой.АналитикаУчетаПоПартнерам = СтарыеАналитики.АналитикаУчетаПоПартнерам;
							СтрокаНовойНалоговой.ОбъектРасчетов = СтарыеАналитики.ОбъектРасчетов;
							СтрокаНовойНалоговой.Валюта = СтарыеАналитики.Валюта;
							СтрокаНовойНалоговой.День = СтарыеАналитики.День;
							СтрокаНовойНалоговой.РазрезВидПоставки = СтарыеАналитики.РазрезВидПоставки;
							СтрокаНовойНалоговой.ДеньДокумента = СтарыеАналитики.День;
									
						КонецЕсли;
						
					КонецЕсли;
						
				КонецЕсли;
				
				ОтборПоСтавкамНДС.СтавкаНДС = СтрокаВидаОперации.СтавкаНДС;
				СтрокиДляЗаполненияПоВидуОперации = ТаблицаСтрокЗаказа.НайтиСтроки(ОтборПоСтавкамНДС);
				
				Для Каждого СтрокаДляЗаполнения Из СтрокиДляЗаполненияПоВидуОперации Цикл
					
					
					НоваяСтрока = НалоговыйОбъект.Товары.Добавить();
					
					НоваяСтрока.Номенклатура = СтрокаДляЗаполнения.Номенклатура;
					НоваяСтрока.Содержание = СтрокаДляЗаполнения.Содержание;
					НоваяСтрока.Характеристика = СтрокаДляЗаполнения.Характеристика;
					НоваяСтрока.Упаковка = СтрокаДляЗаполнения.Упаковка;
					НоваяСтрока.СтавкаНДС = СтрокаДляЗаполнения.СтавкаНДС;
					Если СтрокаДляЗаполнения.ВестиУчетПоГТД Тогда
						НоваяСтрока.НомерГТД = СтрокаДляЗаполнения.НомерГТД;
					КонецЕсли; 
					НоваяСтрока.ОбъектРасчетов = ?(ЗначениеЗаполнено(СтрокаДляЗаполнения.ЗаказКлиента), СтрокаДляЗаполнения.ЗаказКлиента, СтарыеАналитики.ОбъектРасчетов);
					
					НоваяСтрока.КоличествоУпаковок = СтрокаДляЗаполнения.КоличествоУпаковокОстаток;
					НоваяСтрока.СуммаСНДС = СтрокаДляЗаполнения.СуммаПревышенияПострочно;
					НоваяСтрока.Цена = СтрокаДляЗаполнения.ЦенаНН;
					
					
				КонецЦикла;
				
			КонецЦикла;
			
			Если НЕ НалоговыйОбъект.ЭтоНовый() Тогда
				НалоговыйОбъект.ЗаполнитьРеквизитыПослеАвтоформирования();
				НалоговыйОбъект.Записать(РежимЗаписиДокумента.Проведение);
			КонецЕсли;
			
		Иначе
		
			Если СтарыеАналитики.РазрезВидПоставки = Перечисления.ВидыПоставки.Розница Тогда
				НоменклатураДляРозницы = СтарыеАналитики.АналитикаУчетаПоПартнерам.Организация.НоменклатураЗаполненияИтоговыхНалоговыхПоРознице;
				ВидОперацииДляЗаполнения = ПолучитьВидОперации(СтарыеАналитики.ОбъектРасчетов, СтарыеАналитики.РазрезВидПоставки, СтарыеАналитики.День);
			Иначе
				НоменклатураДляАвансовыхНН = ОпределитьНомеклатуруЗаполненияНалоговыхНаАванс(НалоговыйОбъект.Организация, НалоговыйОбъект.Договор,  КешНоменклатурыДляАвансовыхНН);
				ВидОперацииДляЗаполнения = ПолучитьВидОперации(НоменклатураДляАвансовыхНН.СтавкаНДС, СтарыеАналитики.РазрезВидПоставки, СтарыеАналитики.День);
			КонецЕсли;
			
			Если НЕ ИзменилсяТолькоОбъектРасчетов Тогда
				НалоговыйОбъект = СформироватьИЗаполнитьНалоговыйОбъект(СтарыеАналитики, Новый Структура("ВидОперации, ДатаЗапрета",
																											ВидОперацииДляЗаполнения,
																											ДатаЗапрета));
			КонецЕсли;
			
			НоваяСтрока = НалоговыйОбъект.Товары.Добавить();
			
			Если СтарыеАналитики.РазрезВидПоставки = Перечисления.ВидыПоставки.Розница Тогда
				
				НоваяСтрока.Номенклатура = НоменклатураДляРозницы;
				НоваяСтрока.СтавкаНДС = СтарыеАналитики.ОбъектРасчетов;
				Если НоменклатураДляРозницы.ВестиУчетПоГТД Тогда
					НоваяСтрока.НомерГТД = НоменклатураДляРозницы.НоменклатураГТД;
				КонецЕсли; 
				НоваяСтрока.ОбъектРасчетов = СтарыеАналитики.ОбъектРасчетов;
				
				НоваяСтрока.КоличествоУпаковок = 0;
				НоваяСтрока.СуммаСНДС = КоэффициентНаправлениеДвижения * СуммаПревышенияНО;
				НоваяСтрока.Цена = 0;
				
			Иначе
				
				НоваяСтрока.Номенклатура = НоменклатураДляАвансовыхНН;
				НоваяСтрока.СтавкаНДС = НоменклатураДляАвансовыхНН.СтавкаНДС;
				Если НоменклатураДляАвансовыхНН.ВестиУчетПоГТД Тогда
					НоваяСтрока.НомерГТД = НоменклатураДляАвансовыхНН.НоменклатураГТД;
				КонецЕсли; 
				НоваяСтрока.ОбъектРасчетов = СтарыеАналитики.ОбъектРасчетов;
				
				НоваяСтрока.КоличествоУпаковок = КоэффициентНаправлениеДвижения;
				НоваяСтрока.СуммаСНДС = КоэффициентНаправлениеДвижения * СуммаПревышенияНО;
				НоваяСтрока.Цена = ПолучитьЦенуДляНН(СуммаПревышенияНО, НоменклатураДляАвансовыхНН.СтавкаНДС);
				
			КонецЕсли;
			
		
			СтрокаНовойНалоговой = ТаблицаСформированыхНалоговых.Добавить();
							
			СтрокаНовойНалоговой.ОсновнаяНалоговая = НалоговыйОбъект;
			СтрокаНовойНалоговой.ВидОперацииОсновнойНалоговой = ВидОперацииДляЗаполнения;
			СтрокаНовойНалоговой.НалоговыйДокументДляКорректировки = НалоговыйОбъект;
			СтрокаНовойНалоговой.АналитикаУчетаПоПартнерам = СтарыеАналитики.АналитикаУчетаПоПартнерам;
			СтрокаНовойНалоговой.ОбъектРасчетов = СтарыеАналитики.ОбъектРасчетов;
			СтрокаНовойНалоговой.Валюта = СтарыеАналитики.Валюта;
			СтрокаНовойНалоговой.День = СтарыеАналитики.День;
			СтрокаНовойНалоговой.РазрезВидПоставки = СтарыеАналитики.РазрезВидПоставки;
			СтрокаНовойНалоговой.ДеньДокумента = СтарыеАналитики.День;
			
			МожноЗаписыватьТекущий = Ложь;

		КонецЕсли;

	КонецЕсли;
	//////////////////////////////////////////////////////////////////////////////////
	
#КонецОбласти // Этап5

	ТаблицаСформированыхНалоговых.Сортировать("ДеньДокумента");

	Для каждого СтрокаНалоговой Из ТаблицаСформированыхНалоговых Цикл
		ПровестиНалоговыйДокумент(СтрокаНалоговой.НалоговыйДокументДляКорректировки);
	КонецЦикла;


	Если ЗначениеЗаполнено(КонецПериодаРасчета) Тогда
		ОбновитьГраницыФормированияНалоговыхДокументов(НачалоПериодаРасчета, КонецПериодаРасчета, АналитикаУчетаПоПартнерамОтбор, НомерЗадания);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПровестиНалоговыйДокумент(НалоговыйДокумент)
	
	НалоговыйДокумент.ЗаполнитьРеквизитыПослеАвтоформирования();
	НалоговыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры

Функция УвеличитьНомерЗадания(ИмяКонстанты)
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("Константа."+ИмяКонстанты);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	
	НачатьТранзакцию();
	НомерДоРасчета = Константы[ИмяКонстанты].Получить();
	Константы[ИмяКонстанты].Установить(НомерДоРасчета + 1);
	ЗафиксироватьТранзакцию();
	
	Возврат НомерДоРасчета;
	
КонецФункции

Функция ПолучитьДатуНачалаФормированияНалоговыхДокументов(КонецПериодаРасчета = Неопределено, СтруктураПараметров = Неопределено, АналитикаУчетаПоПартнерамОтбор = Неопределено, НомерЗадания = 0) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если СтруктураПараметров = Неопределено Тогда
		СтруктураПараметров = Новый Структура;
	КонецЕсли;
	
	Организация = Неопределено; Партнер = Неопределено; Контрагент = Неопределено;
	СтруктураПараметров.Свойство("Организация", Организация);
	СтруктураПараметров.Свойство("Партнер",     Партнер);
	СтруктураПараметров.Свойство("Контрагент",  Контрагент);
	
	ПоВсемАналитикам = (Организация = Неопределено И Партнер = Неопределено И Контрагент = Неопределено);
	
	ИмяРегистраЗаданий = "ЗаданияКФормированиюИсходящихНалоговыхДокументов";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Задания.День КАК День,
	|	Задания.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	|ПОМЕСТИТЬ НачальныеГраницыФормированияНН
	|ИЗ
	|	ИмяРегистраЗаданий КАК Задания
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|		ПО Задания.АналитикаУчетаПоПартнерам = РегистрАналитикаУчетаПоПартнерам.КлючАналитики
	|ГДЕ
	|	(Задания.День <= &ОкончаниеРасчета ИЛИ &ЗаВесьПериод)
	|	И (
	|			&ПоВсемАналитикам
	|			ИЛИ ((&Организация = НЕОПРЕДЕЛЕНО
	|					ИЛИ РегистрАналитикаУчетаПоПартнерам.Организация = &Организация)
	|				И (&Партнер = НЕОПРЕДЕЛЕНО
	|					ИЛИ РегистрАналитикаУчетаПоПартнерам.Партнер = &Партнер)
	|				И (&Контрагент = НЕОПРЕДЕЛЕНО
	|					ИЛИ РегистрАналитикаУчетаПоПартнерам.Контрагент = &Контрагент))
	|	)
	|	И (Задания.НомерЗадания <= &НомерЗадания
	|			ИЛИ &НеУчитыватьНомерЗадания)
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НачальныеГраницыФормированияНН.АналитикаУчетаПоПартнерам
	|ИЗ
	|	НачальныеГраницыФормированияНН КАК НачальныеГраницыФормированияНН
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(Задания.День) КАК НачалоПериодаРасчета
	|ИЗ
	|	НачальныеГраницыФормированияНН КАК Задания
	|ИМЕЮЩИЕ
	|	НЕ МИНИМУМ(Задания.День) ЕСТЬ NULL
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НачальныеГраницыФормированияНН
	|;
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяРегистраЗаданий", "РегистрСведений."+ИмяРегистраЗаданий);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ПустаяДата",       Дата("00010101"));
	Запрос.УстановитьПараметр("ОкончаниеРасчета", ?(КонецПериодаРасчета = Неопределено, Неопределено, КонецДня(КонецПериодаРасчета)));
	Запрос.УстановитьПараметр("ЗаВесьПериод",     ?(КонецПериодаРасчета = Неопределено, Истина, Ложь));
	Запрос.УстановитьПараметр("Организация",      Организация);
	Запрос.УстановитьПараметр("Партнер",          Партнер);
	Запрос.УстановитьПараметр("Контрагент",       Контрагент);
	Запрос.УстановитьПараметр("ПоВсемАналитикам", ПоВсемАналитикам);
	Запрос.УстановитьПараметр("НомерЗадания",     НомерЗадания);
	Запрос.УстановитьПараметр("НеУчитыватьНомерЗадания", НомерЗадания = 0);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Если ПоВсемАналитикам Тогда
		АналитикаУчетаПоПартнерамОтбор = Неопределено;
	Иначе
		АналитикаУчетаПоПартнерамОтбор = Новый Массив;
		ВыборкаПоАналитикамУчетаПартнеров = Результат[1].Выбрать();
		Пока ВыборкаПоАналитикамУчетаПартнеров.Следующий() Цикл
			АналитикаУчетаПоПартнерамОтбор.Добавить(ВыборкаПоАналитикамУчетаПартнеров.АналитикаУчетаПоПартнерам);
		КонецЦикла;
	КонецЕсли;
	
	Выборка = Результат[2].Выбрать();
	
	Результат = Неопределено;
	
	Если Выборка.Следующий() Тогда
		Результат = Выборка.НачалоПериодаРасчета;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ОбновитьГраницыФормированияНалоговыхДокументов(НачалоПериодаРасчета, КонецПериодаРасчета, АналитикаУчетаПоПартнерамОтбор, НомерЗадания)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИмяРегистраЗаданий = "ЗаданияКФормированиюИсходящихНалоговыхДокументов";
	ИмяОперативногоРегистраНоменклатурныйСостав = "НДСНоменклатурныйСоставДляНалоговыхНакладных";
	ИмяОперативногоРегистраРасчетНалоговыхОбязательств = "НДСРасчетНалоговыхОбязательств";
	
	ТекстЗапроса = "
	// Выборка аналитик по которым есть движения после рассчитываемого периода, КодОтслеживаемогоРегистра = 1 (НДСНоменклатурныйСоставДляНалоговыхНакладных).
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОперативныйРегистр.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	|ПОМЕСТИТЬ АналитикиНДСНоменклатурныйСоставДляНалоговыхНакладных
	|ИЗ
	|	ИмяОперативногоРегистраКод1 КАК ОперативныйРегистр
	|ГДЕ
	|	ОперативныйРегистр.Период >= &ОкончаниеПериода
	|;
	|/////////////////////////////////////////////////////////////////////////////
	// Выборка аналитик по которым есть движения после рассчитываемого периода, КодОтслеживаемогоРегистра = 2 (НДСРасчетНалоговыхОбязательств).
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОперативныйРегистр.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	|ПОМЕСТИТЬ АналитикиНДСРасчетНалоговыхОбязательств
	|ИЗ
	|	ИмяОперативногоРегистраКод2 КАК ОперативныйРегистр
	|ГДЕ
	|	ОперативныйРегистр.Период >= &ОкончаниеПериода
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.День,
	|	ДД.НомерЗадания,
	|	ДД.АналитикаУчетаПоПартнерам,
	|	ДД.ОбъектРасчетов,
	|	ДД.Документ,
	|	ДД.КодОтслеживаемогоРегистра
	|ПОМЕСТИТЬ КэшГраниц
	|ИЗ
	|	ИмяРегистраЗаданий КАК ДД
	|ГДЕ
	|	ДД.День МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И ДД.НомерЗадания <= &НомерЗадания
	|	И (ДД.АналитикаУчетаПоПартнерам В (&АналитикиРасчета) ИЛИ &ПоВсемАналитикам)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	// По рассчитанным аналитикам удаляются старые движения в заданиях
	|ВЫБРАТЬ
	|	Задания.День,
	|	Задания.НомерЗадания,
	|	Задания.АналитикаУчетаПоПартнерам,
	|	Задания.ОбъектРасчетов,
	|	Задания.Документ,
	|	Задания.КодОтслеживаемогоРегистра
	|ИЗ
	|	КэшГраниц КАК Задания
	|;
	|/////////////////////////////////////////////////////////////////////////////
	// Задания, по аналитикам которых есть движения в последующем периоде, после расчета.
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&СледующийДеньПослеРасчета КАК День,
	|	МАКСИМУМ(Задания.НомерЗадания) КАК НомерЗадания,
	|	Задания.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Задания.ОбъектРасчетов КАК ОбъектРасчетов,
	|	НЕОПРЕДЕЛЕНО КАК Документ,
	|	Задания.КодОтслеживаемогоРегистра КАК КодОтслеживаемогоРегистра
	|ИЗ
	|	(
	|	ВЫБРАТЬ
	|		ДД.НомерЗадания,
	|		ДД.АналитикаУчетаПоПартнерам,
	|		ДД.ОбъектРасчетов,
	|		ДД.КодОтслеживаемогоРегистра
	|	ИЗ
	|		КэшГраниц КАК ДД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиНДСНоменклатурныйСоставДляНалоговыхНакладных КАК Аналитики
	|		ПО ДД.АналитикаУчетаПоПартнерам = Аналитики.АналитикаУчетаПоПартнерам
	|			И ДД.КодОтслеживаемогоРегистра = 1
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДД.НомерЗадания,
	|		ДД.АналитикаУчетаПоПартнерам,
	|		ДД.ОбъектРасчетов,
	|		ДД.КодОтслеживаемогоРегистра
	|	ИЗ
	|		КэшГраниц КАК ДД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиНДСРасчетНалоговыхОбязательств КАК Аналитики
	|		ПО ДД.АналитикаУчетаПоПартнерам = Аналитики.АналитикаУчетаПоПартнерам
	|			И ДД.КодОтслеживаемогоРегистра = 2
	|
	|	) КАК Задания
	|
	|СГРУППИРОВАТЬ ПО
	|	Задания.АналитикаУчетаПоПартнерам,
	|	Задания.ОбъектРасчетов,
	|	Задания.КодОтслеживаемогоРегистра
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ АналитикиНДСНоменклатурныйСоставДляНалоговыхНакладных
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ АналитикиНДСРасчетНалоговыхОбязательств
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КэшГраниц
	|;
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяРегистраЗаданий", "РегистрСведений." + ИмяРегистраЗаданий);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяОперативногоРегистраКод1", "РегистрНакопления." + ИмяОперативногоРегистраНоменклатурныйСостав);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяОперативногоРегистраКод2", "РегистрНакопления." + ИмяОперативногоРегистраРасчетНалоговыхОбязательств);
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериодаРасчета));
	Запрос.УстановитьПараметр("ОкончаниеПериода", КонецДня(КонецПериодаРасчета));
	Запрос.УстановитьПараметр("СледующийДеньПослеРасчета", КонецДня(КонецПериодаРасчета) + 1);
	Запрос.УстановитьПараметр("НомерЗадания", НомерЗадания);
	Запрос.УстановитьПараметр("АналитикиРасчета", АналитикаУчетаПоПартнерамОтбор);
	Запрос.УстановитьПараметр("ПоВсемАналитикам", НЕ ЗначениеЗаполнено(АналитикаУчетаПоПартнерамОтбор));
	Результаты = Запрос.ВыполнитьПакет();
	
	// Очищаются движения по рассчитанным аналитикам
	Выборка = Результаты[3].Выбрать();
	Пока Выборка.Следующий() Цикл
		Набор = РегистрыСведений[ИмяРегистраЗаданий].СоздатьНаборЗаписей();
		Набор.Отбор.День.Установить(Выборка.День);
		Набор.Отбор.НомерЗадания.Установить(Выборка.НомерЗадания);
		Набор.Отбор.АналитикаУчетаПоПартнерам.Установить(Выборка.АналитикаУчетаПоПартнерам);
		Набор.Отбор.ОбъектРасчетов.Установить(Выборка.ОбъектРасчетов);
		Набор.Отбор.Документ.Установить(Выборка.Документ);
		Набор.Отбор.КодОтслеживаемогоРегистра.Установить(Выборка.КодОтслеживаемогоРегистра);
		Набор.Записать(); // Очистили рассчитанные аналитики в прошлом периоде
	КонецЦикла;
	
	// Перенос рассчитанных границ.
	Выборка = Результаты[4].Выбрать();
	Пока Выборка.Следующий() Цикл
		Набор = РегистрыСведений[ИмяРегистраЗаданий].СоздатьНаборЗаписей();
		Набор.Отбор.День.Установить(Выборка.День);
		Набор.Отбор.НомерЗадания.Установить(Выборка.НомерЗадания);
		Набор.Отбор.АналитикаУчетаПоПартнерам.Установить(Выборка.АналитикаУчетаПоПартнерам);
		Набор.Отбор.ОбъектРасчетов.Установить(Выборка.ОбъектРасчетов);
		Набор.Отбор.Документ.Установить(Выборка.Документ);
		Набор.Отбор.КодОтслеживаемогоРегистра.Установить(Выборка.КодОтслеживаемогоРегистра);
		СтрокаНабора = Набор.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаНабора, Выборка);
		Набор.Записать(Истина); // Перенесли рассчитанные аналитики в новый период
	КонецЦикла;
	
КонецПроцедуры


Процедура НайтиИСторнироватьСтроки(СуммаПревышенияНО, НалоговыйОбъект, ТаблицаНоменклатурыКОчистке, ОбъектРасчетов, ОсновнаяНалоговая, КоэффициентНаправлениеДвижения, ЭтоПереоценка, ВидОперацииОсновнойНалоговой, День);
	
	ПараметрыПоискаПоНалоговойДополнительно = Новый Структура;
	ВидОперацииОсновнойНалоговойДополнительно = Неопределено;
	ПараметрыПоискаПоНалоговой = Новый Структура;
	СтрокиДляСторно = Новый Массив;
	
	Если ВидОперацииОсновнойНалоговой = Перечисления.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОблагаемыеОперации
         ИЛИ ВидОперацииОсновнойНалоговой = СформироватьВидОперацииПоСтавке14(Перечисления.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОблагаемыеОперации)
		 ИЛИ ВидОперацииОсновнойНалоговой = СформироватьВидОперацииПоСтавке7(Перечисления.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОблагаемыеОперации) Тогда
		ВидОперацииОсновнойНалоговойДополнительно = Перечисления.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОблагаемыеОперации;
	ИначеЕсли ВидОперацииОсновнойНалоговой = Перечисления.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОсвобожденныеОперации
              ИЛИ ВидОперацииОсновнойНалоговой = СформироватьВидОперацииПоСтавке14(Перечисления.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОсвобожденныеОперации)
			  ИЛИ ВидОперацииОсновнойНалоговой = СформироватьВидОперацииПоСтавке7(Перечисления.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОсвобожденныеОперации) Тогда
		ВидОперацииОсновнойНалоговойДополнительно = Перечисления.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОсвобожденныеОперации;
	КонецЕсли;
	
	Если НЕ ВидОперацииОсновнойНалоговойДополнительно = Неопределено Тогда
		
		ПараметрыПоискаПоНалоговойДополнительно.Вставить("ВидОперацииОсновнойНалоговой", ВидОперацииОсновнойНалоговойДополнительно);
		ПараметрыПоискаПоНалоговойДополнительно.Вставить("День", День);
		ПараметрыПоискаПоНалоговойДополнительно.Вставить("ОбъектРасчетов", Неопределено);
		
		СтрокиДляСторноДополнительно = ТаблицаНоменклатурыКОчистке.НайтиСтроки(ПараметрыПоискаПоНалоговойДополнительно);
		Для каждого Строка Из СтрокиДляСторноДополнительно Цикл
			СтрокиДляСторно.Добавить(Строка);
		КонецЦикла;
		
		ПараметрыПоискаПоНалоговойДополнительно.ОбъектРасчетов = ОбъектРасчетов;
		
		СтрокиДляСторноДополнительно = ТаблицаНоменклатурыКОчистке.НайтиСтроки(ПараметрыПоискаПоНалоговойДополнительно);
		Для каждого Строка Из СтрокиДляСторноДополнительно Цикл
			СтрокиДляСторно.Добавить(Строка);
		КонецЦикла;
		
	КонецЕсли;
	
	ПараметрыПоискаПоНалоговой.Вставить("ОсновнаяНалоговая", ОсновнаяНалоговая);
	ПараметрыПоискаПоНалоговой.Вставить("ОбъектРасчетов", Неопределено);
	
	СтрокиДляСторноОсновное = ТаблицаНоменклатурыКОчистке.НайтиСтроки(ПараметрыПоискаПоНалоговой);
	Для каждого Строка Из СтрокиДляСторноОсновное Цикл
		СтрокиДляСторно.Добавить(Строка);
	КонецЦикла;
	
	ПараметрыПоискаПоНалоговой.ОбъектРасчетов = ОбъектРасчетов;
	
	СтрокиДляСторноОсновное = ТаблицаНоменклатурыКОчистке.НайтиСтроки(ПараметрыПоискаПоНалоговой);
	Для каждого Строка Из СтрокиДляСторноОсновное Цикл
		СтрокиДляСторно.Добавить(Строка);
	КонецЦикла;
	
	КоличествоСтрок = СтрокиДляСторно.Количество();
	
	Для Ин=1 по КоличествоСтрок Цикл
		
		Строка = СтрокиДляСторно[КоличествоСтрок - Ин];
		
		Если (-СуммаПревышенияНО) > Строка.СуммаСНДС Тогда
			НоваяСтрока = НалоговыйОбъект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			Если ЭтоПереоценка Тогда
				НоваяСтрока.ЭтоКорректировкаКоличества = Ложь;
				НоваяСтрока.СуммаСНДС = - Строка.СуммаСНДС * ?(НоваяСтрока.Цена < 0, -1, 1);
			Иначе
				НоваяСтрока.СуммаСНДС = - Строка.СуммаСНДС * КоэффициентНаправлениеДвижения;
			КонецЕсли;
			НоваяСтрока.КоличествоУпаковок = - Строка.КоличествоУпаковок * КоэффициентНаправлениеДвижения;
			
			СуммаПревышенияНО = СуммаПревышенияНО + Строка.СуммаСНДС;
			ТаблицаНоменклатурыКОчистке.Удалить(Строка);
			
		ИначеЕсли (-СуммаПревышенияНО) = Строка.СуммаСНДС Тогда
			НоваяСтрока = НалоговыйОбъект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			Если ЭтоПереоценка Тогда
				НоваяСтрока.ЭтоКорректировкаКоличества = Ложь;
				НоваяСтрока.СуммаСНДС = - Строка.СуммаСНДС * ?(НоваяСтрока.Цена < 0, -1, 1);
			Иначе
				НоваяСтрока.СуммаСНДС = - Строка.СуммаСНДС * КоэффициентНаправлениеДвижения;
			КонецЕсли;
			НоваяСтрока.КоличествоУпаковок = - Строка.КоличествоУпаковок * КоэффициентНаправлениеДвижения;
			
			СуммаПревышенияНО = 0;
			ТаблицаНоменклатурыКОчистке.Удалить(Строка);
			Прервать;
			
		Иначе
			ПолнаяСумма = Строка.СуммаСНДС;
			ПолноеКоличество = Строка.КоличествоУпаковок;
			Строка.СуммаСНДС = Строка.СуммаСНДС + СуммаПревышенияНО;
			Строка.КоличествоУпаковок = Окр((Строка.КоличествоУпаковок * Строка.СуммаСНДС) / ПолнаяСумма, 3);
			
			НоваяСтрока = НалоговыйОбъект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			Если ЭтоПереоценка Тогда
				НоваяСтрока.ЭтоКорректировкаКоличества = Ложь;
				НоваяСтрока.СуммаСНДС = СуммаПревышенияНО * ?(НоваяСтрока.Цена < 0, -1, 1);
			Иначе
				НоваяСтрока.СуммаСНДС = СуммаПревышенияНО * КоэффициентНаправлениеДвижения;
			КонецЕсли;
			НоваяСтрока.КоличествоУпаковок = - (ПолноеКоличество - Строка.КоличествоУпаковок) * КоэффициентНаправлениеДвижения;
			
			СуммаПревышенияНО = 0;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
		

	НалоговыйОбъект.Товары.Свернуть("Номенклатура, Содержание, Характеристика, НомерГТД, Упаковка, Цена, СтавкаНДС, ОбъектРасчетов, ДокументПоставки"
											+?(ТипЗнч(НалоговыйОбъект) = Тип("ДокументОбъект.Приложение2КНалоговойНакладной"), ", ДокументПоставкиДляВозвратов, ЭтоКорректировкаКоличества", "")
									, "КоличествоУпаковок, СуммаСНДС");
	
КонецПроцедуры

Функция АналитикиИзменились(СтараяАналитика, НоваяАналитика)
	
	Для каждого Аналитика из СтараяАналитика Цикл
		
		Если НоваяАналитика[Аналитика.Ключ] <> Аналитика.Значение Тогда
			Возврат Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Процедура НайтиСтрокиНаСуммуПревышения(СуммаПревышения, ДокументПоставки, ТаблицаНоменклатурыДляЗаполнения, ТаблицаНоменклатурыНаСумму, ДатаОперации)
		
	СтрокиПоДокументуОтгрузки = ТаблицаНоменклатурыДляЗаполнения.НайтиСтроки(Новый Структура("ДокументПоставки", ДокументПоставки));
	ТаблицаНоменклатурыНаСумму.Очистить();
	
	СуммаПревышенияНО = СуммаПревышения;
	
	Для каждого Строка Из СтрокиПоДокументуОтгрузки Цикл
		
		ВидОперации = ПолучитьВидОперации(Строка.СтавкаНДС, Строка.ВидПоставки, ДатаОперации);
		
		Если СуммаПревышенияНО > Строка.СуммаВзаиморасчетовОстаток Тогда
			
			НоваяСтрока = ТаблицаНоменклатурыНаСумму.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			НоваяСтрока.ВидОперации = ВидОперации;
			
			СуммаПревышенияНО = СуммаПревышенияНО - Строка.СуммаВзаиморасчетовОстаток;
			ТаблицаНоменклатурыДляЗаполнения.Удалить(Строка);
			
		ИначеЕсли СуммаПревышенияНО = Строка.СуммаВзаиморасчетовОстаток Тогда
			
			НоваяСтрока = ТаблицаНоменклатурыНаСумму.Добавить();
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			НоваяСтрока.ВидОперации = ВидОперации;
			
			СуммаПревышенияНО = 0;
			ТаблицаНоменклатурыДляЗаполнения.Удалить(Строка);
			Прервать;
			
		Иначе
			
			ПолнаяСумма = Строка.СуммаВзаиморасчетовОстаток;
			ПолноеКоличество = Строка.КоличествоУпаковокОстаток;
			Строка.СуммаВзаиморасчетовОстаток = Строка.СуммаВзаиморасчетовОстаток - СуммаПревышенияНО;
			Строка.КоличествоУпаковокОстаток = Окр((Строка.КоличествоУпаковокОстаток * Строка.СуммаВзаиморасчетовОстаток) / ПолнаяСумма, 3);
			
			НоваяСтрока = ТаблицаНоменклатурыНаСумму.Добавить();
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			НоваяСтрока.ВидОперации = ВидОперации;
			НоваяСтрока.СуммаВзаиморасчетовОстаток = СуммаПревышенияНО;
			НоваяСтрока.КоличествоУпаковокОстаток = ПолноеКоличество - Строка.КоличествоУпаковокОстаток;
			
			СуммаПревышенияНО = 0;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // НайтиСтрокиНаСуммуПревышения

Функция ПолучитьВидОперации(СтавкаНДС, ВидПоставки, ДатаОперации)
	
	ОтделятьСтавку7 = ДатаОперации < '2014-12-01';
    ОтделятьСтавку14 = ДатаОперации < НДСОбщегоНазначенияПовтИсп.ДатаНачалаДействияФормыНДС14();
	
	Если ВидПоставки = Перечисления.ВидыПоставки.Розница Тогда
		
		Если СтавкаНДС = Перечисления.СтавкиНДС.НДС20
			ИЛИ СтавкаНДС = Перечисления.СтавкиНДС.НДС0 
            ИЛИ СтавкаНДС = Перечисления.СтавкиНДС.НДС14 И НЕ ОтделятьСтавку14
			ИЛИ СтавкаНДС = Перечисления.СтавкиНДС.НДС7 И НЕ ОтделятьСтавку7 Тогда
			ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОблагаемыеОперации;
        ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС14 Тогда
        	ВидОперации = "14_"+ "ИтоговаяРозницаОблагаемыеОперации";
		ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС7 Тогда
			ВидОперации = "07_"+ "ИтоговаяРозницаОблагаемыеОперации";
		ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
			ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОсвобожденныеОперации;
		Иначе
			ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.НеНДСОперации;
		КонецЕсли;
		
	Иначе
		
		Если СтавкаНДС = Перечисления.СтавкиНДС.НДС20
			ИЛИ СтавкаНДС = Перечисления.СтавкиНДС.НДС0
            ИЛИ СтавкаНДС = Перечисления.СтавкиНДС.НДС14 И НЕ ОтделятьСтавку14
			ИЛИ СтавкаНДС = Перечисления.СтавкиНДС.НДС7 И НЕ ОтделятьСтавку7 Тогда
			ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.ОблагаемыеОперации;
        ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС14 Тогда
        	ВидОперации = "14_"+ "ОблагаемыеОперации";
		ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС7 Тогда
			ВидОперации = "07_"+ "ОблагаемыеОперации";
		ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
			ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.ОсвобожденныеОперации;
		Иначе
			ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.НеНДСОперации;
		КонецЕсли;
		
	КонецЕсли;
		
	Возврат ВидОперации;
	
КонецФункции

Функция ПолучитьЦенуДляНН(СуммаПревышенияНО, СтавкаНДС)
	
	Возврат СуммаПревышенияНО / (1 + НДСОбщегоНазначенияКлиентСервер.ПолучитьСтавкуНДСЧислом(СтавкаНДС));
	
КонецФункции

Функция СформироватьТаблицуСуммПревышенийПоДокументаПоставкиЗаДень(ВыборкаПоПревышениямПоДням)
	
	ТаблицаРезультата = Новый ТаблицаЗначений;
	
	ТаблицаРезультата.Колонки.Добавить("АналитикаУчетаПоПартнерам");
	ТаблицаРезультата.Колонки.Добавить("Валюта");
	ТаблицаРезультата.Колонки.Добавить("ОбъектРасчетов");
	ТаблицаРезультата.Колонки.Добавить("ДокументПоставки");
	ТаблицаРезультата.Колонки.Добавить("СуммаПревышенияНО");
	
	Пока ВыборкаПоПревышениямПоДням.Следующий() Цикл
		
		НоваяСтрока = ТаблицаРезультата.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПоПревышениямПоДням);
		
	КонецЦикла;
	
	Возврат ТаблицаРезультата;
	
КонецФункции

Функция НайтиСтрокиОстатковПоНоменклатуреИДокументамПоставок(МассивОстатков, СтруктураПоискаНоменклатуры, МассивСтрокПревышенийПоДокументаПоставки)
	
	МассивРезультата = Новый Массив;
	
	СуммаПревышения = 0;
	
	Для каждого СтрокаМассиваОстатков Из МассивОстатков Цикл
		
		Совпадает = Истина;
		
		Для каждого Элемент из СтруктураПоискаНоменклатуры Цикл
			Если НЕ (Элемент.Значение = СтрокаМассиваОстатков[Элемент.Ключ]) Тогда
				Совпадает = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если НЕ Совпадает Тогда
			Продолжить;
		КонецЕсли;
		
		Совпадает = Ложь;
		
		Для каждого СтрокаДокументаПоставки из МассивСтрокПревышенийПоДокументаПоставки Цикл
			Если (СтрокаДокументаПоставки.ДокументПоставки = СтрокаМассиваОстатков.ДокументПоставки) Тогда
				Совпадает = Истина;
				СуммаПревышения = СтрокаДокументаПоставки.СуммаПревышенияНО;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если НЕ Совпадает Тогда
			Продолжить;
		КонецЕсли;
		
		ВложеныйМассив = Новый Массив;
		
		ВложеныйМассив.Добавить(СтрокаМассиваОстатков);
		ВложеныйМассив.Добавить(СуммаПревышения);
		
		МассивРезультата.Добавить(ВложеныйМассив);
		
	КонецЦикла;
	
	Возврат МассивРезультата;
	
КонецФункции

Процедура СопоставитьСтрокиНаСуммуПоДокументамОтгрузкиЗаДень(ТаблицаОстатков, ТаблицаПревышенийПоАналитикамЗаДень, ВыборкаАвансовЗаДень)
	
	СтруктураПоискаНоменклатуры = Новый Структура("Номенклатура, Характеристика, Упаковка, ЦенаНН, СтавкаНДС, НомерГТД");
	СтруктураПоискаАналитики = Новый Структура("АналитикаУчетаПоПартнерам, Валюта");
	
	СтруктураОтбора = Новый Структура("Номенклатура, Характеристика, НомерГТД, Упаковка, СтавкаНДС, Цена, ДокументПоставки");
	СтруктураОтбораП2 = Новый Структура("Номенклатура, Характеристика, НомерГТД, Упаковка, СтавкаНДС, Цена, ДокументПоставки, ДокументПоставкиДляВозвратов");
	
	ТекущийНалоговыйДокумент = Неопределено;
	НалоговаяДляКорректировки = Неопределено;
	
	ПропускатьДоСледующейАналитики = Ложь;
	
	МассивСтрокДляУдаления = Новый Массив;
	
	Пока ВыборкаАвансовЗаДень.Следующий() Цикл
		
		Если АналитикиИзменились(СтруктураПоискаАналитики, ВыборкаАвансовЗаДень) = Истина Тогда
			
			ЗаполнитьЗначенияСвойств(СтруктураПоискаАналитики, ВыборкаАвансовЗаДень);
			
			МассивСтрокПревышений = ТаблицаПревышенийПоАналитикамЗаДень.НайтиСтроки(СтруктураПоискаАналитики);
			
			Если МассивСтрокПревышений.Количество() = 0 Тогда
				ПропускатьДоСледующейАналитики = Истина;
				Продолжить;
			КонецЕсли;
			
			Если ПропускатьДоСледующейАналитики Тогда
				ПропускатьДоСледующейАналитики = Ложь;
			КонецЕсли;
			
			МассивОстатковПоАналитикам = ТаблицаОстатков.НайтиСтроки(СтруктураПоискаАналитики);
			
		ИначеЕсли ПропускатьДоСледующейАналитики Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоискаНоменклатуры, ВыборкаАвансовЗаДень);
		
		МассивСтрокОстатков = НайтиСтрокиОстатковПоНоменклатуреИДокументамПоставок(МассивОстатковПоАналитикам, СтруктураПоискаНоменклатуры, МассивСтрокПревышений);
		
		Если МассивСтрокОстатков.Количество() = 0 Тогда
			 Продолжить;
		Иначе
			
			Если НЕ ТекущийНалоговыйДокумент = ВыборкаАвансовЗаДень.ТекущийНалоговыйДокумент Тогда
				
				Если НЕ (ТекущийНалоговыйДокумент = Неопределено) Тогда
					НалоговаяДляКорректировки.ЗаполнитьРеквизитыПослеАвтоформирования(Ложь);
					НалоговаяДляКорректировки.ДополнительныеСвойства.Вставить("ПроверкаДатыЗапретаИзменения", Ложь);
					НалоговаяДляКорректировки.Записать(РежимЗаписиДокумента.Проведение);
				КонецЕсли;
				
				ТекущийНалоговыйДокумент = ВыборкаАвансовЗаДень.ТекущийНалоговыйДокумент;
				НалоговаяДляКорректировки = ВыборкаАвансовЗаДень.ТекущийНалоговыйДокумент.ПолучитьОбъект();
				
			КонецЕсли;
			
			Если ТипЗнч(НалоговаяДляКорректировки) = Тип("ДокументОбъект.Приложение2КНалоговойНакладной") Тогда
				ЗаполнитьЗначенияСвойств(СтруктураОтбораП2, ВыборкаАвансовЗаДень);
				СтруктураОтбораП2.Цена = ВыборкаАвансовЗаДень.ЦенаНН;
				СтруктураОтбораП2.ДокументПоставки = Неопределено;
				СтруктураОтбораП2.ДокументПоставкиДляВозвратов = Неопределено;
				СтрокиДляКорректировки = НалоговаяДляКорректировки.Товары.НайтиСтроки(СтруктураОтбораП2);
			Иначе
				ЗаполнитьЗначенияСвойств(СтруктураОтбора, ВыборкаАвансовЗаДень);
				СтруктураОтбора.Цена = ВыборкаАвансовЗаДень.ЦенаНН;
				СтруктураОтбора.ДокументПоставки = Неопределено;
				СтрокиДляКорректировки = НалоговаяДляКорректировки.Товары.НайтиСтроки(СтруктураОтбора);
			КонецЕсли;
			
			СуммаСтроки = ВыборкаАвансовЗаДень.СуммаВзаиморасчетов;
			
			Для Инд = 1 По СтрокиДляКорректировки.Количество() Цикл
				
				Если СуммаСтроки = 0 Тогда
					Прервать;
				КонецЕсли;
				
				Строка = СтрокиДляКорректировки[Инд - 1];
				
				ДопСчетчик = 0;
				
				Для ИндОстатка = 1 По МассивСтрокОстатков.Количество() Цикл
					
					МассивСтрокаИСуммаОстатка = МассивСтрокОстатков[ИндОстатка - ДопСчетчик - 1];
					
					СтрокаОстатка = МассивСтрокаИСуммаОстатка[0];
					
					Если НЕ (Строка.ОбъектРасчетов = Неопределено ИЛИ Строка.ОбъектРасчетов = СтрокаОстатка.ОбъектРасчетов) Тогда
						Продолжить;
					КонецЕсли;
					
					ОбъектРасчетов = СтрокаОстатка.ОбъектРасчетов;
					ДокументПоставкиДляВозвратов = СтрокаОстатка.ДокументПоставкиДляВозвратов;
					ДокументПоставки = СтрокаОстатка.ДокументПоставки;
					СуммаРаспределения = Мин(МассивСтрокаИСуммаОстатка[1], СуммаСтроки);
										
					Если СуммаРаспределения > Строка.СуммаСНДС Тогда
						
						Строка.ОбъектРасчетов = ОбъектРасчетов;
						Строка.ДокументПоставки = ДокументПоставки;
						Если ТипЗнч(НалоговаяДляКорректировки) = Тип("ДокументОбъект.Приложение2КНалоговойНакладной") Тогда
							Строка.ДокументПоставкиДляВозвратов = ДокументПоставкиДляВозвратов;
						КонецЕсли;
						
						МассивСтрокаИСуммаОстатка[1] = МассивСтрокаИСуммаОстатка[1] - Строка.СуммаСНДС;
						СуммаСтроки = СуммаСтроки - Строка.СуммаСНДС;
						
						Прервать;
												
					ИначеЕсли СуммаРаспределения = Строка.СуммаСНДС Тогда
						
						Строка.ОбъектРасчетов = ОбъектРасчетов;
						Строка.ДокументПоставки = ДокументПоставки;
						Если ТипЗнч(НалоговаяДляКорректировки) = Тип("ДокументОбъект.Приложение2КНалоговойНакладной") Тогда
							Строка.ДокументПоставкиДляВозвратов = ДокументПоставкиДляВозвратов;
						КонецЕсли;
						
						Если МассивСтрокаИСуммаОстатка[1] - Строка.СуммаСНДС <= 0 Тогда
							Индекс = МассивОстатковПоАналитикам.Найти(СтрокаОстатка);
							Если Индекс <> Неопределено Тогда
								МассивОстатковПоАналитикам.Удалить(Индекс);
							КонецЕсли;
							ТаблицаОстатков.Удалить(СтрокаОстатка);
							МассивСтрокОстатков.Удалить(ИндОстатка - ДопСчетчик - 1);
							ДопСчетчик = ДопСчетчик + 1;
						КонецЕсли;
						СуммаСтроки = СуммаСтроки - Строка.СуммаСНДС;

						Прервать;

					Иначе // СуммаРаспределения < Строка.СуммаСНДС
						
						//Нужно разбить строку и отменить часть.
						ИндексТекущейСтроки 	 = НалоговаяДляКорректировки.Товары.Индекс(Строка);
						НоваяСтрока 			 = НалоговаяДляКорректировки.Товары.Вставить(ИндексТекущейСтроки + 1);
						
						ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
						НоваяСтрока.ОбъектРасчетов = ОбъектРасчетов;
						НоваяСтрока.ДокументПоставки = ДокументПоставки;
						Если ТипЗнч(НалоговаяДляКорректировки) = Тип("ДокументОбъект.Приложение2КНалоговойНакладной") Тогда
							НоваяСтрока.ДокументПоставкиДляВозвратов = ДокументПоставкиДляВозвратов;
						КонецЕсли;
						
						ПолнаяСумма = Строка.СуммаСНДС;
						ПолноеКоличество = Строка.КоличествоУпаковок;
						
						Строка.СуммаСНДС = Строка.СуммаСНДС - СуммаРаспределения;
						НоваяСтрока.СуммаСНДС = СуммаРаспределения;
						
						Строка.КоличествоУпаковок = Окр((Строка.КоличествоУпаковок * Строка.СуммаСНДС) / ПолнаяСумма, 3);
						НоваяСтрока.КоличествоУпаковок = ПолноеКоличество - Строка.КоличествоУпаковок;
						
						Если МассивСтрокаИСуммаОстатка[1] - Строка.СуммаСНДС <= 0 Тогда
							Индекс = МассивОстатковПоАналитикам.Найти(СтрокаОстатка);
							Если Индекс <> Неопределено Тогда
								МассивОстатковПоАналитикам.Удалить(Индекс);
							КонецЕсли;
							ТаблицаОстатков.Удалить(СтрокаОстатка);
							МассивСтрокОстатков.Удалить(ИндОстатка - ДопСчетчик - 1);
							ДопСчетчик = ДопСчетчик + 1;
						КонецЕсли;
						Если СуммаСтроки - Строка.СуммаСНДС <= 0 Тогда
							СуммаСтроки = 0;
							Прервать;
						КонецЕсли;
						
					КонецЕсли;
					
					
				КонецЦикла;
				
			КонецЦикла;
				
		КонецЕсли;
			
	КонецЦикла;
	
	Если НЕ (ТекущийНалоговыйДокумент = Неопределено) Тогда
		НалоговаяДляКорректировки.ЗаполнитьРеквизитыПослеАвтоформирования(Ложь);
		НалоговаяДляКорректировки.ДополнительныеСвойства.Вставить("ПроверкаДатыЗапретаИзменения", Ложь);
		НалоговаяДляКорректировки.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьИЗаполнитьНалоговыйОбъект(СтарыеАналитики, СтруктураДопРеквизитовЗаполнения)
	
	ВидОперации = Неопределено;
	ДатаЗапрета = Неопределено;
	НалоговаяНакладнаяДляВозвратов = Неопределено;
	ОсновнаяНалоговаяДляП2 = Неопределено;
	
	СтруктураДопРеквизитовЗаполнения.Свойство("ВидОперации", ВидОперации);
	СтруктураДопРеквизитовЗаполнения.Свойство("ДатаЗапрета", ДатаЗапрета);
	ПереданаНалоговаяНакладнаяДляВозвратов = СтруктураДопРеквизитовЗаполнения.Свойство("НалоговаяНакладнаяДляВозвратов", НалоговаяНакладнаяДляВозвратов);
	ПереданаОсновнаяНалоговаяДляП2 = СтруктураДопРеквизитовЗаполнения.Свойство("ОсновнаяНалоговаяДляП2", ОсновнаяНалоговаяДляП2);
	
	
	Если СтарыеАналитики.РазрезВидПоставки = Перечисления.ВидыПоставки.Возврат Тогда
		НалоговыйОбъект = Документы.Приложение2КНалоговойНакладной.СоздатьДокумент();
		НалоговыйОбъект.ВидОперацииВозвратКорректировка = Перечисления.ВидыОперацийПриложений2КНалоговойНакладной.Возврат;
		НалоговыйОбъект.НалоговаяНакладная = ?(НЕ ПереданаНалоговаяНакладнаяДляВозвратов, СтарыеАналитики.НалоговаяНакладнаяДляВозвратов, НалоговаяНакладнаяДляВозвратов);
		Если ПереданаОсновнаяНалоговаяДляП2 Тогда
			НалоговыйОбъект.ВидОперацииВозвратКорректировка = Перечисления.ВидыОперацийПриложений2КНалоговойНакладной.КорректировкаВозврата;
			НалоговыйОбъект.ОсновноеП2ДляВозврата = ОсновнаяНалоговаяДляП2;
		КонецЕсли
	ИначеЕсли СтарыеАналитики.РазрезВидПоставки = Перечисления.ВидыПоставки.Переоценка Тогда
		НалоговыйОбъект = Документы.Приложение2КНалоговойНакладной.СоздатьДокумент();
		НалоговыйОбъект.ВидОперацииВозвратКорректировка = Перечисления.ВидыОперацийПриложений2КНалоговойНакладной.Корректировка;
		НалоговыйОбъект.Переоценка = Истина;
		НалоговыйОбъект.НалоговаяНакладная = ?(НЕ ПереданаНалоговаяНакладнаяДляВозвратов, СтарыеАналитики.НалоговаяНакладнаяДляВозвратов, НалоговаяНакладнаяДляВозвратов);
		Если ПереданаОсновнаяНалоговаяДляП2 Тогда
			НалоговыйОбъект.ОсновноеП2ДляВозврата = ОсновнаяНалоговаяДляП2;
		КонецЕсли
	ИначеЕсли ПереданаОсновнаяНалоговаяДляП2 Тогда
		НалоговыйОбъект = Документы.Приложение2КНалоговойНакладной.СоздатьДокумент();
		НалоговыйОбъект.ВидОперацииВозвратКорректировка = Перечисления.ВидыОперацийПриложений2КНалоговойНакладной.Корректировка;
		НалоговыйОбъект.НалоговаяНакладная = ОсновнаяНалоговаяДляП2;
	Иначе
		НалоговыйОбъект = Документы.НалоговаяНакладная.СоздатьДокумент();
	КонецЕсли;
	
	Если ПереданаОсновнаяНалоговаяДляП2 Тогда
		НалоговыйОбъект.Дата = КонецДня(ТекущаяДата());
	ИначеЕсли ДатаЗапрета <> Неопределено Тогда
		НалоговыйОбъект.Дата = КонецДня(ДатаЗапрета+86400);
		НалоговыйОбъект.ДатаОтгрузкиОплаты = КонецДня(СтарыеАналитики.День);
	Иначе
		НалоговыйОбъект.Дата = КонецДня(СтарыеАналитики.День);
	КонецЕсли;
	
	НалоговыйОбъект.Валюта = СтарыеАналитики.Валюта;
	
	
	НалоговыйОбъект.Партнер = СтарыеАналитики.АналитикаУчетаПоПартнерам.Партнер;
	НалоговыйОбъект.Контрагент = СтарыеАналитики.АналитикаУчетаПоПартнерам.Контрагент;
	НалоговыйОбъект.Организация = СтарыеАналитики.АналитикаУчетаПоПартнерам.Организация;
	НалоговыйОбъект.Договор = СтарыеАналитики.АналитикаУчетаПоПартнерам.Договор;
	НалоговыйОбъект.НаправлениеДеятельности = СтарыеАналитики.АналитикаУчетаПоПартнерам.НаправлениеДеятельности;
	
	НалоговыйОбъект.Статус = Перечисления.СтатусыНалоговыхДокументов.Сформирован;
	
	НалоговыйОбъект.РазрешенаАвтоКорректировка = Истина;		
	
	Если ВидОперации <> Неопределено Тогда
		ЗаполнитьВидОперации(НалоговыйОбъект.ВидОперации, ВидОперации);
	КонецЕсли;
	
	Возврат НалоговыйОбъект;
	
КонецФункции

Процедура ЗаполнитьВидОперации(ВидОперацииДляЗаполнения, ВидОперацииИсточникЗаполнения)
	
	Если ТипЗнч(ВидОперацииИсточникЗаполнения) = Тип("Строка") Тогда
		// виберем все символы до конца сторки начиная с 4-го, принятое шифрование такое: 2 силвола ставка НДС, символ "_", вид операции, например - "07_ОблагаемыеОперации"
		ВидОперацииДляЗаполнения = Перечисления.ВидыОперацийНалоговыхДокументов[Сред(ВидОперацииИсточникЗаполнения, 4)];
	Иначе
		ВидОперацииДляЗаполнения = ВидОперацииИсточникЗаполнения;
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьВидОперацииПоСтавке7(ВидОперации)
	
	НовыйВидОперации = "07_" + ОбщегоНазначения.ИмяЗначенияПеречисления(ВидОперации);
	
	Возврат НовыйВидОперации;
	
КонецФункции

Функция СформироватьВидОперацииПоСтавке14(ВидОперации)
    
	НовыйВидОперации = "14_" + ОбщегоНазначения.ИмяЗначенияПеречисления(ВидОперации);
	
	Возврат НовыйВидОперации;
	
КонецФункции


Функция ПолучитьТаблицуОграниченийПоДатамЗапрета(ВыборкаДанныхОбъектов, Пользователь, ПолноеИмяОбъектаМетаданныхДляПроверки)
	
	СвойстваВстраивания = ДатыЗапретаИзмененияСлужебный.СвойстваРазделов();
	ПустойРаздел = ДатыЗапретаИзмененияСлужебныйПовтИсп.ПустойРаздел();
	
	ДействующиеДаты = ДатыЗапретаИзмененияСлужебный.ДействующиеДатыЗапрета();
	
	Таблица = ПолноеИмяОбъектаМетаданныхДляПроверки;
	ИсточникиДанных = ДатыЗапретаИзмененияСлужебный.ПолучитьИсточникиДанных(ДействующиеДаты, Таблица);
	Раздел = ИсточникиДанных.Состав[0].Раздел;
	
	ДанныеДляПроверки = ДатыЗапретаИзменения.ШаблонДанныхДляПроверки();
	
	Пока ВыборкаДанныхОбъектов.Следующий() Цикл
		Строка = ДанныеДляПроверки.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, ВыборкаДанныхОбъектов);
		Строка.Раздел = Раздел;
	КонецЦикла;
	
	// Приведение данных в соответствие варианту встраивания.
	Для каждого Строка Из ДанныеДляПроверки Цикл
		
		Если СвойстваВстраивания.БезРазделовИОбъектов Тогда
			Строка.Раздел = ПустойРаздел;
			Строка.Объект = ПустойРаздел;
		Иначе
			Если ЗначениеЗаполнено(СвойстваВстраивания.ЕдинственныйРаздел) Тогда
				Строка.Раздел = СвойстваВстраивания.ЕдинственныйРаздел;
			КонецЕсли;
			
			Если СвойстваВстраивания.ВсеРазделыБезОбъектов
			 Или Не ЗначениеЗаполнено(Строка.Объект) Тогда
				
				Строка.Объект = Строка.Раздел;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	// Свертка лишних строк, чтобы сократить число проверок и сообщений.
	РазделыИОбъекты = ДанныеДляПроверки.Скопировать();
	РазделыИОбъекты.Свернуть("Раздел, Объект");
	Отбор = Новый Структура("Раздел, Объект");
	РазделыИОбъекты.Колонки.Добавить("Дата",
		Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	
	Для Каждого РазделИОбъект Из РазделыИОбъекты Цикл
		ЗаполнитьЗначенияСвойств(Отбор, РазделИОбъект);
		Строки = ДанныеДляПроверки.НайтиСтроки(Отбор);
		МинимальнаяДата = Неопределено;
		Для Каждого Строка Из Строки Цикл
			ТекущаяДата = НачалоДня(Строка.Дата);
			Если МинимальнаяДата = Неопределено Тогда
				МинимальнаяДата = ТекущаяДата;
			КонецЕсли;
			Если ТекущаяДата < МинимальнаяДата Тогда
				МинимальнаяДата = ТекущаяДата;
			КонецЕсли;
		КонецЦикла;
		РазделИОбъект.Дата = МинимальнаяДата;
	КонецЦикла;
	ДанныеДляПроверки = РазделыИОбъекты;
	
	// Приоритеты дат запрета изменения.
	// 1. Для раздела, объекта и пользователя.
	// 2. Для раздела, объекта и группы пользователей.
	// 3. Для раздела, объекта и любого пользователя.
	// 4. Для раздела, любого объекта (объект = раздел) и пользователя.
	// 5. Для раздела, любого объекта (объект = раздел) и группы пользователей.
	// 6. Для раздела, любого объекта (объект = раздел) и любого пользователя.
	// 7. Для любого раздела (пустой раздел), любого объекта (объект = раздел) и пользователя.
	// 8. Для любого раздела (пустой раздел), любого объекта (объект = раздел) и группы пользователей.
	// 9. Для любого раздела (пустой раздел), любого объекта (объект = раздел) и любого пользователя.
	
	// Приоритеты дат запрета загрузки.
	// 1. Для раздела, объекта и узла.
	// 2. Для раздела, объекта и любого узла.
	// 3. Для раздела, любого объекта (объект = раздел) и узла.
	// 4. Для раздела, любого объекта (объект = раздел) и любого узла.
	// 5. Для любого раздела (пустой раздел), любого объекта (объект = раздел) и узла.
	// 6. Для любого раздела (пустой раздел), любого объекта (объект = раздел) и любого узла.
	
	ЗапретыИзменения = ДанныеДляПроверки.Скопировать(Новый Массив, "Объект, Дата");
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("УзелПроверкиЗапретаЗагрузки", Неопределено);
	
	// Поиск запретов изменения данных.
	Разделы = ДействующиеДаты.ДляПользователей.Разделы;
	ГруппыПользователя = ДействующиеДаты.ГруппыПользователей.Получить(Пользователь);
	Если ГруппыПользователя = Неопределено Тогда
		ГруппыПользователя = Новый Массив;
	КонецЕсли;
	ДополнительныеПараметры.Вставить("Пользователь",       Пользователь);
	ДополнительныеПараметры.Вставить("ГруппыПользователя", ГруппыПользователя);
	
	Для Каждого Данные Из ДанныеДляПроверки Цикл
		РазделЗапрета = Данные.Раздел;
		ОбъектЗапрета = Данные.Объект;
		
		Объекты = Разделы.Получить(РазделЗапрета);
		Адресаты = Неопределено;
		ДатаЗапрета = Неопределено;
		
		Если Объекты <> Неопределено Тогда
			Адресаты = Объекты.Получить(ОбъектЗапрета);
			Если Адресаты <> Неопределено Тогда
				// Поиск для раздела и объекта.
				ДатаЗапрета = ДатыЗапретаИзменения.НайтиДатуЗапрета(Адресаты, РазделЗапрета, ОбъектЗапрета, ДополнительныеПараметры);
			КонецЕсли;
			Если ДатаЗапрета = Неопределено Тогда
				ОбъектЗапрета = РазделЗапрета;
				Адресаты = Объекты.Получить(ОбъектЗапрета);
				Если Адресаты <> Неопределено Тогда
					// Поиск для раздела и любого объекта.
					ДатаЗапрета = ДатыЗапретаИзменения.НайтиДатуЗапрета(Адресаты, РазделЗапрета, ОбъектЗапрета, ДополнительныеПараметры);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Если ДатаЗапрета = Неопределено Тогда
			РазделЗапрета = ПустойРаздел;
			ОбъектЗапрета = РазделЗапрета;
			Объекты = Разделы.Получить(РазделЗапрета);
			Если Объекты = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Адресаты = Объекты.Получить(ОбъектЗапрета);
			Если Адресаты = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			// Поиск для любого раздела и любого объекта (общая дата).
			ДатаЗапрета = ДатыЗапретаИзменения.НайтиДатуЗапрета(Адресаты, РазделЗапрета, ОбъектЗапрета, ДополнительныеПараметры);
			Если ДатаЗапрета = Неопределено Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Адресат = Пользователь;
		
		Строка = ЗапретыИзменения.Добавить();
		Строка.Объект  = ОбъектЗапрета;
		Строка.Дата    = ДатаЗапрета;
		
	КонецЦикла;
	
	Возврат ЗапретыИзменения;
	
КонецФункции // ПолучитьТаблицуОграниченийПоДатамЗапрета

Функция ПолучитьКонечнуюДатуЗапретаИзТаблицы(ТаблицаОграниченийПоДатамЗапрета, ОрганизацияПроверки, ДатаПроверки)
	
	ДатаЗапрета = Неопределено;
	ПустойРаздел = ДатыЗапретаИзмененияСлужебныйПовтИсп.ПустойРаздел();
	
	СтрокаОграниченийПоДатамЗапрета = ТаблицаОграниченийПоДатамЗапрета.Найти(ОрганизацияПроверки, "Объект");
	
	Если СтрокаОграниченийПоДатамЗапрета = Неопределено Тогда
		СтрокаОграниченийПоДатамЗапрета = ТаблицаОграниченийПоДатамЗапрета.Найти(ПустойРаздел, "Объект");
	КонецЕсли;
	
	Если СтрокаОграниченийПоДатамЗапрета <> Неопределено И СтрокаОграниченийПоДатамЗапрета.Дата >= НачалоДня(ДатаПроверки) Тогда
		ДатаЗапрета = СтрокаОграниченийПоДатамЗапрета.Дата;
	КонецЕсли;
	
	Возврат ДатаЗапрета;
	
КонецФункции

#КонецОбласти

#Область РасчетВозникшихОбязательствПоНДС

// Процедура заполняет и записывает наборы записей регистров.
//
// Параметры
//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
//	СтруктураШапки - Структура - Реквизиты документа
//
Процедура ЗаписатьНаборыЗаписей(СтруктураНаборыЗаписей, УдалятьПустые = Ложь)
	
	Для Каждого СтрокаСтруктуры Из СтруктураНаборыЗаписей Цикл
		
		НаборЗаписей = СтрокаСтруктуры.Значение;
		Если НаборЗаписей <> Неопределено И (УдалятьПустые ИЛИ НаборЗаписей.Количество() > 0) Тогда
			НаборЗаписей.ДополнительныеСвойства.Вставить("ДляПроведения", Новый Структура);
			НаборЗаписей.ДополнительныеСвойства.ДляПроведения.Вставить("СтруктураВременныеТаблицы", Новый Структура("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц));
			НаборЗаписей.Записать();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ЗаписатьНаборыЗаписейРасчетыСКлиентами()

Функция ПолучитьСуммуСобытия(ВыборкаДокументов, ДляДокументаОтгрузки = Ложь)
	
	Если ДляДокументаОтгрузки Тогда
		Если ВыборкаДокументов.ДолгДокументаОтгрузки <> 0 Тогда
			СуммаСобытия = ВыборкаДокументов.ДолгДокументаОтгрузки;
		ИначеЕсли ВыборкаДокументов.ПредоплатаДокументаОтгрузки <> 0 Тогда
			СуммаСобытия = ВыборкаДокументов.ПредоплатаДокументаОтгрузки;
		ИначеЕсли ВыборкаДокументов.КВозвратуДокументаОтгрузки <> 0 Тогда
			СуммаСобытия = ВыборкаДокументов.КВозвратуДокументаОтгрузки;
		Иначе
			СуммаСобытия = 0;
		КонецЕсли;
	Иначе
		Если ВыборкаДокументов.ДолгАбсолютноеЗначение <> 0 Тогда
			СуммаСобытия = ВыборкаДокументов.ДолгАбсолютноеЗначение;
		ИначеЕсли ВыборкаДокументов.ПредоплатаАбсолютноеЗначение <> 0 Тогда
			СуммаСобытия = ВыборкаДокументов.ПредоплатаАбсолютноеЗначение;
		ИначеЕсли ВыборкаДокументов.КВозвратуАбсолютноеЗначение <> 0 Тогда
			СуммаСобытия = ВыборкаДокументов.КВозвратуАбсолютноеЗначение;
		Иначе
			СуммаСобытия = 0;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ?(СуммаСобытия < 0, -СуммаСобытия, СуммаСобытия);
	
КонецФункции

// Процедура
//
// Параметры
//	Приемник
//	АналитикаУчетаПоПартнерам
//	ОбъектРасчетов
//	ВидПоставки
//	РасчетныйДокумент
//	МоментОпределенияБазыНДС
//	Валюта
//
Процедура ЗаполнитьИзмеренияРегистраВозникшегоНДС(Приемник, АналитикаУчетаПоПартнерам, ОбъектРасчетов, Регистратор, Период, ВидПоставки, ДокументПоставки, МоментОпределенияБазыНДС, Валюта)
	
	Приемник.АналитикаУчетаПоПартнерам 	= АналитикаУчетаПоПартнерам;
	Приемник.ОбъектРасчетов 			= ОбъектРасчетов;
	Приемник.Регистратор 				= Регистратор;
	Приемник.Период 					= Период;
	Приемник.ВидПоставки 				= ВидПоставки;
	Приемник.ДокументПоставки 			= ДокументПоставки;
	Приемник.МоментОпределенияБазыНДС 	= МоментОпределенияБазыНДС;
	Приемник.Валюта 					= Валюта;
	
	Приемник.Активность					= Истина;
	
КонецПроцедуры

Процедура ЗаполнитьСобытиеПоИсходящемуНДС(МоментОпределенияБазы, ВыборкаДокументов, СуммаСобытия, СуммаПоставкиТребующаяРегистрацииНН, СуммаПоставкиНЕТребующаяРегистрацииНН, СхемаВозврата)
	
// Если значение МоментОпределенияБазы не заполнено считаем, что по первому событию
	Если МоментОпределенияБазы = Перечисления.МоментыОпределенияНалоговойБазы.ПоПервомуСобытию ИЛИ НЕ ЗначениеЗаполнено(МоментОпределенияБазы) Тогда
		
		Если СхемаВозврата Тогда
			Если (ВыборкаДокументов.ЭтоВозврат) Тогда
				Если (ВыборкаДокументов.ПредоплатаАбсолютноеЗначение <> 0) ИЛИ
						(ВыборкаДокументов.КВозвратуАбсолютноеЗначение <> 0) ИЛИ
						(ВыборкаДокументов.ДолгАбсолютноеЗначение <> 0 И (НЕ ВыборкаДокументов.РасчетныйДокументВозвратОплаты)) Тогда
					СуммаПоставкиТребующаяРегистрацииНН = СуммаСобытия;
				Иначе
				КонецЕсли;
			ИначеЕсли ВыборкаДокументов.ЭтоВозвратОплаты Тогда
				Если (ВыборкаДокументов.ДолгАбсолютноеЗначение <> 0) ИЛИ
						(ВыборкаДокументов.ПредоплатаАбсолютноеЗначение <> 0 И НЕ (ВыборкаДокументов.ЭтоРозничныйПокупатель И (НЕ ВыборкаДокументов.ПоЗаявкеНаВозврат) И ВыборкаДокументов.РасчетныйДокументВозврат)) Тогда
					СуммаПоставкиТребующаяРегистрацииНН = СуммаСобытия;
				Иначе
				КонецЕсли;
			КонецЕсли;		
		Иначе
			Если ВыборкаДокументов.ЭтоПервоеСобытие Тогда
				СуммаПоставкиТребующаяРегистрацииНН = СуммаСобытия;
			Иначе
				СуммаПоставкиНеТребующаяРегистрацииНН = СуммаСобытия;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли МоментОпределенияБазы = Перечисления.МоментыОпределенияНалоговойБазы.ПоОтгрузке Тогда
		
		Если СхемаВозврата Тогда
			Если ВыборкаДокументов.ЭтоВозврат Тогда
				СуммаПоставкиТребующаяРегистрацииНН = СуммаСобытия;
			ИначеЕсли ВыборкаДокументов.ЭтоВозвратОплаты Тогда
			КонецЕсли;
		Иначе
			Если ВыборкаДокументов.ЭтоОтгрузка Тогда
				СуммаПоставкиТребующаяРегистрацииНН = СуммаСобытия;
			Иначе
				СуммаПоставкиНеТребующаяРегистрацииНН = СуммаСобытия;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли МоментОпределенияБазы = Перечисления.МоментыОпределенияНалоговойБазы.ПоОплате Тогда
		
		Если СхемаВозврата Тогда
			Если ВыборкаДокументов.ЭтоВозвратОплаты Тогда
				СуммаПоставкиТребующаяРегистрацииНН = СуммаСобытия;
			ИначеЕсли ВыборкаДокументов.ЭтоВозврат Тогда
			КонецЕсли;
		Иначе
			Если ВыборкаДокументов.ЭтоОплата Тогда
				СуммаПоставкиТребующаяРегистрацииНН = СуммаСобытия;
			Иначе
				СуммаПоставкиНеТребующаяРегистрацииНН = СуммаСобытия;
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура выполняет проведение документов по расчетам с клиентами.
//
// Параметры:
//	НачальныеГраницы - таблица начальных границ с колонками КлючАналитики, Период
//
Процедура ВыполнитьПроведениеДокументовПоВозникшемуНДС(НачальныеГраницы) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Структура наборов записей (движений документов)
	Движения = Новый Структура;
	
	// Структура для хранения таблиц движений
	ДополнительныеСвойства = Новый Структура;
	ДополнительныеСвойства.Вставить("ТаблицыДляДвижений", Новый Структура);
	
	// Создаем пустой набор записей регистра накопления "Расчеты с клиентами по документам".
	Движения.Вставить("НДСРасчетНалоговыхОбязательств", РегистрыНакопления.НДСРасчетНалоговыхОбязательств.СоздатьНаборЗаписей());
	
	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("НДСРасчетНалоговыхОбязательств", Движения.НДСРасчетНалоговыхОбязательств.ВыгрузитьКолонки());
	


	НомерЗадания = УвеличитьНомерЗадания("НомерЗаданияКРасчетуНалоговыхОбязательствДополнительно");
	
	МенеджерВременныхТаблиц = СформироватьВременнуюТаблицуНачальныхГраниц(НачальныеГраницы, НомерЗадания);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ВЫБОР
	|			КОГДА РасчетыСКлиентамиПоДокументам.РасчетныйДокумент.Дата ЕСТЬ NULL 
	|					ИЛИ РасчетыСКлиентамиПоДокументам.РасчетныйДокумент.Дата > НачальныеГраницы.Период
	|				ТОГДА НачальныеГраницы.Период
	|			ИНАЧЕ РасчетыСКлиентамиПоДокументам.РасчетныйДокумент.Дата
	|		КОНЕЦ) КАК Период,
	|	НачальныеГраницы.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	НачальныеГраницы.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	|ПОМЕСТИТЬ НачальныеГраницыСУчетомРасчетныхДокументов
	|ИЗ
	|	НачальныеГраницы КАК НачальныеГраницы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК РасчетыСКлиентамиПоДокументам
	|		ПО (РасчетыСКлиентамиПоДокументам.АналитикаУчетаПоПартнерам = НачальныеГраницы.АналитикаУчетаПоПартнерам)
	|ГДЕ
	|	(РасчетыСКлиентамиПоДокументам.Долг <> 0
	|			ИЛИ РасчетыСКлиентамиПоДокументам.Предоплата <> 0
	|			ИЛИ РасчетыСКлиентамиПоДокументам.КВозврату <> 0)
	|	И РасчетыСКлиентамиПоДокументам.Период >= НачальныеГраницы.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	НачальныеГраницы.АналитикаУчетаПоПартнерам.Организация,
	|	НачальныеГраницы.АналитикаУчетаПоПартнерам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(РасчетыСКлиентамиПоДокументам.Период, МЕСЯЦ) КАК Месяц,
	|	НачальныеГраницыСУчетомРасчетныхДокументов.Организация КАК Организация
	|ПОМЕСТИТЬ ТаблицаМесяцев
	|ИЗ
	|	НачальныеГраницыСУчетомРасчетныхДокументов КАК НачальныеГраницыСУчетомРасчетныхДокументов	
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК РасчетыСКлиентамиПоДокументам
	|		ПО РасчетыСКлиентамиПоДокументам.АналитикаУчетаПоПартнерам = НачальныеГраницыСУчетомРасчетныхДокументов.АналитикаУчетаПоПартнерам
	|			И РасчетыСКлиентамиПоДокументам.Период >= НачальныеГраницыСУчетомРасчетныхДокументов.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаМесяцев.Месяц,
	|	ТаблицаМесяцев.Организация,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СистемыНалогообложенияОрганизаций.Период <= ТаблицаМесяцев.Месяц
	|				ТОГДА СистемыНалогообложенияОрганизаций.Период
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ) КАК ПериодЗаписи
	|ПОМЕСТИТЬ ТаблицаПериодов
	|ИЗ
	|	ТаблицаМесяцев КАК ТаблицаМесяцев
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК СистемыНалогообложенияОрганизаций
	|		ПО ТаблицаМесяцев.Организация = СистемыНалогообложенияОрганизаций.Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаМесяцев.Месяц,
	|	ТаблицаМесяцев.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПериодов.Организация,
	|	ТаблицаПериодов.Месяц,
	|	ЕСТЬNULL(НЕ СистемыНалогообложенияОрганизаций.ПлательщикНДС, ИСТИНА) КАК ЭтоНеплательщик
	|ПОМЕСТИТЬ ТаблицаНеплательщиков
	|ИЗ
	|	ТаблицаПериодов КАК ТаблицаПериодов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаОрганизаций КАК СистемыНалогообложенияОрганизаций
	|		ПО ТаблицаПериодов.ПериодЗаписи = СистемыНалогообложенияОрганизаций.Период
	|			И ТаблицаПериодов.Организация = СистемыНалогообложенияОрганизаций.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыСКлиентамиПоДокументам.АналитикаУчетаПоПартнерам,
	|	РасчетыСКлиентамиПоДокументам.ЗаказКлиента КАК ОбъектРасчетов,
	|	РасчетыСКлиентамиПоДокументам.РасчетныйДокумент,
	|	РасчетыСКлиентамиПоДокументам.Валюта,
	|	РасчетыСКлиентамиПоДокументам.Регистратор КАК Регистратор,
	|	РасчетыСКлиентамиПоДокументам.Долг КАК ДолгАбсолютноеЗначение,
	|	РасчетыСКлиентамиПоДокументам.Предоплата КАК ПредоплатаАбсолютноеЗначение,
	|	РасчетыСКлиентамиПоДокументам.КВозврату КАК КВозвратуАбсолютноеЗначение,
	|	РасчетыСКлиентамиПоДокументам.ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентамиПоДокументам.Регистратор = РасчетыСКлиентамиПоДокументам.РасчетныйДокумент
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоПервоеСобытие,
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентамиПоДокументам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоОплата,
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентамиПоДокументам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоОтгрузка,
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентамиПоДокументам.ХозяйственнаяОперация В (&МассивОперацийВозврата)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоВозврат,
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентамиПоДокументам.ХозяйственнаяОперация В (&МассивОперацийВозвратаОплаты)
	|			ИЛИ (РасчетыСКлиентамиПоДокументам.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности)
	|					И (РасчетыСКлиентамиПоДокументам.КВозврату < 0 ИЛИ РасчетыСКлиентамиПоДокументам.Предоплата < 0))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоВозвратОплаты,
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентамиПоДокументам.АналитикаУчетаПоПартнерам.Партнер = &РозничныйПокупатель
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоРозничныйПокупатель,
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентамиПоДокументам.РасчетныйДокумент.ХозяйственнаяОперация В (&МассивОперацийВозврата)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РасчетныйДокументВозврат,
	|	ВЫБОР
	|		КОГДА РасчетыСКлиентамиПоДокументам.РасчетныйДокумент.ХозяйственнаяОперация В (&МассивОперацийВозвратаОплаты)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РасчетныйДокументВозвратОплаты,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(РасчетыСКлиентамиПоДокументам.ЗаказКлиента) = ТИП(Документ.ЗаявкаНаВозвратТоваровОтКлиента)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПоЗаявкеНаВозврат,
	|	РасчетыСКлиентамиПоДокументам.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	РасчетыСКлиентамиПоДокументам.АналитикаУчетаПоПартнерам.Организация КАК Организация,
	|	РасчетыСКлиентамиПоДокументам.Период,
	|	ЕСТЬNULL(ВложенныйЗапрос.Регистратор, НЕОПРЕДЕЛЕНО) КАК ДокументПоставки,
	|	РасчетыСКлиентамиПоДокументам.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапрос.Долг КАК ДолгДокументаОтгрузки,
	|	ВложенныйЗапрос.Предоплата КАК ПредоплатаДокументаОтгрузки,
	|	ЕСТЬNULL(ВложенныйЗапрос.ДокументПоставкиЕстьВозврат, НЕОПРЕДЕЛЕНО) КАК ДокументПоставкиЕстьВозврат,
	|	ВложенныйЗапрос.КВозврату КАК КВозвратуДокументаОтгрузки,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(РасчетыСКлиентамиПоДокументам.ЗаказКлиента) = ТИП(Документ.ЗаявкаНаВозвратТоваровОтКлиента)
	|				ИЛИ ТИПЗНАЧЕНИЯ(РасчетыСКлиентамиПоДокументам.ЗаказКлиента) = ТИП(Документ.ВозвратТоваровОтКлиента)
	|			ТОГДА ЕСТЬNULL(РасчетыСКлиентамиПоДокументам.ЗаказКлиента.СпособКомпенсации, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СпособКомпенсации
	|ПОМЕСТИТЬ ОсновнаяТаблица
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК РасчетыСКлиентамиПоДокументам
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачальныеГраницыСУчетомРасчетныхДокументов КАК НачальныеГраницыСУчетомРасчетныхДокументов
	|		ПО РасчетыСКлиентамиПоДокументам.АналитикаУчетаПоПартнерам = НачальныеГраницыСУчетомРасчетныхДокументов.АналитикаУчетаПоПартнерам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаНеплательщиков КАК ТаблицаНеплательщиков
	|		ПО РасчетыСКлиентамиПоДокументам.АналитикаУчетаПоПартнерам.Организация = ТаблицаНеплательщиков.Организация
	|			И (НАЧАЛОПЕРИОДА(РасчетыСКлиентамиПоДокументам.Период, МЕСЯЦ) = ТаблицаНеплательщиков.Месяц)
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			РасчетыСКлиентамиПоДокументам.Регистратор КАК Регистратор,
	|			РасчетыСКлиентамиПоДокументам.РасчетныйДокумент КАК РасчетныйДокумент,
	|			СУММА(РасчетыСКлиентамиПоДокументам.Долг) КАК Долг,
	|			СУММА(РасчетыСКлиентамиПоДокументам.Предоплата) КАК Предоплата,
	|			РасчетыСКлиентамиПоДокументам.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|			РасчетыСКлиентамиПоДокументам.ЗаказКлиента КАК ЗаказКлиента,
	|			РасчетыСКлиентамиПоДокументам.Валюта КАК Валюта,
	|			ВЫБОР
	|				КОГДА РасчетыСКлиентамиПоДокументам.ХозяйственнаяОперация В (&МассивОперацийВозврата)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ КАК ДокументПоставкиЕстьВозврат,
	|			СУММА(РасчетыСКлиентамиПоДокументам.КВозврату) КАК КВозврату
	|		ИЗ
	|			РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК РасчетыСКлиентамиПоДокументам
	|				ЛЕВОЕ СОЕДИНЕНИЕ НачальныеГраницыСУчетомРасчетныхДокументов КАК НачальныеГраницыСУчетомРасчетныхДокументов
	|				ПО РасчетыСКлиентамиПоДокументам.АналитикаУчетаПоПартнерам = НачальныеГраницыСУчетомРасчетныхДокументов.АналитикаУчетаПоПартнерам
	|				ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаНеплательщиков КАК ТаблицаНеплательщиков
	|				ПО (НАЧАЛОПЕРИОДА(РасчетыСКлиентамиПоДокументам.Период, МЕСЯЦ) = ТаблицаНеплательщиков.Месяц)
	|					И РасчетыСКлиентамиПоДокументам.АналитикаУчетаПоПартнерам.Организация = ТаблицаНеплательщиков.Организация
	|		ГДЕ
	|			(РасчетыСКлиентамиПоДокументам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ИЛИ РасчетыСКлиентамиПоДокументам.ХозяйственнаяОперация В (&МассивОперацийВозврата))
	|			И (РасчетыСКлиентамиПоДокументам.Долг <> 0
	|					ИЛИ РасчетыСКлиентамиПоДокументам.Предоплата <> 0
	|					ИЛИ РасчетыСКлиентамиПоДокументам.КВозврату <> 0)
	|			И (РасчетыСКлиентамиПоДокументам.РасчетныйДокумент.Дата >= НачальныеГраницыСУчетомРасчетныхДокументов.Период
	|					ИЛИ РасчетыСКлиентамиПоДокументам.Период >= НачальныеГраницыСУчетомРасчетныхДокументов.Период)
	|			И ТаблицаНеплательщиков.ЭтоНеплательщик = ЛОЖЬ
	|		
	|		СГРУППИРОВАТЬ ПО
	|			РасчетыСКлиентамиПоДокументам.Регистратор,
	|			РасчетыСКлиентамиПоДокументам.РасчетныйДокумент,
	|			РасчетыСКлиентамиПоДокументам.АналитикаУчетаПоПартнерам,
	|			РасчетыСКлиентамиПоДокументам.ЗаказКлиента,
	|			РасчетыСКлиентамиПоДокументам.Валюта,
	|			ВЫБОР
	|				КОГДА РасчетыСКлиентамиПоДокументам.ХозяйственнаяОперация В (&МассивОперацийВозврата)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ) КАК ВложенныйЗапрос
	|		ПО РасчетыСКлиентамиПоДокументам.РасчетныйДокумент = ВложенныйЗапрос.РасчетныйДокумент
	|			И РасчетыСКлиентамиПоДокументам.АналитикаУчетаПоПартнерам = ВложенныйЗапрос.АналитикаУчетаПоПартнерам
	|			И РасчетыСКлиентамиПоДокументам.ЗаказКлиента = ВложенныйЗапрос.ЗаказКлиента
	|			И РасчетыСКлиентамиПоДокументам.Валюта = ВложенныйЗапрос.Валюта
	|			И (ВЫБОР
	|				КОГДА РасчетыСКлиентамиПоДокументам.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|						ИЛИ РасчетыСКлиентамиПоДокументам.ХозяйственнаяОперация В (&МассивОперацийВозврата)
	|					ТОГДА РасчетыСКлиентамиПоДокументам.Регистратор = ВложенныйЗапрос.Регистратор
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|ГДЕ
	|	РасчетыСКлиентамиПоДокументам.Период >= НачальныеГраницыСУчетомРасчетныхДокументов.Период
	|	И (РасчетыСКлиентамиПоДокументам.Долг <> 0
	|			ИЛИ РасчетыСКлиентамиПоДокументам.Предоплата <> 0
	|			ИЛИ РасчетыСКлиентамиПоДокументам.КВозврату <> 0)
	|	И ТИПЗНАЧЕНИЯ(РасчетыСКлиентамиПоДокументам.Регистратор) В (&МассивДопустимыхТипов)
	|	И ТаблицаНеплательщиков.ЭтоНеплательщик = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ДокументыПоставки.ДокументПоставки ЕСТЬ NULL 
	|			ТОГДА ВложенныйЗапрос.ДокументПоставки
	|		ИНАЧЕ ДокументыПоставки.ДокументПоставки
	|	КОНЕЦ КАК ДокументПоставки,
	|	ВЫБОР
	|		КОГДА ДокументыПоставки.ДокументПоставки ЕСТЬ NULL 
	|			ТОГДА ВложенныйЗапрос.Период
	|		ИНАЧЕ ДокументыПоставки.Период
	|	КОНЕЦ КАК Период,
	|	ВЫБОР
	|		КОГДА ДокументыПоставки.ДокументПоставки ЕСТЬ NULL 
	|			ТОГДА ВложенныйЗапрос.АналитикаУчетаПоПартнерам
	|		ИНАЧЕ ДокументыПоставки.АналитикаУчетаПоПартнерам
	|	КОНЕЦ КАК АналитикаУчетаПоПартнерам,
	|	ВЫБОР
	|		КОГДА ДокументыПоставки.ДокументПоставки ЕСТЬ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Удалить
	|ИЗ
	|	(ВЫБРАТЬ
	|			ОсновнаяТаблица.ДокументПоставки КАК ДокументПоставки,
	|			МАКСИМУМ(ОсновнаяТаблица.АналитикаУчетаПоПартнерам) КАК АналитикаУчетаПоПартнерам,
	|			МИНИМУМ(НАЧАЛОПЕРИОДА(ОсновнаяТаблица.Период, День)) КАК Период
	|		ИЗ
	|			ОсновнаяТаблица КАК ОсновнаяТаблица
	|		ГДЕ
	|			ОсновнаяТаблица.ДокументПоставки <> НЕОПРЕДЕЛЕНО
	|			И ТИПЗНАЧЕНИЯ(ОсновнаяТаблица.ДокументПоставки) В (&МассивДопустимыхТиповНДСНачальныеПериоды)
	|		СГРУППИРОВАТЬ ПО
	|			ОсновнаяТаблица.ДокументПоставки) КАК ДокументыПоставки
	|	ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			НДСНачальныеПериоды.ДокументПоставки КАК ДокументПоставки,
	|			НДСНачальныеПериоды.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|			НДСНачальныеПериоды.Дата КАК Период
	|		ИЗ
	|			РегистрСведений.НДСНачальныеПериодыНОДляДокументовПоставки КАК НДСНачальныеПериоды
	|				ЛЕВОЕ СОЕДИНЕНИЕ НачальныеГраницы КАК НачальныеГраницы
	|				ПО НДСНачальныеПериоды.АналитикаУчетаПоПартнерам = НачальныеГраницы.АналитикаУчетаПоПартнерам
	|		ГДЕ
	|			НДСНачальныеПериоды.Дата >= НачальныеГраницы.Период 
	|				И (НЕ НачальныеГраницы.Период ЕСТЬ NULL)) КАК ВложенныйЗапрос
	|	ПО ДокументыПоставки.ДокументПоставки = ВложенныйЗапрос.ДокументПоставки
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсновнаяТаблица.АналитикаУчетаПоПартнерам,
	|	ОсновнаяТаблица.ОбъектРасчетов,
	|	ОсновнаяТаблица.РасчетныйДокумент,
	|	ОсновнаяТаблица.Валюта,
	|	ОсновнаяТаблица.Регистратор КАК Регистратор,
	|	ОсновнаяТаблица.ДолгАбсолютноеЗначение,
	|	ОсновнаяТаблица.ПредоплатаАбсолютноеЗначение,
	|	ОсновнаяТаблица.ХозяйственнаяОперация,
	|	ОсновнаяТаблица.ЭтоПервоеСобытие,
	|	ОсновнаяТаблица.ЭтоОплата,
	|	ОсновнаяТаблица.ЭтоОтгрузка,
	|	ОсновнаяТаблица.ЭтоВозврат,
	|	ОсновнаяТаблица.ЭтоВозвратОплаты,
	|	ОсновнаяТаблица.ЭтоРозничныйПокупатель,
	|	ОсновнаяТаблица.РасчетныйДокументВозврат,
	|	ОсновнаяТаблица.РасчетныйДокументВозвратОплаты,
	|	ОсновнаяТаблица.Контрагент,
	|	ОсновнаяТаблица.Организация,
	|	ОсновнаяТаблица.Период,
	|	ОсновнаяТаблица.ДокументПоставки,
	|	ОсновнаяТаблица.НомерСтроки КАК НомерСтроки,
	|	ОсновнаяТаблица.ДолгДокументаОтгрузки,
	|	ОсновнаяТаблица.ПредоплатаДокументаОтгрузки,
	|	ОсновнаяТаблица.КВозвратуАбсолютноеЗначение,
	|	ОсновнаяТаблица.КВозвратуДокументаОтгрузки,
	|	ОсновнаяТаблица.ДокументПоставкиЕстьВозврат,
	|	ОсновнаяТаблица.ПоЗаявкеНаВозврат,
	|	ОсновнаяТаблица.СпособКомпенсации
	|ИЗ
	|	ОсновнаяТаблица КАК ОсновнаяТаблица
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаМесяцев
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаПериодов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаНеплательщиков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НачальныеГраницыСУчетомРасчетныхДокументов";
				   

				   
	МассивДопустимыхТиповРегистратора = Новый Массив;
	МассивДопустимыхТиповРегистратора.Добавить(Тип("ДокументСсылка.АктВыполненныхРабот"));
	МассивДопустимыхТиповРегистратора.Добавить(Тип("ДокументСсылка.РеализацияУслугПрочихАктивов"));
	МассивДопустимыхТиповРегистратора.Добавить(Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями"));
	МассивДопустимыхТиповРегистратора.Добавить(Тип("ДокументСсылка.РеализацияТоваровУслуг"));
	МассивДопустимыхТиповРегистратора.Добавить(Тип("ДокументСсылка.ПриходныйКассовыйОрдер"));
	МассивДопустимыхТиповРегистратора.Добавить(Тип("ДокументСсылка.ПоступлениеБезналичныхДенежныхСредств"));
	МассивДопустимыхТиповРегистратора.Добавить(Тип("ДокументСсылка.РасходныйКассовыйОрдер"));
	МассивДопустимыхТиповРегистратора.Добавить(Тип("ДокументСсылка.СписаниеБезналичныхДенежныхСредств"));
	МассивДопустимыхТиповРегистратора.Добавить(Тип("ДокументСсылка.ВозвратТоваровОтКлиента"));
	МассивДопустимыхТиповРегистратора.Добавить(Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями"));
	МассивДопустимыхТиповРегистратора.Добавить(Тип("ДокументСсылка.ВзаимозачетЗадолженности"));
	МассивДопустимыхТиповРегистратора.Добавить(Тип("ДокументСсылка.ВводОстатков"));
	МассивДопустимыхТиповРегистратора.Добавить(Тип("ДокументСсылка.ОтчетКомитенту"));
	МассивДопустимыхТиповРегистратора.Добавить(Тип("ДокументСсылка.ОперацияПоПлатежнойКарте"));

	МассивОперацийВозврата = Новый Массив;
	МассивОперацийВозврата.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента);
	МассивОперацийВозврата.Добавить(Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями);
	МассивОперацийВозврата.Добавить(Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя);
	
	МассивОперацийВозвратаОплаты = Новый Массив;
	МассивОперацийВозвратаОплаты.Добавить(Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту);
	МассивОперацийВозвратаОплаты.Добавить(Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию);
	
	МассивДопустимыхТиповНДСНачальныеПериоды = Метаданные.РегистрыСведений.НДСНачальныеПериодыНОДляДокументовПоставки.Измерения.ДокументПоставки.Тип.Типы();
	
	Запрос.УстановитьПараметр("МассивДопустимыхТипов", МассивДопустимыхТиповРегистратора);
	Запрос.УстановитьПараметр("МассивОперацийВозврата", МассивОперацийВозврата); 
	Запрос.УстановитьПараметр("МассивОперацийВозвратаОплаты", МассивОперацийВозвратаОплаты);
	Запрос.УстановитьПараметр("РозничныйПокупатель", Справочники.Партнеры.РозничныйПокупатель);
	Запрос.УстановитьПараметр("МассивДопустимыхТиповНДСНачальныеПериоды", МассивДопустимыхТиповНДСНачальныеПериоды);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаПоРегистратору = РезультатЗапроса[6].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	НаборЗаписей = ДополнительныеСвойства.ТаблицыДляДвижений.НДСРасчетНалоговыхОбязательств;
	
	ЗаписьНабора = Неопределено;
	ЗаписьНабораВозвраты = Неопределено;
	
	МассивНедопустимыхДокументов = Новый Массив;
	МассивНедопустимыхДокументов.Добавить(Тип("ДокументСсылка.ОтчетКомиссионера"));
	МассивНедопустимыхДокументов.Добавить(Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями"));
	МассивНедопустимыхДокументов.Добавить(Тип("ДокументСсылка.ОтчетКомиссионераОСписании"));
	
	
	СтарыеАналитики = Новый Структура("ПредоплатаАбсолютноеЗначение, КВозвратуАбсолютноеЗначение, ДолгАбсолютноеЗначение
										|, ЭтоПервоеСобытие, ЭтоОтгрузка, ЭтоОплата, ЭтоВозврат, ЭтоВозвратОплаты, ЭтоРозничныйПокупатель, РасчетныйДокументВозвратОплаты, РасчетныйДокументВозврат");
										
	СтарыйРасчетныйДокумент = Неопределено;
	СтарыйСпособКомпенсацииПриВозврате = Неопределено;
	
	Пока ВыборкаПоРегистратору.Следующий() Цикл
		
		ВыборкаДокументов = ВыборкаПоРегистратору.Выбрать();
		
		ДополнитьДвиженияВзаимозачета = Ложь;
		Если ТипЗнч(ВыборкаПоРегистратору.Регистратор) = Тип("ДокументСсылка.ВзаимозачетЗадолженности") Тогда
			ВидОперацииВзаимозачета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыборкаПоРегистратору.Регистратор, "ВидОперации");
			Если ВидОперацииВзаимозачета = Перечисления.ВидыОперацийВзаимозачетаЗадолженности.Клиента
				Или ВидОперацииВзаимозачета = Перечисления.ВидыОперацийВзаимозачетаЗадолженности.МеждуКлиентами Тогда
				ДополнитьДвиженияВзаимозачета = Истина;
			КонецЕсли;
		КонецЕсли;
		
		МоментОпределенияБазы = Перечисления.МоментыОпределенияНалоговойБазы.ПоПервомуСобытию;
		
		СтарыйНомерСтроки = Неопределено;
		СтараяОбщаяСуммаСобытия = 0;
		СтараяОбщаяСуммаСобытияВозврат = 0;
		ОбщаяСуммаСобытия = 0;
		ОбщаяСуммаСобытияВозврат = 0;
		
		Пока ВыборкаДокументов.Следующий() Цикл
			
			Если (НЕ МассивНедопустимыхДокументов.Найти(ТипЗнч(ВыборкаДокументов.ОбъектРасчетов)) = Неопределено)
				ИЛИ (НЕ МассивНедопустимыхДокументов.Найти(ТипЗнч(ВыборкаДокументов.РасчетныйДокумент)) = Неопределено)
				ИЛИ (НЕ МассивНедопустимыхДокументов.Найти(ТипЗнч(ВыборкаДокументов.ДокументПоставки)) = Неопределено) Тогда
				Продолжить;
			КонецЕсли;
			
			Если ТипЗнч(ВыборкаДокументов.Регистратор) = Тип("ДокументСсылка.ВводОстатков") И ВыборкаДокументов.ЭтоОтгрузка Тогда
				Продолжить;
			КонецЕсли;
			
			Если (ВыборкаДокументов.ДолгАбсолютноеЗначение <> 0 И ВыборкаДокументов.ПредоплатаАбсолютноеЗначение <> 0) Тогда
				// Ошибка
				Продолжить;
			КонецЕсли;
			
			Если ((ВыборкаДокументов.КВозвратуАбсолютноеЗначение <> 0 И ВыборкаДокументов.ПредоплатаАбсолютноеЗначение = 0 И ВыборкаДокументов.ДолгАбсолютноеЗначение = 0) И НЕ ВыборкаДокументов.ЭтоВозврат) 
				ИЛИ (ВыборкаДокументов.ДолгАбсолютноеЗначение < 0 И НЕ ВыборкаДокументов.ЭтоВозвратОплаты И Не ДополнитьДвиженияВзаимозачета) Тогда
				Продолжить;
			КонецЕсли;
			
			Если (ВыборкаДокументов.ЭтоВозвратОплаты) И (ВыборкаДокументов.ПредоплатаАбсолютноеЗначение <> 0) И (ВыборкаДокументов.РасчетныйДокументВозврат) 
				И (НЕ ВыборкаДокументов.ЭтоРозничныйПокупатель ИЛИ ВыборкаДокументов.ПоЗаявкеНаВозврат) Тогда
				ЭтоСхемаВозврата = Ложь;
			Иначе
				ЭтоСхемаВозврата = ((ВыборкаДокументов.ДокументПоставки <> Неопределено) И ВыборкаДокументов.ДокументПоставкиЕстьВозврат);
			КонецЕсли;

			Если ВыборкаДокументов.ЭтоВозвратОплаты 
				И ВыборкаДокументов.СпособКомпенсации = Перечисления.СпособыКомпенсацииВозвратовТоваров.ВернутьДенежныеСредства Тогда
				
				Продолжить;
			КонецЕсли;

			Если ВыборкаДокументов.НомерСтроки <> СтарыйНомерСтроки Тогда
				
				Если НЕ СтарыйНомерСтроки = Неопределено Тогда
					
					Если ОбщаяСуммаСобытия < СтараяОбщаяСуммаСобытия Тогда
						
						ФормироватьДвижение = ФормироватьДополнительныеДвижения(ЗаписьНабора.Регистратор, ЗаписьНабора.ВидПоставки, СтарыйСпособКомпенсацииПриВозврате); 
			
						Если ФормироватьДвижение Тогда
						
							ЗаписьНабораНовая = НаборЗаписей.Добавить();
							// Заполним измерения
							ЗаполнитьИзмеренияРегистраВозникшегоНДС(ЗаписьНабораНовая, ЗаписьНабора.АналитикаУчетаПоПартнерам
																				, ЗаписьНабора.ОбъектРасчетов
																				, ЗаписьНабора.Регистратор
																				, ЗаписьНабора.Период
																				, Перечисления.ВидыПоставки.Поставка
																				, Неопределено
																				, ЗаписьНабора.МоментОпределенияБазыНДС
																				, ЗаписьНабора.Валюта);
							
							ЗаполнитьСобытиеПоИсходящемуНДС(МоментОпределенияБазы, СтарыеАналитики, СтараяОбщаяСуммаСобытия - ОбщаяСуммаСобытия
															, ЗаписьНабораНовая.СуммаПоставкиТребующаяРегистрацииНН
															, ЗаписьНабораНовая.СуммаПоставкиНЕТребующаяРегистрацииНН
															, Ложь);
															
						КонецЕсли;
					КонецЕсли;
					ОбщаяСуммаСобытия = 0;
					
					Если ОбщаяСуммаСобытияВозврат < СтараяОбщаяСуммаСобытияВозврат Тогда
			
						ЗаписьНабораНовая = НаборЗаписей.Добавить();
						// Заполним измерения
						ЗаполнитьИзмеренияРегистраВозникшегоНДС(ЗаписьНабораНовая, ЗаписьНабора.АналитикаУчетаПоПартнерам
																			, ЗаписьНабора.ОбъектРасчетов
																			, ЗаписьНабора.Регистратор
																			, ?(ДополнитьДвиженияВзаимозачета, СтарыйРасчетныйДокумент.Дата, ЗаписьНабора.Период)
																			, Перечисления.ВидыПоставки.Возврат
																			, Неопределено
																			, ЗаписьНабора.МоментОпределенияБазыНДС
																			, ЗаписьНабора.Валюта);
																			
						ЗаполнитьСобытиеПоИсходящемуНДС(МоментОпределенияБазы, СтарыеАналитики, СтараяОбщаяСуммаСобытияВозврат - ОбщаяСуммаСобытияВозврат
														, ЗаписьНабораНовая.СуммаПоставкиТребующаяРегистрацииНН
														, ЗаписьНабораНовая.СуммаПоставкиНЕТребующаяРегистрацииНН
														, Истина);
																			
					КонецЕсли;
					ОбщаяСуммаСобытияВозврат = 0;
					
				КонецЕсли;
				
				
				Если ТипЗнч(ВыборкаДокументов.ОбъектРасчетов) = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями")
					ИЛИ ТипЗнч(ВыборкаДокументов.ОбъектРасчетов) = Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями")
					ИЛИ ТипЗнч(ВыборкаДокументов.ОбъектРасчетов) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
					Договор = Неопределено;
				ИначеЕсли ТипЗнч(ВыборкаДокументов.ОбъектРасчетов) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
					Договор = ВыборкаДокументов.ОбъектРасчетов;
				ИначеЕсли ЗначениеЗаполнено(ВыборкаДокументов.ОбъектРасчетов) Тогда
					Договор = ВыборкаДокументов.ОбъектРасчетов.Договор;
				Иначе
					//Объект расчетов пока пустой
					Договор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
				КонецЕсли;

				МоментОпределенияБазы = ОпределитьМоментОпределенияБазыНДС(
					?(ЭтоСхемаВозврата, Перечисления.ВидыПоставки.Возврат, Перечисления.ВидыПоставки.Поставка), 
					ВыборкаДокументов.ХозяйственнаяОперация,					
					ВыборкаДокументов.Валюта, 
					ВыборкаДокументов.Организация, 
					Договор
				);
				
                Если (ВыборкаДокументов.ЭтоВозврат ИЛИ ВыборкаДокументов.ЭтоВозвратОплаты) 
						И ( (ВыборкаДокументов.ЭтоРозничныйПокупатель И (НЕ ВыборкаДокументов.ПоЗаявкеНаВозврат))
							ИЛИ (МоментОпределенияБазы = Перечисления.МоментыОпределенияНалоговойБазы.ПоПервомуСобытию 
									И (ВыборкаДокументов.РасчетныйДокументВозвратОплаты ИЛИ ВыборкаДокументов.КВозвратуАбсолютноеЗначение <> 0)) )Тогда
					СтараяОбщаяСуммаСобытия = 0;
				Иначе
					СтараяОбщаяСуммаСобытия = ПолучитьСуммуСобытия(ВыборкаДокументов);
				КонецЕсли;
				
				Если ВыборкаДокументов.ЭтоВозврат ИЛИ ВыборкаДокументов.ЭтоВозвратОплаты Тогда
					СтараяОбщаяСуммаСобытияВозврат = ПолучитьСуммуСобытия(ВыборкаДокументов);
				КонецЕсли;
				
				СтарыйНомерСтроки = ВыборкаДокументов.НомерСтроки;
				ЗаполнитьЗначенияСвойств(СтарыеАналитики, ВыборкаДокументов);
				СтарыйРасчетныйДокумент = ВыборкаДокументов.РасчетныйДокумент;
				СтарыйСпособКомпенсацииПриВозврате = ВыборкаДокументов.СпособКомпенсации;
				
			КонецЕсли;
			
			Период = ВыборкаДокументов.Период;
			Если (ДополнитьДвиженияВзаимозачета 
					И ВыборкаДокументов.ЭтоВозвратОплаты 
					И МоментОпределенияБазы = Перечисления.МоментыОпределенияНалоговойБазы.ПоОтгрузке) Тогда
				
				Период = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыборкаДокументов.РасчетныйДокумент, "Дата");	
			КонецЕсли;
			
			ЗаписьНабора = НаборЗаписей.Добавить();
			// Заполним измерения
			ЗаполнитьИзмеренияРегистраВозникшегоНДС(ЗаписьНабора, ВыборкаДокументов.АналитикаУчетаПоПартнерам
																, ВыборкаДокументов.ОбъектРасчетов
																, ВыборкаДокументов.Регистратор
																, Период
																, ?(ЭтоСхемаВозврата, Перечисления.ВидыПоставки.Возврат, Перечисления.ВидыПоставки.Поставка)
																, ВыборкаДокументов.ДокументПоставки
																, МоментОпределенияБазы
																, ВыборкаДокументов.Валюта);
			
																
			Если ДополнитьДвиженияВзаимозачета
				И ВыборкаДокументов.ЭтоОплата
				И Не ВыборкаДокументов.ЭтоВозвратОплаты
			    И ВыборкаДокументов.Регистратор = ВыборкаДокументов.РасчетныйДокумент
				И ВыборкаДокументов.ПредоплатаАбсолютноеЗначение > 0
				И Не ЗначениеЗаполнено(ВыборкаДокументов.ДокументПоставки) Тогда
				Если НаборЗаписей.Колонки.Найти("ЭтоОтгрузкаБезДокументаПоставки") = Неопределено Тогда
					НаборЗаписей.Колонки.Добавить("ЭтоОтгрузкаБезДокументаПоставки", Новый ОписаниеТипов("Булево"));
				КонецЕсли;
				ЗаписьНабора.ЭтоОтгрузкаБезДокументаПоставки = Истина;
			КонецЕсли;
																
			Если ВыборкаДокументов.ДокументПоставки = Неопределено Тогда
                СуммаСобытия = СтараяОбщаяСуммаСобытия - ОбщаяСуммаСобытия;
			Иначе
				СуммаСобытия = ПолучитьСуммуСобытия(ВыборкаДокументов, Истина);
			КонецЕсли;
			
			Если ЭтоСхемаВозврата Тогда
				Если СуммаСобытия > СтараяОбщаяСуммаСобытияВозврат Тогда
					СуммаСобытия = СтараяОбщаяСуммаСобытияВозврат;
				КонецЕсли;
				ОбщаяСуммаСобытияВозврат = ОбщаяСуммаСобытияВозврат + СуммаСобытия;
			Иначе
				Если СуммаСобытия > СтараяОбщаяСуммаСобытия Тогда
					СуммаСобытия = СтараяОбщаяСуммаСобытия;
				КонецЕсли;
				ОбщаяСуммаСобытия = ОбщаяСуммаСобытия + СуммаСобытия;
			КонецЕсли;
			
			Если ВыборкаДокументов.ЭтоВозвратОплаты Тогда
				СуммаСобытия = ?(СуммаСобытия < 0, -СуммаСобытия, СуммаСобытия);
			КонецЕсли;
			
			ЗаполнитьСобытиеПоИсходящемуНДС(МоментОпределенияБазы, ВыборкаДокументов, СуммаСобытия
											, ЗаписьНабора.СуммаПоставкиТребующаяРегистрацииНН
											, ЗаписьНабора.СуммаПоставкиНЕТребующаяРегистрацииНН
											, ЭтоСхемаВозврата);
			
			
			//	ДополнительныеСвойства.ТаблицыДляДвижений.НДСРасчетНалоговыхОбязательств.Свернуть(
			//	" Период
			//	|,Регистратор
			//	|,Активность
			//	|,ВидДвижения
			//	|,МоментВремени
			//	|,АналитикаУчетаПоПартнерам
			//	|,ЗаказКлиента
			//	|,РасчетныйДокумент
			//	|,Валюта
			//	|,ДатаПлатежа
			//	|,ХозяйственнаяОперация
			//	|",
			//	" КОтгрузке
			//	|,КОплате
			//	|,КВозврату
			//	|,Долг
			//	|,Предоплата
			//);
			
		КонецЦикла;
		
		
		Если ОбщаяСуммаСобытия < СтараяОбщаяСуммаСобытия Тогда
			
			ФормироватьДвижение = ФормироватьДополнительныеДвижения(ЗаписьНабора.Регистратор, ЗаписьНабора.ВидПоставки, СтарыйСпособКомпенсацииПриВозврате);
			
			Если ФормироватьДвижение Тогда
			
				ЗаписьНабораНовая = НаборЗаписей.Добавить();
				// Заполним измерения
				ЗаполнитьИзмеренияРегистраВозникшегоНДС(ЗаписьНабораНовая, ЗаписьНабора.АналитикаУчетаПоПартнерам
																	, ЗаписьНабора.ОбъектРасчетов
																	, ЗаписьНабора.Регистратор
																	, ЗаписьНабора.Период
																	, Перечисления.ВидыПоставки.Поставка
																	, Неопределено
																	, ЗаписьНабора.МоментОпределенияБазыНДС
																	, ЗаписьНабора.Валюта);
																	
				ЗаполнитьСобытиеПоИсходящемуНДС(МоментОпределенияБазы, СтарыеАналитики, СтараяОбщаяСуммаСобытия - ОбщаяСуммаСобытия
												, ЗаписьНабораНовая.СуммаПоставкиТребующаяРегистрацииНН
												, ЗаписьНабораНовая.СуммаПоставкиНЕТребующаяРегистрацииНН
												, Ложь);
												
			КонецЕсли;
		КонецЕсли;
		
		Если ОбщаяСуммаСобытияВозврат < СтараяОбщаяСуммаСобытияВозврат Тогда
			
			ЗаписьНабораНовая = НаборЗаписей.Добавить();
			// Заполним измерения
			ЗаполнитьИзмеренияРегистраВозникшегоНДС(ЗаписьНабораНовая, ЗаписьНабора.АналитикаУчетаПоПартнерам
																, ЗаписьНабора.ОбъектРасчетов
																, ЗаписьНабора.Регистратор
																, ?(ДополнитьДвиженияВзаимозачета, СтарыйРасчетныйДокумент.Дата, ЗаписьНабора.Период)
																, Перечисления.ВидыПоставки.Возврат
																, Неопределено
																, ЗаписьНабора.МоментОпределенияБазыНДС
																, ЗаписьНабора.Валюта);
																
			ЗаполнитьСобытиеПоИсходящемуНДС(МоментОпределенияБазы, СтарыеАналитики, СтараяОбщаяСуммаСобытияВозврат - ОбщаяСуммаСобытияВозврат
											, ЗаписьНабораНовая.СуммаПоставкиТребующаяРегистрацииНН
											, ЗаписьНабораНовая.СуммаПоставкиНЕТребующаяРегистрацииНН
											, Истина);
																
		КонецЕсли;

		
		Движения.НДСРасчетНалоговыхОбязательств.Отбор.Регистратор.Установить(ВыборкаПоРегистратору.Регистратор);
		
		Если Не ЗначениеЗаполнено(Движения.НДСРасчетНалоговыхОбязательств.Отбор.Регистратор.Значение) Тогда
			ВызватьИсключение "Не удалось установить документ регистратор "+ВыборкаПоРегистратору.Регистратор+" для проведения по регистру НДСРасчетНалоговыхОбязательств";
		КонецЕсли;
		
		Для каждого ЗаписьИзНабора из НаборЗаписей.НайтиСтроки(Новый Структура("СуммаПоставкиТребующаяРегистрацииНН, СуммаПоставкиНеТребующаяРегистрацииНН", 0, 0)) Цикл
			НаборЗаписей.Удалить(ЗаписьИзНабора);
		КонецЦикла;

		Если ДополнитьДвиженияВзаимозачета Тогда
			ДополнитьДвиженияВзаимозачета(НаборЗаписей);
		КонецЕсли;
		
		// Это можно удалить. Движения можно писать напрямую в Движения
		Движения.НДСРасчетНалоговыхОбязательств.Загрузить(ДополнительныеСвойства.ТаблицыДляДвижений.НДСРасчетНалоговыхОбязательств);
		
		// Запишем наборы записей в базу.
		ЗаписатьНаборыЗаписей(Движения, Истина);
		
		НаборЗаписей.Очистить();
		
	КонецЦикла;
	
	
	ВыборкаПоДокументамОтгрузки = РезультатЗапроса[5].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	
	Пока ВыборкаПоДокументамОтгрузки.Следующий() Цикл
		
		Менеджер = РегистрыСведений.НДСНачальныеПериодыНОДляДокументовПоставки.СоздатьМенеджерЗаписи();
				
		Менеджер.ДокументПоставки = ВыборкаПоДокументамОтгрузки.ДокументПоставки;
		
		Если ВыборкаПоДокументамОтгрузки.Удалить Тогда
			
			Менеджер.Удалить();
			
		Иначе
			
			Менеджер.Дата = ВыборкаПоДокументамОтгрузки.Период;
			Менеджер.АналитикаУчетаПоПартнерам = ВыборкаПоДокументамОтгрузки.АналитикаУчетаПоПартнерам;
			
			Менеджер.Записать();
			
		КонецЕсли;
		
	КонецЦикла;
	
	ОбновитьГраницыРасчетовНалоговыхОбязательствДополнительно(МенеджерВременныхТаблиц, НомерЗадания);
	
		
	// Запишем наборы записей в базу.
	ЗаписатьНаборыЗаписей(Движения);
		
	НаборЗаписей.Очистить();
	
	
	
КонецПроцедуры // ВыполнитьПроведениеДокументовПоВозникшемуНДС

Функция СформироватьВременнуюТаблицуНачальныхГраниц(НачальныеГраницы, НомерЗадания = 0)
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачальныеГраницыБаза", НачальныеГраницы);
	Запрос.УстановитьПараметр("НомерЗадания",         НомерЗадания);
	Запрос.УстановитьПараметр("НеУчитыватьНомерЗадания", НомерЗадания = 0);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НачальныеГраницыБаза.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	НачальныеГраницыБаза.Период КАК Период
	|ПОМЕСТИТЬ НачальныеГраницыОснова
	|ИЗ
	|	&НачальныеГраницыБаза КАК НачальныеГраницыБаза
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Задания.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	МИНИМУМ(Задания.День) КАК Период
	|ПОМЕСТИТЬ НачальныеГраницыДополнительно
	|ИЗ
	|	РегистрСведений.ЗаданияКРасчетуНалоговыхОбязательствДополнительно КАК Задания
	|ГДЕ
	|	Задания.НомерЗадания <= &НомерЗадания
	|			ИЛИ &НеУчитыватьНомерЗадания
	|СГРУППИРОВАТЬ ПО Задания.АналитикаУчетаПоПартнерам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НачальныеГраницыОснова.АналитикаУчетаПоПартнерам ЕСТЬ NULL 
	|			ТОГДА НачальныеГраницыДополнительно.АналитикаУчетаПоПартнерам
	|		ИНАЧЕ НачальныеГраницыОснова.АналитикаУчетаПоПартнерам
	|	КОНЕЦ КАК АналитикаУчетаПоПартнерам,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА НачальныеГраницыОснова.АналитикаУчетаПоПартнерам ЕСТЬ NULL 
	|				ТОГДА НачальныеГраницыДополнительно.Период
	|			ИНАЧЕ НачальныеГраницыОснова.Период
	|		КОНЕЦ) КАК Период
	|ПОМЕСТИТЬ НачальныеГраницы
	|ИЗ
	|	НачальныеГраницыОснова КАК НачальныеГраницыОснова
	|		ПОЛНОЕ СОЕДИНЕНИЕ НачальныеГраницыДополнительно КАК НачальныеГраницыДополнительно
	|		ПО НачальныеГраницыОснова.АналитикаУчетаПоПартнерам = НачальныеГраницыДополнительно.АналитикаУчетаПоПартнерам
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА НачальныеГраницыОснова.АналитикаУчетаПоПартнерам ЕСТЬ NULL 
	|			ТОГДА НачальныеГраницыДополнительно.АналитикаУчетаПоПартнерам
	|		ИНАЧЕ НачальныеГраницыОснова.АналитикаУчетаПоПартнерам
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НачальныеГраницыОснова
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НачальныеГраницыДополнительно";
	
	Запрос.Выполнить();
	
	Возврат МенеджерВременныхТаблиц;
	
КонецФункции

Процедура ОбновитьГраницыРасчетовНалоговыхОбязательствДополнительно(МенеджерВременныхТаблицНачальныеГраницы, НомерЗадания)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИмяРегистраЗаданий = "ЗаданияКРасчетуНалоговыхОбязательствДополнительно";
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.День,
	|	ДД.НомерЗадания,
	|	ДД.АналитикаУчетаПоПартнерам,
	|	ДД.Документ
	|ПОМЕСТИТЬ КэшГраниц
	|ИЗ
	|	ИмяРегистраЗаданий КАК ДД
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачальныеГраницы КАК НачальныеГраницы
	|		ПО ДД.АналитикаУчетаПоПартнерам = НачальныеГраницы.АналитикаУчетаПоПартнерам
	|ГДЕ
	|	ДД.День >= НачальныеГраницы.Период
	|	И ДД.НомерЗадания <= &НомерЗадания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// По рассчитанным аналитикам удаляются старые движения в заданиях
	|ВЫБРАТЬ
	|	Задания.День,
	|	Задания.НомерЗадания,
	|	Задания.АналитикаУчетаПоПартнерам,
	|	Задания.Документ
	|ИЗ
	|	КэшГраниц КАК Задания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ КэшГраниц";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяРегистраЗаданий", "РегистрСведений." + ИмяРегистраЗаданий);
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблицНачальныеГраницы;
	Запрос.УстановитьПараметр("НомерЗадания", НомерЗадания);
	Результаты = Запрос.ВыполнитьПакет();
	
	// Очищаются движения по рассчитанным аналитикам
	Выборка = Результаты[1].Выбрать();
	Пока Выборка.Следующий() Цикл
		Набор = РегистрыСведений[ИмяРегистраЗаданий].СоздатьНаборЗаписей();
		Набор.Отбор.День.Установить(Выборка.День);
		Набор.Отбор.НомерЗадания.Установить(Выборка.НомерЗадания);
		Набор.Отбор.АналитикаУчетаПоПартнерам.Установить(Выборка.АналитикаУчетаПоПартнерам);
		Набор.Отбор.Документ.Установить(Выборка.Документ);
		Набор.Записать(); // Очистили рассчитанные аналитики в прошлом периоде
	КонецЦикла;
	
КонецПроцедуры

Процедура ДополнитьДвиженияВзаимозачета(НаборЗаписей)

	НаборПлатежей = Новый Массив;
	НаборОтгрузок = Новый Массив;
	МассивНовыхОтгрузок = Новый Массив;
	
	МассивСтрокКУдалению = Новый Массив;
	МассивСтрокКПреобразованиюПоОтгрузке = Новый Массив;
	МассивСтрокКПреобразованиюПоОплатеИПервомуСобытию = Новый Массив;
	ЕстьОплаты = Ложь;
	
	Для каждого Строка Из НаборЗаписей Цикл
		Если Строка.ВидПоставки = Перечисления.ВидыПоставки.Возврат Тогда
			НаборПлатежей.Добавить(Строка);
			ЕстьОплаты = Истина;
			Если Строка.МоментОпределенияБазыНДС <> Перечисления.МоментыОпределенияНалоговойБазы.ПоОтгрузке Тогда
				// Необходимо удалить изначальные строки движений из которых формировались оплаты
				СтруктураПоиска = Новый Структура("АналитикаУчетаПоПартнерам,ОбъектРасчетов,ВидПоставки,Валюта,ДокументПоставки,МоментОпределенияБазыНДС");
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, Строка);
				СтруктураПоиска.ВидПоставки = Перечисления.ВидыПоставки.Поставка;
				
				МассивИсходныхСтрокПлатежей = НаборЗаписей.НайтиСтроки(СтруктураПоиска);
				
				ИндексЭтойСтроки = НаборЗаписей.Индекс(Строка);
				Если ИндексЭтойСтроки > 0 Тогда
					// Необходимо удалить изначальную строку из которой сформирован это возврат оплаты, она идет предыдущей к этой строке оплаты	
					СтрокаКУдалению = НаборЗаписей[ИндексЭтойСтроки-1];
					ИндексСтрокиКУдалению = МассивИсходныхСтрокПлатежей.Найти(СтрокаКУдалению);
					Если ИндексСтрокиКУдалению <> Неопределено Тогда
						МассивИсходныхСтрокПлатежей.Удалить(ИндексСтрокиКУдалению);
						
						Если МассивСтрокКУдалению.Найти(СтрокаКУдалению) = Неопределено Тогда
							МассивСтрокКУдалению.Добавить(СтрокаКУдалению);	
						КонецЕсли;
						
						Индекс = МассивСтрокКПреобразованиюПоОплатеИПервомуСобытию.Найти(СтрокаКУдалению);
						Если Индекс <> Неопределено Тогда
							МассивСтрокКПреобразованиюПоОплатеИПервомуСобытию.Удалить(Индекс);
						КонецЕсли;
					КонецЕсли;
				КонецЕсли; 
				
				// Оставшиеся строки или будут удалены в следующем проходе или это документы оплаты, дата которых больше даты документа
				// взаимозачета и их необходимо преобразовать
				Для каждого ИсходнаяСтрокаПлатежа Из МассивИсходныхСтрокПлатежей Цикл
					Если ИсходнаяСтрокаПлатежа.СуммаПоставкиТребующаяРегистрацииНН <> 0 Тогда
						
						Если Строка.МоментОпределенияБазыНДС = Перечисления.МоментыОпределенияНалоговойБазы.ПоОплате Тогда
							ИсходнаяСтрокаПлатежа.СуммаПоставкиТребующаяРегистрацииНН = -ИсходнаяСтрокаПлатежа.СуммаПоставкиТребующаяРегистрацииНН;		
						Иначе
							ИсходнаяСтрокаПлатежа.СуммаПоставкиНеТребующаяРегистрацииНН = -ИсходнаяСтрокаПлатежа.СуммаПоставкиТребующаяРегистрацииНН;
							ИсходнаяСтрокаПлатежа.СуммаПоставкиТребующаяРегистрацииНН = 0;	
						КонецЕсли;
						
						Индекс = МассивСтрокКПреобразованиюПоОплатеИПервомуСобытию.Найти(ИсходнаяСтрокаПлатежа);
						Если Индекс <> Неопределено Тогда
							МассивСтрокКПреобразованиюПоОплатеИПервомуСобытию.Удалить(Индекс);
						КонецЕсли;	
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		ИначеЕсли Строка.ВидПоставки = Перечисления.ВидыПоставки.Поставка И ЗначениеЗаполнено(Строка.ДокументПоставки) Тогда
			НаборОтгрузок.Добавить(Строка);
		ИначеЕсли Строка.МоментОпределенияБазыНДС <> Перечисления.МоментыОпределенияНалоговойБазы.ПоОтгрузке
			И Строка.СуммаПоставкиТребующаяРегистрацииНН <> 0 Тогда
		    МассивСтрокКПреобразованиюПоОплатеИПервомуСобытию.Добавить(Строка);
		ИначеЕсли Строка.МоментОпределенияБазыНДС = Перечисления.МоментыОпределенияНалоговойБазы.ПоОтгрузке Тогда
			МассивСтрокКПреобразованиюПоОтгрузке.Добавить(Строка);
		Иначе
			Если МассивСтрокКУдалению.Найти(Строка) = Неопределено Тогда
				МассивСтрокКУдалению.Добавить(Строка);	
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
		
	Для каждого СтрокаКУдалению Из МассивСтрокКУдалению Цикл
		НаборЗаписей.Удалить(СтрокаКУдалению);
	КонецЦикла;
	
	МассивСтрокКУдалению.Очистить();
	
	Если Не ЕстьОплаты И МассивСтрокКПреобразованиюПоОплатеИПервомуСобытию.Количество() > 0 Тогда
		
	    Для каждого СтрокаКПреобразованию Из МассивСтрокКПреобразованиюПоОплатеИПервомуСобытию Цикл		
			Если СтрокаКПреобразованию.СуммаПоставкиТребующаяРегистрацииНН <> 0 Тогда
				
				Если НаборЗаписей.Колонки.Найти("ЭтоОтгрузкаБезДокументаПоставки") <> Неопределено И
					СтрокаКПреобразованию.ЭтоОтгрузкаБезДокументаПоставки Тогда
					Продолжить;
				КонецЕсли;
				
				Если СтрокаКПреобразованию.МоментОпределенияБазыНДС = Перечисления.МоментыОпределенияНалоговойБазы.ПоОплате Тогда
					СтрокаКПреобразованию.СуммаПоставкиТребующаяРегистрацииНН = -СтрокаКПреобразованию.СуммаПоставкиТребующаяРегистрацииНН;		
				Иначе
					СтрокаКПреобразованию.СуммаПоставкиНеТребующаяРегистрацииНН = -СтрокаКПреобразованию.СуммаПоставкиТребующаяРегистрацииНН;
					СтрокаКПреобразованию.СуммаПоставкиТребующаяРегистрацииНН = 0;	
				КонецЕсли;
				
				МассивСтрокКУдалению.Добавить(СтрокаКПреобразованию);	
			КонецЕсли;	
		КонецЦикла;
		
		Для каждого СтрокаКУдалению Из МассивСтрокКУдалению Цикл
			Индекс = МассивСтрокКПреобразованиюПоОплатеИПервомуСобытию.Найти(СтрокаКУдалению);
			Если Индекс <> Неопределено Тогда
				МассивСтрокКПреобразованиюПоОплатеИПервомуСобытию.Удалить(Индекс);
			КонецЕсли;
		КонецЦикла;
		
		МассивСтрокКУдалению.Очистить();
	КонецЕсли; 
	
	// Можно подставить строки к преобразованию по оплате и первому событию к алгоритму, который применяется к строкам по отгрузке (с указанным документом поставки)
	Для каждого СтрокаКПреобразованию Из МассивСтрокКПреобразованиюПоОплатеИПервомуСобытию Цикл
		НаборОтгрузок.Добавить(СтрокаКПреобразованию);
	КонецЦикла;

	Для каждого СтрокаОтгрузки Из НаборОтгрузок Цикл
		
		Если СтрокаОтгрузки.МоментОпределенияБазыНДС = Перечисления.МоментыОпределенияНалоговойБазы.ПоОтгрузке Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрокаОтгрузки.СуммаПоставкиНеТребующаяРегистрацииНН = 0 Тогда
		
			НовыйМассив = Новый Массив;
			НовыйМассив.Добавить(СтрокаОтгрузки);
			НовыйМассив.Добавить(СтрокаОтгрузки.СуммаПоставкиТребующаяРегистрацииНН);
			
			МассивНовыхОтгрузок.Добавить(НовыйМассив);
			
			МассивСтрокКУдалению.Добавить(СтрокаОтгрузки);
			
		Иначе
		
			НоваяСтрока = НаборЗаписей.Добавить();
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОтгрузки);
			НоваяСтрока.СуммаПоставкиТребующаяРегистрацииНН = - СтрокаОтгрузки.СуммаПоставкиНеТребующаяРегистрацииНН;
			НоваяСтрока.СуммаПоставкиНеТребующаяРегистрацииНН = 0;
			
			НоваяСтрока.Период = НоваяСтрока.ДокументПоставки.Дата;
			
			НовыйМассив = Новый Массив;
			НовыйМассив.Добавить(НоваяСтрока);
			НовыйМассив.Добавить(СтрокаОтгрузки.СуммаПоставкиНеТребующаяРегистрацииНН);
			
			МассивНовыхОтгрузок.Добавить(НовыйМассив);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого СтрокаПлатежа Из НаборПлатежей Цикл
		
		СуммаКРаспределению = СтрокаПлатежа.СуммаПоставкиТребующаяРегистрацииНН;
		
		Для каждого СтрокаОтгрузкиКРаспределению Из МассивНовыхОтгрузок Цикл
			
			Если СтрокаОтгрузкиКРаспределению[1] = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = НаборЗаписей.Добавить();
			
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПлатежа);
			НоваяСтрока.ВидПоставки = Перечисления.ВидыПоставки.Поставка;
			
			НоваяСтрока.АналитикаУчетаПоПартнерам = СтрокаОтгрузкиКРаспределению[0].АналитикаУчетаПоПартнерам;
			
			Если НоваяСтрока.МоментОпределенияБазыНДС = Перечисления.МоментыОпределенияНалоговойБазы.ПоПервомуСобытию Тогда
				НоваяСтрока.Период = Мин(НоваяСтрока.Период, СтрокаОтгрузкиКРаспределению[0].Период);
			КонецЕсли;
			
			НоваяСтрока.ОбъектРасчетов = СтрокаОтгрузкиКРаспределению[0].ОбъектРасчетов;
			НоваяСтрока.ДокументПоставки = СтрокаОтгрузкиКРаспределению[0].ДокументПоставки;
			
			НоваяСтрока.СуммаПоставкиНеТребующаяРегистрацииНН = 0;
			
			Если СтрокаОтгрузкиКРаспределению[1] >= СуммаКРаспределению Тогда
				НоваяСтрока.СуммаПоставкиТребующаяРегистрацииНН = СуммаКРаспределению;
				СтрокаОтгрузкиКРаспределению[1] = СтрокаОтгрузкиКРаспределению[1] - СуммаКРаспределению;
				СуммаКРаспределению = 0;
				Прервать;
			ИначеЕсли СтрокаОтгрузкиКРаспределению[1] < СуммаКРаспределению Тогда
				НоваяСтрока.СуммаПоставкиТребующаяРегистрацииНН = СтрокаОтгрузкиКРаспределению[1];
				СуммаКРаспределению = СуммаКРаспределению - СтрокаОтгрузкиКРаспределению[1];
				СтрокаОтгрузкиКРаспределению[1] = 0;
			КонецЕсли;
			
		КонецЦикла;
		
		СтрокаПлатежа.ВидПоставки = Перечисления.ВидыПоставки.Поставка;
		СтрокаПлатежа.СуммаПоставкиТребующаяРегистрацииНН = - СтрокаПлатежа.СуммаПоставкиТребующаяРегистрацииНН;
		
	КонецЦикла;
	
	Для каждого СтрокаОтгрузкиКРаспределению Из МассивНовыхОтгрузок Цикл
			
		Если СтрокаОтгрузкиКРаспределению[1] = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаОтгрузки = СтрокаОтгрузкиКРаспределению[0]; 
		
		ИндексСтроки = МассивСтрокКУдалению.Найти(СтрокаОтгрузки);
		Если ИндексСтроки <> Неопределено Тогда
			СтрокаОтгрузки.СуммаПоставкиТребующаяРегистрацииНН = СтрокаОтгрузкиКРаспределению[1];
			МассивСтрокКУдалению.Удалить(ИндексСтроки);
		Иначе
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, СтрокаОтгрузки);
			НоваяЗапись.СуммаПоставкиТребующаяРегистрацииНН = СтрокаОтгрузкиКРаспределению[1];
			НоваяЗапись.СуммаПоставкиНеТребующаяРегистрацииНН = 0;
		КонецЕсли; 
		
	КонецЦикла;
	
	Для каждого СтрокаКУдалению Из МассивСтрокКУдалению Цикл
		НаборЗаписей.Удалить(СтрокаКУдалению);
	КонецЦикла;
	
	МассивСтрокКУдалению.Очистить();  
	
	// Из этих движений необходимо сделать сторно второго события из документа оплаты или второе события, если переносится на еще неотгруженные отгрузки
	Для каждого СтрокаКПреобразованию Из МассивСтрокКПреобразованиюПоОтгрузке Цикл
		Если НаборЗаписей.Колонки.Найти("ЭтоОтгрузкаБезДокументаПоставки") <> Неопределено
			И СтрокаКПреобразованию.ЭтоОтгрузкаБезДокументаПоставки Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаКПреобразованию.СуммаПоставкиНеТребующаяРегистрацииНН = -СтрокаКПреобразованию.СуммаПоставкиНеТребующаяРегистрацииНН;
	КонецЦикла;
	
	НаборЗаписей.Свернуть("Период,Регистратор,НомерСтроки,Активность,АналитикаУчетаПоПартнерам,ОбъектРасчетов,ВидПоставки,Валюта,ДокументПоставки,МоментОпределенияБазыНДС", "СуммаПоставкиТребующаяРегистрацииНН,СуммаПоставкиНеТребующаяРегистрацииНН");
	
	Для каждого ЗаписьИзНабора из НаборЗаписей.НайтиСтроки(Новый Структура("СуммаПоставкиТребующаяРегистрацииНН, СуммаПоставкиНеТребующаяРегистрацииНН", 0, 0)) Цикл
		НаборЗаписей.Удалить(ЗаписьИзНабора);
	КонецЦикла;

КонецПроцедуры

Функция ФормироватьДополнительныеДвижения(Регистратор, ВидПоставки, СпособКомпенсации)
	
	ФормироватьДвижение = Истина;
	
	// Если это возврат и СпособКомпенсации = ВернутьДенежныеСредства, то нет необходимости формировать движения на аванс
	Если ТипЗнч(Регистратор) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") 
		И ВидПоставки = Перечисления.ВидыПоставки.Возврат
		И СпособКомпенсации = Перечисления.СпособыКомпенсацииВозвратовТоваров.ВернутьДенежныеСредства Тогда
	
		ФормироватьДвижение = Ложь;	
	КонецЕсли;
	
	Возврат ФормироватьДвижение;
	
КонецФункции

#КонецОбласти

#Область УсловныеПродажи

Процедура СформироватьНалоговыеДокументыПоУсловнымПродажам(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Данные.Организация КАК Организация,
	|	Данные.Дата,
	|	Данные.Номенклатура,
	|	Данные.Характеристика,
	|	Данные.СтавкаНДС,
	|	Данные.НалоговоеНазначение,
	|	Данные.НалоговоеНазначениеПоФакту,
	|	Данные.ПредполагаемоеКоличество,
	|	Данные.Количество,
	|	Данные.ПредполагаемаяСтоимостьРегл,
	|	Данные.СтоимостьРегл,
	|	Данные.ПредполагаемыйНДСРегл,
	|	Данные.НДСРегл,
	|	Данные.ВидУсловнойПродажи КАК ВидУсловнойПродажи
	|ИЗ
	|	ДанныеФормирования КАК Данные
	|ГДЕ
	|	(Данные.ВидУсловнойПродажи = ЗНАЧЕНИЕ(Перечисление.ВидУсловнойПродажи.УсловнаяПродажа)
	|			ИЛИ Данные.ВидУсловнойПродажи = ЗНАЧЕНИЕ(Перечисление.ВидУсловнойПродажи.СводнаяУсловнаяПродажа)
	|			ИЛИ Данные.ВидУсловнойПродажи = ЗНАЧЕНИЕ(Перечисление.ВидУсловнойПродажи.УсловнаяПродажаНеоборотныхАктивов)
	|			ИЛИ Данные.ВидУсловнойПродажи = ЗНАЧЕНИЕ(Перечисление.ВидУсловнойПродажи.ВосстановлениеНДС))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидУсловнойПродажи,
	|	Организация,
	|	НалоговоеНазначениеПоФакту";
	
	ВыборкаУсловныхПродаж = Запрос.Выполнить().Выбрать();
	
	Организация = Неопределено;
	НалоговыйОбъект = Неопределено;
	ВидУсловнойПродажи = Перечисления.ВидУсловнойПродажи.УсловнаяПродажа;
	НалоговоеНазначениеПоФакту = Неопределено;
	
	Пока ВыборкаУсловныхПродаж.Следующий() Цикл
		
		Если (НЕ Организация = ВыборкаУсловныхПродаж.Организация)
			 ИЛИ (НЕ ВидУсловнойПродажи = ВыборкаУсловныхПродаж.ВидУсловнойПродажи)
			 ИЛИ (НЕ НалоговоеНазначениеПоФакту = ВыборкаУсловныхПродаж.НалоговоеНазначениеПоФакту)
			 ИЛИ (ВидУсловнойПродажи = Перечисления.ВидУсловнойПродажи.ВосстановлениеНДС) Тогда
			
			Если НЕ Организация = Неопределено Тогда
				//записать налоговую
				НалоговыйОбъект.ЗаполнитьРеквизитыПослеФормированияПоУсловнымПродажам();
				НалоговыйОбъект.Записать(РежимЗаписиДокумента.Проведение);
			КонецЕсли;
			
			//создать новую налоговую
			Если ВыборкаУсловныхПродаж.ВидУсловнойПродажи = Перечисления.ВидУсловнойПродажи.ВосстановлениеНДС Тогда
				НалоговыйОбъект = Документы.Приложение2КНалоговойНакладной.СоздатьДокумент();
				НалоговыйОбъект.ВидОперацииВозвратКорректировка = Перечисления.ВидыОперацийПриложений2КНалоговойНакладной.Возврат;
			Иначе
				НалоговыйОбъект = Документы.НалоговаяНакладная.СоздатьДокумент();
				НалоговыйОбъект.КодПризнакаСводной = ?(ВыборкаУсловныхПродаж.НалоговоеНазначениеПоФакту = 
					Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Пропорционально, 2, 1);
				НалоговыйОбъект.ТипПричиныНевыдачиПокупателю = ?(ВыборкаУсловныхПродаж.НалоговоеНазначениеПоФакту = 
					Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность, 13, 9);	
			КонецЕсли;
			
			НалоговыйОбъект.Организация = ВыборкаУсловныхПродаж.Организация;
			НалоговыйОбъект.Дата = ВыборкаУсловныхПродаж.Дата;
			Если ВыборкаУсловныхПродаж.ВидУсловнойПродажи = Перечисления.ВидУсловнойПродажи.СводнаяУсловнаяПродажа Тогда
				НалоговыйОбъект.ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.СводнаяУсловнаяПродажа;
			ИначеЕсли ВыборкаУсловныхПродаж.ВидУсловнойПродажи = Перечисления.ВидУсловнойПродажи.УсловнаяПродажаНеоборотныхАктивов Тогда
				НалоговыйОбъект.ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.УсловнаяПродажаНеоборотныхАктивов;
			Иначе
				НалоговыйОбъект.ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.УсловнаяПродажа;
			КонецЕсли;
			НалоговыйОбъект.Статус = Перечисления.СтатусыНалоговыхДокументов.КПроверке;
			
			Организация = ВыборкаУсловныхПродаж.Организация;
			ВидУсловнойПродажи = ВыборкаУсловныхПродаж.ВидУсловнойПродажи;
			НалоговоеНазначениеПоФакту = ВыборкаУсловныхПродаж.НалоговоеНазначениеПоФакту;
			
		КонецЕсли;
		
		//добавить строку ТЧ
		НоваяСтрока = НалоговыйОбъект.ТоварыПоДаннымПользователя.Добавить();
		
		НаправлениеДвижения = ?(ВидУсловнойПродажи = Перечисления.ВидУсловнойПродажи.ВосстановлениеНДС, -1, 1);
		
		Если ВидУсловнойПродажи = Перечисления.ВидУсловнойПродажи.СводнаяУсловнаяПродажа
			 ИЛИ ВидУсловнойПродажи = Перечисления.ВидУсловнойПродажи.УсловнаяПродажаНеоборотныхАктивов
			 ИЛИ (НЕ ТипЗнч(ВыборкаУсловныхПродаж.Номенклатура) = Тип("СправочникСсылка.Номенклатура")) Тогда
			НоваяСтрока.ОбъектЗаполненияСодержанияУсловнаяПродажа = ВыборкаУсловныхПродаж.Номенклатура;
		Иначе
			НоваяСтрока.Номенклатура = ВыборкаУсловныхПродаж.Номенклатура;
			НоваяСтрока.Характеристика = ВыборкаУсловныхПродаж.Характеристика;
		КонецЕсли;
		НоваяСтрока.СтавкаНДС = ВыборкаУсловныхПродаж.СтавкаНДС;
		НоваяСтрока.НалоговоеНазначение = ВыборкаУсловныхПродаж.НалоговоеНазначение;
		НоваяСтрока.НалоговоеНазначениеПоФактуУсловнаяПродажа = ВыборкаУсловныхПродаж.НалоговоеНазначениеПоФакту;
		НоваяСтрока.Количество = НаправлениеДвижения * (ВыборкаУсловныхПродаж.ПредполагаемоеКоличество - ВыборкаУсловныхПродаж.Количество);
		НоваяСтрока.СуммаНДСРеглПоРегиструУсловнаяПродажа = НаправлениеДвижения * (ВыборкаУсловныхПродаж.ПредполагаемыйНДСРегл - ВыборкаУсловныхПродаж.НДСРегл);
		НоваяСтрока.СуммаНДС = НаправлениеДвижения * (ВыборкаУсловныхПродаж.ПредполагаемыйНДСРегл - ВыборкаУсловныхПродаж.НДСРегл);
		НоваяСтрока.СуммаБезНДС = НаправлениеДвижения * (ВыборкаУсловныхПродаж.ПредполагаемаяСтоимостьРегл - ВыборкаУсловныхПродаж.СтоимостьРегл);
		
	КонецЦикла;
	
	//записать налоговую
	Если НЕ НалоговыйОбъект = Неопределено Тогда
		НалоговыйОбъект.ЗаполнитьРеквизитыПослеФормированияПоУсловнымПродажам();
		НалоговыйОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПодготовитьДанныеДляАнализаУсловныхПродаж(МенеджерВременныхТаблиц, СписокОрганизаций, ДатаПериода) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаНач",       		НачалоМесяца(ДатаПериода));
	Запрос.УстановитьПараметр("ДатаКон",    		КонецМесяца(ДатаПериода));
	Запрос.УстановитьПараметр("ДатаНачНеВключая",   Новый Граница(НачалоМесяца(ДатаПериода), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация",        СписокОрганизаций);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", НЕ ЗначениеЗаполнено(СписокОрганизаций));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.Организация
	|ПОМЕСТИТЬ ПлательщикиНДС
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(
	|			&ДатаКон,
	|			Организация В (&Организация)
	|				ИЛИ &ПоВсемОрганизациям) КАК УчетнаяПолитикаОрганизацийСрезПоследних
	|ГДЕ
	|	УчетнаяПолитикаОрганизацийСрезПоследних.ПлательщикНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатусыПлательщиковЕдиногоНалогаСрезПоследних.Организация,
	|	МИНИМУМ(СтатусыПлательщиковЕдиногоНалогаСрезПоследних.Период) КАК ПериодПереходаНаЕН2
	|ПОМЕСТИТЬ ПериодыПереходаНаЕН2
	|ИЗ
	|	РегистрСведений.СтатусыПлательщиковЕдиногоНалога КАК СтатусыПлательщиковЕдиногоНалога
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПлательщикиНДС КАК ПлательщикиНДС
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыПлательщиковЕдиногоНалога.СрезПоследних(&ДатаНачНеВключая, ) КАК СтатусыПлательщиковЕдиногоНалогаСрезПоследних
	|			ПО (СтатусыПлательщиковЕдиногоНалогаСрезПоследних.Организация = ПлательщикиНДС.Организация)
	|		ПО СтатусыПлательщиковЕдиногоНалога.Организация = ПлательщикиНДС.Организация
	|ГДЕ
	|	СтатусыПлательщиковЕдиногоНалога.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И СтатусыПлательщиковЕдиногоНалога.ПлательщикНДС
	|	И СтатусыПлательщиковЕдиногоНалогаСрезПоследних.ГруппаПлательщикаЕдиногоНалога = ЗНАЧЕНИЕ(Перечисление.ГруппыПлательщиковЕдиногоНалога.ТретьяГруппаОсобая)
	|
	|СГРУППИРОВАТЬ ПО
	|	СтатусыПлательщиковЕдиногоНалогаСрезПоследних.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПлательщикиНДС.Организация,
	|	ЕСТЬNULL(ПериодыПереходаНаЕН2.ПериодПереходаНаЕН2, &ДатаНач) КАК НачалоПериодаАнализаУсловныхПродаж,
	|	ВЫБОР
	|		КОГДА ПериодыПереходаНаЕН2.Организация ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК РасширенныйПериод
	|ПОМЕСТИТЬ ПериодыАнализаПродажПоОрганизациям
	|ИЗ
	|	ПлательщикиНДС КАК ПлательщикиНДС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодыПереходаНаЕН2 КАК ПериодыПереходаНаЕН2
	|		ПО ПлательщикиНДС.Организация = ПериодыПереходаНаЕН2.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПериодыАнализаПродажПоОрганизациям.Организация,
	|	ПериодыАнализаПродажПоОрганизациям.НачалоПериодаАнализаУсловныхПродаж КАК НачалоПериодаАнализаУсловныхПродаж
	|ИЗ
	|	ПериодыАнализаПродажПоОрганизациям КАК ПериодыАнализаПродажПоОрганизациям
	|ИТОГИ ПО
	|	НачалоПериодаАнализаУсловныхПродаж";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ШаблонЗапроса = 
	"ВЫБРАТЬ
	|	НДСУсловныеПродажиОбороты.Организация,
	|	ВЫБОР
	|		КОГДА НДСУсловныеПродажиОбороты.ВидУсловнойПродажи = ЗНАЧЕНИЕ(Перечисление.ВидУсловнойПродажи.ПредполагаемаяУсловнаяПродажа)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидУсловнойПродажи.УсловнаяПродажа)
	|		КОГДА НДСУсловныеПродажиОбороты.ВидУсловнойПродажи = ЗНАЧЕНИЕ(Перечисление.ВидУсловнойПродажи.ПредполагаемоеВосстановлениеНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидУсловнойПродажи.ВосстановлениеНДС)
	|		КОГДА НДСУсловныеПродажиОбороты.ВидУсловнойПродажи = ЗНАЧЕНИЕ(Перечисление.ВидУсловнойПродажи.ПредполагаемаяСводнаяУсловнаяПродажа)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидУсловнойПродажи.СводнаяУсловнаяПродажа)
	|		КОГДА НДСУсловныеПродажиОбороты.ВидУсловнойПродажи = ЗНАЧЕНИЕ(Перечисление.ВидУсловнойПродажи.ПредполагаемаяУсловнаяПродажаНеоборотныхАктивов)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидУсловнойПродажи.УсловнаяПродажаНеоборотныхАктивов)
	|		ИНАЧЕ НДСУсловныеПродажиОбороты.ВидУсловнойПродажи
	|	КОНЕЦ КАК ВидУсловнойПродажи,
	|	НДСУсловныеПродажиОбороты.Номенклатура,
	|	НДСУсловныеПродажиОбороты.Характеристика,
	|	НДСУсловныеПродажиОбороты.СтавкаНДС,
	|	НДСУсловныеПродажиОбороты.НалоговоеНазначение,
	|	НДСУсловныеПродажиОбороты.НалоговоеНазначениеПоФакту,
	|	НДСУсловныеПродажиОбороты.КоличествоОборот КАК Количество,
	|	НДСУсловныеПродажиОбороты.СтоимостьРеглОборот КАК СтоимостьРегл,
	|	НДСУсловныеПродажиОбороты.НДСРеглОборот КАК НДСРегл,
	|	НДСУсловныеПродажиОбороты.НДСРеглРучныеКорректировкиОборот КАК НДСРеглРучныеКорректировки,
	|	ВЫБОР
	|		КОГДА НДСУсловныеПродажиОбороты.ВидУсловнойПродажи В (ЗНАЧЕНИЕ(Перечисление.ВидУсловнойПродажи.ПредполагаемаяУсловнаяПродажа), ЗНАЧЕНИЕ(Перечисление.ВидУсловнойПродажи.ПредполагаемоеВосстановлениеНДС), ЗНАЧЕНИЕ(Перечисление.ВидУсловнойПродажи.ПредполагаемаяСводнаяУсловнаяПродажа), ЗНАЧЕНИЕ(Перечисление.ВидУсловнойПродажи.ПредполагаемаяУсловнаяПродажаНеоборотныхАктивов))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПредполагаемаяОперация
	|ИЗ
	|	РегистрНакопления.НДСУсловныеПродажи.Обороты(&ДатаНач_ИндексПериода, &ДатаКон_ИндексПериода, , Организация В (&МассивОрганизаций_ИндексПериода)) КАК НДСУсловныеПродажиОбороты";
	
	
	ТекстЗапросаПериоды = "";
	
	ИндексПериода = 1;
	ВыборкаПериод = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПериод.Следующий() Цикл
		
		МассивОрганизаций = Новый Массив;
		
		Выборка = ВыборкаПериод.Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивОрганизаций.Добавить(Выборка.Организация);
		КонецЦикла;
		
		
		Если НЕ ПустаяСтрока(ТекстЗапросаПериоды) Тогда
			ТекстЗапросаПериоды = ТекстЗапросаПериоды + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;
		
		ИндексПериодаСтрокой = Формат(ИндексПериода, "ЧГ=");		
		ТекстЗапросаПериоды = ТекстЗапросаПериоды + СтрЗаменить(ШаблонЗапроса, "ИндексПериода", ИндексПериодаСтрокой);
		Запрос.УстановитьПараметр("ДатаНач_" + ИндексПериодаСтрокой, ВыборкаПериод.НачалоПериодаАнализаУсловныхПродаж);
		Запрос.УстановитьПараметр("ДатаКон_" + ИндексПериодаСтрокой, КонецМесяца(ДатаПериода));
		Запрос.УстановитьПараметр("МассивОрганизаций_" + ИндексПериодаСтрокой, МассивОрганизаций);
		
		ИндексПериода = ИндексПериода + 1;
		
	КонецЦикла; 
	
	Если ПустаяСтрока(ТекстЗапросаПериоды) Тогда
		
		ТекстЗапросаПериоды = 
		"ВЫБРАТЬ ПЕРВЫЕ 0 
		|NULL КАК Организация,
		|NULL КАК ВидУсловнойПродажи,
		|NULL КАК Номенклатура,
		|NULL КАК Характеристика,
		|NULL КАК СтавкаНДС,
		|NULL КАК НалоговоеНазначение,
		|NULL КАК НалоговоеНазначениеПоФакту,
		|0 КАК Количество,
		|0 КАК СтоимостьРегл,
		|0 КАК НДСРегл,
		|0 КАК НДСРеглРучныеКорректировки,
		|ЛОЖЬ КАК ПредполагаемаяОперация";
		
	КонецЕсли;

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УсловныеПродажи.ВидУсловнойПродажи,
	|	ВЫБОР
	|		КОГДА НЕ СУММА(ВЫБОР КОГДА УсловныеПродажи.ПредполагаемаяОперация ТОГДА УсловныеПродажи.Количество ИНАЧЕ 0 КОНЕЦ) = СУММА(ВЫБОР КОГДА УсловныеПродажи.ПредполагаемаяОперация ТОГДА 0 ИНАЧЕ УсловныеПродажи.Количество КОНЕЦ)
	|			ТОГДА 4
	|		КОГДА НЕ СУММА(ВЫБОР КОГДА УсловныеПродажи.ПредполагаемаяОперация ТОГДА УсловныеПродажи.НДСРегл ИНАЧЕ 0 КОНЕЦ) = СУММА(ВЫБОР КОГДА УсловныеПродажи.ПредполагаемаяОперация ТОГДА 0 ИНАЧЕ УсловныеПродажи.НДСРегл КОНЕЦ)
	|			ТОГДА 3
	|		КОГДА НЕ СУММА(ВЫБОР КОГДА УсловныеПродажи.ПредполагаемаяОперация ТОГДА УсловныеПродажи.СтоимостьРегл ИНАЧЕ 0 КОНЕЦ) = СУММА(ВЫБОР КОГДА УсловныеПродажи.ПредполагаемаяОперация ТОГДА 0 ИНАЧЕ УсловныеПродажи.СтоимостьРегл КОНЕЦ)
	|				ИЛИ НЕ СУММА(ВЫБОР КОГДА УсловныеПродажи.ПредполагаемаяОперация ТОГДА 0 ИНАЧЕ УсловныеПродажи.НДСРегл КОНЕЦ) = СУММА(УсловныеПродажи.НДСРеглРучныеКорректировки)
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК СтатусРасхождения,
	|	УсловныеПродажи.Организация,
	|	УсловныеПродажи.Номенклатура,
	|	УсловныеПродажи.Характеристика,
	|	УсловныеПродажи.СтавкаНДС,
	|	УсловныеПродажи.НалоговоеНазначение,
	|	УсловныеПродажи.НалоговоеНазначениеПоФакту,
	|	СУММА(ВЫБОР КОГДА УсловныеПродажи.ПредполагаемаяОперация ТОГДА УсловныеПродажи.Количество ИНАЧЕ 0 КОНЕЦ) КАК ПредполагаемоеКоличество,
	|	СУММА(ВЫБОР КОГДА УсловныеПродажи.ПредполагаемаяОперация ТОГДА 0 ИНАЧЕ УсловныеПродажи.Количество КОНЕЦ) КАК Количество,
	|	СУММА(ВЫБОР КОГДА УсловныеПродажи.ПредполагаемаяОперация ТОГДА УсловныеПродажи.СтоимостьРегл ИНАЧЕ 0 КОНЕЦ) КАК ПредполагаемаяСтоимостьРегл,
	|	СУММА(ВЫБОР КОГДА УсловныеПродажи.ПредполагаемаяОперация ТОГДА 0 ИНАЧЕ УсловныеПродажи.СтоимостьРегл КОНЕЦ) КАК СтоимостьРегл,
	|	СУММА(ВЫБОР КОГДА УсловныеПродажи.ПредполагаемаяОперация ТОГДА УсловныеПродажи.НДСРегл ИНАЧЕ 0 КОНЕЦ) КАК ПредполагаемыйНДСРегл,
	|	СУММА(ВЫБОР КОГДА УсловныеПродажи.ПредполагаемаяОперация ТОГДА 0 ИНАЧЕ УсловныеПродажи.НДСРегл КОНЕЦ) КАК НДСРегл,
	|	СУММА(УсловныеПродажи.НДСРеглРучныеКорректировки) КАК НДСРеглРучныеКорректировки
	|ПОМЕСТИТЬ АнализУсловныхПродаж
	|ИЗ
	|	(
	|" + ТекстЗапросаПериоды + " 
	|	) КАК УсловныеПродажи
	|СГРУППИРОВАТЬ ПО
	|	УсловныеПродажи.Организация,
	|	УсловныеПродажи.Номенклатура,
	|	УсловныеПродажи.Характеристика,
	|	УсловныеПродажи.СтавкаНДС,
	|	УсловныеПродажи.НалоговоеНазначение,
	|	УсловныеПродажи.НалоговоеНазначениеПоФакту,
	|	УсловныеПродажи.ВидУсловнойПродажи";
	
	
	Запрос.Выполнить();
	
КонецПроцедуры


#КонецОбласти

#Область Валюта

Процедура УстановитьДоступностьВалюты(ЭлементыФормы, Организация, ИмяРеквизитаВалюта = "Валюта") Экспорт
	
	ЭтоУправленческаяОрганизация = (Организация = ПредопределенноеЗначение("Справочник.Организации.УправленческаяОрганизация"));
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭлементыФормы, ИмяРеквизитаВалюта, "Доступность", ЭтоУправленческаяОрганизация);
	
КонецПроцедуры

#КонецОбласти

#Область АвторасчетНДС

// Выполняет округление числовых значений с накоплением погрешностей округления, образовавшихся
//		в результате предыдущих вызовов функции
//
// Параметры
//  Число 		– Число. Округляемое значение
//  Точность	– Число. Точность округления
//	Погрешность	- Число. Переменная, в которой накапливается погрешность с предыдущих вызовов
//
// Возвращаемое значение:
//   Число   – округленное значение
//
Функция ОкруглитьСУчетомПогрешности(Число, Точность, Погрешность = 0, 
	               СоответствиеПогрешностей = Неопределено, Ключ = Неопределено) Экспорт

	Если НЕ СоответствиеПогрешностей = Неопределено И ЗначениеЗаполнено(Ключ) Тогда
	
		// считываем погрешность округления, накопленную ранее при расчетах
		Погрешность = СоответствиеПогрешностей[Ключ];
		// погрешности округления еще нет -- первая сумма
		Если Погрешность = Неопределено Тогда
			Погрешность = 0;
		КонецЕсли;
		// округлим с учетом погрешности
		Округленное = ОкруглитьСУчетомПогрешности(Число, Точность, Погрешность);
		// сохраним погрешность округления
		СоответствиеПогрешностей.Вставить(Ключ, Погрешность);
	
	Иначе
		
		Если Число = 0 Тогда
			Возврат 0;
		КонецЕсли; 
	
		// выравнивание разрядности
		Число = Окр(Число, 27, ?(Число<0, РежимОкругления.Окр15как10, РежимОкругления.Окр15как20));
		
		// сумма с учетом погрешности предыдущих вычислений
		Округляемое = Число + Погрешность;

		// для отрицательного числа меняем направление округления, чтобы избежать ошибки Окр(-0.5) = -1
		Округленное	= Окр(Округляемое, Точность, ?(Округляемое<0, РежимОкругления.Окр15как10, РежимОкругления.Окр15как20));
		
		// рассчитаем новую погрешность округления
		Погрешность	= Округляемое - Округленное;
		
	КонецЕсли;
	
	Возврат Округленное;

КонецФункции // ОкруглитьСУчетомПогрешности()

// Рассчитывает сумму НДС исходя из суммы и флагов налогообложения
//
// Параметры: 
//  Сумма            - число, сумма от которой надо рассчитывать налоги, 
//  УчитыватьНДС     - булево, признак учета НДС в сумме, 
//  СуммаВключаетНДС - булево, признак включения НДС в сумму ("внутри" или "сверху"),
//  СтавкаНДС        - число , процентная ставка НДС,
//
// Возвращаемое значение:
//  Число, полученная сумма НДС
//
Функция РассчитатьСуммуНДСсУчетомПогрешности(Сумма, ЦенаВключаетНДС, ПеречислениеСтавкаНДС,
	               СоответствиеПогрешностей = Неопределено) Экспорт

	ПроцентНДС = НДСОбщегоНазначенияКлиентСервер.ПолучитьСтавкуНДСЧислом(ПеречислениеСтавкаНДС);
	
	Если ЦенаВключаетНДС Тогда
		СуммаНДС = ОкруглитьСУчетомПогрешности(Сумма * ПроцентНДС / (1 + ПроцентНДС), 2, , СоответствиеПогрешностей, ПеречислениеСтавкаНДС);
	Иначе
		СуммаНДС = ОкруглитьСУчетомПогрешности(Сумма * ПроцентНДС                   , 2, , СоответствиеПогрешностей, ПеречислениеСтавкаНДС);
	КонецЕсли;

	Возврат СуммаНДС;

КонецФункции // РассчитатьСуммуНДССУчетомПогрешности()

// Процедура корректирует построчные ошибки округления НДС так, 
// чтобы итоговый НДС по ставке совпадал с расчитанным НДС по базе
//
// Параметры:
//  ТабличнаяЧасть       - табличная часть, для которой следует пересчитать НДС
//  КлючДанных           - объект редактируемого документа.
//
Процедура ПересчитатьНДСсУчетомПогрешностиОкругления(ТабличнаяЧасть, КлючДанных, ЦенаВключаетНДС, ПогрешностиОкругления, ПредставлениеТабличнойЧасти = "", ПредставлениеВалюты = "", 
													ИмяРеквизитаСумма = "Сумма", ИмяРеквизитаСуммаНДС = "СуммаНДС", ИмяРеквизитаСуммаСНДС = "СуммаСНДС", 
													ИмяРеквизитаОтменено = Неопределено, ЗначениеФлагаДляОтменыСтроки = Истина, ДополнениеКТексту ="") Экспорт
	
	Перем СуммаНДСДоОкругления;    // для проверки наличия изменения в сумме НДС по документу
    Перем СуммаНДСПослеОкругления; // для проверки наличия изменения в сумме НДС по документу
	
	
	// Запомним сумма с НДС и сумму НДС
	СуммаНДСДоОкругления     = 0;
	СуммаСНДСДоОкругления    = 0;
	СуммаНДСПослеОкругления  = 0;
	СуммаСНДСПослеОкругления = 0;
	
	Для Каждого СтрокаТаблицы Из ТабличнаяЧасть Цикл
		
		Если (НЕ ИмяРеквизитаОтменено = Неопределено) И СтрокаТаблицы[ИмяРеквизитаОтменено] = ЗначениеФлагаДляОтменыСтроки Тогда
			Продолжить;
		КонецЕсли;
		
		// Запомним сумма и сумму НДС до округления
		СуммаНДСДоОкругления  = СуммаНДСДоОкругления + СтрокаТаблицы[ИмяРеквизитаСуммаНДС];
		СуммаСНДСДоОкругления = СуммаСНДСДоОкругления + СтрокаТаблицы[ИмяРеквизитаСуммаСНДС];
		
		СтрокаТаблицы[ИмяРеквизитаСуммаНДС] = РассчитатьСуммуНДСсУчетомПогрешности(СтрокаТаблицы[ИмяРеквизитаСумма],
	                                                   ЦенаВключаетНДС,
	                                                   СтрокаТаблицы.СтавкаНДС,
	                                                   ПогрешностиОкругления);
													   
		Если НЕ ЦенаВключаетНДС Тогда   
			СтрокаТаблицы[ИмяРеквизитаСуммаСНДС] = СтрокаТаблицы[ИмяРеквизитаСумма] + СтрокаТаблицы[ИмяРеквизитаСуммаНДС];
		КонецЕсли;
		
		// Рассчитаем сумму НДС после устранения ошибок округления
		СуммаНДСПослеОкругления  = СуммаНДСПослеОкругления + СтрокаТаблицы[ИмяРеквизитаСуммаНДС];
		СуммаСНДСПослеОкругления = СуммаСНДСПослеОкругления + СтрокаТаблицы[ИмяРеквизитаСуммаСНДС];
		
	КонецЦикла;
	
	// Сравним суммы до и после округления
	Если СуммаНДСПослеОкругления <> СуммаНДСДоОкругления Тогда
		
		ПриставкаСообщенияСуммаНДС = НСтр("ru='После исправления погрешностей округления сумма НДС ';uk='Після виправлення похибок округлення сума ПДВ '");
		ПриставкаСообщенияОбщаяСумма = НСтр("ru='После исправления погрешностей округления общая сумма с НДС ';uk='Після виправлення похибок округлення загальна сума з ПДВ '");
		
		ШаблонТекстаСообщения = НСтр("ru='%1 табличной части %2 изменилась (было %3 %4, стало %5 %4)';uk='%1 табличній частині %2 змінилася (було %3 %4, стало %5 %4)'");
		
		// Если суммы отличаются, сообщим об этом пользователю
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						ШаблонТекстаСообщения,
						ДополнениеКТексту,
						ПредставлениеТабличнойЧасти,
						Строка(СуммаНДСДоОкругления),
						ПредставлениеВалюты,
						Строка(СуммаНДСПослеОкругления));
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ПриставкаСообщенияСуммаНДС + ТекстСообщения, КлючДанных);
		
		// изменилась общая сумма документа - сообщим об этом пользователю 
		Если НЕ ЦенаВключаетНДС Тогда
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							ШаблонТекстаСообщения,
							ДополнениеКТексту,
							ПредставлениеТабличнойЧасти,
							Строка(СуммаСНДСДоОкругления),
							ПредставлениеВалюты,
							Строка(СуммаСНДСПослеОкругления));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ПриставкаСообщенияОбщаяСумма + ТекстСообщения, КлючДанных);
			
		КонецЕсли;	
	КонецЕсли;
	

КонецПроцедуры // ПересчитатьНДСсУчетомПогрешностиОкругления

// Выполняет проверку нужен ли перерасчет НДС
//
// Параметры: 
//  СуммаНДС         - число, сумма НДС по документу, 
//  СуммаСНДС        - число, сумма с НДС по документу,
//
// Возвращаемое значение:
//  Булево, признак необходимости провести расчет
//
Функция НуженАвторасчетНДС(ТабличнаяЧасть, ИмяРеквизитаСтавкаНДС = "СтавкаНДС", ИмяРеквизитаСуммаНДС = "СуммаНДС", ИмяРеквизитаСуммаСНДС ="СуммаСНДС",
							ИмяРеквизитаОтменено = Неопределено, ЗначениеФлагаДляОтменыСтроки = Истина) Экспорт
	
	МассивСтавок = Новый Массив;
	МассивСтавок.Добавить(Перечисления.СтавкиНДС.НДС20);
    МассивСтавок.Добавить(Перечисления.СтавкиНДС.НДС14);
	МассивСтавок.Добавить(Перечисления.СтавкиНДС.НДС7);
	
	СуммаНДС = 0;
	СуммаНДСРасчетная = 0;
	
	Для каждого ПеречислениеСтавкаНДС Из МассивСтавок Цикл
		
	
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить(ИмяРеквизитаСтавкаНДС, ПеречислениеСтавкаНДС);
		Если (НЕ ИмяРеквизитаОтменено = Неопределено) Тогда
			СтруктураОтбора.Вставить(ИмяРеквизитаОтменено,  НЕ ЗначениеФлагаДляОтменыСтроки);
		КонецЕсли;
		
		ПроцентНДС = НДСОбщегоНазначенияКлиентСервер.ПолучитьСтавкуНДСЧислом(ПеречислениеСтавкаНДС);
		
		Таблица = ТабличнаяЧасть.Выгрузить(СтруктураОтбора, ИмяРеквизитаСуммаНДС + ", " + ИмяРеквизитаСуммаСНДС);
		
		СуммаНДС = СуммаНДС + Таблица.Итог(ИмяРеквизитаСуммаНДС);
		СуммаСНДС = Таблица.Итог(ИмяРеквизитаСуммаСНДС);
		
		СуммаНДСРасчетная = СуммаНДСРасчетная + ОкруглитьСУчетомПогрешности(СуммаСНДС * ПроцентНДС / (1 + ПроцентНДС), 2);
		
	КонецЦикла;
	
	Если СуммаНДСРасчетная = СуммаНДС Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

// Возвращает галку авторасчет НДС
//
// Параметры:
// Организация - СправочникСсылка.Организации
// Контрагент - СправочникСсылка.Контрагент
//
// Возвращаемое значение:
// ПеречислениеСсылка.ТипыНалогообложенияНДС
//
Функция ПолучитьФлагАвторасчетНДС(НалогообложениеНДС) Экспорт
	
	Если НалогообложениеНДС = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС") Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции // ПолучитьФлагАвторасчетНДС

// Процедура сбрасывает флаг СкидкиРассчитаны и делает недоступными колонки табличной части.
//
Функция ПолучитьФлагИОбработатьДоступностьАвторасчетаНДС(НалогообложениеНДС, ЭлементыФормы, МассивИменЭлементов) Экспорт
	
	ФлагАвторасчетНДСПоУмолчанию = ПолучитьФлагАвторасчетНДС(НалогообложениеНДС);
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭлементыФормы, МассивИменЭлементов, "Доступность", ФлагАвторасчетНДСПоУмолчанию);
	
	Возврат ФлагАвторасчетНДСПоУмолчанию;
	
КонецФункции

#КонецОбласти

#Область ТабличныеЧастиНалоговыхДокументов

Процедура ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения, ОбработатьРеквизитыРегл = Ложь) Экспорт
	
	ТекущаяСтрокаДляОбработки = НДСИсходящийКлиентСервер.СоздатьСтруктуруДляОбработкиПоТекущейСтроке(ТекущаяСтрока, ОбработатьРеквизитыРегл);
	
    // Для услуг измеряемых только в суммовом выражении, количество может быть не задано
	Если СтруктураДействий.Свойство("ПересчитатьСумму") И Не ЗначениеЗаполнено(ТекущаяСтрокаДляОбработки.КоличествоУпаковок) Тогда
		ИмяКолонкиКоличествоУпаковок = "КоличествоУпаковок_УсловнаяЕдиница";
		ТекущаяСтрокаДляОбработки.Вставить(ИмяКолонкиКоличествоУпаковок, 1);
		СтруктураДействий.Вставить("ПересчитатьСумму", ИмяКолонкиКоличествоУпаковок);
	КонецЕсли;

	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрокаДляОбработки, СтруктураДействий, КэшированныеЗначения);
	
	НДСИсходящийКлиентСервер.ЗаполнитьТекущуюСтрокуПоСтруктуреДляОбработки(ТекущаяСтрока, ТекущаяСтрокаДляОбработки, ОбработатьРеквизитыРегл);
	
КонецПроцедуры

Функция ВДокументеЕстьСтавкаНДС7(Документ) Экспорт
                                                       
	Отбор = Новый Структура("СтавкаНДС", Перечисления.СтавкиНДС.НДС7);
	
	Если    (Документ.Товары.НайтиСтроки(Отбор).Количество() > 0)
		ИЛИ (Документ.ТоварыПоДаннымПользователя.НайтиСтроки(Отбор).Количество() > 0)
		Тогда
		
		Возврат Истина;
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;

КонецФункции

Функция ВДокументеЕстьСтавкаНДС7ИДругиеСтавки(Документ, ВыдаватьСообщенение = Истина) Экспорт
                                                       
	Отбор = Новый Структура("СтавкаНДС", Перечисления.СтавкиНДС.НДС7);
	
	Если    (Документ.Товары.НайтиСтроки(Отбор).Количество() > 0 И Документ.Товары.НайтиСтроки(Отбор).Количество() <> Документ.Товары.Количество())
		ИЛИ (Документ.ТоварыПоДаннымПользователя.НайтиСтроки(Отбор).Количество() > 0 И Документ.ТоварыПоДаннымПользователя.НайтиСтроки(Отбор).Количество() <> Документ.ТоварыПоДаннымПользователя.Количество())
		Тогда
		
			Если ВыдаватьСообщенение = Истина Тогда
			
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Форма налоговой накладной, утвержденная 14.01.2014 приказом Миндоходов № 10, не предусматривает наличие ставки НДС  7%. 
																		|В данной налоговой накладной присутствует номенклатура, которая облагается как по ставке 7% так и по другим ставкам.
																		|Согласно рекомендации Миндоходов, изложенной в письме  от 04.04.2014  № 7860/7/99-99-19-04-02-17, на номенклатуру, облагаемую НДС по ставке 7%, необходимо выписывать отдельную налоговую накладную!';uk= 'Форма податкової накладню, що затверждена 14.01.2014 наказом Міндоходів № 10, не передбачає наявності ставки ПДВ 7%.
																		|В податковій накладній наявна номенклатура, що оподатковується ПДВ як за ставкою 7% так і за іншими ставками.
																		|Згідно рекомендації Міндоходів, що викладена у листі від 04.04.2014  № 7860/7/99-99-19-04-02-17, на номенклатуру, що оподатковується ПДВ за ставкою 7%, необхідно складати окрему податкову накладну!'"));
				
			КонецЕсли;
		
		Возврат Истина;
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;

КонецФункции


Функция ВДокументеЕстьСтавкаНДС14(Документ, ВыдаватьСообщенение = Ложь) Экспорт
                                                       
	Отбор = Новый Структура("СтавкаНДС", Перечисления.СтавкиНДС.НДС14);
	
	Если    (Документ.Товары.НайтиСтроки(Отбор).Количество() > 0)
		ИЛИ (Документ.ТоварыПоДаннымПользователя.НайтиСтроки(Отбор).Количество() > 0)
		Тогда
        
        Если ВыдаватьСообщенение = Истина Тогда
            
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
                    НСтр("ru='Форма налоговой накладной, утвержденная 02.12.2020 приказом Минфина №734, не предусматривает наличие ставки НДС 14%. 
						  |В данной налоговой накладной присутствует номенклатура, которая облагается по ставке 14%.
						  |Согласно рекомендации ДПСУ, изложенной в письме от 01.03.2021 №5257/7/99-00-21-03-02-07, такие налоговые накладные до принятия новой формы не могут быть составлены, поэтому они не выводятся на печать и не выгружаются!';uk= 'Форма податкової накладної, що затверджена 02.12.2020 наказом Мінфіна №734, не передбачає наявності ставки ПДВ 14%.
						  |В податковій накладній наявна номенклатура, що оподатковується за ставкою 14%.
						  |Згідно рекомендації ДПСУ, що викладена у листі від 01.03.2021 №5257/7/99-00-21-03-02-07, такі податкові накладні до прийняття наступної нової форми не можуть бути складені, тому вони не виводяться на друк та не вивантажуються!'")
                    );
				
		КонецЕсли;
		
		Возврат Истина;
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;

КонецФункции

Функция ВДокументеЕстьСтавкаНДС14ИДругиеСтавки(Документ, ВыдаватьСообщенение = Истина) Экспорт
                                                       
	Отбор = Новый Структура("СтавкаНДС", Перечисления.СтавкиНДС.НДС14);
	
	Если    (Документ.Товары.НайтиСтроки(Отбор).Количество() > 0 И Документ.Товары.НайтиСтроки(Отбор).Количество() <> Документ.Товары.Количество())
		ИЛИ (Документ.ТоварыПоДаннымПользователя.НайтиСтроки(Отбор).Количество() > 0 И Документ.ТоварыПоДаннымПользователя.НайтиСтроки(Отбор).Количество() <> Документ.ТоварыПоДаннымПользователя.Количество())
		Тогда
		
        Если ВыдаватьСообщенение = Истина Тогда
            
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
                    НСтр("ru='Форма налоговой накладной, утвержденная 02.12.2020 приказом Миндоходов №734, не предусматривает наличие ставки НДС 14%. 
						  |В данной налоговой накладной присутствует номенклатура, которая облагается как по ставке 14%, так и по другим ставкам.
						  |Согласно рекомендации ДПСУ, изложенной в письме от 01.03.2021 №5257/7/99-00-21-03-02-07, налоговые накладные по ставке 14% до принятия следующей новой формы не могут быть составлены; для регистрации налоговых обязательств рекомендуется составлять отдельные налоговые накладные по ставке 14% и регистрировать их после принятия следующей новой формы';uk= 'Форма податкової накладної, що затверджена 02.12.2020 наказом Мінфіна №734, не передбачає наявності ставки ПДВ 14%.
						  |В податковій накладній наявна номенклатура, що оподатковується ПДВ як за ставкою 14%, так і за іншими ставками.
						  |Згідно рекомендації ДПСУ, що викладена у листі від 01.03.2021 №5257/7/99-00-21-03-02-07, податкові накладні за ставкою 14% до прийняття наступної нової форми не можуть бути складені; для реєстрації податкових зобов’язань рекомендується складати окремі податкові накладні за ставкою 14% та реєструвати їх після прийняття наступної нової форми!'")
                    );
				
			КонецЕсли;
		
		Возврат Истина;
		
	Иначе
		
		Возврат Ложь;
		
	КонецЕсли;

КонецФункции


Процедура ЗаполнитьНоменклатуруГТДПоУмолчанию(СтрокаТовары, ЗаполнятьГалочкуРазрешитьРедактированиеКодаПоКлассификатору = Истина) Экспорт
	
	Если ЗначениеЗаполнено(СтрокаТовары.Номенклатура) Тогда
		
		Если ЗаполнятьГалочкуРазрешитьРедактированиеКодаПоКлассификатору Тогда
			Если НЕ СтрокаТовары.Номенклатура.ВестиУчетПоГТД Тогда
				СтрокаТовары.РазрешитьРедактированиеКодаПоКлассификатору = Истина;
			Иначе
				СтрокаТовары.РазрешитьРедактированиеКодаПоКлассификатору = Ложь;
				СтрокаТовары.КодНоменклатурыПоКлассификатору = Справочники.КлассификаторУКТВЭД.ПустаяСсылка();
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТовары.НомерГТД) Тогда
			СтрокаТовары.КодНоменклатурыПоКлассификатору = СтрокаТовары.НомерГТД.КодУКТВЭД;
		ИначеЕсли ЗначениеЗаполнено(СтрокаТовары.Номенклатура.НоменклатураГТД) Тогда
			СтрокаТовары.КодНоменклатурыПоКлассификатору = СтрокаТовары.Номенклатура.НоменклатураГТД.КодУКТВЭД;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОтборИВыборНалоговыхДокументов

Функция НалоговыеДокументыПоОснованию(Основание, Организация) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.НДСНоменклатурныйСоставДляНалоговыхНакладных КАК НДСНоменклатурныйСоставДляНалоговыхНакладных
	|ГДЕ
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.ДокументПоставки = &Основание
	|	И (ТИПЗНАЧЕНИЯ(НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор) = ТИП(Документ.НалоговаяНакладная)
	|			ИЛИ ТИПЗНАЧЕНИЯ(НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор) = ТИП(Документ.Приложение2КНалоговойНакладной))
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСНоменклатурныйСоставДляНалоговыхНакладных.Регистратор");
	
	Запрос.УстановитьПараметр("Основание",   Основание);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	
	ТаблицаНалоговыхДокументов = Новый ТаблицаЗначений;
	ТаблицаНалоговыхДокументов.Колонки.Добавить("Ссылка");
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ТаблицаНалоговыхДокументов = РезультатЗапроса.Выгрузить();
	КонецЕсли;
	
	Возврат ТаблицаНалоговыхДокументов;
	
КонецФункции

#КонецОбласти

#Область УсловноеОформление

Процедура УстановитьУсловноеОформлениеПоАвтоРасчетуНДС(
	Форма,	
	ИмяПоляСуммаНДС             = "СуммаНДС",
	ИмяПоляСуммаВсегоСНДС       = "СуммаВсегоСНДС",
	ИмяПоляПерерасчетПроизведен = "ПерерасчетПроизведен"
	) Экспорт
	
	УсловноеОформление = Форма.УсловноеОформление;
	ЭлементыФормы = Форма.Элементы;
	
	Если НЕ ПустаяСтрока(ИмяПоляСуммаНДС) Тогда

		Элемент = УсловноеОформление.Элементы.Добавить();

		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляСуммаНДС].Имя);
		
		ГруппаОтбора1 = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаОтбора1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
		
		ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.АвторасчетНДС");
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Истина;

		ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяПоляПерерасчетПроизведен);
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Ложь;

		Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаОтмененнойСтрокиДокумента);
		
	КонецЕсли;	
	
	Если НЕ ПустаяСтрока(ИмяПоляСуммаВсегоСНДС) Тогда
		
		Элемент = УсловноеОформление.Элементы.Добавить();

		ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
		ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляСуммаВсегоСНДС].Имя);
		
		ГруппаОтбора1 = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаОтбора1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
		
		ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ЦенаВключаетНДС");
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Ложь;
		
		ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.АвторасчетНДС");
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Истина;

		ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ИмяПоляПерерасчетПроизведен);
		ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборЭлемента.ПравоеЗначение = Ложь;

		Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаОтмененнойСтрокиДокумента);
	
	КонецЕсли;	

КонецПроцедуры // УстановитьУсловноеОформлениеПоАвтоРасчетуНДС

// Устанавливаем условное оформление для реквизитов по виду операции "условная продажа"
//
// Параметры:
// 		Форма - Форма - Содержит данную форму 
Процедура УстановитьУсловноеОформлениеПоУсловнойПродаже(Форма) Экспорт
														   
	//УсловноеОформление = Форма.УсловноеОформление;
	//ЭлементыФормы = Форма.Элементы;
	//
	//Элемент = УсловноеОформление.Элементы.Добавить();	
	//ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	//ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ИмяПоляВводаСуммаНДСПропорционально);

	//ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПутьКПолюОтбора);
	//ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	//ОтборЭлемента.ПравоеЗначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Пропорционально;

	//Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	//Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru='<для пропорц. налогового назначения>'"));
	//Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	//
	//Если УстанавливатьВидимость Тогда
	//	
	//	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();				  
	//	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	//	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ИмяПоляВводаСуммаНДСПропорционально);
	//	
	//	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВидимостьНалоговыхНазначений");
	//	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	//	ОтборЭлемента.ПравоеЗначение = Ложь;
	//	
	//	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);	
	//	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	//
	//КонецЕсли; 
		
КонецПроцедуры // УстановитьУсловноеОформлениеНалоговыхНазначений

#КонецОбласти
