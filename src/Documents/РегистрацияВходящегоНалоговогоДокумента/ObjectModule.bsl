#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;

	Если ЗначениеЗаполнено(Организация) Тогда
		Шаблон = НСтр("ru='Указанная организация должна быть плательщиком НДС';uk='Зазначена організація повинна бути платником ПДВ'");
		ОрганизацияПлательщикНДС = НДСОбщегоНазначенияСервер.ОрганизацияКонтрагентПлательщикНДС(Организация, Дата);
		ПроверитьИСообщитьОшибку(Не ОрганизацияПлательщикНДС,
			Отказ, Шаблон, "Организация", "Организация");		
	КонецЕсли; 
	
	Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.Организации") Тогда
		
		НепроверяемыеРеквизиты.Добавить("Партнер");
		НепроверяемыеРеквизиты.Добавить("Соглашение");
		
		Если ЗначениеЗаполнено(Контрагент) и ЗначениеЗаполнено(Организация) Тогда
			Шаблон = НСтр("ru='Организация %Организация% не может быть одновременно и поставщиком и получателем';uk='Організація %Организация% не може бути одночасно і постачальником і одержувачем'");
			Шаблон = СтрЗаменить(Шаблон, "%Организация%", Организация);
			ПроверитьИСообщитьОшибку(Контрагент = Организация,
				Отказ, Шаблон, "Конрагент", "Конрагент");		
		КонецЕсли;

	КонецЕсли;
	
	Если Не ВключаетсяВУточняющийРасчет Тогда
		НепроверяемыеРеквизиты.Добавить("ДатаОтгрузкиОплаты");
	КонецЕсли;

    СуммаНДСДокументаКПроверке = Поставка.Итог("СуммаНДС");
	СуммаДокументаКПроверке    = ЦенообразованиеКлиентСервер.ПолучитьСуммуДокумента(Поставка, Ложь);
	
	Если ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.ВосстановлениеНалоговогоКредита
		И НЕ (СуммаДокументаКПроверке = 0 И СуммаНДСДокументаКПроверке = 0) Тогда				
		Сообщение = НСтр("ru='Для данного вида операции сумма документа и сумма НДС должна быть нулевой!';uk='Для даного виду операції сума документа та ПДВ повинна дорівнювати нулю!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Сообщение, , "Поставка", "Объект", Отказ);
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
		
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ПроведениеСервер.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	Если (ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.ИсправлениеОшибки)
	 ИЛИ (ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.ВосстановлениеНалоговогоКредита) 
	 ИЛИ (ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.ТоварныйЧек)Тогда
		// Не очищаем реквизит
 	Иначе
		ВидДокумента = Неопределено;
	КонецЕсли;
	
	Если (ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РасчетКорректировкиВозврат) 
	 ИЛИ (ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РасчетКорректировкиКорректировка) Тогда
		// Не очищаем реквизит
 	Иначе
		НомерКорректируемогоВходящегоДокумента = Неопределено;
		ДатаКорректируемогоВходящегоДокумента = Неопределено;
		ОснованиеКорректировки = Неопределено;
	КонецЕсли;
		
	Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.Организации") Тогда
		Партнер = Справочники.Партнеры.НашеПредприятие;
		Соглашение = Неопределено;
		Договор = Неопределено;
	КонецЕсли;
	
	ЕстьДвиженияПоРегиструСоставПоставки = 
		ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.НалоговаяНакладная ИЛИ
	 	ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РасчетКорректировкиВозврат ИЛИ
	 	ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РасчетКорректировкиКорректировка ИЛИ
	 	ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.ТоварныйЧек;	 
		
	ПодставлятьДоговорВПустойОбъектРасчетов = Ложь;
	Если ЗначениеЗаполнено(Договор) И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ПорядокРасчетов") = 
			Перечисления.ПорядокРасчетов.ПоДоговорамКонтрагентов Тогда
		ПодставлятьДоговорВПустойОбъектРасчетов = Истина;
	КонецЕсли;	
		
	Для каждого Строка Из Поставка Цикл		
		Если НЕ ЕстьДвиженияПоРегиструСоставПоставки Тогда
			Строка.ОбъектРасчетов = Неопределено;
			Строка.ДокументПоставки = Неопределено;
			
		ИначеЕсли Не ЗначениеЗаполнено(Строка.ДокументПоставки) Тогда
			// Гаранируем отсутсвие пустых ссылок когда документ поставки может быть указан
			Строка.ДокументПоставки = Неопределено;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Строка.ОбъектРасчетов) И ПодставлятьДоговорВПустойОбъектРасчетов Тогда
			Строка.ОбъектРасчетов = Договор;
		КонецЕсли;
	КонецЦикла;

    Если Не ЕстьДвиженияПоРегиструСоставПоставки Тогда
		ПоВводуОстатков = Ложь;
	КонецЕсли;

	
	ЭтоВидОперацииДляОтраженияПереоценки = 
		ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РасчетКорректировкиКорректировка ИЛИ
 		ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.ТоварныйЧек;
	
	Если Не ЭтоВидОперацииДляОтраженияПереоценки Тогда 
		Переоценка = Ложь;	
	КонецЕсли;	
	
    СуммаНДСДокумента = Поставка.Итог("СуммаНДС");
	СуммаДокумента    = ЦенообразованиеКлиентСервер.ПолучитьСуммуДокумента(Поставка, Ложь);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	Документы.РегистрацияВходящегоНалоговогоДокумента.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	НДСВходящийСервер.ОтразитьНДСРеестрПолученныхНалоговыхДокументов(ДополнительныеСвойства, Движения, Отказ);
	НДСВходящийСервер.ОтразитьНДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов(ДополнительныеСвойства, Движения, Отказ);
	НДСИсходящийСервер.ОтразитьНДСУсловныеПродажи(ДополнительныеСвойства, Движения, Отказ);


	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанных = ТипЗнч(ДанныеЗаполнения);
	Если ТипДанных = Тип("Структура") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		
		Если ДанныеЗаполнения.Свойство("ВидПоставки") Тогда
			
			КонтрагентПлательщикНДС = НДСОбщегоНазначенияСервер.ОрганизацияКонтрагентПлательщикНДС(Контрагент);
			
			Если КонтрагентПлательщикНДС Тогда
				Если ДанныеЗаполнения.ВидПоставки = Перечисления.ВидыПоставки.ВводОстатков Тогда
					ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.НалоговаяНакладная;
					
				ИначеЕсли ДанныеЗаполнения.ВидПоставки = Перечисления.ВидыПоставки.Поставка Тогда
					ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.НалоговаяНакладная;
					
				ИначеЕсли ДанныеЗаполнения.ВидПоставки = Перечисления.ВидыПоставки.Возврат Тогда
					ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РасчетКорректировкиВозврат;				
					
				ИначеЕсли ДанныеЗаполнения.ВидПоставки = Перечисления.ВидыПоставки.Переоценка Тогда
					ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РасчетКорректировкиКорректировка;
					
				КонецЕсли;
			Иначе
				// Для неплательщиков НДС всегда "Прочее (товарный чек и т. п.)"
				ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.ТоварныйЧек;
			КонецЕсли;
			
			Если ДанныеЗаполнения.ВидПоставки = Перечисления.ВидыПоставки.ВводОстатков Тогда
			    ПоВводуОстатков = Истина;
				
			ИначеЕсли ДанныеЗаполнения.ВидПоставки = Перечисления.ВидыПоставки.Переоценка Тогда
				Переоценка = Истина;			
				
			КонецЕсли;
			
			Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.Организации") Тогда
				Партнер = Неопределено;
			КонецЕсли;
			
			Документы.РегистрацияВходящегоНалоговогоДокумента.ЗаполнитьПоОстаткам(ЭтотОбъект);
			
		КонецЕсли;
		
	КонецЕсли;
	
	ИнициализироватьДокумент();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение

Процедура ИнициализироватьДокумент()
		
	Ответственный          = Пользователи.ТекущийПользователь();
	Организация            = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	ДатаВходящегоДокумента = ?(ЗначениеЗаполнено(ДатаВходящегоДокумента), ДатаВходящегоДокумента, ?(ЗначениеЗаполнено(Дата), Дата, ТекущаяДата()));

	ОбособленноеПодразделение = НДСВходящийСервер.ОпределитьОбособленноеПодразделениеПоУмолчанию(
		Организация, 
		Договор
	);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура ПроверитьИСообщитьОшибку(УсловиеОшибки, Отказ, Знач Шаблон, Знач ИмяПоля, Знач СинонимПоля, Знач ИмяТабчасти = Неопределено, Знач НомерСтроки = Неопределено)
	
	Если УсловиеОшибки Тогда
		Сообщение = СтрЗаменить(Шаблон, "%СинонимПоля%", СинонимПоля);
		Сообщение = СтрЗаменить(Сообщение, "%НомерСтроки%", НомерСтроки);
		Сообщение = СтрЗаменить(Сообщение, "%ИмяТабчасти%", ИмяТабчасти);
		Если ЗначениеЗаполнено(ИмяТабчасти) И НомерСтроки > 0 Тогда
			ИмяПоля = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТабчасти, НомерСтроки, ИмяПоля);
		КонецЕсли;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Сообщение, , ИмяПоля, "Объект", Отказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
