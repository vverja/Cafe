
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ДокументВозврата = Параметры.ДокументВозврата;
	Дата = Параметры.Дата;
	Валюта = Параметры.Валюта;
	ЦенаВключаетНДС = Параметры.ЦенаВключаетНДС;
	Партнер = Параметры.Партнер;
	Соглашение = Параметры.Соглашение;
	Организация = Параметры.Организация;
	Контрагент = Параметры.Контрагент;
	Склад = Параметры.Склад;
	ЗакупкаПоИмпорту = Параметры.ЗакупкаПоИмпорту;
	
	Если ЗакупкаПоИмпорту Тогда
		Период = Новый СтандартныйПериод();
		Период.ДатаОкончания = Дата;
	Иначе
		Период = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ПодборТоваровПоПоступлениям","ПериодПодбораТоваровПоПоступлениям");
		НаправлениеДеятельности = Параметры.НаправлениеДеятельности;
	КонецЕсли; 
		
	Если Период.ДатаОкончания = Дата(1, 1, 1) Тогда
		Период.Вариант = ВариантСтандартногоПериода.Месяц;
	КонецЕсли; 
	
	ЗаполнитьТаблицуТоваров();
	РассчитатьИтогиПоТаблицеТоваров();
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТоварыИнформационнаяНадпись,
		ТоварыВыбраноКоличество,
		ТоварыВыбраноСумма,
		Валюта);
	
	ИспользоватьМногооборотнуюТару = ПолучитьФункциональнуюОпцию("ИспользоватьМногооборотнуюТару");
	
	Если ИспользоватьМногооборотнуюТару И Параметры.ПоказыватьТару Тогда
		
		ЗаполнитьТаблицуТары();
		РассчитатьИтогиПоТаблицеТары();
		ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
			ТараИнформационнаяНадпись,
			ТараВыбраноКоличество,
			ТараВыбраноСумма,
			Валюта);
		
		Если Не Параметры.ПоказыватьТовары Тогда
			Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
			Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаТара;
		Иначе
			Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаТовары;
		КонецЕсли;
		
	Иначе
		
		Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаТовары;
		
	КонецЕсли;
		
	МассивЭлементов = Новый Массив();
	МассивЭлементов.Добавить("ТаблицаТары");
	МассивЭлементов.Добавить("ТараИнформационнаяНадписьОтборы");
	МассивЭлементов.Добавить("ТараИнформационнаяНадпись");
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "Видимость", ИспользоватьМногооборотнуюТару И Параметры.ПоказыватьТару);
	
	МассивЭлементов = Новый Массив();
	МассивЭлементов.Добавить("ПериодВариант");
	МассивЭлементов.Добавить("ПериодДатаНачала");
	МассивЭлементов.Добавить("ПериодДатаОкончания");
	МассивЭлементов.Добавить("Обновить");
	МассивЭлементов.Добавить("ТаблицаТоваров");
	МассивЭлементов.Добавить("ТоварыИнформационнаяНадпись");
	МассивЭлементов.Добавить("ТоварыИнформационнаяНадписьОтборы");
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "Видимость", Параметры.ПоказыватьТовары);
	
	МассивЭлементов = Новый Массив();
	МассивЭлементов.Добавить("ТаблицаТоваровЦена");
	МассивЭлементов.Добавить("ТаблицаТоваровПроцентРучнойСкидки");
	МассивЭлементов.Добавить("ТаблицаТоваровСуммаРучнойСкидки");
	МассивЭлементов.Добавить("ТаблицаТоваровНазначение");
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "Видимость", НЕ ЗакупкаПоИмпорту);

	ПодборТоваровКлиентСервер.СформироватьЗаголовокФормыПодбора(Заголовок, ДокументВозврата);
	СформироватьИнформационнуюНадписьОтборы();
	
	Элементы.ТаблицаТоваровНазначение.Видимость = Не ПолучитьФункциональнуюОпцию("БазоваяВерсия");
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ПринудительноЗакрытьФорму Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПеренестиВДокумент И (ТоварыВыбраноКоличество > 0 Или ТараВыбраноКоличество > 0)  Тогда 
		
		Если ТоварыВыбраноКоличество > 0 И ТараВыбраноКоличество > 0 Тогда
			ТекстВопроса = НСтр("ru='Подобранные товары и многооборотная тара не перенесены в документ. Перенести?';uk='Підібрані товари і багатооборотна тара не перенесені в документ. Перенести?'")
		ИначеЕсли ТоварыВыбраноКоличество > 0 Тогда
			ТекстВопроса = НСтр("ru='Подобранные товары не перенесены в документ. Перенести?';uk='Підібрані товари не перенесені в документ. Перенести?'")
		ИначеЕсли ТараВыбраноКоличество > 0 Тогда
			ТекстВопроса = НСтр("ru='Подобранная многооборотная тара не перенесена в документ. Перенести?';uk='Підібрана багатооборотна тара не перенесена в документ. Перенести?'")
		КонецЕсли;
		
		Отказ = Истина;
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ПередЗакрытиемВопросЗавершение", ЭтотОбъект),
			ТекстВопроса,
			РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемВопросЗавершение(ОтветНаВопрос, ДополнительныеПараметры) Экспорт
	
	Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
		ПеренестиВДокумент = Истина;
		Закрыть();
	ИначеЕсли ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
		ПринудительноЗакрытьФорму = Истина;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если ПеренестиВДокумент Тогда
		
		АдресТоваровВХранилище = ПоместитьТоварыВХранилище();
		Структура = Новый Структура("АдресТоваровВХранилище", АдресТоваровВХранилище);
		ПеренестиВДокумент = Истина;
		ОповеститьОВыборе(Структура);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	Если ЗакупкаПоИмпорту Тогда
		Настройки.Удалить("Период");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ПодборТоваровПоПоступлениям","ПериодПодбораТоваровПоПоступлениям", Период);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТаблицаТоваровВыбранПриИзменении(Элемент)
	
	Данные = Элементы.ТаблицаТоваров.ТекущиеДанные;
	
	ЗнакСложения = ?(Данные.Выбран, 1, -1);
	ТоварыВыбраноКоличество = ТоварыВыбраноКоличество + ЗнакСложения;
	ТоварыВыбраноСумма = ТоварыВыбраноСумма + Данные.СуммаСНДС*ЗнакСложения;
	
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТоварыИнформационнаяНадпись,
		ТоварыВыбраноКоличество,
		ТоварыВыбраноСумма,
		Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТарыВыбранПриИзменении(Элемент)
	
	Данные = Элементы.ТаблицаТары.ТекущиеДанные;
	
	ЗнакСложения = ?(Данные.Выбран, 1, -1);
	ТараВыбраноКоличество = ТараВыбраноКоличество + ЗнакСложения;
	ТараВыбраноСумма = ТараВыбраноСумма + Данные.Сумма*ЗнакСложения;
	
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТараИнформационнаяНадпись,
		ТараВыбраноКоличество,
		ТараВыбраноСумма,
		Валюта);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокументВыполнить()
	
	ПеренестиВДокумент = Истина;
	Закрыть(КодВозвратаДиалога.OK);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьТовары()
	
	ВыбратьВсеТоварыНаСервере();
	
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТоварыИнформационнаяНадпись,
		ТоварыВыбраноКоличество,
		ТоварыВыбраноСумма,
		Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьТовары()
	
	ИсключитьВсеТоварыНаСервере();
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТоварыИнформационнаяНадпись,
		ТоварыВыбраноКоличество,
		ТоварыВыбраноСумма,
		Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВыделенныеТовары(Команда)
	
	МассивСтрок = Элементы.ТаблицаТоваров.ВыделенныеСтроки;
	Для Каждого ИдентификаторСтроки Из МассивСтрок Цикл
		Строка = ТаблицаТоваров.НайтиПоИдентификатору(ИдентификаторСтроки);
		Если Не Строка.Выбран Тогда
			Строка.Выбран = Истина;
			ТоварыВыбраноКоличество = ТоварыВыбраноКоличество + 1;
			ТоварыВыбраноСумма = ТоварыВыбраноСумма + Строка.СуммаСНДС;
		КонецЕсли;
	КонецЦикла;
	
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТоварыИнформационнаяНадпись,
		ТоварыВыбраноКоличество,
		ТоварыВыбраноСумма, 
		Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьВыделенныеТовары(Команда)
	
	МассивСтрок = Элементы.ТаблицаТоваров.ВыделенныеСтроки;
	Для Каждого ИдентификаторСтроки Из МассивСтрок Цикл
		Строка = ТаблицаТоваров.НайтиПоИдентификатору(ИдентификаторСтроки);
		Если Строка.Выбран Тогда
			Строка.Выбран = Ложь;
			ТоварыВыбраноКоличество = ТоварыВыбраноКоличество - 1;
			ТоварыВыбраноСумма = ТоварыВыбраноСумма - Строка.СуммаСНДС;
		КонецЕсли;
	КонецЦикла;
	
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТоварыИнформационнаяНадпись,
		ТоварыВыбраноКоличество,
		ТоварыВыбраноСумма,
		Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьТару()
	
	ВыбратьВсюТаруНаСервере();
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТараИнформационнаяНадпись,
		ТараВыбраноКоличество,
		ТараВыбраноСумма,
		Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьТару()
	
	ИсключитьВсюТаруНаСервере();
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТараИнформационнаяНадпись,
		ТараВыбраноКоличество,
		ТараВыбраноСумма,
		Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВыделеннуюТару(Команда)
	
	МассивСтрок = Элементы.ТаблицаТары.ВыделенныеСтроки;
	Для Каждого ИдентификаторСтроки Из МассивСтрок Цикл
		Строка = ТаблицаТары.НайтиПоИдентификатору(ИдентификаторСтроки);
		Если Не Строка.Выбран Тогда
			Строка.Выбран = Истина;
			ТараВыбраноКоличество = ТараВыбраноКоличество + 1;
			ТараВыбраноСумма = ТараВыбраноСумма + Строка.Сумма;
		КонецЕсли;
	КонецЦикла;
	
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТараИнформационнаяНадпись,
		ТараВыбраноКоличество,
		ТараВыбраноСумма,
		Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьВыделеннуюТару(Команда)
	
	МассивСтрок = Элементы.ТаблицаТары.ВыделенныеСтроки;
	Для Каждого ИдентификаторСтроки Из МассивСтрок Цикл
		Строка = ТаблицаТары.НайтиПоИдентификатору(ИдентификаторСтроки);
		Если Строка.Выбран Тогда
			Строка.Выбран = Ложь;
			ТараВыбраноКоличество = ТараВыбраноКоличество - 1;
			ТараВыбраноСумма = ТараВыбраноСумма - Строка.Сумма
		КонецЕсли;
	КонецЦикла;
	
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТараИнформационнаяНадпись,
		ТараВыбраноКоличество,
		ТараВыбраноСумма,
		Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТовары(Команда)
	
	ЗаполнитьТаблицуТоваров();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТару(Команда)
	
	ЗаполнитьТаблицуТары();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодВариантПриИзменении(Элемент)
	
	ЗаполнитьТаблицуТоваров();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//


	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаТоваровСуммаРучнойСкидки.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаТоваровПроцентРучнойСкидки.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организация");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;

	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

	//

	НоменклатураСервер.УстановитьУсловноеОформлениеЕдиницИзмерения(ЭтаФорма, 
																   "ТаблицаТоваровНоменклатураЕдиницаИзмерения", 
                                                                   "ТаблицаТоваров.Упаковка");

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаТарыДатаВозврата.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаТары.ДатаВозврата");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Меньше;
	ОтборЭлемента.ПравоеЗначение = Новый СтандартнаяДатаНачала(ВариантСтандартнойДатыНачала.НачалоЭтогоДня);

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ПросроченныеДанныеЦвет);

КонецПроцедуры

#Область Прочее

&НаСервере
Функция ПоместитьТоварыВХранилище()
	
	Товары = ТаблицаТоваров.Выгрузить(ТаблицаТоваров.НайтиСтроки(Новый Структура("Выбран", Истина)));
	Для Каждого ТекСтрока Из ТаблицаТары Цикл
		Если ТекСтрока.Выбран Тогда
			НоваяСтрока = Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
			НоваяСтрока.КоличествоУпаковок = ТекСтрока.Количество;
			НоваяСтрока.СуммаСНДС = ТекСтрока.Сумма;
			НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		КонецЕсли;
	КонецЦикла;
	ВозвращаемаяСтруктура = Новый Структура("Товары", Товары);
	АдресТоваровВХранилище = ПоместитьВоВременноеХранилище(ВозвращаемаяСтруктура, УникальныйИдентификатор);
	
	Возврат АдресТоваровВХранилище;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуТоваров()
	
	ТаблицаТоваров.Очистить();
	
	Запрос = Новый Запрос;
	
	Если ЗакупкаПоИмпорту Тогда
		Запрос.Текст = ТекстЗапросаЗакупкаПоИмпорту();
		Запрос.УстановитьПараметр("Партнер", Партнер);
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Склад", Склад);
		Запрос.УстановитьПараметр("ОтборПоСкладу", ЗначениеЗаполнено(Склад));
		Запрос.УстановитьПараметр("Дата", Период.ДатаОкончания);
		
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			НоваяСтрока = ТаблицаТоваров.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
			Если Валюта <> Выборка.ВалютаПоступления И ЗначениеЗаполнено(Выборка.ВалютаПоступления) Тогда
				КурсНовойВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Валюта, Дата);
				КурсСтаройВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Выборка.ВалютаПоступления, Дата);
				
				НоваяСтрока.СуммаСНДС = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(
					НоваяСтрока.СуммаСНДС,
					Выборка.ВалютаПоступления,Валюта,
					КурсСтаройВалюты.Курс,КурсНовойВалюты.Курс,
					КурсСтаройВалюты.Кратность,КурсНовойВалюты.Кратность);
					
				Ценообразование.ПересчитатьСуммыВСтрокеПоСуммеСНДС(
					НоваяСтрока,
					Ложь,
					Ложь,
					Ложь);

			КонецЕсли;
			
			Если Выборка.ЦенаВключаетНДС <> Ложь Тогда
				// в поле Сумма получим сумму без НДС
				Ценообразование.ПересчитатьСуммыВСтрокеПоСуммеСНДС(НоваяСтрока, Ложь, Ложь, Ложь);
			КонецЕсли;
			
		КонецЦикла;

	Иначе
		Запрос.Текст = ТекстЗапросаВозвраты();
		Запрос.УстановитьПараметр("Партнер", Партнер);
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
		Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
		Запрос.УстановитьПараметр("Соглашение", Соглашение);
		Запрос.УстановитьПараметр("ДокументВозврата", ДокументВозврата);
		Запрос.УстановитьПараметр("НаправлениеДеятельности", НаправлениеДеятельности);

		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			НоваяСтрока = ТаблицаТоваров.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
			Если Валюта <> Выборка.ВалютаПоступления Тогда
				КурсНовойВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Валюта, Дата);
				КурсСтаройВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Выборка.ВалютаПоступления, Дата);
				
				НоваяСтрока.СуммаСНДС = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(
					НоваяСтрока.СуммаСНДС,
					Выборка.ВалютаПоступления,Валюта,
					КурсСтаройВалюты.Курс,КурсНовойВалюты.Курс,
					КурсСтаройВалюты.Кратность,КурсНовойВалюты.Кратность);
				
			КонецЕсли;
			
			Ценообразование.ПересчитатьСуммыВСтрокеПоСуммеСНДС(
				НоваяСтрока,
				ЦенаВключаетНДС,
				Ложь,
				Ложь,
				Истина);
			
		КонецЦикла;
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуТары()
	
	ТаблицаТары.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПринятаяВозвратнаяТараОстатки.Номенклатура        КАК Номенклатура,
	|	ПринятаяВозвратнаяТараОстатки.Характеристика      КАК Характеристика,
	|	ПринятаяВозвратнаяТараОстатки.Партнер             КАК Партнер,
	|	ПринятаяВозвратнаяТараОстатки.ДокументПоступления КАК ДокументПоступления,
	|	ПринятаяВозвратнаяТараОстатки.КоличествоОстаток   КАК Количество,
	|	ПринятаяВозвратнаяТараОстатки.СуммаОстаток        КАК Сумма
	|ПОМЕСТИТЬ
	|	втПринятаяВозвратнаяТара
	|ИЗ
	|	РегистрНакопления.ПринятаяВозвратнаяТара.Остатки(
	|			,
	|			Партнер = &Партнер
	|			И ДокументПоступления.Организация = &Организация
	|			И ДокументПоступления.Контрагент = &Контрагент
	|			И ДокументПоступления.Организация = &Организация
	|			И (ДокументПоступления.Соглашение = &Соглашение Или Не ДокументПоступления Ссылка Документ.ПоступлениеТоваровУслуг)
	|			И ДокументПоступления.Валюта = &Валюта
	|		) КАК ПринятаяВозвратнаяТараОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПринятаяВозвратнаяТараДвижения.Номенклатура        КАК Номенклатура,
	|	ПринятаяВозвратнаяТараДвижения.Характеристика      КАК Характеристика,
	|	ПринятаяВозвратнаяТараДвижения.Партнер             КАК Партнер,
	|	ПринятаяВозвратнаяТараДвижения.ДокументПоступления КАК ДокументПоступления,
	|	ВЫБОР КОГДА ПринятаяВозвратнаяТараДвижения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			-ПринятаяВозвратнаяТараДвижения.Количество
	|		ИНАЧЕ
	|			ПринятаяВозвратнаяТараДвижения.Количество
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР КОГДА ПринятаяВозвратнаяТараДвижения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			-ПринятаяВозвратнаяТараДвижения.Сумма
	|		ИНАЧЕ
	|			ПринятаяВозвратнаяТараДвижения.Сумма
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	РегистрНакопления.ПринятаяВозвратнаяТара КАК ПринятаяВозвратнаяТараДвижения
	|ГДЕ
	|	ПринятаяВозвратнаяТараДвижения.Регистратор = &ДокументВозврата
	|;
	|ВЫБРАТЬ
	|	втПринятаяВозвратнаяТара.Номенклатура              КАК Номенклатура,
	|	втПринятаяВозвратнаяТара.Характеристика            КАК Характеристика,
	|	втПринятаяВозвратнаяТара.Партнер                   КАК Партнер,
	|	втПринятаяВозвратнаяТара.ДокументПоступления       КАК ДокументПоступления,
	|	втПринятаяВозвратнаяТара.ДокументПоступления.Номер КАК НомерПоступления,
	|	втПринятаяВозвратнаяТара.ДокументПоступления.Дата  КАК ДатаПоступления,
	|	втПринятаяВозвратнаяТара.ДокументПоступления.ДатаВозвратаМногооборотнойТары КАК ДатаВозврата,
	|	СУММА(втПринятаяВозвратнаяТара.Количество)         КАК Количество,
	|	СУММА(втПринятаяВозвратнаяТара.Сумма)              КАК Сумма,
	|	ВЫБОР
	|		КОГДА
	|			СУММА(втПринятаяВозвратнаяТара.Количество) = 0
	|		ТОГДА
	|			СУММА(втПринятаяВозвратнаяТара.Сумма)
	|		ИНАЧЕ
	|			СУММА(втПринятаяВозвратнаяТара.Сумма) / СУММА(втПринятаяВозвратнаяТара.Количество)
	|	КОНЕЦ КАК Цена
	|ИЗ
	|	втПринятаяВозвратнаяТара
	|СГРУППИРОВАТЬ ПО
	|	втПринятаяВозвратнаяТара.Номенклатура,
	|	втПринятаяВозвратнаяТара.Характеристика,
	|	втПринятаяВозвратнаяТара.Партнер,
	|	втПринятаяВозвратнаяТара.ДокументПоступления
	|ИМЕЮЩИЕ
	|	СУММА(втПринятаяВозвратнаяТара.Количество) > 0
	|УПОРЯДОЧИТЬ ПО
	|	ДатаВозврата ВОЗР,
	|	Номенклатура.Наименование ВОЗР,
	|	Характеристика.Наименование ВОЗР
	|";

	Запрос.УстановитьПараметр("Партнер",            Партнер);
	Запрос.УстановитьПараметр("Контрагент",         Контрагент);
	Запрос.УстановитьПараметр("Организация",        Организация);
	Запрос.УстановитьПараметр("Соглашение",         Соглашение);
	Запрос.УстановитьПараметр("Валюта",             Валюта);
	Запрос.УстановитьПараметр("ДокументВозврата",   ДокументВозврата);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ТаблицаТары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьИтогиПоТаблицеТоваров()
	
	ТоварыВыбраноКоличество = 0;
	ТоварыВыбраноСумма = 0;
	
	Для н=0 По ТаблицаТоваров.Количество()-1 Цикл
		
		Если ТаблицаТоваров[н].Выбран Тогда
			ТоварыВыбраноКоличество = ТоварыВыбраноКоличество + 1;
			ТоварыВыбраноСумма = ТоварыВыбраноСумма + ТаблицаТоваров[н].СуммаСНДС;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьИтогиПоТаблицеТары()
	
	ТараВыбраноКоличество = 0;
	ТараВыбраноСумма = 0;
	
	Для н=0 По ТаблицаТары.Количество()-1 Цикл
		
		Если ТаблицаТары[н].Выбран Тогда
			ТараВыбраноКоличество = ТараВыбраноКоличество + 1;
			ТараВыбраноСумма = ТараВыбраноСумма + ТаблицаТары[н].Сумма;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ВыбратьВсеТоварыНаСервере()
	
	Для Каждого СтрокаТаблицы Из ТаблицаТоваров Цикл
		СтрокаТаблицы.Выбран = Истина;
	КонецЦикла;
	
	ТоварыВыбраноКоличество = ТаблицаТоваров.Количество();
	ТоварыВыбраноСумма = ТаблицаТоваров.Итог("СуммаСНДС");
	
КонецПроцедуры

&НаСервере
Процедура ИсключитьВсеТоварыНаСервере()
	
	Для Каждого СтрокаТаблицы Из ТаблицаТоваров Цикл
		СтрокаТаблицы.Выбран = Ложь;
	КонецЦикла;
	
	ТоварыВыбраноКоличество = 0;
	ТоварыВыбраноСумма = 0;
	
КонецПроцедуры

&НаСервере
Процедура ВыбратьВсюТаруНаСервере()
	
	Для Каждого СтрокаТаблицы Из ТаблицаТары Цикл
		СтрокаТаблицы.Выбран = Истина;
	КонецЦикла;
	
	ТараВыбраноКоличество = ТаблицаТары.Количество();
	ТараВыбраноСумма = ТаблицаТары.Итог("Сумма");
	
КонецПроцедуры

&НаСервере
Процедура ИсключитьВсюТаруНаСервере()
	
	Для Каждого СтрокаТаблицы Из ТаблицаТары Цикл
		СтрокаТаблицы.Выбран = Ложь;
	КонецЦикла;
	
	ТараВыбраноКоличество = 0;
	ТараВыбраноСумма = 0;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьИнформационнуюНадписьОтборы()
	
	ИспользоватьПартнеровКакКонтрагентов = ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровКакКонтрагентов");
	
 	ТоварыИнформационнаяНадписьОтборы = НСтр("ru='Отбор по: %Организация%, %Партнер%, %Контрагент%, %Соглашение%, %Склад%';uk='Відбір за: %Организация%, %Партнер%, %Контрагент%, %Соглашение%, %Склад%'");
	Если ИспользоватьПартнеровКакКонтрагентов Тогда
		ТоварыИнформационнаяНадписьОтборы = СтрЗаменить(ТоварыИнформационнаяНадписьОтборы,", %Контрагент%", "");
	КонецЕсли;
	ТоварыИнформационнаяНадписьОтборы = СтрЗаменить(ТоварыИнформационнаяНадписьОтборы,"%Организация%", Организация);
	ТоварыИнформационнаяНадписьОтборы = СтрЗаменить(ТоварыИнформационнаяНадписьОтборы,"%Партнер%", Партнер);
	ТоварыИнформационнаяНадписьОтборы = СтрЗаменить(ТоварыИнформационнаяНадписьОтборы,"%Контрагент%", Контрагент);
	ТоварыИнформационнаяНадписьОтборы = СтрЗаменить(ТоварыИнформационнаяНадписьОтборы,"%Соглашение%", Соглашение);
	ТоварыИнформационнаяНадписьОтборы = СтрЗаменить(ТоварыИнформационнаяНадписьОтборы,"%Склад%", Склад);
	
 	ТараИнформационнаяНадписьОтборы = НСтр("ru='Отбор по: %Организация%, %Партнер%, %Контрагент%, %Валюта%, %Соглашение%';uk='Відбір за: %Организация%, %Партнер%, %Контрагент%, %Валюта%, %Соглашение%'");
	Если ИспользоватьПартнеровКакКонтрагентов Тогда
		ТараИнформационнаяНадписьОтборы = СтрЗаменить(ТараИнформационнаяНадписьОтборы,", %Контрагент%", "");
	КонецЕсли;
	ТараИнформационнаяНадписьОтборы = СтрЗаменить(ТараИнформационнаяНадписьОтборы,"%Организация%", Организация);
	ТараИнформационнаяНадписьОтборы = СтрЗаменить(ТараИнформационнаяНадписьОтборы,"%Партнер%", Партнер);
	ТараИнформационнаяНадписьОтборы = СтрЗаменить(ТараИнформационнаяНадписьОтборы,"%Контрагент%", Контрагент);
	ТараИнформационнаяНадписьОтборы = СтрЗаменить(ТараИнформационнаяНадписьОтборы,"%Соглашение%", Соглашение);
	ТараИнформационнаяНадписьОтборы = СтрЗаменить(ТараИнформационнаяНадписьОтборы,"%Валюта%", Валюта);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТекстЗапросаВозвраты()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПоступлениеТоваровУслуг.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ДокументыПоступления
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ПоступлениеТоваровУслуг.Проведен
	|	И ПоступлениеТоваровУслуг.Контрагент = &Контрагент
	|	И ПоступлениеТоваровУслуг.Организация = &Организация
	|	И ПоступлениеТоваровУслуг.Соглашение = &Соглашение
	|	И ПоступлениеТоваровУслуг.Партнер = &Партнер
	|	И ПоступлениеТоваровУслуг.НаправлениеДеятельности = &НаправлениеДеятельности
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументыПоступления.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ СсылкиНаПоступления
	|ИЗ
	|	ДокументыПоступления КАК ДокументыПоступления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	ПоступлениеТоваровУслугТовары.Характеристика КАК Характеристика,
	|	ПоступлениеТоваровУслугТовары.Назначение КАК Назначение,
	|	СУММА(ПоступлениеТоваровУслугТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(ПоступлениеТоваровУслугТовары.Количество) КАК Количество,
	|	ПоступлениеТоваровУслугТовары.Цена КАК Цена,
	|	ПоступлениеТоваровУслугТовары.Ссылка КАК ДокументПоступления,
	|	ПоступлениеТоваровУслугТовары.Упаковка КАК Упаковка,
	|	ПоступлениеТоваровУслугТовары.Сумма КАК Сумма,
	|	ПоступлениеТоваровУслугТовары.СтавкаНДС КАК СтавкаНДС,
	|	ПоступлениеТоваровУслугТовары.СуммаНДС КАК СуммаНДС,
	|	ПоступлениеТоваровУслугТовары.СуммаСНДС КАК СуммаСНДС,
	|	ПоступлениеТоваровУслугТовары.Склад КАК Склад,
	|	ПоступлениеТоваровУслугТовары.СуммаРучнойСкидки КАК СуммаРучнойСкидки,
	|	ПоступлениеТоваровУслугТовары.ПроцентРучнойСкидки КАК ПроцентРучнойСкидки,
	|	ПоступлениеТоваровУслугТовары.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ПоступлениеТоваровУслугТовары.Ссылка.Валюта КАК Валюта,
	|	ПоступлениеТоваровУслугТовары.Ссылка.Дата КАК ДатаПоступления,
	|	ПоступлениеТоваровУслугТовары.Ссылка.Номер КАК НомерПоступления,
	|	ПоступлениеТоваровУслугТовары.Ссылка.ВернутьМногооборотнуюТару КАК ВернутьМногооборотнуюТару
	|ПОМЕСТИТЬ ДанныеДокументовПоступления
	|ИЗ
	|	СсылкиНаПоступления КАК СсылкиНаПоступления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|		ПО (ПоступлениеТоваровУслугТовары.Ссылка = СсылкиНаПоступления.Ссылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровУслугТовары.Номенклатура,
	|	ПоступлениеТоваровУслугТовары.Характеристика,
	|	ПоступлениеТоваровУслугТовары.Назначение,
	|	ПоступлениеТоваровУслугТовары.Цена,
	|	ПоступлениеТоваровУслугТовары.Ссылка,
	|	ПоступлениеТоваровУслугТовары.Сумма,
	|	ПоступлениеТоваровУслугТовары.СтавкаНДС,
	|	ПоступлениеТоваровУслугТовары.СуммаНДС,
	|	ПоступлениеТоваровУслугТовары.СуммаСНДС,
	|	ПоступлениеТоваровУслугТовары.СуммаРучнойСкидки,
	|	ПоступлениеТоваровУслугТовары.ПроцентРучнойСкидки,
	|	ПоступлениеТоваровУслугТовары.Склад,
	|	ПоступлениеТоваровУслугТовары.Упаковка,
	|	ПоступлениеТоваровУслугТовары.Ссылка.ЦенаВключаетНДС,
	|	ПоступлениеТоваровУслугТовары.Ссылка.Валюта,
	|	ПоступлениеТоваровУслугТовары.Ссылка.Дата,
	|	ПоступлениеТоваровУслугТовары.Ссылка.Номер
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика, 
	|	Назначение,
	|	ДокументПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТаблицаПроверяемыеТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаПроверяемыеТовары.Характеристика КАК Характеристика,
	|	ТаблицаПроверяемыеТовары.Назначение КАК Назначение,
	|	СУММА(ТаблицаПроверяемыеТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	СУММА(ТаблицаПроверяемыеТовары.Количество) КАК Количество,
	|	ТаблицаПроверяемыеТовары.ДокументПоступления,
	|	СУММА(ТаблицаПроверяемыеТовары.Сумма) КАК Сумма,
	|	СУММА(ТаблицаПроверяемыеТовары.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ТаблицаПроверяемыеТовары.СуммаСНДС) КАК СуммаСНДС
	|ПОМЕСТИТЬ ДанныеДокументовВозврата
	|ИЗ
	|	ДокументыПоступления КАК ДокументыПоступления
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.Товары КАК ТаблицаПроверяемыеТовары
	|		ПО (ТаблицаПроверяемыеТовары.ДокументПоступления = ДокументыПоступления.Ссылка)
	|	И ТаблицаПроверяемыеТовары.Ссылка <> &ДокументВозврата
	|ГДЕ
	|	ТаблицаПроверяемыеТовары.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПроверяемыеТовары.Номенклатура,
	|	ТаблицаПроверяемыеТовары.Характеристика,
	|	ТаблицаПроверяемыеТовары.ДокументПоступления,
	|	ТаблицаПроверяемыеТовары.Назначение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика, 
	|	Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ЕСТЬNULL(ДанныеДокументовПоступления.Количество, 0) - ЕСТЬNULL(ДанныеДокументовВозврата.Количество, 0)) КАК Количество,
	|	ДанныеДокументовПоступления.Номенклатура КАК Номенклатура,
	|	ДанныеДокументовПоступления.Характеристика КАК Характеристика,
	|	ДанныеДокументовПоступления.Назначение КАК Назначение,
	|	СУММА(
	|			ВЫБОР
	|				КОГДА ДанныеДокументовПоступления.Упаковка ЕСТЬ NULL 
	|						ИЛИ ДанныеДокументовПоступления.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|					ТОГДА ЕСТЬNULL(ДанныеДокументовПоступления.Количество, 0) - ЕСТЬNULL(ДанныеДокументовВозврата.Количество, 0)
	|				ИНАЧЕ (ЕСТЬNULL(ДанныеДокументовПоступления.Количество, 0) - ЕСТЬNULL(ДанныеДокументовВозврата.Количество, 0)) / &ТекстЗапросаКоэффициентУпаковки
	|			КОНЕЦ
	|	) КАК КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА СУММА(ЕСТЬNULL(ДанныеДокументовПоступления.Количество, 0) - ЕСТЬNULL(ДанныеДокументовВозврата.Количество, 0)) = 0
	|			ТОГДА ДанныеДокументовПоступления.Цена
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДанныеДокументовПоступления.Упаковка ЕСТЬ NULL 
	|					ИЛИ ДанныеДокументовПоступления.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|				ТОГДА СУММА(ДанныеДокументовПоступления.Сумма) / СУММА((ЕСТЬNULL(ДанныеДокументовПоступления.Количество, 0)))
	|				ИНАЧЕ СУММА(ДанныеДокументовПоступления.Сумма) / (СУММА(ЕСТЬNULL(ДанныеДокументовПоступления.Количество, 0) / &ТекстЗапросаКоэффициентУпаковки))
	|		КОНЕЦ
	|	КОНЕЦ КАК Цена,
	|	ДанныеДокументовПоступления.Упаковка КАК Упаковка,
	|	СУММА(ДанныеДокументовПоступления.Сумма - ЕСТЬNULL(ДанныеДокументовВозврата.Сумма, 0)) КАК Сумма,
	|	СУММА(ДанныеДокументовПоступления.СуммаНДС - ЕСТЬNULL(ДанныеДокументовВозврата.СуммаНДС, 0)) КАК СуммаНДС,
	|	СУММА(ДанныеДокументовПоступления.СуммаСНДС - ЕСТЬNULL(ДанныеДокументовВозврата.СуммаСНДС, 0)) КАК СуммаСНДС,
	|	ДанныеДокументовПоступления.Склад КАК Склад,
	|	ДанныеДокументовПоступления.ДатаПоступления КАК ДатаПоступления,
	|	ДанныеДокументовПоступления.НомерПоступления КАК НомерПоступления,
	|	ДанныеДокументовПоступления.СтавкаНДС КАК СтавкаНДС,
	|	ДанныеДокументовПоступления.ДокументПоступления КАК ДокументПоступления,
	|	ДанныеДокументовПоступления.ДокументПоступления.Валюта КАК ВалютаПоступления,
	|	ДанныеДокументовПоступления.ДокументПоступления.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ИЗ
	|	ДанныеДокументовПоступления КАК ДанныеДокументовПоступления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеДокументовВозврата КАК ДанныеДокументовВозврата
	|		ПО ДанныеДокументовПоступления.Номенклатура = ДанныеДокументовВозврата.Номенклатура
	|			И ДанныеДокументовПоступления.Характеристика = ДанныеДокументовВозврата.Характеристика
	|			И ДанныеДокументовПоступления.Назначение = ДанныеДокументовВозврата.Назначение
	|			И (ДанныеДокументовВозврата.ДокументПоступления = ДанныеДокументовПоступления.ДокументПоступления)
	|ГДЕ
	|	ЕСТЬNULL(ДанныеДокументовПоступления.Количество, 0) - ЕСТЬNULL(ДанныеДокументовВозврата.Количество,0) > 0
	|	И ВЫБОР 
	|		КОГДА НЕ ДанныеДокументовПоступления.ВернутьМногооборотнуюТару ТОГДА
	|			ДанныеДокументовПоступления.Номенклатура.ТипНоменклатуры В
	|				(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|		ИНАЧЕ ДанныеДокументовПоступления.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар))
	|	КОНЕЦ
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокументовПоступления.Номенклатура,
	|	ДанныеДокументовПоступления.Характеристика,
	|	ДанныеДокументовПоступления.Назначение,
	|	ДанныеДокументовПоступления.Цена,
	|	ДанныеДокументовПоступления.Упаковка,
	|	ДанныеДокументовПоступления.Склад,
	|	ДанныеДокументовПоступления.ДатаПоступления,
	|	ДанныеДокументовПоступления.НомерПоступления,
	|	ДанныеДокументовПоступления.СтавкаНДС,
	|	ДанныеДокументовПоступления.ДокументПоступления,
	|	ДанныеДокументовПоступления.ДокументПоступления.Валюта,
	|	ДанныеДокументовПоступления.ДокументПоступления.ЦенаВключаетНДС
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПоступления УБЫВ";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ДанныеДокументовПоступления.Упаковка",
		"ДанныеДокументовПоступления.Номенклатура"));
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервереБезКонтекста
Функция ТекстЗапросаЗакупкаПоИмпорту()
	
	Возврат "ВЫБРАТЬ
		|	ТоварыОрганизацийКОформлениюОстатки.ВидЗапасов КАК ВидЗапасов,
		|	ТоварыОрганизацийКОформлениюОстатки.ДокументПоступления КАК ДокументПоступления,
		|	ТоварыОрганизацийКОформлениюОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	ТоварыОрганизацийКОформлениюОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
		|ПОМЕСТИТЬ ВТОстатки
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизацийКОформлению.Остатки(
		|			&Дата,
		|			Организация = &Организация
		|				И Поставщик = &Партнер
		|				И ВЫБОР
		|					КОГДА &ОтборПоСкладу
		|						ТОГДА АналитикаУчетаНоменклатуры.Склад = &Склад
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ) КАК ТоварыОрганизацийКОформлениюОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументПоступления,
		|	ВидЗапасов,
		|	АналитикаУчетаНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПоступлениеТоваровУслуг.Ссылка КАК ДокументПоступления,
		|	ПоступлениеТоваровУслуг.Дата КАК Дата,
		|	ПоступлениеТоваровУслуг.Номер КАК Номер,
		|	ПоступлениеТоваровУслуг.Валюта КАК Валюта,
		|	ПоступлениеТоваровУслугТовары.Склад КАК Склад,
		|	ПоступлениеТоваровУслуг.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
		|	ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
		|	ПоступлениеТоваровУслугТовары.НоменклатураПоставщика КАК НоменклатураПоставщика,
		|	ПоступлениеТоваровУслугТовары.Характеристика КАК Характеристика,
		|	ПоступлениеТоваровУслугТовары.ВидЗапасов КАК ВидЗапасов,
		|	ПоступлениеТоваровУслугТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	СУММА(ПоступлениеТоваровУслугТовары.Количество) КАК КоличествоПоступления,
		|	ПоступлениеТоваровУслугТовары.СтавкаНДС КАК СтавкаНДС,
		|	СУММА(ПоступлениеТоваровУслугТовары.Сумма) КАК Сумма,
		|	СУММА(ПоступлениеТоваровУслугТовары.СуммаНДС) КАК СуммаНДС,
		|	СУММА(ПоступлениеТоваровУслугТовары.СуммаСНДС) КАК СуммаСНДС
		|ПОМЕСТИТЬ ВтПоступления
		|ИЗ
		|	ВТОстатки КАК ВТОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
		|			ПО ПоступлениеТоваровУслугТовары.Ссылка = ПоступлениеТоваровУслуг.Ссылка
		|		ПО ВТОстатки.ДокументПоступления = ПоступлениеТоваровУслугТовары.Ссылка
		|			И ВТОстатки.ВидЗапасов = ПоступлениеТоваровУслугТовары.ВидЗапасов
		|ГДЕ
		|	ВТОстатки.ДокументПоступления <> ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоступлениеТоваровУслуг.Ссылка,
		|	ПоступлениеТоваровУслуг.Дата,
		|	ПоступлениеТоваровУслуг.Номер,
		|	ПоступлениеТоваровУслугТовары.Склад,
		|	ПоступлениеТоваровУслуг.Валюта,
		|	ПоступлениеТоваровУслуг.ЦенаВключаетНДС,
		|	ПоступлениеТоваровУслугТовары.Номенклатура,
		|	ПоступлениеТоваровУслугТовары.НоменклатураПоставщика,
		|	ПоступлениеТоваровУслугТовары.Характеристика,
		|	ПоступлениеТоваровУслугТовары.ВидЗапасов,
		|	ПоступлениеТоваровУслугТовары.АналитикаУчетаНоменклатуры,
		|	ПоступлениеТоваровУслугТовары.СтавкаНДС
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументПоступления,
		|	ВидЗапасов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВтПоступления.ДокументПоступления КАК ДокументПоступления,
		|	ВтПоступления.Валюта КАК ВалютаПоступления,
		|	ЕСТЬNULL(ВтПоступления.Склад, КлючиАналитикиУчетаНоменклатуры.Склад) КАК Склад,
		|	ВтПоступления.Дата КАК ДатаПоступления,
		|	ВтПоступления.Номер КАК НомерПоступления,
		|	ВтПоступления.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
		|	ЕСТЬNULL(ВтПоступления.Номенклатура, КлючиАналитикиУчетаНоменклатуры.Номенклатура) КАК Номенклатура,
		|	ВтПоступления.НоменклатураПоставщика КАК НоменклатураПоставщика,
		|	ЕСТЬNULL(ВтПоступления.Характеристика, КлючиАналитикиУчетаНоменклатуры.Характеристика) КАК Характеристика,
		|	ВТОстатки.КоличествоОстаток КАК Количество,
		|	ВТОстатки.КоличествоОстаток КАК КоличествоУпаковок,
		|	КлючиАналитикиУчетаНоменклатуры.Серия КАК Серия,
		|	НЕОПРЕДЕЛЕНО КАК Упаковка,
		|	0 КАК Цена,
		|	0 КАК ПроцентРучнойСкидки,
		|	0 КАК СуммаРучнойСкидки,
		|	ВтПоступления.СтавкаНДС КАК СтавкаНДС,
		|	ЕСТЬNULL(ВтПоступления.Сумма, 0) / ЕСТЬNULL(ВтПоступления.КоличествоПоступления, 1) * ВТОстатки.КоличествоОстаток КАК Сумма,
		|	ЕСТЬNULL(ВтПоступления.СуммаНДС, 0) / ЕСТЬNULL(ВтПоступления.КоличествоПоступления, 1) * ВТОстатки.КоличествоОстаток КАК СуммаНДС,
		|	ЕСТЬNULL(ВтПоступления.СуммаСНДС, 0) / ЕСТЬNULL(ВтПоступления.КоличествоПоступления, 1) * ВТОстатки.КоличествоОстаток КАК СуммаСНДС,
		|	ВТОстатки.ВидЗапасов КАК ВидЗапасов,
		|	ВТОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
		|ИЗ
		|	ВТОстатки КАК ВТОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтПоступления КАК ВтПоступления
		|		ПО ВтПоступления.ДокументПоступления = ВТОстатки.ДокументПоступления
		|			И ВтПоступления.АналитикаУчетаНоменклатуры = ВТОстатки.АналитикаУчетаНоменклатуры
		|			И ВТОстатки.ВидЗапасов = ВтПоступления.ВидЗапасов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
		|		ПО ВТОстатки.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВтПоступления.ДокументПоступления";
	
КонецФункции

#КонецОбласти

#КонецОбласти
