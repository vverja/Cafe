
#Область ПрограммныйИнтерфейс

// Находит строку в дереве не клиенте
//
// Параметры
//  КоллекцияСтрок  - ДанныеФормыКоллекцияЭлементовДерева.  - коллекция в которой ищем строку
//  ИмяКолонки      - Строка - колонка, в которой нужно искать
//  Значение        - Произвольный - значение, которое ищем
//
// Возвращаемое значение:
//   ДанныеФормыДерева, Неопределено  - найденная строка, или Неопределено, если не найдено
//
Функция НайтиСтрокуВДанныхФормыДерево(КоллекцияСтрок, ИмяКолонки, Значение) Экспорт
	
	Для каждого Строка Из КоллекцияСтрок Цикл
	
		Если ВРег(Строка[ИмяКолонки]) = ВРег(Значение) Тогда
			Возврат Строка;
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

// Находит строки в дереве не клиенте
//
// Параметры
//  КоллекцияСтрок  - ДанныеФормыКоллекцияЭлементовДерева.  - коллекция в которой ищем строку
//  ИмяКолонки      - Строка - колонка, в которой нужно искать
//  Значение        - Произвольный - значение, которое ищем
//
// Возвращаемое значение:
//   Массив  - массив найденных строк
//
Функция НайтиСтрокиВДанныхФормыДерево(КоллекцияСтрок, ИмяКолонки, Значение) Экспорт
	
	НайденныеСтроки = Новый Массив;
	
	Для каждого Строка Из КоллекцияСтрок Цикл
	
		Если ВРег(Строка[ИмяКолонки]) = ВРег(Значение) Тогда
			НайденныеСтроки.Добавить(Строка);
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат НайденныеСтроки;
	
КонецФункции

// Инициализирует структуру сообщения по шаблону, которую должна вернуть внешняя обработка
//
// Возвращаемое значение:
//   Структура  - созданная структура
//
Функция ИнициализироватьСтруктуруСообщения() Экспорт
	
	СтруктураСообщения = Новый Структура;
	СтруктураСообщения.Вставить("ТекстСообщенияSMS", "");
	СтруктураСообщения.Вставить("ТемаПисьма", "");
	СтруктураСообщения.Вставить("ТекстПисьма", "");
	СтруктураСообщения.Вставить("СтруктураВложений", Новый Структура);
	СтруктураСообщения.Вставить("ТекстПисьмаHTML", "<HTML></HTML>");
	
	Возврат СтруктураСообщения;
	
КонецФункции

// Инициализирует структуру Получатели для заполнения возможных получателей сообщения
//
// Возвращаемое значение:
//   Структура  - созданная структура
//
Функция ИнициализироватьСтруктуруПолучатели() Экспорт
	
	Возврат Новый Структура("Получатель", Новый Массив);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьПараметрыТекстаСообщения(ТекстСообщения) Экспорт

	МассивПараметров = Новый Массив;
	
	Текст = ТекстСообщения;
	Позиция = СтрНайти(Текст, "[");
	Пока Позиция > 0 Цикл
		Текст = Сред(Текст, Позиция + 1);
		Позиция = СтрНайти(Текст, "]");
		Если Позиция > 0 Тогда
			НайденныйПараметр = Лев(Текст,Позиция-1);
			Если МассивПараметров.Найти(НайденныйПараметр) = Неопределено Тогда
				МассивПараметров.Добавить(НайденныйПараметр);
			КонецЕсли;
			Текст = Сред(Текст, Позиция + 1);
		КонецЕсли;
		Позиция = СтрНайти(Текст, "[");
	КонецЦикла;
	
	СоответствиеПараметров = Новый Соответствие;
	Для каждого ЭлементаМассиваПараметров Из МассивПараметров Цикл
	
		МассивРазобранныйПараметр = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ЭлементаМассиваПараметров,".");
		Если МассивРазобранныйПараметр.Количество() <> 2 Тогда
			Продолжить;
		КонецЕсли;
		
		ЭлементСоответствия = СоответствиеПараметров.Получить(МассивРазобранныйПараметр[0]);
		Если ЭлементСоответствия = Неопределено Тогда
			МассивПараметровПоТипу = Новый Массив;
			МассивПараметровПоТипу.Добавить(МассивРазобранныйПараметр[1]);
			СоответствиеПараметров.Вставить(МассивРазобранныйПараметр[0], МассивПараметровПоТипу);
		Иначе
			ЭлементСоответствия.Добавить(МассивРазобранныйПараметр[1]);
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат СоответствиеПараметров;
	
КонецФункции

Процедура ДобавитьПараметрШаблона(ТаблицаПараметров, ИмяПараметра, ОписаниеТипа, ЭтоПредопределенныйПараметр, ПредставлениеПараметра = "") Экспорт

	НоваяСтрока                             = ТаблицаПараметров.Добавить();
	НоваяСтрока.ИмяПараметра                = ИмяПараметра;
	НоваяСтрока.ОписаниеТипа                = ОписаниеТипа;
	НоваяСтрока.ЭтоПредопределенныйПараметр = ЭтоПредопределенныйПараметр;
	НоваяСтрока.ПредставлениеПараметра      = ?(ПустаяСтрока(ПредставлениеПараметра),ИмяПараметра, ПредставлениеПараметра);
	
КонецПроцедуры

#КонецОбласти
