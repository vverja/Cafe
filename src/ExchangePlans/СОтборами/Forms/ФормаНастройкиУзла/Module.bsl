#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОбменДаннымиСервер.ФормаНастройкиУзлаПриСозданииНаСервере(ЭтаФорма, "СОтборами");
	
	Если ВыгружатьИнформативныеОстатки = 2 Тогда
		РежимОтправкиСкладов = "ИнформативныеОстаткиПоВыбранным";
	ИначеЕсли ВыгружатьИнформативныеОстатки = 1 Тогда
		РежимОтправкиСкладов = "ИнформативныеОстаткиПоВсемСкладам";
	Иначе
		РежимОтправкиСкладов = "БезИнформативныхОстатков";
	КонецЕсли;
	
	ОбновитьНаименованиеКомандФормы();
	
	УстановитьВидимостьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	ОбменДаннымиКлиент.ФормаНастройкиПередЗакрытием(Отказ, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ОбновитьДанныеОбъекта(ВыбранноеЗначение);
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьОтборПоОрганизациямПриИзменении(Элемент)
	УстановитьВидимостьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОтборПоВидамЦенПриИзменении(Элемент)
	УстановитьВидимостьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ИнформОстаткиНеОтправлятьПриИзменении(Элемент)
	УстановитьВидимостьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ИнформОстаткиОтправлятьВсеПриИзменении(Элемент)
	УстановитьВидимостьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ИнформОстаткиВыбранныеСкладыПриИзменении(Элемент)
	УстановитьВидимостьНаСервере();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьПодразделения(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ВыбираемыйСправочник",     "СтруктураПредприятия");
	ПараметрыФормы.Вставить("ТаблицаЗаполнения",        "Подразделения");
	ПараметрыФормы.Вставить("КолонкаЗаполнения",        "Подразделение");
	ПараметрыФормы.Вставить("ЗаголовокФормыВыбора",     НСтр("ru='Подразделения, по которым будет происходить фильтрация данных';uk='Підрозділи, за якими буде відбуватися фільтрація даних'"));
	ПараметрыФормы.Вставить("ТаблицаВыбранныхЗначений", СформироватьТаблицуВыбранныхЗначений(ПараметрыФормы));
	ПараметрыФормы.Вставить("РежимУпорядочивания",      "ИЕРАРХИЯ");
	
	ОткрытьФорму("ПланОбмена.СОтборами.Форма.ФормаВыбораЗначений",
		ПараметрыФормы,
		ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьОрганизации(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ВыбираемыйСправочник",     "Организации");
	ПараметрыФормы.Вставить("ТаблицаЗаполнения",        "Организации");
	ПараметрыФормы.Вставить("КолонкаЗаполнения",        "Организация");
	ПараметрыФормы.Вставить("ЗаголовокФормыВыбора",     НСтр("ru='Отправлять данные по организациям';uk='Надсилати дані за організаціями'"));
	ПараметрыФормы.Вставить("ТаблицаВыбранныхЗначений", СформироватьТаблицуВыбранныхЗначений(ПараметрыФормы));
	ПараметрыФормы.Вставить("РежимУпорядочивания",      "");
	
	ОткрытьФорму("ПланОбмена.СОтборами.Форма.ФормаВыбораЗначений",
		ПараметрыФормы,
		ЭтаФорма);
		
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВидыЦен(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ВыбираемыйСправочник",     "ВидыЦен");
	ПараметрыФормы.Вставить("ТаблицаЗаполнения",        "ВидыЦен");
	ПараметрыФормы.Вставить("КолонкаЗаполнения",        "ВидЦены");
	ПараметрыФормы.Вставить("ЗаголовокФормыВыбора",     НСтр("ru='Отправлять информацию о ценах по видам цен';uk='Відправляти інформацію про ціни за видами цін'"));
	ПараметрыФормы.Вставить("ТаблицаВыбранныхЗначений", СформироватьТаблицуВыбранныхЗначений(ПараметрыФормы));
	ПараметрыФормы.Вставить("РежимУпорядочивания",      "");
	
	ОткрытьФорму("ПланОбмена.СОтборами.Форма.ФормаВыбораЗначений",
		ПараметрыФормы,
		ЭтаФорма);
		
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьСклады(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ВыбираемыйСправочник",     "Склады");
	ПараметрыФормы.Вставить("ТаблицаЗаполнения",        "ИнформативныеОстаткиПоСкладам");
	ПараметрыФормы.Вставить("КолонкаЗаполнения",        "Склад");
	ПараметрыФормы.Вставить("ЗаголовокФормыВыбора",     НСтр("ru='Отправлять информативные остатки по складам';uk='Відправляти інформативні залишки по складах'"));
	ПараметрыФормы.Вставить("ТаблицаВыбранныхЗначений", СформироватьТаблицуВыбранныхЗначений(ПараметрыФормы));
	ПараметрыФормы.Вставить("РежимУпорядочивания",      "ИЕРАРХИЯ");
	
	ОткрытьФорму("ПланОбмена.СОтборами.Форма.ФормаВыбораЗначений",
		ПараметрыФормы,
		ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура КомандаОК(Команда)
	
	Если Не ИспользоватьОтборПоОрганизациям
		И Организации.Количество() > 0 Тогда
		Организации.Очистить();
	КонецЕсли;
	
	ИспользоватьОтборПоОрганизациям = Не Организации.Количество() = 0;;
	
	Если Не ИспользоватьОтборПоВидамЦен
		И ВидыЦен.Количество() > 0 Тогда
		ВидыЦен.Очистить();
	КонецЕсли;
	
	ИспользоватьОтборПоВидамЦен = Не ВидыЦен.Количество() = 0;
	
	Если РежимОтправкиСкладов = "ИнформативныеОстаткиПоВыбранным"
		И ИнформативныеОстаткиПоСкладам.Количество() > 0 Тогда
		ВыгружатьИнформативныеОстатки = 2;
	Иначе
		
		ИнформативныеОстаткиПоСкладам.Очистить();
		
		Если РежимОтправкиСкладов = "ИнформативныеОстаткиПоВсемСкладам" Тогда
			ВыгружатьИнформативныеОстатки = 1;
		Иначе
			ВыгружатьИнформативныеОстатки = 0;
		КонецЕсли;
		
	КонецЕсли;
	
	// Сохранение настроек
	ОбменДаннымиКлиент.ФормаНастройкиУзлаКомандаЗакрытьФорму(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаСервере
Процедура УстановитьВидимостьНаСервере()
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ВыбратьОрганизации",
		"Доступность",
		ИспользоватьОтборПоОрганизациям);
		
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ВыбратьВидыЦен",
		"Доступность",
		ИспользоватьОтборПоВидамЦен);
		
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ВыбратьСклады",
		"Доступность",
		РежимОтправкиСкладов = "ИнформативныеОстаткиПоВыбранным");

	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ГруппаОтборПоОрганизациям",
		"Видимость",
		ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций"));
		
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ГруппаОтборПоВидамЦен",
		"Видимость",
		ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВидовЦен"));
		
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ГруппаОтборПоИнформативнымОстаткам",
		"Видимость",
		ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоСкладов"));

	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ГруппаФильтры",
		"Видимость",
		ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций") 
		Или ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВидовЦен")
		Или ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоСкладов"));
		
	Элементы.ГруппаОтборы.ОтображатьЗаголовок = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВидовЦен")
		Или ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций");
		
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ГруппаВсеОтборы",
		"Доступность",
		ПланыОбмена.ГлавныйУзел() = Неопределено);

КонецПроцедуры

&НаСервере
Функция СформироватьТаблицуВыбранныхЗначений(ПараметрыФормы)
	
	ТабличнаяЧасть           = ЭтаФорма[ПараметрыФормы.ТаблицаЗаполнения];
	ТаблицаВыбранныхЗначений = ТабличнаяЧасть.Выгрузить(,ПараметрыФормы.КолонкаЗаполнения);
	Возврат ПоместитьВоВременноеХранилище(ТаблицаВыбранныхЗначений, УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Процедура ОбновитьДанныеОбъекта(СтруктураПараметров)
	
	ЭтаФорма[СтруктураПараметров.ТаблицаЗаполнения].Очистить();
	
	СписокВыбранныхЗначений = ПолучитьИзВременногоХранилища(СтруктураПараметров.АдресТаблицыВоВременномХранилище);
	
	Если СписокВыбранныхЗначений.Количество() > 0 Тогда
		СписокВыбранныхЗначений.Колонки.Представление.Имя = СтруктураПараметров.КолонкаЗаполнения;
		ЭтаФорма[СтруктураПараметров.ТаблицаЗаполнения].Загрузить(СписокВыбранныхЗначений);
	КонецЕсли;
	
	ОбновитьНаименованиеКомандФормы();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаименованиеКомандФормы()
	
	//Обновим заголовок выбранных подразделений
	Если Подразделения.Количество() > 0 Тогда
		
		ВыбранныеПодразделения = Подразделения.Выгрузить();
		ВыбранныеПодразделения.Колонки.Подразделение.Имя = "Ссылка";
		НовыйЗаголовокПодразделений = СформироватьТекстовоеПредставлениеКоллекции(ВыбранныеПодразделения);
		
	Иначе
		
		НовыйЗаголовокПодразделений = НСтр("ru='Выбрать подразделения';uk='Вибрати підрозділи'");
		
	КонецЕсли;
	
	Элементы.ВыбратьПодразделения.Заголовок = НовыйЗаголовокПодразделений;
	
	
	//Обновим заголовок выбранных организаций
	Если Организации.Количество() > 0 Тогда
		
		ВыбранныеОрганизации = Организации.Выгрузить();
		ВыбранныеОрганизации.Колонки.Организация.Имя = "Ссылка";
		НовыйЗаголовокОрганизаций = СформироватьТекстовоеПредставлениеКоллекции(ВыбранныеОрганизации);
		
	Иначе
		
		НовыйЗаголовокОрганизаций = НСтр("ru='Выбрать организации';uk='Вибрати організації'");
		
	КонецЕсли;
	
	Элементы.ВыбратьОрганизации.Заголовок = НовыйЗаголовокОрганизаций;
	
	//Обновим заголовок выбранных видов цен
	Если ВидыЦен.Количество() > 0 Тогда
		
		ВыбранныеВидыЦен = ВидыЦен.Выгрузить();
		ВыбранныеВидыЦен.Колонки.ВидЦены.Имя = "Ссылка";
		НовыйЗаголовокВидовЦен = СформироватьТекстовоеПредставлениеКоллекции(ВыбранныеВидыЦен);
		
	Иначе
		
		НовыйЗаголовокВидовЦен = НСтр("ru='Выбрать виды цен';uk='Вибрати види цін'");
		
	КонецЕсли;
	
	Элементы.ВыбратьВидыЦен.Заголовок = НовыйЗаголовокВидовЦен;
	
	//Обновим заголовок выбранных складов
	Если ИнформативныеОстаткиПоСкладам.Количество() > 0 Тогда
		
		ВыбранныеСклады = ИнформативныеОстаткиПоСкладам.Выгрузить();
		ВыбранныеСклады.Колонки.Склад.Имя = "Ссылка";
		НовыйЗаголовокСкладов = СформироватьТекстовоеПредставлениеКоллекции(ВыбранныеСклады);
		
	Иначе
		
		НовыйЗаголовокСкладов = НСтр("ru='Выбрать склады';uk='Вибрати склади'");
		
	КонецЕсли;
	
	Элементы.ВыбратьСклады.Заголовок = НовыйЗаголовокСкладов;

	
КонецПроцедуры

&НаСервере
Функция СформироватьТекстовоеПредставлениеКоллекции(Коллекция)
	
	СтрокаПредставления = "";
	
	КоличествоВыводимыхЭлементов = Коллекция.Количество();
	
	Если КоличествоВыводимыхЭлементов = 0 Тогда
		
		Возврат "";
		
	Иначе
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ТаблицаВыбранныхЗначений.Ссылка КАК СсылкаНаОбъект
		                      |ПОМЕСТИТЬ ТаблицаВыбранныхЗначений
		                      |ИЗ
		                      |	&ТаблицаВыбранныхЗначений КАК ТаблицаВыбранныхЗначений
		                      |
		                      |ИНДЕКСИРОВАТЬ ПО
		                      |	СсылкаНаОбъект
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	ТаблицаВыбранныхЗначений.СсылкаНаОбъект,
		                      |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПодчиненныеЭлементы.Ссылка) КАК ЕстьПодчиненные
		                      |ИЗ
		                      |	ТаблицаВыбранныхЗначений КАК ТаблицаВыбранныхЗначений
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктураПредприятия КАК ПодчиненныеЭлементы
		                      |		ПО (ПодчиненныеЭлементы.Родитель = ТаблицаВыбранныхЗначений.СсылкаНаОбъект)
		                      |
		                      |СГРУППИРОВАТЬ ПО
		                      |	ТаблицаВыбранныхЗначений.СсылкаНаОбъект");
			
		Запрос.УстановитьПараметр("ТаблицаВыбранныхЗначений", Коллекция);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
		
			ОбъектКоллекции = Выборка.СсылкаНаОбъект;
			
			СтрокаПредставления = СтрокаПредставления 
				+ ОбъектКоллекции 
				+ ?(Выборка.ЕстьПодчиненные > 0, НСтр("ru=' (Включая подчиненные)';uk=' (Включаючи підпорядковані)'"), "")
				+ ", ";
			
		КонецЦикла;
		
		СтрокаПредставления = Лев(СтрокаПредставления, СтрДлина(СтрокаПредставления) - 2);
		
	КонецЕсли;
	
	Возврат СтрокаПредставления;
	
КонецФункции

#КонецОбласти

#КонецОбласти
