&НаКлиенте
Перем ВыполняетсяЗакрытие;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	Если ПолучитьФункциональнуюОпцию("УправлениеТорговлей") Тогда
		НастроитьОтображаниеФормыУТУП();
	КонецЕсли;
	
	ЗаполнитьПредустановленныеОписания();
	
	ЗагрузитьНастройки();
	
	УстановитьВидимостьИДоступность();
	
	УстановитьВидимостьСтраниц(Элементы.СтраницаОсновныеНастройки.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьСтраницыИОписания();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	СохранитьСтатусыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_НаборКонстант" Или ИмяСобытия = "Запись_Склады" Тогда
			УстановитьВидимостьИДоступность();
			УстановитьСтраницыИОписания();
	КонецЕсли;
		
	Если ИмяСобытия = "Запись_МножествоВидовНоменклатуры" Тогда
			УстановитьВидимостьИДоступность();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Страница основные настройки.

&НаКлиенте
Процедура ОтметкаОрганизацииИВалютыНажатие(Элемент)
	
	ОтметкаОрганизацииИВалюты = Не ОтметкаОрганизацииИВалюты;
	
	УстановитьСтраницуОрганизацииИВалюты();
	
	Массив = Новый Массив;
	
	Массив.Добавить("ГруппаНоменклатура");
	Массив.Добавить("ГруппаЗапасыИЗакупки");
	Массив.Добавить("ГруппаМаркетингИПродажи");
	Массив.Добавить("ГруппаПроизводство");
	Массив.Добавить("ГруппаРемонты");
	
	Массив.Добавить("ГруппыДоступа");
	Массив.Добавить("ВводНачальныхОстатков");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаОрганизацииНажатие(Элемент)
	
	ОтметкаОрганизации = Не ОтметкаОрганизации;
	
	УстановитьСтраницуОрганизации();
	
	Массив = Новый Массив;
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаКассыНажатие(Элемент)
	
	ОтметкаКассы = Не ОтметкаКассы;
	
	УстановитьСтраницуКассы();
	
	Массив = Новый Массив;
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаБанковскиеСчетаНажатие(Элемент)
	
	ОтметкаБанковскиеСчета = Не ОтметкаБанковскиеСчета;
	
	УстановитьСтраницуБанковскиеСчета();
	
	Массив = Новый Массив;
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаСтруктураПредприятияНажатие(Элемент)
	
	ОтметкаСтруктураПредприятия = Не ОтметкаСтруктураПредприятия;
	
	УстановитьСтраницуСтруктураПредприятия();
	
	Массив = Новый Массив;
	Массив.Добавить("ГруппаНоменклатура");
	Массив.Добавить("ГруппаЗапасыИЗакупки");
	Массив.Добавить("ГруппаМаркетингИПродажи");
	Массив.Добавить("ГруппаПроизводство");
	Массив.Добавить("ГруппаРемонты");
	
	Массив.Добавить("ГруппыДоступа");
	Массив.Добавить("ВводНачальныхОстатков");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаНастройкиПользователейИПравНажатие(Элемент)
	
	ОтметкаНастройкиПользователейИПрав = Не ОтметкаНастройкиПользователейИПрав;
	
	УстановитьСтраницуНастройкиПользователейИПрав();
	
	Массив = Новый Массив;
	Массив.Добавить("ГруппаНоменклатура");
	Массив.Добавить("ГруппаЗапасыИЗакупки");
	Массив.Добавить("ГруппаМаркетингИПродажи");
	Массив.Добавить("ГруппаПроизводство");
	Массив.Добавить("ГруппаРемонты");
	
	Массив.Добавить("ГруппыДоступа");
	Массив.Добавить("ВводНачальныхОстатков");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаГруппаНоменклатураНажатие(Элемент)
	
	ОтметкаГруппаНоменклатура = Не ОтметкаГруппаНоменклатура;
	
	УстановитьСтраницуГруппаНоменклатура();
	
	Массив = Новый Массив;
	Массив.Добавить("ГруппаЗапасыИЗакупки");
	Массив.Добавить("ГруппаМаркетингИПродажи");
	Массив.Добавить("ГруппаПроизводство");
	Массив.Добавить("ГруппаРемонты");
	
	Массив.Добавить("ГруппыДоступа");
	Массив.Добавить("ВводНачальныхОстатков");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаГруппаЗапасыИЗакупкиНажатие(Элемент)
	
	ОтметкаГруппаЗапасыИЗакупки = Не ОтметкаГруппаЗапасыИЗакупки;
	
	УстановитьСтраницуГруппаЗапасыИЗакупки();
	
	Массив = Новый Массив;
	Массив.Добавить("ГруппыДоступа");
	Массив.Добавить("ВводНачальныхОстатков");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаГруппаМаркетингИПродажиНажатие(Элемент)
	
	ОтметкаГруппаМаркетингИПродажи = Не ОтметкаГруппаМаркетингИПродажи;
	
	УстановитьСтраницуГруппаМаркетингИПродажи();
	
	Массив = Новый Массив;
	Массив.Добавить("ГруппыДоступа");
	Массив.Добавить("ВводНачальныхОстатков");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаГруппаПроизводствоНажатие(Элемент)
	
	ОтметкаГруппаПроизводство = Не ОтметкаГруппаПроизводство;
	
	УстановитьСтраницуГруппаПроизводство();
	
	Массив = Новый Массив;
	Массив.Добавить("ГруппыДоступа");
	Массив.Добавить("ВводНачальныхОстатков");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаГруппаРемонтыНажатие(Элемент)
	
	ОтметкаГруппаРемонты = Не ОтметкаГруппаРемонты;
	
	УстановитьСтраницуГруппаРемонты();
	
	Массив = Новый Массив;
	Массив.Добавить("ГруппыДоступа");
	Массив.Добавить("ВводНачальныхОстатков");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаГруппыДоступаНажатие(Элемент)
	
	ОтметкаГруппыДоступа = Не ОтметкаГруппыДоступа;
	
	УстановитьСтраницуГруппыДоступа();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаВводНачальныхОстатковНажатие(Элемент)
	
	ОтметкаВводНачальныхОстатков = Не ОтметкаВводНачальныхОстатков;
	
	УстановитьСтраницуВводНачальныхОстатков();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

// Страница основные настройки номенклатуры.

&НаКлиенте
Процедура ОтметкаНастройкиНоменклатурыНажатие(Элемент)
	
	ОтметкаНастройкиНоменклатуры = Не ОтметкаНастройкиНоменклатуры;
	
	УстановитьСтраницуНастройкиНоменклатуры();
	
	Массив = Новый Массив;
	Массив.Добавить("ВидыНоменклатурыОсновные");
	Массив.Добавить("НоменклатураОсновные");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаАдминистрированиеСкладОсновныеНажатие(Элемент)
	
	ОтметкаАдминистрированиеСкладОсновные = Не ОтметкаАдминистрированиеСкладОсновные;
	
	УстановитьСтраницуАдминистрированиеСкладОсновные();
	
	Массив = Новый Массив;
	
	Массив.Добавить("ВидыНоменклатурыОсновные");
	Массив.Добавить("НоменклатураОсновные");
	Массив.Добавить("Склады1");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаСклады1Нажатие(Элемент)
	
	ОтметкаСклады1 = Не ОтметкаСклады1;
	
	УстановитьСтраницуСклады1();
	
	Массив = Новый Массив;
	
	Массив.Добавить("ВидыНоменклатурыОсновные");
	Массив.Добавить("НоменклатураОсновные");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаВидыНоменклатурыОсновныеНажатие(Элемент)
	
	ОтметкаВидыНоменклатурыОсновные = Не ОтметкаВидыНоменклатурыОсновные;
	
	УстановитьСтраницуВидыНоменклатурыОсновные();
	
	Массив = Новый Массив;
	Массив.Добавить("НоменклатураОсновные");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаНоменклатураНажатие(Элемент)
	
	ОтметкаНоменклатураОсновные = Не ОтметкаНоменклатураОсновные;
	
	УстановитьСтраницуНоменклатураОсновные();
	
КонецПроцедуры

// Страница запасы и закупки.

&НаКлиенте
Процедура ОтметкаАдминистрированиеЗапасыИЗакупкиНажатие(Элемент)
	
	ОтметкаАдминистрированиеЗапасыИЗакупки = Не ОтметкаАдминистрированиеЗапасыИЗакупки;
	
	УстановитьСтраницуАдминистрированиеЗапасыИЗакупки();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаАдминистрированиеСкладЗапасыИЗакупкиНажатие(Элемент)
	
	ОтметкаАдминистрированиеСкладЗапасыИЗакупки = Не ОтметкаАдминистрированиеСкладЗапасыИЗакупки;
	
	УстановитьСтраницуАдминистрированиеСкладИДоставка();
	
	Массив = Новый Массив;
	
	Массив.Добавить("Склады");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаСкладыНажатие(Элемент)
	
	ОтметкаСклады = Не ОтметкаСклады;
	
	УстановитьСтраницуСклады();
	
	Массив = Новый Массив;
	
	Массив.Добавить("СкладскиеГруппыНоменклатуры");
	Массив.Добавить("СкладскиеГруппыУпаковок");
	Массив.Добавить("ГенерацияТопологии");
	Массив.Добавить("СкладскиеЯчейки");
	Массив.Добавить("ПравилаРазмещения");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаСкладскиеГруппыНоменклатурыНажатие(Элемент)
	
	ОтметкаСкладскиеГруппыНоменклатуры = Не ОтметкаСкладскиеГруппыНоменклатуры;
	
	УстановитьСтраницуСкладскиеГруппыНоменклатуры();
	
	Массив = Новый Массив;
	Массив.Добавить("ВидыНоменклатурыЗапасыИЗакупки");
	Массив.Добавить("НоменклатураЗапасыИЗакупки");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаСкладскиеГруппыУпаковокНажатие(Элемент)
	
	ОтметкаСкладскиеГруппыУпаковок = Не ОтметкаСкладскиеГруппыУпаковок;
	
	УстановитьСтраницуСкладскиеГруппыУпаковок();
	
	Массив = Новый Массив;
	Массив.Добавить("НоменклатураЗапасыИЗакупки");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаГенерацияТопологииНажатие(Элемент)
	
	ОтметкаГенерацияТопологии = Не ОтметкаГенерацияТопологии;
	
	УстановитьСтраницуГенерацияТопологии();
	
	Массив = Новый Массив;
	Массив.Добавить("СкладскиеЯчейки");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаСкладскиеЯчейкиНажатие(Элемент)
	
	ОтметкаСкладскиеЯчейки = Не ОтметкаСкладскиеЯчейки;
	
	УстановитьСтраницуСкладскиеЯчейки();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаПравилаРазмещенияНажатие(Элемент)
	
	ОтметкаПравилаРазмещения = Не ОтметкаПравилаРазмещения;
	
	УстановитьСтраницуПравилаРазмещения();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаГруппыДоступаПартнеровНажатие(Элемент)
	
	ОтметкаГруппыДоступаПартнеров = Не ОтметкаГруппыДоступаПартнеров;
	
	УстановитьСтраницуГруппыДоступаПартнеров();
	
	Массив = Новый Массив;
	
	Массив.Добавить("Партнеры");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаПартнерыНажатие(Элемент)
	
	ОтметкаПартнеры = Не ОтметкаПартнеры;
	
	УстановитьСтраницуПартнеры();
	
	Массив = Новый Массив;
	
	Массив.Добавить("СоглашенияСПоставщиками");
	Массив.Добавить("ДоговорыКонтрагентов");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаКонтрагентыНажатие(Элемент)
	
	ОтметкаКонтрагенты = Не ОтметкаКонтрагенты;
	
	УстановитьСтраницуКонтрагенты();
	
	Массив = Новый Массив;
	Массив.Добавить("ДоговорыКонтрагентов");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаДоговорыКонтрагентовНажатие(Элемент)
	
	ОтметкаДоговорыКонтрагентов = Не ОтметкаДоговорыКонтрагентов;
	
	УстановитьСтраницуДоговорыКонтрагентов();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаСоглашенияСПоставщикамиНажатие(Элемент)
	
	ОтметкаСоглашенияСПоставщиками = Не ОтметкаСоглашенияСПоставщиками;
	
	УстановитьСтраницуСоглашенияСПоставщиками();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаВидыНоменклатурыЗапасыИЗакупкиНажатие(Элемент)
	
	ОтметкаВидыНоменклатурыЗапасыИЗакупки = Не ОтметкаВидыНоменклатурыЗапасыИЗакупки;
	
	УстановитьСтраницуВидыНоменклатурыЗапасыИЗакупки();
	
	Массив = Новый Массив;
	Массив.Добавить("НоменклатураЗапасыИЗакупки");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаНоменклатураЗапасыИЗакупкиНажатие(Элемент)
	
	ОтметкаНоменклатураЗапасыИЗакупки = Не ОтметкаНоменклатураЗапасыИЗакупки;
	
	УстановитьСтраницуНоменклатураЗапасыИЗакупки();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаСпособыОбеспеченияПотребностейНажатие(Элемент)
	
	ОтметкаСпособыОбеспеченияПотребностей = Не ОтметкаСпособыОбеспеченияПотребностей;
	
	УстановитьСтраницуСпособыОбеспеченияПотребностей();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаУстановкаЦенПоставщиковНажатие(Элемент)
	
	ОтметкаУстановкаЦенПоставщиков = Не ОтметкаУстановкаЦенПоставщиков;
	
	УстановитьСтраницуУстановкаЦенПоставщиков();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаТипыТранспортныхСредствНажатие(Элемент)
	
	ОтметкаТипыТранспортныхСредств = Не ОтметкаТипыТранспортныхСредств;
	
	УстановитьСтраницуТипыТранспортныхСредств();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаТранспортныеСредстваНажатие(Элемент)
	
	ОтметкаТранспортныеСредства = Не ОтметкаТранспортныеСредства;
	
	УстановитьСтраницуТранспортныеСредства();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаЗоныДоставкиНажатие(Элемент)
	
	ОтметкаЗоныДоставки = Не ОтметкаЗоныДоставки;
	
	УстановитьСтраницуЗоныДоставки();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

// Страница маркетинг и продажи.

&НаКлиенте
Процедура ОтметкаМаркетингИПланированиеНажатие(Элемент)
	
	ОтметкаМаркетингИПланирование = Не ОтметкаМаркетингИПланирование;
	
	УстановитьСтраницуМаркетингИПланирование();
	
	Массив = Новый Массив;
	Массив.Добавить("КонтрагентыМП");
	
	Массив.Добавить("УсловияПредоставления");
	Массив.Добавить("СкидкиНаценки");
	Массив.Добавить("ВидыКартЛояльности");
	Массив.Добавить("КартыЛояльности");
	Массив.Добавить("УстановкаЦен");
	Массив.Добавить("НастройкиПродажПользователей");
	Массив.Добавить("СоглашенияСПоставщикамиМП");
	Массив.Добавить("УстановкаЦенПоставщиковМП");
	
	Массив.Добавить("КаналыРекламныхВоздействий");
	Массив.Добавить("МаркетинговыеМероприятия");
	Массив.Добавить("УстановкиСкидокНаценок");
	
	Массив.Добавить("ФорматыМагазинов");
	Массив.Добавить("ТоварныеКатегории");
	Массив.Добавить("Марки");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаПродажиНажатие(Элемент)
	
	ОтметкаПродажи = Не ОтметкаПродажи;
	
	УстановитьСтраницуПродажи();
	
	Массив = Новый Массив;
	Массив.Добавить("СостоянияПроцессов");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаПодключаемоеОборудованиеНажатие(Элемент)
	
	ОтметкаПодключаемоеОборудование = Не ОтметкаПодключаемоеОборудование;
	
	УстановитьСтраницуПодключаемоеОборудование();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаГруппыДоступаНоменклатурыМПНажатие(Элемент)
	
	ОтметкаГруппыДоступаНоменклатурыМП = Не ОтметкаГруппыДоступаНоменклатурыМП;
	
	УстановитьСтраницуГруппыДоступаНоменклатурыМП();
	
	Массив = Новый Массив;
	Массив.Добавить("ВидыНоменклатурыМП");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаВидыНоменклатурыМПНажатие(Элемент)
	
	ОтметкаВидыНоменклатурыМаркетингИПродажи = Не ОтметкаВидыНоменклатурыМаркетингИПродажи;
	
	УстановитьСтраницуВидыНоменклатурыМП();
	
	Массив = Новый Массив;
	Массив.Добавить("НоменклатураМП");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаНоменклатураМПНажатие(Элемент)
	
	ОтметкаНоменклатураМП = Не ОтметкаНоменклатураМП;
	
	УстановитьСтраницуНоменклатураМП();
	
	Массив = Новый Массив;
	Массив.Добавить("ВариантыКомплектацииНоменклатуры");
	Массив.Добавить("УстановкаЦен");
	Массив.Добавить("ИзменениеАссортимента");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаСегментыНоменклатурыНажатие(Элемент)
	
	ОтметкаСегментыНоменклатуры = Не ОтметкаСегментыНоменклатуры;
	
	УстановитьСтраницуСегментыНоменклатуры();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаБизнесРегионыНажатие(Элемент)
	
	ОтметкаБизнесРегионы = Не ОтметкаБизнесРегионы;
	
	УстановитьСтраницуБизнесРегионы();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаРолиПартнеровНажатие(Элемент)
	
	ОтметкаРолиПартнеров = Не ОтметкаРолиПартнеров;
	
	УстановитьСтраницуРолиПартнеров();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаГруппыДоступаПартнеровМПНажатие(Элемент)
	
	ОтметкаГруппыДоступаПартнеровМП = Не ОтметкаГруппыДоступаПартнеровМП;
	
	УстановитьСтраницуГруппыДоступаПартнеровМП();
	
	Массив = Новый Массив;
	Массив.Добавить("ПартнерыМП");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаСегментыПартнеровНажатие(Элемент)
	
	ОтметкаСегментыПартнеров = Не ОтметкаСегментыПартнеров;
	
	УстановитьСтраницуСегментыПартнеров();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаПартнерыМПНажатие(Элемент)
	
	ОтметкаПартнерыМП = Не ОтметкаПартнерыМП;
	
	УстановитьСтраницуПартнерыМП();
	
	Массив = Новый Массив;
	Массив.Добавить("СоглашенияСКлиентами");
	Массив.Добавить("СоглашенияСКлиентамиИнд");
	Массив.Добавить("ДоговорыКонтрагентовМП");
	Массив.Добавить("КартыЛояльности");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаКонтрагентыМПНажатие(Элемент)
	
	ОтметкаКонтрагентыМП = Не ОтметкаКонтрагентыМП;
	
	УстановитьСтраницуКонтрагентыМП();
	
	Массив = Новый Массив;
	Массив.Добавить("СоглашенияСКлиентами");
	Массив.Добавить("СоглашенияСКлиентамиИнд");
	Массив.Добавить("ДоговорыКонтрагентовМП");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаГрафикиОплатыНажатие(Элемент)
	
	ОтметкаГрафикиОплаты = Не ОтметкаГрафикиОплаты;
	
	УстановитьСтраницуГрафикиОплаты();
	
	Массив = Новый Массив;
	Массив.Добавить("СоглашенияСКлиентами");
	Массив.Добавить("СоглашенияСКлиентамиИнд");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаСоглашенияСКлиентамиНажатие(Элемент)
	
	ОтметкаСоглашенияСКлиентами = Не ОтметкаСоглашенияСКлиентами;
	
	УстановитьСтраницуСоглашенияСКлиентами();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаСоглашенияСКлиентамиИндНажатие(Элемент)
	
	ОтметкаСоглашенияСКлиентамиИнд = Не ОтметкаСоглашенияСКлиентамиИнд;
	
	УстановитьСтраницуСоглашенияСКлиентамиИнд();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаДоговорыКонтрагентовМПНажатие(Элемент)
	
	ОтметкаДоговорыКонтрагентовМП = Не ОтметкаДоговорыКонтрагентовМП;
	
	УстановитьСтраницуДоговорыКонтрагентовМП();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаЦеновыеГруппыНажатие(Элемент)
	
	ОтметкаЦеновыеГруппы = Не ОтметкаЦеновыеГруппы;
	
	УстановитьСтраницуЦеновыеГруппы();
	
	Массив = Новый Массив;
	Массив.Добавить("ВидыЦен");
	Массив.Добавить("СкидкиНаценки");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаВидыЦенНажатие(Элемент)
	
	ОтметкаВидыЦен = Не ОтметкаВидыЦен;
	
	УстановитьСтраницуВидыЦен();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЦеныНоменклатуры(Команда)
	
	ОткрытьФорму("Документ.УстановкаЦенНоменклатуры.Форма.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаГруппыПользователейНажатие(Элемент)
	
	ОтметкаГруппыПользователей = Не ОтметкаГруппыПользователей;
	
	УстановитьСтраницуГруппыПользователей();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаУсловияПредоставленияНажатие(Элемент)
	
	ОтметкаУсловияПредоставления = Не ОтметкаУсловияПредоставления;
	
	УстановитьСтраницуУсловияПредоставления();
	
	Массив = Новый Массив;
	Массив.Добавить("СкидкиНаценки");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаСкидкиНаценкиНажатие(Элемент)
	
	ОтметкаСкидкиНаценки = Не ОтметкаСкидкиНаценки;
	
	УстановитьСтраницуСкидкиНаценки();
	
	Массив = Новый Массив;
	Массив.Добавить("ВидыКартЛояльности");
	Массив.Добавить("УстановкиСкидокНаценок");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаВидыКартЛояльностиНажатие(Элемент)
	
	ОтметкаВидыКартЛояльности = Не ОтметкаВидыКартЛояльности;
	
	УстановитьСтраницуВидыКартЛояльности();
	
	Массив = Новый Массив;
	Массив.Добавить("КартыЛояльности");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаКартыЛояльностиНажатие(Элемент)
	
	ОтметкаКартыЛояльности = Не ОтметкаКартыЛояльности;
	
	УстановитьСтраницуКартыЛояльности();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаУстановкаЦенНажатие(Элемент)
	
	ОтметкаУстановкаЦен = Не ОтметкаУстановкаЦен;
	
	УстановитьСтраницуУстановкаЦен();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаНастройкиПродажПользователейНажатие(Элемент)
	
	ОтметкаНастройкиПродажПользователей = Не ОтметкаНастройкиПродажПользователей;
	
	УстановитьСтраницуНастройкиПродажПользователей();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаСоглашенияСПоставщикамиМПНажатие(Элемент)
	
	ОтметкаСоглашенияСПоставщикамиМП = Не ОтметкаСоглашенияСПоставщикамиМП;
	
	УстановитьСтраницуСоглашенияСПоставщикамиМП();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаУстановкаЦенПоставщиковМПНажатие(Элемент)
	
	ОтметкаУстановкаЦенПоставщиковМП = Не ОтметкаУстановкаЦенПоставщиковМП;
	
	УстановитьСтраницуУстановкаЦенПоставщиковМП();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаКаналыРекламныхВоздействийНажатие(Элемент)
	
	ОтметкаКаналыРекламныхВоздействий = Не ОтметкаКаналыРекламныхВоздействий;
	
	УстановитьСтраницуКаналыРекламныхВоздействий();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаМаркетинговыеМероприятияНажатие(Элемент)
	
	ОтметкаМаркетинговыеМероприятия = Не ОтметкаМаркетинговыеМероприятия;
	
	УстановитьСтраницуМаркетинговыеМероприятия();
	
	Массив = Новый Массив;
	Массив.Добавить("УстановкиСкидокНаценок");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаСостоянияПроцессовНажатие(Элемент)
	
	ОтметкаСостоянияПроцессов = Не ОтметкаСостоянияПроцессов;
	
	УстановитьСтраницуСостоянияПроцессов();
	
	Массив = Новый Массив;
	Массив.Добавить("ВидыСделок");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаВидыСделокНажатие(Элемент)
	
	ОтметкаВидыСделок = Не ОтметкаВидыСделок;
	
	УстановитьСтраницуВидыСделок();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаПричиныНеудовлетворенияСпросаНажатие(Элемент)
	
	ОтметкаПричиныНеудовлетворенияСпроса = Не ОтметкаПричиныНеудовлетворенияСпроса;
	
	УстановитьСтраницуПричиныНеудовлетворенияСпроса();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаПричиныПроигрышаСделокНажатие(Элемент)
	
	ОтметкаПричиныПроигрышаСделок = Не ОтметкаПричиныПроигрышаСделок;
	
	УстановитьСтраницуПричиныПроигрышаСделок();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаРолиКонтактныхЛицВСделкахИПроектахНажатие(Элемент)
	
	ОтметкаРолиКонтактныхЛицВСделкахИПроектах = Не ОтметкаРолиКонтактныхЛицВСделкахИПроектах;
	
	УстановитьСтраницуРолиКонтактныхЛицВСделкахИПроектах();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаВидыСвязейМеждуПартнерамиНажатие(Элемент)
	
	ОтметкаВидыСвязейМеждуПартнерами = Не ОтметкаВидыСвязейМеждуПартнерами;
	
	УстановитьСтраницуВидыСвязейМеждуПартнерами();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаРолиКонтактныхЛицПартнеровНажатие(Элемент)
	
	ОтметкаРолиКонтактныхЛицПартнеров = Не ОтметкаРолиКонтактныхЛицПартнеров;
	
	УстановитьСтраницуРолиКонтактныхЛицПартнеров();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаИсточникиДанныхПланированияНажатие(Элемент)
	
	ОтметкаИсточникиДанныхПланирования = Не ОтметкаИсточникиДанныхПланирования;
	
	УстановитьСтраницуИсточникиДанныхПланирования();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаУсловияОПТПНажатие(Элемент)
	
	ОтметкаУсловияОПТП = Не ОтметкаУсловияОПТП;
	
	УстановитьСтраницуУсловияОПТП();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаВариантыКомплектацииНоменклатурыНажатие(Элемент)
	
	ОтметкаВариантыКомплектацииНоменклатуры = Не ОтметкаВариантыКомплектацииНоменклатуры;
	
	УстановитьСтраницуВариантыКомплектацииНоменклатуры();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаНоменклатураПродаваемаяСовместноНажатие(Элемент)
	
	ОтметкаНоменклатураПродаваемаяСовместно = Не ОтметкаНоменклатураПродаваемаяСовместно;
	
	УстановитьСтраницуНоменклатураПродаваемаяСовместно();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаПричиныВозникновенияПретензийНажатие(Элемент)
	
	ОтметкаПричиныВозникновенияПретензий = Не ОтметкаПричиныВозникновенияПретензий;
	
	УстановитьСтраницуПричиныВозникновенияПретензий();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаПричиныОтменыЗаказовКлиентовНажатие(Элемент)
	
	ОтметкаПричиныОтменыЗаказовКлиентов = Не ОтметкаПричиныОтменыЗаказовКлиентов;
	
	УстановитьСтраницуПричиныОтменыЗаказовКлиентов();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаФорматыМагазиновНажатие(Элемент)
	
	ОтметкаФорматыМагазинов = Не ОтметкаФорматыМагазинов;
	
	УстановитьСтраницуФорматыМагазинов();
	
	Массив = Новый Массив;
	Массив.Добавить("ИзменениеАссортимента");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаТоварныеКатегорииНажатие(Элемент)
	
	ОтметкаТоварныеКатегории = Не ОтметкаТоварныеКатегории;
	
	УстановитьСтраницуТоварныеКатегории();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаИзменениеАссортиментаНажатие(Элемент)
	
	ОтметкаИзменениеАссортимента = Не ОтметкаИзменениеАссортимента;
	
	УстановитьСтраницуИзменениеАссортимента();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаМаркиНажатие(Элемент)
	
	ОтметкаМарки = Не ОтметкаМарки;
	
	УстановитьСтраницуМарки();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

// Страница ремонты.

&НаКлиенте
Процедура ОтметкаНоменклатураРемонтыНажатие(Элемент)
	
	ОтметкаНоменклатураРемонты = Не ОтметкаНоменклатураРемонты;
	
	УстановитьСтраницуНоменклатураРемонты();
	
	Массив = Новый Массив;
	Массив.Добавить("КлассыОбъектовРемонта");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаВидыРаботСотрудниковРемонтыНажатие(Элемент)
	
	ОтметкаВидыРаботСотрудниковРемонты = Не ОтметкаВидыРаботСотрудниковРемонты;
	
	УстановитьСтраницуВидыРаботСотрудниковРемонты();
	
	Массив = Новый Массив;
	Массив.Добавить("КлассыОбъектовРемонта");
	Массив.Добавить("РасценкиРаботСотрудниковРемонты");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаВидыРаботСотрудниковРемонтыПропуститьНажатие(Элемент)
	
	ПропуститьВидыРаботСотрудниковРемонты = Не ПропуститьВидыРаботСотрудниковРемонты;
	
	НеИспользоватьРегистрациюВыполненныхРаботРемонты = ПропуститьВидыРаботСотрудниковРемонты;
	ПропуститьРасценкиРаботСотрудниковРемонты = ПропуститьВидыРаботСотрудниковРемонты;
	ПропуститьБригадыРемонты = ПропуститьВидыРаботСотрудниковРемонты;
	
	ОтметкаРасценкиРаботСотрудниковРемонты = Ложь;
	ОтметкаБригадыРемонты = Ложь;
	
	УстановитьСтраницуВидыРаботСотрудниковРемонты();
	УстановитьСтраницуБригадыРемонты();
	
	Массив = Новый Массив;
	Массив.Добавить("КлассыОбъектовРемонта");
	Массив.Добавить("РасценкиРаботСотрудниковРемонты");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаРасценкиРаботСотрудниковРемонтыНажатие(Элемент)
	
	ОтметкаРасценкиРаботСотрудниковРемонты = Не ОтметкаРасценкиРаботСотрудниковРемонты;
	
	УстановитьСтраницуРасценкиВидовРаботРемонты();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаРасценкиРаботСотрудниковРемонтыПропуститьНажатие(Элемент)
	
	ПропуститьРасценкиРаботСотрудниковРемонты = Не ПропуститьРасценкиРаботСотрудниковРемонты;
	
	УстановитьСтраницуРасценкиВидовРаботРемонты();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаБригадыРемонтыНажатие(Элемент)
	
	ОтметкаБригадыРемонты = Не ОтметкаБригадыРемонты;
	
	УстановитьСтраницуБригадыРемонты();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаОбщиеВидыРемонтовНажатие(Элемент)
	
	ОтметкаОбщиеВидыРемонтов = Не ОтметкаОбщиеВидыРемонтов;
	
	УстановитьСтраницуОбщиеВидыРемонтов();
	
	Массив = Новый Массив;
	Массив.Добавить("КлассыОбъектовРемонта");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаПоказателиНаработкиНажатие(Элемент)
	
	ОтметкаПоказателиНаработки = Не ОтметкаПоказателиНаработки;
	
	УстановитьСтраницуПоказателиНаработки();
	
	Массив = Новый Массив;
	Массив.Добавить("КлассыОбъектовРемонта");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаПоказателиНаработкиПропуститьНажатие(Элемент)
	
	ПропуститьПоказателиНаработки = Не ПропуститьПоказателиНаработки;
	
	УстановитьСтраницуПоказателиНаработки();
	
	Массив = Новый Массив;
	Массив.Добавить("КлассыОбъектовРемонта");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаКлассыОбъектовРемонтаНажатие(Элемент)
	
	ОтметкаКлассыОбъектовРемонта = Не ОтметкаКлассыОбъектовРемонта;
	
	УстановитьСтраницуКлассыОбъектовРемонта();
	
	Массив = Новый Массив;
	Массив.Добавить("ОбъектыРемонта");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаОбъектыРемонтаНажатие(Элемент)
	
	ОтметкаОбъектыРемонта = Не ОтметкаОбъектыРемонта;
	
	УстановитьСтраницуОбъектыРемонта();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаВидыДефектовНажатие(Элемент)
	
	ОтметкаВидыДефектов = Не ОтметкаВидыДефектов;
	
	УстановитьСтраницуВидыДефектов();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаВидыДефектовПропуститьНажатие(Элемент)
	
	ПропуститьВидыДефектов = Не ПропуститьВидыДефектов;
	
	УстановитьСтраницуВидыДефектов();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаРемонтныеМероприятияНажатие(Элемент)
	
	ОтметкаРемонтныеМероприятия = Не ОтметкаРемонтныеМероприятия;
	
	УстановитьСтраницуРемонтныеМероприятия();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаРемонтныеМероприятияПропуститьНажатие(Элемент)
	
	ПропуститьРемонтныеМероприятия = Не ПропуститьРемонтныеМероприятия;
	
	УстановитьСтраницуРемонтныеМероприятия();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

// Страница производство.

&НаКлиенте
Процедура ОтметкаАдминистрированиеПроизводствоНажатие(Элемент)
	
	ОтметкаАдминистрированиеПроизводство = Не ОтметкаАдминистрированиеПроизводство;
	
	УстановитьСтраницуАдминистрированиеПроизводство();
	
	Массив = Новый Массив;
	Массив.Добавить("СтруктураПредприятияПроизводство");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаГрафикиРаботыНажатие(Элемент)
	
	ОтметкаГрафикиРаботы = Не ОтметкаГрафикиРаботы;
	
	УстановитьСтраницуГрафикиРаботы();
	
	Массив = Новый Массив;
	Массив.Добавить("СтруктураПредприятияПроизводство");
	Массив.Добавить("СтруктураРабочихЦентров");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаСтруктураПредприятияПроизводствоНажатие(Элемент)
	
	ОтметкаСтруктураПредприятияПроизводство = Не ОтметкаСтруктураПредприятияПроизводство;
	
	УстановитьСтраницуСтруктураПредприятияПроизводство();
	
	Массив = Новый Массив;
	Массив.Добавить("СтруктураРабочихЦентров");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаНоменклатураПроизводствоНажатие(Элемент)
	
	ОтметкаНоменклатураПроизводство = Не ОтметкаНоменклатураПроизводство;
	
	УстановитьСтраницуНоменклатураПроизводство();
	
	Массив = Новый Массив;
	Массив.Добавить("МаршрутныеКарты");
	Массив.Добавить("РесурсныеСпецификации");
	Массив.Добавить("НастройкиПередачиМатериаловВПроизводство");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаСтатьиКалькуляцииНажатие(Элемент)
	
	ОтметкаСтатьиКалькуляции = Не ОтметкаСтатьиКалькуляции;
	
	УстановитьСтраницуСтатьиКалькуляции();
	
	Массив = Новый Массив;
	Массив.Добавить("РесурсныеСпецификации");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаПравилаРаспределенияРасходовНажатие(Элемент)
	
	ОтметкаПравилаРаспределенияРасходов = Не ОтметкаПравилаРаспределенияРасходов;
	
	УстановитьСтраницуПравилаРаспределенияРасходов();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаСтруктураРабочихЦентровНажатие(Элемент)
	
	ОтметкаСтруктураРабочихЦентров = Не ОтметкаСтруктураРабочихЦентров;
	
	УстановитьСтраницуСтруктураРабочихЦентров();
	
	Массив = Новый Массив;
	Массив.Добавить("РесурсныеСпецификации");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаСтруктураРабочихЦентровПропуститьНажатие(Элемент)
	
	ПропуститьСтруктураРабочихЦентров = Не ПропуститьСтруктураРабочихЦентров;
	
	УстановитьСтраницуСтруктураРабочихЦентров();
	
	Массив = Новый Массив;
	Массив.Добавить("РесурсныеСпецификации");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаВидыРаботСотрудниковНажатие(Элемент)
	
	ОтметкаВидыРаботСотрудников = Не ОтметкаВидыРаботСотрудников;
	
	УстановитьСтраницуВидыРаботСотрудников();
	
	Массив = Новый Массив;
	Массив.Добавить("МаршрутныеКарты");
	Массив.Добавить("РесурсныеСпецификации");
	Массив.Добавить("РасценкиРаботСотрудников");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаВидыРаботСотрудниковПропуститьНажатие(Элемент)
	
	ПропуститьВидыРаботСотрудников = Не ПропуститьВидыРаботСотрудников;
	
	НеИспользоватьРегистрациюВыполненныхРабот = ПропуститьВидыРаботСотрудников;
	ПропуститьРасценкиРаботСотрудников = ПропуститьВидыРаботСотрудников;
	ПропуститьБригады = ПропуститьВидыРаботСотрудников;
	
	ОтметкаРасценкиВидовРабот = Ложь;
	ОтметкаБригады = Ложь;
	
	УстановитьСтраницуВидыРаботСотрудников();
	УстановитьСтраницуБригады();
	
	Массив = Новый Массив;
	Массив.Добавить("МаршрутныеКарты");
	Массив.Добавить("РесурсныеСпецификации");
	Массив.Добавить("РасценкиРаботСотрудников");
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаМаршрутныеКартыНажатие(Элемент)
	
	ОтметкаМаршрутныеКарты = Не ОтметкаМаршрутныеКарты;
	
	УстановитьСтраницуМаршрутныеКарты();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаМаршрутныеКартыПропуститьНажатие(Элемент)
	
	ПропуститьМаршрутныеКарты = Не ПропуститьМаршрутныеКарты;
	
	УстановитьСтраницуМаршрутныеКарты();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаРесурсныеСпецификацииНажатие(Элемент)
	
	ОтметкаРесурсныеСпецификации = Не ОтметкаРесурсныеСпецификации;
	
	УстановитьСтраницуРесурсныеСпецификации();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаРасценкиРаботСотрудниковНажатие(Элемент)
	
	ОтметкаРасценкиРаботСотрудников = Не ОтметкаРасценкиРаботСотрудников;
	
	УстановитьСтраницуРасценкиВидовРабот();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаРасценкиРаботСотрудниковПропуститьНажатие(Элемент)
	
	ПропуститьРасценкиРаботСотрудников = Не ПропуститьРасценкиРаботСотрудников;
	
	УстановитьСтраницуРасценкиВидовРабот();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаБригадыНажатие(Элемент)
	
	ОтметкаБригады = Не ОтметкаБригады;
	
	УстановитьСтраницуБригады();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаНастройкиПередачиМатериаловВПроизводствоНажатие(Элемент)
	
	ОтметкаНастройкиПередачиМатериаловВПроизводство = Не ОтметкаНастройкиПередачиМатериаловВПроизводство;
	
	УстановитьСтраницуНастройкиПередачиМатериаловВПроизводство();
	
	Массив = Новый Массив;
	
	ОбновитьОписания(Массив);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПерейтиНаГлавнуюСтраницу(Команда)
	
	УстановитьВидимостьСтраниц(Элементы.СтраницаОсновныеНастройки.Имя);
	
	Заголовок = НСтр("ru='Помощник заполнения настроек и справочников';uk='Помічник заповнення настройок і довідників'");
	
	Элементы.КоманднаяПанель.ТекущаяСтраница = Элементы.КоманднаяПанель.ПодчиненныеЭлементы.СтраницаКоманднаяПанельОсновная;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсеОтметки(Команда)
	
	МассивРеквизитов = МассивРеквизитовФормы(Элементы.ОсновнаяПанель.ТекущаяСтраница.Имя);
	
	Для Каждого Реквизит из МассивРеквизитов Цикл
		ЭтаФорма[Реквизит] = Ложь;
	КонецЦикла;
	
	УстановитьСтраницыИОписания();
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиВПомощникНастройкиУчетаНоменклатуры(Команда)
	
	УстановитьВидимостьСтраниц(Элементы.СтраницаОсновныеНастройкиНоменклатуры.Имя);
	
	Заголовок = НСтр("ru='Помощник заполнения настроек и справочников / 2.1. Настройки номенклатуры';uk='Помічник заповнення настройок і довідників / 2.1. Настройки номенклатури'");
	
	Элементы.КоманднаяПанель.ТекущаяСтраница = Элементы.КоманднаяПанель.ПодчиненныеЭлементы.СтраницаКоманднаяПанельОстальные;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиВПомощникЗаполненияЗапасыИЗакупки(Команда)
	
	УстановитьВидимостьСтраниц(Элементы.СтраницаЗапасыИЗакупки.Имя);
	
	Заголовок = НСтр("ru='Помощник заполнения настроек и справочников / 2.2. Закупки';uk='Помічник заповнення настройок і довідників / 2.2. Купівлі'");
	
	Элементы.КоманднаяПанель.ТекущаяСтраница = Элементы.КоманднаяПанель.ПодчиненныеЭлементы.СтраницаКоманднаяПанельОстальные;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиВПомощникМаркетингИПродажи(Команда)
	
	УстановитьВидимостьСтраниц(Элементы.СтраницаМаркетингИПродажи.Имя);
	
	Заголовок = НСтр("ru='Помощник заполнения настроек и справочников / 2.3. Маркетинг и продажи';uk='Помічник заповнення настройок і довідників / 2.3. Маркетинг і продажі'");
	
	Элементы.КоманднаяПанель.ТекущаяСтраница = Элементы.КоманднаяПанель.ПодчиненныеЭлементы.СтраницаКоманднаяПанельОстальные;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиВПомощникЗаполненияПроизводство(Команда)
	
	УстановитьВидимостьСтраниц(Элементы.СтраницаПроизводство.Имя);
	
	Заголовок = НСтр("ru='Помощник заполнения настроек и справочников / 2.4. Производство';uk='Помічник заповнення настройок і довідників / 2.4. Виробництво'");
	
	Элементы.КоманднаяПанель.ТекущаяСтраница = Элементы.КоманднаяПанель.ПодчиненныеЭлементы.СтраницаКоманднаяПанельОстальные;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиВПомощникЗаполненияРемонты(Команда)
	
	УстановитьВидимостьСтраниц(Элементы.СтраницаРемонты.Имя);
	
	Заголовок = НСтр("ru='Помощник заполнения настроек и справочников / 2.5. Ремонты';uk='Помічник заповнення настройок і довідників / 2.5. Ремонти'");
	
	Элементы.КоманднаяПанель.ТекущаяСтраница = Элементы.КоманднаяПанель.ПодчиненныеЭлементы.СтраницаКоманднаяПанельОстальные;
	
КонецПроцедуры

// Страница основные настройки.

&НаКлиенте
Процедура ОткрытьПредприятие(Команда)
	
	ОткрытьФорму("Обработка.ПанельАдминистрированияУТ.Форма.Предприятие", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОрганизации(Команда)
	
	Если ИспользоватьНесколькоОрганизаций Тогда
		ОткрытьФорму("Справочник.Организации.ФормаСписка", , ЭтаФорма);
	Иначе
		ОткрытьФорму("Справочник.Организации.ФормаОбъекта", Новый Структура("Ключ", ОрганизацияПоУмолчанию()));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКассы(Команда)
	
	Если ИспользоватьНесколькоКасс Тогда
		ОткрытьФорму("Справочник.Кассы.ФормаСписка", , ЭтаФорма);
	Иначе
		ОткрытьФорму("Справочник.Кассы.ФормаОбъекта", Новый Структура("Ключ", КассаПоУмолчанию()));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРасчетныеСчета(Команда)
	
	Если ИспользоватьНесколькоРасчетныхСчетов Тогда
		ОткрытьФорму("Справочник.БанковскиеСчетаОрганизаций.ФормаСписка", , ЭтаФорма);
	Иначе
		ОткрытьФорму("Справочник.БанковскиеСчетаОрганизаций.ФормаОбъекта", Новый Структура("Ключ", БанковскийСчетПоУмолчанию()));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкиПользователейИПрав(Команда)
	
	ОткрытьФорму("Обработка.ПанельАдминистрированияБСП.Форма.НастройкиПользователейИПрав", , ЭтаФорма);
	
КонецПроцедуры

// Страница основные настройки номенклатуры.

&НаКлиенте
Процедура ОткрытьНоменклатуру(Команда)
	ОткрытьФорму("Справочник.Номенклатура.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкиНоменклатуры(Команда)
	
	ОткрытьФорму("Обработка.ПанельАдминистрированияУТ.Форма.НастройкиНоменклатуры", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСкладИДоставка(Команда)
	
	ОткрытьФорму("Обработка.ПанельАдминистрированияУТ.Форма.СкладИДоставка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьГруппыДоступа(Команда)
	
	ОткрытьФорму("Справочник.ГруппыДоступа.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВидНоменклатурыТовар(Команда)
	
	Ключ = ПолучитьПредустановленныеВидыНоменклатуры(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Товар"),НСтр("ru='Товар';uk='Товар'"));
	ОткрытьФорму("Справочник.ВидыНоменклатуры.ФормаОбъекта", Новый Структура("Ключ", Ключ));
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВидНоменклатурыУслуга(Команда)
	
	Ключ = ПолучитьПредустановленныеВидыНоменклатуры(ПредопределенноеЗначение("Перечисление.ТипыНоменклатуры.Услуга"),НСтр("ru='Услуга';uk='Послуга'"));
	ОткрытьФорму("Справочник.ВидыНоменклатуры.ФормаОбъекта", Новый Структура("Ключ", Ключ));
	
КонецПроцедуры

// Страница запасы и закупки.

&НаКлиенте
Процедура ОткрытьАдминистрированиеЗапасыИЗакупки(Команда)
	ОткрытьФорму("Обработка.ПанельАдминистрированияУТ.Форма.Закупки", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьАдминистрированиеСкладИДоставка(Команда)
	ОткрытьФорму("Обработка.ПанельАдминистрированияУТ.Форма.СкладИДоставка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСклады(Команда)
	
	Если ИспользоватьНесколькоСкладов Тогда
		ОткрытьФорму("Справочник.Склады.ФормаСписка", , ЭтаФорма);
	Иначе
		ОткрытьФорму("Справочник.Склады.ФормаОбъекта", Новый Структура("Ключ", СкладПоУмолчанию()));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСкладскиеГруппыНоменклатуры(Команда)
	ОткрытьФорму("Справочник.СкладскиеГруппыНоменклатуры.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСкладскиеГруппыУпаковок(Команда)
	ОткрытьФорму("Справочник.СкладскиеГруппыУпаковок.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьГенерациюТопологии(Команда)
	ОткрытьФорму("Обработка.ГенерацияТопологииСклада.Форма", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСкладскиеЯчейки(Команда)
	ОткрытьФорму("Справочник.СкладскиеЯчейки.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПравилаРазмещенияТоваров(Команда)
	ОткрытьФорму("РегистрСведений.ПравилаРазмещенияТоваровВЯчейках.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьГруппыДоступаПартнеров(Команда)
	ОткрытьФорму("Справочник.ГруппыДоступаПартнеров.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПартнеров(Команда)
	ОткрытьФорму("Справочник.Партнеры.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКонтрагентов(Команда)
	ОткрытьФорму("Справочник.Контрагенты.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДоговорыКонтрагентовЗакупки(Команда)
	ОткрытьФорму("Справочник.ДоговорыКонтрагентов.Форма.ФормаСпискаЗакупки", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДоговорыКонтрагентовПродажи(Команда)
	ОткрытьФорму("Справочник.ДоговорыКонтрагентов.Форма.ФормаСпискаПродажи", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСоглашенияСПоставщиками(Команда)
	ОткрытьФорму("Справочник.СоглашенияСПоставщиками.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСпособыОбеспеченияПотребностей(Команда)
	ОткрытьФорму("Справочник.СпособыОбеспеченияПотребностей.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьТранспортныеСредства(Команда)
	ОткрытьФорму("Справочник.ТранспортныеСредства.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЗоныДоставки(Команда)
	ОткрытьФорму("Справочник.ЗоныДоставки.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

// Страница маркетинг и продажи.

&НаКлиенте
Процедура ОткрытьАдминистрированиеМаркетингИПланирование(Команда)
	ОткрытьФорму("Обработка.ПанельАдминистрированияУТ.Форма.CRMИМаркетинг", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьАдминистрированиеПродажи(Команда)
	ОткрытьФорму("Обработка.ПанельАдминистрированияУТ.Форма.Продажи", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьАдминистрированиеПодключаемоеОборудование(Команда)
	ОткрытьФорму("Обработка.ПанельАдминистрированияУТ.Форма.НастройкиРМКИОборудования", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьГруппыДоступаНоменклатурыМП(Команда)
	ОткрытьФорму("Справочник.ГруппыДоступаНоменклатуры.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСоглашенияСКлиентами(Команда)
	ОткрытьФорму("Справочник.СоглашенияСКлиентами.Форма.ФормаСпискаТиповыхСоглашений", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСоглашенияСКлиентамиИнд(Команда)
	ОткрытьФорму("Справочник.СоглашенияСКлиентами.Форма.ФормаСпискаИндивидуальныхСоглашений", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСкидкиНаценки(Команда)
	ОткрытьФорму("Справочник.СкидкиНаценки.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУсловияПредоставления(Команда)
	ОткрытьФорму("Справочник.УсловияПредоставленияСкидокНаценок.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВидыКартЛояльности(Команда)
	ОткрытьФорму("Справочник.ВидыКартЛояльности.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКартыЛояльности(Команда)
	ОткрытьФорму("Справочник.КартыЛояльности.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкиПродажПользователей(Команда)
	ОткрытьФорму("Справочник.НастройкиПродажДляПользователей.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСоглашенияКонкурентов(Команда)
	
	СтруктураБыстрогоОтбора = Новый Структура("ДоступностьДляЗакупкиИКлиентов", "Доступно для клиентов");
	ПараметрыФормы = Новый Структура("СтруктураБыстрогоОтбора", СтруктураБыстрогоОтбора);
	
	ОткрытьФорму("Справочник.СоглашенияСПоставщиками.Форма.ФормаСписка", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКаналыРекламныхВоздействий(Команда)
	ОткрытьФорму("ПланВидовХарактеристик.КаналыРекламныхВоздействий.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьМаркетинговыеМероприятия(Команда)
	ОткрытьФорму("Справочник.МаркетинговыеМероприятия.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВидыСделок(Команда)
	ОткрытьФорму("Справочник.ВидыСделокСКлиентами.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьУсловияОПТП(Команда)
	ОткрытьФорму("Справочник.УсловияОбслуживанияПартнеровТорговымиПредставителями.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВариантыКомплектацииНоменклатуры(Команда)
	
	ОткрытьФорму("Справочник.ВариантыКомплектацииНоменклатуры.ФормаСписка", , ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСегментыНоменклатуры(Команда)
	ОткрытьФорму("Справочник.СегментыНоменклатуры.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьБизнесРегионы(Команда)
	ОткрытьФорму("Справочник.БизнесРегионы.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРолиПартнеров(Команда)
	ОткрытьФорму("Справочник.РолиПартнеровВСделкахИПроектах.ФормаСписка",, ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьГрафикиОплаты(Команда)
	ОткрытьФорму("Справочник.ГрафикиОплаты.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЦеновыеГруппы(Команда)
	ОткрытьФорму("Справочник.ЦеновыеГруппы.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПричиныНеудовлетворенияСпроса(Команда)
	ОткрытьФорму("Справочник.ПричиныНеудовлетворенияПервичногоСпроса.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПричиныПроигрышаСделок(Команда)
	ОткрытьФорму("Справочник.ПричиныПроигрышаСделок.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРолиКонтактныхЛицВСделкахИПроектах(Команда)
	ОткрытьФорму("Справочник.РолиКонтактныхЛицВСделкахИПроектах.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВидыСвязейМеждуПартнерами(Команда)
	ОткрытьФорму("Справочник.ВидыСвязейМеждуПартнерами.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРолиКонтактныхЛицПартнеров(Команда)
	ОткрытьФорму("Справочник.РолиКонтактныхЛицПартнеров.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьИсточникиДанныхПланирования(Команда)
	ОткрытьФорму("Справочник.ИсточникиДанныхПланирования.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНоменклатуруПродаваемуюСовместно(Команда)
	ОткрытьФорму("РегистрСведений.НоменклатураПродаваемаяСовместно.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПричиныВозникновенияПретензий(Команда)
	ОткрытьФорму("Справочник.ПричиныВозникновенияПретензий.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПричиныОтменыЗаказовКлиентов(Команда)
	ОткрытьФорму("Справочник.ПричиныОтменыЗаказовКлиентов.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФорматыМагазинов(Команда)
	ОткрытьФорму("Справочник.ФорматыМагазинов.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьТоварныеКатегории(Команда)
	ОткрытьФорму("Справочник.ТоварныеКатегории.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьИзменениеАссортимента(Команда)
	ОткрытьФорму("Документ.ИзменениеАссортимента.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСегментыПартнеров(Команда)
	ОткрытьФорму("Справочник.СегментыПартнеров.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьМарки(Команда)
	ОткрытьФорму("Справочник.Марки.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРегистрациюЦенПоставщиковКонкурентов(Команда)
	ОткрытьФорму("Документ.РегистрацияЦенНоменклатурыПоставщика.ФормаСписка", , ЭтаФорма);
КонецПроцедуры

// Страница ремонты.

&НаКлиенте
Процедура ОткрытьВидыДефектов(Команда)
	Возврат // в УТ11 обработчик пустой
КонецПроцедуры

// Страница производство.

&НаКлиенте
Процедура ОткрытьАдминистрированиеПроизводства(Команда)
	Возврат // в УТ11 обработчик пустой
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкиПередачиМатериаловВПроизводство(Команда)
	Возврат // в УТ11 обработчик пустой
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Установка страниц.

&НаКлиенте 
Процедура УстановитьСтраницыИОписания()
	
	// Страница основные настройки.
	
	УстановитьСтраницуОрганизацииИВалюты();
	УстановитьСтраницуОрганизации();
	УстановитьСтраницуКассы();
	УстановитьСтраницуБанковскиеСчета();
	УстановитьСтраницуСтруктураПредприятия();
	УстановитьСтраницуНастройкиПользователейИПрав();
	
	// Страница основные настройки номенклатуры.
	
	УстановитьСтраницуНастройкиНоменклатуры();
	УстановитьСтраницуАдминистрированиеСкладОсновные();
	
	// Страница запасы и закупки.
	
	УстановитьСтраницуАдминистрированиеЗапасыИЗакупки();
	УстановитьСтраницуАдминистрированиеСкладИДоставка();
	
	УстановитьСтраницуГруппыДоступаПартнеров();
	УстановитьСтраницуКонтрагенты();
	УстановитьСтраницуСпособыОбеспеченияПотребностей();
	
	УстановитьСтраницуТипыТранспортныхСредств();
	УстановитьСтраницуТранспортныеСредства();
	УстановитьСтраницуЗоныДоставки();
	
	// Страница маркетинг и продажи.
	
	УстановитьСтраницуМаркетингИПланирование();
	УстановитьСтраницуПродажи();
	УстановитьСтраницуПодключаемоеОборудование();
	
	УстановитьСтраницуГруппыДоступаНоменклатурыМП();
	УстановитьСтраницуСегментыНоменклатуры();
	УстановитьСтраницуБизнесРегионы();
	УстановитьСтраницуРолиПартнеров();
	УстановитьСтраницуГруппыДоступаПартнеровМП();
	УстановитьСтраницуСегментыПартнеров();
	УстановитьСтраницуКонтрагентыМП();
	УстановитьСтраницуГрафикиОплаты();
	
	УстановитьСтраницуЦеновыеГруппы();
	УстановитьСтраницуГруппыПользователей();
	УстановитьСтраницуУсловияПредоставления();
	УстановитьСтраницуНастройкиПродажПользователей();
	
	УстановитьСтраницуКаналыРекламныхВоздействий();
	УстановитьСтраницуМаркетинговыеМероприятия();
	
	УстановитьСтраницуСостоянияПроцессов();
	УстановитьСтраницуПричиныНеудовлетворенияСпроса();
	УстановитьСтраницуПричиныПроигрышаСделок();
	УстановитьСтраницуРолиКонтактныхЛицВСделкахИПроектах();
	УстановитьСтраницуВидыСвязейМеждуПартнерами();
	УстановитьСтраницуРолиКонтактныхЛицПартнеров();
	
	УстановитьСтраницуИсточникиДанныхПланирования();
	УстановитьСтраницуНоменклатураПродаваемаяСовместно();
	УстановитьСтраницуПричиныВозникновенияПретензий();
	УстановитьСтраницуПричиныОтменыЗаказовКлиентов();
	
	УстановитьСтраницуФорматыМагазинов();
	УстановитьСтраницуТоварныеКатегории();
	УстановитьСтраницуМарки();
	
	// Страница ремонты.
	
	УстановитьСтраницуНоменклатураРемонты();
	УстановитьСтраницуВидыРаботСотрудниковРемонты();
	УстановитьСтраницуБригадыРемонты();
	
	УстановитьСтраницуОбщиеВидыРемонтов();
	УстановитьСтраницуПоказателиНаработки();
	УстановитьСтраницуВидыДефектов();
	УстановитьСтраницуРемонтныеМероприятия();
	
	// Страница производство.
	
	УстановитьСтраницуАдминистрированиеПроизводство();
	УстановитьСтраницуГрафикиРаботы();
	УстановитьСтраницуНоменклатураПроизводство();
	УстановитьСтраницуСтатьиКалькуляции();
	УстановитьСтраницуПравилаРаспределенияРасходов();
	
	УстановитьСтраницуВидыРаботСотрудников();
	УстановитьСтраницуБригады();
	
	ОбновитьОписания();
	
КонецПроцедуры

// Страница основные настройки.

&НаКлиенте
Процедура УстановитьСтраницуОрганизацииИВалюты()
	
	Если ОтметкаОрганизацииИВалюты Тогда 
		Элементы.ОрганизацииИВалютыСтраницы.ТекущаяСтраница = Элементы.ОрганизацииИВалютыСтраницы.ПодчиненныеЭлементы.СтраницаОрганизацииИВалютыОтменить;
	Иначе
		Элементы.ОрганизацииИВалютыСтраницы.ТекущаяСтраница = Элементы.ОрганизацииИВалютыСтраницы.ПодчиненныеЭлементы.СтраницаОрганизацииИВалютыГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуОрганизации(Готовность = Истина, Описание = "")
	
	Если Не Готовность Тогда
		Элементы.ОрганизацииСтраницы.ТекущаяСтраница = Элементы.ОрганизацииСтраницы.ПодчиненныеЭлементы.СтраницаОрганизации;
	ИначеЕсли ОтметкаОрганизации Тогда 
		Элементы.ОрганизацииСтраницы.ТекущаяСтраница = Элементы.ОрганизацииСтраницы.ПодчиненныеЭлементы.СтраницаОрганизацииОтменить;
	Иначе
		Элементы.ОрганизацииСтраницы.ТекущаяСтраница = Элементы.ОрганизацииСтраницы.ПодчиненныеЭлементы.СтраницаОрганизацииГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуКассы(Готовность = Истина, Описание = "")
	
	Если Не Готовность Тогда
		Элементы.КассыСтраницы.ТекущаяСтраница = Элементы.КассыСтраницы.ПодчиненныеЭлементы.СтраницаКассы;
	ИначеЕсли ОтметкаКассы Тогда 
		Элементы.КассыСтраницы.ТекущаяСтраница = Элементы.КассыСтраницы.ПодчиненныеЭлементы.СтраницаКассыОтменить;
	Иначе
		Элементы.КассыСтраницы.ТекущаяСтраница = Элементы.КассыСтраницы.ПодчиненныеЭлементы.СтраницаКассыГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуБанковскиеСчета(Готовность = Истина, Описание = "")
	
	Если Не Готовность Тогда
		Элементы.БанковскиеСчетаСтраницы.ТекущаяСтраница = Элементы.БанковскиеСчетаСтраницы.ПодчиненныеЭлементы.СтраницаБанковскиеСчета;
	ИначеЕсли ОтметкаБанковскиеСчета Тогда 
		Элементы.БанковскиеСчетаСтраницы.ТекущаяСтраница = Элементы.БанковскиеСчетаСтраницы.ПодчиненныеЭлементы.СтраницаБанковскиеСчетаОтменить;
	Иначе
		Элементы.БанковскиеСчетаСтраницы.ТекущаяСтраница = Элементы.БанковскиеСчетаСтраницы.ПодчиненныеЭлементы.СтраницаБанковскиеСчетаГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуСтруктураПредприятия()
	
	Если ОтметкаСтруктураПредприятия Тогда 
		Элементы.СтруктураПредприятияСтраницы.ТекущаяСтраница = Элементы.СтруктураПредприятияСтраницы.ПодчиненныеЭлементы.СтраницаСтруктураПредприятияОтменить;
	Иначе
		Элементы.СтруктураПредприятияСтраницы.ТекущаяСтраница = Элементы.СтруктураПредприятияСтраницы.ПодчиненныеЭлементы.СтраницаСтруктураПредприятияГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуНастройкиПользователейИПрав()
	
	Если ОтметкаНастройкиПользователейИПрав Тогда
		Элементы.НастройкиПользователейИПравСтраницы.ТекущаяСтраница = Элементы.НастройкиПользователейИПравСтраницы.ПодчиненныеЭлементы.СтраницаНастройкиПользователейИПравОтменить;
	Иначе
		Элементы.НастройкиПользователейИПравСтраницы.ТекущаяСтраница = Элементы.НастройкиПользователейИПравСтраницы.ПодчиненныеЭлементы.СтраницаНастройкиПользователейИПравГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуГруппаНоменклатура(Готовность = Истина, Описание = "")
	
	Элементы.ПерейтиВПомощникНастройкиУчетаНоменклатуры.Доступность = Готовность;
	
	СтатусГруппаНоменклатура = ПредустановленныеОписания.НайтиПоЗначению("ГруппаНоменклатура").Представление;
	
	Если Не Готовность Тогда
		Элементы.ГруппаНоменклатураСтраницы.ТекущаяСтраница = Элементы.ГруппаНоменклатураСтраницы.ПодчиненныеЭлементы.СтраницаГруппаНоменклатура;
		СтатусГруппаНоменклатура = СтатусГруппаНоменклатура + " " + Описание;
	ИначеЕсли ОтметкаГруппаНоменклатура Тогда 
		Элементы.ГруппаНоменклатураСтраницы.ТекущаяСтраница = Элементы.ГруппаНоменклатураСтраницы.ПодчиненныеЭлементы.СтраницаГруппаНоменклатураОтменить;
	Иначе
		Элементы.ГруппаНоменклатураСтраницы.ТекущаяСтраница = Элементы.ГруппаНоменклатураСтраницы.ПодчиненныеЭлементы.СтраницаГруппаНоменклатураГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуГруппаЗапасыИЗакупки(Готовность = Истина, Описание = "")
	
	Элементы.ПерейтиВПомощникЗаполненияЗапасыИЗакупки.Доступность = Готовность;
	
	СтатусГруппаЗапасыИЗакупки = ПредустановленныеОписания.НайтиПоЗначению("ГруппаЗапасыИЗакупки").Представление;
	
	Если Не Готовность Тогда
		Элементы.ГруппаЗапасыИЗакупкиСтраницы.ТекущаяСтраница = Элементы.ГруппаЗапасыИЗакупкиСтраницы.ПодчиненныеЭлементы.СтраницаГруппаЗапасыИЗакупки;
		СтатусГруппаЗапасыИЗакупки = СтатусГруппаЗапасыИЗакупки + " " + Описание;
	ИначеЕсли ОтметкаГруппаЗапасыИЗакупки Тогда 
		Элементы.ГруппаЗапасыИЗакупкиСтраницы.ТекущаяСтраница = Элементы.ГруппаЗапасыИЗакупкиСтраницы.ПодчиненныеЭлементы.СтраницаГруппаЗапасыИЗакупкиОтменить;
	Иначе
		Элементы.ГруппаЗапасыИЗакупкиСтраницы.ТекущаяСтраница = Элементы.ГруппаЗапасыИЗакупкиСтраницы.ПодчиненныеЭлементы.СтраницаГруппаЗапасыИЗакупкиГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуГруппаМаркетингИПродажи(Готовность = Истина, Описание = "")
	
	Элементы.ПерейтиВПомощникЗаполненияМаркетингИПродажи.Доступность = Готовность;
	
	СтатусГруппаМаркетингИПродажи = ПредустановленныеОписания.НайтиПоЗначению("ГруппаМаркетингИПродажи").Представление;
	
	Если Не Готовность Тогда
		Элементы.ГруппаМаркетингИПродажиСтраницы.ТекущаяСтраница = Элементы.ГруппаМаркетингИПродажиСтраницы.ПодчиненныеЭлементы.СтраницаГруппаМаркетингИПродажи;
		СтатусГруппаМаркетингИПродажи = СтатусГруппаМаркетингИПродажи + " " + Описание;
	ИначеЕсли ОтметкаГруппаМаркетингИПродажи Тогда 
		Элементы.ГруппаМаркетингИПродажиСтраницы.ТекущаяСтраница = Элементы.ГруппаМаркетингИПродажиСтраницы.ПодчиненныеЭлементы.СтраницаГруппаМаркетингИПродажиОтменить;
	Иначе
		Элементы.ГруппаМаркетингИПродажиСтраницы.ТекущаяСтраница = Элементы.ГруппаМаркетингИПродажиСтраницы.ПодчиненныеЭлементы.СтраницаГруппаМаркетингИПродажиГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуГруппаПроизводство(Готовность = Истина, Описание = "")
	
	Элементы.ПерейтиВПомощникЗаполненияПроизводство.Доступность = Готовность;
	
	СтатусГруппаПроизводство = ПредустановленныеОписания.НайтиПоЗначению("ГруппаПроизводство").Представление;
	
	Если Не Готовность Тогда
		Элементы.ГруппаПроизводствоСтраницы.ТекущаяСтраница = Элементы.ГруппаПроизводствоСтраницы.ПодчиненныеЭлементы.СтраницаГруппаПроизводство;
		СтатусГруппаПроизводство = СтатусГруппаПроизводство + " " + Описание;
	ИначеЕсли ОтметкаГруппаПроизводство Тогда 
		Элементы.ГруппаПроизводствоСтраницы.ТекущаяСтраница = Элементы.ГруппаПроизводствоСтраницы.ПодчиненныеЭлементы.СтраницаГруппаПроизводствоОтменить;
	Иначе
		Элементы.ГруппаПроизводствоСтраницы.ТекущаяСтраница = Элементы.ГруппаПроизводствоСтраницы.ПодчиненныеЭлементы.СтраницаГруппаПроизводствоГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуГруппаРемонты(Готовность = Истина, Описание = "")
	
	Элементы.ПерейтиВПомощникЗаполненияРемонты.Доступность = Готовность;
	
	СтатусГруппаРемонты = ПредустановленныеОписания.НайтиПоЗначению("ГруппаРемонты").Представление;
	
	Если Не Готовность Тогда
		Элементы.ГруппаРемонтыСтраницы.ТекущаяСтраница = Элементы.ГруппаРемонтыСтраницы.ПодчиненныеЭлементы.СтраницаГруппаРемонты;
		СтатусГруппаРемонты = СтатусГруппаРемонты + " " + Описание;
	ИначеЕсли ОтметкаГруппаРемонты Тогда 
		Элементы.ГруппаРемонтыСтраницы.ТекущаяСтраница = Элементы.ГруппаРемонтыСтраницы.ПодчиненныеЭлементы.СтраницаГруппаРемонтыОтменить;
	Иначе
		Элементы.ГруппаРемонтыСтраницы.ТекущаяСтраница = Элементы.ГруппаРемонтыСтраницы.ПодчиненныеЭлементы.СтраницаГруппаРемонтыГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуГруппыДоступа(Готовность = Истина, Описание = "")
	
	Если Не Готовность Тогда
		Элементы.ГруппыДоступаСтраницы.ТекущаяСтраница = Элементы.ГруппыДоступаСтраницы.ПодчиненныеЭлементы.СтраницаГруппыДоступа;
	ИначеЕсли ОтметкаГруппыДоступа Тогда 
		Элементы.ГруппыДоступаСтраницы.ТекущаяСтраница = Элементы.ГруппыДоступаСтраницы.ПодчиненныеЭлементы.СтраницаГруппыДоступаОтменить;
	Иначе
		Элементы.ГруппыДоступаСтраницы.ТекущаяСтраница = Элементы.ГруппыДоступаСтраницы.ПодчиненныеЭлементы.СтраницаГруппыДоступаГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуВводНачальныхОстатков(Готовность = Истина, Описание = "")
	
	Если Не Готовность Тогда
		Элементы.ВводНачальныхОстатковСтраницы.ТекущаяСтраница = Элементы.ВводНачальныхОстатковСтраницы.ПодчиненныеЭлементы.СтраницаВводНачальныхОстатков;
	ИначеЕсли ОтметкаВводНачальныхОстатков Тогда 
		Элементы.ВводНачальныхОстатковСтраницы.ТекущаяСтраница = Элементы.ВводНачальныхОстатковСтраницы.ПодчиненныеЭлементы.СтраницаВводНачальныхОстатковОтменить;
	Иначе
		Элементы.ВводНачальныхОстатковСтраницы.ТекущаяСтраница = Элементы.ВводНачальныхОстатковСтраницы.ПодчиненныеЭлементы.СтраницаВводНачальныхОстатковГотово;
	КонецЕсли;
	
КонецПроцедуры

// Страница основные настройки номенклатуры.

&НаКлиенте
Процедура УстановитьСтраницуНастройкиНоменклатуры()
	
	Если ОтметкаНастройкиНоменклатуры Тогда 
		Элементы.НастройкиНоменклатурыСтраницы.ТекущаяСтраница = Элементы.НастройкиНоменклатурыСтраницы.ПодчиненныеЭлементы.СтраницаНастройкиНоменклатурыОтменить;
	Иначе
		Элементы.НастройкиНоменклатурыСтраницы.ТекущаяСтраница = Элементы.НастройкиНоменклатурыСтраницы.ПодчиненныеЭлементы.СтраницаНастройкиНоменклатурыГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуАдминистрированиеСкладОсновные()
	
	Если ОтметкаАдминистрированиеСкладОсновные Тогда 
		Элементы.СкладИДоставкаСтраницы.ТекущаяСтраница = Элементы.СкладИДоставкаСтраницы.ПодчиненныеЭлементы.СтраницаСкладИДоставкаОтменить;
	Иначе
		Элементы.СкладИДоставкаСтраницы.ТекущаяСтраница = Элементы.СкладИДоставкаСтраницы.ПодчиненныеЭлементы.СтраницаСкладИДоставкаГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуСклады1(Готовность = Истина, Описание = "")
	
	СтатусСклады1 = ПредустановленныеОписания.НайтиПоЗначению("Склады1").Представление;
	
	Если Не Готовность Тогда
		Элементы.СкладыСтраницы1.ТекущаяСтраница = Элементы.СкладыСтраницы1.ПодчиненныеЭлементы.СтраницаСклады1;
		СтатусСклады1 = СтатусСклады1 + " " + Описание;
	ИначеЕсли ОтметкаСклады1 Тогда 
		Элементы.СкладыСтраницы1.ТекущаяСтраница = Элементы.СкладыСтраницы1.ПодчиненныеЭлементы.СтраницаСкладыОтменить1;
	Иначе
		Элементы.СкладыСтраницы1.ТекущаяСтраница = Элементы.СкладыСтраницы1.ПодчиненныеЭлементы.СтраницаСкладыГотово1;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуВидыНоменклатурыОсновные(Готовность = Истина, Описание = "")
	
	СтатусВидыНоменклатурыОсновные = ПредустановленныеОписания.НайтиПоЗначению("ВидыНоменклатурыОсновные").Представление;
	
	Если Не Готовность Тогда
		Элементы.ВидыНоменклатурыСтраницы.ТекущаяСтраница = Элементы.ВидыНоменклатурыСтраницы.ПодчиненныеЭлементы.СтраницаВидыНоменклатуры;
		СтатусВидыНоменклатурыОсновные = СтатусВидыНоменклатурыОсновные + " " + Описание;
	ИначеЕсли ОтметкаВидыНоменклатурыОсновные Тогда 
		Элементы.ВидыНоменклатурыСтраницы.ТекущаяСтраница = Элементы.ВидыНоменклатурыСтраницы.ПодчиненныеЭлементы.СтраницаВидыНоменклатурыОтменить;
	Иначе
		Элементы.ВидыНоменклатурыСтраницы.ТекущаяСтраница = Элементы.ВидыНоменклатурыСтраницы.ПодчиненныеЭлементы.СтраницаВидыНоменклатурыГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуНоменклатураОсновные(Готовность = Истина, Описание = "")
	
	СтатусНоменклатураОсновные = ПредустановленныеОписания.НайтиПоЗначению("НоменклатураОсновные").Представление;
	
	Если Не Готовность Тогда
		Элементы.НоменклатураСтраницы.ТекущаяСтраница = Элементы.НоменклатураСтраницы.ПодчиненныеЭлементы.СтраницаНоменклатура;
		СтатусНоменклатураОсновные = СтатусНоменклатураОсновные + " " + Описание;
	ИначеЕсли ОтметкаНоменклатураОсновные Тогда 
		Элементы.НоменклатураСтраницы.ТекущаяСтраница = Элементы.НоменклатураСтраницы.ПодчиненныеЭлементы.СтраницаНоменклатураОтменить;
	Иначе
		Элементы.НоменклатураСтраницы.ТекущаяСтраница = Элементы.НоменклатураСтраницы.ПодчиненныеЭлементы.СтраницаНоменклатураГотово;
	КонецЕсли;
	
КонецПроцедуры

// Страница запасы и закупки.

&НаКлиенте
Процедура УстановитьСтраницуАдминистрированиеЗапасыИЗакупки()
	
	Если ОтметкаАдминистрированиеЗапасыИЗакупки Тогда
		Элементы.АдминистрированиеЗапасыИЗакупкиСтраницы.ТекущаяСтраница = Элементы.АдминистрированиеЗапасыИЗакупкиСтраницы.ПодчиненныеЭлементы.СтраницаАдминистрированиеЗапасыИЗакупкиОтменить;
	Иначе
		Элементы.АдминистрированиеЗапасыИЗакупкиСтраницы.ТекущаяСтраница = Элементы.АдминистрированиеЗапасыИЗакупкиСтраницы.ПодчиненныеЭлементы.СтраницаАдминистрированиеЗапасыИЗакупкиГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуАдминистрированиеСкладИДоставка()
	
	Если ОтметкаАдминистрированиеСкладЗапасыИЗакупки Тогда
		Элементы.АдминистрированиеСкладИДоставкаСтраницы.ТекущаяСтраница = Элементы.АдминистрированиеСкладИДоставкаСтраницы.ПодчиненныеЭлементы.СтраницаАдминистрированиеСкладИДоставкаОтменить;
	Иначе
		Элементы.АдминистрированиеСкладИДоставкаСтраницы.ТекущаяСтраница = Элементы.АдминистрированиеСкладИДоставкаСтраницы.ПодчиненныеЭлементы.СтраницаАдминистрированиеСкладИДоставкаГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуСклады(Готовность = Истина, Описание = "")
	
	СтатусСклады = ПредустановленныеОписания.НайтиПоЗначению("Склады").Представление;
	
	Если Не Готовность Тогда
		Элементы.СкладыСтраницы.ТекущаяСтраница = Элементы.СкладыСтраницы.ПодчиненныеЭлементы.СтраницаСклады;
		СтатусСклады = СтатусСклады + " " + Описание;
	ИначеЕсли ОтметкаСклады Тогда 
		Элементы.СкладыСтраницы.ТекущаяСтраница = Элементы.СкладыСтраницы.ПодчиненныеЭлементы.СтраницаСкладыОтменить;
	Иначе
		Элементы.СкладыСтраницы.ТекущаяСтраница = Элементы.СкладыСтраницы.ПодчиненныеЭлементы.СтраницаСкладыГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуСкладскиеГруппыНоменклатуры(Готовность = Истина, Описание = "")
	
	СтатусСкладскиеГруппыНоменклатуры = ПредустановленныеОписания.НайтиПоЗначению("СкладскиеГруппыНоменклатуры").Представление;
	
	Если Не Готовность Тогда
		Элементы.СкладскиеГруппыНоменклатурыСтраницы.ТекущаяСтраница = Элементы.СкладскиеГруппыНоменклатурыСтраницы.ПодчиненныеЭлементы.СтраницаСкладскиеГруппыНоменклатуры;
		СтатусСкладскиеГруппыНоменклатуры = СтатусСкладскиеГруппыНоменклатуры + " " + Описание;
	ИначеЕсли ОтметкаСкладскиеГруппыНоменклатуры Тогда 
		Элементы.СкладскиеГруппыНоменклатурыСтраницы.ТекущаяСтраница = Элементы.СкладскиеГруппыНоменклатурыСтраницы.ПодчиненныеЭлементы.СтраницаСкладскиеГруппыНоменклатурыОтменить;
	Иначе
		Элементы.СкладскиеГруппыНоменклатурыСтраницы.ТекущаяСтраница = Элементы.СкладскиеГруппыНоменклатурыСтраницы.ПодчиненныеЭлементы.СтраницаСкладскиеГруппыНоменклатурыГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуСкладскиеГруппыУпаковок(Готовность = Истина, Описание = "")
	
	СтатусСкладскиеГруппыУпаковок = ПредустановленныеОписания.НайтиПоЗначению("СкладскиеГруппыУпаковок").Представление;
	
	Если Не Готовность Тогда
		Элементы.СкладскиеГруппыУпаковокСтраницы.ТекущаяСтраница = Элементы.СкладскиеГруппыУпаковокСтраницы.ПодчиненныеЭлементы.СтраницаСкладскиеГруппыУпаковок;
		СтатусСкладскиеГруппыУпаковок = СтатусСкладскиеГруппыУпаковок + " " + Описание;
	ИначеЕсли ОтметкаСкладскиеГруппыУпаковок Тогда 
		Элементы.СкладскиеГруппыУпаковокСтраницы.ТекущаяСтраница = Элементы.СкладскиеГруппыУпаковокСтраницы.ПодчиненныеЭлементы.СтраницаСкладскиеГруппыУпаковокОтменить;
	Иначе
		Элементы.СкладскиеГруппыУпаковокСтраницы.ТекущаяСтраница = Элементы.СкладскиеГруппыУпаковокСтраницы.ПодчиненныеЭлементы.СтраницаСкладскиеГруппыУпаковокГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуГенерацияТопологии(Готовность = Истина, Описание = "")
	
	СтатусГенерацияТопологии = ПредустановленныеОписания.НайтиПоЗначению("ГенерацияТопологии").Представление;
	
	Если Не Готовность Тогда
		Элементы.ГенерацияТопологииСтраницы.ТекущаяСтраница = Элементы.ГенерацияТопологииСтраницы.ПодчиненныеЭлементы.СтраницаГенерацияТопологии;
		СтатусГенерацияТопологии = СтатусГенерацияТопологии + " " + Описание;
	ИначеЕсли ОтметкаГенерацияТопологии Тогда 
		Элементы.ГенерацияТопологииСтраницы.ТекущаяСтраница = Элементы.ГенерацияТопологииСтраницы.ПодчиненныеЭлементы.СтраницаГенерацияТопологииОтменить;
	Иначе
		Элементы.ГенерацияТопологииСтраницы.ТекущаяСтраница = Элементы.ГенерацияТопологииСтраницы.ПодчиненныеЭлементы.СтраницаГенерацияТопологииГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуСкладскиеЯчейки(Готовность = Истина, Описание = "")
	
	СтатусСкладскиеЯчейки = ПредустановленныеОписания.НайтиПоЗначению("СкладскиеЯчейки").Представление;
	
	Если Не Готовность Тогда
		Элементы.СкладскиеЯчейкиСтраницы.ТекущаяСтраница = Элементы.СкладскиеЯчейкиСтраницы.ПодчиненныеЭлементы.СтраницаСкладскиеЯчейки;
		СтатусСкладскиеЯчейки = СтатусСкладскиеЯчейки + " " + Описание;
	ИначеЕсли ОтметкаСкладскиеЯчейки Тогда
		Элементы.СкладскиеЯчейкиСтраницы.ТекущаяСтраница = Элементы.СкладскиеЯчейкиСтраницы.ПодчиненныеЭлементы.СтраницаСкладскиеЯчейкиОтменить;
	Иначе
		Элементы.СкладскиеЯчейкиСтраницы.ТекущаяСтраница = Элементы.СкладскиеЯчейкиСтраницы.ПодчиненныеЭлементы.СтраницаСкладскиеЯчейкиГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуПравилаРазмещения(Готовность = Истина, Описание = "")
	
	СтатусПравилаРазмещения = ПредустановленныеОписания.НайтиПоЗначению("ПравилаРазмещения").Представление;
	
	Если Не Готовность Тогда
		Элементы.ПравилаРазмещенияСтраницы.ТекущаяСтраница = Элементы.ПравилаРазмещенияСтраницы.ПодчиненныеЭлементы.СтраницаПравилаРазмещения;
		СтатусПравилаРазмещения = СтатусПравилаРазмещения + " " + Описание;
	ИначеЕсли ОтметкаПравилаРазмещения Тогда 
		Элементы.ПравилаРазмещенияСтраницы.ТекущаяСтраница = Элементы.ПравилаРазмещенияСтраницы.ПодчиненныеЭлементы.СтраницаПравилаРазмещенияОтменить;
	Иначе
		Элементы.ПравилаРазмещенияСтраницы.ТекущаяСтраница = Элементы.ПравилаРазмещенияСтраницы.ПодчиненныеЭлементы.СтраницаПравилаРазмещенияГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуГруппыДоступаПартнеров()
	
	Если ОтметкаГруппыДоступаПартнеров Тогда 
		Элементы.ГруппыДоступаПартнеровСтраницы.ТекущаяСтраница = Элементы.ГруппыДоступаПартнеровСтраницы.ПодчиненныеЭлементы.СтраницаГруппыДоступаПартнеровОтменить;
	Иначе
		Элементы.ГруппыДоступаПартнеровСтраницы.ТекущаяСтраница = Элементы.ГруппыДоступаПартнеровСтраницы.ПодчиненныеЭлементы.СтраницаГруппыДоступаПартнеровГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуПартнеры(Готовность = Истина, Описание = "")
	
	СтатусПартнеры = ПредустановленныеОписания.НайтиПоЗначению("Партнеры").Представление;
	
	Если Не Готовность Тогда
		Элементы.ПартнерыСтраницы.ТекущаяСтраница = Элементы.ПартнерыСтраницы.ПодчиненныеЭлементы.СтраницаПартнеры;
		СтатусПартнеры = СтатусПартнеры + " " + Описание;
	ИначеЕсли ОтметкаПартнеры Тогда 
		Элементы.ПартнерыСтраницы.ТекущаяСтраница = Элементы.ПартнерыСтраницы.ПодчиненныеЭлементы.СтраницаПартнерыОтменить;
	Иначе
		Элементы.ПартнерыСтраницы.ТекущаяСтраница = Элементы.ПартнерыСтраницы.ПодчиненныеЭлементы.СтраницаПартнерыГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуКонтрагенты()
	
	Если ОтметкаКонтрагенты Тогда
		Элементы.КонтрагентыСтраницы.ТекущаяСтраница = Элементы.КонтрагентыСтраницы.ПодчиненныеЭлементы.СтраницаКонтрагентыОтменить;
	Иначе
		Элементы.КонтрагентыСтраницы.ТекущаяСтраница = Элементы.КонтрагентыСтраницы.ПодчиненныеЭлементы.СтраницаКонтрагентыГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуВидыНоменклатурыЗапасыИЗакупки(Готовность = Истина, Описание = "")
	
	СтатусВидыНоменклатурыЗапасыИЗакупки = ПредустановленныеОписания.НайтиПоЗначению("ВидыНоменклатурыЗапасыИЗакупки").Представление;
	
	Если Не Готовность Тогда
		Элементы.ВидыНоменклатурыСтраницы1.ТекущаяСтраница = Элементы.ВидыНоменклатурыСтраницы1.ПодчиненныеЭлементы.СтраницаВидыНоменклатуры1;
		СтатусВидыНоменклатурыЗапасыИЗакупки = СтатусВидыНоменклатурыЗапасыИЗакупки + " " + Описание;
	ИначеЕсли ОтметкаВидыНоменклатурыЗапасыИЗакупки Тогда 
		Элементы.ВидыНоменклатурыСтраницы1.ТекущаяСтраница = Элементы.ВидыНоменклатурыСтраницы1.ПодчиненныеЭлементы.СтраницаВидыНоменклатурыОтменить1;
	Иначе
		Элементы.ВидыНоменклатурыСтраницы1.ТекущаяСтраница = Элементы.ВидыНоменклатурыСтраницы1.ПодчиненныеЭлементы.СтраницаВидыНоменклатурыГотово1;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуНоменклатураЗапасыИЗакупки(Готовность = Истина, Описание = "")
	
	СтатусНоменклатураЗапасыИЗакупки = ПредустановленныеОписания.НайтиПоЗначению("НоменклатураЗапасыИЗакупки").Представление;
	
	Если Не Готовность Тогда
		Элементы.НоменклатураСтраницы1.ТекущаяСтраница = Элементы.НоменклатураСтраницы1.ПодчиненныеЭлементы.СтраницаНоменклатура1;
		СтатусНоменклатураЗапасыИЗакупки = СтатусНоменклатураЗапасыИЗакупки + " " + Описание;
	ИначеЕсли ОтметкаНоменклатураЗапасыИЗакупки Тогда 
		Элементы.НоменклатураСтраницы1.ТекущаяСтраница = Элементы.НоменклатураСтраницы1.ПодчиненныеЭлементы.СтраницаНоменклатураОтменить1;
	Иначе
		Элементы.НоменклатураСтраницы1.ТекущаяСтраница = Элементы.НоменклатураСтраницы1.ПодчиненныеЭлементы.СтраницаНоменклатураГотово1;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуСоглашенияСПоставщиками(Готовность = Истина, Описание = "")
	
	СтатусСоглашенияСПоставщиками = ПредустановленныеОписания.НайтиПоЗначению("СоглашенияСПоставщиками").Представление;
	
	Если Не Готовность Тогда
		Элементы.СоглашенияСПоставщикамиСтраницы.ТекущаяСтраница = Элементы.СоглашенияСПоставщикамиСтраницы.ПодчиненныеЭлементы.СтраницаСоглашенияСПоставщиками;
		СтатусСоглашенияСПоставщиками = СтатусСоглашенияСПоставщиками + " " + Описание;
	ИначеЕсли ОтметкаСоглашенияСПоставщиками Тогда 
		Элементы.СоглашенияСПоставщикамиСтраницы.ТекущаяСтраница = Элементы.СоглашенияСПоставщикамиСтраницы.ПодчиненныеЭлементы.СтраницаСоглашенияСПоставщикамиОтменить;
	Иначе
		Элементы.СоглашенияСПоставщикамиСтраницы.ТекущаяСтраница = Элементы.СоглашенияСПоставщикамиСтраницы.ПодчиненныеЭлементы.СтраницаСоглашенияСПоставщикамиГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуДоговорыКонтрагентов(Готовность = Истина, Описание = "")
	
	СтатусДоговорыКонтрагентов = ПредустановленныеОписания.НайтиПоЗначению("ДоговорыКонтрагентов").Представление;
	
	Если Не Готовность Тогда
		Элементы.ДоговорыКонтрагентовСтраницы.ТекущаяСтраница = Элементы.ДоговорыКонтрагентовСтраницы.ПодчиненныеЭлементы.СтраницаДоговорыКонтрагентов;
		СтатусДоговорыКонтрагентов = СтатусДоговорыКонтрагентов + " " + Описание;
	ИначеЕсли ОтметкаДоговорыКонтрагентов Тогда 
		Элементы.ДоговорыКонтрагентовСтраницы.ТекущаяСтраница = Элементы.ДоговорыКонтрагентовСтраницы.ПодчиненныеЭлементы.СтраницаДоговорыКонтрагентовОтменить;
	Иначе
		Элементы.ДоговорыКонтрагентовСтраницы.ТекущаяСтраница = Элементы.ДоговорыКонтрагентовСтраницы.ПодчиненныеЭлементы.СтраницаДоговорыКонтрагентовГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуСпособыОбеспеченияПотребностей()
	
	СтатусСпособыОбеспечения = ПредустановленныеОписания.НайтиПоЗначению("СпособыОбеспечения").Представление;
	
	Если Не Элементы.ЭлементСпособыОбеспеченияПотребностей.Доступность Тогда
		Элементы.СпособыОбеспеченияПотребностейСтраницы.ТекущаяСтраница = Элементы.СпособыОбеспеченияПотребностейСтраницы.ПодчиненныеЭлементы.СтраницаСпособыОбеспеченияПотребностей;
		Возврат;
	КонецЕсли;
	
	Если ОтметкаСпособыОбеспеченияПотребностей Тогда 
		Элементы.СпособыОбеспеченияПотребностейСтраницы.ТекущаяСтраница = Элементы.СпособыОбеспеченияПотребностейСтраницы.ПодчиненныеЭлементы.СтраницаСпособыОбеспеченияПотребностейОтменить;
	Иначе
		Элементы.СпособыОбеспеченияПотребностейСтраницы.ТекущаяСтраница = Элементы.СпособыОбеспеченияПотребностейСтраницы.ПодчиненныеЭлементы.СтраницаСпособыОбеспеченияПотребностейГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуУстановкаЦенПоставщиков(Готовность = Истина, Описание = "")
	
	СтатусУстановкаЦенПоставщиков = ПредустановленныеОписания.НайтиПоЗначению("УстановкаЦенПоставщиков").Представление;
	
	Если Не Готовность Тогда
		Элементы.УстановкаЦенПоставщиковСтраницы.ТекущаяСтраница = Элементы.УстановкаЦенПоставщиковСтраницы.ПодчиненныеЭлементы.СтраницаУстановкаЦенПоставщиков;
		СтатусУстановкаЦенПоставщиков = СтатусУстановкаЦенПоставщиков + " " + Описание;
	ИначеЕсли ОтметкаУстановкаЦенПоставщиков Тогда 
		Элементы.УстановкаЦенПоставщиковСтраницы.ТекущаяСтраница = Элементы.УстановкаЦенПоставщиковСтраницы.ПодчиненныеЭлементы.СтраницаУстановкаЦенПоставщиковОтменить;
	Иначе
		Элементы.УстановкаЦенПоставщиковСтраницы.ТекущаяСтраница = Элементы.УстановкаЦенПоставщиковСтраницы.ПодчиненныеЭлементы.СтраницаУстановкаЦенПоставщиковГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуТипыТранспортныхСредств()
	
	Если Не Элементы.ЭлементТипыТранспортныхСредств.Доступность Тогда
		Элементы.ТипыТранспортныхСредствСтраницы.ТекущаяСтраница = Элементы.ТипыТранспортныхСредствСтраницы.ПодчиненныеЭлементы.СтраницаТипыТранспортныхСредств;
		Возврат;
	КонецЕсли;
	
	Если ОтметкаТипыТранспортныхСредств Тогда 
		Элементы.ТипыТранспортныхСредствСтраницы.ТекущаяСтраница = Элементы.ТипыТранспортныхСредствСтраницы.ПодчиненныеЭлементы.СтраницаТипыТранспортныхСредствОтменить;
	Иначе
		Элементы.ТипыТранспортныхСредствСтраницы.ТекущаяСтраница = Элементы.ТипыТранспортныхСредствСтраницы.ПодчиненныеЭлементы.СтраницаТипыТранспортныхСредствГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуТранспортныеСредства()
	
	Если Не Элементы.ЭлементТранспортныеСредства.Доступность Тогда
		Элементы.ТранспортныеСредстваСтраницы.ТекущаяСтраница = Элементы.ТранспортныеСредстваСтраницы.ПодчиненныеЭлементы.СтраницаТранспортныеСредства;
		Возврат;
	КонецЕсли;
	
	Если ОтметкаТранспортныеСредства Тогда 
		Элементы.ТранспортныеСредстваСтраницы.ТекущаяСтраница = Элементы.ТранспортныеСредстваСтраницы.ПодчиненныеЭлементы.СтраницаТранспортныеСредстваОтменить;
	Иначе
		Элементы.ТранспортныеСредстваСтраницы.ТекущаяСтраница = Элементы.ТранспортныеСредстваСтраницы.ПодчиненныеЭлементы.СтраницаТранспортныеСредстваГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуЗоныДоставки()
	
	Если Не Элементы.ЭлементЗоныДоставки.Доступность Тогда
		Элементы.ЗоныДоставкиСтраницы.ТекущаяСтраница = Элементы.ЗоныДоставкиСтраницы.ПодчиненныеЭлементы.СтраницаЗоныДоставки;
		Возврат;
	КонецЕсли;
	
	Если ОтметкаЗоныДоставки Тогда 
		Элементы.ЗоныДоставкиСтраницы.ТекущаяСтраница = Элементы.ЗоныДоставкиСтраницы.ПодчиненныеЭлементы.СтраницаЗоныДоставкиОтменить;
	Иначе
		Элементы.ЗоныДоставкиСтраницы.ТекущаяСтраница = Элементы.ЗоныДоставкиСтраницы.ПодчиненныеЭлементы.СтраницаЗоныДоставкиГотово;
	КонецЕсли;
	
КонецПроцедуры

// Страница маркетинг и продажи.

&НаКлиенте
Процедура УстановитьСтраницуМаркетингИПланирование()
	
	Если ОтметкаМаркетингИПланирование Тогда 
		Элементы.МаркетингИПланированиеСтраницы.ТекущаяСтраница = Элементы.МаркетингИПланированиеСтраницы.ПодчиненныеЭлементы.СтраницаМаркетингИПланированиеОтменить;
	Иначе
		Элементы.МаркетингИПланированиеСтраницы.ТекущаяСтраница = Элементы.МаркетингИПланированиеСтраницы.ПодчиненныеЭлементы.СтраницаМаркетингИПланированиеГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуПродажи()
	
	Если ОтметкаПродажи Тогда 
		Элементы.ПродажиСтраницы.ТекущаяСтраница = Элементы.ПродажиСтраницы.ПодчиненныеЭлементы.СтраницаПродажиОтменить;
	Иначе
		Элементы.ПродажиСтраницы.ТекущаяСтраница = Элементы.ПродажиСтраницы.ПодчиненныеЭлементы.СтраницаПродажиГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуПодключаемоеОборудование()
	
	Если ОтметкаПодключаемоеОборудование Тогда 
		Элементы.ПодключаемоеОборудованиеСтраницы.ТекущаяСтраница = Элементы.ПодключаемоеОборудованиеСтраницы.ПодчиненныеЭлементы.СтраницаПодключаемоеОборудованиеОтменить;
	Иначе
		Элементы.ПодключаемоеОборудованиеСтраницы.ТекущаяСтраница = Элементы.ПодключаемоеОборудованиеСтраницы.ПодчиненныеЭлементы.СтраницаПодключаемоеОборудованиеГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуГруппыДоступаНоменклатурыМП()
	
	Если Не Элементы.ЭлементГруппыДоступаНоменклатурыМП.Доступность Тогда
		Элементы.ГруппыДоступаНоменклатурыМПСтраницы.ТекущаяСтраница = Элементы.ГруппыДоступаНоменклатурыМПСтраницы.ПодчиненныеЭлементы.СтраницаГруппыДоступаНоменклатурыМП;
		Возврат;
	КонецЕсли;
	
	Если ОтметкаГруппыДоступаНоменклатурыМП Тогда 
		Элементы.ГруппыДоступаНоменклатурыМПСтраницы.ТекущаяСтраница = Элементы.ГруппыДоступаНоменклатурыМПСтраницы.ПодчиненныеЭлементы.СтраницаГруппыДоступаНоменклатурыМПОтменить;
	Иначе
		Элементы.ГруппыДоступаНоменклатурыМПСтраницы.ТекущаяСтраница = Элементы.ГруппыДоступаНоменклатурыМПСтраницы.ПодчиненныеЭлементы.СтраницаГруппыДоступаНоменклатурыМПГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуВидыНоменклатурыМП(Готовность = Истина, Описание = "")
	
	СтатусВидыНоменклатурыМП = ПредустановленныеОписания.НайтиПоЗначению("ВидыНоменклатурыМП").Представление;
	
	Если Не Готовность Тогда
		Элементы.ВидыНоменклатурыМПСтраницы.ТекущаяСтраница = Элементы.ВидыНоменклатурыМПСтраницы.ПодчиненныеЭлементы.СтраницаВидыНоменклатуры2;
		СтатусВидыНоменклатурыМП = СтатусВидыНоменклатурыМП + " " + Описание;
	ИначеЕсли ОтметкаВидыНоменклатурыМаркетингИПродажи Тогда 
		Элементы.ВидыНоменклатурыМПСтраницы.ТекущаяСтраница = Элементы.ВидыНоменклатурыМПСтраницы.ПодчиненныеЭлементы.СтраницаВидыНоменклатурыОтменить2;
	Иначе
		Элементы.ВидыНоменклатурыМПСтраницы.ТекущаяСтраница = Элементы.ВидыНоменклатурыМПСтраницы.ПодчиненныеЭлементы.СтраницаВидыНоменклатурыГотово2;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуНоменклатураМП(Готовность = Истина, Описание = "")
	
	СтатусНоменклатураМП = ПредустановленныеОписания.НайтиПоЗначению("НоменклатураМП").Представление;
	
	Если Не Готовность Тогда
		Элементы.НоменклатураМПСтраницы.ТекущаяСтраница = Элементы.НоменклатураМПСтраницы.ПодчиненныеЭлементы.СтраницаНоменклатураМП;
		СтатусНоменклатураМП = СтатусНоменклатураМП + " " + Описание;
	ИначеЕсли ОтметкаНоменклатураМП Тогда 
		Элементы.НоменклатураМПСтраницы.ТекущаяСтраница = Элементы.НоменклатураМПСтраницы.ПодчиненныеЭлементы.СтраницаНоменклатураМПОтменить;
	Иначе
		Элементы.НоменклатураМПСтраницы.ТекущаяСтраница = Элементы.НоменклатураМПСтраницы.ПодчиненныеЭлементы.СтраницаНоменклатураМПГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуСегментыНоменклатуры()
	
	Если Не Элементы.ЭлементСегментыНоменклатуры.Доступность Тогда
		Элементы.СегментыНоменклатурыСтраницы.ТекущаяСтраница = Элементы.СегментыНоменклатурыСтраницы.ПодчиненныеЭлементы.СтраницаСегментыНоменклатуры;
		Возврат;
	КонецЕсли;
	
	Если ОтметкаСегментыНоменклатуры Тогда 
		Элементы.СегментыНоменклатурыСтраницы.ТекущаяСтраница = Элементы.СегментыНоменклатурыСтраницы.ПодчиненныеЭлементы.СтраницаСегментыНоменклатурыОтменить;
	Иначе
		Элементы.СегментыНоменклатурыСтраницы.ТекущаяСтраница = Элементы.СегментыНоменклатурыСтраницы.ПодчиненныеЭлементы.СтраницаСегментыНоменклатурыГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуБизнесРегионы()
	
	Если Не Элементы.ЭлементБизнесРегионы.Доступность Тогда
		Элементы.БизнесРегионыСтраницы.ТекущаяСтраница = Элементы.БизнесРегионыСтраницы.ПодчиненныеЭлементы.СтраницаБизнесРегионы;
		Возврат;
	КонецЕсли;
	
	Если ОтметкаБизнесРегионы Тогда 
		Элементы.БизнесРегионыСтраницы.ТекущаяСтраница = Элементы.БизнесРегионыСтраницы.ПодчиненныеЭлементы.СтраницаБизнесРегионыОтменить;
	Иначе
		Элементы.БизнесРегионыСтраницы.ТекущаяСтраница = Элементы.БизнесРегионыСтраницы.ПодчиненныеЭлементы.СтраницаБизнесРегионыГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуРолиПартнеров()
	
	Если Не Элементы.ЭлементРолиПартнеров.Доступность Тогда
		Элементы.РолиПартнеровСтраницы.ТекущаяСтраница = Элементы.РолиПартнеровСтраницы.ПодчиненныеЭлементы.СтраницаРолиПартнеров;
		Возврат;
	КонецЕсли;
	
	Если ОтметкаРолиПартнеров Тогда 
		Элементы.РолиПартнеровСтраницы.ТекущаяСтраница = Элементы.РолиПартнеровСтраницы.ПодчиненныеЭлементы.СтраницаРолиПартнеровОтменить;
	Иначе
		Элементы.РолиПартнеровСтраницы.ТекущаяСтраница = Элементы.РолиПартнеровСтраницы.ПодчиненныеЭлементы.СтраницаРолиПартнеровГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуГруппыДоступаПартнеровМП()
	
	Если Не Элементы.ЭлементГруппыДоступаПартнеров.Доступность Тогда
		Элементы.ГруппыДоступаПартнеровМПСтраницы.ТекущаяСтраница = Элементы.ГруппыДоступаПартнеровМПСтраницы.ПодчиненныеЭлементы.СтраницаГруппыДоступаПартнеровМП;
		Возврат;
	КонецЕсли;
	
	Если ОтметкаГруппыДоступаПартнеровМП Тогда 
		Элементы.ГруппыДоступаПартнеровМПСтраницы.ТекущаяСтраница = Элементы.ГруппыДоступаПартнеровМПСтраницы.ПодчиненныеЭлементы.СтраницаГруппыДоступаПартнеровМПОтменить;
	Иначе
		Элементы.ГруппыДоступаПартнеровМПСтраницы.ТекущаяСтраница = Элементы.ГруппыДоступаПартнеровМПСтраницы.ПодчиненныеЭлементы.СтраницаГруппыДоступаПартнеровМПГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуСегментыПартнеров()
	
	Если Не Элементы.ЭлементСегментыПартнеров.Доступность Тогда
		Элементы.СегментыПартнеровСтраницы.ТекущаяСтраница = Элементы.СегментыПартнеровСтраницы.ПодчиненныеЭлементы.СтраницаСегментыПартнеров;
		Возврат;
	КонецЕсли;
	
	Если ОтметкаСегментыПартнеров Тогда 
		Элементы.СегментыПартнеровСтраницы.ТекущаяСтраница = Элементы.СегментыПартнеровСтраницы.ПодчиненныеЭлементы.СтраницаСегментыПартнеровОтменить;
	Иначе
		Элементы.СегментыПартнеровСтраницы.ТекущаяСтраница = Элементы.СегментыПартнеровСтраницы.ПодчиненныеЭлементы.СтраницаСегментыПартнеровГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуПартнерыМП(Готовность = Истина, Описание = "")
	
	СтатусПартнерыМП = ПредустановленныеОписания.НайтиПоЗначению("ПартнерыМП").Представление;
	
	Если Не Готовность Тогда
		Элементы.ПартнерыМПСтраницы.ТекущаяСтраница = Элементы.ПартнерыМПСтраницы.ПодчиненныеЭлементы.СтраницаПартнерыМП;
		СтатусПартнерыМП = СтатусПартнерыМП + " " + Описание;
	ИначеЕсли ОтметкаПартнерыМП Тогда 
		Элементы.ПартнерыМПСтраницы.ТекущаяСтраница = Элементы.ПартнерыМПСтраницы.ПодчиненныеЭлементы.СтраницаПартнерыМПОтменить;
	Иначе
		Элементы.ПартнерыМПСтраницы.ТекущаяСтраница = Элементы.ПартнерыМПСтраницы.ПодчиненныеЭлементы.СтраницаПартнерыМПГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуКонтрагентыМП(Готовность = Истина, Описание = "")
	
	СтатусКонтрагентыМП = ПредустановленныеОписания.НайтиПоЗначению("КонтрагентыМП").Представление;
	
	Если Не Элементы.ЭлементКонтрагентыМП.Доступность Тогда
		Элементы.КонтрагентыМПСтраницы.ТекущаяСтраница = Элементы.КонтрагентыМПСтраницы.ПодчиненныеЭлементы.СтраницаКонтрагентыМП;
		Возврат;
	КонецЕсли;
	
	Если Не Готовность Тогда
		Элементы.КонтрагентыМПСтраницы.ТекущаяСтраница = Элементы.КонтрагентыМПСтраницы.ПодчиненныеЭлементы.СтраницаКонтрагентыМП;
		СтатусКонтрагентыМП = СтатусКонтрагентыМП + " " + Описание;
	ИначеЕсли ОтметкаКонтрагентыМП Тогда 
		Элементы.КонтрагентыМПСтраницы.ТекущаяСтраница = Элементы.КонтрагентыМПСтраницы.ПодчиненныеЭлементы.СтраницаКонтрагентыМПОтменить;
	Иначе
		Элементы.КонтрагентыМПСтраницы.ТекущаяСтраница = Элементы.КонтрагентыМПСтраницы.ПодчиненныеЭлементы.СтраницаКонтрагентыМПГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуГрафикиОплаты()
	
	Если Не Элементы.ЭлементГрафикиОплаты.Доступность Тогда
		Элементы.ГрафикиОплатыСтраницы.ТекущаяСтраница = Элементы.ГрафикиОплатыСтраницы.ПодчиненныеЭлементы.СтраницаГрафикиОплаты;
		Возврат;
	КонецЕсли;
	
	Если ОтметкаГрафикиОплаты Тогда 
		Элементы.ГрафикиОплатыСтраницы.ТекущаяСтраница = Элементы.ГрафикиОплатыСтраницы.ПодчиненныеЭлементы.СтраницаГрафикиОплатыОтменить;
	Иначе
		Элементы.ГрафикиОплатыСтраницы.ТекущаяСтраница = Элементы.ГрафикиОплатыСтраницы.ПодчиненныеЭлементы.СтраницаГрафикиОплатыГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуСоглашенияСКлиентами(Готовность = Истина, Описание = "")
	
	СтатусСоглашенияСКлиентами = ПредустановленныеОписания.НайтиПоЗначению("СоглашенияСКлиентами").Представление;
	
	Если Не Элементы.ЭлементСоглашенияСКлиентами.Доступность Тогда
		Элементы.СоглашенияСКлиентамиСтраницы.ТекущаяСтраница = Элементы.СоглашенияСКлиентамиСтраницы.ПодчиненныеЭлементы.СтраницаСоглашенияСКлиентами;
		Возврат;
	КонецЕсли;
	
	Если Не Готовность Тогда
		Элементы.СоглашенияСКлиентамиСтраницы.ТекущаяСтраница = Элементы.СоглашенияСКлиентамиСтраницы.ПодчиненныеЭлементы.СтраницаСоглашенияСКлиентами;
		СтатусСоглашенияСКлиентами = СтатусСоглашенияСКлиентами + " " + Описание;
	ИначеЕсли ОтметкаСоглашенияСКлиентами Тогда 
		Элементы.СоглашенияСКлиентамиСтраницы.ТекущаяСтраница = Элементы.СоглашенияСКлиентамиСтраницы.ПодчиненныеЭлементы.СтраницаСоглашенияСКлиентамиОтменить;
	Иначе
		Элементы.СоглашенияСКлиентамиСтраницы.ТекущаяСтраница = Элементы.СоглашенияСКлиентамиСтраницы.ПодчиненныеЭлементы.СтраницаСоглашенияСКлиентамиГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуСоглашенияСКлиентамиИнд(Готовность = Истина, Описание = "")
	
	СтатусСоглашенияСКлиентамиИнд = ПредустановленныеОписания.НайтиПоЗначению("СоглашенияСКлиентамиИнд").Представление;
	
	Если Не Элементы.ЭлементСоглашенияСКлиентамиИнд.Доступность Тогда
		Элементы.СоглашенияСКлиентамиИндСтраницы.ТекущаяСтраница = Элементы.СоглашенияСКлиентамиИндСтраницы.ПодчиненныеЭлементы.СтраницаСоглашенияСКлиентамиИнд;
		Возврат;
	КонецЕсли;
	
	Если Не Готовность Тогда
		Элементы.СоглашенияСКлиентамиИндСтраницы.ТекущаяСтраница = Элементы.СоглашенияСКлиентамиИндСтраницы.ПодчиненныеЭлементы.СтраницаСоглашенияСКлиентамиИнд;
		СтатусСоглашенияСКлиентамиИнд = СтатусСоглашенияСКлиентамиИнд + " " + Описание;
	ИначеЕсли ОтметкаСоглашенияСКлиентамиИнд Тогда 
		Элементы.СоглашенияСКлиентамиИндСтраницы.ТекущаяСтраница = Элементы.СоглашенияСКлиентамиИндСтраницы.ПодчиненныеЭлементы.СтраницаСоглашенияСКлиентамиИндОтменить;
	Иначе
		Элементы.СоглашенияСКлиентамиИндСтраницы.ТекущаяСтраница = Элементы.СоглашенияСКлиентамиИндСтраницы.ПодчиненныеЭлементы.СтраницаСоглашенияСКлиентамиИндГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуДоговорыКонтрагентовМП(Готовность = Истина, Описание = "")
	
	СтатусДоговорыКонтрагентовМП = ПредустановленныеОписания.НайтиПоЗначению("ДоговорыКонтрагентовМП").Представление;
	
	Если Не Готовность Тогда
		Элементы.ДоговорыКонтрагентовМПСтраницы.ТекущаяСтраница = Элементы.ДоговорыКонтрагентовМПСтраницы.ПодчиненныеЭлементы.СтраницаДоговорыКонтрагентовМП;
		СтатусДоговорыКонтрагентовМП = СтатусДоговорыКонтрагентовМП + " " + Описание;
	ИначеЕсли ОтметкаДоговорыКонтрагентовМП Тогда 
		Элементы.ДоговорыКонтрагентовМПСтраницы.ТекущаяСтраница = Элементы.ДоговорыКонтрагентовМПСтраницы.ПодчиненныеЭлементы.СтраницаДоговорыКонтрагентовМПОтменить;
	Иначе
		Элементы.ДоговорыКонтрагентовМПСтраницы.ТекущаяСтраница = Элементы.ДоговорыКонтрагентовМПСтраницы.ПодчиненныеЭлементы.СтраницаДоговорыКонтрагентовМПГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуЦеновыеГруппы()
	
	Если Не Элементы.ЭлементЦеновыеГруппы.Доступность Тогда
		Элементы.ЦеновыеГруппыСтраницы.ТекущаяСтраница = Элементы.ЦеновыеГруппыСтраницы.ПодчиненныеЭлементы.СтраницаЦеновыеГруппы;
		Возврат;
	КонецЕсли;
	
	Если ОтметкаЦеновыеГруппы Тогда 
		Элементы.ЦеновыеГруппыСтраницы.ТекущаяСтраница = Элементы.ЦеновыеГруппыСтраницы.ПодчиненныеЭлементы.СтраницаЦеновыеГруппыОтменить;
	Иначе
		Элементы.ЦеновыеГруппыСтраницы.ТекущаяСтраница = Элементы.ЦеновыеГруппыСтраницы.ПодчиненныеЭлементы.СтраницаЦеновыеГруппыГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуВидыЦен(Готовность = Истина, Описание = "")
	
	СтатусВидыЦен = ПредустановленныеОписания.НайтиПоЗначению("ВидыЦен").Представление;
	
	Если Не Готовность Тогда
		Элементы.ВидыЦенСтраницы.ТекущаяСтраница = Элементы.ВидыЦенСтраницы.ПодчиненныеЭлементы.СтраницаВидыЦен;
		СтатусВидыЦен = СтатусВидыЦен + " " + Описание;
	ИначеЕсли ОтметкаВидыЦен Тогда 
		Элементы.ВидыЦенСтраницы.ТекущаяСтраница = Элементы.ВидыЦенСтраницы.ПодчиненныеЭлементы.СтраницаВидыЦенОтменить;
	Иначе
		Элементы.ВидыЦенСтраницы.ТекущаяСтраница = Элементы.ВидыЦенСтраницы.ПодчиненныеЭлементы.СтраницаВидыЦенГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуГруппыПользователей()
	
	Если Не Элементы.ЭлементГруппыПользователей.Доступность Тогда
		Элементы.ГруппыПользователейСтраницы.ТекущаяСтраница = Элементы.ГруппыПользователейСтраницы.ПодчиненныеЭлементы.СтраницаГруппыПользователей;
		Возврат;
	КонецЕсли;
	
	Если ОтметкаГруппыПользователей Тогда 
		Элементы.ГруппыПользователейСтраницы.ТекущаяСтраница = Элементы.ГруппыПользователейСтраницы.ПодчиненныеЭлементы.СтраницаГруппыПользователейОтменить;
	Иначе
		Элементы.ГруппыПользователейСтраницы.ТекущаяСтраница = Элементы.ГруппыПользователейСтраницы.ПодчиненныеЭлементы.СтраницаГруппыПользователейГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуУсловияПредоставления(Готовность = Истина, Описание = "")
	
	СтатусУсловияПредоставления = ПредустановленныеОписания.НайтиПоЗначению("УсловияПредоставления").Представление;
	
	Если Не Элементы.ЭлементУсловияПредоставления.Доступность Тогда
		Элементы.УсловияПредоставленияСтраницы.ТекущаяСтраница = Элементы.УсловияПредоставленияСтраницы.ПодчиненныеЭлементы.СтраницаУсловияПредоставления;
		Возврат;
	КонецЕсли;
	
	Если Не Готовность Тогда
		Элементы.УсловияПредоставленияСтраницы.ТекущаяСтраница = Элементы.УсловияПредоставленияСтраницы.ПодчиненныеЭлементы.СтраницаУсловияПредоставления;
		СтатусУсловияПредоставления = СтатусУсловияПредоставления + " " + Описание;
	ИначеЕсли ОтметкаУсловияПредоставления Тогда 
		Элементы.УсловияПредоставленияСтраницы.ТекущаяСтраница = Элементы.УсловияПредоставленияСтраницы.ПодчиненныеЭлементы.СтраницаУсловияПредоставленияОтменить;
	Иначе
		Элементы.УсловияПредоставленияСтраницы.ТекущаяСтраница = Элементы.УсловияПредоставленияСтраницы.ПодчиненныеЭлементы.СтраницаУсловияПредоставленияГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуСкидкиНаценки(Готовность = Истина, Описание = "")
	
	СтатусСкидкиНаценки = ПредустановленныеОписания.НайтиПоЗначению("СкидкиНаценки").Представление;
	
	Если Не Элементы.ЭлементСкидкиНаценки.Доступность Тогда
		Элементы.СкидкиНаценкиСтраницы.ТекущаяСтраница = Элементы.СкидкиНаценкиСтраницы.ПодчиненныеЭлементы.СтраницаСкидкиНаценки;
		Возврат;
	КонецЕсли;
	
	Если Не Готовность Тогда
		Элементы.СкидкиНаценкиСтраницы.ТекущаяСтраница = Элементы.СкидкиНаценкиСтраницы.ПодчиненныеЭлементы.СтраницаСкидкиНаценки;
		СтатусСкидкиНаценки = СтатусСкидкиНаценки + " " + Описание;
	ИначеЕсли ОтметкаСкидкиНаценки Тогда 
		Элементы.СкидкиНаценкиСтраницы.ТекущаяСтраница = Элементы.СкидкиНаценкиСтраницы.ПодчиненныеЭлементы.СтраницаСкидкиНаценкиОтменить;
	Иначе
		Элементы.СкидкиНаценкиСтраницы.ТекущаяСтраница = Элементы.СкидкиНаценкиСтраницы.ПодчиненныеЭлементы.СтраницаСкидкиНаценкиГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуВидыКартЛояльности(Готовность = Истина, Описание = "")
	
	СтатусВидыКартЛояльности = ПредустановленныеОписания.НайтиПоЗначению("ВидыКартЛояльности").Представление;
	
	Если Не Элементы.ЭлементВидыКартЛояльности.Доступность Тогда
		Элементы.ВидыКартЛояльностиСтраницы.ТекущаяСтраница = Элементы.ВидыКартЛояльностиСтраницы.ПодчиненныеЭлементы.СтраницаВидыКартЛояльности;
		Возврат;
	КонецЕсли;
	
	Если Не Готовность Тогда
		Элементы.ВидыКартЛояльностиСтраницы.ТекущаяСтраница = Элементы.ВидыКартЛояльностиСтраницы.ПодчиненныеЭлементы.СтраницаВидыКартЛояльности;
		СтатусВидыКартЛояльности = СтатусВидыКартЛояльности + " " + Описание;
	ИначеЕсли ОтметкаВидыКартЛояльности Тогда 
		Элементы.ВидыКартЛояльностиСтраницы.ТекущаяСтраница = Элементы.ВидыКартЛояльностиСтраницы.ПодчиненныеЭлементы.СтраницаВидыКартЛояльностиОтменить;
	Иначе
		Элементы.ВидыКартЛояльностиСтраницы.ТекущаяСтраница = Элементы.ВидыКартЛояльностиСтраницы.ПодчиненныеЭлементы.СтраницаВидыКартЛояльностиГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуКартыЛояльности(Готовность = Истина, Описание = "")
	
	СтатусКартыЛояльности = ПредустановленныеОписания.НайтиПоЗначению("КартыЛояльности").Представление;
	
	Если Не Элементы.ЭлементКартыЛояльности.Доступность Тогда
		Элементы.КартыЛояльностиСтраницы.ТекущаяСтраница = Элементы.КартыЛояльностиСтраницы.ПодчиненныеЭлементы.СтраницаКартыЛояльности;
		Возврат;
	КонецЕсли;
	
	Если Не Готовность Тогда
		Элементы.КартыЛояльностиСтраницы.ТекущаяСтраница = Элементы.КартыЛояльностиСтраницы.ПодчиненныеЭлементы.СтраницаКартыЛояльности;
		СтатусКартыЛояльности = СтатусКартыЛояльности + " " + Описание;
	ИначеЕсли ОтметкаКартыЛояльности Тогда 
		Элементы.КартыЛояльностиСтраницы.ТекущаяСтраница = Элементы.КартыЛояльностиСтраницы.ПодчиненныеЭлементы.СтраницаКартыЛояльностиОтменить;
	Иначе
		Элементы.КартыЛояльностиСтраницы.ТекущаяСтраница = Элементы.КартыЛояльностиСтраницы.ПодчиненныеЭлементы.СтраницаКартыЛояльностиГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуУстановкаЦен(Готовность = Истина, Описание = "")
	
	СтатусУстановкаЦен = ПредустановленныеОписания.НайтиПоЗначению("УстановкаЦен").Представление;
	
	Если Не Готовность Тогда
		Элементы.УстановкаЦенСтраницы.ТекущаяСтраница = Элементы.УстановкаЦенСтраницы.ПодчиненныеЭлементы.СтраницаУстановкаЦен;
		СтатусУстановкаЦен = СтатусУстановкаЦен + " " + Описание;
	ИначеЕсли ОтметкаУстановкаЦен Тогда 
		Элементы.УстановкаЦенСтраницы.ТекущаяСтраница = Элементы.УстановкаЦенСтраницы.ПодчиненныеЭлементы.СтраницаУстановкаЦенОтменить;
	Иначе
		Элементы.УстановкаЦенСтраницы.ТекущаяСтраница = Элементы.УстановкаЦенСтраницы.ПодчиненныеЭлементы.СтраницаУстановкаЦенГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуНастройкиПродажПользователей(Готовность = Истина, Описание = "")
	
	СтатусНастройкиПродажПользователей = ПредустановленныеОписания.НайтиПоЗначению("НастройкиПродажПользователей").Представление;
	
	Если Не Элементы.ЭлементНастройкиПродажПользователей.Доступность Тогда
		Элементы.НастройкиПродажПользователейСтраницы.ТекущаяСтраница = Элементы.НастройкиПродажПользователейСтраницы.ПодчиненныеЭлементы.СтраницаНастройкиПродажПользователей;
		Возврат;
	КонецЕсли;
	
	Если Не Готовность Тогда
		Элементы.НастройкиПродажПользователейСтраницы.ТекущаяСтраница = Элементы.НастройкиПродажПользователейСтраницы.ПодчиненныеЭлементы.СтраницаНастройкиПродажПользователей;
		СтатусНастройкиПродажПользователей = СтатусНастройкиПродажПользователей + " " + Описание;
	ИначеЕсли ОтметкаНастройкиПродажПользователей Тогда 
		Элементы.НастройкиПродажПользователейСтраницы.ТекущаяСтраница = Элементы.НастройкиПродажПользователейСтраницы.ПодчиненныеЭлементы.СтраницаНастройкиПродажПользователейОтменить;
	Иначе
		Элементы.НастройкиПродажПользователейСтраницы.ТекущаяСтраница = Элементы.НастройкиПродажПользователейСтраницы.ПодчиненныеЭлементы.СтраницаНастройкиПродажПользователейГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуСоглашенияСПоставщикамиМП(Готовность = Истина, Описание = "")
	
	СтатусСоглашенияСПоставщикамиМП = ПредустановленныеОписания.НайтиПоЗначению("СоглашенияСПоставщикамиМП").Представление;
	
	Если Не Элементы.ЭлементСоглашенияСПоставщикамиМП.Доступность Тогда
		Элементы.СоглашенияСПоставщикамиМПСтраницы.ТекущаяСтраница = Элементы.СоглашенияСПоставщикамиМПСтраницы.ПодчиненныеЭлементы.СтраницаСоглашенияСПоставщикамиМП;
		Возврат;
	КонецЕсли;
	
	Если Не Готовность Тогда
		Элементы.СоглашенияСПоставщикамиМПСтраницы.ТекущаяСтраница = Элементы.СоглашенияСПоставщикамиМПСтраницы.ПодчиненныеЭлементы.СтраницаСоглашенияСПоставщикамиМП;
		СтатусСоглашенияСПоставщикамиМП = СтатусСоглашенияСПоставщикамиМП + " " + Описание;
	ИначеЕсли ОтметкаСоглашенияСПоставщикамиМП Тогда 
		Элементы.СоглашенияСПоставщикамиМПСтраницы.ТекущаяСтраница = Элементы.СоглашенияСПоставщикамиМПСтраницы.ПодчиненныеЭлементы.СтраницаСоглашенияСПоставщикамиМПОтменить;
	Иначе
		Элементы.СоглашенияСПоставщикамиМПСтраницы.ТекущаяСтраница = Элементы.СоглашенияСПоставщикамиМПСтраницы.ПодчиненныеЭлементы.СтраницаСоглашенияСПоставщикамиМПГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуУстановкаЦенПоставщиковМП(Готовность = Истина, Описание = "")
	
	СтатусУстановкаЦенПоставщиковМП = ПредустановленныеОписания.НайтиПоЗначению("УстановкаЦенПоставщиковМП").Представление;
	
	Если Не Элементы.ЭлементУстановкаЦенПоставщиковМП.Доступность Тогда
		Элементы.УстановкаЦенПоставщиковМПСтраницы.ТекущаяСтраница = Элементы.УстановкаЦенПоставщиковМПСтраницы.ПодчиненныеЭлементы.СтраницаУстановкаЦенПоставщиковМП;
		Возврат;
	КонецЕсли;
	
	Если Не Готовность Тогда
		Элементы.УстановкаЦенПоставщиковМПСтраницы.ТекущаяСтраница = Элементы.УстановкаЦенПоставщиковМПСтраницы.ПодчиненныеЭлементы.СтраницаУстановкаЦенПоставщиковМП;
		СтатусУстановкаЦенПоставщиковМП = СтатусУстановкаЦенПоставщиковМП + " " + Описание;
	ИначеЕсли ОтметкаУстановкаЦенПоставщиковМП Тогда 
		Элементы.УстановкаЦенПоставщиковМПСтраницы.ТекущаяСтраница = Элементы.УстановкаЦенПоставщиковМПСтраницы.ПодчиненныеЭлементы.СтраницаУстановкаЦенПоставщиковМПОтменить;
	Иначе
		Элементы.УстановкаЦенПоставщиковМПСтраницы.ТекущаяСтраница = Элементы.УстановкаЦенПоставщиковМПСтраницы.ПодчиненныеЭлементы.СтраницаУстановкаЦенПоставщиковМПГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуКаналыРекламныхВоздействий(Готовность = Истина, Описание = "")
	
	СтатусКаналыРекламныхВоздействий = ПредустановленныеОписания.НайтиПоЗначению("КаналыРекламныхВоздействий").Представление;
	
	Если Не Элементы.ЭлементКаналыРекламныхВоздействий.Доступность Тогда
		Элементы.КаналыРекламныхВоздействийСтраницы.ТекущаяСтраница = Элементы.КаналыРекламныхВоздействийСтраницы.ПодчиненныеЭлементы.СтраницаКаналыРекламныхВоздействий;
		Возврат;
	КонецЕсли;
	
	Если Не Готовность Тогда
		Элементы.КаналыРекламныхВоздействийСтраницы.ТекущаяСтраница = Элементы.КаналыРекламныхВоздействийСтраницы.ПодчиненныеЭлементы.СтраницаКаналыРекламныхВоздействий;
		СтатусКаналыРекламныхВоздействий = СтатусКаналыРекламныхВоздействий + " " + Описание;
	ИначеЕсли ОтметкаКаналыРекламныхВоздействий Тогда 
		Элементы.КаналыРекламныхВоздействийСтраницы.ТекущаяСтраница = Элементы.КаналыРекламныхВоздействийСтраницы.ПодчиненныеЭлементы.СтраницаКаналыРекламныхВоздействийОтменить;
	Иначе
		Элементы.КаналыРекламныхВоздействийСтраницы.ТекущаяСтраница = Элементы.КаналыРекламныхВоздействийСтраницы.ПодчиненныеЭлементы.СтраницаКаналыРекламныхВоздействийГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуМаркетинговыеМероприятия(Готовность = Истина, Описание = "")
	
	СтатусМаркетинговыеМероприятия = ПредустановленныеОписания.НайтиПоЗначению("МаркетинговыеМероприятия").Представление;
	
	Если Не Элементы.ЭлементМаркетинговыеМероприятия.Доступность Тогда
		Элементы.МаркетинговыеМероприятияСтраницы.ТекущаяСтраница = Элементы.МаркетинговыеМероприятияСтраницы.ПодчиненныеЭлементы.СтраницаМаркетинговыеМероприятия;
		Возврат;
	КонецЕсли;
	
	Если Не Готовность Тогда
		Элементы.МаркетинговыеМероприятияСтраницы.ТекущаяСтраница = Элементы.МаркетинговыеМероприятияСтраницы.ПодчиненныеЭлементы.СтраницаМаркетинговыеМероприятия;
		СтатусМаркетинговыеМероприятия = СтатусМаркетинговыеМероприятия + " " + Описание;
	ИначеЕсли ОтметкаМаркетинговыеМероприятия Тогда 
		Элементы.МаркетинговыеМероприятияСтраницы.ТекущаяСтраница = Элементы.МаркетинговыеМероприятияСтраницы.ПодчиненныеЭлементы.СтраницаМаркетинговыеМероприятияОтменить;
	Иначе
		Элементы.МаркетинговыеМероприятияСтраницы.ТекущаяСтраница = Элементы.МаркетинговыеМероприятияСтраницы.ПодчиненныеЭлементы.СтраницаМаркетинговыеМероприятияГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуСостоянияПроцессов(Готовность = Истина, Описание = "")
	
	СтатусСостоянияПроцессов = ПредустановленныеОписания.НайтиПоЗначению("СостоянияПроцессов").Представление;
	
	Если Не Элементы.ЭлементСостоянияПроцессов.Доступность Тогда
		Элементы.СостоянияПроцессовСтраницы.ТекущаяСтраница = Элементы.СостоянияПроцессовСтраницы.ПодчиненныеЭлементы.СтраницаСостоянияПроцессов;
		Возврат;
	КонецЕсли;
	
	Если Не Готовность Тогда
		Элементы.СостоянияПроцессовСтраницы.ТекущаяСтраница = Элементы.СостоянияПроцессовСтраницы.ПодчиненныеЭлементы.СтраницаСостоянияПроцессов;
		СтатусСостоянияПроцессов = СтатусСостоянияПроцессов + " " + Описание;
	ИначеЕсли ОтметкаСостоянияПроцессов Тогда 
		Элементы.СостоянияПроцессовСтраницы.ТекущаяСтраница = Элементы.СостоянияПроцессовСтраницы.ПодчиненныеЭлементы.СтраницаСостоянияПроцессовОтменить;
	Иначе
		Элементы.СостоянияПроцессовСтраницы.ТекущаяСтраница = Элементы.СостоянияПроцессовСтраницы.ПодчиненныеЭлементы.СтраницаСостоянияПроцессовГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуВидыСделок(Готовность = Истина, Описание = "")
	
	СтатусВидыСделок = ПредустановленныеОписания.НайтиПоЗначению("ВидыСделок").Представление;
	
	Если Не Элементы.ЭлементВидыСделок.Доступность Тогда
		Элементы.ВидыСделокСтраницы.ТекущаяСтраница = Элементы.ВидыСделокСтраницы.ПодчиненныеЭлементы.СтраницаВидыСделок;
		Возврат;
	КонецЕсли;
	
	Если Не Готовность Тогда
		Элементы.ВидыСделокСтраницы.ТекущаяСтраница = Элементы.ВидыСделокСтраницы.ПодчиненныеЭлементы.СтраницаВидыСделок;
		СтатусВидыСделок = СтатусВидыСделок + " " + Описание;
	ИначеЕсли ОтметкаВидыСделок Тогда 
		Элементы.ВидыСделокСтраницы.ТекущаяСтраница = Элементы.ВидыСделокСтраницы.ПодчиненныеЭлементы.СтраницаВидыСделокОтменить;
	Иначе
		Элементы.ВидыСделокСтраницы.ТекущаяСтраница = Элементы.ВидыСделокСтраницы.ПодчиненныеЭлементы.СтраницаВидыСделокГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуПричиныНеудовлетворенияСпроса()
	
	Если Не Элементы.ЭлементПричиныНеудовлетворенияСпроса.Доступность Тогда
		Элементы.ПричиныНеудовлетворенияСпросаСтраницы.ТекущаяСтраница = Элементы.ПричиныНеудовлетворенияСпросаСтраницы.ПодчиненныеЭлементы.СтраницаПричиныНеудовлетворенияСпроса;
		Возврат;
	КонецЕсли;
	
	Если ОтметкаПричиныНеудовлетворенияСпроса Тогда 
		Элементы.ПричиныНеудовлетворенияСпросаСтраницы.ТекущаяСтраница = Элементы.ПричиныНеудовлетворенияСпросаСтраницы.ПодчиненныеЭлементы.СтраницаПричиныНеудовлетворенияСпросаОтменить;
	Иначе
		Элементы.ПричиныНеудовлетворенияСпросаСтраницы.ТекущаяСтраница = Элементы.ПричиныНеудовлетворенияСпросаСтраницы.ПодчиненныеЭлементы.СтраницаПричиныНеудовлетворенияСпросаГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуПричиныПроигрышаСделок()
	
	Если Не Элементы.ЭлементПричиныПроигрышаСделок.Доступность Тогда
		Элементы.ПричиныПроигрышаСделокСтраницы.ТекущаяСтраница = Элементы.ПричиныПроигрышаСделокСтраницы.ПодчиненныеЭлементы.СтраницаПричиныПроигрышаСделок;
		Возврат;
	КонецЕсли;
	
	Если ОтметкаПричиныПроигрышаСделок Тогда 
		Элементы.ПричиныПроигрышаСделокСтраницы.ТекущаяСтраница = Элементы.ПричиныПроигрышаСделокСтраницы.ПодчиненныеЭлементы.СтраницаПричиныПроигрышаСделокОтменить;
	Иначе
		Элементы.ПричиныПроигрышаСделокСтраницы.ТекущаяСтраница = Элементы.ПричиныПроигрышаСделокСтраницы.ПодчиненныеЭлементы.СтраницаПричиныПроигрышаСделокГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуРолиКонтактныхЛицВСделкахИПроектах()
	
	Если Не Элементы.ЭлементРолиКонтактныхЛицВСделкахИПроектах.Доступность Тогда
		Элементы.РолиКонтактныхЛицВСделкахИПроектахСтраницы.ТекущаяСтраница = Элементы.РолиКонтактныхЛицВСделкахИПроектахСтраницы.ПодчиненныеЭлементы.СтраницаРолиКонтактныхЛицВСделкахИПроектах;
		Возврат;
	КонецЕсли;
	
	Если ОтметкаРолиКонтактныхЛицВСделкахИПроектах Тогда 
		Элементы.РолиКонтактныхЛицВСделкахИПроектахСтраницы.ТекущаяСтраница = Элементы.РолиКонтактныхЛицВСделкахИПроектахСтраницы.ПодчиненныеЭлементы.СтраницаРолиКонтактныхЛицВСделкахИПроектахОтменить;
	Иначе
		Элементы.РолиКонтактныхЛицВСделкахИПроектахСтраницы.ТекущаяСтраница = Элементы.РолиКонтактныхЛицВСделкахИПроектахСтраницы.ПодчиненныеЭлементы.СтраницаРолиКонтактныхЛицВСделкахИПроектахГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуВидыСвязейМеждуПартнерами()
	
	Если Не Элементы.ЭлементВидыСвязейМеждуПартнерами.Доступность Тогда
		Элементы.ВидыСвязейМеждуПартнерамиСтраницы.ТекущаяСтраница = Элементы.ВидыСвязейМеждуПартнерамиСтраницы.ПодчиненныеЭлементы.СтраницаВидыСвязейМеждуПартнерами;
		Возврат;
	КонецЕсли;
	
	Если ОтметкаВидыСвязейМеждуПартнерами Тогда 
		Элементы.ВидыСвязейМеждуПартнерамиСтраницы.ТекущаяСтраница = Элементы.ВидыСвязейМеждуПартнерамиСтраницы.ПодчиненныеЭлементы.СтраницаВидыСвязейМеждуПартнерамиОтменить;
	Иначе
		Элементы.ВидыСвязейМеждуПартнерамиСтраницы.ТекущаяСтраница = Элементы.ВидыСвязейМеждуПартнерамиСтраницы.ПодчиненныеЭлементы.СтраницаВидыСвязейМеждуПартнерамиГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуРолиКонтактныхЛицПартнеров()
	
	Если Не Элементы.ЭлементРолиКонтактныхЛицПартнеров.Доступность Тогда
		Элементы.РолиКонтактныхЛицПартнеровСтраницы.ТекущаяСтраница = Элементы.РолиКонтактныхЛицПартнеровСтраницы.ПодчиненныеЭлементы.СтраницаРолиКонтактныхЛицПартнеров;
		Возврат;
	КонецЕсли;
	
	Если ОтметкаРолиКонтактныхЛицПартнеров Тогда 
		Элементы.РолиКонтактныхЛицПартнеровСтраницы.ТекущаяСтраница = Элементы.РолиКонтактныхЛицПартнеровСтраницы.ПодчиненныеЭлементы.СтраницаРолиКонтактныхЛицПартнеровОтменить;
	Иначе
		Элементы.РолиКонтактныхЛицПартнеровСтраницы.ТекущаяСтраница = Элементы.РолиКонтактныхЛицПартнеровСтраницы.ПодчиненныеЭлементы.СтраницаРолиКонтактныхЛицПартнеровГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуИсточникиДанныхПланирования()
	
	Если Не Элементы.ЭлементИсточникиДанныхПланирования.Доступность Тогда
		Элементы.ИсточникиДанныхПланированияСтраницы.ТекущаяСтраница = Элементы.ИсточникиДанныхПланированияСтраницы.ПодчиненныеЭлементы.СтраницаИсточникиДанныхПланирования;
		Возврат;
	КонецЕсли;
	
	Если ОтметкаИсточникиДанныхПланирования Тогда 
		Элементы.ИсточникиДанныхПланированияСтраницы.ТекущаяСтраница = Элементы.ИсточникиДанныхПланированияСтраницы.ПодчиненныеЭлементы.СтраницаИсточникиДанныхПланированияОтменить;
	Иначе
		Элементы.ИсточникиДанныхПланированияСтраницы.ТекущаяСтраница = Элементы.ИсточникиДанныхПланированияСтраницы.ПодчиненныеЭлементы.СтраницаИсточникиДанныхПланированияГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуУсловияОПТП(Готовность = Истина, Описание = "")
	
	СтатусУсловияОПТП = ПредустановленныеОписания.НайтиПоЗначению("УсловияОПТП").Представление;
	
	Если Не Элементы.ЭлементУсловияОПТП.Доступность Тогда
		Элементы.УсловияОПТПСтраницы.ТекущаяСтраница = Элементы.УсловияОПТПСтраницы.ПодчиненныеЭлементы.СтраницаУсловияОПТП;
		Возврат;
	КонецЕсли;
	
	Если Не Готовность Тогда
		Элементы.УсловияОПТПСтраницы.ТекущаяСтраница = Элементы.УсловияОПТПСтраницы.ПодчиненныеЭлементы.СтраницаУсловияОПТП;
		СтатусУсловияОПТП = СтатусУсловияОПТП + " " + Описание;
	ИначеЕсли ОтметкаУсловияОПТП Тогда 
		Элементы.УсловияОПТПСтраницы.ТекущаяСтраница = Элементы.УсловияОПТПСтраницы.ПодчиненныеЭлементы.СтраницаУсловияОПТПОтменить;
	Иначе
		Элементы.УсловияОПТПСтраницы.ТекущаяСтраница = Элементы.УсловияОПТПСтраницы.ПодчиненныеЭлементы.СтраницаУсловияОПТПГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуВариантыКомплектацииНоменклатуры(Готовность = Истина, Описание = "")
	
	СтатусВариантыКомплектацииНоменклатуры = ПредустановленныеОписания.НайтиПоЗначению("ВариантыКомплектацииНоменклатуры").Представление;
	
	Если Не Элементы.ЭлементВариантыКомплектацииНоменклатуры.Доступность Тогда
		Элементы.ВариантыКомплектацииНоменклатурыСтраницы.ТекущаяСтраница = Элементы.ВариантыКомплектацииНоменклатурыСтраницы.ПодчиненныеЭлементы.СтраницаВариантыКомплектацииНоменклатуры;
		Возврат;
	КонецЕсли;
	
	Если Не Готовность Тогда
		Элементы.ВариантыКомплектацииНоменклатурыСтраницы.ТекущаяСтраница = Элементы.ВариантыКомплектацииНоменклатурыСтраницы.ПодчиненныеЭлементы.СтраницаВариантыКомплектацииНоменклатуры;
		СтатусВариантыКомплектацииНоменклатуры = СтатусВариантыКомплектацииНоменклатуры + " " + Описание;
	ИначеЕсли ОтметкаВариантыКомплектацииНоменклатуры Тогда 
		Элементы.ВариантыКомплектацииНоменклатурыСтраницы.ТекущаяСтраница = Элементы.ВариантыКомплектацииНоменклатурыСтраницы.ПодчиненныеЭлементы.СтраницаВариантыКомплектацииНоменклатурыОтменить;
	Иначе
		Элементы.ВариантыКомплектацииНоменклатурыСтраницы.ТекущаяСтраница = Элементы.ВариантыКомплектацииНоменклатурыСтраницы.ПодчиненныеЭлементы.СтраницаВариантыКомплектацииНоменклатурыГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуНоменклатураПродаваемаяСовместно()
	
	Если Не Элементы.ЭлементНоменклатураПродаваемаяСовместно.Доступность Тогда
		Элементы.НоменклатураПродаваемаяСовместноСтраницы.ТекущаяСтраница = Элементы.НоменклатураПродаваемаяСовместноСтраницы.ПодчиненныеЭлементы.СтраницаНоменклатураПродаваемаяСовместно;
		Возврат;
	КонецЕсли;
	
	Если ОтметкаНоменклатураПродаваемаяСовместно Тогда 
		Элементы.НоменклатураПродаваемаяСовместноСтраницы.ТекущаяСтраница = Элементы.НоменклатураПродаваемаяСовместноСтраницы.ПодчиненныеЭлементы.СтраницаНоменклатураПродаваемаяСовместноОтменить;
	Иначе
		Элементы.НоменклатураПродаваемаяСовместноСтраницы.ТекущаяСтраница = Элементы.НоменклатураПродаваемаяСовместноСтраницы.ПодчиненныеЭлементы.СтраницаНоменклатураПродаваемаяСовместноГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуПричиныВозникновенияПретензий()
	
	Если Не Элементы.ЭлементПричиныВозникновенияПретензий.Доступность Тогда
		Элементы.ПричиныВозникновенияПретензийСтраницы.ТекущаяСтраница = Элементы.ПричиныВозникновенияПретензийСтраницы.ПодчиненныеЭлементы.СтраницаПричиныВозникновенияПретензий;
		Возврат;
	КонецЕсли;
	
	Если ОтметкаПричиныВозникновенияПретензий Тогда 
		Элементы.ПричиныВозникновенияПретензийСтраницы.ТекущаяСтраница = Элементы.ПричиныВозникновенияПретензийСтраницы.ПодчиненныеЭлементы.СтраницаПричиныВозникновенияПретензийОтменить;
	Иначе
		Элементы.ПричиныВозникновенияПретензийСтраницы.ТекущаяСтраница = Элементы.ПричиныВозникновенияПретензийСтраницы.ПодчиненныеЭлементы.СтраницаПричиныВозникновенияПретензийГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуПричиныОтменыЗаказовКлиентов()
	
	Если Не Элементы.ЭлементПричиныОтменыЗаказовКлиентов.Доступность Тогда
		Элементы.ПричиныОтменыЗаказовКлиентовСтраницы.ТекущаяСтраница = Элементы.ПричиныОтменыЗаказовКлиентовСтраницы.ПодчиненныеЭлементы.СтраницаПричиныОтменыЗаказовКлиентов;
		Возврат;
	КонецЕсли;
	
	Если ОтметкаПричиныОтменыЗаказовКлиентов Тогда 
		Элементы.ПричиныОтменыЗаказовКлиентовСтраницы.ТекущаяСтраница = Элементы.ПричиныОтменыЗаказовКлиентовСтраницы.ПодчиненныеЭлементы.СтраницаПричиныОтменыЗаказовКлиентовОтменить;
	Иначе
		Элементы.ПричиныОтменыЗаказовКлиентовСтраницы.ТекущаяСтраница = Элементы.ПричиныОтменыЗаказовКлиентовСтраницы.ПодчиненныеЭлементы.СтраницаПричиныОтменыЗаказовКлиентовГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуФорматыМагазинов(Готовность = Истина, Описание = "")
	
	СтатусФорматыМагазинов = ПредустановленныеОписания.НайтиПоЗначению("ФорматыМагазинов").Представление;
	
	Если Не Элементы.ЭлементФорматыМагазинов.Доступность Тогда
		Элементы.ФорматыМагазиновСтраницы.ТекущаяСтраница = Элементы.ФорматыМагазиновСтраницы.ПодчиненныеЭлементы.СтраницаФорматыМагазинов;
		Возврат;
	КонецЕсли;
	
	Если Не Готовность Тогда
		Элементы.ФорматыМагазиновСтраницы.ТекущаяСтраница = Элементы.ФорматыМагазиновСтраницы.ПодчиненныеЭлементы.СтраницаФорматыМагазинов;
		СтатусФорматыМагазинов = СтатусФорматыМагазинов + " " + Описание;
	ИначеЕсли ОтметкаФорматыМагазинов Тогда 
		Элементы.ФорматыМагазиновСтраницы.ТекущаяСтраница = Элементы.ФорматыМагазиновСтраницы.ПодчиненныеЭлементы.СтраницаФорматыМагазиновОтменить;
	Иначе
		Элементы.ФорматыМагазиновСтраницы.ТекущаяСтраница = Элементы.ФорматыМагазиновСтраницы.ПодчиненныеЭлементы.СтраницаФорматыМагазиновГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуТоварныеКатегории(Готовность = Истина, Описание = "")
	
	СтатусТоварныеКатегории = ПредустановленныеОписания.НайтиПоЗначению("ТоварныеКатегории").Представление;
	
	Если Не Элементы.ЭлементТоварныеКатегории.Доступность Тогда
		Элементы.ТоварныеКатегорииСтраницы.ТекущаяСтраница = Элементы.ТоварныеКатегорииСтраницы.ПодчиненныеЭлементы.СтраницаТоварныеКатегории;
		Возврат;
	КонецЕсли;
	
	Если Не Готовность Тогда
		Элементы.ТоварныеКатегорииСтраницы.ТекущаяСтраница = Элементы.ТоварныеКатегорииСтраницы.ПодчиненныеЭлементы.СтраницаТоварныеКатегории;
		СтатусТоварныеКатегории = СтатусТоварныеКатегории + " " + Описание;
	ИначеЕсли ОтметкаТоварныеКатегории Тогда 
		Элементы.ТоварныеКатегорииСтраницы.ТекущаяСтраница = Элементы.ТоварныеКатегорииСтраницы.ПодчиненныеЭлементы.СтраницаТоварныеКатегорииОтменить;
	Иначе
		Элементы.ТоварныеКатегорииСтраницы.ТекущаяСтраница = Элементы.ТоварныеКатегорииСтраницы.ПодчиненныеЭлементы.СтраницаТоварныеКатегорииГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуИзменениеАссортимента(Готовность = Истина, Описание = "")
	
	СтатусИзменениеАссортимента = ПредустановленныеОписания.НайтиПоЗначению("ИзменениеАссортимента").Представление;
	
	Если Не Элементы.ЭлементИзменениеАссортимента.Доступность Тогда
		Элементы.ИзменениеАссортиментаСтраницы.ТекущаяСтраница = Элементы.ИзменениеАссортиментаСтраницы.ПодчиненныеЭлементы.СтраницаИзменениеАссортимента;
		Возврат;
	КонецЕсли;
	
	Если Не Готовность Тогда
		Элементы.ИзменениеАссортиментаСтраницы.ТекущаяСтраница = Элементы.ИзменениеАссортиментаСтраницы.ПодчиненныеЭлементы.СтраницаИзменениеАссортимента;
		СтатусИзменениеАссортимента = СтатусИзменениеАссортимента + " " + Описание;
	ИначеЕсли ОтметкаИзменениеАссортимента Тогда 
		Элементы.ИзменениеАссортиментаСтраницы.ТекущаяСтраница = Элементы.ИзменениеАссортиментаСтраницы.ПодчиненныеЭлементы.СтраницаИзменениеАссортиментаОтменить;
	Иначе
		Элементы.ИзменениеАссортиментаСтраницы.ТекущаяСтраница = Элементы.ИзменениеАссортиментаСтраницы.ПодчиненныеЭлементы.СтраницаИзменениеАссортиментаГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуМарки(Готовность = Истина, Описание = "")
	
	СтатусМарки = ПредустановленныеОписания.НайтиПоЗначению("Марки").Представление;
	
	Если Не Элементы.ЭлементМарки.Доступность Тогда
		Элементы.МаркиСтраницы.ТекущаяСтраница = Элементы.МаркиСтраницы.ПодчиненныеЭлементы.СтраницаМарки;
		Возврат;
	КонецЕсли;
	
	Если Не Готовность Тогда
		Элементы.МаркиСтраницы.ТекущаяСтраница = Элементы.МаркиСтраницы.ПодчиненныеЭлементы.СтраницаМарки;
		СтатусМарки = СтатусМарки + " " + Описание;
	ИначеЕсли ОтметкаМарки Тогда 
		Элементы.МаркиСтраницы.ТекущаяСтраница = Элементы.МаркиСтраницы.ПодчиненныеЭлементы.СтраницаМаркиОтменить;
	Иначе
		Элементы.МаркиСтраницы.ТекущаяСтраница = Элементы.МаркиСтраницы.ПодчиненныеЭлементы.СтраницаМаркиГотово;
	КонецЕсли;
	
КонецПроцедуры

// Страница ремонты.

&НаКлиенте
Процедура УстановитьСтраницуНоменклатураРемонты()
	
	Если ОтметкаНоменклатураРемонты Тогда 
		Элементы.НоменклатураРемонтыСтраницы.ТекущаяСтраница = Элементы.НоменклатураРемонтыСтраницы.ПодчиненныеЭлементы.СтраницаНоменклатураРемонтыОтменить;
	Иначе
		Элементы.НоменклатураРемонтыСтраницы.ТекущаяСтраница = Элементы.НоменклатураРемонтыСтраницы.ПодчиненныеЭлементы.СтраницаНоменклатураРемонтыГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуВидыРаботСотрудниковРемонты()
	
	Если ОтметкаВидыРаботСотрудниковРемонты Тогда 
		Элементы.ВидыРаботСотрудниковРемонтыСтраницы.ТекущаяСтраница = Элементы.ВидыРаботСотрудниковРемонтыСтраницы.ПодчиненныеЭлементы.СтраницаВидыРаботСотрудниковРемонтыОтменить;
	ИначеЕсли ПропуститьВидыРаботСотрудниковРемонты Тогда
		Элементы.ВидыРаботСотрудниковРемонтыСтраницы.ТекущаяСтраница = Элементы.ВидыРаботСотрудниковРемонтыСтраницы.ПодчиненныеЭлементы.СтраницаВидыРаботСотрудниковРемонтыПропустить;
	Иначе
		Элементы.ВидыРаботСотрудниковРемонтыСтраницы.ТекущаяСтраница = Элементы.ВидыРаботСотрудниковРемонтыСтраницы.ПодчиненныеЭлементы.СтраницаВидыРаботСотрудниковРемонтыГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуРасценкиВидовРаботРемонты(Готовность = Истина, Описание = "")
	
	Если НеИспользоватьРегистрациюВыполненныхРаботРемонты Тогда
		Элементы.РасценкиРаботСотрудниковРемонтыСтраницы.ТекущаяСтраница = Элементы.РасценкиРаботСотрудниковРемонтыСтраницы.ПодчиненныеЭлементы.СтраницаРасценкиРаботСотрудниковРемонтыПропустить;
		СтатусРасценкиРаботСотрудниковРемонты = НСтр("ru='Не требуется, так как пропущено заполнение пункта 2. Виды работ сотрудников.';uk='Не потрібно, так як пропущене заповнення пункту 2. Види робіт співробітників.'");
		Возврат;
	КонецЕсли;
	
	СтатусРасценкиРаботСотрудниковРемонты = ПредустановленныеОписания.НайтиПоЗначению("РасценкиРаботСотрудниковРемонты").Представление;
	
	Если Не Готовность Тогда
		Элементы.РасценкиРаботСотрудниковРемонтыСтраницы.ТекущаяСтраница = Элементы.РасценкиРаботСотрудниковРемонтыСтраницы.ПодчиненныеЭлементы.СтраницаРасценкиРаботСотрудниковРемонты;
		СтатусРасценкиРаботСотрудниковРемонты = СтатусРасценкиРаботСотрудниковРемонты + Описание;
	ИначеЕсли ОтметкаРасценкиРаботСотрудниковРемонты Тогда 
		Элементы.РасценкиРаботСотрудниковРемонтыСтраницы.ТекущаяСтраница = Элементы.РасценкиРаботСотрудниковРемонтыСтраницы.ПодчиненныеЭлементы.СтраницаРасценкиРаботСотрудниковРемонтыОтменить;
	ИначеЕсли ПропуститьРасценкиРаботСотрудниковРемонты Тогда
		Элементы.РасценкиРаботСотрудниковРемонтыСтраницы.ТекущаяСтраница = Элементы.РасценкиРаботСотрудниковРемонтыСтраницы.ПодчиненныеЭлементы.СтраницаРасценкиРаботСотрудниковРемонтыПропустить;
	Иначе
		Элементы.РасценкиРаботСотрудниковРемонтыСтраницы.ТекущаяСтраница = Элементы.РасценкиРаботСотрудниковРемонтыСтраницы.ПодчиненныеЭлементы.СтраницаРасценкиРаботСотрудниковРемонтыГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуБригадыРемонты()
	
	Если НеИспользоватьРегистрациюВыполненныхРаботРемонты Тогда
		Элементы.БригадыРемонтыСтраницы.ТекущаяСтраница = Элементы.БригадыРемонтыСтраницы.ПодчиненныеЭлементы.СтраницаБригадыРемонтыПропустить;
		СтатусБригадыРемонты = НСтр("ru='Не требуется, так как пропущено заполнение пункта 2. Виды работ сотрудников.';uk='Не потрібно, так як пропущене заповнення пункту 2. Види робіт співробітників.'");
		Возврат;
	КонецЕсли;
	
	СтатусБригадыРемонты = ПредустановленныеОписания.НайтиПоЗначению("БригадыРемонты").Представление;
	
	Если ОтметкаБригадыРемонты Тогда
		Элементы.БригадыРемонтыСтраницы.ТекущаяСтраница = Элементы.БригадыРемонтыСтраницы.ПодчиненныеЭлементы.СтраницаБригадыРемонтыОтменить;
	Иначе
		Элементы.БригадыРемонтыСтраницы.ТекущаяСтраница = Элементы.БригадыРемонтыСтраницы.ПодчиненныеЭлементы.СтраницаБригадыРемонтыГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуОбщиеВидыРемонтов()
	
	Если ОтметкаОбщиеВидыРемонтов Тогда
		Элементы.ОбщиеВидыРемонтовСтраницы.ТекущаяСтраница = Элементы.ОбщиеВидыРемонтовСтраницы.ПодчиненныеЭлементы.СтраницаОбщиеВидыРемонтовОтменить;
	Иначе
		Элементы.ОбщиеВидыРемонтовСтраницы.ТекущаяСтраница = Элементы.ОбщиеВидыРемонтовСтраницы.ПодчиненныеЭлементы.СтраницаОбщиеВидыРемонтовГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуПоказателиНаработки()
	
	Если ОтметкаПоказателиНаработки Тогда 
		Элементы.ПоказателиНаработкиСтраницы.ТекущаяСтраница = Элементы.ПоказателиНаработкиСтраницы.ПодчиненныеЭлементы.СтраницаПоказателиНаработкиОтменить;
	ИначеЕсли ПропуститьПоказателиНаработки Тогда
		Элементы.ПоказателиНаработкиСтраницы.ТекущаяСтраница = Элементы.ПоказателиНаработкиСтраницы.ПодчиненныеЭлементы.СтраницаПоказателиНаработкиПропустить;
	Иначе
		Элементы.ПоказателиНаработкиСтраницы.ТекущаяСтраница = Элементы.ПоказателиНаработкиСтраницы.ПодчиненныеЭлементы.СтраницаПоказателиНаработкиГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуКлассыОбъектовРемонта(Готовность = Истина, Описание = "")
	
	СтатусКлассыОбъектовРемонта = ПредустановленныеОписания.НайтиПоЗначению("КлассыОбъектовРемонта").Представление;
	
	Если Не Готовность Тогда
		Элементы.КлассыОбъектовРемонтаСтраницы.ТекущаяСтраница = Элементы.КлассыОбъектовРемонтаСтраницы.ПодчиненныеЭлементы.СтраницаКлассыОбъектовРемонта;
		СтатусКлассыОбъектовРемонта = СтатусКлассыОбъектовРемонта + " " + Описание;
	ИначеЕсли ОтметкаКлассыОбъектовРемонта Тогда 
		Элементы.КлассыОбъектовРемонтаСтраницы.ТекущаяСтраница = Элементы.КлассыОбъектовРемонтаСтраницы.ПодчиненныеЭлементы.СтраницаКлассыОбъектовРемонтаОтменить;
	Иначе
		Элементы.КлассыОбъектовРемонтаСтраницы.ТекущаяСтраница = Элементы.КлассыОбъектовРемонтаСтраницы.ПодчиненныеЭлементы.СтраницаКлассыОбъектовРемонтаГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуОбъектыРемонта(Готовность = Истина, Описание = "")
	
	СтатусОбъектыРемонта = ПредустановленныеОписания.НайтиПоЗначению("ОбъектыРемонта").Представление;
	
	Если Не Готовность Тогда
		Элементы.ОбъектыРемонтаСтраницы.ТекущаяСтраница = Элементы.ОбъектыРемонтаСтраницы.ПодчиненныеЭлементы.СтраницаОбъектыРемонта;
		СтатусОбъектыРемонта = СтатусОбъектыРемонта + " " + Описание;
	ИначеЕсли ОтметкаОбъектыРемонта Тогда 
		Элементы.ОбъектыРемонтаСтраницы.ТекущаяСтраница = Элементы.ОбъектыРемонтаСтраницы.ПодчиненныеЭлементы.СтраницаОбъектыРемонтаОтменить;
	Иначе
		Элементы.ОбъектыРемонтаСтраницы.ТекущаяСтраница = Элементы.ОбъектыРемонтаСтраницы.ПодчиненныеЭлементы.СтраницаОбъектыРемонтаГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуВидыДефектов()
	
	Если ОтметкаВидыДефектов Тогда
		Элементы.ВидыДефектовСтраницы.ТекущаяСтраница = Элементы.ВидыДефектовСтраницы.ПодчиненныеЭлементы.СтраницаВидыДефектовОтменить;
	ИначеЕсли ПропуститьВидыДефектов Тогда
		Элементы.ВидыДефектовСтраницы.ТекущаяСтраница = Элементы.ВидыДефектовСтраницы.ПодчиненныеЭлементы.СтраницаВидыДефектовПропустить;
	Иначе
		Элементы.ВидыДефектовСтраницы.ТекущаяСтраница = Элементы.ВидыДефектовСтраницы.ПодчиненныеЭлементы.СтраницаВидыДефектовГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуРемонтныеМероприятия()
	
	Если ОтметкаРемонтныеМероприятия Тогда 
		Элементы.РемонтныеМероприятияСтраницы.ТекущаяСтраница = Элементы.РемонтныеМероприятияСтраницы.ПодчиненныеЭлементы.СтраницаРемонтныеМероприятияОтменить;
	ИначеЕсли ПропуститьРемонтныеМероприятия Тогда 
		Элементы.РемонтныеМероприятияСтраницы.ТекущаяСтраница = Элементы.РемонтныеМероприятияСтраницы.ПодчиненныеЭлементы.СтраницаРемонтныеМероприятияПропустить;
	Иначе
		Элементы.РемонтныеМероприятияСтраницы.ТекущаяСтраница = Элементы.РемонтныеМероприятияСтраницы.ПодчиненныеЭлементы.СтраницаРемонтныеМероприятияГотово;
	КонецЕсли;
	
КонецПроцедуры

// Страница производство.

&НаКлиенте
Процедура УстановитьСтраницуАдминистрированиеПроизводство()
	
	Если ОтметкаАдминистрированиеПроизводство Тогда
		Элементы.АдминистрированиеПроизводствоСтраницы.ТекущаяСтраница = Элементы.АдминистрированиеПроизводствоСтраницы.ПодчиненныеЭлементы.СтраницаАдминистрированиеПроизводствоОтменить;
	Иначе
		Элементы.АдминистрированиеПроизводствоСтраницы.ТекущаяСтраница = Элементы.АдминистрированиеПроизводствоСтраницы.ПодчиненныеЭлементы.СтраницаАдминистрированиеПроизводствоГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуГрафикиРаботы()
	
	Если ОтметкаГрафикиРаботы Тогда 
		Элементы.ГрафикиРаботыСтраницы.ТекущаяСтраница = Элементы.ГрафикиРаботыСтраницы.ПодчиненныеЭлементы.СтраницаГрафикиРаботыОтменить;
	Иначе
		Элементы.ГрафикиРаботыСтраницы.ТекущаяСтраница = Элементы.ГрафикиРаботыСтраницы.ПодчиненныеЭлементы.СтраницаГрафикиРаботыГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуСтруктураПредприятияПроизводство(Готовность = Истина, Описание = "")
	
	СтатусСтруктураПредприятияПроизводство = ПредустановленныеОписания.НайтиПоЗначению("СтруктураПредприятияПроизводство").Представление;
	
	Если Не Готовность Тогда
		Элементы.СтруктураПредприятияПроизводствоСтраницы.ТекущаяСтраница = Элементы.СтруктураПредприятияПроизводствоСтраницы.ПодчиненныеЭлементы.СтраницаСтруктураПредприятияПроизводство;
		СтатусСтруктураПредприятияПроизводство = СтатусСтруктураПредприятияПроизводство + Описание;
	ИначеЕсли ОтметкаСтруктураПредприятияПроизводство Тогда
		Элементы.СтруктураПредприятияПроизводствоСтраницы.ТекущаяСтраница = Элементы.СтруктураПредприятияПроизводствоСтраницы.ПодчиненныеЭлементы.СтраницаСтруктураПредприятияПроизводствоОтменить;
	Иначе
		Элементы.СтруктураПредприятияПроизводствоСтраницы.ТекущаяСтраница = Элементы.СтруктураПредприятияПроизводствоСтраницы.ПодчиненныеЭлементы.СтраницаСтруктураПредприятияПроизводствоГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуНоменклатураПроизводство()
	
	Если ОтметкаНоменклатураПроизводство Тогда 
		Элементы.НоменклатураПроизводствоСтраницы.ТекущаяСтраница = Элементы.НоменклатураПроизводствоСтраницы.ПодчиненныеЭлементы.СтраницаНоменклатураПроизводствоОтменить;
	Иначе
		Элементы.НоменклатураПроизводствоСтраницы.ТекущаяСтраница = Элементы.НоменклатураПроизводствоСтраницы.ПодчиненныеЭлементы.СтраницаНоменклатураПроизводствоГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуСтатьиКалькуляции()
	
	Если ОтметкаСтатьиКалькуляции Тогда 
		Элементы.СтатьиКалькуляцииСтраницы.ТекущаяСтраница = Элементы.СтатьиКалькуляцииСтраницы.ПодчиненныеЭлементы.СтраницаСтатьиКалькуляцииОтменить;
	Иначе
		Элементы.СтатьиКалькуляцииСтраницы.ТекущаяСтраница = Элементы.СтатьиКалькуляцииСтраницы.ПодчиненныеЭлементы.СтраницаСтатьиКалькуляцииГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуПравилаРаспределенияРасходов()
	
	Если ОтметкаПравилаРаспределенияРасходов Тогда 
		Элементы.ПравилаРаспределенияРасходовСтраницы.ТекущаяСтраница = Элементы.ПравилаРаспределенияРасходовСтраницы.ПодчиненныеЭлементы.СтраницаПравилаРаспределенияРасходовОтменить;
	Иначе
		Элементы.ПравилаРаспределенияРасходовСтраницы.ТекущаяСтраница = Элементы.ПравилаРаспределенияРасходовСтраницы.ПодчиненныеЭлементы.СтраницаПравилаРаспределенияРасходовГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуСтруктураРабочихЦентров(Готовность = Истина, Описание = "")
	
	СтатусСтруктураРабочихЦентров = ПредустановленныеОписания.НайтиПоЗначению("СтруктураРабочихЦентров").Представление;
	
	Если Не Готовность Тогда
		Элементы.СтруктураРЦСтраницы.ТекущаяСтраница = Элементы.СтруктураРЦСтраницы.ПодчиненныеЭлементы.СтраницаСтруктураРЦ;
		СтатусСтруктураРабочихЦентров = СтатусСтруктураРабочихЦентров + Описание;
	ИначеЕсли ОтметкаСтруктураРабочихЦентров Тогда 
		Элементы.СтруктураРЦСтраницы.ТекущаяСтраница = Элементы.СтруктураРЦСтраницы.ПодчиненныеЭлементы.СтраницаСтруктураРЦОтменить;
	ИначеЕсли ПропуститьСтруктураРабочихЦентров Тогда
		Элементы.СтруктураРЦСтраницы.ТекущаяСтраница = Элементы.СтруктураРЦСтраницы.ПодчиненныеЭлементы.СтраницаСтруктураРЦПропустить;
	Иначе
		Элементы.СтруктураРЦСтраницы.ТекущаяСтраница = Элементы.СтруктураРЦСтраницы.ПодчиненныеЭлементы.СтраницаСтруктураРЦГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуВидыРаботСотрудников()
	
	Если ОтметкаВидыРаботСотрудников Тогда 
		Элементы.ВидыРаботСотрудниковСтраницы.ТекущаяСтраница = Элементы.ВидыРаботСотрудниковСтраницы.ПодчиненныеЭлементы.СтраницаВидыРаботСотрудниковОтменить;
	ИначеЕсли ПропуститьВидыРаботСотрудников Тогда
		Элементы.ВидыРаботСотрудниковСтраницы.ТекущаяСтраница = Элементы.ВидыРаботСотрудниковСтраницы.ПодчиненныеЭлементы.СтраницаВидыРаботСотрудниковПропустить;
	Иначе
		Элементы.ВидыРаботСотрудниковСтраницы.ТекущаяСтраница = Элементы.ВидыРаботСотрудниковСтраницы.ПодчиненныеЭлементы.СтраницаВидыРаботСотрудниковГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуМаршрутныеКарты(Готовность = Истина, Описание = "")
	
	СтатусМаршрутныеКарты = ПредустановленныеОписания.НайтиПоЗначению("МаршрутныеКарты").Представление;
	
	Если Не Готовность Тогда
		Элементы.МаршрутныеКартыСтраницы.ТекущаяСтраница = Элементы.МаршрутныеКартыСтраницы.ПодчиненныеЭлементы.СтраницаМаршрутныеКарты;
		СтатусМаршрутныеКарты = СтатусМаршрутныеКарты + Описание;
	ИначеЕсли ОтметкаМаршрутныеКарты Тогда
		Элементы.МаршрутныеКартыСтраницы.ТекущаяСтраница = Элементы.МаршрутныеКартыСтраницы.ПодчиненныеЭлементы.СтраницаМаршрутныеКартыОтменить;
	ИначеЕсли ПропуститьМаршрутныеКарты Тогда
		Элементы.МаршрутныеКартыСтраницы.ТекущаяСтраница = Элементы.МаршрутныеКартыСтраницы.ПодчиненныеЭлементы.СтраницаМаршрутныеКартыПропустить;
	Иначе
		Элементы.МаршрутныеКартыСтраницы.ТекущаяСтраница = Элементы.МаршрутныеКартыСтраницы.ПодчиненныеЭлементы.СтраницаМаршрутныеКартыГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуРесурсныеСпецификации(Готовность = Истина, Описание = "")
	
	СтатусРесурсныеСпецификации = ПредустановленныеОписания.НайтиПоЗначению("РесурсныеСпецификации").Представление;
	
	Если Не Готовность Тогда
		Элементы.РесурсныеСпецификацииСтраницы.ТекущаяСтраница = Элементы.РесурсныеСпецификацииСтраницы.ПодчиненныеЭлементы.СтраницаРесурсныеСпецификации;
		СтатусРесурсныеСпецификации = СтатусРесурсныеСпецификации + Описание;
	ИначеЕсли ОтметкаРесурсныеСпецификации Тогда
		Элементы.РесурсныеСпецификацииСтраницы.ТекущаяСтраница = Элементы.РесурсныеСпецификацииСтраницы.ПодчиненныеЭлементы.СтраницаРесурсныеСпецификацииОтменить;
	Иначе
		Элементы.РесурсныеСпецификацииСтраницы.ТекущаяСтраница = Элементы.РесурсныеСпецификацииСтраницы.ПодчиненныеЭлементы.СтраницаРесурсныеСпецификацииГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуРасценкиВидовРабот(Готовность = Истина, Описание = "")
	
	Если НеИспользоватьРегистрациюВыполненныхРабот Тогда
		
		ПропуститьРасценкиРаботСотрудников = Истина;
		
		Элементы.РасценкиРаботСотрудниковСтраницы.ТекущаяСтраница = Элементы.РасценкиРаботСотрудниковСтраницы.ПодчиненныеЭлементы.СтраницаРасценкиРаботСотрудниковПропустить;
		СтатусРасценкиРаботСотрудников = НСтр("ru=' Не требуется, так как пропущено заполнение пункта 8. Виды работ сотрудников.';uk=' Не потрібно, так як пропущено заповнення пункту 8. Види робіт співробітників.'");
		Возврат;
	КонецЕсли;
	
	СтатусРасценкиРаботСотрудников = ПредустановленныеОписания.НайтиПоЗначению("РасценкиРаботСотрудников").Представление;
	
	Если Не Готовность Тогда
		Элементы.РасценкиРаботСотрудниковСтраницы.ТекущаяСтраница = Элементы.РасценкиРаботСотрудниковСтраницы.ПодчиненныеЭлементы.СтраницаРасценкиРаботСотрудников;
		СтатусРасценкиРаботСотрудников = СтатусРасценкиРаботСотрудников + Описание;
	ИначеЕсли ОтметкаРасценкиРаботСотрудников Тогда 
		Элементы.РасценкиРаботСотрудниковСтраницы.ТекущаяСтраница = Элементы.РасценкиРаботСотрудниковСтраницы.ПодчиненныеЭлементы.СтраницаРасценкиРаботСотрудниковОтменить;
	ИначеЕсли ПропуститьРасценкиРаботСотрудников Тогда
		Элементы.РасценкиРаботСотрудниковСтраницы.ТекущаяСтраница = Элементы.РасценкиРаботСотрудниковСтраницы.ПодчиненныеЭлементы.СтраницаРасценкиРаботСотрудниковПропустить;
	Иначе
		Элементы.РасценкиРаботСотрудниковСтраницы.ТекущаяСтраница = Элементы.РасценкиРаботСотрудниковСтраницы.ПодчиненныеЭлементы.СтраницаРасценкиРаботСотрудниковГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуБригады()
	
	Если НеИспользоватьРегистрациюВыполненныхРабот Тогда
		Элементы.БригадыСтраницы.ТекущаяСтраница = Элементы.БригадыСтраницы.ПодчиненныеЭлементы.СтраницаБригадыПропустить;
		СтатусБригады = НСтр("ru=' Не требуется, так как пропущено заполнение пункта 8. Виды работ сотрудников.';uk=' Не потрібно, так як пропущено заповнення пункту 8. Види робіт співробітників.'");
		Возврат;
	КонецЕсли;
	
	СтатусБригады = ПредустановленныеОписания.НайтиПоЗначению("Бригады").Представление;
	
	Если ОтметкаБригады Тогда
		Элементы.БригадыСтраницы.ТекущаяСтраница = Элементы.БригадыСтраницы.ПодчиненныеЭлементы.СтраницаБригадыОтменить;
	Иначе
		Элементы.БригадыСтраницы.ТекущаяСтраница = Элементы.БригадыСтраницы.ПодчиненныеЭлементы.СтраницаБригадыГотово;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтраницуНастройкиПередачиМатериаловВПроизводство(Готовность = Истина, Описание = "")
	
	СтатусНастройкиПередачиМатериаловВПроизводство = ПредустановленныеОписания.НайтиПоЗначению("НастройкиПередачиМатериаловВПроизводство").Представление;
	
	Если Не Готовность Тогда
		Элементы.НастройкиПередачиМатериаловВПроизводствоСтраницы.ТекущаяСтраница = 
		Элементы.НастройкиПередачиМатериаловВПроизводствоСтраницы.ПодчиненныеЭлементы.СтраницаНастройкиПередачиМатериаловВПроизводство;
		СтатусНастройкиПередачиМатериаловВПроизводство = СтатусНастройкиПередачиМатериаловВПроизводство + " " + Описание;
	ИначеЕсли ОтметкаНастройкиПередачиМатериаловВПроизводство Тогда 
		Элементы.НастройкиПередачиМатериаловВПроизводствоСтраницы.ТекущаяСтраница = 
		Элементы.НастройкиПередачиМатериаловВПроизводствоСтраницы.ПодчиненныеЭлементы.СтраницаНастройкиПередачиМатериаловВПроизводствоОтменить;
	Иначе
		Элементы.НастройкиПередачиМатериаловВПроизводствоСтраницы.ТекущаяСтраница = 
		Элементы.НастройкиПередачиМатериаловВПроизводствоСтраницы.ПодчиненныеЭлементы.СтраницаНастройкиПередачиМатериаловВПроизводствоГотово;
	КонецЕсли;
	
КонецПроцедуры

// Прочие.

&НаСервере
Процедура ЗаполнитьПредустановленныеОписания()
	
	// Страница основные настройки.
	
	ОписаниеГруппаНоменклатура			= НСтр("ru='Настройки учета номенклатуры должны выполняться с учетом особенностей всех подсистем.';uk='Настройки обліку номенклатури повинні виконуватися з урахуванням особливостей всіх підсистем.'");
	ОписаниеГруппаЗапасыИЗакупки		= НСтр("ru='Задание параметров позволит управлять закупками и доставкой, складскими запасами и автоматизировать операции складского учета.';uk='Завдання параметрів дозволить управляти закупівлею і доставкою, складськими запасами і автоматизувати операції складського обліку.'");
	ОписаниеГруппаМаркетингИПродажи		= НСтр("ru='Задание параметров позволит планировать маркетинговые мероприятия и анализировать рынок, управлять процессами продаж, включая ценообразование и взаиморасчеты с клиентами.';uk='Завдання параметрів дозволить планувати маркетингові заходи та аналізувати ринок, керувати процесами продажу, включаючи ціноутворення та взаєморозрахунки з клієнтами.'");
	ОписаниеГруппаПроизводство			= НСтр("ru='Задание параметров позволит планировать и контролировать выполнение производственных операций, формировать первичные документы производственного учета, а так же рассчитывать потребности в ресурсах.';uk='Завдання параметрів дозволить планувати і контролювати виконання виробничих операцій, формувати первинні документи виробничого обліку, а також розраховувати потреби в ресурсах.'");
	ОписаниеГруппаРемонты				= НСтр("ru='Задание параметров позволит планировать и контролировать выполнение ремонтно-профилактических работ, а так же рассчитывать потребности в материальных и трудовых ресурсах на их выполнение.';uk='Завдання параметрів дозволить планувати і контролювати виконання ремонтно-профілактичних робіт, а також розраховувати потреби в матеріальних і трудових ресурсах на їх виконання.'");
	
	ПредустановленныеОписания.Добавить("ГруппаНоменклатура", ОписаниеГруппаНоменклатура);
	ПредустановленныеОписания.Добавить("ГруппаЗапасыИЗакупки", ОписаниеГруппаЗапасыИЗакупки);
	ПредустановленныеОписания.Добавить("ГруппаМаркетингИПродажи", ОписаниеГруппаМаркетингИПродажи);
	ПредустановленныеОписания.Добавить("ГруппаПроизводство", ОписаниеГруппаПроизводство);
	ПредустановленныеОписания.Добавить("ГруппаРемонты", ОписаниеГруппаРемонты);
	
	// Страница основные настройки номенклатуры.
	
	ОписаниеВидыНоменклатурыОсновные	= НСтр("ru='Влияют на формирование цен, проводки, аналитику быстрого поиска при продажах, характеристики, группы доступа, единицы измерения, упаковки и др.';uk='Впливають на формування цін, проводки, аналітику швидкого пошуку при продажах, характеристики, групи доступу, одиниці вимірювання, упаковки та ін.'");
	ОписаниеНоменклатураОсновные		= НСтр("ru='Предназначен для хранения информации о номенклатурных позициях (товары и услуги).';uk='Призначений для зберігання інформації про номенклатурні позиції (товари і послуги).'");
	
	ПредустановленныеОписания.Добавить("ВидыНоменклатурыОсновные", ОписаниеВидыНоменклатурыОсновные);
	ПредустановленныеОписания.Добавить("НоменклатураОсновные", ОписаниеНоменклатураОсновные);
	
	// Страница запасы и закупки.
	
	ОписаниеСклады						= НСтр("ru='Выполнение дополнительных  настроек позволит использовать ордерную систему учета, вести учет на адресном складе в разрезе помещений и областей хранения, в соответствии с различными условиями (например, температурный режим), вести список рабочих участков для удобства работы складских работников при размещении новых товаров в складские ячейки. Учет по складским помещениям и ячейкам для хранения остатков номенклатуры предусмотрен только для оптовых складов с ордерной схемой документооборота по всем операциям. Возможность применения ордерного учета настраивается в разделе  ""Склад и доставка"".';uk='Виконання додаткових настройок дозволить використовувати ордерну систему обліку, вести облік на адресному складі в розрізі приміщень і областей зберігання, у відповідності з різними умовами (наприклад, температурний режим), вести список робочих ділянок для зручності роботи складських працівників при розміщенні нових товарів в складські комырки. Облік по складських приміщеннях і комірках для зберігання залишків номенклатури передбачений тільки для оптових складів з ордерною схемою документообігу за всіма операціями. Можливість застосування ордерного обліку налаштовується в розділі ""Склад і доставка"".'");
	ОписаниеСкладскиеГруппыНоменклатуры	= НСтр("ru='Задается для каждой номенклатурной позиции. Используется при описании правил размещения товаров в ячейках для хранения остатков номенклатуры.';uk='Задається для кожної номенклатурної позиції. Використовується при описі правил розміщення товарів у комірках для зберігання залишків номенклатури.'");
	ОписаниеСкладскиеГруппыУпаковок		= НСтр("ru='Задается для каждой упаковки номенклатуры. Используется при  описании правил размещения товаров в ячейках для хранения остатков номенклатуры.';uk='Задається для кожної упаковки номенклатури. Використовується при описі правил розміщення товарів у комірках для зберігання залишків номенклатури.'");
	ОписаниеГенерацияТопологии			= НСтр("ru='Генерацию топологии склада можно запустить из панели действий раздела ""Нормативно-справочная информация"".';uk='Генерацію топології складу можна запустити з панелі дій розділу ""Нормативно-довідкова інформація"".'");
	ОписаниеСкладскиеЯчейки				= НСтр("ru='Складские ячейки могут использоваться справочно Или для хранения остатков товаров (адресное хранение).';uk='Складські комірки можуть використовуватися довідково Або для зберігання залишків товарів (адресне зберігання).'");
	ОписаниеПравилаРазмещения			= НСтр("ru='Используются в операциях приемки и отгрузки с адресного склада для автоматического размещения по ячейкам.';uk='Використовуються в операціях приймання і відвантаження з адресного складу для автоматичного розміщення по комірках.'");
	
	ОписаниеПартнеры				= НСтр("ru='Ввод информации о новом партнере производится с помощью помощника ввода нового партнера.';uk='Введення інформації про нового партнера проводиться за допомогою помічника введення нового партнера.'");
	ОписаниеДоговорыКонтрагентов	= НСтр("ru='В соглашении с поставщиком должен быть установлен флажок ""Требуется указание договора"". Возможно заполнение справочника непосредственно при формировании документов.';uk='В оферті постачальника повинен бути встановлений прапор ""Потребує зазначення договору"". Можливо заповнення довідника безпосередньо при формуванні документів.'");
	ОписаниеСоглашенияСПоставщиками	= НСтр("ru='Возможно заполнение справочника непосредственно при формировании документов. Реквизит ""Условия цен поставщика"" используется для автоматической регистрации цен поставщика в документах поступления, при определенных условиях. Информация об условиях цен заполняется по каждому соглашению с поставщиком.';uk='Можливо заповнення довідника безпосередньо при формуванні документів. Реквізит ""Умови цін постачальника"" використовується для автоматичної реєстрації цін постачальника в документах надходження, при певних умовах. Інформація про умови цін заповнюється за кожною офертою постачальника.'");
	
	ОписаниеВидыНоменклатурыЗапасыИЗакупки		= НСтр("ru='Если в настройке учета номенклатуры используются серии товаров и на складе используется ордерная система, в.т.ч. для излишков и недостач, то необходимо у вида номенклатуры указать учет по сериям.';uk='Якщо у настройці обліку номенклатури використовуються серії товарів і на складі використовується ордерна система, в. т. ч. для надлишків і нестач, то необхідно у виду номенклатури вказати облік по серіях.'");
	ОписаниеНоменклатураЗапасыИЗакупки			= НСтр("ru='Номенклатуру можно дополнительно учитывать по характеристикам, сериям и качеству, а так же ввести список тех индивидуальных упаковок, которые назначаются для конкретной позиции номенклатуры, если в разделе ""Администрирование"" - ""Номенклатура"" включены соответствующие функциональные опции.';uk='Номенклатуру можна додатково обліковувати за характеристиками, серіями і якістю, а так само ввести список тих індивідуальних упаковок, які призначаються для конкретної позиції номенклатури, якщо в розділі ""Адміністрування"" - ""Номенклатура"" включені відповідні функціональні опції.'");
	ОписаниеУстановкаЦенПоставщиков				= НСтр("ru='Информацию в программе можно зарегистрировать, если в разделе ""Администрирование"" - ""Номенклатура"" включено ведение номенклатуры поставщиков.';uk='Інформацію в програмі можна зареєструвати, якщо в розділі ""Адміністрування"" - ""Номенклатура"" включено ведення номенклатури постачальників.'");
	
	ПредустановленныеОписания.Добавить("Склады", ОписаниеСклады);
	ПредустановленныеОписания.Добавить("Склады1", ОписаниеСклады);
	ПредустановленныеОписания.Добавить("СкладскиеГруппыНоменклатуры", ОписаниеСкладскиеГруппыНоменклатуры);
	ПредустановленныеОписания.Добавить("СкладскиеГруппыУпаковок", ОписаниеСкладскиеГруппыУпаковок);
	ПредустановленныеОписания.Добавить("ГенерацияТопологии", ОписаниеГенерацияТопологии);
	ПредустановленныеОписания.Добавить("СкладскиеЯчейки", ОписаниеСкладскиеЯчейки);
	ПредустановленныеОписания.Добавить("ПравилаРазмещения", ОписаниеПравилаРазмещения);
	
	ПредустановленныеОписания.Добавить("Партнеры", ОписаниеПартнеры);
	ПредустановленныеОписания.Добавить("ДоговорыКонтрагентов", ОписаниеДоговорыКонтрагентов);
	ПредустановленныеОписания.Добавить("СоглашенияСПоставщиками", ОписаниеСоглашенияСПоставщиками);
	
	ПредустановленныеОписания.Добавить("ВидыНоменклатурыЗапасыИЗакупки", ОписаниеВидыНоменклатурыЗапасыИЗакупки);
	ПредустановленныеОписания.Добавить("НоменклатураЗапасыИЗакупки", ОписаниеНоменклатураЗапасыИЗакупки);
	ПредустановленныеОписания.Добавить("УстановкаЦенПоставщиков", ОписаниеУстановкаЦенПоставщиков);
	
	// Страница маркетинг и продажи.
	
	ОписаниеВидыНоменклатурыМП		= НСтр("ru='Справочник настраивается для всей информационной базы в целом. Используемые функциональные опции могут влиять на список значений по умолчанию и реквизиты настройки создания номенклатуры.';uk='Довідник налаштовується для всієї інформаційної бази в цілому. Використовуються функціональні опції можуть впливати на список значень по умовчанню і реквізити настройки створення номенклатури.'");
	ОписаниеНоменклатураМП			= НСтр("ru='Используемые функциональные опции и настройки вида номенклатуры, влияют на видимость и необходимость заполнения дополнительных реквизитов справочника (складская группа, ценовая группа,товарная категория и др.). Для позиции номенклатуры можно ввести список индивидуальных упаковок, учет по характеристикам, сериям, качеству, учет многооборотной тары и др.. Информацию в программе можно зарегистрировать, если в разделе ""Администрирование"" - ""Номенклатура"" включены соответствующие опции.';uk='Функціональні опції і настройки виду номенклатури, що використовуються, впливають на видимість і необхідність заповнення додаткових реквізитів довідника (складська група, цінова група,товарна категорія та ін). Для позиції номенклатури можна ввести список індивідуальних упаковок, облік за характеристиками, серіями, якістю, облік багатооборотної тари та ін. Інформацію в програмі можна зареєструвати, якщо в розділі ""Адміністрування"" - ""Номенклатура"" включені відповідні опції.'");
	ОписаниеПартнерыМП				= НСтр("ru='Используемые функциональные опции (см.ниже) могут влиять на видимость и необходимость заполнения дополнительных реквизитов справочника (сегмент, канал первичного спроса, источник первичного спроса, бизнес-регион и др.). Возможно заполнение справочника при формировании документов. Данные о партнере могут иметь взаимосвязь с данными о контрагенте (одним или несколькими). При записи партнера может выполняться запись о его контактных лицах. Информацию об источнике первичного интереса можно зарегистрировать, если в разделе ""Администрирование"" - ""CRM и маркетинг"" включена соответствующая опция.';uk='Функціональні опції (див. нижче), що використовуються, можуть впливати на видимість і необхідність заповнення додаткових реквізитів довідника (сегмент, канал первинного попиту, джерело первинного попиту, бізнес-регіон і ін). Можливо заповнення довідника при формуванні документів. Дані про партнера можуть мати взаємозв''язок з даними про контрагента (одним або кількома). При записі партнера може виконуватися запис про його контактних осіб. Інформацію про джерело первинного інтересу можна зареєструвати, якщо в розділі ""Адміністрування"" - ""CRM і маркетинг"" включена відповідна опція.'");
	ОписаниеКонтрагентыМП			= НСтр("ru='Информацию в программе можно зарегистрировать, если в разделе ""Администрирование"" - ""CRM и маркетинг"" включена функция независимого учета партнеров и контрагентов.';uk='Інформацію в програмі можна зареєструвати, якщо в розділі ""Адміністрування"" - ""CRM і маркетинг"" включена функція незалежного обліку партнерів і контрагентів.'");
	ОписаниеСоглашенияСКлиентами	= НСтр("ru='Информацию в программе можно зарегистрировать, если в разделе ""Администрирование"" - ""Продажи"" включено использование типовых соглашений.';uk='Інформацію в програмі можна зареєструвати, якщо в розділі ""Адміністрування"" - ""Продажі"" включено використання типових оферт.'");
	ОписаниеСоглашенияСКлиентамиИнд	= НСтр("ru='Информацию в программе можно зарегистрировать, если в разделе ""Администрирование"" - ""Продажи"" включено использование индивидуальных соглашений.';uk='Інформацію в програмі можна зареєструвати, якщо в розділі ""Адміністрування"" - ""Продажі"" включено використання індивідуальних оферт.'");
	ОписаниеДоговорыКонтрагентовМП	= НСтр("ru='Доступно, если в разделе ""Администрирование"" - ""CRM и маркетинг"" включена соответствующая опция. Возможно заполнение справочника непосредственно при формировании документов.';uk='Доступно, якщо в розділі ""Адміністрування"" - ""CRM і маркетинг"" включена відповідна опція. Можливо заповнення довідника безпосередньо при формуванні документів.'");
	
	ПредустановленныеОписания.Добавить("ВидыНоменклатурыМП", ОписаниеВидыНоменклатурыМП);
	ПредустановленныеОписания.Добавить("НоменклатураМП", ОписаниеНоменклатураМП);
	ПредустановленныеОписания.Добавить("ПартнерыМП", ОписаниеПартнерыМП);
	ПредустановленныеОписания.Добавить("КонтрагентыМП", ОписаниеКонтрагентыМП);
	ПредустановленныеОписания.Добавить("СоглашенияСКлиентами", ОписаниеСоглашенияСКлиентами);
	ПредустановленныеОписания.Добавить("СоглашенияСКлиентамиИнд", ОписаниеСоглашенияСКлиентамиИнд);
	ПредустановленныеОписания.Добавить("ДоговорыКонтрагентовМП", ОписаниеДоговорыКонтрагентовМП);
	
	ОписаниеВидыЦен					= НСтр("ru='Справочник может содержать вспомогательные цены, которые применяются для расчета отпускных цен и других целей.';uk='Довідник може містити допоміжні ціни, які застосовуються для розрахунку відпускних цін та інших цілей.'");
	ОписаниеУсловияПредоставления	= НСтр("ru='Информацию в программе можно зарегистрировать, если в разделе ""Администрирование"" - ""CRM и маркетинг"" включена функция использования автоматических скидок.';uk='Інформацію в програмі можна зареєструвати, якщо в розділі ""Адміністрування"" - ""CRM і маркетинг"" включена функція використання автоматичних знижок.'");
	ОписаниеСкидкиНаценки			= НСтр("ru='Информацию в программе можно зарегистрировать, если в разделе ""Администрирование"" - ""CRM и маркетинг"" включена функция использования автоматических скидок.';uk='Інформацію в програмі можна зареєструвати, якщо в розділі ""Адміністрування"" - ""CRM і маркетинг"" включена функція використання автоматичних знижок.'");
	ОписаниеВидыКартЛояльности		= НСтр("ru='Информацию в программе можно зарегистрировать, если в разделе ""Администрирование"" - ""CRM и маркетинг"" включена соответствующая опция.';uk='Інформацію в програмі можна зареєструвати, якщо в розділі ""Адміністрування"" - ""CRM і маркетинг"" включена відповідна опція.'");
	ОписаниеКартыЛояльности			= НСтр("ru='Регистрация и замена карт лояльности может производиться как по инициативе пользователя (из списка карт лояльности), так и в момент оформления документов продажи при выполнении определенных условий. Информацию в программе можно зарегистрировать, если в разделе ""Администрирование"" - ""CRM и маркетинг"" включена соответствующая функция.';uk='Реєстрація та заміна карт лояльності може проводитися як за ініціативою користувача (зі списку карт лояльності), так і в момент оформлення документів продажі при виконанні певних умов. Інформацію в програмі можна зареєструвати, якщо в розділі ""Адміністрування"" - ""CRM і маркетинг"" включена відповідна функція.'");
	ОписаниеУстановкаЦен			= НСтр("ru='При назначении цен применяются те правила расчета, которые применяются для данного вида цен.';uk='При призначенні цін застосовуються ті правила розрахунку, які застосовуються для даного виду цін.'");
	ОписаниеНастройкиПродажПользователей= НСтр("ru='Доступно, если в разделе ""Администрирование"" - ""CRM и маркетинг"" включены ограничения на ручные скидки.';uk='Доступно, якщо в розділі ""Адміністрування"" - ""CRM і маркетинг"" включені обмеження на ручні знижки.'");
	ОписаниеСоглашенияСПоставщикамиМП	= НСтр("ru='Доступно, если в разделе ""Администрирование"" - ""CRM и маркетинг"" включена опция ""Конкурентная разведка"" и используются соглашения с поставщиками.';uk='Доступно, якщо в розділі ""Адміністрування"" - ""CRM і маркетинг"" включена опція ""Конкурентна розвідка"" і використовуються оферти постачальників.'");
	ОписаниеУстановкаЦенПоставщиковМП	= НСтр("ru='Доступно, если в разделе ""Администрирование"" - ""CRM и маркетинг"" включена опция ""Конкурентная разведка"".';uk='Доступно, якщо в розділі ""Адміністрування"" - ""CRM і маркетинг"" включена опція ""Конкурентна розвідка"".'");
	
	ПредустановленныеОписания.Добавить("ВидыЦен", ОписаниеВидыЦен);
	ПредустановленныеОписания.Добавить("УсловияПредоставления", ОписаниеУсловияПредоставления);
	ПредустановленныеОписания.Добавить("СкидкиНаценки", ОписаниеСкидкиНаценки);
	ПредустановленныеОписания.Добавить("ВидыКартЛояльности", ОписаниеВидыКартЛояльности);
	ПредустановленныеОписания.Добавить("КартыЛояльности", ОписаниеКартыЛояльности);
	ПредустановленныеОписания.Добавить("УстановкаЦен", ОписаниеУстановкаЦен);
	ПредустановленныеОписания.Добавить("НастройкиПродажПользователей", ОписаниеНастройкиПродажПользователей);
	ПредустановленныеОписания.Добавить("СоглашенияСПоставщикамиМП", ОписаниеСоглашенияСПоставщикамиМП);
	ПредустановленныеОписания.Добавить("УстановкаЦенПоставщиковМП", ОписаниеУстановкаЦенПоставщиковМП);
	
	ОписаниеКаналыРекламныхВоздействий	= НСтр("ru='Информацию в программе можно зарегистрировать, если в разделе ""Администрирование"" - ""CRM и маркетинг"" включена опция фиксации первичного интереса или использования маркетинговых мероприятий.';uk='Інформацію в програмі можна зареєструвати, якщо в розділі ""Адміністрування"" - ""CRM і маркетинг"" включена опція фіксації первинного інтересу або використання маркетингових заходів.'");
	ОписаниеМаркетинговыеМероприятия	= НСтр("ru='Информацию в программе можно зарегистрировать, если в разделе ""Администрирование"" - ""CRM и маркетинг"" включена соответствующая функция.';uk='Інформацію в програмі можна зареєструвати, якщо в розділі ""Адміністрування"" - ""CRM і маркетинг"" включена відповідна функція.'");
	ОписаниеУстановкиСкидокНаценок		= НСтр("ru='Скидки должны формироваться с учетом вариантов совместного применения. Информацию в программе можно зарегистрировать, если в разделе ""Администрирование"" - ""CRM и маркетинг"" включена опция использования скидок по маркетинговым мероприятиям.';uk='Знижки повинні формуватися з урахуванням варіантів спільного застосування. Інформацію в програмі можна зареєструвати, якщо в розділі ""Адміністрування"" - ""CRM і маркетинг"" включена опція використання знижок по маркетинговим заходам.'");
	
	ПредустановленныеОписания.Добавить("КаналыРекламныхВоздействий", ОписаниеКаналыРекламныхВоздействий);
	ПредустановленныеОписания.Добавить("МаркетинговыеМероприятия", ОписаниеМаркетинговыеМероприятия);
	ПредустановленныеОписания.Добавить("УстановкиСкидокНаценок", ОписаниеУстановкиСкидокНаценок);
	
	ОписаниеСостоянияПроцессов		= НСтр("ru='Информацию в программе можно зарегистрировать, если в разделе ""Администрирование"" - ""Продажи"" включена опция управления сделками.';uk='Інформацію в програмі можна зареєструвати, якщо в розділі ""Адміністрування"" - ""Продажі"" включена опція управління угодами.'");
	ОписаниеВидыСделок				= НСтр("ru='Информацию в программе можно зарегистрировать, если в разделе ""Администрирование"" - ""Продажи"" включена опция управления сделками.';uk='Інформацію в програмі можна зареєструвати, якщо в розділі ""Адміністрування"" - ""Продажі"" включена опція управління угодами.'");
	ПредустановленныеОписания.Добавить("СостоянияПроцессов", ОписаниеСостоянияПроцессов);
	ПредустановленныеОписания.Добавить("ВидыСделок", ОписаниеВидыСделок);
	
	ОписаниеУсловияОПТП				= НСтр("ru='Информацию в программе можно зарегистрировать, если в разделе ""Администрирование"" - ""Продажи"" включена опция ведения работы через торговых представителей.';uk='Інформацію в програмі можна зареєструвати, якщо в розділі ""Адміністрування"" - ""Продажі"" включена опція ведення роботи через торгових представників.'");
	ОписаниеВариантыКомплектацииНоменклатуры = НСтр("ru='Используются при заполнении документов ""Заказ на сборку / разборку"" и ""Сборка (разборка) товаров"". Информацию в программе можно зарегистрировать, если в разделе ""Администрирование"" - ""Закупки"" включена соответствующая опция.';uk='Використовуються при заповненні документів ""Замовлення на збирання / розбирання"" і ""Збирання (розбирання) товарів"". Інформацію в програмі можна зареєструвати, якщо в розділі ""Адміністрування"" - ""Купівлі"" включена відповідна опція.'");
	
	ПредустановленныеОписания.Добавить("УсловияОПТП", ОписаниеУсловияОПТП);
	ПредустановленныеОписания.Добавить("ВариантыКомплектацииНоменклатуры", ОписаниеВариантыКомплектацииНоменклатуры);
	
	ОписаниеФорматыМагазинов		= НСтр("ru='Используется при определении ассортимента продукции магазина.';uk='Використовується при визначенні асортименту продукції магазину.'");
	ОписаниеТоварныеКатегории		= НСтр("ru='Глубина детализации товарных категорий позволяет в будущем наиболее эффективно оптимизировать товарные потоки и издержки магазинов.';uk='Глибина деталізації товарних категорій дозволяє в майбутньому найбільш ефективно оптимізувати товарні потоки і витрати магазинів.'");
	ОписаниеИзменениеАссортимента	= НСтр("ru='В качестве операций доступны ввод, отзыв, изменение состояния ассортимента.';uk='В якості операцій доступні введення, відкликання, зміна стану асортименту.'");
	ОписаниеМарки					= НСтр("ru='Cодержит информацию о зарегистрированных товарных знаках и наименованиях.';uk='Містить інформацію про зареєстровані товарні знаки таі найменування.'");
	
	ПредустановленныеОписания.Добавить("ФорматыМагазинов", ОписаниеФорматыМагазинов);
	ПредустановленныеОписания.Добавить("ТоварныеКатегории", ОписаниеТоварныеКатегории);
	ПредустановленныеОписания.Добавить("ИзменениеАссортимента", ОписаниеИзменениеАссортимента);
	ПредустановленныеОписания.Добавить("Марки", ОписаниеМарки);
	
	// Страница ремонты.
	
	ОписаниеКлассыОбъектовРемонта	= НСтр("ru='По каждому виду ремонта можно задать потребляемые материальные и трудовые ресурсы.';uk='За кожним виду ремонту можна задати споживані матеріальні і трудові ресурси.'");
	ОписаниеОбъектыРемонта			= НСтр("ru='При указании списка рабочих центров будет корректироваться информация об их доступности при выполнении ремонтных работ (см. раздел ""Производство"").';uk='При зазначенні у списку робочих центрів буде коригуватися інформація про їх доступності при виконанні ремонтних робіт (див. розділ ""Виробництво"").'");
	ОписаниеРасценкиРаботСотрудниковРемонты	= НСтр("ru='При отказе от заполнения расценка вводится в документ ""Выработка сотрудников"" вручную.';uk='При відмові від заповнення розцінка вводиться в документ ""Виробіток співробітників"" вручну.'");
	ОписаниеБригадыРемонты					= НСтр("ru='Используется для регистрации выполненных работ.';uk='Використовується для реєстрації виконаних робіт.'");
	
	ПредустановленныеОписания.Добавить("КлассыОбъектовРемонта", ОписаниеКлассыОбъектовРемонта);
	ПредустановленныеОписания.Добавить("ОбъектыРемонта", ОписаниеОбъектыРемонта);
	ПредустановленныеОписания.Добавить("РасценкиРаботСотрудниковРемонты", ОписаниеРасценкиРаботСотрудниковРемонты);
	ПредустановленныеОписания.Добавить("БригадыРемонты", ОписаниеБригадыРемонты);
	
	// Страница производство.
	
	ОписаниеСтруктураПредприятияПроизводство	= НСтр("ru='Свойства интервал планирования, календарь производства влияют на параметры производственного учета.';uk='Властивості інтервалу планування, календар виробництва впливають на параметри виробничого обліку.'");
	ОписаниеСтруктураРабочихЦентров				= НСтр("ru='Рабочие центры группируются по видам рабочих центров.';uk='Робочі центри групуються за видами робочих центрів.'");
	ОписаниеМаршрутныеКарты			= НСтр("ru='Составляются на основе описания производственного этапа с точностью до отдельных операций.';uk='Складаються на підставі опису виробничого етапу з точністю до окремих операцій.'");
	ОписаниеРесурсныеСпецификации	= НСтр("ru='Составляются с учетом описания структуры рабочих центров и потребностей технологического процесса в материалах и работах.';uk='Складаються з урахуванням опису структури робочих центрів і потреб технологічного процесу в матеріалах і роботах.'");
	ОписаниеРасценкиРаботСотрудников= НСтр("ru='При отказе от заполнения расценка вводится в документ ""Выработка сотрудников"" вручную.';uk='При відмові від заповнення розцінка вводиться в документ ""Виробіток співробітників"" вручну.'");
	ОписаниеБригады					= НСтр("ru='Используется для регистрации выполненных работ.';uk='Використовується для реєстрації виконаних робіт.'");
	ОписаниеНастройкиПередачиМатериаловВПроизводство	= НСтр("ru='Используются для определения порядка обеспечения производства материалами: по заказам на производство Или по заказам на внутреннее потребление.';uk='Використовуються для визначення порядку забезпечення виробництва матеріалами: по замовленнях на виробництво Або по замовленнях на внутрішнє споживання.'");
	
	ПредустановленныеОписания.Добавить("СтруктураПредприятияПроизводство", ОписаниеСтруктураПредприятияПроизводство);
	ПредустановленныеОписания.Добавить("СтруктураРабочихЦентров", ОписаниеСтруктураРабочихЦентров);
	ПредустановленныеОписания.Добавить("МаршрутныеКарты", ОписаниеМаршрутныеКарты);
	ПредустановленныеОписания.Добавить("РесурсныеСпецификации", ОписаниеРесурсныеСпецификации);
	ПредустановленныеОписания.Добавить("РасценкиРаботСотрудников", ОписаниеРасценкиРаботСотрудников);
	ПредустановленныеОписания.Добавить("Бригады", ОписаниеБригады);
	ПредустановленныеОписания.Добавить("НастройкиПередачиМатериаловВПроизводство", ОписаниеНастройкиПередачиМатериаловВПроизводство);
	
	СпособыОбеспечения	= НСтр("ru='Используются при расширенном режиме обеспечения потребностей. Настройка выполняется в разделе ""Администрирование"" - ""Закупки"".';uk='Використовуються при розширеному режимі забезпечення потреб. Настройка виконується у розділі ""Адміністрування"" - ""Купівлі"".'");
	ПредустановленныеОписания.Добавить("СпособыОбеспечения", СпособыОбеспечения);
	
	Для Каждого Элемент Из ПредустановленныеОписания Цикл
		Элемент.Представление = СтрЗаменить(Элемент.Представление, символы.ПС, "");
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОписания(МассивРеквизитов = Неопределено)
	
	// Страница основные настройки.
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("ГруппаНоменклатура") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаОрганизацииИВалюты Тогда
			Описание = "1.1." + Символы.НПП + НСтр("ru='Организации и валюты';uk='Організації та валюти'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаСтруктураПредприятия и ИспользоватьПодразделения Тогда
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "1.5." + Символы.НПП + НСтр("ru='Структура предприятия';uk='Структура підприємства'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаНастройкиПользователейИПрав Тогда
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "1.6." + Символы.НПП + НСтр("ru='Настройки пользователей и прав';uk='Настройки користувачів і прав'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуГруппаНоменклатура();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаГруппаНоменклатура = Ложь;
			УстановитьСтраницуГруппаНоменклатура(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("ГруппаЗапасыИЗакупки") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаОрганизацииИВалюты Тогда
			Описание = "1.1." + Символы.НПП + НСтр("ru='Организации и валюты';uk='Організації та валюти'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаСтруктураПредприятия и ИспользоватьПодразделения Тогда
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "1.5." + Символы.НПП + НСтр("ru='Структура предприятия';uk='Структура підприємства'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаНастройкиПользователейИПрав Тогда
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "1.6." + Символы.НПП + НСтр("ru='Настройки пользователей и прав';uk='Настройки користувачів і прав'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаГруппаНоменклатура Тогда
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "2.1" + Символы.НПП + НСтр("ru='Настройки учета номенклатуры';uk='Настройки обліку номенклатури'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуГруппаЗапасыИЗакупки();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаГруппаЗапасыИЗакупки = Ложь;
			УстановитьСтраницуГруппаЗапасыИЗакупки(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("ГруппаМаркетингИПродажи") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаОрганизацииИВалюты Тогда
			Описание = "1.1." + Символы.НПП + НСтр("ru='Организации и валюты';uk='Організації та валюти'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаСтруктураПредприятия и ИспользоватьПодразделения Тогда
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "1.5." + Символы.НПП + НСтр("ru='Структура предприятия';uk='Структура підприємства'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаНастройкиПользователейИПрав Тогда
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "1.6." + Символы.НПП + НСтр("ru='Настройки пользователей и прав';uk='Настройки користувачів і прав'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаГруппаНоменклатура Тогда
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "2.1" + Символы.НПП + НСтр("ru='Настройки учета номенклатуры';uk='Настройки обліку номенклатури'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуГруппаМаркетингИПродажи();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаГруппаМаркетингИПродажи = Ложь;
			УстановитьСтраницуГруппаМаркетингИПродажи(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("ГруппаПроизводство") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаОрганизацииИВалюты Тогда
			Описание = "1.1." + Символы.НПП + НСтр("ru='Организации и валюты';uk='Організації та валюти'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаСтруктураПредприятия и ИспользоватьПодразделения Тогда
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "1.5." + Символы.НПП + НСтр("ru='Структура предприятия';uk='Структура підприємства'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаНастройкиПользователейИПрав Тогда
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "1.6." + Символы.НПП + НСтр("ru='Настройки пользователей и прав';uk='Настройки користувачів і прав'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаГруппаНоменклатура Тогда
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "2.1" + Символы.НПП + НСтр("ru='Настройки учета номенклатуры';uk='Настройки обліку номенклатури'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуГруппаПроизводство();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаГруппаПроизводство = Ложь;
			УстановитьСтраницуГруппаПроизводство(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("ГруппаРемонты") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаОрганизацииИВалюты Тогда
			Описание = "1.1." + Символы.НПП + НСтр("ru='Организации и валюты';uk='Організації та валюти'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаСтруктураПредприятия и ИспользоватьПодразделения Тогда
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "1.5." + Символы.НПП + НСтр("ru='Структура предприятия';uk='Структура підприємства'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаНастройкиПользователейИПрав Тогда
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "1.6." + Символы.НПП + НСтр("ru='Настройки пользователей и прав';uk='Настройки користувачів і прав'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаГруппаНоменклатура Тогда
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "2.1" + Символы.НПП + НСтр("ru='Настройки учета номенклатуры';uk='Настройки обліку номенклатури'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуГруппаРемонты();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаГруппаРемонты = Ложь;
			УстановитьСтраницуГруппаРемонты(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("ГруппыДоступа") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаГруппаЗапасыИЗакупки И Не ОтметкаГруппаПроизводство И Не ОтметкаГруппаРемонты И Не ОтметкаГруппаМаркетингИПродажи Тогда
			Описание = НСтр("ru='Требуется настроить хотя бы одну подсистему учета.';uk='Потрібно настроїти хоча б одну підсистему обліку.'");
			КоличествоПунктов = КоличествоПунктов + 1;
		Иначе
			
			Если ОтметкаГруппаЗапасыИЗакупки Тогда
				Описание = НСтр("ru='Готовы к настройке по подсистемам:';uk='Готові до настройки по підсистемах:'") + " ";
				Описание = Описание + НСтр("ru='2.2. Запасы и закупки';uk='2.2. Запаси і купівлі'");
			КонецЕсли;
			
			Если ОтметкаГруппаМаркетингИПродажи Тогда
				
				Если ЗначениеЗаполнено(Описание) Тогда
					Описание = Описание + ", ";
				Иначе
					Описание = НСтр("ru='Готовы к настройке по подсистемам:';uk='Готові до настройки по підсистемах:'") + " ";
				КонецЕсли;
				
				Описание = Описание + НСтр("ru='2.3. Маркетинг и продажи';uk='2.3. Маркетинг і продажі'");
			КонецЕсли;
			
			Если ОтметкаГруппаПроизводство Тогда
				
				Если ЗначениеЗаполнено(Описание) Тогда
					Описание = Описание + ", ";
				Иначе
					Описание = НСтр("ru='Готовы к настройке по подсистемам:';uk='Готові до настройки по підсистемах:'") + " ";
				КонецЕсли;
				
				Описание = Описание + НСтр("ru='2.4. Производство';uk='2.4. Виробництво'");
			КонецЕсли;
			
			Если ОтметкаГруппаРемонты Тогда
				
				Если ЗначениеЗаполнено(Описание) Тогда
					Описание = Описание + ", ";
				Иначе
					Описание = НСтр("ru='Готовы к настройке по подсистемам:';uk='Готові до настройки по підсистемах:'") + " ";
				КонецЕсли;
				
				Описание = Описание + НСтр("ru='2.5. Ремонты';uk='2.5. Ремонти'");
			КонецЕсли;
			
		КонецЕсли;
		
		СтатусГруппыДоступа = Описание;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуГруппыДоступа();
		Иначе
			ОтметкаГруппыДоступа = Ложь;
			УстановитьСтраницуГруппыДоступа(Ложь);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("ВводНачальныхОстатков") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаГруппаЗапасыИЗакупки И Не ОтметкаГруппаПроизводство И Не ОтметкаГруппаРемонты И Не ОтметкаГруппаМаркетингИПродажи Тогда
			Описание = НСтр("ru='Требуется настроить хотя бы одну подсистему учета.';uk='Потрібно настроїти хоча б одну підсистему обліку.'");
			КоличествоПунктов = КоличествоПунктов + 1;
		Иначе
			
			Если ОтметкаГруппаЗапасыИЗакупки Тогда
				Описание = НСтр("ru='Готово к вводу остатков по подсистемам:';uk='Готово до введення залишків по підсистемах:'") + " ";
				Описание = Описание + НСтр("ru='2.2. Запасы и закупки';uk='2.2. Запаси і купівлі'");
			КонецЕсли;
			
			Если ОтметкаГруппаМаркетингИПродажи Тогда
				
				Если ЗначениеЗаполнено(Описание) Тогда
					Описание = Описание + ", ";
				Иначе
					Описание = НСтр("ru='Готовы к настройке по подсистемам:';uk='Готові до настройки по підсистемах:'") + " ";
				КонецЕсли;
				
				Описание = Описание + НСтр("ru='2.3. Маркетинг и продажи';uk='2.3. Маркетинг і продажі'");
			КонецЕсли;
			
			Если ОтметкаГруппаПроизводство Тогда
				
				Если ЗначениеЗаполнено(Описание) Тогда
					Описание = Описание + ", ";
				Иначе
					Описание = НСтр("ru='Готово к вводу остатков по подсистемам:';uk='Готово до введення залишків по підсистемах:'") + " ";
				КонецЕсли;
				
				Описание = Описание + НСтр("ru='2.4. Производство';uk='2.4. Виробництво'");
			КонецЕсли;
			
			Если ОтметкаГруппаРемонты Тогда
				
				Если ЗначениеЗаполнено(Описание) Тогда
					Описание = Описание + ", ";
				Иначе
					Описание = НСтр("ru='Готово к вводу остатков по подсистемам:';uk='Готово до введення залишків по підсистемах:'") + " ";
				КонецЕсли;
				
				Описание = Описание + НСтр("ru='2.5. Ремонты';uk='2.5. Ремонти'");
			КонецЕсли;
			
		КонецЕсли;
		
		СтатусВводНачальныхОстатков = Описание;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуВводНачальныхОстатков();
		Иначе
			ОтметкаВводНачальныхОстатков = Ложь;
			УстановитьСтраницуВводНачальныхОстатков(Ложь);
		КонецЕсли;
		
	КонецЕсли;
	
	// Страница основные настройки номенклатуры.
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("Склады1") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаАдминистрированиеСкладОсновные Тогда
			Описание = "2." + Символы.НПП + НСтр("ru='Cклад и доставка';uk='Склад і доставка'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуСклады1();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаСклады1 = Ложь;
			УстановитьСтраницуСклады1(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("ВидыНоменклатурыОсновные") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаНастройкиНоменклатуры Тогда
			Описание = "1." + Символы.НПП + НСтр("ru='Настройки номенклатуры';uk='Настройки номенклатури'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаСклады1 Тогда
			Описание = "3." + Символы.НПП + НСтр("ru='Склады';uk='Склади'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуВидыНоменклатурыОсновные();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаВидыНоменклатурыОсновные = Ложь;
			УстановитьСтраницуВидыНоменклатурыОсновные(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("НоменклатураОсновные") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаСклады1 Тогда
			Описание = "3." + Символы.НПП + НСтр("ru='Склады';uk='Склади'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаВидыНоменклатурыОсновные Тогда
			Описание = "4." + Символы.НПП + НСтр("ru='Виды номенклатуры';uk='Види номенклатури'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуНоменклатураОсновные();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаНоменклатураОсновные = Ложь;
			УстановитьСтраницуНоменклатураОсновные(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	// Страница запасы и закупки.
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("Склады") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаАдминистрированиеСкладЗапасыИЗакупки Тогда
			Описание = "2." + Символы.НПП + НСтр("ru='Cклад и доставка';uk='Склад і доставка'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуСклады();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаСклады = Ложь;
			УстановитьСтраницуСклады(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("СкладскиеГруппыНоменклатуры") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаСклады И ИспользоватьАдресноеХранение Тогда
			Описание = "3." + Символы.НПП + Элементы.ОткрытьСклады.Заголовок;
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуСкладскиеГруппыНоменклатуры();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаСкладскиеГруппыНоменклатуры = Ложь;
			УстановитьСтраницуСкладскиеГруппыНоменклатуры(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("СкладскиеГруппыУпаковок") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаСклады И ИспользоватьАдресноеХранение Тогда
			Описание = "3." + Символы.НПП + Элементы.ОткрытьСклады.Заголовок;
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуСкладскиеГруппыУпаковок();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаСкладскиеГруппыУпаковок = Ложь;
			УстановитьСтраницуСкладскиеГруппыУпаковок(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("ГенерацияТопологии") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаСклады И (ИспользоватьАдресноеХранение Или ИспользоватьАдресноеХранениеСправочно) Тогда
			Описание = "3." + Символы.НПП + Элементы.ОткрытьСклады.Заголовок;
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуГенерацияТопологии();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаГенерацияТопологии = Ложь;
			УстановитьСтраницуГенерацияТопологии(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("СкладскиеЯчейки") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаСклады И (ИспользоватьАдресноеХранение Или ИспользоватьАдресноеХранениеСправочно) Тогда
			Описание = "3." + Символы.НПП + Элементы.ОткрытьСклады.Заголовок;
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаГенерацияТопологии И (ИспользоватьАдресноеХранение Или ИспользоватьАдресноеХранениеСправочно) Тогда
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "6." + Символы.НПП + НСтр("ru='Генерация топологии склада';uk='Генерація топології складу'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуСкладскиеЯчейки();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаСкладскиеЯчейки = Ложь;
			УстановитьСтраницуСкладскиеЯчейки(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("ПравилаРазмещения") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаСклады И ИспользоватьАдресноеХранение Тогда
			Описание = "3." + Символы.НПП + Элементы.ОткрытьСклады.Заголовок;
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуПравилаРазмещения();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаПравилаРазмещения = Ложь;
			УстановитьСтраницуПравилаРазмещения(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("Партнеры") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаГруппыДоступаПартнеров И ИспользоватьГруппыДоступаПартнеров Тогда
			Описание = "9." + Символы.НПП + НСтр("ru='Группы доступа партнеров';uk='Групи доступу партнерів'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуПартнеры();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаПартнеры = Ложь;
			УстановитьСтраницуПартнеры(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("СоглашенияСПоставщиками") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаПартнеры Тогда
			Описание = "10." + Символы.НПП + НСтр("ru='Партнеры';uk='Партнери'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуСоглашенияСПоставщиками();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаСоглашенияСПоставщиками = Ложь;
			УстановитьСтраницуСоглашенияСПоставщиками(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("ДоговорыКонтрагентов") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаПартнеры Тогда
			Описание = "10." + Символы.НПП + НСтр("ru='Партнеры';uk='Партнери'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаКонтрагенты Тогда
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "11." + Символы.НПП + НСтр("ru='Контрагенты';uk='Контрагенти'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуДоговорыКонтрагентов();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаДоговорыКонтрагентов = Ложь;
			УстановитьСтраницуДоговорыКонтрагентов(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("ВидыНоменклатурыЗапасыИЗакупки") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаСкладскиеГруппыНоменклатуры И ИспользоватьАдресноеХранение Тогда
			Описание = "4." + Символы.НПП + НСтр("ru='Складские группы номенклатуры';uk='Складські групи номенклатури'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуВидыНоменклатурыЗапасыИЗакупки();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаВидыНоменклатуры = Ложь;
			УстановитьСтраницуВидыНоменклатурыЗапасыИЗакупки(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("НоменклатураЗапасыИЗакупки") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаСкладскиеГруппыНоменклатуры И ИспользоватьАдресноеХранение Тогда
			Описание = "4." + Символы.НПП + НСтр("ru='Складские группы номенклатуры';uk='Складські групи номенклатури'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаСкладскиеГруппыУпаковок И ИспользоватьАдресноеХранение Тогда
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "5." + Символы.НПП + НСтр("ru='Складские группы упаковок';uk='Складські групи упаковок'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаВидыНоменклатурыЗапасыИЗакупки Тогда
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "14." + Символы.НПП + НСтр("ru='Виды номенклатуры';uk='Види номенклатури'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуНоменклатураЗапасыИЗакупки();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаНоменклатура = Ложь;
			УстановитьСтраницуНоменклатураЗапасыИЗакупки(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("УстановкаЦенПоставщиков") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуУстановкаЦенПоставщиков();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаУстановкаЦенПоставщиков = Ложь;
			УстановитьСтраницуУстановкаЦенПоставщиков(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	// Страница маркетинг и продажи.
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("ВидыНоменклатурыМП") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаГруппыДоступаНоменклатурыМП И ИспользоватьГруппыДоступаНоменклатуры Тогда
			Описание = "4." + Символы.НПП + НСтр("ru='Группы доступа номенклатуры';uk='Групи доступу номенклатури'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуВидыНоменклатурыМП();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаВидыНоменклатурыМаркетингИПродажи = Ложь;
			УстановитьСтраницуВидыНоменклатурыМП(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("НоменклатураМП") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаВидыНоменклатурыМаркетингИПродажи Тогда
			Описание = "5." + Символы.НПП + НСтр("ru='Виды номенклатуры';uk='Види номенклатури'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуНоменклатураМП();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаНоменклатураМП = Ложь;
			УстановитьСтраницуНоменклатураМП(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("ПартнерыМП") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаГруппыДоступаПартнеровМП И ИспользоватьГруппыДоступаПартнеров Тогда
			Описание = "10." + Символы.НПП + НСтр("ru='Группы доступа партнеров';uk='Групи доступу партнерів'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуПартнерыМП();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаПартнерыМП = Ложь;
			УстановитьСтраницуПартнерыМП(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("КонтрагентыМП") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаМаркетингИПланирование И ИспользоватьПартнеровИКонтрагентов Тогда
			Описание = "1." + Символы.НПП + НСтр("ru='Маркетинг и планирование';uk='Маркетинг і планування'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуКонтрагентыМП();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаКонтрагентыМП = Ложь;
			УстановитьСтраницуКонтрагентыМП(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("СоглашенияСКлиентами") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаПартнерыМП И ИспользоватьСоглашенияСКлиентами Тогда
			Описание = "12." + Символы.НПП + НСтр("ru='Партнеры';uk='Партнери'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаГрафикиОплаты И ИспользоватьСоглашенияСКлиентами И ИспользоватьГрафикиОплаты Тогда
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "14." + Символы.НПП + НСтр("ru='Графики оплаты';uk='Графіки оплати'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;

		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуСоглашенияСКлиентами();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаСоглашенияСКлиентами = Ложь;
			УстановитьСтраницуСоглашенияСКлиентами(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("СоглашенияСКлиентамиИнд") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаПартнерыМП И ИспользоватьСоглашенияСКлиентамиИнд Тогда
			Описание = "12." + Символы.НПП + НСтр("ru='Партнеры';uk='Партнери'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаГрафикиОплаты И ИспользоватьСоглашенияСКлиентамиИнд И ИспользоватьГрафикиОплаты Тогда
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "14." + Символы.НПП + НСтр("ru='Графики оплаты';uk='Графіки оплати'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуСоглашенияСКлиентамиИнд();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаСоглашенияСКлиентамиИнд = Ложь;
			УстановитьСтраницуСоглашенияСКлиентамиИнд(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("ДоговорыКонтрагентовМП") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаПартнерыМП Тогда
			Описание = "12." + Символы.НПП + НСтр("ru='Партнеры';uk='Партнери'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаКонтрагентыМП И ИспользоватьПартнеровИКонтрагентов Тогда
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "13." + Символы.НПП + НСтр("ru='Контрагенты';uk='Контрагенти'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуДоговорыКонтрагентовМП();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаДоговорыКонтрагентовМП = Ложь;
			УстановитьСтраницуДоговорыКонтрагентовМП(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("ВидыЦен") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаЦеновыеГруппы И ИспользоватьЦеновыеГруппы Тогда
			Описание = "18." + Символы.НПП + НСтр("ru='Ценовые группы';uk='Цінові групи'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуВидыЦен();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаВидыЦен = Ложь;
			УстановитьСтраницуВидыЦен(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;

	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("УсловияПредоставления") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаМаркетингИПланирование И ИспользоватьАвтоматическиеСкидкиВПродажах Тогда
			Описание = "1." + Символы.НПП + НСтр("ru='Маркетинг и планирование';uk='Маркетинг і планування'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуУсловияПредоставления();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаУсловияПредоставления = Ложь;
			УстановитьСтраницуУсловияПредоставления(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("СкидкиНаценки") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаМаркетингИПланирование И ИспользоватьАвтоматическиеСкидкиВПродажах Тогда
			Описание = "1." + Символы.НПП + НСтр("ru='Маркетинг и планирование';uk='Маркетинг і планування'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаЦеновыеГруппы И ИспользоватьЦеновыеГруппы Тогда
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "18." + Символы.НПП + НСтр("ru='Ценовые группы';uk='Цінові групи'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаУсловияПредоставления И ИспользоватьАвтоматическиеСкидкиВПродажах Тогда
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "22." + Символы.НПП + НСтр("ru='Условия предоставления скидок (наценок)';uk='Умови надання знижок (націнок)'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуСкидкиНаценки();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаСкидкиНаценки = Ложь;
			УстановитьСтраницуСкидкиНаценки(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("ВидыКартЛояльности") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаМаркетингИПланирование И ИспользоватьКартыЛояльности Тогда
			Описание = "1." + Символы.НПП + НСтр("ru='Маркетинг и планирование';uk='Маркетинг і планування'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаСкидкиНаценки И ИспользоватьКартыЛояльности Тогда
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "23." + Символы.НПП + НСтр("ru='Скидки (наценки)';uk='Знижки (націнки)'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуВидыКартЛояльности();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаВидыКартЛояльности = Ложь;
			УстановитьСтраницуВидыКартЛояльности(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("КартыЛояльности") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаМаркетингИПланирование И ИспользоватьКартыЛояльности Тогда
			Описание = "1." + Символы.НПП + НСтр("ru='Маркетинг и планирование';uk='Маркетинг і планування'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаПартнерыМП И ИспользоватьКартыЛояльности Тогда
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "12." + Символы.НПП + НСтр("ru='Партнеры';uk='Партнери'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;

		Если Не ОтметкаВидыКартЛояльности И ИспользоватьКартыЛояльности Тогда
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "24." + Символы.НПП + НСтр("ru='Виды карт лояльности';uk='Види карт лояльності'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;

		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуКартыЛояльности();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаКартыЛояльности = Ложь;
			УстановитьСтраницуКартыЛояльности(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("УстановкаЦен") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаМаркетингИПланирование Тогда
			Описание = "1." + Символы.НПП + НСтр("ru='Маркетинг и планирование';uk='Маркетинг і планування'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаНоменклатураМП Тогда
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "6." + Символы.НПП + НСтр("ru='Номенклатура';uk='Номенклатура'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуУстановкаЦен();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаУстановкаЦен = Ложь;
			УстановитьСтраницуУстановкаЦен(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("НастройкиПродажПользователей") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаМаркетингИПланирование И (ИспользоватьОграниченияРучныхСкидокВПродажахПоПользователям Или ИспользоватьОграниченияРучныхСкидокВПродажахПоСоглашениям) Тогда
			Описание = "1." + Символы.НПП + НСтр("ru='Маркетинг и планирование';uk='Маркетинг і планування'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуНастройкиПродажПользователей();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаНастройкиПродажПользователей = Ложь;
			УстановитьСтраницуНастройкиПродажПользователей(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("СоглашенияСПоставщикамиМП") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаМаркетингИПланирование И ИспользоватьКонкурентнуюРазведку И ИспользоватьСоглашенияСПоставщиками Тогда
			Описание = "1." + Символы.НПП + НСтр("ru='Маркетинг и планирование';uk='Маркетинг і планування'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуСоглашенияСПоставщикамиМП();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаСоглашенияСПоставщикамиМП = Ложь;
			УстановитьСтраницуСоглашенияСПоставщикамиМП(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("УстановкаЦенПоставщиковМП") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаМаркетингИПланирование И ИспользоватьКонкурентнуюРазведку Тогда
			Описание = "1." + Символы.НПП + НСтр("ru='Маркетинг и планирование';uk='Маркетинг і планування'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуУстановкаЦенПоставщиковМП();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаУстановкаЦенПоставщиковМП = Ложь;
			УстановитьСтраницуУстановкаЦенПоставщиковМП(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("КаналыРекламныхВоздействий") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаМаркетингИПланирование И (ИспользоватьМаркетинговыеМероприятия Или ФиксироватьПервичныйИнтерес) Тогда
			Описание = "1." + Символы.НПП + НСтр("ru='Маркетинг и планирование';uk='Маркетинг і планування'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуКаналыРекламныхВоздействий();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаКаналыРекламныхВоздействий = Ложь;
			УстановитьСтраницуКаналыРекламныхВоздействий(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("МаркетинговыеМероприятия") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаМаркетингИПланирование И ИспользоватьМаркетинговыеМероприятия Тогда
			Описание = "1." + Символы.НПП + НСтр("ru='Маркетинг и планирование';uk='Маркетинг і планування'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуМаркетинговыеМероприятия();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаМаркетинговыеМероприятия = Ложь;
			УстановитьСтраницуМаркетинговыеМероприятия(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("СостоянияПроцессов") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаПродажи И ИспользоватьУправлениеСделками Тогда
			Описание = "2." + Символы.НПП + НСтр("ru='Продажи';uk='Продажі'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуСостоянияПроцессов();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаСостоянияПроцессов = Ложь;
			УстановитьСтраницуСостоянияПроцессов(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("ВидыСделок") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаСостоянияПроцессов И ИспользоватьУправлениеСделками Тогда
			
			Описание = "32." + Символы.НПП + НСтр("ru='Этапы процессов продаж';uk='Етапи процесів продажів'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуВидыСделок();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаВидыСделок = Ложь;
			УстановитьСтраницуВидыСделок(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("УсловияОПТП") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуУсловияОПТП();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаУсловияОПТП = Ложь;
			УстановитьСтраницуУсловияОПТП(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("ВариантыКомплектацииНоменклатуры") <> Неопределено Тогда
		
		УстановитьСтраницуВариантыКомплектацииНоменклатуры();
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("ФорматыМагазинов") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаМаркетингИПланирование И ИспользоватьАссортимент Тогда
			Описание = "1." + Символы.НПП + НСтр("ru='Маркетинг и планирование';uk='Маркетинг і планування'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуФорматыМагазинов();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаФорматыМагазинов = Ложь;
			УстановитьСтраницуФорматыМагазинов(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("ТоварныеКатегории") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаМаркетингИПланирование И ИспользоватьАссортимент Тогда
			Описание = "1." + Символы.НПП + НСтр("ru='Маркетинг и планирование';uk='Маркетинг і планування'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуТоварныеКатегории();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаТоварныеКатегории = Ложь;
			УстановитьСтраницуТоварныеКатегории(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("ИзменениеАссортимента") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаФорматыМагазинов И ИспользоватьАссортимент Тогда
			
			Описание = "45." + Символы.НПП + НСтр("ru='Форматы магазинов';uk='Формати магазинів'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаНоменклатураМП И ИспользоватьАссортимент Тогда
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "6." + Символы.НПП + НСтр("ru='Номенклатура';uk='Номенклатура'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуИзменениеАссортимента();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаИзменениеАссортимента = Ложь;
			УстановитьСтраницуИзменениеАссортимента(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("Марки") <> Неопределено Тогда
		
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаМаркетингИПланирование И ИспользоватьАссортимент Тогда
			Описание = "1." + Символы.НПП + НСтр("ru='Маркетинг и планирование';uk='Маркетинг і планування'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуМарки();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаМарки = Ложь;
			УстановитьСтраницуМарки(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	// Страница ремонты.
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("РасценкиРаботСотрудниковРемонты") <> Неопределено Тогда
		Описание = "";
		КоличествоПунктов = 0;
		Если Не ОтметкаВидыРаботСотрудниковРемонты И Не НеИспользоватьРегистрациюВыполненныхРаботРемонты Тогда 
			Описание = "2." + Символы.НПП + НСтр("ru='Виды работ сотрудников';uk='Види робіт співробітників'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуРасценкиВидовРаботРемонты();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаРасценкиРаботСотрудниковРемонты = Ложь;
			УстановитьСтраницуРасценкиВидовРаботРемонты(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("КлассыОбъектовРемонта") <> Неопределено Тогда
		Описание = "";
		КоличествоПунктов = 0;
		
		Если Не ОтметкаНоменклатураРемонты Тогда
			
			Описание = Описание + "1." + Символы.НПП + НСтр("ru='Номенклатура';uk='Номенклатура'");
			КоличествоПунктов = КоличествоПунктов + 1;
			
		КонецЕсли;
		
		Если Не ОтметкаВидыРаботСотрудниковРемонты И Не ПропуститьВидыРаботСотрудниковРемонты Тогда
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "2." + Символы.НПП + НСтр("ru='Виды работ сотрудников';uk='Види робіт співробітників'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаОбщиеВидыРемонтов Тогда
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "5." + Символы.НПП + НСтр("ru='Общие виды ремонтов';uk='Загальні види ремонтів'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаПоказателиНаработки И Не ПропуститьПоказателиНаработки Тогда 
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "6." + Символы.НПП + НСтр("ru='Показатели наработки';uk='Показники напрацювання'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуКлассыОбъектовРемонта();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаКлассыОбъектовРемонта = Ложь;
			УстановитьСтраницуКлассыОбъектовРемонта(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("ОбъектыРемонта") <> Неопределено Тогда
		Описание = "";
		КоличествоПунктов = 0;
		Если Не ОтметкаКлассыОбъектовРемонта Тогда 
			Описание = "7." + Символы.НПП + НСтр("ru='Классы объектов ремонта';uk='Класи об''єктів ремонту'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуОбъектыРемонта();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаОбъектыРемонта = Ложь;
			УстановитьСтраницуОбъектыРемонта(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	// Страница производство.
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("СтруктураПредприятияПроизводство") <> Неопределено Тогда
		Описание = "";
		КоличествоПунктов = 0;
		Если Не ОтметкаАдминистрированиеПроизводство Тогда 
			Описание = "1." + Символы.НПП + НСтр("ru='Настройки производства';uk='Настройки виробництва'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаГрафикиРаботы Тогда 
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "2." + Символы.НПП + НСтр("ru='Графики работы';uk='Графіки роботи'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуСтруктураПредприятияПроизводство();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаСтруктураПредприятияПроизводство = Ложь;
			УстановитьСтраницуСтруктураПредприятияПроизводство(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("СтруктураРабочихЦентров") <> Неопределено Тогда
		Описание = "";
		КоличествоПунктов = 0;
		Если Не ОтметкаСтруктураПредприятияПроизводство Тогда 
			Описание = "3." + Символы.НПП + НСтр("ru='Структура предприятия';uk='Структура підприємства'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуСтруктураРабочихЦентров();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаСтруктураРабочихЦентров = Ложь;
			УстановитьСтраницуСтруктураРабочихЦентров(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("МаршрутныеКарты") <> Неопределено Тогда
		Описание = "";
		КоличествоПунктов = 0;
		Если Не ОтметкаНоменклатураПроизводство Тогда 
			Описание = "4." + Символы.НПП + НСтр("ru='Номенклатура';uk='Номенклатура'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаВидыРаботСотрудников И Не ПропуститьВидыРаботСотрудников Тогда 
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "8." + Символы.НПП + НСтр("ru='Виды работ сотрудников';uk='Види робіт співробітників'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуМаршрутныеКарты();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаМаршрутныеКарты = Ложь;
			УстановитьСтраницуМаршрутныеКарты(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("РесурсныеСпецификации") <> Неопределено Тогда
		Описание = "";
		КоличествоПунктов = 0;
		Если Не ОтметкаНоменклатураПроизводство Тогда 
			Описание = "4." + Символы.НПП + НСтр("ru='Номенклатура';uk='Номенклатура'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаСтатьиКалькуляции Тогда
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "5." + Символы.НПП + НСтр("ru='Статьи калькуляции';uk='Статті калькуляції'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаСтруктураРабочихЦентров И Не ПропуститьСтруктураРабочихЦентров Тогда 
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "7." + Символы.НПП + НСтр("ru='Структура рабочих центров';uk='Структура робочих центрів'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если Не ОтметкаВидыРаботСотрудников И Не ПропуститьВидыРаботСотрудников Тогда 
			
			Если ЗначениеЗаполнено(Описание) Тогда
				Описание = Описание + ", ";
			КонецЕсли;
			
			Описание = Описание + "8." + Символы.НПП + НСтр("ru='Виды работ сотрудников';uk='Види робіт співробітників'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуРесурсныеСпецификации();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаРесурсныеСпецификации = Ложь;
			УстановитьСтраницуРесурсныеСпецификации(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("РасценкиРаботСотрудников") <> Неопределено Тогда
		Описание = "";
		КоличествоПунктов = 0;
		Если Не ОтметкаВидыРаботСотрудников И Не НеИспользоватьРегистрациюВыполненныхРабот Тогда 
			Описание = "8." + Символы.НПП + НСтр("ru='Виды работ сотрудников';uk='Види робіт співробітників'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуРасценкиВидовРабот();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаРасценкиРаботСотрудников = Ложь;
			УстановитьСтраницуРасценкиВидовРабот(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
	Если МассивРеквизитов = Неопределено Или МассивРеквизитов.Найти("НастройкиПередачиМатериаловВПроизводство") <> Неопределено Тогда
		Описание = "";
		КоличествоПунктов = 0;
		Если Не ОтметкаНоменклатураПроизводство Тогда 
			Описание = "4." + Символы.НПП + НСтр("ru='Номенклатура';uk='Номенклатура'");
			КоличествоПунктов = КоличествоПунктов + 1;
		КонецЕсли;
		
		Если КоличествоПунктов = 0 Тогда
			УстановитьСтраницуНастройкиПередачиМатериаловВПроизводство();
		Иначе
			Описание = НСтр("ru='Требуется заполнить:';uk='Потрібно заповнити:'") + " " + Описание + ". ";
			ОтметкаНастройкиПередачиМатериаловВПроизводство = Ложь;
			УстановитьСтраницуНастройкиПередачиМатериаловВПроизводство(Ложь, Описание);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция МассивРеквизитовФормы(ИмяСтраницы = Неопределено)
	
	Массив = Новый Массив;
	
	// Страница основные настройки.
	
	Если ИмяСтраницы = Неопределено Или ИмяСтраницы = "СтраницаОсновныеНастройки" Тогда
		
		Массив.Добавить("ОтметкаОрганизацииИВалюты");
		Массив.Добавить("ОтметкаОрганизации");
		Массив.Добавить("ОтметкаКассы");
		Массив.Добавить("ОтметкаБанковскиеСчета");
		Массив.Добавить("ОтметкаСтруктураПредприятия");
		Массив.Добавить("ОтметкаНастройкиПользователейИПрав");
		
		Массив.Добавить("ОтметкаГруппаНоменклатура");
		Массив.Добавить("ОтметкаГруппаЗапасыИЗакупки");
		Массив.Добавить("ОтметкаГруппаМаркетингИПродажи");
		Массив.Добавить("ОтметкаГруппаПроизводство");
		Массив.Добавить("ОтметкаГруппаРемонты");
		
		Массив.Добавить("ОтметкаГруппыДоступа");
		Массив.Добавить("ОтметкаВводНачальныхОстатков");
		
	КонецЕсли;
	
	// Страница основные настройки номенклатуры.
	
	Если ИмяСтраницы = Неопределено Или ИмяСтраницы = "СтраницаОсновныеНастройкиНоменклатуры" Тогда
		
		Массив.Добавить("ОтметкаНастройкиНоменклатуры");
		Массив.Добавить("ОтметкаАдминистрированиеСкладОсновные");
		Массив.Добавить("ОтметкаВидыНоменклатурыОсновные");
		Массив.Добавить("ОтметкаНоменклатураОсновные");
		
	КонецЕсли;
	
	// Страница запасы и закупки.
	
	Если ИмяСтраницы = Неопределено Или ИмяСтраницы = "СтраницаЗапасыИЗакупки" Тогда
		
		Массив.Добавить("ОтметкаАдминистрированиеЗапасыИЗакупки");
		Массив.Добавить("ОтметкаАдминистрированиеСкладЗапасыИЗакупки");
		Массив.Добавить("ОтметкаСклады");
		
		Массив.Добавить("ОтметкаСкладскиеГруппыНоменклатуры");
		Массив.Добавить("ОтметкаСкладскиеГруппыУпаковок");
		Массив.Добавить("ОтметкаГенерацияТопологии");
		Массив.Добавить("ОтметкаПравилаРазмещения");
		Массив.Добавить("ОтметкаСкладскиеЯчейки");
		
		Массив.Добавить("ОтметкаГруппыДоступаПартнеров");
		Массив.Добавить("ОтметкаПартнеры");
		Массив.Добавить("ОтметкаКонтрагенты");
		Массив.Добавить("ОтметкаСоглашенияСПоставщиками");
		Массив.Добавить("ОтметкаДоговорыКонтрагентов");
		
		Массив.Добавить("ОтметкаВидыНоменклатурыЗапасыИЗакупки");
		Массив.Добавить("ОтметкаНоменклатураЗапасыИЗакупки");
		Массив.Добавить("ОтметкаСпособыОбеспеченияПотребностей");
		Массив.Добавить("ОтметкаУстановкаЦенПоставщиков");
		
		Массив.Добавить("ОтметкаТипыТранспортныхСредств");
		Массив.Добавить("ОтметкаТранспортныеСредства");
		Массив.Добавить("ОтметкаЗоныДоставки");
		
	КонецЕсли;
	
	// Страница маркетинг и продажи.
	
	Если ИмяСтраницы = Неопределено Или ИмяСтраницы = "СтраницаМаркетингИПродажи" Тогда
		
		Массив.Добавить("ОтметкаМаркетингИПланирование");
		Массив.Добавить("ОтметкаПродажи");
		Массив.Добавить("ОтметкаПодключаемоеОборудование");
		
		Массив.Добавить("ОтметкаГруппыДоступаНоменклатурыМП");
		Массив.Добавить("ОтметкаВидыНоменклатурыМаркетингИПродажи");
		Массив.Добавить("ОтметкаНоменклатураМП");
		Массив.Добавить("ОтметкаСегментыНоменклатуры");
		Массив.Добавить("ОтметкаБизнесРегионы");
		Массив.Добавить("ОтметкаРолиПартнеров");
		Массив.Добавить("ОтметкаГруппыДоступаПартнеровМП");
		Массив.Добавить("ОтметкаСегментыПартнеров");
		Массив.Добавить("ОтметкаПартнерыМП");
		Массив.Добавить("ОтметкаКонтрагентыМП");
		Массив.Добавить("ОтметкаГрафикиОплаты");
		Массив.Добавить("ОтметкаСоглашенияСКлиентами");
		Массив.Добавить("ОтметкаСоглашенияСКлиентамиИнд");
		Массив.Добавить("ОтметкаДоговорыКонтрагентовМП");
		
		Массив.Добавить("ОтметкаЦеновыеГруппы");
		Массив.Добавить("ОтметкаВидыЦен");
		Массив.Добавить("ОтметкаГруппыПользователей");
		Массив.Добавить("ОтметкаУсловияПредоставления");
		Массив.Добавить("ОтметкаСкидкиНаценки");
		Массив.Добавить("ОтметкаВидыКартЛояльности");
		Массив.Добавить("ОтметкаКартыЛояльности");
		Массив.Добавить("ОтметкаУстановкаЦен");
		Массив.Добавить("ОтметкаНастройкиПродажПользователей");
		Массив.Добавить("ОтметкаСоглашенияСПоставщикамиМП");
		Массив.Добавить("ОтметкаУстановкаЦенПоставщиковМП");
		
		Массив.Добавить("ОтметкаКаналыРекламныхВоздействий");
		Массив.Добавить("ОтметкаМаркетинговыеМероприятия");
		Массив.Добавить("ОтметкаУстановкиСкидокНаценок");
		
		Массив.Добавить("ОтметкаСостоянияПроцессов");
		Массив.Добавить("ОтметкаВидыСделок");
		Массив.Добавить("ОтметкаПричиныНеудовлетворенияСпроса");
		Массив.Добавить("ОтметкаПричиныПроигрышаСделок");
		Массив.Добавить("ОтметкаРолиКонтактныхЛицВСделкахИПроектах");
		Массив.Добавить("ОтметкаВидыСвязейМеждуПартнерами");
		Массив.Добавить("ОтметкаРолиКонтактныхЛицПартнеров");
		
		Массив.Добавить("ОтметкаИсточникиДанныхПланирования");
		Массив.Добавить("ОтметкаУсловияОПТП");
		Массив.Добавить("ОтметкаВариантыКомплектацииНоменклатуры");
		Массив.Добавить("ОтметкаНоменклатураПродаваемаяСовместно");
		Массив.Добавить("ОтметкаПричиныВозникновенияПретензий");
		Массив.Добавить("ОтметкаПричиныОтменыЗаказовКлиентов");
		
		Массив.Добавить("ОтметкаФорматыМагазинов");
		Массив.Добавить("ОтметкаТоварныеКатегории");
		Массив.Добавить("ОтметкаИзменениеАссортимента");
		Массив.Добавить("ОтметкаМарки");
		
		Массив.Добавить("ОтметкаВидыСвязейМеждуПартнерами");
		
	КонецЕсли;
	
	// Страница ремонты.
	
	Если ИмяСтраницы = Неопределено Или ИмяСтраницы = "СтраницаРемонты" Тогда
		
		Массив.Добавить("ОтметкаНоменклатураРемонты");
		Массив.Добавить("ОтметкаВидыРаботСотрудниковРемонты");
		Массив.Добавить("ОтметкаРасценкиРаботСотрудниковРемонты");
		Массив.Добавить("ОтметкаБригадыРемонты");
		
		Массив.Добавить("ОтметкаОбщиеВидыРемонтов");
		Массив.Добавить("ОтметкаПоказателиНаработки");
		Массив.Добавить("ОтметкаКлассыОбъектовРемонта");
		Массив.Добавить("ОтметкаОбъектыРемонта");
		Массив.Добавить("ОтметкаВидыДефектов");
		Массив.Добавить("ОтметкаРемонтныеМероприятия");
		
		Массив.Добавить("ПропуститьВидыРаботСотрудниковРемонты");
		Массив.Добавить("ПропуститьРасценкиРаботСотрудниковРемонты");
		Массив.Добавить("ПропуститьБригадыРемонты");
		
		Массив.Добавить("ПропуститьПоказателиНаработки");
		Массив.Добавить("ПропуститьВидыДефектов");
		Массив.Добавить("ПропуститьРемонтныеМероприятия");
		
	КонецЕсли;
	
	// Страница производство.
	
	Если ИмяСтраницы = Неопределено Или ИмяСтраницы = "СтраницаПроизводство" Тогда
		
		Массив.Добавить("ОтметкаАдминистрированиеПроизводство");
		Массив.Добавить("ОтметкаГрафикиРаботы");
		Массив.Добавить("ОтметкаСтруктураПредприятияПроизводство");
		Массив.Добавить("ОтметкаНоменклатураПроизводство");
		Массив.Добавить("ОтметкаСтатьиКалькуляции");
		Массив.Добавить("ОтметкаПравилаРаспределенияРасходов");
		
		Массив.Добавить("ОтметкаСтруктураРабочихЦентров");
		Массив.Добавить("ОтметкаВидыРаботСотрудников");
		Массив.Добавить("ОтметкаМаршрутныеКарты");
		Массив.Добавить("ОтметкаРесурсныеСпецификации");
		Массив.Добавить("ОтметкаРасценкиРаботСотрудников");
		Массив.Добавить("ОтметкаБригады");
		Массив.Добавить("ОтметкаНастройкиПередачиМатериаловВПроизводство");
		
		Массив.Добавить("ПропуститьСтруктураРабочихЦентров");
		Массив.Добавить("ПропуститьВидыРаботСотрудников");
		Массив.Добавить("ПропуститьМаршрутныеКарты");
		Массив.Добавить("ПропуститьРасценкиРаботСотрудников");
		Массив.Добавить("ПропуститьБригады");
		
		Массив.Добавить("НеИспользоватьРегистрациюВыполненныхРабот");
		Массив.Добавить("НеИспользоватьРегистрациюВыполненныхРаботРемонты");
	КонецЕсли;
	
	Возврат Массив;
	
КонецФункции

&НаСервере
Процедура СохранитьСтатусыНаСервере()
	
	Настройки = Константы.СтатусыОбъектовПомощникаЗаполненияНастроекИСправочников.Получить().Получить();
	
	Если ТипЗнч(Настройки) <> Тип("Соответствие") Тогда
		Настройки = Новый Соответствие;
	КонецЕсли;
	
	Массив = МассивРеквизитовФормы();
	
	Для Каждого Элемент из Массив Цикл
		Настройки.Вставить(Элемент, ЭтаФорма[Элемент]);
	КонецЦикла;
	
	Константы.СтатусыОбъектовПомощникаЗаполненияНастроекИСправочников.Установить(Новый ХранИлищеЗначения(Настройки));
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройки()
	
	СохраненныеНастройки = Константы.СтатусыОбъектовПомощникаЗаполненияНастроекИСправочников.Получить().Получить();
	
	Если ТипЗнч(СохраненныеНастройки) = Тип("Соответствие") Тогда
		
		Массив = МассивРеквизитовФормы();
		
		Для Каждого Элемент из Массив Цикл
			ЭтаФорма[Элемент] = ?(СохраненныеНастройки[Элемент] = Неопределено, Ложь, СохраненныеНастройки[Элемент]);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьИДоступность()
	
	ОбновитьЗначенияФункциональныхОпций();
	
	Элементы.ГруппаРемонты.Видимость = ИспользоватьУправлениеРемонтами;
	
	Если ИспользоватьНесколькоОрганизаций Тогда
		Элементы.ОткрытьОрганизацию.Заголовок = НСтр("ru='Организации';uk='Організації'");
	Иначе
		Элементы.ОткрытьОрганизацию.Заголовок = НСтр("ru='Сведения об организации';uk='Відомості про організацію'");
	КонецЕсли;
	
	Если ИспользоватьНесколькоКасс Тогда
		Элементы.ОткрытьКассы.Заголовок = НСтр("ru='Кассы';uk='Каси'");
	Иначе
		Элементы.ОткрытьКассы.Заголовок = НСтр("ru='Настройка кассы';uk='Настройка каси'");
	КонецЕсли;
	
	Если ИспользоватьНесколькоРасчетныхСчетов Тогда
		Элементы.ОткрытьБанковскиеСчета.Заголовок = НСтр("ru='Банковские счета';uk='Банківські рахунки'");
	Иначе
		Элементы.ОткрытьБанковскиеСчета.Заголовок = НСтр("ru='Настройка банковского счета';uk='Настройка банківського рахунку'");
	КонецЕсли;
	
	// Страница запасы и закупки.
	
	Если ИспользоватьНесколькоСкладов Тогда
		Элементы.ОткрытьСклады.Заголовок = НСтр("ru='Склады';uk='Склади'");
		Элементы.ОткрытьСклады1.Заголовок = НСтр("ru='Склады';uk='Склади'");
	Иначе
		Элементы.ОткрытьСклады.Заголовок = НСтр("ru='Настройка складского учета';uk='Настройка складського обліку'");
		Элементы.ОткрытьСклады1.Заголовок = НСтр("ru='Настройка складского учета';uk='Настройка складського обліку'");
	КонецЕсли;
	
	Элементы.ЭлементСкладскиеГруппыНоменклатуры.Доступность = ИспользоватьАдресноеХранение;
	Элементы.ЭлементСкладскиеГруппыУпаковок.Доступность = ИспользоватьАдресноеХранение;
	Элементы.ЭлементПравилаРазмещения.Доступность = ИспользоватьАдресноеХранение;
	
	Элементы.ЭлементГенерацияТопологии.Доступность = ИспользоватьАдресноеХранение Или ИспользоватьАдресноеХранениеСправочно;
	Элементы.ЭлементСкладскиеЯчейки.Доступность = ИспользоватьАдресноеХранение Или ИспользоватьАдресноеХранениеСправочно;
	
	Элементы.ЭлементУстановкаЦенПоставщиков.Доступность	= ИспользоватьНоменклатуруПоставщиков;
	Элементы.ЭлементГруппыДоступаПартнеров.Доступность	= ИспользоватьГруппыДоступаПартнеров;
	
	Элементы.ЭлементДоговорыКонтрагентов.Доступность	= ИспользоватьДоговорыСПоставщиками;
	
	Элементы.ЭлементТипыТранспортныхСредств.Доступность		= ИспользоватьТТН или ИспользоватьУправлениеДоставкой;
	Элементы.ЭлементТранспортныеСредства.Доступность		= ИспользоватьТТН или ИспользоватьУправлениеДоставкой;
	Элементы.ЭлементЗоныДоставки.Доступность				= ИспользоватьУправлениеДоставкой;
	
	Элементы.ЭлементСоглашенияСПоставщиками.Доступность     = ИспользоватьСоглашенияСПоставщиками;
	
	// Страница маркетинг и продажи.
	
	Элементы.ЭлементГруппыДоступаНоменклатурыМП.Доступность	= ИспользоватьГруппыДоступаНоменклатуры;
	
	Элементы.ЭлементСегментыНоменклатуры.Доступность		= ИспользоватьСегментыНоменклатуры;
	Элементы.ЭлементБизнесРегионы.Доступность				= ИспользоватьБизнесРегионы;
	Элементы.ЭлементРолиПартнеров.Доступность				= ИспользоватьРолиПартнеровИКонтактныхЛицВСделкахИПроектах;
	
	Элементы.ЭлементГруппыДоступаПартнеровМП.Доступность	= ИспользоватьГруппыДоступаПартнеров;
	Элементы.ЭлементСегментыПартнеров.Доступность			= ИспользоватьСегментыПартнеров;
	Элементы.ЭлементКонтрагентыМП.Доступность				= ИспользоватьПартнеровИКонтрагентов;
	Элементы.ЭлементДоговорыКонтрагентовМП.Доступность		= ИспользоватьДоговорыСКлиентами;
	
	Элементы.ЭлементГрафикиОплаты.Доступность				= ИспользоватьГрафикиОплаты;
	
	Элементы.ЭлементСоглашенияСКлиентами.Доступность		= ИспользоватьСоглашенияСКлиентами;
	Элементы.ЭлементСоглашенияСКлиентамиИнд.Доступность		= ИспользоватьСоглашенияСКлиентамиИнд;
	
	Элементы.ЭлементЦеновыеГруппы.Доступность				= ИспользоватьЦеновыеГруппы;
	Элементы.ЭлементГруппыПользователей.Доступность			= ИспользоватьАвтоматическиеСкидкиВПродажах И ИспользоватьГруппыПользователей;
	Элементы.ЭлементУсловияПредоставления.Доступность		= ИспользоватьАвтоматическиеСкидкиВПродажах;
	Элементы.ЭлементСкидкиНаценки.Доступность				= ИспользоватьАвтоматическиеСкидкиВПродажах;
	
	Элементы.ЭлементВидыКартЛояльности.Доступность			= ИспользоватьКартыЛояльности;
	Элементы.ЭлементКартыЛояльности.Доступность				= ИспользоватьКартыЛояльности;
	Элементы.ЭлементНастройкиПродажПользователей.Доступность= ИспользоватьОграниченияРучныхСкидокВПродажахПоПользователям Или ИспользоватьОграниченияРучныхСкидокВПродажахПоСоглашениям;
	Элементы.ЭлементСоглашенияСПоставщикамиМП.Доступность	= ИспользоватьКонкурентнуюРазведку И ИспользоватьСоглашенияСПоставщиками;
	Элементы.ЭлементУстановкаЦенПоставщиковМП.Доступность	= ИспользоватьКонкурентнуюРазведку;
	
	Элементы.ЭлементКаналыРекламныхВоздействий.Доступность	= ИспользоватьМаркетинговыеМероприятия Или ФиксироватьПервичныйИнтерес;
	Элементы.ЭлементМаркетинговыеМероприятия.Доступность	= ИспользоватьМаркетинговыеМероприятия;
	
	Элементы.ЭлементСостоянияПроцессов.Доступность			= ИспользоватьУправлениеСделками;
	Элементы.ЭлементВидыСделок.Доступность					= ИспользоватьУправлениеСделками;
	
	Элементы.ЭлементПричиныНеудовлетворенияСпроса.Доступность	= ИспользоватьПервичныйСпрос;
	Элементы.ЭлементПричиныПроигрышаСделок.Доступность		= ИспользоватьУправлениеСделками;
	Элементы.ЭлементРолиКонтактныхЛицВСделкахИПроектах.Доступность	= ИспользоватьРолиКонтактныхЛицПартнеров;
	Элементы.ЭлементВидыСвязейМеждуПартнерами.Доступность	= ИспользоватьВидыСвязейПартнеров;
	Элементы.ЭлементРолиКонтактныхЛицПартнеров.Доступность	= ИспользоватьРолиКонтактныхЛицПартнеров;
	
	Элементы.ЭлементИсточникиДанныхПланирования.Доступность	= ИспользоватьПланированиеПродаж;
	Элементы.ЭлементУсловияОПТП.Доступность					= ВедетсяРаботаЧерезТорговыхПредставителей;
	Элементы.ЭлементВариантыКомплектацииНоменклатуры.Доступность= ИспользоватьВариантыКомплектацииНоменклатуры;
	Элементы.ЭлементНоменклатураПродаваемаяСовместно.Доступность= ИспользоватьНоменклатуруПродаваемуюСовместно;
	Элементы.ЭлементПричиныВозникновенияПретензий.Доступность	= ФиксироватьПретензииКлиентов;
	Элементы.ЭлементПричиныОтменыЗаказовКлиентов.Доступность= ИспользоватьПричиныОтменыЗаказовКлиентов;
	
	Элементы.ЭлементФорматыМагазинов.Доступность			= ИспользоватьАссортимент;
	Элементы.ЭлементТоварныеКатегории.Доступность			= ИспользоватьАссортимент;
	Элементы.ЭлементИзменениеАссортимента.Доступность		= ИспользоватьАссортимент;
	Элементы.ЭлементМарки.Доступность						= ИспользоватьАссортимент;
	
	Элементы.ОткрытьВидыНоменклатуры.Видимость				= ИспользоватьМножествоВидовНоменклатуры;
	Элементы.ОткрытьВидНоменклатурыТовар.Видимость			= Не ИспользоватьМножествоВидовНоменклатуры;
	Элементы.ОткрытьВидНоменклатурыУслуга.Видимость			= Не ИспользоватьМножествоВидовНоменклатуры;
	
	Элементы.ЭлементСпособыОбеспеченияПотребностей.Доступность = ИспользоватьСпособыОбеспечения;
	
	Элементы.ЭлементСтруктураПредприятия.Видимость = ИспользоватьПодразделения;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗначенияФункциональныхОпций()
	
	ИспользоватьНесколькоОрганизаций			= ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций");
	ИспользоватьНесколькоКасс					= ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоКасс");
	ИспользоватьНесколькоРасчетныхСчетов		= ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоРасчетныхСчетов");
	
	ИспользоватьАдресноеХранение				= ПолучитьФункциональнуюОпцию("ИспользоватьАдресноеХранение", Новый Структура);
	ИспользоватьАдресноеХранениеСправочно		= ПолучитьФункциональнуюОпцию("ИспользоватьАдресноеХранениеСправочно", Новый Структура);
	ИспользоватьНесколькоСкладов				= ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоСкладов");
	ИспользоватьНоменклатуруПоставщиков			= ПолучитьФункциональнуюОпцию("ИспользоватьНоменклатуруПоставщиков");
	
	ИспользоватьСегментыНоменклатуры			= ПолучитьФункциональнуюОпцию("ИспользоватьСегментыНоменклатуры");
	ИспользоватьБизнесРегионы					= ПолучитьФункциональнуюОпцию("ИспользоватьБизнесРегионы");
	
	ИспользоватьГруппыДоступаПартнеров			= ПолучитьФункциональнуюОпцию("ИспользоватьГруппыДоступаПартнеров");
	ИспользоватьСегментыПартнеров				= ПолучитьФункциональнуюОпцию("ИспользоватьСегментыПартнеров");
	ИспользоватьГруппыДоступаНоменклатуры		= ПолучитьФункциональнуюОпцию("ИспользоватьГруппыДоступаНоменклатуры");
	ИспользоватьПартнеровИКонтрагентов			= ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов");
	
	ИспользоватьДоговорыСКлиентами				= ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыСКлиентами");
	ИспользоватьДоговорыСПоставщиками			= ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыСПоставщиками");
	
	ИспользоватьГрафикиОплаты					= ПолучитьФункциональнуюОпцию("ИспользоватьГрафикиОплаты");
	ИспользоватьСоглашенияСКлиентамиОбщ			= ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами");
	ИспользоватьСоглашенияСКлиентами			= ПолучитьФункциональнуюОпцию("ИспользоватьТиповыеСоглашенияСКлиентами");
	ИспользоватьСоглашенияСКлиентамиИнд			= ПолучитьФункциональнуюОпцию("ИспользоватьИндивидуальныеСоглашенияСКлиентами");
	ИспользоватьКомиссиюПриПродажах				= ПолучитьФункциональнуюОпцию("ИспользоватьКомиссиюПриПродажах");
	
	ИспользоватьЦеновыеГруппы					= ПолучитьФункциональнуюОпцию("ИспользоватьЦеновыеГруппы");
	ИспользоватьГруппыПользователей				= ПолучитьФункциональнуюОпцию("ИспользоватьГруппыПользователей");
	ИспользоватьАвтоматическиеСкидкиВПродажах	= ПолучитьФункциональнуюОпцию("ИспользоватьАвтоматическиеСкидкиВПродажах");
	ИспользоватьКартыЛояльности					= ПолучитьФункциональнуюОпцию("ИспользоватьКартыЛояльности");
	ИспользоватьОграниченияРучныхСкидокВПродажахПоПользователям	= ПолучитьФункциональнуюОпцию("ИспользоватьОграниченияРучныхСкидокВПродажахПоПользователям");
	ИспользоватьОграниченияРучныхСкидокВПродажахПоСоглашениям	= ПолучитьФункциональнуюОпцию("ИспользоватьОграниченияРучныхСкидокВПродажахПоСоглашениям");
	ИспользоватьКонкурентнуюРазведку			= ПолучитьФункциональнуюОпцию("ИспользоватьКонкурентнуюРазведку");
	ИспользоватьМаркетинговыеМероприятия		= ПолучитьФункциональнуюОпцию("ИспользоватьМаркетинговыеМероприятия");
	ФиксироватьПервичныйИнтерес					= ПолучитьФункциональнуюОпцию("ФиксироватьПервичныйИнтерес");

	ИспользоватьУправлениеСделками				= ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеСделками");
	
	ИспользоватьПервичныйСпрос					= ПолучитьФункциональнуюОпцию("ИспользоватьПервичныйСпрос");
	ИспользоватьВидыСвязейПартнеров				= ПолучитьФункциональнуюОпцию("ИспользоватьВидыСвязейПартнеров");
	ИспользоватьРолиКонтактныхЛицПартнеров		= ПолучитьФункциональнуюОпцию("ИспользоватьРолиКонтактныхЛицПартнеров");
	
	ИспользоватьПланированиеПродаж	= ПолучитьФункциональнуюОпцию("ИспользоватьПланированиеПродаж");
	ВедетсяРаботаЧерезТорговыхПредставителей	= ПолучитьФункциональнуюОпцию("ВедетсяРаботаЧерезТорговыхПредставителей");
	ИспользоватьВариантыКомплектацииНоменклатуры= ПолучитьФункциональнуюОпцию("ИспользоватьСборкуРазборку");
	ИспользоватьНоменклатуруПродаваемуюСовместно= ПолучитьФункциональнуюОпцию("ИспользоватьНоменклатуруПродаваемуюСовместно");
	ФиксироватьПретензииКлиентов				= ПолучитьФункциональнуюОпцию("ФиксироватьПретензииКлиентов");
	ИспользоватьПричиныОтменыЗаказовКлиентов	= ПолучитьФункциональнуюОпцию("ИспользоватьПричиныОтменыЗаказовКлиентов");
	
	ИспользоватьАссортимент						= ПолучитьФункциональнуюОпцию("ИспользоватьАссортимент");
	
	НеИспользоватьРегистрациюВыполненныхРабот	= ПропуститьВидыРаботСотрудников;
	НеИспользоватьРегистрациюВыполненныхРаботРемонты = ПропуститьВидыРаботСотрудниковРемонты;
	
	ИспользоватьТТН								= ПолучитьФункциональнуюОпцию("ИспользоватьТТН");
	ИспользоватьУправлениеДоставкой				= ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеДоставкой");
	
	ИспользоватьМножествоВидовНоменклатуры		= ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВидовНоменклатуры");
	
	ИспользоватьУправлениеРемонтами				= Ложь;
	ИспользоватьРолиПартнеровИКонтактныхЛицВСделкахИПроектах = ПолучитьФункциональнуюОпцию("ИспользоватьРолиПартнеровИКонтактныхЛицВСделкахИПроектах");
	
	ИспользоватьСпособыОбеспечения				= ПолучитьФункциональнуюОпцию("ИспользоватьРасширенноеОбеспечениеПотребностей");
	
	ИспользоватьПодразделения                   = ПолучитьФункциональнуюОпцию("ИспользоватьПодразделения");
	
	ИспользоватьСоглашенияСПоставщиками         = ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСПоставщиками");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОрганизацияПоУмолчанию()
	
	Возврат Справочники.Организации.ПолучитьОрганизациюПоУмолчанию();
	
КонецФункции

&НаСервереБезКонтекста
Функция КассаПоУмолчанию()
	
	Возврат Справочники.Кассы.ПолучитьКассуПоУмолчанию(Справочники.Организации.ПустаяСсылка());
	
КонецФункции

&НаСервереБезКонтекста
Функция БанковскийСчетПоУмолчанию()
	
	Возврат Справочники.БанковскиеСчетаОрганизаций.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(Справочники.Организации.ПустаяСсылка());
	
КонецФункции

&НаСервереБезКонтекста
Функция СкладПоУмолчанию()
	
	Возврат Справочники.Склады.СкладПоУмолчанию();
	
КонецФункции

&НаСервере
Процедура НастроитьОтображаниеФормыУТУП()
	
	ТекстНадписи = НСтр("ru='Функционал по Маркетингу, Продажам, Запасам и закупкам предусматривает номенклатурный учет материальных ценностей.';uk='Функціонал Маркетингу, Продажів, Запасів і купівлель передбачає номенклатурний облік матеріальних цінностей.'");
	Элементы.ОписаниеКонтурыУчета.Заголовок = ТекстНадписи;
	
	ТекстНадписи = НСтр("ru='Являются обязательными при работе подсистем Маркетинг и планирование, Продажи, Закупки, Склад.';uk='Є обов''язковими при роботі підсистем Маркетинг і планування, Продажі, Купівлі, Склад.'");
	Элементы.ОсновныеНастройкиНоменклатурыОписание.Заголовок = ТекстНадписи;
	
	Элементы.ГруппаПроизводство.Видимость = Ложь;
	Элементы.ГруппаРемонты.Видимость = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСтраниц(ИмяСтраницы)
	
	НоваяСтраница = Элементы[ИмяСтраницы];
	
	НоваяСтраница.Видимость = Истина;
	Элементы.ОсновнаяПанель.ТекущаяСтраница = НоваяСтраница;
	
	Для Каждого Элемент Из Элементы.ОсновнаяПанель.ПодчиненныеЭлементы Цикл
		Если Элемент = НоваяСтраница Тогда
			Продолжить;
		КонецЕсли;
		
		Элемент.Видимость = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПредустановленныеВидыНоменклатуры(ТипНоменклатуры, Имя)
	
	МассивВидов = Новый Массив();
	
	Справочники.ВидыНоменклатуры.ДобавитьПредустановленныйВидНоменклатуры(МассивВидов, ТипНоменклатуры, Имя);
	
	Если МассивВидов.Количество() > 0 Тогда
		Возврат МассивВидов[0];
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции 

#КонецОбласти

ВыполняетсяЗакрытие = Ложь;