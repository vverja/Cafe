
#Область ПрограммныйИнтерфейс

// Возвращает структуру, содержащую информацию об ответственном лице организации.
//
// Параметры:
//	Организация - СправочникСсылка.Организации - отбор по организации
//	Дата - Дата - отбор по дате
//  ОтветственноеЛицо - Перечисления.ОтветственныеЛицаОрганизаций - "вид" ответственного лица.
//
// Возвращаемое значение:
// Структура с ключами
//	- СтруктурнаяЕдиница
//	- ОтветственноеЛицо
//	- ФизическоеЛицо
//	- Должность
//
Функция ПолучитьДанныеОтветственногоЛица(Организация, Дата = Неопределено, ОтветственноеЛицо) Экспорт
	
	СтруктураОтветственных = ПолучитьОтветственныеЛицаОрганизации(Организация, Дата);
	Результат 			   = Новый Структура("СтруктурнаяЕдиница, ОтветственноеЛицо", Организация, ОтветственноеЛицо);
	
	Для Каждого МетаВидОтветственного Из Метаданные.Перечисления.ОтветственныеЛицаОрганизаций.ЗначенияПеречисления Цикл
		
		Ключ = МетаВидОтветственного.Имя;
		Если ОтветственноеЛицо = Перечисления.ОтветственныеЛицаОрганизаций[Ключ] Тогда
			Результат.Вставить("ФизическоеЛицо", СтруктураОтветственных[Ключ]);
			Результат.Вставить("Должность", 	 СтруктураОтветственных[Ключ + "Должность"]);
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Возвращает структуру, содержащую информацию об ответственных лицах организации.
//
// Параметры:
//	Организация - СправочникСсылка.Организации - отбор по организации
//	Дата - Дата - отбор по дате
//
// Возвращаемое значение:
// Структура с ключами
//	- %ВидОтветственного% - СправочникСсылка.ФизическиеЛица - физическое лицо, соответствующее ответственному лицу
//	- %ВидОтветственного%Должность - Строка - должность ответственного лица
// Для полей, начинающихся с %ВидОтветственного%
// 	- вместо %ВидОтветственного% подставляется имя значения перечисления ОтветственныеЛицаОрганизаций как оно задано в конфигураторе
//	- количество каждого из этих ключей соответствует количеству значений перечисления ОтветственныеЛицаОрганизаций
//
Функция ПолучитьОтветственныеЛицаОрганизации(Организация, Дата = Неопределено) Экспорт
	
	Если Дата = Неопределено Тогда
		Дата = ТекущаяДатаСеанса();
	КонецЕсли;
	
	СтруктураОтветственных = Новый Структура;
	
	СтруктураОтбора 	 = Новый Структура("Дата, Владелец", Дата, Организация);
	ТаблицаОтветственных = ПолучитьТаблицуОтветственныхЛицПоОтбору(СтруктураОтбора);
	ТаблицаОтветственных.Индексы.Добавить("ОтветственноеЛицо, ПравоПодписиПоДоверенности");
	
	Для Каждого МетаВидОтветственного Из Метаданные.Перечисления.ОтветственныеЛицаОрганизаций.ЗначенияПеречисления Цикл
		
		Ключ 			  = МетаВидОтветственного.Имя;
		ВидОтветственного = Перечисления.ОтветственныеЛицаОрганизаций[Ключ];
		СтрокаТаблицы 	  = Неопределено; // ответственный пока не определен
		
		// Попытаемся найти подходящее ответственное лицо
		СтруктураОтбора = Новый Структура("ОтветственноеЛицо", ВидОтветственного);
		СтрокиТаблицы = ТаблицаОтветственных.НайтиСтроки(СтруктураОтбора);
		
		Если СтрокиТаблицы.Количество() = 1 Тогда
			
			// Если есть только один ответственный данного вида - вернем его
			СтрокаТаблицы = СтрокиТаблицы[0];
			
		ИначеЕсли СтрокиТаблицы.Количество() > 1 Тогда
			
			СтруктураОтбора.Вставить("ПравоПодписиПоДоверенности", Ложь);
			
			СтрокиТаблицы = ТаблицаОтветственных.НайтиСтроки(СтруктураОтбора);
			Если СтрокиТаблицы.Количество() = 1 Тогда
				// Если есть основной ответственный данного вида - вернем его
				СтрокаТаблицы = СтрокиТаблицы[0];
			КонецЕсли;
			
		КонецЕсли;
		
		Если СтрокаТаблицы = Неопределено Тогда
			
			// Ответственное лицо этого вида не удалось определить
			СтруктураОтветственных.Вставить(Ключ, 				         Справочники.ФизическиеЛица.ПустаяСсылка());
			СтруктураОтветственных.Вставить(Ключ + "Должность",          "");
			СтруктураОтветственных.Вставить(Ключ + "ДолжностьСсылка",    Неопределено);
			СтруктураОтветственных.Вставить(Ключ + "Наименование",       "");
			СтруктураОтветственных.Вставить(Ключ + "Ссылка", 	         Справочники.ОтветственныеЛицаОрганизаций.ПустаяСсылка());
		Иначе
			
			// Основное ответственное лицо этого вида найдено
			СтруктураОтветственных.Вставить(Ключ, 				         СтрокаТаблицы.ФизическоеЛицо);
			СтруктураОтветственных.Вставить(Ключ + "Должность",          СтрокаТаблицы.Должность);
			СтруктураОтветственных.Вставить(Ключ + "ДолжностьСсылка",    СтрокаТаблицы.ДолжностьСсылка);
			СтруктураОтветственных.Вставить(Ключ + "Наименование",       СтрокаТаблицы.Наименование);
			СтруктураОтветственных.Вставить(Ключ + "Ссылка", 	         СтрокаТаблицы.Ссылка);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтруктураОтветственных;
	
КонецФункции

// Возвращает таблицу ответственных лиц, сформированную в соответствии с произвольным отбором.
//
// Параметры:
//  Отбор - Структура - структура, содержащая параметры отбора данных справочника ОтветственныеЛицаОрганизаций.
//		Ключ - имя реквизита справочника. Возможны дополнительные ключи:
//			- Дата 		  - для отбора по периоду ДатаНачала - ДатаОкончания
//			- Организация - синоним ключа Владелец
//		Значение - значение для отбора по ключу
//	ДопустимыПомеченныеНаУдаление - Булево - выводить в результирующую таблицу помеченные на удаление элементы.
//	
// Возвращаемое значение:
//  Таблица значений - таблица, содержащая данные справочника ОтветственныеЛицаОрганизаций.
//		Имена колонок таблицы совпадают с именами реквизитов справочника.
//
Функция ПолучитьТаблицуОтветственныхЛицПоОтбору(Знач Отбор, ДопустимыПомеченныеНаУдаление = Ложь, СтрокаПоиска = "") Экспорт
	
	Запрос = Новый Запрос;
	
	ТекстВыбираемыеПоля = "";
	ТекстОтбора = "";
	НомерОтбора = 0;
	
	ПоляОтбора = ЗначениеНастроекПовтИсп.РеквизитыСправочника("ОтветственныеЛицаОрганизаций");
	
	Если Отбор.Свойство("Дата") Тогда
		
		// Отбор по периоду действия записи об ответственном лице
		ТекстОтбора =
			ТекстОтбора
			+ ?(ТекстОтбора = "", "", " И ") + "ОтветственныеЛицаОрганизаций.ДатаНачала <= &ОтборПоДате
			| И (ОтветственныеЛицаОрганизаций.ДатаОкончания >= &ОтборПоДате 
			|	 ИЛИ ОтветственныеЛицаОрганизаций.ДатаОкончания = ДАТАВРЕМЯ(1,1,1,0,0,0))
			|";
		Запрос.УстановитьПараметр("ОтборПоДате", НачалоДня(Отбор.Дата));
		
		Отбор.Удалить("Дата");
		
	КонецЕсли;
	
	Если Отбор.Свойство("Организация") Тогда
		Отбор.Вставить("Владелец", Отбор.Организация);
		Отбор.Удалить("Организация");
	КонецЕсли;
	
	Если НЕ ДопустимыПомеченныеНаУдаление Тогда
		Отбор.Вставить("ПометкаУдаления", Ложь);
	КонецЕсли;
	
	// Формируем секцию запроса "ГДЕ", устанавливаем параметры запроса
	Для Каждого ТекущийОтбор Из Отбор Цикл
		
		Если НЕ ПоляОтбора.Свойство(ТекущийОтбор.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		НомерОтбора = НомерОтбора + 1;
		
		ТекстОтбора =
			ТекстОтбора
			+ ?(ТекстОтбора = "", "", " И ") + "ОтветственныеЛицаОрганизаций." + ТекущийОтбор.Ключ 
				+ ?(ТипЗнч(ТекущийОтбор.Значение) = Тип("Массив"), " В ", " = ") + "&ЗначениеОтбора" + СокрЛП(НомерОтбора) + "
			|";
		
		Запрос.УстановитьПараметр("ЗначениеОтбора" + СокрЛП(НомерОтбора), ТекущийОтбор.Значение);
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(СтрокаПоиска) Тогда
		
		ТекстОтбора =
			ТекстОтбора
			+ ?(ТекстОтбора = "", "", " И ") + "ОтветственныеЛицаОрганизаций.Наименование ПОДОБНО &ОтборПоПредставлению
			|";
		Запрос.УстановитьПараметр("ОтборПоПредставлению", СтрокаПоиска + "%");
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстОтбора) Тогда
		ТекстОтбора =
			"ГДЕ
			| " + ТекстОтбора;
	КонецЕсли;
	
	Для Каждого Поле Из ПоляОтбора Цикл
		ТекстВыбираемыеПоля = ТекстВыбираемыеПоля
			+ ?(ТекстВыбираемыеПоля = "", "", ",") + "
			|ОтветственныеЛицаОрганизаций." + Поле.Ключ + " КАК " + Поле.Ключ;
	КонецЦикла;
	
	// Формируем запрос, получаем данные
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	%ТекстВыбираемыеПоля%
	|ИЗ
	|	Справочник.ОтветственныеЛицаОрганизаций КАК ОтветственныеЛицаОрганизаций
	|%ТекстОтбора%
	|УПОРЯДОЧИТЬ ПО
	|	Владелец,
	|	ОтветственноеЛицо,
	|	ПравоПодписиПоДоверенности,
	|	ДатаНачала,
	|	ДатаОкончания,
	|	ФизическоеЛицо";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТекстВыбираемыеПоля%", ТекстВыбираемыеПоля);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТекстОтбора%", 		  ТекстОтбора);
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Формирует временную таблицу, содержащую информацию об ответственных лицах в разрезе документов.
// Используется для формирования печатных форм документов подсистемой печати
//	- перед выборкой данных из шапки документа вызвать эту процедуру
//	- при выборке данных создать левое соединение таблицы документов с временной таблицей ТаблицаОтветственныеЛица по полю Ссылка
//
// Параметры:
//	ОтборДокументы - Массив, ДокументСсылка - ссылки на документы, по которым необходимо получить ответственных лиц.
//		Важно: если передан массив, то все его элементы должны иметь одинаковый тип.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - в него помещается сформированная временная таблица ТаблицаОтветственныеЛица
//  ИмяРеквизитаОрганизация - имя поля документа для получения организации-владельца ответственного лица
//	РеквизитыОтветственныеЛица - Структура, Соответствие
//		Ключ - Строка - имя поля в запросе для получения значения ответственного лица
//		Значение - ПеречислениеСсылка.ОтветственныеЛицаОрганизаций - "вид" ответственного лица
//	ИмяТаблицыОтветственныеЛица - позволяет задать имя для формируемой временной таблицы.
// Количество строк в таблице "ТаблицаОтветственныеЛица" соответствует количеству элементов в ОтборДокументы.
//
// Структура временной таблицы "ТаблицаОтветственныеЛица"
//	- Ссылка - ссылка на документ из ОтборДокументы
//	- %Реквизит% - СправочникСсылка.ОтветственныеЛицаОрганизаций - значение реквизита ответственного лица из документа
//	- %Реквизит%ФизическоеЛицо - СправочникСсылка.ФизическиеЛица - физическое лицо, соответствующее ответственному лицу
//	- %Реквизит%Наименование - Строка - наименование для печати ответственного лица
//	- %Реквизит%Должность - Строка - должность ответственного лица
//	- %Реквизит%ОснованиеПраваПодписи - Строка - основание права подписи для неосновного ответственного лица
// Для полей, начинающихся с %Реквизит%
// 	- вместо %Реквизит% подставляется имя реквизита ответственного лица как оно задано в конфигураторе
//	- количество каждого из этих полей соответствует количеству реквизитов ответственных лиц документа
//
// Например, если в метаданных документа есть два реквизита ответственных лиц - Руководитель и Бухгалтер,
// то таблица ТаблицаОтветственныеЛица будет иметь следующую структуру:
//	- Ссылка
//	- Руководитель
//	- РуководительФизическоеЛицо
//	- РуководительНаименование
//	- РуководительДолжность
//	- РуководительОснованиеПраваПодписи
//	- Бухгалтер
//	- БухгалтерФизическоеЛицо
//	- БухгалтерНаименование
//	- БухгалтерДолжность
//	- БухгалтерОснованиеПраваПодписи
//
Процедура СформироватьВременнуюТаблицуОтветственныхЛицДокументов(ОтборДокументы, МенеджерВременныхТаблиц,
			ИмяРеквизитаОрганизация = "Организация", РеквизитыОтветственныеЛица = Неопределено,
			ИмяТаблицыОтветственныеЛица = "ТаблицаОтветственныеЛица") Экспорт
	
	Если ТипЗнч(ОтборДокументы) = Тип("Массив") И ОтборДокументы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ОтборДокументы) <> Тип("Массив") Тогда // это ссылка на документ
		МассивОбъектов = Новый Массив;
		МассивОбъектов.Добавить(ОтборДокументы);
	Иначе // это массив ссылок на документы
		МассивОбъектов = ОтборДокументы;
	КонецЕсли;
	
	МетаданныеДокумента = МассивОбъектов[0].Метаданные();
	
	ИменаПолейПереданыВПараметрах = (РеквизитыОтветственныеЛица <> Неопределено);
	Если НЕ ИменаПолейПереданыВПараметрах Тогда
		РеквизитыОтветственныеЛица = ОтветственныеЛицаПовтИсп.РеквизитыОтветственныхЛицДокумента(МетаданныеДокумента.Имя);
	КонецЕслИ;
	
	Если НЕ ЗначениеЗаполнено(РеквизитыОтветственныеЛица) Тогда
		Возврат;
	КонецЕсли;
	
	ИмяРеквизитаОрганизация = "ДокументДляПечати." + ИмяРеквизитаОрганизация;
	
	Если МенеджерВременныхТаблиц = Неопределено Тогда
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	// Получим данные из документов
	ШаблонЗапроса = 
	"ВЫБРАТЬ
	|	ДокументДляПечати.Ссылка 					КАК Ссылка,
	|	НАЧАЛОПЕРИОДА(ДокументДляПечати.Дата, ДЕНЬ) КАК Дата,
	|	%Организация%								КАК Организация,
	|	%ИмяРеквизита% 								КАК ВыбранноеОтветственноеЛицо,
	|	ЗНАЧЕНИЕ(%ОтветственноеЛицо%) 				КАК ОтветственноеЛицо
	|%СозданиеВременнойТаблицы%
	|ИЗ
	|	Документ." + МетаданныеДокумента.Имя + " КАК ДокументДляПечати
	|ГДЕ
	|	ДокументДляПечати.Ссылка В(&МассивОбъектов)";
	
	Индекс = 0;
	Для Каждого КлючИЗначение Из РеквизитыОтветственныеЛица Цикл
		
		Индекс 		 = Индекс + 1;
		ТекстЗапроса = ШаблонЗапроса;
		
		Если Индекс > 1 Тогда
			ТекстЗапроса = "
			|ОБЪЕДИНИТЬ ВСЕ
			|" + ТекстЗапроса;
		КонецЕсли;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса , "%Организация%", 			 	ИмяРеквизитаОрганизация);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса , "%ИмяРеквизита%", 			
			?(ИменаПолейПереданыВПараметрах, 
				"ЗНАЧЕНИЕ(Справочник.ОтветственныеЛицаОрганизаций.ПустаяСсылка)", // будут выбраны значения по умолчанию
				"ДокументДляПечати." + КлючИЗначение.Ключ));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса , "%ОтветственноеЛицо%", 		ПолучитьПолноеИмяПредопределенногоЗначения(КлючИЗначение.Значение));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса , "%СозданиеВременнойТаблицы%", ?(Индекс = 1, "ПОМЕСТИТЬ ВТДанныеДокументов", ""));
		
		Запрос.Текст = Запрос.Текст + ТекстЗапроса;
		
	КонецЦикла;
	
	Запрос.Текст = Запрос.Текст + "
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОтветственноеЛицо,
	|	Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	// Заполним пустые поля ответственных лиц значениями по умолчанию
	Запрос.Текст = Запрос.Текст +
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТДанныеДокументов.Организация КАК Организация,
	|	ВТДанныеДокументов.ОтветственноеЛицо КАК ОтветственноеЛицо,
	|	ВТДанныеДокументов.Дата КАК Дата
	|ПОМЕСТИТЬ ВТНезаполненныеОтветственные
	|ИЗ
	|	ВТДанныеДокументов КАК ВТДанныеДокументов
	|ГДЕ
	|	ВТДанныеДокументов.ВыбранноеОтветственноеЛицо = ЗНАЧЕНИЕ(Справочник.ОтветственныеЛицаОрганизаций.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОтветственноеЛицо,
	|	Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТНезаполненныеОтветственные.Организация КАК Организация,
	|	ВТНезаполненныеОтветственные.ОтветственноеЛицо КАК ОтветственноеЛицо,
	|	ВТНезаполненныеОтветственные.Дата КАК Дата,
	|	ОтветственныеЛицаОрганизаций.Ссылка КАК Ответственный,
	|	ОтветственныеЛицаОрганизаций.ПравоПодписиПоДоверенности КАК ПравоПодписиПоДоверенности
	|ПОМЕСТИТЬ ВТКандидатыВОтветственныеПоУмолчанию
	|ИЗ
	|	ВТНезаполненныеОтветственные КАК ВТНезаполненныеОтветственные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОтветственныеЛицаОрганизаций КАК ОтветственныеЛицаОрганизаций
	|		ПО ВТНезаполненныеОтветственные.Организация = ОтветственныеЛицаОрганизаций.Владелец
	|			И ВТНезаполненныеОтветственные.ОтветственноеЛицо = ОтветственныеЛицаОрганизаций.ОтветственноеЛицо
	|			И ВТНезаполненныеОтветственные.Дата >= ОтветственныеЛицаОрганизаций.ДатаНачала
	|			И (ВТНезаполненныеОтветственные.Дата <= ОтветственныеЛицаОрганизаций.ДатаОкончания
	|				ИЛИ ОтветственныеЛицаОрганизаций.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТКандидатыВОтветственныеПоУмолчанию.Организация КАК Организация,
	|	ВТКандидатыВОтветственныеПоУмолчанию.ОтветственноеЛицо КАК ОтветственноеЛицо,
	|	ВТКандидатыВОтветственныеПоУмолчанию.Дата КАК Дата,
	|	ВТКандидатыВОтветственныеПоУмолчанию.Ответственный КАК ОтветственноеЛицоПоУмолчанию
	|ПОМЕСТИТЬ ВТОтветственныеПоУмолчанию
	|ИЗ
	|	ВТКандидатыВОтветственныеПоУмолчанию КАК ВТКандидатыВОтветственныеПоУмолчанию
	|ГДЕ
	|	НЕ ВТКандидатыВОтветственныеПоУмолчанию.ПравоПодписиПоДоверенности
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВТКандидатыВОтветственныеПоУмолчанию.Организация,
	|	ВТКандидатыВОтветственныеПоУмолчанию.ОтветственноеЛицо,
	|	ВТКандидатыВОтветственныеПоУмолчанию.Дата,
	|	МИНИМУМ(ВТКандидатыВОтветственныеПоУмолчанию.Ответственный)
	|ИЗ
	|	ВТКандидатыВОтветственныеПоУмолчанию КАК ВТКандидатыВОтветственныеПоУмолчанию
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТКандидатыВОтветственныеПоУмолчанию.Организация,
	|	ВТКандидатыВОтветственныеПоУмолчанию.ОтветственноеЛицо,
	|	ВТКандидатыВОтветственныеПоУмолчанию.Дата
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТКандидатыВОтветственныеПоУмолчанию.Ответственный) = 1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОтветственноеЛицо,
	|	Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДанныеДокументов.Ссылка,
	|	ВТДанныеДокументов.Дата,
	|	ВТДанныеДокументов.ОтветственноеЛицо,
	|	ВЫБОР
	|		КОГДА ВТДанныеДокументов.ВыбранноеОтветственноеЛицо = ЗНАЧЕНИЕ(Справочник.ОтветственныеЛицаОрганизаций.ПустаяСсылка)
	|			ТОГДА ЕСТЬNULL(ВТОтветственныеПоУмолчанию.ОтветственноеЛицоПоУмолчанию, ЗНАЧЕНИЕ(Справочник.ОтветственныеЛицаОрганизаций.ПустаяСсылка))
	|		ИНАЧЕ ВТДанныеДокументов.ВыбранноеОтветственноеЛицо
	|	КОНЕЦ КАК ОтветственноеЛицоПоУмолчанию
	|ПОМЕСТИТЬ ВТДокументыСОтветственными
	|ИЗ
	|	ВТДанныеДокументов КАК ВТДанныеДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОтветственныеПоУмолчанию КАК ВТОтветственныеПоУмолчанию
	|		ПО ВТДанныеДокументов.Организация = ВТОтветственныеПоУмолчанию.Организация
	|			И ВТДанныеДокументов.ОтветственноеЛицо = ВТОтветственныеПоУмолчанию.ОтветственноеЛицо
	|			И ВТДанныеДокументов.Дата = ВТОтветственныеПоУмолчанию.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТДокументыСОтветственными.ОтветственноеЛицоПоУмолчанию.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВТДокументыСОтветственными.Ссылка,
	|	МАКСИМУМ(ФИОФизическихЛиц.Период) КАК Период
	|ПОМЕСТИТЬ ВТПериодыФИОФизЛиц
	|ИЗ
	|	ВТДокументыСОтветственными КАК ВТДокументыСОтветственными
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц КАК ФИОФизическихЛиц
	|		ПО ВТДокументыСОтветственными.ОтветственноеЛицоПоУмолчанию.ФизическоеЛицо = ФИОФизическихЛиц.ФизическоеЛицо
	|			И ВТДокументыСОтветственными.Дата >= ФИОФизическихЛиц.Период
	|ГДЕ
	|	ВТДокументыСОтветственными.ОтветственноеЛицоПоУмолчанию.ФизическоеЛицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|	И ВТДокументыСОтветственными.ОтветственноеЛицоПоУмолчанию.ФизическоеЛицо ЕСТЬ НЕ NULL 
	|	И ФИОФизическихЛиц.Период ЕСТЬ НЕ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДокументыСОтветственными.ОтветственноеЛицоПоУмолчанию.ФизическоеЛицо,
	|	ВТДокументыСОтветственными.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТПериодыФИОФизЛиц.ФизическоеЛицо,
	|	ВТПериодыФИОФизЛиц.Ссылка,
	|	ВЫРАЗИТЬ(ФИОФизическихЛиц.Фамилия + ВЫБОР
	|			КОГДА ФИОФизическихЛиц.Имя = """"
	|				ТОГДА """"
	|			ИНАЧЕ "" "" + ФИОФизическихЛиц.Имя
	|		КОНЕЦ + ВЫБОР
	|			КОГДА ФИОФизическихЛиц.Отчество = """"
	|				ТОГДА """"
	|			ИНАЧЕ "" "" + ФИОФизическихЛиц.Отчество
	|		КОНЕЦ КАК СТРОКА(150)) КАК ПолноеФИО,
	|	ВЫРАЗИТЬ(ФИОФизическихЛиц.Фамилия + ВЫБОР
	|			КОГДА ФИОФизическихЛиц.Имя = """"
	|				ТОГДА """"
	|			ИНАЧЕ "" "" + ПОДСТРОКА(ФИОФизическихЛиц.Имя, 1, 1) + "".""
	|		КОНЕЦ + ВЫБОР
	|			КОГДА ФИОФизическихЛиц.Отчество = """"
	|				ТОГДА """"
	|			ИНАЧЕ "" "" + ПОДСТРОКА(ФИОФизическихЛиц.Отчество, 1, 1) + "".""
	|		КОНЕЦ КАК СТРОКА(50)) КАК ФИО
	|ПОМЕСТИТЬ ВТФИОФизЛиц
	|ИЗ
	|	ВТПериодыФИОФизЛиц КАК ВТПериодыФИОФизЛиц
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизическихЛиц КАК ФИОФизическихЛиц
	|		ПО ВТПериодыФИОФизЛиц.ФизическоеЛицо = ФИОФизическихЛиц.ФизическоеЛицо
	|			И ВТПериодыФИОФизЛиц.Период = ФИОФизическихЛиц.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДокументыСОтветственными.Ссылка,
	|	ВТДокументыСОтветственными.ОтветственноеЛицо,
	|	ВТДокументыСОтветственными.ОтветственноеЛицоПоУмолчанию,
	|	ЕСТЬNULL(ВТФИОФизЛиц.ПолноеФИО, """") КАК ПолноеФИО,
	|	ЕСТЬNULL(ВТФИОФизЛиц.ФИО, """") КАК ФИО
	|ПОМЕСТИТЬ ВТДокументыСФИООтветственных
	|ИЗ
	|	ВТДокументыСОтветственными КАК ВТДокументыСОтветственными
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИОФизЛиц КАК ВТФИОФизЛиц
	|		ПО ВТДокументыСОтветственными.ОтветственноеЛицоПоУмолчанию.ФизическоеЛицо = ВТФИОФизЛиц.ФизическоеЛицо
	|			И ВТДокументыСОтветственными.Ссылка = ВТФИОФизЛиц.Ссылка";
	
	Запрос.Текст = Запрос.Текст + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	// Свернем результат - поместим всех ответственных в одну запись выборки запроса
	ШаблонЗапроса = "
	|ВЫБРАТЬ
	|	ВТДокументыСФИООтветственных.Ссылка%СтрокаВыборкаЗапроса%
	|ПОМЕСТИТЬ ВТДокументыСФИООтветственныхСвернутая
	|ИЗ
	|(%ВложенныйЗапрос%) КАК ВТДокументыСФИООтветственных
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТДокументыСФИООтветственных.Ссылка
	|";
	
	ШаблонВложенногоЗапроса = "
	|ВЫБРАТЬ
	|	ВТДокументыСФИООтветственных.Ссылка%СтрокаВыборкаВложенногоЗапроса%
	|ИЗ
	|	ВТДокументыСФИООтветственных КАК ВТДокументыСФИООтветственных
	|ГДЕ
	|	ВТДокументыСФИООтветственных.ОтветственноеЛицо = ЗНАЧЕНИЕ(%ОтветственноеЛицо%)
	|";
	
	Индекс = 0;
	СтрокаВыборкаЗапроса = "";
	ТекстВложенногоЗапроса = "";
	
	Для Каждого КлючИЗначение Из РеквизитыОтветственныеЛица Цикл
		
		Индекс = Индекс + 1;
		
		СтрокаВыборкаВложенногоЗапроса = "";
		Для Каждого КлючИЗначение2 Из РеквизитыОтветственныеЛица Цикл
			
			Если КлючИЗначение.Ключ = КлючИЗначение2.Ключ Тогда
				СтрокаВыборкаВложенногоЗапроса = СтрокаВыборкаВложенногоЗапроса + ",
				|	ВТДокументыСФИООтветственных.ОтветственноеЛицоПоУмолчанию КАК " + КлючИЗначение2.Ключ + ",
				|	ВТДокументыСФИООтветственных.ПолноеФИО КАК " + КлючИЗначение2.Ключ + "ПолноеФИО,
				|	ВТДокументыСФИООтветственных.ФИО КАК " + КлючИЗначение2.Ключ + "ФИО";
			Иначе
				СтрокаВыборкаВложенногоЗапроса = СтрокаВыборкаВложенногоЗапроса + ",
				|	ЗНАЧЕНИЕ(Справочник.ОтветственныеЛицаОрганизаций.ПустаяСсылка) КАК " + КлючИЗначение2.Ключ + ",
				|	"""" КАК " + КлючИЗначение2.Ключ + "ПолноеФИО,
				|	"""" КАК " + КлючИЗначение2.Ключ + "ФИО";
			КонецЕсли;
			
		КонецЦикла;
		
		Если Индекс > 1 Тогда
			ТекстВложенногоЗапроса = ТекстВложенногоЗапроса + "
			|ОБЪЕДИНИТЬ ВСЕ
			|";
		КонецЕсли;
		ТекстВложенногоЗапроса = ТекстВложенногоЗапроса + ШаблонВложенногоЗапроса;
		
		ТекстВложенногоЗапроса = СтрЗаменить(ТекстВложенногоЗапроса , "%СтрокаВыборкаВложенногоЗапроса%", СтрокаВыборкаВложенногоЗапроса);
		ТекстВложенногоЗапроса = СтрЗаменить(ТекстВложенногоЗапроса , "%ОтветственноеЛицо%", 			  ПолучитьПолноеИмяПредопределенногоЗначения(КлючИЗначение.Значение));
		
		СтрокаВыборкаЗапроса = СтрокаВыборкаЗапроса + ",
		|	МАКСИМУМ(ВТДокументыСФИООтветственных." + КлючИЗначение.Ключ + ") КАК " + КлючИЗначение.Ключ + ",
		|	МАКСИМУМ(ВТДокументыСФИООтветственных." + КлючИЗначение.Ключ + "ПолноеФИО) КАК " + КлючИЗначение.Ключ + "ПолноеФИО,
		|	МАКСИМУМ(ВТДокументыСФИООтветственных." + КлючИЗначение.Ключ + "ФИО) КАК " + КлючИЗначение.Ключ + "ФИО";

	КонецЦикла;
	
	ТекстЗапроса = СтрЗаменить(ШаблонЗапроса , "%СтрокаВыборкаЗапроса%", СтрокаВыборкаЗапроса);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса ,  "%ВложенныйЗапрос%", 	 ТекстВложенногоЗапроса);
	
	Запрос.Текст = Запрос.Текст + ТекстЗапроса;
	
	// Расшифруем данные - выберем нужные реквизиты ответственных лиц в отдельные поля
	ШаблонЗапроса = "
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСвернутая.Ссылка КАК Ссылка%СтрокаВыборка%
	|ПОМЕСТИТЬ %ИмяТаблицыОтветственныеЛица%
	|ИЗ
	|	ВТДокументыСФИООтветственныхСвернутая КАК ВТСвернутая
	|";
	
	ШаблонСтрокиВыборки = ",
	|	ВТСвернутая.%Реквизит% КАК %Реквизит%,
	|	ЕСТЬNULL(ВТСвернутая.%Реквизит%.ФизическоеЛицо, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК %Реквизит%ФизическоеЛицо,
	|	ВТСвернутая.%Реквизит%ФИО КАК %Реквизит%Наименование,
	|	ВТСвернутая.%Реквизит%ПолноеФИО КАК %Реквизит%ПолноеФИО,	
	|	ЕСТЬNULL(ВТСвернутая.%Реквизит%.Должность, """") КАК %Реквизит%Должность,
	|	ЕСТЬNULL(ВТСвернутая.%Реквизит%.ОснованиеПраваПодписи, """") КАК %Реквизит%ОснованиеПраваПодписи";

	СтрокаВыборка = "";
	Для Каждого КлючИЗначение Из РеквизитыОтветственныеЛица Цикл
		СтрокаВыборка = СтрокаВыборка + СтрЗаменить(ШаблонСтрокиВыборки , "%Реквизит%", КлючИЗначение.Ключ);
	КонецЦикла;
	
	ТекстЗапроса = СтрЗаменить(ШаблонЗапроса , "%СтрокаВыборка%", СтрокаВыборка);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса , "%ИмяТаблицыОтветственныеЛица%", ИмяТаблицыОтветственныеЛица);
	
	// Удалим ненужные временные таблицы
	Запрос.Текст = Запрос.Текст + ТекстЗапроса + "
	|;
	|УНИЧТОЖИТЬ ВТДанныеДокументов
	|;
	|УНИЧТОЖИТЬ ВТНезаполненныеОтветственные
	|;
	|УНИЧТОЖИТЬ ВТОтветственныеПоУмолчанию
	|;
	|УНИЧТОЖИТЬ ВТКандидатыВОтветственныеПоУмолчанию
	|;
	|УНИЧТОЖИТЬ ВТДокументыСОтветственными
	|;
	|УНИЧТОЖИТЬ ВТПериодыФИОФизЛиц
	|;
	|УНИЧТОЖИТЬ ВТФИОФизЛиц
	|;
	|УНИЧТОЖИТЬ ВТДокументыСФИООтветственных
	|;
	|УНИЧТОЖИТЬ ВТДокументыСФИООтветственныхСвернутая
	|";
	
	Запрос.Выполнить();
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиСобытий

// Обработчик события "ПриИзменении" ключевых реквизитов документа (Дата, Организация).
// Проверяет соответствие ответственных лиц документа и ключевых реквизитов.
//
// Параметры:
//	РеквизитыДокумента - ДанныеФормыСтруктура - свойство "Объект" формы документа
//
Процедура ПриИзмененииСвязанныхРеквизитовДокумента(Объект) Экспорт
	
	ЗаполнитьОтветственныхЛицДокумента(Объект,, Истина);
	
КонецПроцедуры


// Обработчик подписки на событие ОтветственныеЛицаДокументаОбработкаЗаполнения.
// Заполняет реквизиты ответственных лиц документа значениями по умолчанию.
//
Процедура ОтветственныеЛицаДокументаОбработкаЗаполнения(Источник, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	Если НЕ ОтветственныеЛицаПовтИсп.ЕстьРеквизитыОтветственныхЛицДокумента(Источник.Метаданные().Имя) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьОтветственныхЛицДокумента(Источник, ДанныеЗаполнения);
	
КонецПроцедуры

// Обработчик подписки на событие ОтветственныеЛицаДокументаПриКопировании.
// Заполняет реквизиты ответственных лиц документа значениями по умолчанию.
//
Процедура ОтветственныеЛицаДокументаПриКопировании(Источник, ОбъектКопирования) Экспорт
	
	Если НЕ ОтветственныеЛицаПовтИсп.ЕстьРеквизитыОтветственныхЛицДокумента(Источник.Метаданные().Имя) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьОтветственныхЛицДокумента(Источник, ОбъектКопирования);
	
КонецПроцедуры

// Обработчик подписки на событие ОтветственныеЛицаДокументаОбработкаПроверкиЗаполнения.
// Проверяет корректность заполнения реквизитов ответственных лиц документа.
//
Процедура ОтветственныеЛицаДокументаОбработкаПроверкиЗаполнения(Источник, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	Если НЕ ОтветственныеЛицаПовтИсп.ЕстьРеквизитыОтветственныхЛицДокумента(Источник.Метаданные().Имя) Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДанныхОтветственныхЛиц = СтруктураДанныхОтветственныхЛицДокумента(Источник);
	
	РеквизитыОтветственныеЛица = СтруктураДанныхОтветственныхЛиц.РеквизитыОтветственныеЛица;
	
	Для Каждого КлючИЗначение Из РеквизитыОтветственныеЛица Цикл
		
		ЗначениеОтветственногоЛица = СтруктураДанныхОтветственныхЛиц[КлючИЗначение.Ключ];
		Если ЗначениеЗаполнено(ЗначениеОтветственногоЛица) Тогда
			
			РеквизитыДляПроверки =
				Новый Структура(
					"Дата, Организация, ОтветственноеЛицо",
					СтруктураДанныхОтветственныхЛиц.Дата, СтруктураДанныхОтветственныхЛиц.Организация, КлючИЗначение.Значение);
			
			// Если реквизит заполнен некорректно - сообщим пользователю и установим параметр Отказ = Истина
			Если НЕ ПроверитьСоответствиеРеквизитовИОтветственногоЛица(РеквизитыДляПроверки, ЗначениеОтветственногоЛица) Тогда
				
				ПредставлениеРеквизита = Источник.Метаданные().Реквизиты.Найти(КлючИЗначение.Ключ).Синоним;
				
				СообщениеОбОшибке = НСтр("ru='Ответственное лицо ""%ПредставлениеРеквизита%"" не имеет права подписи этого документа.';uk='Відповідальна особа ""%ПредставлениеРеквизита%"" не має права підпису цього документа.'");
				СообщениеОбОшибке = СтрЗаменить(СообщениеОбОшибке, "%ПредставлениеРеквизита%", ПредставлениеРеквизита); 

				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СообщениеОбОшибке,
					,
					"Объект." + КлючИЗначение.Ключ,
					,
					Отказ);
				
			КонецЕсли;
				
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеСлужебныеПроцедуры

// Формирует структуру, содержащую информацию об ответственных лицах документа
//	
//	Параметры:
//		Объект - ДокументОбъект, ДаныеФормыСтруктура - объект, для которого нужно получить данные
//	Возвращаемое значение:
//		Структура:
//			РеквизитыОтветственныеЛица - структура - ключ - имя ревизита документа, хранящего информацию об ответственном лице
//													- значение - ПеречислениеСсылка.ОтветственныеЛицаОрганизаций - "вид" ответственного лица
//			Ссылка - ДокументСсылка
//			Дата   - Дата - дата документа
//          Организация - СправочникСсылка.Организации - организация, для которой нужно получаять ответственых лиц
//          <ИмяРеквизитаОтветственногоЛица> - СправочникСсылка.ОтветственныеЛицаОрганизаций - текущие ответственные лица, указанные в документе
//			
Функция СтруктураДанныхОтветственныхЛицДокумента(Объект)
	
	СтруктураДанных = Новый Структура("Ссылка, Дата, Организация");
	СтруктураДанных.Вставить(
		"РеквизитыОтветственныеЛица",
		ОтветственныеЛицаПовтИсп.РеквизитыОтветственныхЛицДокумента(Объект.Ссылка.Метаданные().Имя));
	
	Для Каждого ЭлементСтруктуры Из СтруктураДанных.РеквизитыОтветственныеЛица Цикл
		СтруктураДанных.Вставить(ЭлементСтруктуры.Ключ);
	КонецЦикла;
	
	ЗаполнитьЗначенияСвойств(СтруктураДанных, Объект);
	
	Возврат СтруктураДанных;
	
КонецФункции

// Проверяет соответствие ответственного лица и ключевых реквизитов документа.
//
// Параметры:
//	РеквизитыДляПроверки - Структура - структура реквизитов документа с ключами
//		- Дата
//		- Организация
//		- ОтветственноеЛицо - "вид" ответственного лица
//		- ПометкаУдаления - необязательный, проверять пометку удаления ответственного лица
//	ОтветственноеЛицоДляПроверки - СправочникСсылка.ОтветственныеЛицаОрганизаций - ответственное лицо
//
// Возвращаемое значение:
//	Булево - результат проверки
//
Функция ПроверитьСоответствиеРеквизитовИОтветственногоЛица(РеквизитыДляПроверки, ОтветственноеЛицоДляПроверки)
	
	Если НЕ ЗначениеЗаполнено(ОтветственноеЛицоДляПроверки) Тогда
		Возврат Истина;
	КонецЕсли;
	
	РеквизитыОтветственногоЛица =
		ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			ОтветственноеЛицоДляПроверки,
			"Владелец, ОтветственноеЛицо, ДатаНачала, ДатаОкончания, ПометкаУдаления");
	
	Дата = НачалоДня(РеквизитыДляПроверки.Дата);
	
	Если РеквизитыОтветственногоЛица.Владелец <> РеквизитыДляПроверки.Организация
	 Или РеквизитыОтветственногоЛица.ОтветственноеЛицо <> РеквизитыДляПроверки.ОтветственноеЛицо
	 Или РеквизитыОтветственногоЛица.ДатаНачала > Дата
	 Или (ЗначениеЗаполнено(РеквизитыОтветственногоЛица.ДатаОкончания) И РеквизитыОтветственногоЛица.ДатаОкончания < Дата)
	 Или (РеквизитыДляПроверки.Свойство("ПометкаУдаления")
	 		И РеквизитыОтветственногоЛица.ПометкаУдаления <> РеквизитыДляПроверки.ПометкаУдаления) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// Проверяет соответствие значений реквизитов ответственных лиц документа и ключевых реквизитов документа.
// Если значения не соответствуют то процедура подбирает подходящее значение для ответственного лица.
// Параметры:
// 	РеквизитыДокумента - ДокументОбъект, Структура - данные документа
//		- ключевые реквизиты (Дата, Организация, Ссылка)
//		- реквизиты ответственных лиц
//
// Возвращаемое значение:
//  Структура - структура измененных реквизитов ответственных лиц документа
//		Ключ 	 - имя измененного реквизита документа
//		Значение - новое значение реквизита
//
Функция СкорректироватьОтветственныхЛицДокумента(СтруктураДанныхОтветственныхЛиц)
	
	ИзмененныеРеквизиты = Новый Структура;
	
	РеквизитыОтветственныеЛица = СтруктураДанныхОтветственныхЛиц.РеквизитыОтветственныеЛица;
	Дата = ?(ЗначениеЗаполнено(СтруктураДанныхОтветственныхЛиц.Дата), СтруктураДанныхОтветственныхЛиц.Дата, ТекущаяДатаСеанса());
	
	ТаблицаОтветственных = ПолучитьТаблицуОтветственныхЛицПоОтбору(
		Новый Структура("Дата, Организация", Дата, СтруктураДанныхОтветственныхЛиц.Организация));
	
	Для Каждого КлючИЗначение Из РеквизитыОтветственныеЛица Цикл
		
		ЗначениеОтветственногоЛица = СтруктураДанныхОтветственныхЛиц[КлючИЗначение.Ключ];
		РеквизитыДляПроверки = 
			Новый Структура(
				"Дата, Организация, ОтветственноеЛицо, ПометкаУдаления",
				Дата, СтруктураДанныхОтветственныхЛиц.Организация, КлючИЗначение.Значение, Ложь);
		
		// Если выбрано неподходящее ответственное лицо, то очистим его
		Если ЗначениеЗаполнено(ЗначениеОтветственногоЛица)
		 И Не ПроверитьСоответствиеРеквизитовИОтветственногоЛица(РеквизитыДляПроверки, ЗначениеОтветственногоЛица) Тогда
			ЗначениеОтветственногоЛица = Справочники.ОтветственныеЛицаОрганизаций.ПустаяСсылка();
		КонецЕсли;
		
		// Если ответственное лицо не выбрано, то попытаемся подобрать его
		Если Не ЗначениеЗаполнено(ЗначениеОтветственногоЛица) Тогда
			СтрокиТаблицы = ТаблицаОтветственных.НайтиСтроки(Новый Структура("ОтветственноеЛицо", КлючИЗначение.Значение));
			Если СтрокиТаблицы.Количество() = 1 Тогда
				ЗначениеОтветственногоЛица = СтрокиТаблицы[0].Ссылка; // можно однозначно определить ответственного
			КонецЕсли;
		КонецЕсли;
		
		// Запомним изменение реквизита
		Если СтруктураДанныхОтветственныхЛиц[КлючИЗначение.Ключ] <> ЗначениеОтветственногоЛица Тогда
			ИзмененныеРеквизиты.Вставить(КлючИЗначение.Ключ, ЗначениеОтветственногоЛица);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ИзмененныеРеквизиты;
	
КонецФункции

// Заполняет значения ответственных лиц документа значениями по умолчанию.
//
// Параметры:
//	Объект - ДокументОбъект - документ, реквизиты которого необходимо заполнить.
//	ДанныеЗаполнения - Произвольный - объект, содержащий данные для заполнения документа.
//	ПерезаполнятьНепустыеРеквизиты - Булево - необходимость перезаполнения реквизитов даже тогда, когда онии уже содержат значения.
//
Процедура ЗаполнитьОтветственныхЛицДокумента(Объект, ДанныеЗаполнения = Неопределено, ПерезаполнятьНепустыеРеквизиты = Ложь)
	
	СтруктураДанныхОтветственныхЛиц = СтруктураДанныхОтветственныхЛицДокумента(Объект);
	
	// Заполним пустые реквизиты непустыми значениями из данных для заполнения, при этом
	// - не заполняем системные реквизиты
	// - не берем дату (в случае копирования документа или ввода на основании)
	Если ДанныеЗаполнения <> Неопределено Тогда
		
		Для Каждого КлючИЗначение Из СтруктураДанныхОтветственныхЛиц Цикл
			
			Если КлючИЗначение.Ключ = "РеквизитыОтветственныеЛица"
			 ИЛИ КлючИЗначение.Ключ = "Ссылка"
			 ИЛИ (КлючИЗначение.Ключ = "Дата" И ТипЗнч(ДанныеЗаполнения) <> Тип("Структура"))
			 ИЛИ ЗначениеЗаполнено(КлючИЗначение.Значение) Тогда
				Продолжить;
			КонецЕсли;
			
			ЗаполняемыйРеквизит = Новый Структура(КлючИЗначение.Ключ);
			ЗаполнитьЗначенияСвойств(ЗаполняемыйРеквизит, ДанныеЗаполнения);
			Если ЗначениеЗаполнено(ЗаполняемыйРеквизит[КлючИЗначение.Ключ]) Тогда
				ЗаполнитьЗначенияСвойств(СтруктураДанныхОтветственныхЛиц, ЗаполняемыйРеквизит);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Получим значения реквизитов ответственных лиц по статистике
	РеквизитыДляОтбора   = Новый Структура("Организация", СтруктураДанныхОтветственныхЛиц.Организация);
	ЗаполняемыеРеквизиты = Новый Структура;
	
	ОбщегоНазначенияУТКлиентСервер.ДополнитьСтруктуру(
		ЗаполняемыеРеквизиты,
		СтруктураДанныхОтветственныхЛиц.РеквизитыОтветственныеЛица,
		Ложь);
	
	ЗаполнениеСвойствПоСтатистикеСервер.ПолучитьЗначенияСвойств(
		СтруктураДанныхОтветственныхЛиц.Ссылка,
		ЗаполняемыеРеквизиты,
		РеквизитыДляОтбора);
	
	Для Каждого КлючИЗначение Из СтруктураДанныхОтветственныхЛиц.РеквизитыОтветственныеЛица Цикл
		Если (ПерезаполнятьНепустыеРеквизиты ИЛИ НЕ ЗначениеЗаполнено(СтруктураДанныхОтветственныхЛиц[КлючИЗначение.Ключ]))
		 И ЗначениеЗаполнено(ЗаполняемыеРеквизиты[КлючИЗначение.Ключ]) Тогда
			СтруктураДанныхОтветственныхЛиц[КлючИЗначение.Ключ] = ЗаполняемыеРеквизиты[КлючИЗначение.Ключ];
		КонецЕсли;
	КонецЦикла;
	
	// Проверим соответстие ответственных лиц дате и организации документа.
	// Если не соответствует - заполним ответственными лицами по умолчанию.
	ИзмененныеРеквизиты = СкорректироватьОтветственныхЛицДокумента(СтруктураДанныхОтветственныхЛиц);
	ЗаполнитьЗначенияСвойств(СтруктураДанныхОтветственныхЛиц, ИзмененныеРеквизиты);
	
	// Перенесем реквизиты в объект
	ЗаполнитьЗначенияСвойств(Объект, СтруктураДанныхОтветственныхЛиц, , "Ссылка, Дата");
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
