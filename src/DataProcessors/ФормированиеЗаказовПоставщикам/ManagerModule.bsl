#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет коллекцию данными о состоянии запасов
//
// Параметры:
//  Объект - ОбработкаОбъект.ФормированиеЗаказовПоПотребностямУпрощенное - обработка,
//           в которую необходимо поместить данные о состоянии запасов.
//  Параметры - Структура - Струкутра содержащая параметры расчета:
//   ЗаСчетЗапасов - Булево - Признак необходимости использования в расчете всего остатка товара взамен свободного остатка.
//
Процедура ЗаполнитьПоСостояниюЗапасов(Объект, Параметры) Экспорт

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	УстановитьПараметрыРасчетаСтатистики(Запрос, Объект.ПериодПродаж);

	ПолучитьДанныеОЗапасах(Объект.Запасы, ВременнаяТаблицаТовары("Склад"), Запрос, Параметры);

КонецПроцедуры

// Заполняет коллекцию данными о продажах
//
// Параметры:
//  Объект - ОбработкаОбъект.ФормированиеЗаказовПоПотребностямУпрощенное - обработка,
//           в которую необходимо поместить данные о продажах,
//  Параметры - Структура - Струкутра содержащая параметры расчета:
//   ЗаСчетЗапасов - Булево - Признак необходимости использования в расчете всего остатка товара взамен свободного остатка.
//
Процедура ОбновитьДанныеОПродажах(Объект, Параметры) Экспорт

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТаблицаЗначений", Объект.Запасы.Выгрузить(, "Номенклатура, Характеристика, Склад"));
	УстановитьПараметрыРасчетаСтатистики(Запрос, Объект.ПериодПродаж);

	ПолучитьДанныеОЗапасах(Объект.Запасы, ВременнаяТаблицаТовары("ТаблицаЗначений"), Запрос, Параметры);

КонецПроцедуры

// Добавляет товары для поддержания запасов
//
// Параметры:
//  Объект - ОбработкаОбъект.ФормированиеЗаказовПоПотребностямУпрощенное - обработка,
//           в которую необходимо добавить товары,
//  Таблица - ТаблицаЗначений - Таблица, содержащая товары для добавления,
//  Параметры - Структура - Струкутра содержащая параметры расчета:
//   ЗаСчетЗапасов - Булево - Признак необходимости использования в расчете всего остатка товара взамен свободного остатка.
//
Процедура ДобавитьТоварыВТаблицуЗапасы(Объект, Таблица, Параметры, УровеньЗапаса, ОбеспечиватьЗаказы) Экспорт

	ЕстьКолонкаЗапас = Таблица.Колонки.Найти("МаксимальныйОстаток") <> Неопределено;
	Если ЕстьКолонкаЗапас Тогда // добавляемая таблица содержит значения параметров поддержания запаса

		ЗаписатьПараметрыПоддержанияЗапаса(Таблица);

	КонецЕсли;

	ПоляКлюча = "Номенклатура,Характеристика,Склад";
	Таблица.Сортировать(ПоляКлюча, Новый СравнениеЗначений);

	ТаблицаЗапасы = Объект.Запасы.Выгрузить();
	ТаблицаЗапасы.Колонки.Добавить("ИсходныйИндекс", ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(10, 0));

	ВсегоСтрок = ТаблицаЗапасы.Количество();
	Для Индекс = 0 По ВсегоСтрок - 1 Цикл
		ТаблицаЗапасы[Индекс].ИсходныйИндекс = Индекс;
	КонецЦикла;

	ТаблицаЗапасы.Сортировать(ПоляКлюча, Новый СравнениеЗначений);

	ПараметрыОбъединения = ОбеспечениеКлиентСервер.ПараметрыОбъединенияТаблиц();
	ПараметрыОбъединения.ДобавлятьСтроки = Истина;
	ОбеспечениеСервер.ОбновитьКоллекциюДаннымиИзТаблицы(ТаблицаЗапасы, Таблица, ПоляКлюча, ПараметрыОбъединения);

	Для Каждого Строка Из ПараметрыОбъединения.ИзмененныеСтроки Цикл

		Если ЕстьКолонкаЗапас Тогда
			ЗаполнитьЗначенияСвойств(Объект.Запасы[Строка.ИсходныйИндекс], Строка, "МинимальныйОстаток, МаксимальныйОстаток");
		КонецЕсли;

	КонецЦикла;

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТаблицаЗначений", ПараметрыОбъединения.НовыеСтроки);
	УстановитьПараметрыРасчетаСтатистики(Запрос, Объект.ПериодПродаж);

	ПолучитьДанныеОЗапасах(ПараметрыОбъединения.НовыеСтроки, ВременнаяТаблицаТовары("ТаблицаЗначений"), Запрос, Параметры);

	Для каждого Строка Из ПараметрыОбъединения.НовыеСтроки цикл

		НоваяСтрока = Объект.Запасы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);

		Строка.НеУдовлетворяетОтбору = НеУдовлетворяетОтбору(Строка, УровеньЗапаса, ОбеспечиватьЗаказы);

		ОбновитьИтогиВСтроке(НоваяСтрока);

	КонецЦикла;

	Если ПараметрыОбъединения.ИзмененныеСтроки.Количество() > 0 И ЕстьКолонкаЗапас
		Или ПараметрыОбъединения.НовыеСтроки.Количество() > 0 Тогда

			Параметры.МодифицированаТаблицаЗапасы = Истина;

	КонецЕсли;

КонецПроцедуры

// Обновляет данные в регистре "Товарные ограничения" по данным таблицы.
//
// Параметры:
//  Таблица - ТаблицаЗначений - Содержит новые параметры поддержания запасов товаров, таблица с полями:
//   Номенклатура   - СправочникСсылка.Номенклатура - Поле ключа товара,
//   Характеристика - СправочникСсылка.Номенклатура - Поле ключа товара,
//   Склад          - СправочникСсылка.Номенклатура - Поле ключа товара,
//   МинимальныйОстаток  - Число - Значение минимального запаса,
//   МаксимальныйОстаток - Число - Значение максимального запаса.
//
Процедура ЗаписатьПараметрыПоддержанияЗапаса(Таблица) Экспорт

	Запрос = новый Запрос();
	Запрос.УстановитьПараметр("ТаблицаЗначений", Таблица);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.Номенклатура      КАК Номенклатура,
	|	Т.Характеристика    КАК Характеристика,
	|	Т.Склад             КАК Склад,
	|
	|	Т.МинимальныйОстаток  КАК МинимальныйОстаток,
	|	Т.МаксимальныйОстаток КАК МаксимальныйОстаток
	|
	|ПОМЕСТИТЬ ВтНовыеПараметры
	|ИЗ
	|	&ТаблицаЗначений КАК Т
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура, Характеристика
	|;
	|
	|/////////////////////////////////
	|ВЫБРАТЬ
	|	НовыеПараметры.Номенклатура      КАК Номенклатура,
	|	НовыеПараметры.Характеристика    КАК Характеристика,
	|	НовыеПараметры.Склад             КАК Склад,
	|
	|	ЗНАЧЕНИЕ(Перечисление.МетодыОбеспеченияПотребностей.ПоддержаниеЗапасаМинМакс) КАК МетодОбеспеченияПотребностей,
	|	НовыеПараметры.МинимальныйОстаток  КАК МинимальноеКоличествоЗапаса,
	|	НовыеПараметры.МаксимальныйОстаток КАК МаксимальноеКоличествоЗапаса
	|
	|ИЗ
	|	ВтНовыеПараметры КАК НовыеПараметры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграничения КАК ТоварныеОграничения
	|		ПО &ПодстановкаТоварногоОграничения
	|ГДЕ
	|	ТоварныеОграничения.Номенклатура ЕСТЬ NULL
	|	ИЛИ ТоварныеОграничения.МетодОбеспеченияПотребностей <> ЗНАЧЕНИЕ(Перечисление.МетодыОбеспеченияПотребностей.ПоддержаниеЗапасаМинМакс)
	|	ИЛИ НовыеПараметры.МинимальныйОстаток <> ТоварныеОграничения.МинимальноеКоличествоЗапаса
	|	ИЛИ НовыеПараметры.МаксимальныйОстаток <> ТоварныеОграничения.МаксимальноеКоличествоЗапаса
	|	ИЛИ НовыеПараметры.МаксимальныйОстаток = 0 И НЕ ТоварныеОграничения.Номенклатура ЕСТЬ NULL";

	Поля = "НовыеПараметры.Номенклатура,НовыеПараметры.Характеристика,НовыеПараметры.Склад";
	Запрос.Текст = РегистрыСведений.ТоварныеОграничения.ПодставитьСоединение(Запрос.Текст, "ПодстановкаТоварногоОграничения", Поля);
	
	НачатьТранзакцию();

	Попытка

		Блокировка = Новый БлокировкаДанных();
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ТоварныеОграничения");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = Таблица;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура",   "Номенклатура");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад",          "Склад");
		Блокировка.Заблокировать();

		УстановитьПривилегированныйРежим(Истина);
		ТаблицаНовыеПараметры = Запрос.Выполнить().Выгрузить();

		Набор = РегистрыСведений.ТоварныеОграничения.СоздатьНаборЗаписей();
		Набор.Отбор.Номенклатура.Использование = Истина;
		Набор.Отбор.Характеристика.Использование = Истина;
		Набор.Отбор.Склад.Использование = Истина;

		Для Каждого Строка Из ТаблицаНовыеПараметры Цикл

			Набор.Отбор.Характеристика.Значение = Строка.Характеристика;
			Набор.Отбор.Номенклатура.Значение   = Строка.Номенклатура;
			Набор.Отбор.Склад.Значение          = Строка.Склад;
			Набор.Очистить();

			Если Строка.МаксимальноеКоличествоЗапаса > 0 Тогда
				НоваяСтрока = Набор.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			КонецЕсли;

			Набор.Записать(Истина);

		КонецЦикла;

		ЗафиксироватьТранзакцию();

	Исключение
		ОтменитьТранзакцию();
	КонецПопытки;

КонецПроцедуры

// Рассчитывает количество к заказу для поддержания запаса
//
// Параметры:
//  Состояние - ДанныеФормыЭлементКоллекции, Струкутра - содержит необходимые для расчета данные о состоянии запасов.
//  ЗаСчетЗапасов - Булево - Признак, определяющий использовать в расчете данные о свободных остатках склада и
//                           заказов к поступлению, либо всех остатков и заказов к поступлению.
//
// Возвращаемое значение:
//  Структура - Cтруктура с полями:
//   ТочкаЗаказаДостигнута - Булево - Признак, истина если остаток меньше либо равен минимальному запасу,
//   КЗаказу - Число - Рассчитанное количество к заказу до максимума,
//   Отметка - Булево - Признак рекомендации к заказу данной товарной позиции.
//
Функция КЗаказуДляПоддержанияЗапаса(Состояние, ЗаСчетЗапасов) Экспорт

	Остаток = ?(ЗаСчетЗапасов, Состояние.Остаток, Состояние.СвободныйОстаток);
	ЗаказыКПоступлению = ?(ЗаСчетЗапасов, Состояние.ЗаказыКПоступлению, Состояние.ЗаказыКПоступлениюСвободные);
	ТочкаЗаказаДостигнута = Остаток - Состояние.МинимальныйОстаток <= 0;
	Если Не ТочкаЗаказаДостигнута Тогда
		КЗаказу = Макс(0, Состояние.МаксимальныйОстаток - (Остаток - Состояние.МинимальныйОстаток) - ЗаказыКПоступлению);
	Иначе
		КЗаказу = Состояние.МаксимальныйОстаток - ЗаказыКПоступлению;
	КонецЕсли;

	Если Состояние.ЕдиницаИзмеренияШтучная Тогда
		КЗаказу = Цел(КЗаказу) + ?(Цел(КЗаказу) < КЗаказу, 1, 0);
	КонецЕсли;

	Возврат Новый Структура("ТочкаЗаказаДостигнута, КЗаказу, Отметка",
		ТочкаЗаказаДостигнута, КЗаказу, ТочкаЗаказаДостигнута И КЗаказу > 0);

КонецФункции

// Рассчитывает значения служебных реквизитов для отображения итогов в форме
//
// Параметры:
//  Строка - ДанныеФормыЭлементКоллекции, Струкутра - содержит необходимые для расчета данные строки.
//
// Возвращаемое значение:
//  Структура - Cтруктура с полями: ВесИтог, Сумма, СуммаИтог
//
Функция СлужебныеРеквизиты(Строка) Экспорт

	Результат = Новый Структура();
	Результат.Вставить("ВесИтог",   ?(Строка.Отметка, Строка.Вес  * Строка.КЗаказу, 0));
	Результат.Вставить("ОбъемИтог", ?(Строка.Отметка, Строка.КЗаказу * Строка.Объем, 0));
	Результат.Вставить("Сумма",     Строка.Цена * Строка.КЗаказу);
	Результат.Вставить("СуммаИтог", ?(Строка.Отметка, Результат.Сумма, 0));

	Возврат Результат;

КонецФункции

//По данным строки таблицы "Запасы" рассчитывает, удовлетворяет ли строка отбору остатка.
//
//Параметры:
// Строка - ДанныеФормыЭлементКоллекции - Строка для которой необходимо определить признак удовлетворения отбору.
// УровеньЗапаса - Строка - Условное обозначение элемента отбора по уровню запаса.
// ОбеспечиватьЗаказы - Строка - определяет способ учета остатков.
//
//Возвращаемое значение:
// Булево - Признак, ложь, если строка удовлетворят отбору, истина, если не удовлетворяет.
//
Функция НеУдовлетворяетОтбору(Строка, УровеньЗапаса, ОбеспечиватьЗаказы) Экспорт

	Остаток = ?(ОбеспечиватьЗаказы = ТекстЗаСчетОстатка(), Строка.Остаток, Строка.СвободныйОстаток);
	ЗаказыКПоступлению = ?(ОбеспечиватьЗаказы = ТекстЗаСчетОстатка(),
	Строка.ЗаказыКПоступлению, Строка.ЗаказыКПоступлениюСвободные);

	Результат = Не
				?(УровеньЗапаса = "МеньшеМинимальногоОстатка",           Строка.МинимальныйОстаток     >= Остаток,
				?(УровеньЗапаса = "МеньшеУдвоенногоМинимальногоОстатка", Строка.МинимальныйОстаток * 2 >= Остаток,
				?(УровеньЗапаса = "БольшеМинимальногоОстатка",           Строка.МинимальныйОстаток     < Остаток,
				?(УровеньЗапаса = "БольшеМаксимальногоОстатка",          Строка.МаксимальныйОстаток    < Остаток + ЗаказыКПоступлению,
					Истина))));

	Возврат Результат;

КонецФункции

// Заполняет коллекцию данными о состоянии заказов
//
// Параметры:
//  Объект - ДанныеФормы - данные формы объекта обработки "Формирование заказов поставщикам" - обработка,
//           в которую необходимо поместить данные о состоянии обеспечения заказов,
//  ЗаСчетОстатка - Булево - признак использования свободных остатков, для обеспечения заказов.
//
Процедура ЗаполнитьПоСостояниюЗаказов(Объект, ЗаСчетОстатка) Экспорт

	ТекстыЗапроса = Новый СписокЗначений;
	ТекстыЗапроса.Добавить(ВременнаяТаблицаЗаказы(),        "");
	ТекстыЗапроса.Добавить("", "");// формируется таблица ВтДатаПоследнегоЗаказа
	ТекстыЗапроса.Добавить("", "");// формируется таблица ВтДатаПредпоследнегоЗаказа
	ТекстыЗапроса.Добавить("", "");// формируется таблица ВтДатаТретьегоЗаказа
	ТекстыЗапроса.Добавить("", "");// формируется таблица ВтТриПоследнихЗаказа
	ТекстыЗапроса.Добавить(ТекстЗапросаУсловийЗакупок(Ложь), ""); // формируется таблица ВтДанныеЗаполнения
	ТекстыЗапроса.Добавить(ТекстЗапросаЗаказов(),           "ТаблицаЗаказов");
	ТекстыЗапроса.Добавить(ВременнаяТаблицаЗапасыКЗаказу(), "");
	ТекстыЗапроса.Добавить(ТекстЗапросаОстатковИзЗаказов(), "ТаблицаОстаткиИзЗаказов");

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("НачалоПериода", ТекущаяДатаСеанса()); //для получения цен.
	Колонки = "Номенклатура, Характеристика, Склад, КЗаказу";
	Если ЗаСчетОстатка Тогда
		Строки = Новый Структура("Отметка", Истина);
		ЗаСчетОстатка = Истина;
	Иначе
		Строки = Новый Массив;
		ЗаСчетОстатка = Ложь;
	КонецЕсли;
	Запрос.УстановитьПараметр("ТаблицаЗапасыКЗаказу", Объект.Запасы.Выгрузить(Строки, Колонки));
	Запрос.УстановитьПараметр("ЗаСчетОстатка", ЗаСчетОстатка);

	УстановитьПривилегированныйРежим(Истина);
	Таблицы = ОбщегоНазначенияУТ.ВыгрузитьРезультатыЗапроса(Запрос, ТекстыЗапроса);
	УстановитьПривилегированныйРежим(Ложь);

	Объект.Заказы.Очистить();
	Объект.Заказы.Загрузить(Таблицы.ТаблицаЗаказов);
	ПоляКлюча = "Номенклатура,Характеристика,Склад,Назначение,ПодразделениеПолучатель";
	РаспределитьКоличество(Объект.Заказы, Таблицы.ТаблицаОстаткиИзЗаказов, ПоляКлюча, "Обеспечено", "Требуется");

	Для каждого Строка Из Объект.Заказы цикл

		РезультатРасчета = КЗаказуДляОбеспеченияЗаказов(Строка);
		ЗаполнитьЗначенияСвойств(Строка, РезультатРасчета);

		РезультатРасчета = СлужебныеРеквизиты(Строка);
		ЗаполнитьЗначенияСвойств(Строка, РезультатРасчета);

	КонецЦикла;

	Объект.Заказы.Сортировать("Заказ, ДатаОтгрузки", Новый СравнениеЗначений);

КонецПроцедуры

// Создает документы, исходя из заполнения табличных частей обработки "Формирование заказов поставщикам".
//
// Параметры:
//  Объект - ДанныеФормы - данные формы объекта обработки "Формирование заказов поставщикам".
//
// Возвращаемое значение:
//  Структура - Структура с полями:
//   Документы - Массив - массив элементов типа ДокументОбъект.Заказпоставщику, содержит созданные документы.
//   Сообщения - Массив - массив сообщений об ошибках, возникших при создании и проведении документов.
//
Функция СоздатьЗаказы(Объект) Экспорт

	ДокументыОбъекты = Новый Массив();
	Сообщения        = Новый Массив();

	Таблица = Новый ТаблицаЗначений();
	Таблица.Колонки.Добавить("Номенклатура",             Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Таблица.Колонки.Добавить("Характеристика",           Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	Таблица.Колонки.Добавить("Склад",                    Новый ОписаниеТипов("СправочникСсылка.Склады"));
	Таблица.Колонки.Добавить("ПодразделениеПолучатель",  Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	Таблица.Колонки.Добавить("Назначение",               Новый ОписаниеТипов("СправочникСсылка.Назначения"));
	Таблица.Колонки.Добавить("Поставщик",                Новый ОписаниеТипов("СправочникСсылка.Партнеры"));
	Таблица.Колонки.Добавить("Соглашение",               Новый ОписаниеТипов("СправочникСсылка.СоглашенияСПоставщиками"));
	Таблица.Колонки.Добавить("ВидЦеныПоставщика",        Новый ОписаниеТипов("СправочникСсылка.ВидыЦенПоставщиков"));
	Таблица.Колонки.Добавить("КЗаказу",                  ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(15, 3));
	
	Для Каждого Строка Из Объект.Запасы Цикл

		Если Строка.Отметка И Строка.КЗаказу > 0 Тогда

			НоваяСтрока = Таблица.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);

		КонецЕсли;

	КонецЦикла;

	Для Каждого Строка Из Объект.Заказы Цикл

		Если Строка.Отметка И Строка.КЗаказу > 0 Тогда

			НоваяСтрока = Таблица.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);

		КонецЕсли;

	КонецЦикла;

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТаблицаЗначений", Таблица);
	Запрос.УстановитьПараметр("НачалоДня", НачалоДня(ТекущаяДатаСеанса()));

	Запрос.Текст =
		"ВЫБРАТЬ
		|	Т.Номенклатура                               КАК Номенклатура,
		|	Т.Характеристика                             КАК Характеристика,
		|	Т.Склад                                      КАК Склад,
		|	Т.ПодразделениеПолучатель                    КАК ПодразделениеПолучатель,
		|	Т.Назначение                                 КАК Назначение,
		|
		|	Т.Поставщик                                  КАК Партнер,
		|	Т.Соглашение                                 КАК Соглашение,
		|	Т.ВидЦеныПоставщика                          КАК ВидЦеныПоставщика,
		|
		|	Т.КЗаказу                                    КАК Количество
		|
		|ПОМЕСТИТЬ ВтДанныеЗаполнения
		|ИЗ
		|	&ТаблицаЗначений КАК Т
		|;
		|
		|////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.Партнер                                 КАК Партнер,
		|	Т.Соглашение                              КАК Соглашение,
		|	Т.Склад                                   КАК Склад,
		|
		|	Т.Номенклатура                            КАК Номенклатура,
		|	МАКСИМУМ(Т.Номенклатура.СтавкаНДС)        КАК СтавкаНДС,
		|	Т.Характеристика                          КАК Характеристика,
		|	Т.Назначение                              КАК Назначение,
		|	ЕСТЬNULL(Т.Назначение.НаправлениеДеятельности,
		|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
		|	Т.ПодразделениеПолучатель                 КАК ПодразделениеПолучатель,
		|	Т.ВидЦеныПоставщика                       КАК ВидЦеныПоставщика,
		|
		|	ДОБАВИТЬКДАТЕ(&НачалоДня, ДЕНЬ, ЕСТЬNULL(СпрСоглашение.СрокПоставки, 0))  КАК ДатаПоступления,
		|
		|	СУММА(Т.Количество)                       КАК КоличествоУпаковок,
		|	СУММА(Т.Количество)                       КАК Количество
		|ИЗ
		|	ВтДанныеЗаполнения КАК Т
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСПоставщиками КАК СпрСоглашение
		|		ПО Т.Соглашение = СпрСоглашение.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	Т.Соглашение, Т.Партнер, Т.Склад,
		|	ЕСТЬNULL(Т.Назначение.НаправлениеДеятельности,
		|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
		|	Т.Номенклатура, Т.Характеристика, Т.Назначение,
		|	ДОБАВИТЬКДАТЕ(&НачалоДня, ДЕНЬ, ЕСТЬNULL(СпрСоглашение.СрокПоставки, 0)), Т.ПодразделениеПолучатель,
		|	Т.ВидЦеныПоставщика
		|УПОРЯДОЧИТЬ ПО
		|	Соглашение, Партнер, Склад, НаправлениеДеятельности,                               // порядок обхода заказов
		|	Назначение, ДатаПоступления, Номенклатура, Характеристика, ПодразделениеПолучатель // порядок строк в заказе";

	ТаблицаЗаказыПоставщику = Запрос.Выполнить().Выгрузить();
	ПоляКлючаЗаказа = "Соглашение, Партнер, НаправлениеДеятельности";
	ПоляКлючаУдаляемые = "Соглашение, Партнер, НаправлениеДеятельности";
	МассивТаблиц = ОбеспечениеСервер.РазбитьТаблицуПоЗначениюКлюча(ТаблицаЗаказыПоставщику, ПоляКлючаЗаказа);

	Для Каждого Элемент Из МассивТаблиц Цикл

		ПоляКлючаЗаказа = "Склад";
		ДанныеЗаполнения = Элемент.Ключ;
		ТаблицыПоСкладам = ОбеспечениеСервер.РазбитьТаблицуПоЗначениюКлюча(Элемент.Таблица, ПоляКлючаЗаказа, "");

		ТекстКомментарий = НСтр("ru='Сформирован автоматически обработкой ""Формирование заказов поставщикам"".';uk='Сформований автоматично обробкою ""Формування замовлень постачальникам"".'");
		ДанныеЗаполнения.Вставить("Комментарий", ТекстКомментарий);

		Если ТаблицыПоСкладам.Количество() = 2 //Если заказ с товарами один, то добавляем работы в него.
			И Не ЗначениеЗаполнено(ТаблицыПоСкладам[0].Таблица[0].Склад) Тогда

			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицыПоСкладам[0].Таблица, ТаблицыПоСкладам[1].Таблица);
			ТаблицыПоСкладам.Удалить(0);

		КонецЕсли;

		Для Каждого Элемент1 Из ТаблицыПоСкладам Цикл

			ДанныеЗаполнения.Вставить("Склад", Элемент1.Ключ.Склад);
			Элемент1.Таблица.Колонки.ПодразделениеПолучатель.Имя = "Подразделение";
			ДанныеЗаполнения.Вставить("Товары", Элемент1.Таблица);
			Документ = Обработки.ОбеспечениеПотребностей.ЗаполнитьИПровестиДокумент(
				Документы.ЗаказПоставщику, ДанныеЗаполнения, Перечисления.СтатусыЗаказовПоставщикам.Подтвержден, Сообщения);
			ДокументыОбъекты.Добавить(Документ);

		КонецЦикла;

	КонецЦикла;

	Результат = Новый Структура("Документы, Сообщения", ДокументыОбъекты, Сообщения);
	Возврат Результат;

КонецФункции

// Размешает заказы на отгрузку в заказах поставщикам, исходя из заполнения табличной части "Заказы"
// обработки "Формирование заказов поставщикам".
//
// Параметры:
//  Объект - ДанныеФормы - данные формы объекта обработки "Формирование заказов поставщикам".
//
Процедура РазместитьЗаказы(Объект) Экспорт

	Таблица = Новый ТаблицаЗначений();
	Таблица.Колонки.Добавить("Номенклатура",             Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Таблица.Колонки.Добавить("Характеристика",           Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	Таблица.Колонки.Добавить("Склад",                    Новый ОписаниеТипов("СправочникСсылка.Склады"));
	Таблица.Колонки.Добавить("Назначение",               Новый ОписаниеТипов("СправочникСсылка.Назначения"));
	Таблица.Колонки.Добавить("Заказ",                    ОбеспечениеКлиентСервер.ОписаниеТиповЗаказыКОбеспечению());
	Таблица.Колонки.Добавить("ДатаОтгрузки",             Новый ОписаниеТипов("Дата"));
	
	Для Каждого Строка Из Объект.Заказы цикл

		Если (Строка.Отметка И Строка.КЗаказу > 0 Или Строка.Требуется = Строка.Обеспечено)
			И Не ЭтоАкт(Строка.Заказ)
			И Не ЗначениеЗаполнено(Строка.Назначение) Тогда

			НоваяСтрока = Таблица.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);

		КонецЕсли;

	КонецЦикла;

	Обработки.ОбеспечениеПотребностей.ОбеспечитьИзЗаказа(Таблица);

КонецПроцедуры

Функция ЭтоАкт(Заказ)
	
	Возврат ТипЗнч(Заказ) = Тип("ДокументСсылка.АктОРасхожденияхПослеОтгрузки")
		Или ТипЗнч(Заказ) = Тип("ДокументСсылка.АктОРасхожденияхПослеПеремещения");
	
КонецФункции

Функция РазмещениеЗаказовДоступно(Таблица) Экспорт
	
	Для Каждого Строка Из Таблица Цикл
		
		Если (Строка.Отметка И Строка.КЗаказу > 0 Или Строка.Требуется = Строка.Обеспечено)
			И Не ЭтоАкт(Строка.Заказ)
			И Не ЗначениеЗаполнено(Строка.Назначение) Тогда
			
			Возврат Истина;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ДобавлениеВТаблицуЗапасы

Процедура ПолучитьДанныеОЗапасах(Таблица, ВременнаяТаблицаТовары, Запрос, Параметры)

	ТекстыЗапроса = Новый СписокЗначений;
	ТекстыЗапроса.Добавить("", "");// формируется таблица ВтТоварыПоддерживаемогоЗапаса
	ТекстыЗапроса.Добавить(ВременнаяТаблицаТовары, "");// формируется таблица ВтТовары

	ТекстыЗапроса.Добавить(ВременнаяТаблицаРасходТовараПоДням(), "");// формируется таблица ВтРасходТовараПоДням
	ТекстыЗапроса.Добавить(ВременнаяТаблицаВозвратТовараЗаПериод(), "");// формируется таблица ВтВозвратТовараЗаПериод
	ТекстыЗапроса.Добавить(ВременнаяТаблицаОстаткиТовараПоДням(), "");// формируется таблица ВтОстаткиТовараПоДням

	ТекстыЗапроса.Добавить("", "");// формируется таблица ВтДатыПериодаПродаж
	ТекстыЗапроса.Добавить(ВременнаяТаблицаРабочиеДниВПериоде(), "");// формируется таблица ВтРабочиеДниВПериоде
	ТекстыЗапроса.Добавить(ВременнаяТаблицаДатыОстаткаРабочихДней(), "");// формируется таблица ВтДатыОстаткаРабочихДней
	ТекстыЗапроса.Добавить(ВременнаяТаблицаКоличествоРабочихДнейСОстатком(), "");// формируется таблица ВтКоличествоРабочихДнейСОстатком

	ТекстыЗапроса.Добавить(ТекстЗапросаСтатистикиПотребления(), "ТаблицаСтатистикиПотребления");
	
	ТекстыЗапроса.Добавить(ТаблицаТоварныеОграничения(), "ТаблицаТоварныеОграничения"); // содержит реквизиты номенклатуры
	ТекстыЗапроса.Добавить(ТаблицаОстатки(),             "ТаблицаОстатки");
	ТекстыЗапроса.Добавить(ТаблицаЗаказыКПоступлению(),  "ТаблицаЗаказыКПоступлению");

	ТекстыЗапроса.Добавить("", "");// формируется таблица ВтДатаПоследнегоЗаказа
	ТекстыЗапроса.Добавить("", "");// формируется таблица ВтДатаПредпоследнегоЗаказа
	ТекстыЗапроса.Добавить("", "");// формируется таблица ВтДатаТретьегоЗаказа
	ТекстыЗапроса.Добавить("", "");// формируется таблица ВтТриПоследнихЗаказа
	ТекстыЗапроса.Добавить("", "");// формируется таблица ВтДанныеЗаполнения
	ТекстыЗапроса.Добавить(ТекстЗапросаУсловийЗакупок(Истина), "ТаблицаУсловияЗакупок");

	УстановитьПривилегированныйРежим(Истина);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода", ТекущаяДатаСеанса()); //для получения цен.
	Таблицы = ОбщегоНазначенияУТ.ВыгрузитьРезультатыЗапроса(Запрос, ТекстыЗапроса);

	Таблица.Очистить();

	Для Каждого Строка Из Таблицы.ТаблицаТоварныеОграничения Цикл

		НоваяСтрока = Таблица.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);

	КонецЦикла;

	ПоляКлюча = "Номенклатура,Характеристика,Склад";
	ОбеспечениеСервер.ОбновитьКоллекциюДаннымиИзТаблицы(Таблица, Таблицы.ТаблицаСтатистикиПотребления, ПоляКлюча);
	ОбеспечениеСервер.ОбновитьКоллекциюДаннымиИзТаблицы(Таблица, Таблицы.ТаблицаОстатки, ПоляКлюча);
	ОбеспечениеСервер.ОбновитьКоллекциюДаннымиИзТаблицы(Таблица, Таблицы.ТаблицаЗаказыКПоступлению, ПоляКлюча);
	ОбеспечениеСервер.ОбновитьКоллекциюДаннымиИзТаблицы(Таблица, Таблицы.ТаблицаУсловияЗакупок, ПоляКлюча);

	Для каждого Строка Из Таблица цикл

		РезультатРасчета = КЗаказуДляПоддержанияЗапаса(Строка, Параметры.ЗаСчетЗапасов);
		ЗаполнитьЗначенияСвойств(Строка, РезультатРасчета);

		РезультатРасчета = СлужебныеРеквизиты(Строка);
		ЗаполнитьЗначенияСвойств(Строка, РезультатРасчета);

	КонецЦикла;

КонецПроцедуры

Процедура УстановитьПараметрыРасчетаСтатистики(Запрос, ПериодПродаж)

	Сутки = 86400;
	ДатаОкончания = КонецДня(ТекущаяДатаСеанса()) - Сутки;
	ДатаНачала    = НачалоДня(ДатаОкончания) - Сутки * (ПериодПродаж - 1);
	Если ДатаОкончания < ДатаНачала Тогда
		ДатаОкончания = ДатаНачала;
	КонецЕсли;

	Запрос.УстановитьПараметр("ДатаНачала",    ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);

	ТаблицаДатыПериодаПродаж = Новый ТаблицаЗначений();
	ТаблицаДатыПериодаПродаж.Колонки.Добавить("Дата", ОбщегоНазначенияУТ.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя));
	НоваяДата = ДатаНачала;
	Пока НоваяДата < ДатаОкончания Цикл
		НоваяСтрока = ТаблицаДатыПериодаПродаж.Добавить();
		НоваяСтрока.Дата = НоваяДата;
		НоваяДата = НоваяДата + Сутки;
	КонецЦикла;

	Запрос.УстановитьПараметр("ТаблицаДатыПериодаПродаж", ТаблицаДатыПериодаПродаж);

КонецПроцедуры

Процедура ОбновитьИтогиВСтроке(Строка)

	Строка.ВесИтог   = ?(Строка.Отметка, Строка.КЗаказу * Строка.Вес, 0);
	Строка.ОбъемИтог = ?(Строка.Отметка, Строка.КЗаказу * Строка.Объем, 0);
	Строка.Сумма     = Строка.Цена * Строка.КЗаказу;
	Строка.СуммаИтог = ?(Строка.Отметка, Строка.Сумма, 0);

КонецПроцедуры

#КонецОбласти

#Область ТекстыЗапросовСостоянияЗапасов

Функция ТаблицаТоварныеОграничения()

	Текст =
		"ВЫБРАТЬ
		|	Товары.Номенклатура       КАК Номенклатура,
		|	Товары.Характеристика     КАК Характеристика,
		|	Товары.Склад              КАК Склад,
		|
		|	ЕСТЬNULL(ТоварныеОграничения.МинимальноеКоличествоЗапаса, 0)  КАК МинимальныйОстаток,
		|	ЕСТЬNULL(ТоварныеОграничения.МаксимальноеКоличествоЗапаса, 0) КАК МаксимальныйОстаток,
		|
		|	&ТекстЗапросаВесНоменклатуры              КАК Вес,
		|	&ТекстЗапросаОбъемНоменклатуры            КАК Объем,
		|	СпрНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	СпрНоменклатура.Артикул          КАК Артикул,
		|	СпрНоменклатура.Код              КАК Код,
		|
		|	ВЫБОР КОГДА СпрНоменклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины
		|		= ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук) ТОГДА
		|				ИСТИНА
		|			ИНАЧЕ
		|				ЛОЖЬ
		|		КОНЕЦ                            КАК ЕдиницаИзмеренияШтучная
		|ИЗ
		|	ВтТовары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграничения КАК ТоварныеОграничения
		|		ПО &ПодстановкаТоварногоОграничения
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО Товары.Номенклатура = СпрНоменклатура.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура, Характеристика, Склад
		|;
		|
		|//////////////////////////////////////////////////////
		|";

	Текст = СтрЗаменить(Текст,
		"&ТекстЗапросаВесНоменклатуры",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
		"СпрНоменклатура.ЕдиницаИзмерения",
		"СпрНоменклатура"));
	Текст = СтрЗаменить(Текст,
		"&ТекстЗапросаОбъемНоменклатуры",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаОбъемУпаковки(
		"СпрНоменклатура.ЕдиницаИзмерения",
		"СпрНоменклатура"));
		
	Поля = "Товары.Номенклатура,Товары.Характеристика,Товары.Склад";
	Текст = РегистрыСведений.ТоварныеОграничения.ПодставитьСоединение(Текст, "ПодстановкаТоварногоОграничения", Поля);
	Возврат Текст;

КонецФункции

Функция ВременнаяТаблицаТовары(Источник)

	Если Источник = "Склад" Тогда

		Текст = РегистрыСведений.ТоварныеОграничения.ВременнаяТаблицаТоварыПоддерживаемогоЗапаса()
			+"ВЫБРАТЬ
			|	Т.Номенклатура       КАК Номенклатура,
			|	Т.Характеристика     КАК Характеристика,
			|	Т.Склад              КАК Склад
			|ПОМЕСТИТЬ ВтТовары
			|ИЗ
			|	ВтТоварыПоддерживаемогоЗапаса КАК Т
			|
			|ГДЕ
			|	Т.Склад = &Склад
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура, Характеристика, Склад
			|;
			|
			|//////////////////////////////////////////////////////
			|";
		
	ИначеЕсли Источник = "ТаблицаЗначений" Тогда

		Текст =
			"ВЫБРАТЬ
			|	NULL
			|ПОМЕСТИТЬ ВтТоварыПоддерживаемогоЗапаса
			|;
			|
			|//////////////////////////////////////////////////////
			|
			|ВЫБРАТЬ
			|	Т.Номенклатура       КАК Номенклатура,
			|	Т.Характеристика     КАК Характеристика,
			|	Т.Склад              КАК Склад
			|ПОМЕСТИТЬ ВтТовары
			|ИЗ
			|	&ТаблицаЗначений КАК Т
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Номенклатура, Характеристика, Склад
			|;
			|
			|//////////////////////////////////////////////////////
			|";

	КонецЕсли;

	Возврат Текст;

КонецФункции

Функция ВременнаяТаблицаОстаткиТовараПоДням()

	Текст =
		"ВЫБРАТЬ
		|	Т.Номенклатура                КАК Номенклатура,
		|	Т.Характеристика              КАК Характеристика,
		|	Т.Склад                       КАК Склад,
		|	НачалоПериода(Т.Период, ДЕНЬ) КАК Дата,
		|
		|	ВЫБОР КОГДА Т.ВНаличииНачальныйОстаток > 0 ТОГДА
		|				ИСТИНА
		|			ИНАЧЕ
		|				ЛОЖЬ
		|		КОНЕЦ                     КАК ЕстьНачальныйОстаток,
		|
		|	ВЫБОР КОГДА Т.ВНаличииКонечныйОстаток > 0 ТОГДА
		|				ИСТИНА
		|			ИНАЧЕ
		|				ЛОЖЬ
		|		КОНЕЦ                     КАК ЕстьКонечныйОстаток,
		|
		|	ВЫБОР КОГДА Т.ВНаличииРасход > 0 ТОГДА
		|				ИСТИНА
		|			ИНАЧЕ
		|				ЛОЖЬ
		|		КОНЕЦ                     КАК ЕстьРасход
		|
		|ПОМЕСТИТЬ ВтОстаткиТовараПоДням
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(
		|		&ДатаНачала, &ДатаОкончания,
		|		ДЕНЬ, ДвиженияИГраницыПериода,
		|		(Номенклатура, Характеристика, Склад) В(
		|			ВЫБРАТЬ
		|				Т.Номенклатура   КАК Номенклатура,
		|				Т.Характеристика КАК Характеристика,
		|				Т.Склад          КАК Склад
		|			ИЗ
		|				ВтТовары КАК Т)) КАК Т
		|ГДЕ
		|	Т.Период < &ДатаОкончания
		|	И &ДатаНачала < &ДатаОкончания
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад,
		|	Дата,
		|	ЕстьНачальныйОстаток, ЕстьКонечныйОстаток, ЕстьРасход
		|;
		|
		|////////////////////////////////////////////////////////
		|";

	Возврат Текст;

КонецФункции

Функция ВременнаяТаблицаРабочиеДниВПериоде()

	Текст =
		"ВЫБРАТЬ
		|	Т.Дата КАК Дата
		|ПОМЕСТИТЬ ВТДатыПериодаПродаж
		|ИЗ
		|	&ТаблицаДатыПериодаПродаж КАК Т
		|;
		|
		|/////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЕСТЬNULL(КалендарьПредприятия.Значение, Т.Склад.Календарь) КАК Календарь,
		|	График.ДатаГрафика КАК ДатаГрафика
		|
		|ПОМЕСТИТЬ ВтРабочиеДниВПериоде
		|ИЗ
		|	ВтТовары КАК Т
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Константа.ОсновнойКалендарьПредприятия КАК КалендарьПредприятия
		|		ПО Т.Склад.Календарь = ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КалендарныеГрафики КАК График
		|		ПО График.Календарь = ЕСТЬNULL(КалендарьПредприятия.Значение, Т.Склад.Календарь)
		|		 И График.ДеньВключенВГрафик
		|		 И ГОД(&ДатаНачала) <= График.Год
		|		 И График.Год         <= ГОД(&ДатаОкончания)
		|		 И &ДатаНачала        <= График.ДатаГрафика
		|		 И График.ДатаГрафика <= &ДатаОкончания
		|ГДЕ
		|	ЕСТЬNULL(КалендарьПредприятия.Значение, Т.Склад.Календарь) <> ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка) КАК Календарь,
		|	Т.Дата КАК ДатаГрафика
		|ИЗ
		|	ВТДатыПериодаПродаж КАК Т
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДатаГрафика,
		|	Календарь
		|;
		|
		|////////////////////////////////////////////////////////////
		|";

	Возврат Текст;

КонецФункции

Функция ВременнаяТаблицаДатыОстаткаРабочихДней()

	Текст =
		"ВЫБРАТЬ
		|	Т.Номенклатура           КАК Номенклатура,
		|	Т.Характеристика         КАК Характеристика,
		|	Т.Склад                  КАК Склад,
		|	ГрафикРаботы.ДатаГрафика КАК ДатаГрафика,
		|	МАКСИМУМ(Т.Дата)         КАК ДатаОстатка
		|
		|ПОМЕСТИТЬ ВтДатыОстаткаРабочихДней
		|ИЗ
		|	ВтОстаткиТовараПоДням КАК Т
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Константа.ОсновнойКалендарьПредприятия КАК КалендарьПредприятия
		|		ПО Т.Склад.Календарь = ЗНАЧЕНИЕ(Справочник.Календари.ПустаяСсылка)
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтРабочиеДниВПериоде КАК ГрафикРаботы
		|		ПО ЕСТЬNULL(КалендарьПредприятия.Значение, Т.Склад.Календарь) = ГрафикРаботы.Календарь
		|		 И Т.Дата <= ГрафикРаботы.ДатаГрафика
		|
		|СГРУППИРОВАТЬ ПО
		|	Т.Номенклатура, Т.Характеристика, Т.Склад,
		|	ГрафикРаботы.ДатаГрафика
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад,
		|	ДатаОстатка, ДатаГрафика
		|;
		|
		|////////////////////////////////////////////////////////////
		|";

	Возврат Текст;

КонецФункции

Функция ВременнаяТаблицаКоличествоРабочихДнейСОстатком()

	Текст =
		"ВЫБРАТЬ
		|	Т.Номенклатура   КАК Номенклатура,
		|	Т.Характеристика КАК Характеристика,
		|	Т.Склад          КАК Склад,
		|
		|	СУММА(1)         КАК Количество,
		|
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ЕстьКонечныйОстаток ТОГДА
		|				1
		|			ИНАЧЕ
		|				0
		|		КОНЕЦ)       КАК КоличествоЕстьКонечныйОстаток
		|
		|ПОМЕСТИТЬ ВтКоличествоРабочихДнейСОстатком
		|ИЗ
		|	ВтДатыОстаткаРабочихДней КАК Т
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОстаткиТовараПоДням КАК ТаблицаОстатки
		|		ПО Т.ДатаОстатка = ТаблицаОстатки.Дата
		|		 И Т.Номенклатура   = ТаблицаОстатки.Номенклатура
		|		 И Т.Характеристика = ТаблицаОстатки.Характеристика
		|		 И Т.Склад          = ТаблицаОстатки.Склад
		|		 И (Т.ДатаГрафика = Т.ДатаОстатка И ТаблицаОстатки.ЕстьНачальныйОстаток
		|				ИЛИ ТаблицаОстатки.ЕстьКонечныйОстаток)
		|
		|СГРУППИРОВАТЬ ПО
		|	Т.Номенклатура, Т.Характеристика, Т.Склад
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад
		|;
		|
		|////////////////////////////////////////////////////////////
		|";

	Возврат Текст;

КонецФункции

Функция ВременнаяТаблицаРасходТовараПоДням()

	//Учитываются документы следующих типов:
	// ВнутреннееПотреблениеТоваров
	// КорректировкаРеализации
	// ОрдерНаОтражениеНедостачТоваров
	// ОрдерНаОтражениеПорчиТоваров
	// ОрдерНаОтражениеРезультатовПересчетовТоваров
	// ПередачаСырьяПереработчику
	// СписаниеНедостачТоваров
	// ПорчаТоваров
	// ПересортицаТоваров
	// РасходныйОрдерНаТовары
	// РеализацияТоваровУслуг
	// СборкаТоваров
	// ОтчетОРозничныхПродажах
	// ЧекККМ

	Текст =
		"ВЫБРАТЬ
		|	Т.Номенклатура                КАК Номенклатура,
		|	Т.Характеристика              КАК Характеристика,
		|	Т.Склад                       КАК Склад,
		|	НачалоПериода(Т.Период, ДЕНЬ) КАК Дата,
		|
		|	СУММА(Т.ВНаличии)                     КАК Количество
		|
		|ПОМЕСТИТЬ ВтРасходТовараПоДням
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах КАК Т
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТовары КАК ТаблицаТовары
		|		ПО Т.Номенклатура   = ТаблицаТовары.Номенклатура
		|		 И Т.Характеристика = ТаблицаТовары.Характеристика
		|		 И Т.Склад          = ТаблицаТовары.Склад
		|ГДЕ
		|	Т.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		//Не учитываются документы следующих типов:
		|	И ТИПЗНАЧЕНИЯ(Т.Регистратор) НЕ В(
		|		ТИП(Документ.ВозвратТоваровПоставщику),
		|		ТИП(Документ.КорректировкаРегистров),
		|		ТИП(Документ.ОрдерНаПеремещениеТоваров),
		|		ТИП(Документ.ПеремещениеТоваров))
		|
		|СГРУППИРОВАТЬ ПО
		|	Т.Номенклатура, Т.Характеристика, Т.Склад,
		|	НачалоПериода(Т.Период, ДЕНЬ)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад
		|;
		|
		|///////////////////////////////////////////////////
		|";

	Возврат Текст;

КонецФункции

Функция ВременнаяТаблицаВозвратТовараЗаПериод()

	Текст =
		"ВЫБРАТЬ
		|	Т.Номенклатура                КАК Номенклатура,
		|	Т.Характеристика              КАК Характеристика,
		|	Т.Склад                       КАК Склад,
		|	НачалоПериода(Т.Период, ДЕНЬ) КАК Дата,
		|
		|	СУММА(Т.ВНаличии)             КАК Количество
		|
		|ПОМЕСТИТЬ ВтВозвратТовараЗаПериод
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах КАК Т
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТовары КАК ТаблицаТовары
		|		ПО Т.Номенклатура   = ТаблицаТовары.Номенклатура
		|		 И Т.Характеристика = ТаблицаТовары.Характеристика
		|		 И Т.Склад          = ТаблицаТовары.Склад
		|ГДЕ
		|	Т.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		//Учитываются документы следующих типов:
		|	И ТИПЗНАЧЕНИЯ(Т.Регистратор) В(
		|		ТИП(Документ.ВозвратТоваровОтКлиента),
		|		ТИП(Документ.ЧекККМВозврат))
		|
		|СГРУППИРОВАТЬ ПО
		|	Т.Номенклатура, Т.Характеристика, Т.Склад,
		|	НачалоПериода(Т.Период, ДЕНЬ)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад
		|;
		|
		|///////////////////////////////////////////////////
		|";

	Возврат Текст;

КонецФункции

Функция ТекстЗапросаСтатистикиПотребления()

	Текст =
		"ВЫБРАТЬ
		|	Т.Номенклатура      КАК Номенклатура,
		|	Т.Характеристика    КАК Характеристика,
		|	Т.Склад             КАК Склад,
		|
		|	ВЫБОР КОГДА Т.СреднедневноеПотребление > Т.СреднедневноеПотреблениеЕстьКонечныйОстаток ТОГДА
		|				Т.СреднедневноеПотребление
		|			ИНАЧЕ
		|				Т.СреднедневноеПотреблениеЕстьКонечныйОстаток
		|		КОНЕЦ           КАК СреднедневноеПотребление,
		|
		|	ВЫБОР КОГДА Т.Продажи > Т.ПродажиЕстьКонечныйОстаток ТОГДА
		|				Т.Продажи
		|			ИНАЧЕ
		|				Т.ПродажиЕстьКонечныйОстаток
		|		КОНЕЦ           КАК Продажи
		|
		|ИЗ(ВЫБРАТЬ
		|	Т.Номенклатура      КАК Номенклатура,
		|	Т.Характеристика    КАК Характеристика,
		|	Т.Склад             КАК Склад,
		|
		|	ВЫБОР КОГДА Т.КоличествоДней = 0 ТОГДА
		|				0
		|			ИНАЧЕ
		|				(Т.Потребление - Т.Возврат) / Т.КоличествоДней
		|		КОНЕЦ           КАК СреднедневноеПотребление,
		|
		|	Т.Потребление - Т.Возврат                         КАК Продажи,
		|	Т.ПотреблениеЕстьКонечныйОстаток - Т.Возврат      КАК ПродажиЕстьКонечныйОстаток,
		|
		|	ВЫБОР КОГДА Т.КоличествоДнейЕстьКонечныйОстаток = 0 ТОГДА
		|				0
		|			ИНАЧЕ
		|				(Т.ПотреблениеЕстьКонечныйОстаток - Т.Возврат) / Т.КоличествоДнейЕстьКонечныйОстаток
		|		КОНЕЦ           КАК СреднедневноеПотреблениеЕстьКонечныйОстаток
		|
		|ИЗ(
		|	ВЫБРАТЬ
		|		Т.Номенклатура      КАК Номенклатура,
		|		Т.Характеристика    КАК Характеристика,
		|		Т.Склад             КАК Склад,
		|
		|		ЕСТЬNULL(МАКСИМУМ(ТаблицаВозврат.Количество), 0) КАК Возврат,
		|		ЕСТЬNULL(СУММА(ТаблицаРасход.Количество), 0)     КАК Потребление,
		|
		|		ЕСТЬNULL(СУММА(ВЫБОР КОГДА ТаблицаОстатки.ЕстьКонечныйОстаток ТОГДА
		|					ТаблицаРасход.Количество
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ), 0)                                   КАК ПотреблениеЕстьКонечныйОстаток,
		|
		|		ЕСТЬNULL(МАКСИМУМ(ТаблицаКоличествоДней.Количество), 0)                    КАК КоличествоДней,
		|		ЕСТЬNULL(МАКСИМУМ(ТаблицаКоличествоДней.КоличествоЕстьКонечныйОстаток), 0) КАК КоличествоДнейЕстьКонечныйОстаток
		|
		|	ИЗ
		|		ВтТовары КАК Т
		|
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВтРасходТовараПоДням КАК ТаблицаРасход
		|			ПО Т.Номенклатура   = ТаблицаРасход.Номенклатура
		|			 И Т.Характеристика = ТаблицаРасход.Характеристика
		|			 И Т.Склад          = ТаблицаРасход.Склад
		|
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВтОстаткиТовараПоДням КАК ТаблицаОстатки
		|			ПО Т.Номенклатура   = ТаблицаОстатки.Номенклатура
		|			 И Т.Характеристика = ТаблицаОстатки.Характеристика
		|			 И Т.Склад          = ТаблицаОстатки.Склад
		|			 И ТаблицаРасход.Дата = ТаблицаОстатки.Дата
		|
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВтВозвратТовараЗаПериод КАК ТаблицаВозврат
		|			ПО Т.Номенклатура   = ТаблицаРасход.Номенклатура
		|			 И Т.Характеристика = ТаблицаРасход.Характеристика
		|			 И Т.Склад          = ТаблицаРасход.Склад
		|
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВтКоличествоРабочихДнейСОстатком КАК ТаблицаКоличествоДней
		|			ПО Т.Номенклатура   = ТаблицаКоличествоДней.Номенклатура
		|			 И Т.Характеристика = ТаблицаКоличествоДней.Характеристика
		|			 И Т.Склад          = ТаблицаКоличествоДней.Склад
		|
		|	СГРУППИРОВАТЬ ПО
		|		Т.Номенклатура, Т.Характеристика, Т.Склад) КАК Т) КАК Т
		|
		|	УПОРЯДОЧИТЬ ПО
		|		Номенклатура, Характеристика, Склад
		|;
		|
		|/////////////////////////////////////////////////////////////
		|";

	Возврат Текст;

КонецФункции

Функция ТаблицаОстатки()

	Текст =
		"ВЫБРАТЬ
		|	Т.Номенклатура       КАК Номенклатура,
		|	Т.Характеристика     КАК Характеристика,
		|	Т.Склад              КАК Склад,
		|
		|	СУММА(Т.Остаток)          КАК Остаток,
		|	СУММА(Т.СвободныйОстаток) КАК СвободныйОстаток
		|ИЗ(
		|	ВЫБРАТЬ
		|		Т.Номенклатура       КАК Номенклатура,
		|		Т.Характеристика     КАК Характеристика,
		|		Т.Склад              КАК Склад,
		|
		|		Т.ВНаличииОстаток
		|			- Т.ВРезервеПодЗаказОстаток    КАК Остаток,
		|
		|		Т.ВНаличииОстаток
		|			- Т.ВРезервеПодЗаказОстаток
		|			- Т.ВРезервеСоСкладаОстаток    КАК СвободныйОстаток
		|
		|	ИЗ
		|		РегистрНакопления.СвободныеОстатки.Остатки(, 
		|			(Номенклатура, Характеристика, Склад) В(
		|				ВЫБРАТЬ
		|					Т.Номенклатура   КАК Номенклатура,
		|					Т.Характеристика КАК Характеристика,
		|					Т.Склад          КАК Склад
		|				ИЗ
		|					ВтТовары КАК Т)) КАК Т
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		//вычтем из остатка резерв, образуемый на складе заказами с вариантом обеспечения ""Из заказов"".
		|	ВЫБРАТЬ
		|		Т.Номенклатура       КАК Номенклатура,
		|		Т.Характеристика     КАК Характеристика,
		|		Т.Склад              КАК Склад,
		|
		|		0                                КАК Остаток,
		|		Т.Количество                     КАК СвободныйОстаток
		|
		|	ИЗ
		|		РегистрСведений.ДоступныеОстаткиПланируемыхПоступлений КАК Т
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТовары КАК Таблица
		|			ПО Т.Номенклатура   = Таблица.Номенклатура
		|			 И Т.Характеристика = Таблица.Характеристика
		|			 И Т.Склад          = Таблица.Склад
		|	ГДЕ
		|		Т.Количество < 0
		|		И Т.ДатаДоступности = ДАТАВРЕМЯ(1, 1, 1)) КАК Т
		|
		|СГРУППИРОВАТЬ ПО
		|	Т.Номенклатура, Т.Характеристика, Т.Склад
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура, Характеристика, Склад
		|;
		|
		|///////////////////////////////////////////
		|";

	Возврат Текст;

КонецФункции

Функция ТаблицаЗаказыКПоступлению()

	Текст =
		"ВЫБРАТЬ
		|	Т.Номенклатура       КАК Номенклатура,
		|	Т.Характеристика     КАК Характеристика,
		|	Т.Склад              КАК Склад,
		|
		|	СУММА(Т.КоличествоИзЗаказов)  КАК ЗаказыКПоступлению,
		|	МАКСИМУМ(ЕСТЬNULL(ДоступныеОстатки.Количество, 0)) КАК ЗаказыКПоступлениюСвободные
		|
		|ИЗ
		|	РегистрНакопления.ГрафикПоступленияТоваров КАК Т
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТовары КАК Товары
		|		ПО Т.Номенклатура   = Товары.Номенклатура
		|		 И Т.Характеристика = Товары.Характеристика
		|		 И Т.Склад          = Товары.Склад
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДоступныеОстаткиПланируемыхПоступлений КАК ДоступныеОстатки
		|		ПО Т.Номенклатура   = ДоступныеОстатки.Номенклатура
		|		 И Т.Характеристика = ДоступныеОстатки.Характеристика
		|		 И Т.Склад          = ДоступныеОстатки.Склад
		|		 И ДоступныеОстатки.Количество > 0
		|ГДЕ
		|	Т.Активность
		|
		|СГРУППИРОВАТЬ ПО
		|	Т.Номенклатура, Т.Характеристика, Т.Склад
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура, Характеристика, Склад
		|;
		|
		|///////////////////////////////////////////
		|";

	Возврат Текст;

КонецФункции

Функция ТекстЗапросаУсловийЗакупок(ВыбиратьДанные)

	Текст =
		"ВЫБРАТЬ //Дата последнего заказа
		|	Т.Номенклатура   КАК Номенклатура,
		|	Т.Характеристика КАК Характеристика,
		|	Т.Склад          КАК Склад,
		|
		|	МАКСИМУМ(Товары.Ссылка.Дата) КАК ДатаПоследнегоЗаказа
		|
		|ПОМЕСТИТЬ ВтДатаПоследнегоЗаказа
		|ИЗ
		|	ВтТовары КАК Т
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК Товары
		|		ПО Т.Номенклатура   = Товары.Номенклатура
		|		 И Т.Характеристика = Товары.Характеристика
		|		 И Т.Склад          = Товары.Склад
		|ГДЕ
		|	Товары.Ссылка.Проведен
		|СГРУППИРОВАТЬ ПО
		|	Т.Номенклатура, Т.Характеристика, Т.Склад
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ //Дата предпоследнего заказа.
		|	Т.Номенклатура   КАК Номенклатура,
		|	Т.Характеристика КАК Характеристика,
		|	Т.Склад          КАК Склад,
		|	МАКСИМУМ(Т.ДатаПоследнегоЗаказа)  КАК ДатаПоследнегоЗаказа,
		|	МАКСИМУМ(ВЫБОР КОГДА Т.ДатаПоследнегоЗаказа = Товары.Ссылка.Дата ТОГДА
		|				NULL
		|			ИНАЧЕ Товары.Ссылка.Дата
		|		КОНЕЦ)                        КАК ДатаПредпоследнегоЗаказа
		|	
		|ПОМЕСТИТЬ ВтДатаПредпоследнегоЗаказа
		|ИЗ
		|	ВтДатаПоследнегоЗаказа КАК Т
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК Товары
		|		ПО Т.Номенклатура   = Товары.Номенклатура
		|		 И Т.Характеристика = Товары.Характеристика
		|		 И Т.Склад          = Товары.Склад
		|ГДЕ
		|	Товары.Ссылка.Проведен
		|СГРУППИРОВАТЬ ПО
		|	Т.Номенклатура, Т.Характеристика, Т.Склад
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ // Дата третьего заказа.
		|	Т.Номенклатура   КАК Номенклатура,
		|	Т.Характеристика КАК Характеристика,
		|	Т.Склад          КАК Склад,
		|	МАКСИМУМ(Т.ДатаПоследнегоЗаказа)     КАК ДатаПоследнегоЗаказа,
		|	МАКСИМУМ(Т.ДатаПредпоследнегоЗаказа) КАК ДатаПредпоследнегоЗаказа,
		|	МАКСИМУМ(ВЫБОР КОГДА Товары.Ссылка.Дата В (Т.ДатаПоследнегоЗаказа, Т.ДатаПредпоследнегоЗаказа) ТОГДА
		|				NULL
		|			ИНАЧЕ Товары.Ссылка.Дата
		|		КОНЕЦ)                           КАК ДатаТретьегоЗаказа
		|	
		|ПОМЕСТИТЬ ВтДатаТретьегоЗаказа
		|ИЗ
		|	ВтДатаПредпоследнегоЗаказа КАК Т
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК Товары
		|		ПО Т.Номенклатура   = Товары.Номенклатура
		|		 И Т.Характеристика = Товары.Характеристика
		|		 И Т.Склад          = Товары.Склад
		|ГДЕ
		|	Товары.Ссылка.Проведен
		|СГРУППИРОВАТЬ ПО
		|	Т.Номенклатура, Т.Характеристика, Т.Склад
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ //Последние три заказа по позиции.
		|	Т.Номенклатура   КАК Номенклатура,
		|	Т.Характеристика КАК Характеристика,
		|	Т.Склад          КАК Склад,
		|
		|	МАКСИМУМ(ВЫБОР КОГДА Т.ДатаПоследнегоЗаказа = Товары.Ссылка.Дата ТОГДА
		|				Товары.Ссылка
		|			ИНАЧЕ NULL
		|		КОНЕЦ)                           КАК Заказ1,
		|	МАКСИМУМ(ВЫБОР КОГДА Т.ДатаПредпоследнегоЗаказа = Товары.Ссылка.Дата ТОГДА
		|				Товары.Ссылка
		|			ИНАЧЕ NULL
		|		КОНЕЦ)                           КАК Заказ2,
		|	МАКСИМУМ(ВЫБОР КОГДА Т.ДатаТретьегоЗаказа = Товары.Ссылка.Дата ТОГДА
		|				Товары.Ссылка
		|			ИНАЧЕ NULL
		|		КОНЕЦ)                           КАК Заказ3
		|
		|ПОМЕСТИТЬ ВтТриПоследнихЗаказа
		|ИЗ
		|	ВтДатаТретьегоЗаказа КАК Т
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК Товары
		|		ПО Т.Номенклатура   = Товары.Номенклатура
		|		 И Т.Характеристика = Товары.Характеристика
		|		 И Т.Склад          = Товары.Склад
		|		 И Товары.Ссылка.Дата В (Т.ДатаПоследнегоЗаказа, Т.ДатаПредпоследнегоЗаказа, Т.ДатаТретьегоЗаказа)
		|ГДЕ
		|	Товары.Ссылка.Проведен
		|СГРУППИРОВАТЬ ПО
		|	Т.Номенклатура, Т.Характеристика, Т.Склад
		|ИНДЕКСИРОВАТЬ ПО
		|	Заказ1, Заказ2, Заказ3
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ //Данные для заполнения источника обеспечения и условий закупки.
		|	Т.Номенклатура   КАК Номенклатура,
		|	Т.Характеристика КАК Характеристика,
		|	Т.Склад          КАК Склад,
		|
		|	ВЫБОР КОГДА Т.Заказ2.Партнер ЕСТЬ NULL ТОГДА
		|				Т.Заказ1.Партнер
		|			КОГДА Т.Заказ3.Партнер ЕСТЬ NULL ТОГДА
		|				ВЫБОР КОГДА Т.Заказ1.Партнер = Т.Заказ2.Партнер ТОГДА
		|							Т.Заказ1.Партнер
		|						ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|					КОНЕЦ
		|			ИНАЧЕ
		|				ВЫБОР КОГДА Т.Заказ1.Партнер = Т.Заказ2.Партнер ИЛИ Т.Заказ1.Партнер = Т.Заказ3.Партнер ТОГДА
		|							Т.Заказ1.Партнер
		|						КОГДА Т.Заказ2.Партнер = Т.Заказ3.Партнер ТОГДА
		|							Т.Заказ2.Партнер
		|						ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
		|					КОНЕЦ
		|		КОНЕЦ       КАК Партнер,
		|
		|	ВЫБОР КОГДА Т.Заказ2.Партнер ЕСТЬ NULL ТОГДА
		|				Т.Заказ1.Соглашение
		|			КОГДА Т.Заказ3.Партнер ЕСТЬ NULL ТОГДА
		|				ВЫБОР КОГДА Т.Заказ1.Соглашение = Т.Заказ2.Соглашение ТОГДА
		|							Т.Заказ1.Соглашение
		|						ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка)
		|					КОНЕЦ
		|			ИНАЧЕ
		|				ВЫБОР КОГДА Т.Заказ1.Соглашение = Т.Заказ2.Соглашение ИЛИ Т.Заказ1.Соглашение = Т.Заказ3.Соглашение ТОГДА
		|							Т.Заказ1.Соглашение
		|						КОГДА Т.Заказ2.Соглашение = Т.Заказ3.Соглашение ТОГДА
		|							Т.Заказ2.Соглашение
		|						ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка)
		|					КОНЕЦ
		|		КОНЕЦ       КАК Соглашение,
		|
		|	ВЫБОР КОГДА Т.Заказ2.Партнер ЕСТЬ NULL ТОГДА
		|				Т.Заказ1.Соглашение.Валюта
		|			КОГДА Т.Заказ3.Партнер ЕСТЬ NULL ТОГДА
		|				ВЫБОР КОГДА Т.Заказ1.Соглашение = Т.Заказ2.Соглашение ТОГДА
		|							Т.Заказ1.Соглашение.Валюта
		|						ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка)
		|					КОНЕЦ
		|			ИНАЧЕ
		|				ВЫБОР КОГДА Т.Заказ1.Соглашение = Т.Заказ2.Соглашение ИЛИ Т.Заказ1.Соглашение = Т.Заказ3.Соглашение ТОГДА
		|							Т.Заказ1.Соглашение.Валюта
		|						КОГДА Т.Заказ2.Соглашение = Т.Заказ3.Соглашение ТОГДА
		|							Т.Заказ2.Соглашение.Валюта
		|						ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка)
		|					КОНЕЦ
		|		КОНЕЦ       КАК Валюта,
		|
		|	ВЫРАЗИТЬ(ВЫБОР КОГДА Т.Заказ2.Партнер ЕСТЬ NULL ТОГДА
		|				Т.Заказ1.Соглашение
		|			КОГДА Т.Заказ3.Партнер ЕСТЬ NULL ТОГДА
		|				ВЫБОР КОГДА Т.Заказ1.Соглашение = Т.Заказ2.Соглашение ТОГДА
		|							Т.Заказ1.Соглашение
		|						ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка)
		|					КОНЕЦ
		|			ИНАЧЕ
		|				ВЫБОР КОГДА Т.Заказ1.Соглашение = Т.Заказ2.Соглашение ИЛИ Т.Заказ1.Соглашение = Т.Заказ3.Соглашение ТОГДА
		|							Т.Заказ1.Соглашение
		|						КОГДА Т.Заказ2.Соглашение = Т.Заказ3.Соглашение ТОГДА
		|							Т.Заказ2.Соглашение
		|						ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка)
		|					КОНЕЦ
		|		КОНЕЦ КАК Справочник.СоглашенияСПоставщиками).ВидЦеныПоставщика КАК ВидЦеныПоставщика
		|
		|ПОМЕСТИТЬ ВтДанныеЗаполнения
		|ИЗ
		|	ВтТриПоследнихЗаказа КАК Т
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
	Если ВыбиратьДанные Тогда

		Текст = Текст +
			"ВЫБРАТЬ
			|	Т.Номенклатура   КАК Номенклатура,
			|	Т.Характеристика КАК Характеристика,
			|	Т.Склад          КАК Склад,
			|	Т.Партнер        КАК Поставщик,
			|	Т.ВидЦеныПоставщика КАК ВидЦеныПоставщика,
			|	Т.Соглашение     КАК Соглашение,
			|
			|	ЦеныПоставщиков.Цена                   КАК Цена,
			|	ЦеныПоставщиков.Упаковка               КАК Упаковка,
			|	ЦеныПоставщиков.Валюта                 КАК Валюта
			|ИЗ
			|	ВтДанныеЗаполнения КАК Т
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатурыПоставщиков.СрезПоследних(
			|			КОНЕЦПЕРИОДА(&НачалоПериода, ДЕНЬ),
			|			(Номенклатура, Характеристика, Партнер, ВидЦеныПоставщика)В (
			|				ВЫБРАТЬ
			|					Т.Номенклатура           КАК Номенклатура,
			|					Т.Характеристика         КАК Характеристика,
			|					Т.Партнер                КАК Партнер,
			|					Т.ВидЦеныПоставщика      КАК ВидЦеныПоставщика
			|				ИЗ
			|					ВтДанныеЗаполнения КАК Т)) КАК ЦеныПоставщиков
			|		ПО Т.Номенклатура   = ЦеныПоставщиков.Номенклатура
			|		 И Т.Характеристика = ЦеныПоставщиков.Характеристика
			|УПОРЯДОЧИТЬ ПО
			|	Номенклатура, Характеристика, Склад
			|
			|;
			|////////////////////////////////////////////////////////////////////////////////
			|";

		Иначе
			Текст = СтрЗаменить(Текст, "ВтТовары", "ВтЗаказы");
		КонецЕсли;

	Возврат Текст;

КонецФункции

#КонецОбласти

#Область ЗаполнениеПоСостояниюЗаказов

Функция ВременнаяТаблицаЗаказы()

	Текст =
		"ВЫБРАТЬ // неотгруженные строки заказов на отгрузку товаров с вариантом обеспечения ""Требуется""
		|	Т.Номенклатура               КАК Номенклатура,
		|	Т.Характеристика             КАК Характеристика,
		|	Т.Склад                      КАК Склад,
		|
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеПолучатель,
		|
		|	Т.Регистратор                КАК Заказ,
		|	Т.Назначение                 КАК Назначение,
		|	Т.Период                     КАК ДатаОтгрузки,
		|
		|	Т.КоличествоНеОбеспечено     КАК Требуется
		|
		|ПОМЕСТИТЬ ВтЗаказы
		|ИЗ
		|	РегистрНакопления.ГрафикОтгрузкиТоваров КАК Т
		|
		|ГДЕ
		|	Т.Склад = &Склад
		|	И Т.Активность
		|	И Т.КоличествоНеОбеспечено > 0
		|
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ // неотгруженные необеспеченные строки заказов на отгрузку товаров с вариантом обеспечения ""Обособленно""
		|	Т.Номенклатура               КАК Номенклатура,
		|	Т.Характеристика             КАК Характеристика,
		|	Т.Склад                      КАК Склад,
		|
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеПолучатель,
		|
		|	Т.Регистратор                КАК Заказ,
		|	Т.Назначение                 КАК Назначение,
		|	Т.Период                     КАК ДатаОтгрузки,
		|
		|	Т.КоличествоПодЗаказ         КАК Требуется
		|
		|ИЗ
		|	РегистрНакопления.ГрафикОтгрузкиТоваров КАК Т
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОбеспечениеЗаказов.Остатки(, Склад = &Склад) КАК Остатки
		|		ПО Т.Номенклатура   = Остатки.Номенклатура
		|		 И Т.Характеристика = Остатки.Характеристика
		|		 И Т.Склад          = Остатки.Склад
		|		 И Т.Назначение     = Остатки.Назначение
		|
		|ГДЕ
		|	Т.Активность
		|	И Т.КоличествоПодЗаказ > 0
		|	И Остатки.КЗаказуОстаток > 0
		|
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ // неотгруженные необеспеченные строки заказов работ на отгрузку
		|	Т.Номенклатура               КАК Номенклатура,
		|	Т.Характеристика             КАК Характеристика,
		|
		|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
		|
		|	Т.Подразделение              КАК ПодразделениеПолучатель,
		|
		|	Т.Регистратор                КАК Заказ,
		|	Т.Назначение                 КАК Назначение,
		|	Т.Период                     КАК ДатаОтгрузки,
		|
		|	Т.КОбеспечению               КАК Требуется
		|
		|ИЗ
		|	РегистрНакопления.ОбеспечениеЗаказовРаботами КАК Т
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОбеспечениеЗаказовРаботами.Остатки КАК Остатки
		|		ПО Т.Номенклатура   = Остатки.Номенклатура
		|		 И Т.Характеристика = Остатки.Характеристика
		|		 И Т.Подразделение  = Остатки.Подразделение
		|		 И Т.Назначение     = Остатки.Назначение
		|
		|ГДЕ
		|	Т.Активность
		|	И Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И Т.КОбеспечению > 0
		|	И Остатки.КОбеспечениюОстаток > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|///////////////////////////////////////////////////////////////////
		|";

	Возврат Текст;

КонецФункции

Функция ТекстЗапросаЗаказов()

	Текст =
		"ВЫБРАТЬ
		|	Т.Номенклатура               КАК Номенклатура,
		|	Т.Характеристика             КАК Характеристика,
		|	Т.Склад                      КАК Склад,
		|
		|	Т.ПодразделениеПолучатель    КАК ПодразделениеПолучатель,
		|
		|	Т.Заказ                      КАК Заказ,
		|	Т.Назначение                 КАК Назначение,
		|	Т.ДатаОтгрузки               КАК ДатаОтгрузки,
		|
		|	Т.Требуется                  КАК Требуется,
		|
		|	&ТекстЗапросаВесНоменклатуры              КАК Вес,
		|	&ТекстЗапросаОбъемНоменклатуры            КАК Объем,
		|	СпрНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	СпрНоменклатура.Артикул          КАК Артикул,
		|	СпрНоменклатура.Код              КАК Код,
		|
		|	ДанныеЗаполнения.Партнер        КАК Поставщик,
		|	ДанныеЗаполнения.Соглашение     КАК Соглашение,
		|	ДанныеЗаполнения.ВидЦеныПоставщика КАК ВидЦеныПоставщика,
		|
		|	ЦеныПоставщиков.Цена                   КАК Цена,
		|	ЦеныПоставщиков.Упаковка               КАК Упаковка,
		|	ЦеныПоставщиков.Валюта                 КАК Валюта
		|ИЗ
		|	ВтЗаказы КАК Т
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтДанныеЗаполнения КАК ДанныеЗаполнения
		|		ПО Т.Номенклатура = ДанныеЗаполнения.Номенклатура
		|		 И Т.Характеристика = ДанныеЗаполнения.Характеристика
		|		 И Т.Склад = ДанныеЗаполнения.Склад
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатурыПоставщиков.СрезПоследних(
		|			КОНЕЦПЕРИОДА(&НачалоПериода, ДЕНЬ),
		|			(Номенклатура, Характеристика, Партнер, ВидЦеныПоставщика)В (
		|				ВЫБРАТЬ
		|					Т.Номенклатура           КАК Номенклатура,
		|					Т.Характеристика         КАК Характеристика,
		|					Т.Партнер                КАК Партнер,
		|					Т.ВидЦеныПоставщика      КАК ВидЦеныПоставщика
		|				ИЗ
		|					ВтДанныеЗаполнения КАК Т)) КАК ЦеныПоставщиков
		|		ПО Т.Номенклатура   = ЦеныПоставщиков.Номенклатура
		|		 И Т.Характеристика = ЦеныПоставщиков.Характеристика
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО Т.Номенклатура = СпрНоменклатура.Ссылка
		|
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение, ПодразделениеПолучатель, ДатаОтгрузки
		|;
		|
		|//////////////////////////////////////////////////////////
		|";

	Текст = СтрЗаменить(Текст,
		"&ТекстЗапросаВесНоменклатуры",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
		"СпрНоменклатура.ЕдиницаИзмерения",
		"СпрНоменклатура"));
	Текст = СтрЗаменить(Текст,
		"&ТекстЗапросаОбъемНоменклатуры",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаОбъемУпаковки(
		"СпрНоменклатура.ЕдиницаИзмерения",
		"СпрНоменклатура"));
		
	Возврат Текст;

КонецФункции

Функция ВременнаяТаблицаЗапасыКЗаказу()

	Текст =
		"ВЫБРАТЬ
		|	Т.Номенклатура               КАК Номенклатура,
		|	Т.Характеристика             КАК Характеристика,
		|	Т.Склад                      КАК Склад,
		|	Т.КЗаказу                    КАК Количество
		|
		|ПОМЕСТИТЬ ВтЗапасыКЗаказу
		|ИЗ
		|	&ТаблицаЗапасыКЗаказу КАК Т
		|ГДЕ
		|	Т.КЗаказу > 0
		|;
		|
		|///////////////////////////////////////////////
		|";

	Возврат Текст;

КонецФункции

Функция ТекстЗапросаОстатковИзЗаказов()

	Текст =
		"ВЫБРАТЬ
		|	Т.Номенклатура            КАК Номенклатура,
		|	Т.Характеристика          КАК Характеристика,
		|	Т.Склад                   КАК Склад,
		|
		|	Т.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
		|	Т.Назначение              КАК Назначение,
		|
		|	СУММА(Т.Обеспечено)       КАК Обеспечено
		|ИЗ(
		|	ВЫБРАТЬ //свободные количества в заказах на поставку номенклатуры для заказов с вариантом обеспечения ""Требуется""
		|		Т.Номенклатура            КАК Номенклатура,
		|		Т.Характеристика          КАК Характеристика,
		|		Т.Склад                   КАК Склад,
		|
		|		ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеПолучатель,
		|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)           КАК Назначение,
		|
		|		МАКСИМУМ(ТаблицаОстатки.Количество)                    КАК Обеспечено
		|
		|	ИЗ
		|		РегистрНакопления.ГрафикОтгрузкиТоваров КАК Т
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДоступныеОстаткиПланируемыхПоступлений КАК ТаблицаОстатки
		|			ПО Т.Номенклатура   = ТаблицаОстатки.Номенклатура
		|			 И Т.Характеристика = ТаблицаОстатки.Характеристика
		|			 И Т.Склад          = ТаблицаОстатки.Склад
		|	ГДЕ
		|		Т.Склад = &Склад
		|		И Т.Активность
		|		И Т.КоличествоНеОбеспечено <> 0
		|		И &ЗаСчетОстатка
		|
		|	СГРУППИРОВАТЬ ПО
		|		Т.Номенклатура, Т.Характеристика, Т.Склад
		|
		|	ИМЕЮЩИЕ
		|		СУММА(Т.КоличествоНеобеспечено) > 0
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ //свободные количества на складе номенклатуры для заказов с вариантом обеспечения ""Требуется""
		|		Т.Номенклатура             КАК Номенклатура,
		|		Т.Характеристика           КАК Характеристика,
		|		Т.Склад                    КАК Склад,
		|
		|		ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеПолучатель,
		|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)           КАК Назначение,
		|
		|		Т.ВНаличииОстаток
		|			- Т.ВРезервеСоСкладаОстаток
		|			- Т.ВРезервеПодЗаказОстаток                        КАК Обеспечено
		|	ИЗ
		|		РегистрНакопления.СвободныеОстатки.Остатки(,
		|			(Номенклатура, Характеристика, Склад) В(
		|				ВЫБРАТЬ РАЗЛИЧНЫЕ
		|					Т.Номенклатура   КАК Номенклатура,
		|					Т.Характеристика КАК Характеристика,
		|					Т.Склад          КАК Склад
		|				ИЗ
		|					РегистрНакопления.ГрафикОтгрузкиТоваров КАК Т
		|				ГДЕ
		|					Т.Склад = &Склад
		|					И Т.Активность
		|					И Т.КоличествоНеОбеспечено <> 0
		|					И &ЗаСчетОстатка
		|				СГРУППИРОВАТЬ ПО
		|					Т.Номенклатура, Т.Характеристика, Т.Склад
		|				ИМЕЮЩИЕ
		|					СУММА(Т.КоличествоНеобеспечено) > 0)) КАК Т
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ //свободные количества на складе и в заказах на поставку обособленных товаров
		|		Т.Номенклатура             КАК Номенклатура,
		|		Т.Характеристика           КАК Характеристика,
		|		Т.Склад                    КАК Склад,
		|
		|		ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеПолучатель,
		|		Т.Назначение                                           КАК Назначение,
		|
		|		Т.ПотребностьОстаток - Т.КЗаказуОстаток КАК Обеспечено
		|	ИЗ
		|		РегистрНакопления.ОбеспечениеЗаказов.Остатки(, Склад = &Склад) КАК Т
		|
		|	ГДЕ
		|		Т.КЗаказуОстаток > 0
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ //свободные количества в заказах на поставку работ
		|		Т.Номенклатура                           КАК Номенклатура,
		|		Т.Характеристика                         КАК Характеристика,
		|		ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
		|
		|		Т.Подразделение                          КАК ПодразделениеПолучатель,
		|		Т.Назначение                             КАК Назначение,
		|
		|		СУММА(Т.КОбеспечению)                    КАК Обеспечено
		|	ИЗ
		|		РегистрНакопления.ОбеспечениеЗаказовРаботами КАК Т
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОбеспечениеЗаказовРаботами.Остатки КАК ТаблицаОстатки
		|			ПО Т.Номенклатура   = ТаблицаОстатки.Номенклатура
		|			 И Т.Характеристика = ТаблицаОстатки.Характеристика
		|			 И Т.Подразделение  = ТаблицаОстатки.Подразделение
		|			 И Т.Назначение     = ТаблицаОстатки.Назначение
		|
		|	ГДЕ
		|		ТаблицаОстатки.КОбеспечениюОстаток > 0
		|		И Т.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И Т.Активность
		|
		|	СГРУППИРОВАТЬ ПО
		|		Т.Номенклатура, Т.Характеристика, Т.Подразделение, Т.Назначение
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ // количество к заказу для поддержания запасов в текущем сеансе рабооты с обработкой формирования заказов
		|		Т.Номенклатура             КАК Номенклатура,
		|		Т.Характеристика           КАК Характеристика,
		|		Т.Склад                    КАК Склад,
		|
		|		ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеПолучатель,
		|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)           КАК Назначение,
		|
		|		Т.Количество                                           КАК Обеспечено
		|	ИЗ
		|		ВтЗапасыКЗаказу КАК Т) КАК Т
		|
		|СГРУППИРОВАТЬ ПО
		|	Т.Номенклатура, Т.Характеристика, Т.Склад, Т.ПодразделениеПолучатель, Т.Назначение
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение, ПодразделениеПолучатель
		|;
		|
		|//////////////////////////////////////////////////////////
		|";

	Возврат Текст;

КонецФункции

Процедура РаспределитьКоличество(Коллекция, Таблица, СтрокаКлюча, ИмяПоляКоличество, ИмяПоляНеБолее)

	ПоляКлюча = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаКлюча);
	ИндексПриемник = 0;
	Индекс = 0;
	СравнениеЗначений = Новый СравнениеЗначений();
	Пока Индекс < Таблица.Количество() И ИндексПриемник < Коллекция.Количество() Цикл

		Строка = Таблица[Индекс];

		Если ИндексПриемник < Коллекция.Количество() Тогда

			СтрокаПриемник = Коллекция[ИндексПриемник];

			РезультатСравненияКлюча = 0;
			Для Каждого Поле Из ПоляКлюча Цикл

				РезультатСравненияПоля = СравнениеЗначений.Сравнить(Строка[Поле], СтрокаПриемник[Поле]);
				Если РезультатСравненияПоля < 0 Тогда
					РезультатСравненияКлюча = -1;
					Прервать;
				ИначеЕсли РезультатСравненияПоля > 0 Тогда
					РезультатСравненияКлюча = 1;
					Прервать;
				КонецЕсли;

			КонецЦикла;

		Иначе
			РезультатСравненияКлюча = 1;
		КонецЕсли;

		Если РезультатСравненияКлюча < 0 Тогда

			Индекс = Индекс + 1;

		ИначеЕсли РезультатСравненияКлюча > 0 Тогда

			ИндексПриемник = ИндексПриемник + 1;

		Иначе

			СтрокаПриемник[ИмяПоляКоличество] =Мин(СтрокаПриемник[ИмяПоляНеБолее], Строка[ИмяПоляКоличество]);
			Строка[ИмяПоляКоличество] = Строка[ИмяПоляКоличество] - СтрокаПриемник[ИмяПоляКоличество];
			ИндексПриемник = ИндексПриемник + 1;

		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

Функция КЗаказуДляОбеспеченияЗаказов(Состояние)

	КЗаказу = Состояние.Требуется - Состояние.Обеспечено;
	Отметка = КЗаказу > 0;
	Возврат Новый Структура("КЗаказу, Отметка", КЗаказу, Отметка);

КонецФункции

Функция ТекстЗаСчетОстатка()

	Возврат НСтр("ru='За счет остатка';uk='За рахунок залишку'");

КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
