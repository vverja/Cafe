
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);

	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);
	
	// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом
	
	// МенюОтчеты
	МенюОтчеты.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюОтчеты);
	// Конец МенюОтчеты
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	Элементы.ГруппаПараметрыПроизводственногоПодразделения.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьПроизводство");
	Элементы.ГруппаПараметрыОбособленногоУчета.Видимость = ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоПодразделениямМенеджерам");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	
	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ПеречислениеСсылка.ВариантыОбособленногоУчетаТоваров") Тогда
		
		Модифицированность = Истина;
		Объект.ВариантОбособленногоУчетаТоваров = ВыбранноеЗначение;
		ЗаполнитьПредставлениеПараметров();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	Оповестить("Запись_СтруктураПредприятия");
	
	
	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект);
	
	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтаФорма, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы


#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств(Команда)
	
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПараметрыПроизводственногоПодразделения(Команда)
	
	ПараметрыПроизводства = Новый Структура("ГрафикРаботы,ИнтервалПланирования,
											|НачалоИнтервалаПланирования,ОкончаниеИнтервалаПланирования,
											|УправлениеМаршрутнымиЛистами,СпособПооперационногоУправления,
											|ЗаполнениеДоступностиДляРасписанияРЦКоличествоИнтервалов,
											|ЗаполнениеДоступностиДляРасписанияРЦЕдиницаВремени,
											|ЗаполнениеДоступностиДляРасписанияРЦНапоминаниеДней,
											|ЗаполнениеДоступностиДляГрафикаПроизводстваКоличествоИнтервалов,
											|ЗаполнениеДоступностиДляГрафикаПроизводстваЕдиницаВремени,
											|ЗаполнениеДоступностиДляГрафикаПроизводстваНапоминаниеДней,
											|ВремяНаРегистрациюВыполнения, ВремяНаРегистрациюВыполненияЕдИзм,
											|ПроизводственноеПодразделение, ПроизводствоПоЗаказам, ПроизводствоБезЗаказов,
											|ИспользуетсяСписаниеЗатратНаВыпуск, ПодразделениеДиспетчер,
											|СпособПолученияПолуфабрикатов");
											
	ЗаполнитьЗначенияСвойств(ПараметрыПроизводства, Объект);
	
	ПараметрыПроизводства.Вставить("СкладМатериалов", СкладМатериалов);
	
	ПараметрыФормы = Новый Структура("ПараметрыПроизводства,Ссылка,ТолькоПросмотр", ПараметрыПроизводства, Объект.Ссылка,ТолькоПросмотр);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПараметрыПроизводственногоПодразделенияЗавершение", ЭтотОбъект);
	ОткрытьФорму("Справочник.СтруктураПредприятия.Форма.ПараметрыПроизводственногоПодразделения", ПараметрыФормы, ЭтаФорма,,,, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыОбособленногоУчетаТоваров(Команда)
	
	ПараметрыФормы = Новый Структура("ВариантОбособленногоУчетаТоваров", Объект.ВариантОбособленногоУчетаТоваров);
	ОткрытьФорму("Справочник.СтруктураПредприятия.Форма.ПараметрыОбособленногоУчетаТоваров", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
//Конец ИнтеграцияС1СДокументооборотом

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	ЗаполнитьСкладМатериалов();
	ЗаполнитьПредставлениеПараметров();
	
	
КонецПроцедуры

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ЗаполнитьСкладМатериалов()
	
	
	Возврат; // В УТ обработчик пустой
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыПроизводственногоПодразделенияЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт

	Если РезультатЗакрытия <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(Объект, РезультатЗакрытия);
		СкладМатериалов = РезультатЗакрытия.СкладМатериалов;
		ЗаполнитьПредставлениеПараметров();
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПредставлениеПараметров()
	
	ЭтоКА = ПолучитьФункциональнуюОпцию("КомплекснаяАвтоматизация");
	
	Если Объект.ПодразделениеДиспетчер И 
		Объект.ПроизводствоПоЗаказам И
		Объект.ПроизводствоБезЗаказов И Не ЭтоКА Тогда
		ПредставлениеПроизводственногоПодразделения =
			НСтр("ru='Подразделение диспетчирует заказы на производство, производит продукцию по заказам и без заказов на производство.';uk='Підрозділ диспетчує замовлення на виробництво, виробляє продукцію по замовленнях і без замовлень на виробництво.'");
	ИначеЕсли Объект.ПодразделениеДиспетчер И 
		Объект.ПроизводствоПоЗаказам И
		Не Объект.ПроизводствоБезЗаказов И Не ЭтоКА Тогда
		ПредставлениеПроизводственногоПодразделения =
			НСтр("ru='Подразделение диспетчирует заказы на производство и производит продукцию по заказам.';uk='Підрозділ диспетчує замовлення на виробництво і виготовляє продукцію по замовленнях.'");
	ИначеЕсли Объект.ПодразделениеДиспетчер И 
		Не Объект.ПроизводствоПоЗаказам И
		Объект.ПроизводствоБезЗаказов И Не ЭтоКА Тогда
		ПредставлениеПроизводственногоПодразделения =
			НСтр("ru='Подразделение диспетчирует заказы на производство и производит продукцию без заказов.';uk='Підрозділ диспетчує замовлення на виробництво і виробляє продукцію без замовлень.'");
	ИначеЕсли Объект.ПодразделениеДиспетчер И 
		Не Объект.ПроизводствоПоЗаказам И
		Не Объект.ПроизводствоБезЗаказов И Не ЭтоКА Тогда
		ПредставлениеПроизводственногоПодразделения =
			НСтр("ru='Подразделение диспетчирует заказы на производство.';uk='Підрозділ диспетчує замовлення на виробництво.'");
	ИначеЕсли Не Объект.ПодразделениеДиспетчер И 
		Объект.ПроизводствоПоЗаказам И
		Объект.ПроизводствоБезЗаказов И Не ЭтоКА Тогда
		ПредставлениеПроизводственногоПодразделения =
			НСтр("ru='Подразделение производит продукцию по заказам и без заказов на производство.';uk='Підрозділ виробляє продукцію по замовленнях і без замовлень на виробництво.'");
	ИначеЕсли Не Объект.ПодразделениеДиспетчер И 
		Объект.ПроизводствоПоЗаказам И
		Не Объект.ПроизводствоБезЗаказов И Не ЭтоКА Тогда
		ПредставлениеПроизводственногоПодразделения =
			НСтр("ru='Подразделение производит продукцию по заказам на производство.';uk='Підрозділ виробляє продукцію по замовленнях на виробництво.'");
	ИначеЕсли Не Объект.ПодразделениеДиспетчер И 
		Не Объект.ПроизводствоПоЗаказам И
		Объект.ПроизводствоБезЗаказов И Не ЭтоКА Тогда
		ПредставлениеПроизводственногоПодразделения =
			НСтр("ru='Подразделение производит продукцию без заказов на производство.';uk='Підрозділ виробляє продукцію без замовлень на виробництво.'");
	ИначеЕсли Не Объект.ПодразделениеДиспетчер И 
		Не Объект.ПроизводствоПоЗаказам И
		Объект.ПроизводствоБезЗаказов И ЭтоКА Тогда
		ПредставлениеПроизводственногоПодразделения =
			НСтр("ru='Подразделение производит продукцию.';uk='Підрозділ виробляє продукцію.'");
	Иначе
		ПредставлениеПроизводственногоПодразделения =
			НСтр("ru='Подразделение не является производственным.';uk='Підрозділ не є виробничим.'");
	КонецЕсли;
	
	Если Объект.ВариантОбособленногоУчетаТоваров = Перечисления.ВариантыОбособленногоУчетаТоваров.НеВедется Тогда
		ПредставлениеОбособленногоУчетаТоваров = НСтр("ru='Обособленный учет товаров не ведется.';uk='Відокремлений облік товарів не ведеться.'");
	ИначеЕсли Объект.ВариантОбособленногоУчетаТоваров = Перечисления.ВариантыОбособленногоУчетаТоваров.ПоПодразделению Тогда
		ПредставлениеОбособленногоУчетаТоваров = НСтр("ru='Обособленный учет товаров ведется по подразделению.';uk='Відокремлений облік товарів ведеться по підрозділу.'");
	ИначеЕсли Объект.ВариантОбособленногоУчетаТоваров = Перечисления.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения Тогда
		ПредставлениеОбособленногоУчетаТоваров = НСтр("ru='Обособленный учет товаров ведется по менеджерам подразделения.';uk='Відокремлений облік товарів ведеться по менеджерах підрозділів.'");
	КонецЕсли;
	
КонецПроцедуры

//Конец ИнтеграцияС1СДокументооборотом

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	МенюОтчетыКлиент.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры


#КонецОбласти
