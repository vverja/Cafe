
&НаКлиенте
Перем КэшированныеЗначения;
&НаКлиенте
Перем ВопросЗадавали;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ЦветЗеленый = ЦветаСтиля.РезультатУспехЦвет;
	ЦветКрасный = ЦветаСтиля.РезультатПроблемаЦвет;
	
	ЗаданиеНаПеревозку    = Параметры.ЗаданиеНаПеревозку;
	Распоряжение          = Параметры.Распоряжение;
	Склад                 = Параметры.Склад;
	ТранспортноеСредство  = Параметры.ТранспортноеСредство;
	ПолучательОтправитель = Параметры.ПолучательОтправитель;
	
	Если ЗначениеЗаполнено(ТранспортноеСредство) Тогда
		РеквизитыТС = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТранспортноеСредство, "ГрузоподъемностьВТоннах, ВместимостьВКубическихМетрах");
		ГрузоподъемностьВТоннах      = РеквизитыТС.ГрузоподъемностьВТоннах;
		ВместимостьВКубическихМетрах = РеквизитыТС.ВместимостьВКубическихМетрах;
	КонецЕсли;
	
	КоэффициентПересчетаВТонны           = ДоставкаТоваров.КоэффициентПересчетаВТонны();
	КоэффициентПересчетаВКубическиеМетры = ДоставкаТоваров.КоэффициентПересчетаВКубическиеМетры();
	
	ВесЗадания                   = Параметры.ВесЗадания;
	ОбъемЗадания                 = Параметры.ОбъемЗадания;
	
	НедогрузВес   = ГрузоподъемностьВТоннах - ВесЗадания;
	НедогрузОбъем = ВместимостьВКубическихМетрах - ОбъемЗадания;
	
#Область ЗаполнениеТоварыКДоставке
	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТоварыКДоставке.Номенклатура,
	|	ТоварыКДоставке.Характеристика,
	|	ТоварыКДоставке.Назначение,
	|	ТоварыКДоставке.Серия,
	|	ТоварыКДоставке.Количество КАК Количество,
	|	ТоварыКДоставке.ВсеТовары КАК ВсеТовары
	|ПОМЕСТИТЬ ТоварыКДоставке
	|ИЗ
	|	&ТоварыКДоставке КАК ТоварыКДоставке";		
	Запрос.УстановитьПараметр("ТоварыКДоставке", ПолучитьИзВременногоХранилища(Параметры.АдресСпискаТоваровКДоставке));
	
	ТекстЗапроса = ТекстЗапроса + ДоставкаТоваров.РазделительЗапроса();
	
	Если ДоставкаТоваровКлиентСервер.ЭтоРаспоряжениеНаДоставкуНаНашСклад(Распоряжение) Тогда
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Распоряжение);
		ТекстЗапросаТоварыКДоставкеНаНашСклад = МенеджерОбъекта.ТекстЗапросаТоварыКДоставке();
		ПоложениеИЗ = Найти(ТекстЗапросаТоварыКДоставкеНаНашСклад, "ИЗ");
		ТекстЗапроса = ТекстЗапроса + Лев(ТекстЗапросаТоварыКДоставкеНаНашСклад,ПоложениеИЗ - 1)
			+ " ПОМЕСТИТЬ ТоварыРаспоряжения
			  |" + Прав(ТекстЗапросаТоварыКДоставкеНаНашСклад,СтрДлина(ТекстЗапросаТоварыКДоставкеНаНашСклад) - ПоложениеИЗ + 1);
	Иначе
		ТекстЗапроса = ТекстЗапроса +
		"ВЫБРАТЬ
		|	Т.Номенклатура,
		|	Т.Характеристика,
		|	Т.Назначение,
		|	Т.Серия,
		|	Т.КОтгрузкеПриход КАК Количество
		|ПОМЕСТИТЬ ТоварыРаспоряжения
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.Обороты(
		|			,
		|			,
		|			,
		|			ДокументОтгрузки = &Распоряжение
		|				И Склад = &Склад) КАК Т
		|ГДЕ
		|	Т.КОтгрузкеПриход > 0"
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + ДоставкаТоваров.РазделительЗапроса() +
	"ВЫБРАТЬ
	|	ТоварыКДоставке.ВсеТовары,
	|	Т.Номенклатура,
	|	Т.Характеристика,
	|	Т.Назначение,
	|	Т.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Т.Серия,
	|	ВЫБОР
	|		КОГДА ТоварыКДоставке.ВсеТовары
	|				ИЛИ ТоварыКДоставке.Количество > Т.Количество
	|			ТОГДА Т.Количество
	|		ИНАЧЕ ТоварыКДоставке.Количество
	|	КОНЕЦ КАК Количество,
	|	&ТекстЗапросаВесНоменклатуры * ВЫБОР
	|		КОГДА ТоварыКДоставке.ВсеТовары
	|				ИЛИ ТоварыКДоставке.Количество > Т.Количество
	|			ТОГДА Т.Количество
	|		ИНАЧЕ ТоварыКДоставке.Количество
	|	КОНЕЦ КАК Вес,
	|	&ТекстЗапросаОбъемНоменклатуры * ВЫБОР
	|		КОГДА ТоварыКДоставке.ВсеТовары
	|				ИЛИ ТоварыКДоставке.Количество > Т.Количество
	|			ТОГДА Т.Количество
	|		ИНАЧЕ ТоварыКДоставке.Количество
	|	КОНЕЦ КАК Объем,
	|	Т.Количество КАК КоличествоМаксимум,
	|	Т.Количество * &ТекстЗапросаВесНоменклатуры КАК ВесМаксимум,
	|	Т.Количество * &ТекстЗапросаОбъемНоменклатуры КАК ОбъемМаксимум,
	|	&ТекстЗапросаОбъемНоменклатуры КАК ОбъемЕдиницы,
	|	&ТекстЗапросаВесНоменклатуры КАК ВесЕдиницы
	|ИЗ
	|	ТоварыРаспоряжения КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыКДоставке КАК ТоварыКДоставке
	|		ПО (Т.Номенклатура = ТоварыКДоставке.Номенклатура
	|					И Т.Характеристика = ТоварыКДоставке.Характеристика
	|					И Т.Назначение = ТоварыКДоставке.Назначение
	|					И Т.Серия = ТоварыКДоставке.Серия
	|				ИЛИ ТоварыКДоставке.ВсеТовары)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Вес УБЫВ,
	|	Объем УБЫВ";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаВесНоменклатуры",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
		"Т.Номенклатура.ЕдиницаИзмерения",
		"Т.Номенклатура"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ТекстЗапросаОбъемНоменклатуры",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаОбъемУпаковки(
		"Т.Номенклатура.ЕдиницаИзмерения",
		"Т.Номенклатура"));
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ЗаданиеНаПеревозку",ЗаданиеНаПеревозку);
	Запрос.УстановитьПараметр("Склад",Склад);
	Запрос.УстановитьПараметр("Распоряжение",Распоряжение);
	Запрос.УстановитьПараметр("Ссылки",Распоряжение);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить(); 
	
	Если РезультатЗапроса.Количество() = 0 Тогда
		ТекстИсключения = НСтр("ru='По распоряжению нет товаров, подлежащих доставке.';uk='За розпорядженням немає товарів, що підлягають доставці.'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
		
	ТоварыКДоставке.Загрузить(РезультатЗапроса);
#КонецОбласти
	
	
	
	ЗаголовокВес = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Вес, %1';uk='Вага, %1'"),
		Константы.ЕдиницаИзмеренияВеса.Получить());
	ЗаголовокОбъем = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Объем, %1';uk='Об''єм, %1'"),
		Константы.ЕдиницаИзмеренияОбъема.Получить());
	Элементы.ТоварыКДоставкеВес.Заголовок = ЗаголовокВес;
	Элементы.ТоварыКДоставкеОбъем.Заголовок = ЗаголовокОбъем;
	
	ЗаголовокРаспоряжения = Новый Массив;
	Если ДоставкаТоваровКлиентСервер.ЭтоРаспоряжениеНаДоставкуНаНашСклад(Распоряжение) Тогда
		ЗаголовокРаспоряжения.Добавить(НСтр("ru='Отправитель, распоряжение, склад: ';uk='Відправник, розпорядження, склад: '"));
	Иначе
		ЗаголовокРаспоряжения.Добавить(НСтр("ru='Получатель, распоряжение, склад: ';uk='Одержувач, розпорядження, склад: '"));
	КонецЕсли;
	ЗаголовокРаспоряжения.Добавить(Новый ФорматированнаяСтрока(Строка(ПолучательОтправитель),,,,"ПоказатьПолучателя"));
	ЗаголовокРаспоряжения.Добавить(", ");
	ЗаголовокРаспоряжения.Добавить(Новый ФорматированнаяСтрока(Строка(Распоряжение),,,,"ПоказатьРаспоряжение"));
	ЗаголовокРаспоряжения.Добавить(", ");
	ЗаголовокРаспоряжения.Добавить(Новый ФорматированнаяСтрока(Строка(Склад),,,,"ПоказатьСклад"));
	
	Элементы.ДекорацияРаспоряжениеСклад.Заголовок = Новый ФорматированнаяСтрока(ЗаголовокРаспоряжения);
	
	ЗаголовокЗадания = Новый Массив;
	Если ЗначениеЗаполнено(ТранспортноеСредство) Тогда
		ЗаголовокЗадания.Добавить(Новый ФорматированнаяСтрока(Строка(ТранспортноеСредство),,,,"ПоказатьТранспортноеСредство"));
	КонецЕсли;
	Если ЗначениеЗаполнено(Параметры.ДатаВремяРейсаПланС) Тогда
		Если ЗначениеЗаполнено(ЗаголовокЗадания) Тогда
			ЗаголовокЗадания.Добавить(", ");
		КонецЕсли;
		ЗаголовокЗадания.Добавить(Формат(Параметры.ДатаВремяРейсаПланС, "ДФ='dd.MM.yyyy HH:mm'"));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗаданиеНаПеревозку) Тогда
		Если ЗначениеЗаполнено(ЗаголовокЗадания) Тогда
			ЗаголовокЗадания.Добавить(", ");
		КонецЕсли;
		ЗаголовокЗадания.Добавить(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗаданиеНаПеревозку, "Номер"));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗаголовокЗадания) Тогда
		ЗаголовокЗадания.Вставить(0,НСтр("ru='Рейс: ';uk='Рейс: '"));
		Элементы.ДекорацияРейс.Заголовок = Новый ФорматированнаяСтрока(ЗаголовокЗадания);
	Иначе
		Элементы.ДекорацияРейс.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	КэшированныеЗначения = Новый Структура("Количество, Объем, Вес");
	ГуидВладельца = ВладелецФормы.УникальныйИдентификатор;
	СформироватьНадписьНеДогрузПерегруз();
	ВопросЗадавали = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Если Не Модифицированность
		Или ВопросЗадавали Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	ТекстВопроса = НСтр("ru='Перенести результаты в задание на перевозку?';uk='Перенести результати в завдання на перевезення?'");
	ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса,РежимДиалогаВопрос.ДаНетОтмена);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		Результат = СохранитьРезультаты();
		ВопросЗадавали = Истина;
		ОповеститьОВыборе(Результат);
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		ВопросЗадавали = Истина;
		Закрыть();
	Иначе
		ВопросЗадавали = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапки

&НаКлиенте
Процедура ДекорацияРаспоряжениеСкладОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ПоказатьРаспоряжение" Тогда
		ПоказатьЗначение(,Распоряжение);
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ПоказатьСклад" Тогда
		ПоказатьЗначение(, Склад);
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ПоказатьПолучателя" Тогда
		ПоказатьЗначение(, ПолучательОтправитель);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРейсОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ПоказатьТранспортноеСредство" Тогда
		ПоказатьЗначение(,ТранспортноеСредство);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	Результат = СохранитьРезультаты();
	ВопросЗадавали = Истина;
	ОповеститьОВыборе(Результат);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТоварыКДоставке

&НаКлиенте
Процедура ТоварыКДоставкеКоличествоПриИзменении(Элемент)
	КоличествоОбъемВесПриИзменении("Количество");
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКДоставкеВесПриИзменении(Элемент)
	КоличествоОбъемВесПриИзменении("Вес");
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКДоставкеОбъемПриИзменении(Элемент)
	КоличествоОбъемВесПриИзменении("Объем");
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКДоставкеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущаяСтрока = Элементы.ТоварыКДоставке.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(КэшированныеЗначения, Элементы.ТоварыКДоставке.ТекущиеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКДоставкеПередУдалением(Элемент, Отказ)
	Вес   = 0;
	Объем = 0;
	
	Для каждого СтрМас из Элементы.ТоварыКДоставке.ВыделенныеСтроки Цикл
		ТекущаяСтрока = ТоварыКДоставке.НайтиПоИдентификатору(СтрМас);
		Вес = Вес + ТекущаяСтрока.Вес;
		Объем = Объем + ТекущаяСтрока.Объем;
	КонецЦикла;
	
	КэшированныеЗначения.Вес = Вес;
	КэшированныеЗначения.Объем = Объем;
	КэшированныеЗначения.Количество = 0;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКДоставкеПослеУдаления(Элемент)
	НедогрузВес   = НедогрузВес + КэшированныеЗначения.Вес * КоэффициентПересчетаВТонны;
	НедогрузОбъем = НедогрузОбъем + КэшированныеЗначения.Объем * КоэффициентПересчетаВКубическиеМетры; 
	СформироватьНадписьНеДогрузПерегруз();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКДоставкеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.ТоварыКДоставкеНоменклатура
		Или Поле = Элементы.ТоварыКДоставкеХарактеристика
  		Или Поле = Элементы.ТоварыКДоставкеНазначение
		Или Поле = Элементы.ТоварыКДоставкеСерия Тогда
		ПоказатьЗначение(,Элементы.ТоварыКДоставке.ТекущиеДанные.Номенклатура);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКДоставкеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура КоличествоОбъемВесПриИзменении(ИмяПараметра)
	
	ТекущаяСтрока = Элементы.ТоварыКДоставке.ТекущиеДанные;
	
	Если КэшированныеЗначения[ИмяПараметра] = ТекущаяСтрока[ИмяПараметра] Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущаяСтрока[ИмяПараметра] > ТекущаяСтрока[ИмяПараметра + "Максимум"] Тогда
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Превышено допустимое значение поля ""%1"", изменения отменены.';uk='Перевищено допустиме значення поля ""%1"", зміни скасовані.'"),
			ИмяПараметра);
		ПоказатьПредупреждение(,Текст);
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, КэшированныеЗначения);
		Возврат;
	КонецЕсли;
	
	Если ИмяПараметра <> "Количество" Тогда
		ТекущаяСтрока.Количество = ТекущаяСтрока[ИмяПараметра] / ТекущаяСтрока[ИмяПараметра + "Единицы"];
	КонецЕсли;
	
	ТекущаяСтрока.Вес = ТекущаяСтрока.Количество * ТекущаяСтрока.ВесЕдиницы;
	ТекущаяСтрока.Объем = ТекущаяСтрока.Количество * ТекущаяСтрока.ОбъемЕдиницы;
	
	НедогрузВес   = НедогрузВес + (КэшированныеЗначения.Вес - ТекущаяСтрока.Вес) * КоэффициентПересчетаВТонны;
	НедогрузОбъем = НедогрузОбъем + (КэшированныеЗначения.Объем - ТекущаяСтрока.Объем) * КоэффициентПересчетаВКубическиеМетры; 
	
	СформироватьНадписьНеДогрузПерегруз();
	
КонецПроцедуры

&НаСервере
Функция СохранитьРезультаты()
	
	НаборРегистра = РегистрыСведений.ТоварыКДоставке.СоздатьНаборЗаписей();
	
	ВсеТовары = ПроверитьПолнуюДоставку();
	
	Если ВсеТовары Тогда
		
		НоваяСтрока = НаборРегистра.Добавить();
		НоваяСтрока.ЗаданиеНаПеревозку = ЗаданиеНаПеревозку;
		НоваяСтрока.Склад              = Склад;
		НоваяСтрока.Распоряжение       = Распоряжение;
		НоваяСтрока.ВсеТовары          = Истина;
		НоваяСтрока.ПолучательОтправитель = ПолучательОтправитель;
	Иначе
		Для каждого СтрТабл из ТоварыКДоставке Цикл
			Если СтрТабл.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			НоваяСтрока = НаборРегистра.Добавить();
			НоваяСтрока.ЗаданиеНаПеревозку = ЗаданиеНаПеревозку;
			НоваяСтрока.Склад              = Склад;
			НоваяСтрока.Распоряжение       = Распоряжение;
			НоваяСтрока.ВсеТовары          = Ложь;
			НоваяСтрока.ПолучательОтправитель= ПолучательОтправитель;
			
			НоваяСтрока.Номенклатура   = СтрТабл.Номенклатура;
			НоваяСтрока.Характеристика = СтрТабл.Характеристика;
			НоваяСтрока.Серия          = СтрТабл.Серия;
			НоваяСтрока.Назначение     = СтрТабл.Назначение;
			НоваяСтрока.Количество     = СтрТабл.Количество;
		КонецЦикла;
	КонецЕсли;
	
	АдресТоварыКДоставке = ПоместитьВоВременноеХранилище(НаборРегистра.Выгрузить(), ГуидВладельца);
	
	Результат = Новый Структура;
	Результат.Вставить("АдресТоварыКДоставке", АдресТоварыКДоставке);
	Результат.Вставить("ВесРаспоряжения", ТоварыКДоставке.Итог("Вес"));
	Результат.Вставить("ОбъемРаспоряжения", ТоварыКДоставке.Итог("Объем"));
	
	Возврат Результат;                      
	
КонецФункции

&НаКлиенте 
Процедура СформироватьНадписьНеДогрузПерегруз()
	
	НадписьНедогрузПерегрузМассив = Новый Массив;
	НадписьНедогрузПерегрузМассив.Добавить(НСтр("ru='По весу ';uk='За вагою '"));
	
	Если НедогрузВес >= 0 Тогда
		Текст = НСтр("ru='недогруз  %Количество% т';uk='недовантаження %Количество% т'");
		Текст = СтрЗаменить(Текст, "%Количество%", НедогрузВес); 
		НадписьНедогрузПерегрузМассив.Добавить(Новый ФорматированнаяСтрока(Текст,,ЦветЗеленый));
	Иначе
		Текст = НСтр("ru='перегруз  %Количество% т';uk='перевантаження %Количество% т'");
		Текст = СтрЗаменить(Текст, "%Количество%", -НедогрузВес); 
		НадписьНедогрузПерегрузМассив.Добавить(Новый ФорматированнаяСтрока(Текст,,ЦветКрасный));
	КонецЕсли;
	
	НадписьНедогрузПерегрузМассив.Добавить(НСтр("ru='. По объему ';uk='. По об''єму '"));
	
	Если НедогрузОбъем >= 0 Тогда
		Текст = НСтр("ru='недогруз  %Количество% м3';uk='недовантаження %Количество% м3'");
		Текст = СтрЗаменить(Текст, "%Количество%", НедогрузОбъем); 
		НадписьНедогрузПерегрузМассив.Добавить(Новый ФорматированнаяСтрока(Текст,,ЦветЗеленый));
	Иначе
		Текст = НСтр("ru='перегруз  %Количество% м3';uk='перевантаження %Количество% м3'");
		Текст = СтрЗаменить(Текст, "%Количество%", -НедогрузОбъем); 
		НадписьНедогрузПерегрузМассив.Добавить(Новый ФорматированнаяСтрока(Текст,,ЦветКрасный));
	КонецЕсли;
	
	НадписьНедогрузПерегруз = Новый ФорматированнаяСтрока(НадписьНедогрузПерегрузМассив);
КонецПроцедуры

&НаСервере
Функция ПроверитьПолнуюДоставку()
	
	СлужебнаяТаблицаРаспоряжение.Очистить();
	НоваяСтрока = СлужебнаяТаблицаРаспоряжение.Добавить();
	НоваяСтрока.Распоряжение = Распоряжение;
	НоваяСтрока.Склад = Склад;
	НоваяСтрока.НомерСтроки = 1;
	
	ТаблицаТоварыКДоставке = ТоварыКДоставке.Выгрузить();
	ТаблицаТоварыКДоставке.Колонки.Добавить("Распоряжение", Метаданные.ОпределяемыеТипы.РаспоряжениеНаДоставку.Тип);
	ТаблицаТоварыКДоставке.Колонки.Добавить("ПолучательОтправитель", Метаданные.ОпределяемыеТипы.ОтправительПолучательДоставки.Тип);
	ТаблицаТоварыКДоставке.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"));
	ТаблицаТоварыКДоставке.Колонки.Добавить("ВсеТовары", Новый ОписаниеТипов("Булево"));
	ТаблицаТоварыКДоставке.ЗаполнитьЗначения(Распоряжение,"Распоряжение");
	ТаблицаТоварыКДоставке.ЗаполнитьЗначения(Склад,"Склад");
	ТаблицаТоварыКДоставке.ЗаполнитьЗначения(ПолучательОтправитель,"ПолучательОтправитель");
	ДоставкаТоваров.ЗаполнитьПризнакДоставляетсяПолностью(ТаблицаТоварыКДоставке, СлужебнаяТаблицаРаспоряжение);
	
	Возврат НоваяСтрока.ДоставляетсяПолностью;

КонецФункции
#КонецОбласти