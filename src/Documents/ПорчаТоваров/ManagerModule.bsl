#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт


	Документы.УстановкаЦенНоменклатуры.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);

	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);


КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.ПорчаТоваров) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ПорчаТоваров.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.ПорчаТоваров);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьКачествоТоваров";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуОстаткиТоваровОрганизаций(КомандыОтчетов);

КонецПроцедуры


#Область Серии

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад,Дата";
	
	Возврат ИменаРеквизитов;
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение
//			Тип Структура
//				Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ПорчаТоваров";
	
	ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Склад, Ложь);
	
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПустаяСсылка());
	
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("НоменклатураОприходование");
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("ХарактеристикаОприходование");
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Назначение");
	
	ПараметрыУказанияСерий.ТолькоСерииДляСебестоимости = Истина;
	ПараметрыУказанияСерий.Дата = Объект.Дата;
	
	Возврат ПараметрыУказанияСерий;
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|					ТОГДА ВЫБОР
	|							КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 14
	|							ИНАЧЕ 13
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|			ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|		ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|			И (ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

// Возвращает текст запроса для получениях доступных назначений
//	Параметры:
//		ПараметрыФормированияЗапроса - Структура - параметры для формирования текстов запросов
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаДоступныхНазначений(ПараметрыФормированияЗапроса) Экспорт
	
	Возврат Справочники.Назначения.ТекстЗапросаВсехНазначений(ПараметрыФормированияЗапроса);
	
КонецФункции


// Возвращает текст запроса для записи данных в регистр сведений ДанныеВнутреннихДокументов
//
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаДанныеВнутреннихДокументов() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер,
	|	Документ.Дата,
	|	Документ.Организация,
	|	Документ.Склад,
	|	Документ.Подразделение,
	|	Документ.Ответственный,
	|	Документ.Комментарий,
	|	"""" КАК Дополнительно,
	|	ВЫБОР
	|		КОГДА Документ.ПриходоватьТоварыПоСебестоимостиСписания
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваров)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваровСПереоценкой)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	Документ.Проведен,
	|	Документ.ПометкаУдаления
	|ИЗ
	|	Документ.ПорчаТоваров КАК Документ
	|ГДЕ
	|	Документ.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	// Создание запроса инициализации движений и заполенение его параметров.
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	// Формирование текста запроса.
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаТоварыКОформлениюИзлишковНедостач(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры);
	
	// Исполнение запроса и выгрузка полученных таблиц для движений.
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка            КАК Ссылка,
	|	ДанныеДокумента.Дата              КАК Период,
	|	ДанныеДокумента.Склад             КАК Склад,
	|	ДанныеДокумента.Организация       КАК Организация,
	|	ДанныеДокумента.Подразделение     КАК Подразделение,
	|	ДанныеДокумента.СтатьяРасходов    КАК СтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходов КАК АналитикаРасходов,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Склад.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|				И ДанныеДокумента.Дата >= ДанныеДокумента.Склад.ДатаНачалаОрдернойСхемыПриОтраженииИзлишковНедостач
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                             КАК ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач,
	|	ДанныеДокумента.ПриходоватьТоварыПоСебестоимостиСписания КАК ПриходПоСебестоимости
	|ИЗ
	|	Документ.ПорчаТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",                Реквизиты.Период);
	Запрос.УстановитьПараметр("Склад",                 Реквизиты.Склад);
	Запрос.УстановитьПараметр("Организация",           Реквизиты.Организация);
	Запрос.УстановитьПараметр("Подразделение",         Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("СтатьяРасходов",        Реквизиты.СтатьяРасходов);
	Запрос.УстановитьПараметр("АналитикаРасходов",     Реквизиты.АналитикаРасходов);
	Запрос.УстановитьПараметр("ПриходПоСебестоимости", Реквизиты.ПриходПоСебестоимости);
	Запрос.УстановитьПараметр("ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач", 
	                                                   Реквизиты.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач);
	
	Если Реквизиты.ПриходПоСебестоимости Тогда
		Запрос.УстановитьПараметр("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПорчаТоваров);
	Иначе
		Запрос.УстановитьПараметр("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПорчаТоваровСПереоценкой);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВалютаУпрУчета",             Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаРеглУчета",            Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ИспользоватьПартионныйУчет", ПолучитьФункциональнуюОпцию("ИспользоватьПартионныйУчет"));
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", 
	                                                        ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов", 
	                                                        ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	
КонецПроцедуры

Функция ИнициализироватьВидыЗапасов(Запрос)

	ЗапросВидовЗапасов = Новый Запрос;
	ЗапросВидовЗапасов.УстановитьПараметр("Ссылка",      Запрос.Параметры.Ссылка);
	ЗапросВидовЗапасов.УстановитьПараметр("Организация", Запрос.Параметры.Организация);
	ЗапросВидовЗапасов.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация                                                         КАК Организация,
	|	ТаблицаВидыЗапасов.ВидЗапасов                                        КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)                             КАК ТипЗапасов,
	|	Неопределено                                                         КАК Комитент,
	|	Неопределено                                                         КАК Соглашение,
	|	Неопределено                                                         КАК Валюта,
	|   ТаблицаВидыЗапасов.ВидЗапасов.НалоговоеНазначение 					 КАК НалоговоеНазначение,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Поставщик                              КАК Поставщик,
	|
	|	ТаблицаВидыЗапасов.ВидЗапасов.ГруппаФинансовогоУчета                 КАК ГруппаФинансовогоУчета,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Подразделение                          КАК Подразделение,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Менеджер                               КАК Менеджер,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Сделка                                 КАК Сделка,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)                         КАК Назначение,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Подразделение.ВариантОбособленногоУчетаТоваров         КАК ВариантОбособленногоУчетаТоваров,
	|	ЕСТЬNULL(ТаблицаВидыЗапасов.ВидЗапасов.Сделка.ОбособленныйУчетТоваровПоСделке, ЛОЖЬ) КАК ОбособленныйУчетТоваровПоСделке,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика) КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.ПорчаТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка";
	
	СоответствиеВидовЗапасов = Новый ТаблицаЗначений;
	СоответствиеВидовЗапасов.Колонки.Добавить("ВидЗапасов",      Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов")); 
	СоответствиеВидовЗапасов.Колонки.Добавить("НовыйВидЗапасов", Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов")); 
	
	Выборка = ЗапросВидовЗапасов.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НовыйВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
			Выборка.Организация,
			Выборка.ХозяйственнаяОперация,
			Выборка);
		НоваяСтрока = СоответствиеВидовЗапасов.Добавить();
		НоваяСтрока.ВидЗапасов      = Выборка.ВидЗапасов;
		НоваяСтрока.НовыйВидЗапасов = НовыйВидЗапасов;
		
	КонецЦикла;
	
	Возврат СоответствиеВидовЗапасов;

КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюИзлишковНедостач(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюИзлишковНедостач";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаТовары.Серия КАК Серия,
	|	&Склад КАК Склад,
	|	ТаблицаТовары.Количество КАК КОформлениюАктов
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	&ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	ТаблицаТовары.НоменклатураОприходование,
	|	ТаблицаТовары.ХарактеристикаОприходование,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ПодНазначение
	|				И ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаТовары.Серия,
	|	&Склад,
	|	ТаблицаТовары.Количество
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	&ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Количество <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции 

Функция ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыНаСкладах";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Назначение,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ТаблицаТовары.Количество               КАК ВНаличии,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|	И ТаблицаТовары.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НоменклатураОприходование,
	|	ТаблицаТовары.ХарактеристикаОприходование,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ПодНазначение
	|				И ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Количество,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|	И ТаблицаТовары.Количество <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СвободныеОстатки";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК ВНаличии,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВРезервеПодЗаказ,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|   И ТаблицаТовары.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.НоменклатураОприходование,
	|	ТаблицаТовары.ХарактеристикаОприходование,
	|	ТаблицаТовары.Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) 
	|				И ТаблицаТовары.ПодНазначение
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Склад КАК Склад
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|	И ТаблицаТовары.Количество <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                        КАК Назначение,
	|	ТаблицаТовары.Серия          КАК Серия,
	|	ТаблицаТовары.Количество     КАК Количество,
	|	&Склад                       КАК Отправитель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтражениеНедостач) КАК СкладскаяОперация,
	|	&Ссылка                      КАК Документ,
	|	&Период                      КАК Период,
	|	НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции 

Процедура УстановитьПараметрСоответствиеВидовЗапасов(Запрос)
	
	Если Запрос.Параметры.Свойство("СоответствиеВидовЗапасов") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СоответствиеВидовЗапасов", ИнициализироватьВидыЗапасов(Запрос));
	
КонецПроцедуры

Функция ТекстЗапросаВтСоответствиеВидовЗапасов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтСоответствиеВидовЗапасов";
	
	УстановитьПараметрСоответствиеВидовЗапасов(Запрос);

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СоответствиеВидовЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	СоответствиеВидовЗапасов.НовыйВидЗапасов КАК НовыйВидЗапасов
	|
	|ПОМЕСТИТЬ ВтСоответствиеВидовЗапасов
	|ИЗ
	|	&СоответствиеВидовЗапасов КАК СоответствиеВидовЗапасов";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции 

Процедура ИнициализироватьКлючиАналитикиНоменклатуры(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос;
	ЗапросАналитик.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросАналитик.УстановитьПараметр("Склад",  Запрос.Параметры.Склад);
	ЗапросАналитик.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Склад          КАК Склад,
	|	Товары.Номенклатура   КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Серия          КАК Серия
	|ИЗ
	|	(
	|		ВЫБРАТЬ
	|			&Склад                                    КАК Склад,
	|			ТаблицаТовары.НоменклатураОприходование   КАК Номенклатура,
	|			ТаблицаТовары.ХарактеристикаОприходование КАК Характеристика,
	|			ТаблицаТовары.Серия                       КАК Серия
	|		ИЗ
	|			Документ.ПорчаТоваров.ВидыЗапасов КАК ТаблицаТовары
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ
	|				РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО
	|				ТаблицаТовары.НоменклатураОприходование = Аналитика.Номенклатура
	|				И ТаблицаТовары.ХарактеристикаОприходование = Аналитика.Характеристика
	|				И ТаблицаТовары.Серия = Аналитика.Серия
	|				И &Склад = Аналитика.Склад
	|		ГДЕ
	|			ТаблицаТовары.Ссылка = &Ссылка
	|			И Аналитика.Номенклатура ЕСТЬ NULL
	|
	|		ОБЪЕДИНИТЬ ВСЕ
	|
	|		ВЫБРАТЬ 
	|			ТаблицаТовары.ВидЗапасов.Комитент                   КАК Склад,
	|			ТаблицаТовары.НоменклатураОприходование             КАК Номенклатура,
	|			ТаблицаТовары.ХарактеристикаОприходование           КАК Характеристика,
	|			ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
	|		ИЗ
	|			Документ.ПорчаТоваров.ВидыЗапасов КАК ТаблицаТовары
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ
	|				РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО
	|				ТаблицаТовары.НоменклатураОприходование = Аналитика.Номенклатура
	|				И ТаблицаТовары.ХарактеристикаОприходование = Аналитика.Характеристика
	|				И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = Аналитика.Серия
	|				И ТаблицаТовары.ВидЗапасов.Комитент = Аналитика.Склад
	|		ГДЕ
	|			ТаблицаТовары.Ссылка = &Ссылка 
	|			И ТаблицаТовары.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) 
	|			И Аналитика.Номенклатура ЕСТЬ NULL
	|
	|		ОБЪЕДИНИТЬ ВСЕ
	|
	|		ВЫБРАТЬ 
	|			ТаблицаТовары.ВидЗапасов.Комитент                   КАК Склад,
	|			Ключи.Номенклатура                                  КАК Номенклатура,
	|			Ключи.Характеристика                                КАК Характеристика,
	|			ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
	|		ИЗ
	|			Документ.ПорчаТоваров.ВидыЗапасов КАК ТаблицаТовары
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|				РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
	|			ПО
	|				ТаблицаТовары.АналитикаУчетаНоменклатуры = Ключи.КлючАналитики
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ
	|				РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО
	|				Ключи.Номенклатура = Аналитика.Номенклатура
	|				И Ключи.Характеристика = Аналитика.Характеристика
	|				И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = Аналитика.Серия
	|				И ТаблицаТовары.ВидЗапасов.Комитент = Аналитика.Склад
	|		ГДЕ
	|			ТаблицаТовары.Ссылка = &Ссылка 
	|			И ТаблицаТовары.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) 
	|			И Аналитика.Номенклатура ЕСТЬ NULL
	|
	|		ОБЪЕДИНИТЬ ВСЕ
	|
	|		ВЫБРАТЬ 
	|			ВидыЗапасовВладельца.Комитент                       КАК Склад,
	|			Ключи.Номенклатура                                  КАК Номенклатура,
	|			Ключи.Характеристика                                КАК Характеристика,
	|			ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
	|		ИЗ
	|			Документ.ПорчаТоваров.ВидыЗапасов КАК ТаблицаТовары
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовВладельца
	|			ПО ТаблицаТовары.ВидЗапасов.ВидЗапасовВладельца = ВидыЗапасовВладельца.Ссылка
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|				РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
	|			ПО
	|				ТаблицаТовары.АналитикаУчетаНоменклатуры = Ключи.КлючАналитики
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ
	|				РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО
	|				Ключи.Номенклатура = Аналитика.Номенклатура
	|				И Ключи.Характеристика = Аналитика.Характеристика
	|				И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = Аналитика.Серия
	|				И ВидыЗапасовВладельца.Комитент = Аналитика.Склад
	|		ГДЕ
	|			ТаблицаТовары.Ссылка = &Ссылка 
	|			И ТаблицаТовары.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			И ВидыЗапасовВладельца.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			И Аналитика.Номенклатура ЕСТЬ NULL
	|	) КАК Товары";
	
	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка)
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры 

Функция ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтВидыЗапасов";
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтСоответствиеВидовЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтСоответствиеВидовЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.НоменклатураОприходование КАК НоменклатураОприходование,
	|	ТаблицаВидыЗапасов.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|	Ключи.КлючАналитики КАК АналитикаОприходование,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаСписание,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	СправочникВидЗапасов.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	СправочникВидЗапасов.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	СправочникВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	СправочникВидЗапасов.Валюта КАК Валюта,
	|	ЕСТЬNULL(ВтСоответствиеВидовЗапасов.НовыйВидЗапасов, ТаблицаВидыЗапасов.ВидЗапасов) КАК ВидЗапасовОприходование,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.НомерГТДОприходование КАК НомерГТДОприходование,
	|   ТаблицаВидыЗапасов.ВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
	|   ТаблицаВидыЗапасов.ВидЗапасов.НалоговоеНазначение КАК ЦелевоеНалоговоеНазначение,
	|   ВЫБОР 
	|		КОГДА ВтСоответствиеВидовЗапасов.НовыйВидЗапасов ЕСТЬ НЕ NULL ТОГДА ВтСоответствиеВидовЗапасов.НовыйВидЗапасов.НалоговоеНазначение
	|		ИНАЧЕ ТаблицаВидыЗапасов.ВидЗапасов.НалоговоеНазначение 
	|	КОНЕЦ КАК НалоговоеНазначениеОприходование,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаВидыЗапасов.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаВидыЗапасов.Сумма КАК Сумма,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	КлючиСписания.Номенклатура КАК Номенклатура,
	|	КлючиСписания.Характеристика КАК Характеристика,
	|	ВЫБОР КОГДА СправочникВидЗапасов.Комитент ССЫЛКА Справочник.Организации
	|		ТОГДА АналитикаРасчетовИнтеркампани.КлючАналитики
	|		ИНАЧЕ АналитикаРасчетов.КлючАналитики
	|	КОНЕЦ КАК АналитикаРасчетовСКомитентом
	|	
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ПорчаТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СправочникВидЗапасов
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасов = СправочникВидЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСоответствиеВидовЗапасов КАК ВтСоответствиеВидовЗапасов
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасов = ВтСоответствиеВидовЗапасов.ВидЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
	|	ПО 
	|		ТаблицаВидыЗапасов.НоменклатураОприходование = Ключи.Номенклатура
	|		И ТаблицаВидыЗапасов.ХарактеристикаОприходование = Ключи.Характеристика
	|		И ТаблицаВидыЗапасов.Серия = Ключи.Серия
	|		И (&Склад = Ключи.Склад)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиСписания
	|	ПО 
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = КлючиСписания.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетов
	|		ПО АналитикаРасчетов.Организация = &Организация
	|		И АналитикаРасчетов.Партнер = СправочникВидЗапасов.Комитент
	|		И АналитикаРасчетов.Контрагент = СправочникВидЗапасов.Контрагент
	|		И АналитикаРасчетов.Договор = СправочникВидЗапасов.Договор
	|		И АналитикаРасчетов.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетовИнтеркампани
	|		ПО АналитикаРасчетовИнтеркампани.Организация = &Организация
	|		И АналитикаРасчетовИнтеркампани.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		И АналитикаРасчетовИнтеркампани.Контрагент = СправочникВидЗапасов.Контрагент
	|		И АналитикаРасчетовИнтеркампани.Договор = СправочникВидЗапасов.Договор
	|		И АналитикаРасчетовИнтеркампани.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|	И ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.НоменклатураОприходование КАК НоменклатураОприходование,
	|	ТаблицаВидыЗапасов.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|	КлючиОприходование.КлючАналитики КАК АналитикаОприходование,
	|	Аналитика.КлючАналитики КАК АналитикаСписание,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	СправочникВидЗапасов.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	СправочникВидЗапасов.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	СправочникВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	СправочникВидЗапасов.Валюта КАК Валюта,
	|	ЕСТЬNULL(ВтСоответствиеВидовЗапасов.НовыйВидЗапасов, ТаблицаВидыЗапасов.ВидЗапасов) КАК ВидЗапасовОприходование,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.НомерГТДОприходование КАК НомерГТДОприходование,
	|   ТаблицаВидыЗапасов.ВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
	|   ТаблицаВидыЗапасов.ВидЗапасов.НалоговоеНазначение КАК ЦелевоеНалоговоеНазначение,
	|   ВЫБОР 
	|		КОГДА ВтСоответствиеВидовЗапасов.НовыйВидЗапасов ЕСТЬ НЕ NULL ТОГДА ВтСоответствиеВидовЗапасов.НовыйВидЗапасов.НалоговоеНазначение
	|		ИНАЧЕ ТаблицаВидыЗапасов.ВидЗапасов.НалоговоеНазначение 
	|	КОНЕЦ КАК НалоговоеНазначениеОприходование,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаВидыЗапасов.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаВидыЗапасов.Сумма КАК Сумма,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	Ключи.Номенклатура КАК Номенклатура,
	|	Ключи.Характеристика КАК Характеристика,
	|	ВЫБОР КОГДА СправочникВидЗапасов.Комитент ССЫЛКА Справочник.Организации
	|		ТОГДА АналитикаРасчетовИнтеркампани.КлючАналитики
	|		ИНАЧЕ АналитикаРасчетов.КлючАналитики
	|	КОНЕЦ КАК АналитикаРасчетовСКомитентом
	|
	|ИЗ
	|	Документ.ПорчаТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СправочникВидЗапасов
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасов = СправочникВидЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСоответствиеВидовЗапасов КАК ВтСоответствиеВидовЗапасов
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасов = ВтСоответствиеВидовЗапасов.ВидЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиОприходование
	|	ПО 
	|		ТаблицаВидыЗапасов.НоменклатураОприходование = КлючиОприходование.Номенклатура
	|		И ТаблицаВидыЗапасов.ХарактеристикаОприходование = КлючиОприходование.Характеристика
	|		И ТаблицаВидыЗапасов.Серия = КлючиОприходование.Серия
	|		И (&Склад = КлючиОприходование.Склад)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
	|	ПО 
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Ключи.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО 
	|		Ключи.Номенклатура = Аналитика.Номенклатура
	|		И Ключи.Характеристика = Аналитика.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = Аналитика.Серия
	|		И ТаблицаВидыЗапасов.ВидЗапасов.Комитент = Аналитика.Склад
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетов
	|		ПО АналитикаРасчетов.Организация = &Организация
	|		И АналитикаРасчетов.Партнер = СправочникВидЗапасов.Комитент
	|		И АналитикаРасчетов.Контрагент = СправочникВидЗапасов.Контрагент
	|		И АналитикаРасчетов.Договор = СправочникВидЗапасов.Договор
	|		И АналитикаРасчетов.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетовИнтеркампани
	|		ПО АналитикаРасчетовИнтеркампани.Организация = &Организация
	|		И АналитикаРасчетовИнтеркампани.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		И АналитикаРасчетовИнтеркампани.Контрагент = СправочникВидЗапасов.Контрагент
	|		И АналитикаРасчетовИнтеркампани.Договор = СправочникВидЗапасов.Договор
	|		И АналитикаРасчетовИнтеркампани.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|	И ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                  КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)          КАК ВидДвижения,
	|	&Период                                         КАК Период,
	|	&Склад                                          КАК Склад,
	|	&Организация                                    КАК ОрганизацияОтгрузки,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасовВладельца.Организация
	|	ИНАЧЕ
	|		&Организация
	|	КОНЕЦ КАК Организация,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасовВладельца
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры   КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.Номенклатура                 КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика               КАК Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД                     КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество                   КАК Количество,
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение   КАК НалоговоеНазначение,
	|	ТаблицаВидыЗапасов.ВидЗапасовОприходование      КАК КорВидЗапасов,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ТаблицаВидыЗапасов.АналитикаСписание
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.АналитикаОприходование
	|	КОНЕЦ КАК КорАналитикаУчетаНоменклатуры,
	|	&ХозяйственнаяОперация                          КАК ХозяйственнаяОперация,
	|	&СтатьяРасходов                                 КАК СтатьяРасходов,
	|	&АналитикаРасходов                              КАК АналитикаРасходов,
	|	ЛОЖЬ                                            КАК Первичное
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Склад,
	|	&Организация,
	|	&Организация,
	|	ТаблицаВидыЗапасов.ВидЗапасовОприходование,
	|	ТаблицаВидыЗапасов.АналитикаОприходование,
	|	ТаблицаВидыЗапасов.НоменклатураОприходование,
	|	ТаблицаВидыЗапасов.ХарактеристикаОприходование,
	|	ТаблицаВидыЗапасов.НомерГТДОприходование,
	|	ТаблицаВидыЗапасов.Количество,
	|	НЕОПРЕДЕЛЕНО,
	|	ТаблицаВидыЗапасов.ВидЗапасов,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ТаблицаВидыЗапасов.АналитикаСписание
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры
	|	КОНЕЦ КАК КорАналитикаУчетаНоменклатуры,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕ &ПриходПоСебестоимости КАК Первичное
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции 


Функция ТекстЗапросаВтСоответствиеКорВидовЗапасов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтСоответствиеКорВидовЗапасов"; 
	
	ИнициализироватьКорВидыЗапасов(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СоответствиеКорВидовЗапасов.ЦелевоеНалоговоеНазначение  КАК ЦелевоеНалоговоеНазначение,
	|	СоответствиеКорВидовЗапасов.ВидЗапасов		 			КАК ВидЗапасов
	|ПОМЕСТИТЬ ВтСоответствиеКорВидовЗапасов
	|ИЗ
	|	&СоответствиеКорВидовЗапасов КАК СоответствиеКорВидовЗапасов";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаВтСоответствиеКорВидовЗапасов

Процедура ИнициализироватьКорВидыЗапасов(Запрос)
	
	Если Запрос.Параметры.Свойство("СоответствиеКорВидовЗапасов") Тогда
		Возврат;
	КонецЕсли;
	
	СоответствиеКорВидовЗапасов = Новый ТаблицаЗначений;
	СоответствиеКорВидовЗапасов.Колонки.Добавить("ЦелевоеНалоговоеНазначение", Новый ОписаниеТипов("СправочникСсылка.НалоговыеНазначенияАктивовИЗатрат")); 
	СоответствиеКорВидовЗапасов.Колонки.Добавить("ВидЗапасов",		 Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов")); 
	
	ЗапросЦелевыхНазначений = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаВидыЗапасов.ВидЗапасов.НалоговоеНазначение КАК ЦелевоеНалоговоеНазначение
	|ИЗ
	|	Документ.ПорчаТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|");
	
	ЗапросЦелевыхНазначений.УстановитьПараметр("Ссылка",				Запрос.Параметры.Ссылка);
	
	Выборка = ЗапросЦелевыхНазначений.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		КорВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
			Запрос.Параметры.Организация, 
			Запрос.Параметры.ХозяйственнаяОперация,
			,
			Выборка.ЦелевоеНалоговоеНазначение
		);
		
		НоваяСтрока = СоответствиеКорВидовЗапасов.Добавить();
		НоваяСтрока.ЦелевоеНалоговоеНазначение	= Выборка.ЦелевоеНалоговоеНазначение;
		НоваяСтрока.ВидЗапасов					= КорВидЗапасов;
		
	КонецЦикла;	
	
	Запрос.УстановитьПараметр("СоответствиеКорВидовЗапасов", СоответствиеКорВидовЗапасов);
	
КонецПроцедуры // ИнициализироватьКорВидыЗапасов

Функция ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюОтчетовКомитенту";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтСоответствиеКорВидовЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтСоответствиеКорВидовЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|	&Период                                       КАК Период,
	|	ТаблицаВидыЗапасов.Валюта                     КАК Валюта,
	|	ТаблицаВидыЗапасов.ВидЗапасов                 КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Номенклатура               КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика             КАК Характеристика,
	|	ТаблицаВидыЗапасов.АналитикаСписание          КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.НомерГТД                   КАК НомерГТД,
	|	&ХозяйственнаяОперация                        КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение КАК НалоговоеНазначение,
	|	0                                             КАК Количество,
	|	ТаблицаВидыЗапасов.Количество                 КАК КоличествоСписано,
	|	0                                             КАК СуммаВыручки,
	|	ВтСоответствиеКорВидовЗапасов.ВидЗапасов      КАК КорВидЗапасов
	|
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтСоответствиеКорВидовЗапасов КАК ВтСоответствиеКорВидовЗапасов
	|	ПО ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение = ВтСоответствиеКорВидовЗапасов.ЦелевоеНалоговоеНазначение
	|
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Строки.НомерСтроки                     КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	Строки.Валюта                          КАК Валюта,
	|	ВидыЗапасовВладельца.Ссылка            КАК ВидЗапасов,
	|	Строки.Номенклатура                    КАК Номенклатура,
	|	Строки.Характеристика                  КАК Характеристика,
	|	КлючиКомитента.КлючАналитики           КАК АналитикаУчетаНоменклатуры,
	|	Строки.НомерГТД                        КАК НомерГТД,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	Строки.ЦелевоеНалоговоеНазначение      КАК НалоговоеНазначение,
	|	0                                      КАК Количество,
	|	Строки.Количество                      КАК КоличествоСписано,
	|	0                                      КАК СуммаВыручки,
	|	ВтСоответствиеКорВидовЗапасов.ВидЗапасов КАК КорВидЗапасов
	|ИЗ
	|	ВтВидыЗапасов КАК Строки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовВладельца
	|	ПО Строки.ВидЗапасов.ВидЗапасовВладельца = ВидыЗапасовВладельца.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиКомитента
	|	ПО Строки.Номенклатура = КлючиКомитента.Номенклатура
	|		И Строки.Характеристика = КлючиКомитента.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = КлючиКомитента.Серия
	|		И ВидыЗапасовВладельца.Комитент = КлючиКомитента.Склад
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтСоответствиеКорВидовЗапасов КАК ВтСоответствиеКорВидовЗапасов
	|	ПО Строки.ЦелевоеНалоговоеНазначение = ВтСоответствиеКорВидовЗапасов.ЦелевоеНалоговоеНазначение
	|ГДЕ
	|	Строки.РеализацияЗапасовДругойОрганизации
	|	И Строки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И ВидыЗапасовВладельца.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрКоэффициентПересчетаВВалютуРегл(Запрос)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуРегл") Тогда
		Возврат;
	КонецЕсли;
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Запрос.Параметры.ВалютаУпрУчета, 
	                                                                         Запрос.Параметры.ВалютаУпрУчета, 
	                                                                         Запрос.Параметры.Период);
	
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	УстановитьПараметрКоэффициентПересчетаВВалютуРегл(Запрос);
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтСоответствиеКорВидовЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтСоответствиеКорВидовЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"// Таблица товаров (списание)
	|ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаВидыЗапасов.АналитикаСписание КАК АналитикаУчетаНоменклатуры,
	|	&Организация  КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			ВтСоответствиеКорВидовЗапасов.ВидЗапасов	
	|		ИНАЧЕ
	|			ТаблицаВидыЗапасов.ВидЗапасов
	|		КОНЕЦ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК СтоимостьРегл,
	|	0 КАК СтоимостьРеглБезНДС,
	|	0 КАК НДСРегл,
	|	0 КАК КорСтоимость,
	|	ТаблицаВидыЗапасов.АналитикаОприходование КАК КорАналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК КорРазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасовОприходование
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК КорВидЗапасов,
	|	ТаблицаВидыЗапасов.НалоговоеНазначениеОприходование КАК КорНалоговоеНазначение,
	|	ТаблицаВидыЗапасов.АналитикаРасчетовСКомитентом КАК АналитикаУчетаПоПартнерам,
	|	&Подразделение КАК Подразделение,
	|	Неопределено КАК АналитикаРасходов,
	|	Неопределено КАК СтатьяРасходовСписания,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСоответствиеКорВидовЗапасов КАК ВтСоответствиеКорВидовЗапасов
	|		ПО ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение = ВтСоответствиеКорВидовЗапасов.ЦелевоеНалоговоеНазначение
	|ГДЕ
	|	&ПриходПоСебестоимости
	|	И ТаблицаВидыЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Таблица товаров (списание по фиксированной стоимости)
	|ВЫБРАТЬ
	|	2                                                                       КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки                                          КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                  КАК ВидДвижения,
	|	&Период                                                                 КАК Период,
	|	ТаблицаВидыЗапасов.АналитикаСписание                                    КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                                            КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВЫБОР
	|			КОГДА
	|				ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА
	|				ВтСоответствиеКорВидовЗапасов.ВидЗапасов	
	|			ИНАЧЕ
	|				ТаблицаВидыЗапасов.ВидЗапасов
	|		КОНЕЦ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ                                                                   КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НалоговоеНазначение 									КАК НалоговоеНазначение,
	|	ТаблицаВидыЗапасов.Количество                                           КАК Количество,
	|	0                                                                       КАК Стоимость,
	|	0                                                                       КАК СтоимостьБезНДС,
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.Сумма*&КоэффициентПересчетаВВалютуРегл
	|		КАК ЧИСЛО(15,2))                                                    КАК СтоимостьРегл,
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.Сумма*&КоэффициентПересчетаВВалютуРегл
	|		КАК ЧИСЛО(15,2))                                                    КАК СтоимостьРеглБезНДС,
	|	0 КАК НДСРегл,
	|	ТаблицаВидыЗапасов.Сумма                                                КАК КорСтоимость,
	|	ТаблицаВидыЗапасов.АналитикаОприходование                               КАК КорАналитикаУчетаНоменклатуры,
	|	Неопределено                                                            КАК КорРазделУчета,
	|	Неопределено                                                            КАК КорВидЗапасов,
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение 							КАК КорНалоговоеНазначение,
	|	ТаблицаВидыЗапасов.АналитикаРасчетовСКомитентом                         КАК АналитикаУчетаПоПартнерам,
	|	&Подразделение                                                          КАК Подразделение,
	|	&АналитикаРасходов                                                      КАК АналитикаРасходов,
	|	&СтатьяРасходов                                                         КАК СтатьяРасходовСписания,
	|	&ХозяйственнаяОперация                                                  КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСоответствиеКорВидовЗапасов КАК ВтСоответствиеКорВидовЗапасов
	|		ПО ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение = ВтСоответствиеКорВидовЗапасов.ЦелевоеНалоговоеНазначение
	|
	|ГДЕ
	|	Не &ПриходПоСебестоимости
	|	И ТаблицаВидыЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|
	|// Списание комиссионных товаров и товаров давальца
	|ВЫБРАТЬ
	|	2                                                                       КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки                                          КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                  КАК ВидДвижения,
	|	&Период                                                                 КАК Период,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры                           КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                                            КАК Организация,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|	КОНЕЦ КАК РазделУчета,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ                                                                   КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НалоговоеНазначение 									КАК НалоговоеНазначение,
	|	ТаблицаВидыЗапасов.Количество                                           КАК Количество,
	|	0                                                                       КАК Стоимость,
	|	0                                                                       КАК СтоимостьБезНДС,
	|	0                                                                       КАК СтоимостьРегл,
	|	0 КАК СтоимостьРеглБезНДС,
	|	0 КАК НДСРегл,
	|	ТаблицаВидыЗапасов.Сумма                                                КАК КорСтоимость,
	|	ТаблицаВидыЗапасов.АналитикаОприходование                               КАК КорАналитикаУчетаНоменклатуры,
	|	Неопределено                                                            КАК КорРазделУчета,
	|	Неопределено                                                            КАК КорВидЗапасов,
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение 							КАК КорНалоговоеНазначение,
	|	ТаблицаВидыЗапасов.АналитикаРасчетовСКомитентом                         КАК АналитикаУчетаПоПартнерам,
	|	&Подразделение                                                          КАК Подразделение,
	|	&АналитикаРасходов                                                      КАК АналитикаРасходов,
	|	&СтатьяРасходов                                                         КАК СтатьяРасходовСписания,
	|	&ХозяйственнаяОперация                                                  КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Таблица товаров (оприходование)
	|ВЫБРАТЬ
	|	4                                                                       КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки                                          КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                  КАК ВидДвижения,
	|	&Период                                                                 КАК Период,
	|	ТаблицаВидыЗапасов.АналитикаОприходование                               КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                                            КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|   	ТаблицаВидыЗапасов.ВидЗапасовОприходование
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ                                                                   КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НалоговоеНазначениеОприходование 					КАК НалоговоеНазначение,
	|	ТаблицаВидыЗапасов.Количество                                           КАК Количество,
	|	ТаблицаВидыЗапасов.Сумма                                                КАК Стоимость,
	|	ТаблицаВидыЗапасов.Сумма                                                КАК СтоимостьБезНДС,
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.Сумма*&КоэффициентПересчетаВВалютуРегл
	|		КАК ЧИСЛО(15,2))                                                    КАК СтоимостьРегл,
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.Сумма*&КоэффициентПересчетаВВалютуРегл
	|		КАК ЧИСЛО(15,2))                                                    КАК СтоимостьРеглБезНДС,
	|	0 КАК НДСРегл,
	|	0                                                                       КАК КорСтоимость,
	|	Неопределено                                                            КАК КорАналитикаУчетаНоменклатуры,
	|	Неопределено                                                            КАК КорРазделУчета,
	|	Неопределено                                                            КАК КорВидЗапасов,
	|	Неопределено 															КАК КорНалоговоеНазначение,
	|	ТаблицаВидыЗапасов.АналитикаРасчетовСКомитентом                         КАК АналитикаУчетаПоПартнерам,
	|	&Подразделение                                                          КАК Подразделение,
	|	Неопределено                                                            КАК АналитикаРасходов,
	|	Неопределено                                                            КАК СтатьяРасходовСписания,
	|	&ХозяйственнаяОперация                                                  КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции 

Функция ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииТоваровОрганизаций";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	УстановитьПараметрКоэффициентПересчетаВВалютуРегл(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	(ВЫБОР КОГДА &ПриходПоСебестоимости ТОГДА НЕОПРЕДЕЛЕНО ИНАЧЕ &Ссылка КОНЕЦ) КАК ДокументПоступления,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|	&Период                                       КАК Период,
	|	&Организация                                  КАК Организация,
	|	ТаблицаВидыЗапасов.АналитикаОприходование     КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасовОприходование    КАК ВидЗапасов,
	|	(ВЫБОР КОГДА &ПриходПоСебестоимости ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаВидыЗапасов.АналитикаУчетаПартий КОНЕЦ) КАК АналитикаУчетаПартий,
	|	ТаблицаВидыЗапасов.Количество                 КАК Количество,
	|	(ВЫБОР КОГДА &ПриходПоСебестоимости ТОГДА 0. ИНАЧЕ ТаблицаВидыЗапасов.Сумма КОНЕЦ) КАК Стоимость,
	|	(ВЫБОР КОГДА &ПриходПоСебестоимости ТОГДА 0. ИНАЧЕ ТаблицаВидыЗапасов.Сумма КОНЕЦ) КАК СтоимостьБезНДС,
	|	(ВЫБОР КОГДА &ПриходПоСебестоимости ТОГДА 0.
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаВидыЗапасов.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2))
	|		КОНЕЦ) КАК СтоимостьРегл,
	|	0. КАК НДСРегл,
	|	ТаблицаВидыЗапасов.Номенклатура               КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика             КАК Характеристика,
	|	&ХозяйственнаяОперация                        КАК ХозяйственнаяОперация,
	|	(НЕ &ПриходПоСебестоимости) КАК Первичное,
	|	(ВЫБОР КОГДА &ПриходПоСебестоимости ТОГДА &Ссылка ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ДокументИсточник
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	&ИспользоватьПартионныйУчет";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	УстановитьПараметрКоэффициентПересчетаВВалютуРегл(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Таблица.НомерСтроки                      КАК НомерСтроки,
	|	&Период                                  КАК Период,
	|	&ВалютаУпрУчета                          КАК Валюта,
	|	Таблица.ИдентификаторСтроки              КАК ИдентификаторСтроки,
	|	Таблица.Сумма                            КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО                             КАК СтавкаНДС,
	|	0                                        КАК СуммаНДС,
	|	Таблица.Сумма * &КоэффициентПересчетаВВалютуРегл КАК СуммаБезНДСРегл,
	|	0                                        КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО                             КАК ТипРасчетов
	|
	|ИЗ
	|	ВтВидыЗапасов КАК Таблица
	|
	|ГДЕ
	|	&ВалютаУпрУчета <> &ВалютаРеглУчета
	|	И НЕ &ПриходПоСебестоимости
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияНоменклатураНоменклатура";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	УстановитьПараметрКоэффициентПересчетаВВалютуРегл(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Склад КАК Склад,
	|	ВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|   	ВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	ВидыЗапасов.АналитикаОприходование КАК КорАналитикаУчетаНоменклатуры,
	|	&Склад КАК КорСклад,
	|	ВидыЗапасов.ВидЗапасовОприходование.ТипЗапасов КАК КорТипЗапасов,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|   	ВидыЗапасов.ВидЗапасовОприходование
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК КорВидЗапасов,
	|
	|	ВидыЗапасов.Количество КАК Количество,
	|	ВидыЗапасов.Количество КАК КорКоличество,
	|
	|	ВЫБОР КОГДА &ПриходПоСебестоимости
	|		ТОГДА 0
	|		ИНАЧЕ ВидыЗапасов.Сумма
	|	КОНЕЦ КАК Стоимость,
	|	ВЫБОР КОГДА &ПриходПоСебестоимости
	|		ТОГДА 0
	|		ИНАЧЕ ВидыЗапасов.Сумма
	|	КОНЕЦ КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА &ПриходПоСебестоимости
	|		ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ВидыЗапасов.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2))
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ 
	|		ВидыЗапасов.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ВидыЗапасов.ВидЗапасовОприходование
	|	ИНАЧЕ 
	|		ВидыЗапасов.НоменклатураОприходование
	|	КОНЕЦ КАК КорИсточникГФУНоменклатуры
	|
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизацийКПередаче";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Склад КАК Склад,
	|	ТаблицаВидыЗапасов.ВидЗапасовВладельца.Организация КАК ОрганизацияВладелец,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасовПродавца,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.НалоговоеНазначение КАК НалоговоеНазначение
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОбеспечениеЗаказов";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                      КАК Период,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	&Склад          			 КАК Склад,
	|	ТаблицаТовары.Назначение     КАК Назначение,
	|	-ТаблицаТовары.Количество 	 КАК КЗаказу,
	|	ТаблицаТовары.Количество	 КАК НаличиеПодЗаказ
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)	
	|	И ТаблицаТовары.Количество <> 0
	|	И (НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 		КАК ВидДвижения,
	|	&Период                      				КАК Период,
	|	ТаблицаТовары.НоменклатураОприходование   	КАК НоменклатураОприходование,
	|	ТаблицаТовары.ХарактеристикаОприходование 	КАК ХарактеристикаОприходование,
	|	&Склад          			 				КАК Склад,
	|	ТаблицаТовары.Назначение     				КАК Назначение,
	|	-ТаблицаТовары.Количество 	 				КАК КЗаказу,
	|	ТаблицаТовары.Количество	 				КАК НаличиеПодЗаказ
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)	
	| 	И ТаблицаТовары.ПодНазначение	
	|	И ТаблицаТовары.Количество <> 0
	|	И (НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
		
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.ПорчаТоваров"; 
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач", 
												"ВЫБОР
												|		КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
												|				И ТаблицаТовары.Ссылка.Дата >= ТаблицаТовары.Ссылка.Склад.ДатаНачалаОрдернойСхемыПриОтраженииИзлишковНедостач
												|			ТОГДА ИСТИНА
												|		ИНАЧЕ ЛОЖЬ
												|	КОНЕЦ");
	
	Если ИмяРегистра = "ОбеспечениеЗаказов" Тогда
	
		ТекстЗапроса = ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
				
	Иначе
		ТекстИсключения = НСтр("ru='В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';uk='У документі %ПолноеИмяДокумента% не реалізована адаптація тексту запиту формування рухів по регістру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(ТекстЗапроса,
																								ПолноеИмяДокумента,
																								СинонимТаблицыДокумента,
																								ПереопределениеРасчетаПараметров);

	Возврат Результат;

КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт


	// Акт о порче товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктПорчиТоваров";
	КомандаПечати.Представление = НСтр("ru='Акт о порче товаров';uk='Акт про псування товарів'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ФункциональныеОпции = "ИспользоватьКачествоТоваров";
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктПорчиТоваров") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"АктПорчиТоваров",
			НСтр("ru='Акт о порче товаров';uk='Акт про псування товарів'"),
			ПечатьАктаПорчиТоваров(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),,,,Истина);
		
	КонецЕсли;
КонецПроцедуры

Функция ПечатьАктаПорчиТоваров(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;	
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДопКолонка = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьДопКолонку = ЗначениеЗаполнено(ДопКолонка);

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Склад КАК Склад,
	|	Документ.Подразделение КАК Подразделение,
	|	Документ.Организация КАК Организация,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Склад) КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Подразделение) КАК ПодразделениеПредставление,
	|	Документ.Организация.НаименованиеСокращенное КАК ОрганизацияПредставление,
	|	Документ.Организация.Префикс КАК Префикс,
	|	Документ.Склад.ТекущийОтветственный КАК Кладовщик,
	|	Документ.Склад.ТекущаяДолжностьОтветственного КАК КладовщикДолжность,
	|	Документ.Ответственный.ФизическоеЛицо КАК Ответственный,
	|	Документ.ПричинаПорчи КАК ПричинаПорчи 
	|ИЗ
	|	Документ.ПорчаТоваров КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК НоменклатураИсходная,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураИсходнаяПредставление,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное КАК ХарактеристикаИсходнаяПредставление,
	|	" + ?(ВыводитьДопКолонку, "ТаблицаТовары.Номенклатура." + ДопКолонка +" КАК ДопКолонкаСписание,", "") + "
	|	ТаблицаТовары.НоменклатураОприходование КАК НоменклатураИспорченная,
	|	" + ?(ВыводитьДопКолонку, "НоменклатураОприходование." + ДопКолонка +" КАК ДопКолонкаОприходование,", "") + "
	|	ТаблицаТовары.НоменклатураОприходование.НаименованиеПолное КАК НоменклатураИспорченнаяПредставление,
	|	ТаблицаТовары.ХарактеристикаОприходование.НаименованиеПолное КАК ХарактеристикаИспорченнаяПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Серия) КАК СерияПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияИсходнаяПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.НоменклатураОприходование.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияИспорченнаяПредставление,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПорчаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";	
	
	ВалютаУпр = Константы.ВалютаУправленческогоУчета.Получить();	
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс, Представление");
	СинонимДокумента = НСтр("ru='Акт о порче товаров';uk= 'Акт про псування товарів'", КодЯзыкаПечать);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПорчаТоваров_АктОПорчеТоваров";         
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПорчаТоваров.ПФ_MXL_АктОПорчеТоваров",КодЯзыкаПечать);
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПодразделения") Тогда
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Иначе
		ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокБезПодразделения");
	КонецЕсли;
	ОбластьОснование  = Макет.ПолучитьОбласть("Основание");

	ОбластьНомераШапка              = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьКодовИсходнаяШапка       = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодовИсходная");
	ОбластьКодовИспорченнаяШапка  = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодовИспорченная");
	ОбластьТоварИсходныйШапка       = Макет.ПолучитьОбласть("ШапкаТаблицы|ТоварИсходный");              
	ОбластьТоварИспорченныйШапка    = Макет.ПолучитьОбласть("ШапкаТаблицы|ТоварИспорченный");
	ОбластьЕдИзмИсходнаяШапка       = Макет.ПолучитьОбласть("ШапкаТаблицы|ЕдиницаИзмеренияИсходная");
	ОбластьЕдИзмИспорченнаяШапка  = Макет.ПолучитьОбласть("ШапкаТаблицы|ЕдиницаИзмеренияИспорченная");
	ОбластьДанныеШапка              = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");

	Если Не ВыводитьДопКолонку Тогда

		Макет.Область("ТоварИсходный").ШиринаКолонки = Макет.Область("ТоварИсходный").ШиринаКолонки
				+ Макет.Область("КолонкаКодовИсходная").ШиринаКолонки;
		Макет.Область("ТоварИспорченный").ШиринаКолонки = Макет.Область("ТоварИспорченный").ШиринаКолонки
				+ Макет.Область("КолонкаКодовИспорченная").ШиринаКолонки;

	КонецЕсли;

	ОбластьНомераСтрока              = Макет.ПолучитьОбласть("Строка|НомерСтроки");
	ОбластьКодовИсходнаяСтрока       = Макет.ПолучитьОбласть("Строка|КолонкаКодовИсходная");
	ОбластьКодовИспорченнаяСтрока  = Макет.ПолучитьОбласть("Строка|КолонкаКодовИспорченная");
	ОбластьТоварИсходныйСтрока       = Макет.ПолучитьОбласть("Строка|ТоварИсходный");
	ОбластьТоварИспорченныйСтрока    = Макет.ПолучитьОбласть("Строка|ТоварИспорченный");
	ОбластьЕдИзмИсходнаяСтрока       = Макет.ПолучитьОбласть("Строка|ЕдиницаИзмеренияИсходная");
	ОбластьЕдИзмИспорченнаяСтрока  = Макет.ПолучитьОбласть("Строка|ЕдиницаИзмеренияИспорченная");
	ОбластьДанныхСтрока              = Макет.ПолучитьОбласть("Строка|Данные");

	ОбластьПодвалТаблицы  = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьПодписи        = Макет.ПолучитьОбласть("Подписи");
	ОбластьСуммаПрописью  = Макет.ПолучитьОбласть("СуммаПрописью");
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаДокументы = РезультатыЗапроса[0].Выбрать();
	ВыборкаПоТабличнымЧастям = РезультатыЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	Пока ВыборкаДокументы.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

		// Выводим шапку накладной.
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаДокументы);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаДокументы);
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента, КодЯзыкаПечать);
		ОбластьЗаголовок.Параметры.СкладПредставление = СкладыСервер.ПолучитьПредставлениеСклада(ВыборкаДокументы.СкладПредставление);
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабДокумент, Макет, ОбластьЗаголовок, ВыборкаДокументы.Ссылка);
		ТабДокумент.Вывести(ОбластьЗаголовок);

		// Вывод шапки.
		ТабДокумент.Вывести(ОбластьНомераШапка);

		Если ВыводитьДопКолонку Тогда

			ТабДокумент.Присоединить(ОбластьКодовИсходнаяШапка);

		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьТоварИсходныйШапка);
		ТабДокумент.Присоединить(ОбластьЕдИзмИсходнаяШапка);
		
		Если ВыводитьДопКолонку Тогда

			ТабДокумент.Присоединить(ОбластьКодовИспорченнаяШапка);

		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьТоварИспорченныйШапка);
  		ТабДокумент.Присоединить(ОбластьЕдИзмИспорченнаяШапка);

		ТабДокумент.Присоединить(ОбластьДанныеШапка);

		СуммаВсего = 0;
		ВсегоНаименований = 0;

		// Вывод строк.
		ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаДокументы.Ссылка));
		
		ВыборкаПоСтрокам = ВыборкаПоТабличнымЧастям.Выбрать();
		
		Пока ВыборкаПоСтрокам.Следующий() Цикл

			ОбластьНомераСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
			ТабДокумент.Вывести(ОбластьНомераСтрока);

			Если ВыводитьДопКолонку Тогда

				ОбластьКодовИсходнаяСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
				ТабДокумент.Присоединить(ОбластьКодовИсходнаяСтрока);

			КонецЕсли;

			// Номенклатура.
			ОбластьТоварИсходныйСтрока.Параметры.НоменклатураИсходная = ВыборкаПоСтрокам.НоменклатураИсходная;
			ОбластьТоварИсходныйСтрока.Параметры.НоменклатураИсходнаяПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					ВыборкаПоСтрокам.НоменклатураИсходнаяПредставление,
					ВыборкаПоСтрокам.ХарактеристикаИсходнаяПредставление,
					ВыборкаПоСтрокам.СерияПредставление);
					
			ТабДокумент.Присоединить(ОбластьТоварИсходныйСтрока);
			
			ОбластьЕдИзмИсходнаяСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
			ТабДокумент.Присоединить(ОбластьЕдИзмИсходнаяСтрока);
			
			Если ВыводитьДопКолонку Тогда

				ОбластьКодовИспорченнаяСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
				ТабДокумент.Присоединить(ОбластьКодовИспорченнаяСтрока);

			КонецЕсли;

			// Номенклатура.
			ОбластьТоварИспорченныйСтрока.Параметры.НоменклатураИспорченная = ВыборкаПоСтрокам.НоменклатураИспорченная;
			ОбластьТоварИспорченныйСтрока.Параметры.НоменклатураИспорченнаяПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					ВыборкаПоСтрокам.НоменклатураИспорченнаяПредставление,
					ВыборкаПоСтрокам.ХарактеристикаИспорченнаяПредставление,
					ВыборкаПоСтрокам.СерияПредставление);
					
			ТабДокумент.Присоединить(ОбластьТоварИспорченныйСтрока);
			
			ОбластьЕдИзмИспорченнаяСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
			ТабДокумент.Присоединить(ОбластьЕдИзмИспорченнаяСтрока);

			// Данные количестве.
			ОбластьДанныхСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
			
			ТабДокумент.Присоединить(ОбластьДанныхСтрока);

			ВсегоНаименований = ВсегоНаименований + 1;

		КонецЦикла;

		// Вывод подвала.
		ТабДокумент.Вывести(ОбластьПодвалТаблицы);
		// Вывод Суммы прописью.
		
		ТекстИтоговойСтроки = НСтр("ru='Всего наименований %ВсегоНаименований%';uk= 'Всього найменувань %ВсегоНаименований%'", КодЯзыкаПечать);
		
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", ВсегоНаименований);
		
		ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;

		ТабДокумент.Вывести(ОбластьСуммаПрописью);

		// Вывод подписей.
		ОбластьПодписи.Параметры.Ответственный = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ВыборкаДокументы.Ответственный, ВыборкаДокументы.Дата);
		ОбластьПодписи.Параметры.Кладовщик = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ВыборкаДокументы.Кладовщик, ВыборкаДокументы.Дата);		
		ОбластьПодписи.Параметры.КладовщикДолжность = СкладыСервер.ДолжностьОтветственногоЛицаСклада(ВыборкаДокументы.КладовщикДолжность);
		ТабДокумент.Вывести(ОбластьПодписи);

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);

	КонецЦикла;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#КонецОбласти

#КонецЕсли
