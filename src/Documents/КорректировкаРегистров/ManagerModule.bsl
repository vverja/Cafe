
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);
	
КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.КорректировкаРегистров) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.КорректировкаРегистров.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.КорректировкаРегистров);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

КонецПроцедуры

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

КонецПроцедуры

#КонецОбласти

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

#КонецОбласти

#Область ЗаполнитьДоговорВАналитикеПоПартнерамКорректировокРегистров


Процедура ЗаполнитьДоговорВАналитикеПоПартнерамКорректировокРегистровОтметитьКОбработке(Параметры) Экспорт
	
	// Производит замену измерения "АналитикаУчетаПоПартнерам" с учетом договора.
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрНакопления.РасчетыСКлиентами";
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Расчеты.Регистратор КАК Ссылка
		|ИЗ
		|	РегистрНакопления.РасчетыСКлиентами КАК Расчеты
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
		|		ПО Расчеты.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
		|			И (Аналитика.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК Договоры
		|		ПО (Договоры.Ссылка = 
		|				ВЫБОР КОГДА Расчеты.ЗаказКлиента ССЫЛКА Справочник.ДоговорыКонтрагентов
		|					ТОГДА Расчеты.ЗаказКлиента
		|				ИНАЧЕ Расчеты.ЗаказКлиента.Договор
		|			КОНЕЦ)
		|ГДЕ
		|	Расчеты.Регистратор ССЫЛКА Документ.КорректировкаРегистров
		|;");
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Регистраторы, ДополнительныеПараметры);
	
КонецПроцедуры

Процедура ЗаполнитьДоговорВАналитикеПоПартнерамКорректировокРегистров(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.РасчетыСКлиентами";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АналитикаРегистра.Партнер                            КАК Партнер,
	|	АналитикаРегистра.Организация                        КАК Организация,
	|	АналитикаРегистра.Контрагент                         КАК Контрагент,
	|	АналитикаРегистра.НаправлениеДеятельности            КАК НаправлениеДеятельности,
	|	ВЫБОР КОГДА Расчеты.ЗаказКлиента ССЫЛКА Справочник.ДоговорыКонтрагентов
	|		ТОГДА Расчеты.ЗаказКлиента
	|	ИНАЧЕ
	|		ЕСТЬNULL(Расчеты.ЗаказКлиента.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|	КОНЕЦ                                                КАК Договор
	|ИЗ
	|	&ВТДляОбработкиСсылка КАК СписокРегистраторов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентами КАК Расчеты
	|		ПО Расчеты.Регистратор = СписокРегистраторов.Регистратор
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРегистра
	|		ПО Расчеты.АналитикаУчетаПоПартнерам = АналитикаРегистра.КлючАналитики
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК НоваяАналитика
	|		ПО АналитикаРегистра.Партнер = НоваяАналитика.Партнер
	|			И АналитикаРегистра.Организация = НоваяАналитика.Организация
	|			И АналитикаРегистра.Контрагент = НоваяАналитика.Контрагент
	|			И АналитикаРегистра.НаправлениеДеятельности = НоваяАналитика.НаправлениеДеятельности
	|			И (НоваяАналитика.Договор =
	|				ВЫБОР КОГДА Расчеты.ЗаказКлиента ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ТОГДА Расчеты.ЗаказКлиента
	|				ИНАЧЕ ЕСТЬNULL(Расчеты.ЗаказКлиента.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|			КОНЕЦ)
	|ГДЕ
	|	НоваяАналитика.КлючАналитики ЕСТЬ NULL
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокРегистраторов.Регистратор КАК Ссылка
	|ИЗ
	|	&ВТДляОбработкиСсылка КАК СписокРегистраторов";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуРегистраторовРегистраДляОбработки(
	     Параметры.Очередь,
	     Неопределено,
	     ПолноеИмяРегистра,
	     МенеджерВременныхТаблиц);
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли; 
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВТДляОбработкиСсылка", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Результат = Запрос.ВыполнитьПакет();
	
	КоличествоЗапросов = Результат.ВГраница();
	
	АналитикиКСозданию = Результат[КоличествоЗапросов-1].Выгрузить();
	Для Каждого СтрокаАналитики Из АналитикиКСозданию Цикл
			НоваяАналитика = РегистрыСведений.АналитикаУчетаПоПартнерам.СоздатьКлючАналитики(СтрокаАналитики);
	КонецЦикла;
	
	Выборка = Результат[КоличествоЗапросов].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Ссылка);
			Блокировка.Заблокировать();
		
			ЗапросДанных = Новый Запрос("
			|ВЫБРАТЬ
			|	Расчеты.Период                    КАК Период,
			|	Расчеты.ВидДвижения               КАК ВидДвижения,
			|	НоваяАналитика.КлючАналитики      КАК АналитикаУчетаПоПартнерам,
			|	Расчеты.ЗаказКлиента              КАК ЗаказКлиента,
			|	Расчеты.Валюта                    КАК Валюта,
			|	Расчеты.Сумма                     КАК Сумма,
			|	Расчеты.КОплате                   КАК КОплате,
			|	Расчеты.Оплачивается              КАК Оплачивается,
			|	Расчеты.КОтгрузке                 КАК КОтгрузке,
			|	Расчеты.Отгружается               КАК Отгружается
			|ИЗ
			|	РегистрНакопления.РасчетыСКлиентами КАК Расчеты
			|
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРегистра
			|	ПО Расчеты.АналитикаУчетаПоПартнерам = АналитикаРегистра.КлючАналитики
			|
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК НоваяАналитика
			|	ПО АналитикаРегистра.Партнер = НоваяАналитика.Партнер
			|		И АналитикаРегистра.Организация = НоваяАналитика.Организация
			|		И АналитикаРегистра.Контрагент = НоваяАналитика.Контрагент
			|		И (НоваяАналитика.Договор =
			|				ВЫБОР КОГДА Расчеты.ЗаказКлиента ССЫЛКА Справочник.ДоговорыКонтрагентов
			|					ТОГДА Расчеты.ЗаказКлиента
			|					ИНАЧЕ ЕСТЬNULL(Расчеты.ЗаказКлиента.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
			|			КОНЕЦ)
			|ГДЕ
			|	Расчеты.Регистратор = &Расчеты
			|");
			
			ЗапросДанных.УстановитьПараметр("Расчеты", Выборка.Ссылка);
			
			Набор = РегистрыНакопления.РасчетыСКлиентами.СоздатьНаборЗаписей();
			Набор.Отбор.Регистратор.Установить(Выборка.Ссылка);
			Набор.Загрузить(ЗапросДанных.Выполнить().Выгрузить());
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
			
			ЗафиксироватьТранзакцию();
		
		Исключение
		
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru='Не удалось дополнить аналитику по партнерам договором при обработке документа: %Ссылка% по причине: %Причина%';uk='Не вдалося доповнити аналітику за партнерами договором при обробці документа: %Ссылка% по причині: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				Выборка.Ссылка.Метаданные(), Выборка.Ссылка, ТекстСообщения);
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры


#КонецОбласти

#КонецЕсли