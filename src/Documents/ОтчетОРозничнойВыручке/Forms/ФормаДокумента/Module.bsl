&НаКлиенте
Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	// Обработчик подсистемы "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);

	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ДенежныеСредстваСервер.ЗаполнитьСтатьюДекларацииПоЕдиномуНалогу(Объект);
		НастроитьЭлементыФормы();
		РассчитатьИтоговыеПоказатели(ЭтаФорма);		
		Элементы.СтраницаКомментарий.Картинка = ОбщегоНазначения.ПолучитьКартинкуКомментария(Объект.Комментарий);
	КонецЕсли;
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюПечать);
	// Конец СтандартныеПодсистемы.Печать
	
	ВводНаОсновании.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюСоздатьНаОсновании);
	
	МенюОтчеты.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюОтчеты);
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// Обработчик механизма "ДатыЗапретаИзменения"
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);	
	ФормаЗаблокированаПоДатеЗапретаИзменения = ЭтаФорма.ТолькоПросмотр;
	
	НастроитьЭлементыФормы();
	РассчитатьИтоговыеПоказатели(ЭтаФорма);
	Элементы.СтраницаКомментарий.Картинка = ОбщегоНазначения.ПолучитьКартинкуКомментария(Объект.Комментарий);
	
	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Элементы.СтраницаКомментарий.Картинка = ОбщегоНазначения.ПолучитьКартинкуКомментария(Объект.Комментарий);	
	
	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);
	
	Оповестить("ЗаписьВФорме_ОтчетОРозничнойВыручке", , ЭтаФорма);
	
	ОбщегоНазначенияУТКлиент.ВыполнитьДействияПослеЗаписи(ЭтаФорма, Объект, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КассаПриИзменении(Элемент)
	
	КассаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	НастроитьЭлементыФормы();
	
КонецПроцедуры


&НаКлиенте
Процедура СуммаПоЕдиномуНалогуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	СуммаНаличнойОплаты = ?(СуммаВсего < 0, СуммаВсего*(-1), СуммаВсего) - Объект.СуммаОплатыПлатежнымиКартами;
	ФинансыКлиент.СуммаПоЕдиномуНалогуРозницаНачалоВыбора(ЭтотОбъект, Элемент, СуммаНаличнойОплаты, ?(СуммаВсего < 0, СуммаВсего*(-1), СуммаВсего),  ?(СуммаВсегоНДС < 0, СуммаВсегоНДС*(-1), СуммаВсегоНДС));
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаОплатыПлатежнымиКартамиПриИзменении(Элемент)
	
	ПересчитатьСуммуПоЕдиномуНалогу();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВыручка

&НаКлиенте
Процедура ВыручкаПриИзменении(Элемент)
	
	РассчитатьИтоговыеПоказатели(ЭтаФорма);
	ПересчитатьСуммуПоЕдиномуНалогу();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыручкаСуммаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Выручка.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСуммуНДСиАкцизногоНалога", ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(Объект, Истина));
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	РассчитатьИтоговыеПоказатели(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыручкаСтавкаНДСПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Выручка.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСуммуНДСиАкцизногоНалога", ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(Объект, Истина));
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	РассчитатьИтоговыеПоказатели(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыручкаСтатьяДекларацииПоАкцизномуНалогуПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Выручка.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСуммуНДСиАкцизногоНалога", ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(Объект,Истина));
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	РассчитатьИтоговыеПоказатели(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ВыручкаПодакцизныеТоварыДляКоммерческогоИспользованияПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Выручка.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьСуммуНДСиАкцизногоНалога", ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(Объект,Истина));
	
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	РассчитатьИтоговыеПоказатели(ЭтаФорма);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьОтчетОРозничныхПродажах(Команда)
	
	ОткрытьЗначение(СвязывающийОтчетОРозничныхПродажах);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОтчетуОРозничныхПродажах(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.КассаККМ) Тогда
		Предупреждение(НСтр("Не указана касса ККМ"));
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Склад) Тогда
		Предупреждение(НСтр("Не указан склад"));
		Возврат;
	КонецЕсли;
	
	Если Объект.Выручка.Количество() > 0 Тогда
		Результат = Вопрос("Перед заполнением табличная часть будет очищена, продолжить?", РежимДиалогаВопрос.ДаНет);
		Если Результат <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	СтруктураОтбора = Новый Структура("КассаККМ, Склад");
	ЗаполнитьЗначенияСвойств(СтруктураОтбора, Объект);
	СтруктураОтбора.Вставить("Проведен", Истина);
	
	СсылкаНаДокумент = ОткрытьФормуМодально("Документ.ОтчетОРозничныхПродажах.Форма.ФормаВыбора", Новый Структура("Отбор", СтруктураОтбора), ЭтаФорма);
	
	Если Не ЗначениеЗаполнено(СсылкаНаДокумент) Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПоОтчетуОРозничныхПродажахНаСервере(СсылкаНаДокумент);
	РассчитатьИтоговыеПоказатели(ЭтаФорма);
	
КонецПроцедуры


// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	МенюОтчетыКлиент.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуСоздатьНаОсновании(Команда)
	
	ВводНаОснованииКлиент.ВыполнитьПодключаемуюКомандуСоздатьНаОсновании(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПровестиИЗакрыть(Команда)
	
	ОбщегоНазначенияУТКлиент.ПровестиИЗакрыть(ЭтаФорма);
	
КонецПроцедуры

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
//Конец ИнтеграцияС1СДокументооборотом

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВыручкаСтавкаНДС.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ВыручкаСуммаНДС.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.НалогообложениеНДС");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС;

	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

КонецПроцедуры

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки


#Область ПриИзмененииРеквизитов

&НаСервере
Процедура КассаПриИзмененииНаСервере()
	
	РеквизитыКассыККМ = Справочники.КассыККМ.РеквизитыКассыККМ(Объект.КассаККМ);
	
	ЗаполнитьЗначенияСвойств(Объект, РеквизитыКассыККМ);
	
	Объект.НалогообложениеНДС = НДСОбщегоНазначенияСервер.ПолучитьНалогообложениеНДС(
		Объект.Организация, 
		Неопределено,
		Объект.Дата,
		Истина
	);
	
	ДенежныеСредстваСервер.ЗаполнитьСтатьюДекларацииПоЕдиномуНалогу(Объект);
	
	НастроитьЭлементыФормы();
	РассчитатьИтоговыеПоказатели(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаКлиенте
Процедура Подключаемый_ЗакрытьФорму()
	
	Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура НастроитьЭлементыФормы()
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ЗаполнитьПоОтчетуОРозничныхПродажах", "Доступность", ЗначениеЗаполнено(Объект.КассаККМ) И ЗначениеЗаполнено(Объект.Склад));
	
	ДенежныеСредстваСервер.УстановитьВидимостьСтатьиДекларацииПоЕдиномуНалогу(Объект, Элементы.СтатьяДекларацииПоЕдиномуНалогу);
	ДенежныеСредстваСервер.УправлениеЭлементомСуммаПоЕдиномуНалогу(Объект, Элементы.СуммаПоЕдиномуНалогу);
	
	УчетАкцизногоНалога.УстановитьВидимостьПолейАкцизногоНалога(Объект, Элементы.ВыручкаГруппаАкциз);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура РассчитатьИтоговыеПоказатели(Форма)
	
	СуммаВсего = 0;
	СуммаВсегоНДС = 0;
	СуммаВсегоАкциз = 0;
	Для каждого СтрокаВыручки Из Форма.Объект.Выручка Цикл
		СуммаВсегоАкциз = СуммаВсегоАкциз + ?(СтрокаВыручки.Возврат, -1, 1) * СтрокаВыручки.СуммаАкцизногоНалога;
		СуммаВсего    = СуммаВсего    + ?(СтрокаВыручки.Возврат, -1, 1) * СтрокаВыручки.Сумма;
		СуммаВсегоНДС = СуммаВсегоНДС + ?(СтрокаВыручки.Возврат, -1, 1) * СтрокаВыручки.СуммаНДС;
	КонецЦикла;
	Форма.СуммаВсего    = СуммаВсего;
	Форма.СуммаВсегоНДС = СуммаВсегоНДС;
	Форма.СуммаВсегоАкциз = СуммаВсегоАкциз;
	
	Если Форма.Объект.НалогообложениеНДС = ПредопределенноеЗначение("Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС") Тогда
		Форма.Элементы.ГруппаСтраницыНДС.ТекущаяСтраница   = Форма.Элементы.СтраницаБезНДС;
		Форма.Элементы.ГруппаСтраницыВсего.ТекущаяСтраница = Форма.Элементы.СтраницаВсегоБезНДС;
	Иначе
		Форма.Элементы.ГруппаСтраницыНДС.ТекущаяСтраница   = Форма.Элементы.СтраницаСНДС;
		Форма.Элементы.ГруппаСтраницыВсего.ТекущаяСтраница = Форма.Элементы.СтраницаВсегоСНДС;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоОтчетуОРозничныхПродажахНаСервере(СсылкаНаДокумент)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ОплатаПлатежнымиКартами.Сумма) КАК СуммаОплатыПлатежнымиКартами
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ОплатаПлатежнымиКартами КАК ОплатаПлатежнымиКартами
	|ГДЕ
	|	ОплатаПлатежнымиКартами.Ссылка = &СсылкаНаДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Товары.Количество >= 0
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Возврат,
	|	СУММА((Товары.Сумма + ВЫБОР
	|			КОГДА Товары.Ссылка.ЦенаВключаетНДС
	|				ТОГДА 0
 	|			ИНАЧЕ (Товары.СуммаНДС + Товары.СуммаАкцизногоНалога) 
	|		КОНЕЦ) * ВЫБОР
	|			КОГДА Товары.Количество >= 0
	|				ТОГДА 1
	|			ИНАЧЕ -1
	|		КОНЕЦ) КАК Сумма,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(Товары.СуммаАкцизногоНалога) КАК СуммаАкцизногоНалога,
	|	Товары.ПодакцизныеТоварыДляКоммерческогоИспользования КАК ПодакцизныеТоварыДляКоммерческогоИспользования,
	|	Товары.СтатьяДекларацииПоАкцизномуНалогу КАК СтатьяДекларацииПоАкцизномуНалогу,
	|	СУММА(Товары.СуммаНДС) КАК СуммаНДС
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &СсылкаНаДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА Товары.Количество >= 0
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	Товары.ПодакцизныеТоварыДляКоммерческогоИспользования,
	|	Товары.СтатьяДекларацииПоАкцизномуНалогу,
	|	Товары.СтавкаНДС";
	
	Запрос.УстановитьПараметр("СсылкаНаДокумент",   СсылкаНаДокумент);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ВыборкаПоШапке = МассивРезультатов[0].Выбрать();
	Если ВыборкаПоШапке.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Объект, ВыборкаПоШапке);
		Объект.Выручка.Загрузить(МассивРезультатов[1].Выгрузить());
	КонецЕсли;
	
	РассчитатьИтоговыеПоказатели(ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура ПересчитатьСуммуПоЕдиномуНалогу()
	
	ДенежныеСредстваСервер.ПересчетСуммыПоЕдиномуНалогу(Объект, СуммаВсего);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти



