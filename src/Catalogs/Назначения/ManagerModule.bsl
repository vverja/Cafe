#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура создает назначение для направления деятельности или для заказа и генерирует ему наименование 
// или просто генерирует наименование если назначение было создано ранее
// Параметры:
//		Заказ - ссылка на какой-либо заказ
//		Назначение - СправочникСсылка.Назначения - ссылка на назначение заказа
//		Клиент - ссылка на партнера, склад или подразделение - тот, для кого предназначено назначение
//		Номер - строка - номер заказа
//		Дата - Дата - дата заказа
//		ПометкаУдаления - Булево - пометка удаления заказа
//		НаправлениеДеятельности - ссылка на какое-либо направление деятельности
Процедура СоздатьОбновитьНазначение(Заказ, Назначение, Клиент, Номер, Дата, ПометкаУдаления, НаправлениеДеятельности = Неопределено) Экспорт
	
	// Назначение - либо ссылка на назначение либо ссылка нового.
	Если Не ЗначениеЗаполнено(Назначение) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	РеквизитыНазначения = РеквизитыНазначения(Назначение);
	
	ПоЗаказам = Истина;
	НаправлениеДеятельностиДляЗаполнения = НаправлениеДеятельности;
	Если ЗначениеЗаполнено(Заказ) И ЗначениеЗаполнено(НаправлениеДеятельности) Тогда
		
		ВариантОбособления = Общегоназначения.ЗначениеРеквизитаОбъекта(НаправлениеДеятельности, "ВариантОбособления");
		ПоЗаказам = ВариантОбособления = Перечисления.ВариантыОбособленияПоНаправлениюДеятельности.ПоЗаказамНаправления;
		
		Если Не ЗначениеЗаполнено(ВариантОбособления) Тогда
			ПоЗаказам = Истина;
			НаправлениеДеятельностиДляЗаполнения = Справочники.НаправленияДеятельности.ПустаяСсылка();
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПоЗаказам Тогда
		
		ПредставлениеНазначения = ПредставлениеНазначения(Номер, Дата, НаправлениеДеятельностиДляЗаполнения, Заказ, Клиент);
			
		Если РеквизитыНазначения.НаправлениеДеятельности <> НаправлениеДеятельностиДляЗаполнения
			Или РеквизитыНазначения.Заказ <> Заказ
			Или РеквизитыНазначения.Наименование <> ПредставлениеНазначения
			Или РеквизитыНазначения.ПометкаУдаления <> ПометкаУдаления Тогда
			
			НазначениеОбъект = Назначение.ПолучитьОбъект();
			Если НазначениеОбъект = Неопределено Тогда
				
				НазначениеОбъект = Справочники.Назначения.СоздатьЭлемент();
				НазначениеОбъект.УстановитьСсылкуНового(Назначение);
				
			КонецЕсли;
			
			НазначениеОбъект.НаправлениеДеятельности = НаправлениеДеятельностиДляЗаполнения;
			НазначениеОбъект.Заказ                   = Заказ;
			НазначениеОбъект.Наименование            = ПредставлениеНазначения;
			НазначениеОбъект.ПометкаУдаления         = ПометкаУдаления;
			НазначениеОбъект.Записать();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Возвращает структуру параметров для формирования запроса доступных назначений
//
//	Возвращаемое значение:
//		СтруктураПараметров - Структура - текст запроса
//
Функция ПараметрыФормированияЗапросаДоступныхНазначений() Экспорт
	
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("РежимВыбора");
	СтруктураПараметров.Вставить("ВидОперации");	
	СтруктураПараметров.Вставить("УчестьУжеПодобранные", Ложь);
	СтруктураПараметров.Вставить("ПоНесколькимТоварам", Ложь);
	СтруктураПараметров.Вставить("УпорядочитьПоДатеЗаказаНазначения", Ложь);
	СтруктураПараметров.Вставить("Источник");

	Возврат СтруктураПараметров;
	
КонецФункции

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	НаправлениеДеятельности = Неопределено;
	Если Параметры.Свойство("НаправлениеДеятельности", НаправлениеДеятельности) И ЗначениеЗаполнено(НаправлениеДеятельности) Тогда
		
		Параметры.Отбор.Вставить("НаправлениеДеятельности", НаправлениеДеятельности);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаОбъекта" Тогда
		
		Если Параметры.Свойство("ОткрытьСвязанныйОбъект") 
			И Параметры.ОткрытьСвязанныйОбъект Тогда
			
			Назначение = Параметры.Ключ;
			
			Запрос = Новый Запрос();
			Запрос.Текст = 
			"ВЫБРАТЬ 
			|	Назначение.Заказ КАК Заказ,
			|	Назначение.НаправлениеДеятельности КАК НаправлениеДеятельности
			|ИЗ
			|	Справочник.Назначения КАК Назначение
			|ГДЕ
			|	Назначение.Ссылка = &Назначение";
			Запрос.УстановитьПараметр("Назначение", Назначение);
			
			РеквизитыНазначения = Запрос.Выполнить().Выбрать();
			РеквизитыНазначения.Следующий();
			
			Если ЗначениеЗаполнено(РеквизитыНазначения.Заказ) Тогда
				
				СтандартнаяОбработка = Ложь;
				
				Параметры.Ключ = РеквизитыНазначения.Заказ;
				МетаданныеЗаказа = РеквизитыНазначения.Заказ.Метаданные();
				ВыбраннаяФорма = МетаданныеЗаказа.ОсновнаяФормаОбъекта;
				
			ИначеЕсли ЗначениеЗаполнено(РеквизитыНазначения.НаправлениеДеятельности) Тогда
				
				СтандартнаяОбработка = Ложь;
				
				Параметры.Ключ = РеквизитыНазначения.НаправлениеДеятельности;
				ВыбраннаяФорма = Метаданные.Справочники.НаправленияДеятельности.ОсновнаяФормаОбъекта;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Функция НазначениеЗаказа(Ссылка, НаправлениеДеятельности) Экспорт
	
	Назначение = Справочники.Назначения.ПустаяСсылка();
	НаправлениеДляПоиска = Справочники.НаправленияДеятельности.ПустаяСсылка();
	
	Если ЗначениеЗаполнено(НаправлениеДеятельности) Тогда
		
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(НаправлениеДеятельности, "Назначение,ВариантОбособления");
		Если Реквизиты <> Неопределено Тогда
			
			Если ЗначениеЗаполнено(Реквизиты.Назначение) Тогда
				Назначение = Реквизиты.Назначение;
			КонецЕсли;
			
			Если Реквизиты.ВариантОбособления = Перечисления.ВариантыОбособленияПоНаправлениюДеятельности.ПоЗаказамНаправления Тогда
				НаправлениеДляПоиска = НаправлениеДеятельности;
			КонецЕсли;

		КонецЕсли;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Назначение) И ЗначениеЗаполнено(Ссылка) Тогда
		
		Запрос = Новый Запрос();
		Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	Таблица.Ссылка КАК Назначение
			|ИЗ
			|	Справочник.Назначения КАК Таблица
			|ГДЕ
			|	Таблица.НаправлениеДеятельности = &НаправлениеДеятельности
			|	И Таблица.Заказ = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		Запрос.УстановитьПараметр("НаправлениеДеятельности", НаправлениеДляПоиска);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Назначение = Выборка.Назначение;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Назначение;
	
КонецФункции

Функция РеквизитыНазначения(Назначение)
	
	Результат = Новый Структура("Наименование, ПометкаУдаления, НаправлениеДеятельности, Заказ, ВариантОбособления", "", Ложь);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Т.Наименование            КАК Наименование,
		|	Т.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	Т.Заказ                   КАК Заказ,
		|	Т.ПометкаУдаления         КАК ПометкаУдаления,
		|	ТаблицаНаправления.ВариантОбособления КАК ВариантОбособления
		|ИЗ
		|	Справочник.Назначения КАК Т
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НаправленияДеятельности КАК ТаблицаНаправления
		|		ПО ТаблицаНаправления.Ссылка = Т.НаправлениеДеятельности
		|ГДЕ
		|	Т.Ссылка = &Назначение
		|");
	Запрос.УстановитьПараметр("Назначение", Назначение);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
	
		ЗаполнитьЗначенияСвойств(Результат, Выборка, "Наименование, ПометкаУдаления");
		
		Если ЗначениеЗаполнено(Выборка.Заказ) Тогда
			Результат.Заказ = Выборка.Заказ;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.НаправлениеДеятельности) Тогда
			Результат.НаправлениеДеятельности = Выборка.НаправлениеДеятельности;
			Результат.ВариантОбособления = Выборка.ВариантОбособления;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ПредставлениеНазначения(Номер, Дата, НаправлениеДеятельности, Заказ, Клиент)
	
	Если ЗначениеЗаполнено(Заказ) Тогда
		
		НомерЗаказа = ПрефиксацияОбъектовКлиентСервер.УдалитьЛидирующиеНулиИзНомераОбъекта(Номер);
		ДанныеЗаказа = Новый Структура("Представление, Номер", Строка(Заказ), Номер);
		ПредставлениеЗаказа = ОбщегоНазначенияУТКлиентСервер.ПредставлениеОбъектаИзПредставленияСсылки(ДанныеЗаказа);
		
		Если ЗначениеЗаполнено(НаправлениеДеятельности) И ЗначениеЗаполнено(Клиент) Тогда
			ПредставлениеНазначения = НСтр("ru='%Клиент%, %Номер%, %Дата% (%ПредставлениеЗаказа%, %НаправлениеДеятельности%)';uk='%Клиент%, %Номер%, %Дата% (%ПредставлениеЗаказа%, %НаправлениеДеятельности%)'");
		ИначеЕсли ЗначениеЗаполнено(НаправлениеДеятельности) И Не ЗначениеЗаполнено(Клиент) Тогда
			ПредставлениеНазначения = НСтр("ru='%Номер%, %Дата% (%ПредставлениеЗаказа%, %НаправлениеДеятельности%)';uk='%Номер%, %Дата% (%ПредставлениеЗаказа%, %НаправлениеДеятельности%)'");
		ИначеЕсли Не ЗначениеЗаполнено(НаправлениеДеятельности) И ЗначениеЗаполнено(Клиент) Тогда
			ПредставлениеНазначения = НСтр("ru='%Клиент%, %Номер%, %Дата% (%ПредставлениеЗаказа%)';uk='%Клиент%, %Номер%, %Дата% (%ПредставлениеЗаказа%)'");
		Иначе
			ПредставлениеНазначения = НСтр("ru='%Номер%, %Дата% (%ПредставлениеЗаказа%)';uk='%Номер%, %Дата% (%ПредставлениеЗаказа%)'");
		КонецЕсли;
		
		ПредставлениеНазначения = СтрЗаменить(ПредставлениеНазначения, "%Клиент%",                  Клиент);
		ПредставлениеНазначения = СтрЗаменить(ПредставлениеНазначения, "%ПредставлениеЗаказа%",     ПредставлениеЗаказа);
		ПредставлениеНазначения = СтрЗаменить(ПредставлениеНазначения, "%Номер%",                   НомерЗаказа);
		ПредставлениеНазначения = СтрЗаменить(ПредставлениеНазначения, "%Дата%",                    Формат(Дата, "ДЛФ=D"));
		ПредставлениеНазначения = СтрЗаменить(ПредставлениеНазначения, "%НаправлениеДеятельности%", НаправлениеДеятельности);
		
	Иначе
		
		ПредставлениеНазначения = Строка(НаправлениеДеятельности);
		
	КонецЕсли;
	
	Возврат ПредставлениеНазначения;
	
КонецФункции

// Возвращает текст запроса доступных назначений по остаткам в ячейке
//	Параметры:
//		ПараметрыФормированияЗапроса - Структура - параметры для формирования текстов запросов
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаДоступныхНазначенийПоОстаткамВЯчейке(ПараметрыФормированияЗапроса) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеРегистраТоварыВЯчейках.Номенклатура КАК Номенклатура,
	|	ДанныеРегистраТоварыВЯчейках.Характеристика КАК Характеристика,
	|	Назначения.Ссылка КАК Назначение,
	|	СУММА(ДанныеРегистраТоварыВЯчейках.Потребность) КАК Потребность,
	|	СУММА(ДанныеРегистраТоварыВЯчейках.Потребность) - МАКСИМУМ(ЕСТЬNULL(ДанныеДокумента.Количество, 0)) КАК Остаток,
	|	СУММА(0) КАК Обеспечено,
	|	Назначения.ДвиженияПоСкладскимРегистрам КАК ДвиженияПоСкладскимРегистрам
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыВЯчейкахОстатки.Номенклатура КАК Номенклатура,
	|		ТоварыВЯчейкахОстатки.Характеристика КАК Характеристика,
	|		ТоварыВЯчейкахОстатки.Назначение КАК Назначение,
	|		ТоварыВЯчейкахОстатки.ВНаличииОстаток КАК Потребность
	|	ИЗ
	|		РегистрНакопления.ТоварыВЯчейках.Остатки(
	|				,
	|				Характеристика = &Характеристика
	|					И Номенклатура В (&Номенклатура)
	|					И Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|					И Ячейка = &Ячейка) КАК ТоварыВЯчейкахОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыВЯчейках.Номенклатура,
	|		ТоварыВЯчейках.Характеристика,
	|		ТоварыВЯчейках.Назначение,
	|		ВЫБОР
	|			КОГДА ТоварыВЯчейках.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ТоварыВЯчейках.КОтбору
	|			ИНАЧЕ ТоварыВЯчейках.ВНаличии
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ТоварыВЯчейках КАК ТоварыВЯчейках
	|	ГДЕ
	|		ТоварыВЯчейках.Номенклатура В (&Номенклатура)
	|		И ТоварыВЯчейках.Характеристика = &Характеристика
	|		И ТоварыВЯчейках.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		И ТоварыВЯчейках.Регистратор = &Регистратор) КАК ДанныеРегистраТоварыВЯчейках
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДокументаСгруппированные КАК ДанныеДокумента
	|		ПО ДанныеРегистраТоварыВЯчейках.Номенклатура = ДанныеДокумента.Номенклатура
	|			И ДанныеРегистраТоварыВЯчейках.Характеристика = ДанныеДокумента.Характеристика
	|			И ДанныеРегистраТоварыВЯчейках.Назначение = ДанныеДокумента.Назначение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
	|		ПО ДанныеРегистраТоварыВЯчейках.Назначение = Назначения.Ссылка
	|ГДЕ
	|	ДанныеРегистраТоварыВЯчейках.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И ДанныеРегистраТоварыВЯчейках.Назначение.ДвиженияПоСкладскимРегистрам
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРегистраТоварыВЯчейках.Номенклатура,
	|	ДанныеРегистраТоварыВЯчейках.Характеристика,
	|	Назначения.Ссылка";
	
	Если ПараметрыФормированияЗапроса.УчестьУжеПодобранные Тогда
		// Запрос не для динамических списков
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТоварыДокумента.Номенклатура,
		|	ТоварыДокумента.Характеристика,
		|	ТоварыДокумента.Назначение,
		|	ТоварыДокумента.Количество
		|ПОМЕСТИТЬ ТаблицаТоваровДокумента
		|ИЗ
		|	&ТоварыДокумента КАК ТоварыДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваровДокумента.Номенклатура КАК Номенклатура,
		|	ТаблицаТоваровДокумента.Характеристика КАК Характеристика,
		|	ТаблицаТоваровДокумента.Назначение КАК Назначение,
		|	СУММА(ТаблицаТоваровДокумента.Количество) КАК Количество
		|ПОМЕСТИТЬ ТоварыДокументаСгруппированные
		|ИЗ
		|	ТаблицаТоваровДокумента КАК ТаблицаТоваровДокумента
		|ГДЕ
		|	ТаблицаТоваровДокумента.Номенклатура В (&Номенклатура) И ТаблицаТоваровДокумента.Характеристика = &Характеристика
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваровДокумента.Номенклатура,
		|	ТаблицаТоваровДокумента.Характеристика,
		|	ТаблицаТоваровДокумента.Назначение
		|;" + ТекстЗапроса;
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТоварыДокументаСгруппированные", "(" +
			"ВЫБРАТЬ
			|	ИСТИНА КАК Номенклатура,
			|	ИСТИНА КАК Характеристика,
			|	ИСТИНА КАК Назначение,
			|	0 КАК Количество" + ")");
	КонецЕсли;

	Если ПараметрыФормированияЗапроса.УпорядочитьПоДатеЗаказаНазначения Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|УПОРЯДОЧИТЬ ПО
		|	Назначения.Заказ.Дата";
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст запроса необеспеченных назначений с количественными характеристиками 
//	Параметры:
//		ПараметрыФормированияЗапроса - Структура - параметры для формирования текстов запросов
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаНеобеспеченныхНазначенийОбеспечено(ПараметрыФормированияЗапроса) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Назначения.Ссылка КАК Назначение,
	|	Назначения.ДвиженияПоСкладскимРегистрам КАК ДвиженияПоСкладскимРегистрам,
	|	СУММА(НазначениеОстатки.Потребность) КАК Потребность,
	|	СУММА(НазначениеОстатки.КЗаказу) КАК КЗаказу,
	|	СУММА(НазначениеОстатки.Обеспечено) КАК Обеспечено
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДвиженияПоНазначениям.Назначение КАК Назначение,
	|		ДвиженияПоНазначениям.ДвиженияПоСкладскимРегистрам КАК ДвиженияПоСкладскимРегистрам,
	|		ЕСТЬNULL(МАКСИМУМ(ДвиженияПоНазначениям.ПотребностьОстаток), СУММА(ДвиженияПоНазначениям.ДвиженияРаботКОбеспечениюПриход)) КАК Потребность,
	|		ЕСТЬNULL(МАКСИМУМ(ДвиженияПоНазначениям.КЗаказуОстаток), СУММА(ДвиженияПоНазначениям.ДвиженияРаботКОбеспечению)) КАК КЗаказу,
	|		ЕСТЬNULL(МАКСИМУМ(ДвиженияПоНазначениям.НаличиеПодЗаказОстаток), СУММА(ДвиженияПоНазначениям.ДвиженияРаботКОбеспечениюРасход)) КАК Обеспечено
	|	ИЗ
	|		(ВЫБРАТЬ
	|			СправочникНазначения.Ссылка КАК Назначение,
	|			СправочникНазначения.ДвиженияПоСкладскимРегистрам КАК ДвиженияПоСкладскимРегистрам,
	|			ОстаткиТоваров.ПотребностьОстаток КАК ПотребностьОстаток,
	|			ВЫБОР
	|				КОГДА ДвиженияРабот.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА ДвиженияРабот.КОбеспечению
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК ДвиженияРаботКОбеспечениюПриход,
	|			ОстаткиТоваров.КЗаказуОстаток КАК КЗаказуОстаток,
	|			ДвиженияРабот.КОбеспечению КАК ДвиженияРаботКОбеспечению,
	|			ОстаткиТоваров.НаличиеПодЗаказОстаток КАК НаличиеПодЗаказОстаток,
	|			ВЫБОР
	|				КОГДА ДвиженияРабот.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					ТОГДА ДвиженияРабот.КОбеспечению
	|				ИНАЧЕ 0
	|			КОНЕЦ КАК ДвиженияРаботКОбеспечениюРасход
	|		ИЗ
	|			Справочник.Назначения КАК СправочникНазначения
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОбеспечениеЗаказов.Остатки(
	|						,
	|						НЕ &ЭтоРабота
	|							И (Номенклатура В (&Номенклатура))
	|							И Склад = &Склад
	|							И Характеристика = &Характеристика) КАК ОстаткиТоваров
	|				ПО СправочникНазначения.Ссылка = ОстаткиТоваров.Назначение
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОбеспечениеЗаказовРаботами КАК ДвиженияРабот
	|				ПО (&ЭтоРабота)
	|					И (ДвиженияРабот.Номенклатура В (&Номенклатура))
	|					И (ДвиженияРабот.Подразделение = &Подразделение)
	|					И (ДвиженияРабот.Характеристика = &Характеристика)
	|					И СправочникНазначения.Ссылка = ДвиженияРабот.Назначение
	|		ГДЕ
	|			(СправочникНазначения.Ссылка = &Назначение
	|					ИЛИ ОстаткиТоваров.ПотребностьОстаток <> 0
	|					ИЛИ ОстаткиТоваров.КЗаказуОстаток <> 0
	|					ИЛИ &ЭтоРабота
	|						И ДвиженияРабот.КОбеспечению <> 0)) КАК ДвиженияПоНазначениям
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДвиженияПоНазначениям.Назначение,
	|		ДвиженияПоНазначениям.ДвиженияПоСкладскимРегистрам
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СправочникНазначения.Ссылка,
	|		СправочникНазначения.ДвиженияПоСкладскимРегистрам,
	|		ЕСТЬNULL(ВЫБОР
	|				КОГДА ОбеспечениеЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА -ОбеспечениеЗаказов.Потребность
	|				ИНАЧЕ ОбеспечениеЗаказов.Потребность
	|			КОНЕЦ, ВЫБОР
	|				КОГДА ДвиженияРабот.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА ДвиженияРабот.КОбеспечению
	|				ИНАЧЕ -ДвиженияРабот.КОбеспечению
	|			КОНЕЦ),
	|		ЕСТЬNULL(ВЫБОР
	|				КОГДА ОбеспечениеЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА -ОбеспечениеЗаказов.КЗаказу
	|				ИНАЧЕ ОбеспечениеЗаказов.КЗаказу
	|			КОНЕЦ, ВЫБОР
	|				КОГДА ДвиженияРабот.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА -ДвиженияРабот.КОбеспечению
	|				ИНАЧЕ ДвиженияРабот.КОбеспечению
	|			КОНЕЦ),
	|		ЕСТЬNULL(ВЫБОР
	|				КОГДА ОбеспечениеЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|					ТОГДА -ОбеспечениеЗаказов.НаличиеПодЗаказ
	|				ИНАЧЕ ОбеспечениеЗаказов.НаличиеПодЗаказ
	|			КОНЕЦ, ВЫБОР
	|				КОГДА ДвиженияРабот.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|					ТОГДА -ДвиженияРабот.КОбеспечению
	|				ИНАЧЕ ДвиженияРабот.КОбеспечению
	|			КОНЕЦ)
	|	ИЗ
	|		Справочник.Назначения КАК СправочникНазначения
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОбеспечениеЗаказов КАК ОбеспечениеЗаказов
	|			ПО (НЕ &ЭтоРабота)
	|				И (ОбеспечениеЗаказов.Номенклатура В (&Номенклатура))
	|				И (ОбеспечениеЗаказов.Характеристика = &Характеристика)
	|				И (ОбеспечениеЗаказов.Регистратор = &Регистратор)
	|				И СправочникНазначения.Ссылка = ОбеспечениеЗаказов.Назначение
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОбеспечениеЗаказовРаботами КАК ДвиженияРабот
	|			ПО (&ЭтоРабота)
	|				И (ДвиженияРабот.Номенклатура В (&Номенклатура))
	|				И (ДвиженияРабот.Характеристика = &Характеристика)
	|				И (ДвиженияРабот.Подразделение = &Подразделение)
	|				И (ОбеспечениеЗаказов.Регистратор = &Регистратор)
	|				И СправочникНазначения.Ссылка = ДвиженияРабот.Назначение
	|	ГДЕ
	|		(ДвиженияРабот.КОбеспечению <> 0
	|				ИЛИ ОбеспечениеЗаказов.Потребность <> 0
	|				ИЛИ ОбеспечениеЗаказов.КЗаказу <> 0
	|				ИЛИ ОбеспечениеЗаказов.НаличиеПодЗаказ <> 0)) КАК НазначениеОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
	|		ПО НазначениеОстатки.Назначение = Назначения.Ссылка
	|
	|
	|СГРУППИРОВАТЬ ПО
	|	Назначения.Ссылка,
	|	Назначения.ДвиженияПоСкладскимРегистрам";
	
	Если ПараметрыФормированияЗапроса.УпорядочитьПоДатеЗаказаНазначения Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|УПОРЯДОЧИТЬ ПО
		|	Назначения.Заказ.Дата";
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст запроса остатков обособленного обеспечения на складе-отправителе и складе-получателе.
//
// Возвращаемое значение:
//  Строка - текст запроса
//
Функция ТекстЗапросаНазначенийРасширенный() Экспорт

	ТекстЗапроса =
		// Остатки назначения товара по распоряжению.
		"ВЫБРАТЬ
		|	СпрНазначения.Ссылка КАК Назначение,
		|
		|	СУММА(Набор.НаличиеПодЗаказ)       КАК ВНаличииОтправитель,
		|	СУММА(Набор.Количество)            КАК Количество,
		|	СУММА(Набор.КЗаказу)               КАК Потребность
		|ИЗ(
		|	ВЫБРАТЬ
		|		Таблица.Назначение             КАК Назначение,
		|		Таблица.КПоступлениюОстаток    КАК Количество,
		|		0                              КАК НаличиеПодЗаказ,
		|		Таблица.КПоступлениюОстаток    КАК Потребность,
		|		Таблица.КПоступлениюОстаток    КАК КЗаказу
		|	ИЗ
		|		РегистрНакопления.ТоварыКПоступлению.Остатки(,
		|			ДокументПоступления = &Распоряжение
		|			И(&ПоВсейНоменклатуре ИЛИ(
		|				Номенклатура     = &Номенклатура
		|				И Характеристика = &Характеристика))
		|			И Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)) КАК Таблица
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		// Потребности.
		|	ВЫБРАТЬ
		|		Таблица.Назначение             КАК Назначение,
		|		0                              КАК Количество,
		|		0                              КАК НаличиеПодЗаказ,
		|		Таблица.ПотребностьОстаток     КАК Потребность,
		|		Таблица.КЗаказуОстаток         КАК КЗаказу
		|	ИЗ
		|		РегистрНакопления.ОбеспечениеЗаказов.Остатки(,
		|			НЕ &ПоРаспоряжению
		|			И (&ПоВсейНоменклатуре И НЕ &ТолькоТолкающиеНаправления
		|				ИЛИ &ПоВсейНоменклатуре И Назначение.Заказ = НЕОПРЕДЕЛЕНО
		|				ИЛИ НЕ &ПоВсейНоменклатуре И(
		|				Номенклатура                 = &Номенклатура
		|				И Характеристика             = &Характеристика
		|				И (&ПоВсемСкладам ИЛИ &Склад = Склад)))
		|			И (
		|				НЕ &ОтборПоРеквизитамЗаказа
		|				ИЛИ Назначение.НаправлениеДеятельности = &НаправлениеДеятельности
		|				)) КАК Таблица
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		// Толкающие направления деятельности.
		|	ВЫБРАТЬ
		|		Таблица.Назначение  КАК Назначение,
		|		0                   КАК Количество,
		|		0                   КАК НаличиеПодЗаказ,
		|		0                   КАК Потребность,
		|		0                   КАК КЗаказу
		|	ИЗ
		|		Справочник.НаправленияДеятельности КАК Таблица
		|	ГДЕ
		|		Таблица.ВариантОбособления = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленияПоНаправлениюДеятельности.ПоНаправлениюВЦелом)
		|		И Таблица.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыНаправленияДеятельности.Используется)
		|		И (НЕ &ОтборПоРеквизитамЗаказа ИЛИ Назначение.НаправлениеДеятельности = &НаправлениеДеятельности)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		// Сторно потребностей по документу.
		|	ВЫБРАТЬ
		|
		|		Таблица.Назначение             КАК Назначение,
		|
		|		ВЫБОР КОГДА &ПоРаспоряжению ТОГДА
		|					Таблица.НаличиеПодЗаказ
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ                      КАК Количество,
		|		0                              КАК НаличиеПодЗаказ,
		|		ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|					-Таблица.Потребность
		|				ИНАЧЕ
		|					Таблица.Потребность
		|			КОНЕЦ                      КАК Потребность,
		|
		|		ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|					-Таблица.КЗаказу
		|				ИНАЧЕ
		|					Таблица.КЗаказу
		|			КОНЕЦ                      КАК КЗаказу
		|
		|	ИЗ
		|		РегистрНакопления.ОбеспечениеЗаказов КАК Таблица
		|	ГДЕ
		|		Таблица.Регистратор = &Регистратор
		|		И Таблица.Активность
		|
		|		И (&ПоВсейНоменклатуре И НЕ &ТолькоТолкающиеНаправления
		|			ИЛИ &ПоВсейНоменклатуре И Таблица.Назначение.Заказ = НЕОПРЕДЕЛЕНО
		|			ИЛИ НЕ &ПоВсейНоменклатуре И(
		|			Таблица.Номенклатура                 = &Номенклатура
		|			И Таблица.Характеристика            = &Характеристика
		|			И (&ПоВсемСкладам ИЛИ Таблица.Склад = &Склад)))
		|		И (
		|			НЕ &ОтборПоРеквизитамЗаказа
		|			ИЛИ Таблица.Назначение.НаправлениеДеятельности = &НаправлениеДеятельности
		|			)
		|
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		// Потребности в работах.
		|	ВЫБРАТЬ
		|		Таблица.Назначение             КАК Назначение,
		|		0                              КАК Количество,
		|		0                              КАК НаличиеПодЗаказ,
		|		Таблица.КОбеспечениюОстаток    КАК Потребность,
		|		Таблица.КОбеспечениюОстаток    КАК КЗаказу
		|	ИЗ
		|		РегистрНакопления.ОбеспечениеЗаказовРаботами.Остатки(,
		|			НЕ &ПоРаспоряжению
		|			И (&ПоВсейНоменклатуре И НЕ &ТолькоТолкающиеНаправления
		|				ИЛИ &ПоВсейНоменклатуре И Назначение.Заказ = НЕОПРЕДЕЛЕНО
		|				ИЛИ НЕ &ПоВсейНоменклатуре И(
		|				Номенклатура                 = &Номенклатура
		|				И Характеристика             = &Характеристика))
		|			И (
		|				НЕ &ОтборПоРеквизитамЗаказа
		|				ИЛИ Назначение.НаправлениеДеятельности = &НаправлениеДеятельности
		|				)) КАК Таблица
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		// Сторно потребностей в работах по документу.
		|	ВЫБРАТЬ
		|
		|		Таблица.Назначение             КАК Назначение,
		|
		|		0                              КАК Количество,
		|		0                              КАК НаличиеПодЗаказ,
		|		ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|					-Таблица.КОбеспечению
		|				ИНАЧЕ
		|					Таблица.КОбеспечению
		|			КОНЕЦ                      КАК Потребность,
		|
		|		ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|					-Таблица.КОбеспечению
		|				ИНАЧЕ
		|					Таблица.КОбеспечению
		|			КОНЕЦ                     КАК КЗаказу
		|
		|	ИЗ
		|		РегистрНакопления.ОбеспечениеЗаказовРаботами КАК Таблица
		|	ГДЕ
		|		Таблица.Регистратор = &Регистратор
		|		И Таблица.Активность
		|
		|		И (&ПоВсейНоменклатуре И НЕ &ТолькоТолкающиеНаправления
		|			ИЛИ &ПоВсейНоменклатуре И Таблица.Назначение.Заказ = НЕОПРЕДЕЛЕНО
		|			ИЛИ НЕ &ПоВсейНоменклатуре И(
		|			Таблица.Номенклатура                 = &Номенклатура
		|			И Таблица.Характеристика            = &Характеристика))
		|		И (
		|			НЕ &ОтборПоРеквизитамЗаказа
		|			ИЛИ Таблица.Назначение.НаправлениеДеятельности = &НаправлениеДеятельности
		|			)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		// Наличие у отправителя.
		|	ВЫБРАТЬ
		|		Таблица.Назначение             КАК Назначение,
		|		0                              КАК Количество,
		|		Таблица.НаличиеПодЗаказОстаток КАК НаличиеПодЗаказ,
		|		0                              КАК Потребность,
		|		0                              КАК КЗаказу
		|	ИЗ
		|		РегистрНакопления.ОбеспечениеЗаказов.Остатки(, &ПоНаличиюУОтправителя
		|			И Номенклатура = &Номенклатура И Характеристика = &Характеристика И Склад = &СкладОтправитель
		|			И (
		|				НЕ &ОтборПоРеквизитамЗаказа
		|				ИЛИ Назначение.НаправлениеДеятельности = &НаправлениеДеятельности
		|				)) КАК Таблица
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		// Сторно наличия по документу.
		|	ВЫБРАТЬ
		|
		|		Таблица.Назначение             КАК Назначение,
		|
		|		0                              КАК Количество,
		|		ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|					-Таблица.НаличиеПодЗаказ
		|				ИНАЧЕ
		|					Таблица.НаличиеПодЗаказ
		|			КОНЕЦ                      КАК НаличиеПодЗаказ,
		|
		|		0                              КАК Потребность,
		|		0                              КАК КЗаказу
		|	ИЗ
		|		РегистрНакопления.ОбеспечениеЗаказов КАК Таблица
		|	ГДЕ
		|		&ПоНаличиюУОтправителя
		|		И Таблица.Регистратор = &Регистратор
		|		И Таблица.Активность
		|
		|		И Таблица.Номенклатура   = &Номенклатура
		|		И Таблица.Характеристика = &Характеристика
		|		И Таблица.Склад          = &СкладОтправитель
		|		И (НЕ &ОтборПоРеквизитамЗаказа
		|			ИЛИ Таблица.Назначение.НаправлениеДеятельности = &НаправлениеДеятельности
		|			)
		|			) КАК Набор
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Назначения КАК СпрНазначения
		|		ПО Набор.Назначение = СпрНазначения.Ссылка
		|		 И (НЕ &ТолькоСкладскиеНазначения ИЛИ СпрНазначения.ДвиженияПоСкладскимРегистрам)
		|
		|СГРУППИРОВАТЬ ПО
		|	СпрНазначения.Ссылка
		|
		|ИМЕЮЩИЕ
		|	СУММА(Набор.Количество) > 0 И &ПоРаспоряжению
		|	ИЛИ СУММА(Набор.КЗаказу) > 0
		|	ИЛИ &ПоВсейНоменклатуре И (
		|		СУММА(Набор.Потребность) <> 0 И НЕ &ТолькоТолкающиеНаправления
		|		ИЛИ СпрНазначения.Заказ = НЕОПРЕДЕЛЕНО)
		|	ИЛИ &ПоНаличиюУОтправителя И СУММА(Набор.НаличиеПодЗаказ) > 0";

	Возврат ТекстЗапроса;

КонецФункции

// Возвращает текст запроса всех назначений по данной номенклатуре и характеристике
//	Параметры:
//		ПараметрыФормированияЗапроса - Структура - параметры для формирования текстов запросов
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаВсехНазначений(ПараметрыФормированияЗапроса) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СправочникНазначения.Ссылка КАК Назначение,
	|	СправочникНазначения.ДвиженияПоСкладскимРегистрам КАК ДвиженияПоСкладскимРегистрам,
	|	СправочникНазначения.ВерсияДанных КАК ВерсияДанных,
	|	СправочникНазначения.ПометкаУдаления КАК ПометкаУдаления,
	|	СправочникНазначения.Предопределенный КАК Предопределенный,
	|	СправочникНазначения.Наименование КАК Наименование
	|ИЗ
	|	РегистрНакопления.ОбеспечениеЗаказов КАК ОбеспечениеЗаказов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК СправочникНазначения
	|		ПО (ОбеспечениеЗаказов.Назначение = СправочникНазначения.Ссылка)
	|			И (ОбеспечениеЗаказов.Номенклатура = &Номенклатура)
	|			И (ОбеспечениеЗаказов.Характеристика = &Характеристика)
	|			И (ОбеспечениеЗаказов.Склад = &Склад)
	|ГДЕ
	|	СправочникНазначения.Ссылка <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяССылка)";
	
	Если ПараметрыФормированияЗапроса.УпорядочитьПоДатеЗаказаНазначения Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|УПОРЯДОЧИТЬ ПО
		|	СправочникНазначения.Заказ.Дата";
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает ссылку для инициализации назначения в заказе на отгрузку (например, в заказе клиента)
//
// Параметры:
//  НаправлениеДеятельности - СправочникСсылка.НаправленияДеятельности - напрвление деятельности, указанное в заказе.
//
// Возвращаемое значение:
//  СправочникСсылка.Назначения - ссылка на назначение, для записи в заказ.
//
Функция ПолучитьСсылкуДляНовогоЗаказа(НаправлениеДеятельности) Экспорт
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(НаправлениеДеятельности, "Назначение");
	Если Реквизиты <> Неопределено И ЗначениеЗаполнено(Реквизиты.Назначение) Тогда
		Возврат Реквизиты.Назначение;
	Иначе
		Возврат Справочники.Назначения.ПолучитьСсылку();
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы


#КонецОбласти

#КонецЕсли