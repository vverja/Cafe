#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныйПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - УправляемаяФорма - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - Структура - см. возвращаемое значение ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	Настройки.Вставить("РазрешеноМенятьВарианты", Ложь);
	Настройки.События.ПриСозданииНаСервере = Истина;
	Настройки.События.ПередЗагрузкойВариантаНаСервере = Истина;
КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   Форма - УправляемаяФорма - Форма отчета.
//   Отказ - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Передается из параметров обработчика "как есть".
//
// См. также:
//   "УправляемаяФорма.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
	ЭтаФорма.РежимВариантаОтчета = Ложь;

КонецПроцедуры

// Вызывается в одноименном обработчике формы отчета после выполнения кода формы.
//
// Подробнее - см. ОтчетыПереопределяемый.ПередЗагрузкойВариантаНаСервере
//
Процедура ПередЗагрузкойВариантаНаСервере(ЭтаФорма, НовыеНастройкиКД) Экспорт
	
	Отчет = ЭтаФорма.Отчет;
	КомпоновщикНастроекФормы = Отчет.КомпоновщикНастроек;
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьПроизводство") Тогда
		ЗначениеПоиска = Новый ПараметрКомпоновкиДанных("Номенклатура");
		Для каждого ЭлементПараметр Из КомпоновщикНастроекФормы.Настройки.ПараметрыДанных.Элементы Цикл
			Если ЭлементПараметр.Параметр = ЗначениеПоиска Тогда
				ЭлементПараметр.ПредставлениеПользовательскойНастройки = НСтр("ru='Комплектующая';uk='Комплектуюча'");
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	НовыеНастройкиКД = КомпоновщикНастроекФормы.Настройки;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ИспользоватьПроизводство = ПолучитьФункциональнуюОпцию("ИспользоватьПроизводство");
	
	НастройкиОсновнойСхемы = КомпоновщикНастроек.ПолучитьНастройки();
	
	ОтборНоменклатура = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(НастройкиОсновнойСхемы, "Номенклатура").Значение;
	ОтборСерия = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(НастройкиОсновнойСхемы, "Серия").Значение;
	
	Если НЕ ЗначениеЗаполнено(ОтборНоменклатура) Тогда
		Если ПолучитьФункциональнуюОпцию("ИспользоватьПроизводство") Тогда
			ТекстСообщения = НСтр("ru='Поле ""Полуфабрикат или материал"" не заполнено.';uk='Поле ""Напівфабрикат або матеріал"" не заповнено.'");
		Иначе
			ТекстСообщения = НСтр("ru='Поле ""Комплектующая"" не заполнено.';uk='Поле ""Комплектуюча"" не заповнено.'");
		КонецЕсли; 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,, Отказ); 
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ОтборСерия) Тогда
		ТекстСообщения = НСтр("ru='Поле ""Серия"" не заполнено.';uk='Поле ""Серія"" не заповнено.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,, Отказ); 
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДокументРезультат.Очистить();
	
	#Область Инициализация
	ИспользоватьПроизводство = ПолучитьФункциональнуюОпцию("ИспользоватьПроизводство");
	
	НастройкиОсновнойСхемы = КомпоновщикНастроек.ПолучитьНастройки();
	
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("Номенклатура", КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(НастройкиОсновнойСхемы, "Номенклатура").Значение);
	ПараметрыОтчета.Вставить("Характеристика", КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(НастройкиОсновнойСхемы, "Характеристика").Значение);
	ПараметрыОтчета.Вставить("Серия", КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(НастройкиОсновнойСхемы, "Серия").Значение);
	
	СтруктураСерииДерево = Отчеты.ПрименениеСерииНоменклатуры.ПрименениеСерииНоменклатуры(ПараметрыОтчета);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Отчет.ПрименениеСерииНоменклатуры.ПФ_MXL_ПрименениеСерииНоменклатуры");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьПараметры = Макет.ПолучитьОбласть("Параметры");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
	#КонецОбласти
	
	// Вывод области Заголовок
	#Область ОбластьЗаголовок
	ПараметрыОбласти = Новый Структура("ТекстЗаголовка", НСтр("ru='Применение серии номенклатуры';uk='Застосування серії номенклатури'"));
	ОбластьЗаголовок.Параметры.Заполнить(ПараметрыОбласти);
	ДокументРезультат.Вывести(ОбластьЗаголовок);
	#КонецОбласти
	
	// Вывод области Параметры
	#Область ОбластьПараметры
	ПараметрыОбласти = Новый Структура;
	ПредставлениеНоменклатуры = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
										Строка(ПараметрыОтчета.Номенклатура), 
										Строка(ПараметрыОтчета.Характеристика));
										
	ПараметрыОбласти.Вставить("ОтборНоменклатура", ПредставлениеНоменклатуры);
	ПараметрыОбласти.Вставить("ОтборСерия", Строка(ПараметрыОтчета.Серия));
	Если ИспользоватьПроизводство Тогда
		ПараметрыОбласти.Вставить("ТекстМатериал", НСтр("ru='Полуфабрикат или материал';uk='Напівфабрикат або матеріал'"));
	Иначе
		ПараметрыОбласти.Вставить("ТекстМатериал", НСтр("ru='Комплектующая';uk='Комплектуюча'"));
	КонецЕсли;
	ОбластьПараметры.Параметры.Заполнить(ПараметрыОбласти);
	ДокументРезультат.НачатьАвтогруппировкуСтрок();
	ДокументРезультат.Вывести(ОбластьПустаяСтрока, 1,, Истина);
	ДокументРезультат.Вывести(ОбластьПараметры, 2,, Истина);
	ДокументРезультат.ЗакончитьАвтогруппировкуСтрок();
	
	ДокументРезультат.Вывести(ОбластьПустаяСтрока);
	#КонецОбласти

	// Вывод области Шапка
	#Область ОбластьШапка
	ПараметрыОбласти = Новый Структура;
	Если ИспользоватьПроизводство Тогда
		ПараметрыОбласти.Вставить("ТекстПродукция", НСтр("ru='Продукция или полуфабрикат';uk='Продукція або напівфабрикат'"));
		ПараметрыОбласти.Вставить("ТекстПроизведено", НСтр("ru='Произведено';uk='Вироблено'"));
	Иначе
		ПараметрыОбласти.Вставить("ТекстПродукция", НСтр("ru='Комплект';uk='Комплект'"));
		ПараметрыОбласти.Вставить("ТекстПроизведено", НСтр("ru='Собрано';uk='Зібрано'"));
	КонецЕсли;
	ОбластьШапка.Параметры.Заполнить(ПараметрыОбласти);
	ДокументРезультат.Вывести(ОбластьШапка);
	#КонецОбласти
	
	ДокументРезультат.НачатьАвтогруппировкуСтрок();
	ЗаполнитьСтрокиРекурсивно(СтруктураСерииДерево, ОбластьСтрока, 0, ДокументРезультат);
	ДокументРезультат.ЗакончитьАвтогруппировкуСтрок();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьСтрокиРекурсивно(СтруктураСерииДерево, ОбластьСтрока, Уровень, ДокументРезультат)

	Для каждого СтрокаДерева Из СтруктураСерииДерево.Строки Цикл
		
		ПараметрыОбласти = Новый Структура("Номенклатура,Серия,НоменклатураПредставление,
											|СерияПредставление,ЕдиницаИзмерения,Произведено");
		ЗаполнитьЗначенияСвойств(ПараметрыОбласти, СтрокаДерева);
		
		СтруктураРасшифровки = Новый Структура("Номенклатура,Характеристика,Серия");
		ЗаполнитьЗначенияСвойств(СтруктураРасшифровки, СтрокаДерева);
		ПараметрыОбласти.Вставить("СтруктураРасшифровки", СтруктураРасшифровки);
		
		ОбластьСтрока.Параметры.Заполнить(ПараметрыОбласти);
		ДокументРезультат.Вывести(ОбластьСтрока, Уровень,, Истина);
		
		ЗаполнитьСтрокиРекурсивно(СтрокаДерева, ОбластьСтрока, Уровень + 1, ДокументРезультат);
		
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
