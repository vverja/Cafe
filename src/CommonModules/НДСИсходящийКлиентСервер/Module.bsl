
#Область РаботаСТабличнымиЧастямиНалоговыхДокументов

Функция СоздатьСтруктуруДляОбработкиПоТекущейСтроке(ТекущаяСтрока, ОбработатьРеквизитыРегл) Экспорт
	
	ТекущаяСтрокаДляОбработки = Новый Структура("
		|Номенклатура, ТипНоменклатуры, 
		|Характеристика, ХарактеристикиИспользуются, 
		|Упаковка, КоличествоУпаковок, Количество,  
		|Цена, Сумма, 
	    |Содержание,
		|СтавкаНДС, СуммаНДС, СуммаСНДС
		|"
	);
	
	ЗаполнитьЗначенияСвойств(ТекущаяСтрокаДляОбработки, ТекущаяСтрока, , "Цена, СуммаНДС, СуммаСНДС");
	
	Если ОбработатьРеквизитыРегл Тогда
		ТекущаяСтрокаДляОбработки.Цена      = ТекущаяСтрока.ЦенаРегл;
		ТекущаяСтрокаДляОбработки.Сумма     = ТекущаяСтрока.СуммаБезНДСРегл;
		ТекущаяСтрокаДляОбработки.СуммаНДС  = ТекущаяСтрока.СуммаНДСРегл;
		ТекущаяСтрокаДляОбработки.СуммаСНДС = ТекущаяСтрока.СуммаБезНДСРегл + ТекущаяСтрока.СуммаНДСРегл;
	Иначе
		ТекущаяСтрокаДляОбработки.Цена      = ТекущаяСтрока.Цена;
		ТекущаяСтрокаДляОбработки.Сумма     = ТекущаяСтрока.СуммаБезНДС;
		ТекущаяСтрокаДляОбработки.СуммаНДС  = ТекущаяСтрока.СуммаНДС;
		ТекущаяСтрокаДляОбработки.СуммаСНДС = ТекущаяСтрока.СуммаСНДС;
	КонецЕсли;
	
	Возврат ТекущаяСтрокаДляОбработки;
	
КонецФункции

Процедура ЗаполнитьТекущуюСтрокуПоСтруктуреДляОбработки(ТекущаяСтрока, ТекущаяСтрокаДляОбработки, ОбработатьРеквизитыРегл) Экспорт
	
	ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ТекущаяСтрокаДляОбработки, , "Цена, СуммаНДС, СуммаСНДС");
	
	Если ОбработатьРеквизитыРегл Тогда
		ТекущаяСтрока.ЦенаРегл        = ТекущаяСтрокаДляОбработки.Цена;
		ТекущаяСтрока.СуммаБезНДСРегл = ТекущаяСтрокаДляОбработки.Сумма;
		ТекущаяСтрока.СуммаНДСРегл    = ТекущаяСтрокаДляОбработки.СуммаНДС;
	Иначе	
		ТекущаяСтрока.Цена            = ТекущаяСтрокаДляОбработки.Цена;
		ТекущаяСтрока.СуммаБезНДС     = ТекущаяСтрокаДляОбработки.Сумма;
		ТекущаяСтрока.СуммаНДС        = ТекущаяСтрокаДляОбработки.СуммаНДС;
		ТекущаяСтрока.СуммаСНДС       = ТекущаяСтрокаДляОбработки.СуммаСНДС;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область АвторасчетНДС

// Возвращает флаг авторасчет НДС по ставке НДС 
&НаСервере
Функция ПолучитьФлагАвторасчетНДСПоСтавкеНДС(Знач СтавкаНДС) Экспорт
	
	Если СтавкаНДС = Перечисления.СтавкиНДС.НДС20 Тогда
		Возврат Истина;
    ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС14 Тогда	
    	Возврат Истина;
	ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС7 Тогда	
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли; 
	
КонецФункции // ПолучитьФлагАвторасчетНДСПоСтавкеНДС

&НаСервере
Функция ПолучитьФлагИОбработатьДоступностьАвторасчетаНДСПоСтавкеНДС(СтавкаНДС, ЭлементыФормы, МассивИменЭлементов) Экспорт
	
	ФлагАвторасчетНДСПоУмолчанию = ПолучитьФлагАвторасчетНДСПоСтавкеНДС(СтавкаНДС);
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(ЭлементыФормы, МассивИменЭлементов, "Доступность", ФлагАвторасчетНДСПоУмолчанию);
	
	Возврат ФлагАвторасчетНДСПоУмолчанию;
	
КонецФункции


// Процедура корректирует построчные ошибки округления НДС так, 
// чтобы итоговый НДС по ставке совпадал с расчитанным НДС по базе
//
// Параметры:
//  ТабличнаяЧасть       - табличная часть, для которой следует пересчитать НДС
//  КлючДанных           - объект редактируемого документа.
//
&НаСервере
Процедура ПересчитатьНДСсУчетомПогрешностиОкругления(ТабличнаяЧасть, КлючДанных, ЦенаВключаетНДС, ПогрешностиОкругления, ПредставлениеТабличнойЧасти = "", ПредставлениеВалюты = "", 
													ИмяРеквизитаСумма = "Сумма", ИмяРеквизитаСуммаНДС = "СуммаНДС", ИмяРеквизитаСуммаСНДС = "СуммаСНДС", 
													ИмяРеквизитаОтменено = Неопределено, ЗначениеФлагаДляОтменыСтроки = Истина, ДополнениеКТексту ="", СтавкаНДС = Неопределено) Экспорт
	
	Перем СуммаНДСДоОкругления;    // для проверки наличия изменения в сумме НДС по документу
    Перем СуммаНДСПослеОкругления; // для проверки наличия изменения в сумме НДС по документу
	
	
	// Запомним сумма с НДС и сумму НДС
	СуммаНДСДоОкругления     = 0;
	СуммаСНДСДоОкругления    = 0;
	СуммаНДСПослеОкругления  = 0;
	СуммаСНДСПослеОкругления = 0;
	
	Для Каждого СтрокаТаблицы Из ТабличнаяЧасть Цикл
		
		Если (НЕ ИмяРеквизитаОтменено = Неопределено) И СтрокаТаблицы[ИмяРеквизитаОтменено] = ЗначениеФлагаДляОтменыСтроки Тогда
			Продолжить;
		КонецЕсли;
		
		// Запомним сумма и сумму НДС до округления
		СуммаНДСДоОкругления  = СуммаНДСДоОкругления + СтрокаТаблицы[ИмяРеквизитаСуммаНДС];
		СуммаСНДСДоОкругления = СуммаСНДСДоОкругления + СтрокаТаблицы[ИмяРеквизитаСуммаСНДС];
		
		СтрокаТаблицы[ИмяРеквизитаСуммаНДС] = НДСИсходящийСервер.РассчитатьСуммуНДСсУчетомПогрешности(СтрокаТаблицы[ИмяРеквизитаСумма],
	                                                   ЦенаВключаетНДС,
													   ?(СтавкаНДС = Неопределено, СтрокаТаблицы.СтавкаНДС, СтавкаНДС),
	                                                   ПогрешностиОкругления);
													   
		Если НЕ ЦенаВключаетНДС Тогда   
			СтрокаТаблицы[ИмяРеквизитаСуммаСНДС] = СтрокаТаблицы[ИмяРеквизитаСумма] + СтрокаТаблицы[ИмяРеквизитаСуммаНДС];
		КонецЕсли;
		
		// Рассчитаем сумму НДС после устранения ошибок округления
		СуммаНДСПослеОкругления  = СуммаНДСПослеОкругления + СтрокаТаблицы[ИмяРеквизитаСуммаНДС];
		СуммаСНДСПослеОкругления = СуммаСНДСПослеОкругления + СтрокаТаблицы[ИмяРеквизитаСуммаСНДС];
		
	КонецЦикла;
	
	// Сравним суммы до и после округления
	Если СуммаНДСПослеОкругления <> СуммаНДСДоОкругления Тогда
		
		ПриставкаСообщенияСуммаНДС = НСтр("ru='После исправления погрешностей округления сумма НДС ';uk='Після виправлення похибок округлення сума ПДВ '");
		ПриставкаСообщенияОбщаяСумма = НСтр("ru='После исправления погрешностей округления общая сумма с НДС ';uk='Після виправлення похибок округлення загальна сума з ПДВ '");
		
		ШаблонТекстаСообщения = НСтр("ru='%1 табличной части %2 изменилась (было %3 %4, стало %5 %4)';uk='%1 табличній частині %2 змінилася (було %3 %4, стало %5 %4)'");
		
		// Если суммы отличаются, сообщим об этом пользователю
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						ШаблонТекстаСообщения,
						ДополнениеКТексту,
						ПредставлениеТабличнойЧасти,
						Строка(СуммаНДСДоОкругления),
						ПредставлениеВалюты,
						Строка(СуммаНДСПослеОкругления));
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ПриставкаСообщенияСуммаНДС + ТекстСообщения, КлючДанных);
		
		// изменилась общая сумма документа - сообщим об этом пользователю 
		Если НЕ ЦенаВключаетНДС Тогда
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
							ШаблонТекстаСообщения,
							ДополнениеКТексту,
							ПредставлениеТабличнойЧасти,
							Строка(СуммаСНДСДоОкругления),
							ПредставлениеВалюты,
							Строка(СуммаСНДСПослеОкругления));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ПриставкаСообщенияОбщаяСумма + ТекстСообщения, КлючДанных);
			
		КонецЕсли;	
	КонецЕсли;
	

КонецПроцедуры // ПересчитатьНДСсУчетомПогрешностиОкругления

// Выполняет проверку нужен ли перерасчет НДС
//
// Параметры: 
//  СуммаНДС         - число, сумма НДС по документу, 
//  СуммаСНДС        - число, сумма с НДС по документу,
//
// Возвращаемое значение:
//  Булево, признак необходимости провести расчет
//
&НаСервере
Функция НуженАвторасчетНДС(ТабличнаяЧасть, ИмяРеквизитаСтавкаНДС = "СтавкаНДС", ИмяРеквизитаСуммаНДС = "СуммаНДС", ИмяРеквизитаСуммаСНДС ="СуммаСНДС",
							ИмяРеквизитаОтменено = Неопределено, ЗначениеФлагаДляОтменыСтроки = Истина, СтавкаНДС = Неопределено) Экспорт
	
	МассивСтавок = Новый Массив;
	МассивСтавок.Добавить(Перечисления.СтавкиНДС.НДС20);
    МассивСтавок.Добавить(Перечисления.СтавкиНДС.НДС14);
	МассивСтавок.Добавить(Перечисления.СтавкиНДС.НДС7);
	
	СуммаНДС = 0;
	СуммаНДСРасчетная = 0;
	
	Для каждого ПеречислениеСтавкаНДС Из МассивСтавок Цикл
		
	
		СтруктураОтбора = Новый Структура;
		Если НЕ ЗначениеЗаполнено(СтавкаНДС) Тогда
			СтруктураОтбора.Вставить(ИмяРеквизитаСтавкаНДС, ПеречислениеСтавкаНДС);
		Иначе
			Если ПеречислениеСтавкаНДС <> СтавкаНДС Тогда
				Продолжить;
			КонецЕсли; 	
		КонецЕсли; 
		Если (НЕ ИмяРеквизитаОтменено = Неопределено) Тогда
			СтруктураОтбора.Вставить(ИмяРеквизитаОтменено,  НЕ ЗначениеФлагаДляОтменыСтроки);
		КонецЕсли;
		
		ПроцентНДС = НДСОбщегоНазначенияКлиентСервер.ПолучитьСтавкуНДСЧислом(ПеречислениеСтавкаНДС);
		
		Таблица = ТабличнаяЧасть.Выгрузить(СтруктураОтбора, ИмяРеквизитаСуммаНДС + ", " + ИмяРеквизитаСуммаСНДС);
		
		СуммаНДС = СуммаНДС + Таблица.Итог(ИмяРеквизитаСуммаНДС);
		СуммаСНДС = Таблица.Итог(ИмяРеквизитаСуммаСНДС);
		
		СуммаНДСРасчетная = СуммаНДСРасчетная + НДСИсходящийСервер.ОкруглитьСУчетомПогрешности(СуммаСНДС * ПроцентНДС / (1 + ПроцентНДС), 2);
		
	КонецЦикла;
	
	Если СуммаНДСРасчетная = СуммаНДС Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции // НуженАвторасчетНДС

#КонецОбласти

#Область Прочее

Функция ПолучитьСписокАвтокорректируемыхВидовОперацийНН() Экспорт
	
	СписокЗначений = Новый СписокЗначений;
	
	СписокЗначений.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийНалоговыхДокументов.ОблагаемыеОперации"));
	СписокЗначений.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийНалоговыхДокументов.ОсвобожденныеОперации"));
	СписокЗначений.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийНалоговыхДокументов.НеНДСОперации"));
	СписокЗначений.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОблагаемыеОперации"));
	СписокЗначений.Добавить(ПредопределенноеЗначение("Перечисление.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОсвобожденныеОперации"));
	
	Возврат СписокЗначений;
	
КонецФункции
//

Функция ПолучитьБазовыйНалоговыйДокументДляП2(Приложение2, ВозвращатьЭтотДокументЕслиБазовогоНету = Ложь) Экспорт
	
	Если Приложение2.ВидОперацииВозвратКорректировка = ПредопределенноеЗначение("Перечисление.ВидыОперацийПриложений2КНалоговойНакладной.Корректировка")
		 И ЗначениеЗаполнено(Приложение2.НалоговаяНакладная) Тогда
		Возврат Приложение2.НалоговаяНакладная;
		
	ИначеЕсли Приложение2.ВидОперацииВозвратКорректировка = ПредопределенноеЗначение("Перечисление.ВидыОперацийПриложений2КНалоговойНакладной.КорректировкаВозврата")
		 И ЗначениеЗаполнено(Приложение2.ОсновноеП2ДляВозврата) Тогда
		Возврат Приложение2.ОсновноеП2ДляВозврата;
		
	ИначеЕсли ВозвращатьЭтотДокументЕслиБазовогоНету Тогда
		Возврат Приложение2.Ссылка;
		
	Иначе
		Возврат Неопределено;
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти
