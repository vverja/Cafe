#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);

	СФормироватьТаблицуРаспоряжений();
	УстановитьБлокировкиДанныхДляРасчетаГрафика();

КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	МассивРаспоряжений = ДополнительныеСвойства.ТаблицаРаспоряжений.ВыгрузитьКолонку("Распоряжение");
	РегистрыНакопления.ДвижениеТоваров.РассчитатьИтогиРегистраОстаткиТоваровПоГрафику(МассивРаспоряжений);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура формирует таблицу распоряжений, которые были раньше в движениях и которые сейчас будут записаны.
//
Процедура СФормироватьТаблицуРаспоряжений()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.Распоряжение КАК Распоряжение
		|ИЗ
		|	РегистрНакопления.ДвижениеТоваров КАК Таблица
		|ГДЕ
		|	Таблица.Регистратор = &Регистратор";

	ТаблицаРаспоряжений = Запрос.Выполнить().Выгрузить();
	ТаблицаНовыхРаспоряжений = Выгрузить(, "Распоряжение");
	ТаблицаНовыхРаспоряжений.Свернуть("Распоряжение");
	Для Каждого Запись Из ТаблицаНовыхРаспоряжений Цикл

		Если ТаблицаРаспоряжений.Найти(Запись.Распоряжение, "Распоряжение") = Неопределено Тогда
			ТаблицаРаспоряжений.Добавить().Распоряжение = Запись.Распоряжение;
		КонецЕсли;

	КонецЦикла;

	ДополнительныеСвойства.Вставить("ТаблицаРаспоряжений", ТаблицаРаспоряжений);

КонецПроцедуры

Процедура УстановитьБлокировкиДанныхДляРасчетаГрафика()

	Блокировка = Новый БлокировкаДанных;

	// Блокировка регистра для подсчета остатков по распоряжениям.
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ДвижениеТоваров");
	ЭлементБлокировки.Режим          = РежимБлокировкиДанных.Разделяемый;
	ЭлементБлокировки.ИсточникДанных = ДополнительныеСвойства.ТаблицаРаспоряжений;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Распоряжение", "Распоряжение");

	// Блокировка набора для записи.
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ГрафикПоступленияТоваров.НаборЗаписей");
	ЭлементБлокировки.Режим          = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = ДополнительныеСвойства.ТаблицаРаспоряжений;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Регистратор", "Распоряжение");

	Блокировка.Заблокировать();

КонецПроцедуры

#КонецОбласти

#КонецЕсли