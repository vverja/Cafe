#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);

	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ПоместитьВременнуюТаблицуИсходныхДвижений(Отбор.Регистратор.Значение, МенеджерВременныхТаблиц);
	ДополнительныеСвойства.Вставить("ГрафикПоступленияТоваровМенеджерВременныхТаблиц", МенеджерВременныхТаблиц);

КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	МенеджерВременныхТаблиц = ДополнительныеСвойства.ГрафикПоступленияТоваровМенеджерВременныхТаблиц;
	ЕстьИзменения = ПоместитьВременнуюТаблицуИзмененийДвижений(Отбор.Регистратор.Значение, МенеджерВременныхТаблиц);

	Если ЕстьИзменения Тогда

		РегистрыСведений.ДоступныеОстаткиПланируемыхПоступлений.РассчитатьОстаткиГрафикаДвиженияТоваров(МенеджерВременныхТаблиц);

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПоместитьВременнуюТаблицуИсходныхДвижений(Ссылка, МенеджерВременныхТаблиц)

	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Т.Номенклатура   КАК Номенклатура,
		|	Т.Характеристика КАК Характеристика,
		|	Т.Склад          КАК Склад,
		|
		|	Т.ДатаСобытия         КАК ДатаПоступления,
		|	Т.КоличествоИзЗаказов КАК КоличествоПередЗаписью
		|
		|ПОМЕСТИТЬ ВТГрафикПоступленияТоваровПередЗаписью
		|ИЗ
		|	РегистрНакопления.ГрафикПоступленияТоваров КАК Т
		|ГДЕ
		|	Т.Регистратор = &Регистратор
		|	И Т.КоличествоИзЗаказов <> 0");

	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();

КонецПроцедуры

Функция ПоместитьВременнуюТаблицуИзмененийДвижений(Ссылка, МенеджерВременныхТаблиц)

	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Набор.Номенклатура   КАК Номенклатура,
		|	Набор.Характеристика КАК Характеристика,
		|	Набор.Склад          КАК Склад
		|
		|ПОМЕСТИТЬ ВтТовары
		|ИЗ(
		|	ВЫБРАТЬ
		|		ПередЗаписью.Номенклатура           КАК Номенклатура,
		|		ПередЗаписью.Характеристика         КАК Характеристика,
		|		ПередЗаписью.Склад                  КАК Склад,
		|
		|		ПередЗаписью.ДатаПоступления        КАК ДатаПоступления,
		|		-ПередЗаписью.КоличествоПередЗаписью КАК КоличествоИзменение
		|	ИЗ
		|		ВТГрафикПоступленияТоваровПередЗаписью КАК ПередЗаписью
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ПриЗаписи.Номенклатура           КАК Номенклатура,
		|		ПриЗаписи.Характеристика         КАК Характеристика,
		|		ПриЗаписи.Склад                  КАК Склад,
		|
		|		ПриЗаписи.ДатаСобытия            КАК ДатаПоступления,
		|		ПриЗаписи.КоличествоИзЗаказов    КАК КоличествоИзменение
		|	ИЗ
		|		РегистрНакопления.ГрафикПоступленияТоваров КАК ПриЗаписи
		|	ГДЕ
		|		ПриЗаписи.Регистратор = &Регистратор
		|		И ПриЗаписи.КоличествоИзЗаказов <> 0) КАК Набор
		|
		|СГРУППИРОВАТЬ ПО
		|	Набор.Номенклатура, Набор.Характеристика, Набор.Склад,
		|	Набор.ДатаПоступления
		|
		|ИМЕЮЩИЕ
		|	СУММА(Набор.КоличествоИзменение) <> 0");

	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	РезультатЗапроса = Запрос.Выполнить();
	Возврат Не РезультатЗапроса.Пустой();

КонецФункции

#КонецОбласти

#КонецЕсли

