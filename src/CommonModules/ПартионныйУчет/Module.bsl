////////////////////////////////////////////////////////////////////////////////////////////////////
// ПартионныйУчет - модуль оффлайнового (неоперативного) расчета регистров партий
// 
// Заметки по концепции:
//
// * Партии.Первичное = Истина означает, что запись не будет разбита, но может быть дополнена данными.
// Если Партии.Первичное = Ложь, то запись может быть перезаписана, разбита на записи, удалена и т.д.
//
// * Партии.ДокументИсточник показывает документ возникновения остатка.
// Для расходов текущего периода это будет документ поступления или перемещения на организацию/склад,
// для приходов перемещений/пересортиц и прочих расходно-приходных документов это будет сам документ
// перемещения, для сторнирующих документов это будет документ реализации.
// При расходах по остаткам прошлого периода это будет документ партии (поступления).
// Реквизит нужен для протягивания партий затрат и партий расходов на с/с по движениям перемещений.
//
// * Записи с типом "Остаток" никогда не пишутся в базу.
////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Выполняет полный партионный расчет по ОкончаниеПериодаРасчета
Процедура РассчитатьВсе(ОкончаниеПериодаРасчета, Организация = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	УровеньИнформация = УровеньЖурналаРегистрации.Информация;
	ФорматПериода = "ДФ='дд.ММ.гггг'";
	КодЯзыка = Метаданные.ОсновнойЯзык.КодЯзыка;
	
	Комментарий = НСтр("ru='Выполняется расчет по %ОкончаниеПериода%';uk='Виконується розрахунок за %ОкончаниеПериода%'",КодЯзыка);
	Комментарий = СтрЗаменить(Комментарий, "%ОкончаниеПериода%", Формат(ОкончаниеПериодаРасчета, ФорматПериода));
	ЗаписьЖурналаРегистрации(
		НСтр("ru='Партионный учет.Начало расчета';uk='Партіонний облік.Початок розрахунку'",КодЯзыка), УровеньИнформация, , ОкончаниеПериодаРасчета, Комментарий);
		
	ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(НСтр("ru='Партионный учет';uk='Партіонний облік'"));
	
	СхемаРасчета = СхемаРасчетаПартий(ОкончаниеПериодаРасчета, Организация);
	
	Если СхемаРасчета.Количество() = 0 Тогда
		
		// Расчет не требуется
		Комментарий = НСтр("ru='Расчет партий по %ОкончаниеПериода% не требуется - партии уже рассчитаны';uk='Розрахунок партій по %ОкончаниеПериода% не потрібен - партії вже розраховані'",КодЯзыка);
		Комментарий = СтрЗаменить(Комментарий, "%ОкончаниеПериода%", Формат(ОкончаниеПериодаРасчета, ФорматПериода));
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru='Партионный учет.Расчет не требуется';uk='Партіонний облік.Розрахунок не вимагається'",КодЯзыка), УровеньИнформация, , ОкончаниеПериодаРасчета, Комментарий);
		
		Возврат;
		
	КонецЕсли;
	
	ИспользоватьПартионныйУчет = Константы.ИспользоватьПартионныйУчет.Получить();
	
	УвеличитьНомерЗадания();
	
	Для Каждого СтрокаСхемыРасчета Из СхемаРасчета Цикл
		
		НачалоПериода     = НачалоМесяца(СтрокаСхемыРасчета.Дата);
		ОкончаниеПериода  = КонецМесяца(СтрокаСхемыРасчета.Дата);
		МассивОрганизаций = СтрокаСхемыРасчета.Организации;
		
		
		Если ИспользоватьПартионныйУчет Тогда
			// Этап 1Х: расчет партий товаров
			РассчитатьПартииТоваров(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
			// Этап 16: расчет партий переданных на комиссию
			РассчитатьПартииПереданные(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
			// Этап 18: расчет партий производственных затрат
			РассчитатьПартииПроизводства(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
			// Этап 2Х: расчет партий затрат на выпуск
			РассчитатьПартииЗатрат(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
			// Этапы 3Х и 4Х: расчет партий прочих расходов на себестоимость товаров, партионный учет включен
			РассчитатьПартииПрочих(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
			// Этап 5Х: расчет партий расходов на себестоимость выбытия товаров
			РассчитатьПартииРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
			// Этап 64: расчет приходов партий прочих расходов
			РассчитатьПриходыПартийПрочихРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		Иначе
			// Этап 2Х: расчет партий затрат на выпуск
			РассчитатьПартииПроизводства(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
			// Этапы 3Х и 4Х: расчет партий прочих расходов на себестоимость товаров при выключенном партионном учете
			РассчитатьПартииПрочих(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		КонецЕсли;
		
		// Этап 7Х: Выполнение расчета себестоимости
		РассчитатьСебестоимость(ОкончаниеПериода, МассивОрганизаций);
		
		СформироватьДвиженияПоНДС(ОкончаниеПериода, МассивОрганизаций);
		
		// Этап 8Х: Запись новых границ рассчитанных партий - завершение партионного расчета за период
		УстановитьГраницыПартииТоваровОрганизаций(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
		СформироватьЗаданияККорректировкеНалоговыхНазначенийКапитальныхИнвестиций(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
		ЗаписьЖурналаРегистрации(
			НСтр("ru='Партионный учет.Рассчитан период';uk='Партіонний облік.Розрахований період'",КодЯзыка), УровеньИнформация, , Формат(НачалоПериода, "ДФ='ММ.гггг'"));
		
	КонецЦикла;
	
	Комментарий = НСтр("ru='Выполнен расчет с %НачалоПериода% по %ОкончаниеПериода%';uk='Виконаний розрахунок з %НачалоПериода% по %ОкончаниеПериода%'",КодЯзыка);
	Комментарий = СтрЗаменить(Комментарий, "%НачалоПериода%", Формат(СхемаРасчета[0].Дата, ФорматПериода));
	Комментарий = СтрЗаменить(Комментарий, "%ОкончаниеПериода%", Формат(ОкончаниеПериодаРасчета, ФорматПериода));
	
	Если ЗначениеЗаполнено(Организация) Тогда
		Комментарий = Комментарий + "
			|" + НСтр("ru='Организация: %Организация%';uk='Організація: %Организация%'");
		Комментарий = СтрЗаменить(Комментарий, "%Организация%", СокрЛП(Организация));
	КонецЕсли;
	
	ЗаписьЖурналаРегистрации(
		НСтр("ru='Партионный учет.Окончание расчета';uk='Партіонний облік.Закінчення розрахунку'",КодЯзыка), УровеньИнформация, , ОкончаниеПериодаРасчета, Комментарий);
	
КонецПроцедуры

// Фактическое требуемое начало периода расчета для даты окончания периода расчета
Функция НачалоПериодаРасчета(ОкончаниеПериодаРасчета, МассивОрганизаций) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Организации.Ссылка КАК Организация,
	|	МИНИМУМ(Задания.Месяц) КАК Месяц
	|ПОМЕСТИТЬ ВТПериоды
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаданияКРасчетуСебестоимости КАК Задания
	|		ПО Организации.Ссылка = Задания.Организация
	|ГДЕ
	|	Организации.Ссылка В(&МассивОрганизаций)
	|
	|СГРУППИРОВАТЬ ПО
	|	Организации.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(Периоды.Месяц) КАК НачалоПериодаРасчета
	|ИЗ
	|	ВТПериоды КАК Периоды
	|ГДЕ
	|	Периоды.Месяц ЕСТЬ НЕ NULL 
	|	И Периоды.Месяц <= &ОкончаниеПериодаРасчета
	|
	|ИМЕЮЩИЕ
	|	МИНИМУМ(Периоды.Месяц) ЕСТЬ НЕ NULL
	|");
	
	Запрос.УстановитьПараметр("ОкончаниеПериодаРасчета", КонецМесяца(ОкончаниеПериодаРасчета));
	Запрос.УстановитьПараметр("МассивОрганизаций",       МассивОрганизаций);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Возврат ?(Выборка.Следующий(), НачалоМесяца(Выборка.НачалоПериодаРасчета), КонецМесяца(ОкончаниеПериодаРасчета) + 1);
	
КонецФункции

// Возвращает информацию о том, в каких периодах и по каким организациям необходимо пересчитать партии и себестоимость.
// Параметрами функции являются требуемые пользователю отборы по дате и организациям,
// а результат - это необходимые по факту (по данным ИБ) пересчеты.
// Например, может получится так, что
//	- пересчитать хочется только одну организацию в текущем месяце,
//  - но для этого надо пересчитать все организации начиная с прошлого года,
//	  т.к. по ним есть записи в регистре ЗаданияКРасчетуСебестоимости и они связаны по схеме Интеркампани
//
// Параметры:
//	Дата - Дата - конец периода (месяца), в котором надо выполнить пересчет
//	ОтборОрганизации - СправочникСсылка.Организации, Массив - организации, по которым надо выполнить пересчет
//
// Возвращаемое значение:
//	ТаблицаЗначений - схема выполнения пересчета партий и себестоимости
//		Дата - Дата - требуемый по факту период пересчета
//		Организации - Массив - массив организаций, по которым требуется пересчет.
// Таблица отсортирована по колонке Дата и содержит все периоды (без пропусков),
// начиная с самой ранней необходимой даты пересчета и до даты из параметра Дата.
// В таблице не будет строк если пересчет не требуется,
// т.е. если параметр Дата больше, чем даты в записях регистра ЗаданияКРасчетуСебестоимости.
//
Функция СхемаРасчетаПартий(Знач Дата = Неопределено, ОтборОрганизации = Неопределено) Экспорт
	
	Дата = КонецМесяца(?(НЕ ЗначениеЗаполнено(Дата), ТекущаяДатаСеанса(), Дата));
	
	СхемаРасчета = Новый ТаблицаЗначений; // результат выполнения этой функции
	СхемаРасчета.Колонки.Добавить("Дата"); // период пересчета
	СхемаРасчета.Колонки.Добавить("Организации"); // массив организаций, которые надо пересчитать в этом периоде
	СхемаРасчета.Индексы.Добавить("Дата");
	
	ДатыПересчетаПоОрганизациям = Новый Соответствие; // Организация - Дата, с которой по ней необходим пересчет
	СамаяРанняяДатаПересчета    = КонецМесяца(КонецМесяца(Дата) + 1);
	
	// Запомним даты начала пересчета по каждой организации
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Задания.Организация КАК Организация,
	|	МИНИМУМ(КОНЕЦПЕРИОДА(Задания.Месяц, МЕСЯЦ)) КАК Месяц
	|ИЗ
	|	РегистрСведений.ЗаданияКРасчетуСебестоимости КАК Задания
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО Задания.Организация = Организации.Ссылка
	|ГДЕ
	|	Задания.Месяц <= &Дата
	|	И НЕ Организации.ПометкаУдаления
	|	И ВЫБОР
	|			КОГДА НЕ &ИспользоватьУправленческуюОрганизацию
	|					И Организации.Ссылка = ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	Задания.Организация";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("ИспользоватьУправленческуюОрганизацию", ПолучитьФункциональнуюОпцию("ИспользоватьУправленческуюОрганизацию"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ДатыПересчетаПоОрганизациям.Вставить(Выборка.Организация, Выборка.Месяц);
		СамаяРанняяДатаПересчета = Мин(СамаяРанняяДатаПересчета, Выборка.Месяц);
	КонецЦикла;
	
	// Добавим в схему расчета строки для каждого периода, начиная с самого раннего и до рассчитываемого периода
	ОбрабатываемаяДата = СамаяРанняяДатаПересчета;
	
	Пока ОбрабатываемаяДата <= Дата Цикл
		
		НоваяСтрока = СхемаРасчета.Добавить();
		НоваяСтрока.Дата 		= ОбрабатываемаяДата;
		НоваяСтрока.Организации = ?(ОбрабатываемаяДата = Дата,
			СвязиОрганизацийПоСхемеИнтеркампани(Дата, ОтборОрганизации),
			Новый Массив);
		
		ОбрабатываемаяДата = КонецМесяца(КонецМесяца(ОбрабатываемаяДата) + 1);
		
	КонецЦикла;
	
	// Заполним итеративно организации для перерасчета
	ОбрабатываемаяДата = Макс(СамаяРанняяДатаПересчета, Дата);
	
	Пока ОбрабатываемаяДата <= Дата Цикл
		
		ТекущаяСтрока    = СхемаРасчета.Найти(ОбрабатываемаяДата, "Дата");
		ПредыдущаяСтрока = СхемаРасчета.Найти(НачалоМесяца(ОбрабатываемаяДата) - 1, "Дата");
		
		Если ПредыдущаяСтрока <> Неопределено Тогда
			
			ПоявилисьИзмененияВМассивеОрганизаций = Ложь;
			
			// Организации, которые пересчитывались в прошлом периоде, надо пересчитать и в текущем
			Для Каждого ПредыдущаяОрганизация Из ПредыдущаяСтрока.Организации Цикл
				Если ОбщегоНазначенияУТКлиентСервер.ДобавитьНовоеЗначениеВМассив(ТекущаяСтрока.Организации, ПредыдущаяОрганизация) Тогда
					ПоявилисьИзмененияВМассивеОрганизаций = Истина;
				КонецЕсли;
			КонецЦикла;
			
			// Дополним массив расчитываемых организаций связанными с ними организациями
			Если ПоявилисьИзмененияВМассивеОрганизаций Тогда
				ТекущаяСтрока.Организации = СвязиОрганизацийПоСхемеИнтеркампани(ТекущаяСтрока.Дата, ТекущаяСтрока.Организации);
			КонецЕсли;
			
		КонецЕсли;
		
		ИзмененнаяОбрабатываемаяДата = ОбрабатываемаяДата;
		
		// Проверим необходимость пересчета организаций текущего периода в более ранних периодах
		Для Каждого ТекущаяОрганизация Из ТекущаяСтрока.Организации Цикл
			
			ДатаПересчетаПоОрганизации = ДатыПересчетаПоОрганизациям[ТекущаяОрганизация];
			
			Если ЗначениеЗаполнено(ДатаПересчетаПоОрганизации) И ДатаПересчетаПоОрганизации < ОбрабатываемаяДата Тогда
				
				СтрокаПоДатеОрганизации = СхемаРасчета.Найти(ДатаПересчетаПоОрганизации, "Дата");
				
				Если ОбщегоНазначенияУТКлиентСервер.ДобавитьНовоеЗначениеВМассив(СтрокаПоДатеОрганизации.Организации, ТекущаяОрганизация) Тогда
					// Такая организация в том периоде еще не была отобрана для пересчета
					ИзмененнаяОбрабатываемаяДата = Мин(ИзмененнаяОбрабатываемаяДата, ДатаПересчетаПоОрганизации);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
		Если ИзмененнаяОбрабатываемаяДата < ОбрабатываемаяДата Тогда
			
			// Следующий цикл начнем с самого раннего измененного прошлого периода
			ОбрабатываемаяДата = ИзмененнаяОбрабатываемаяДата;
			
			// Дополним в нем массив расчитываемых организаций связанными с ними организациями
			ТекущаяСтрока = СхемаРасчета.Найти(ОбрабатываемаяДата, "Дата");
			ТекущаяСтрока.Организации = СвязиОрганизацийПоСхемеИнтеркампани(ТекущаяСтрока.Дата, ТекущаяСтрока.Организации);
			
		Иначе
			
			// В прошлых периодах ничего не поменялось - переходим к следующему периоду
			ОбрабатываемаяДата = КонецМесяца(КонецМесяца(ОбрабатываемаяДата) + 1);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Пока СхемаРасчета.Количество() > 0 И СхемаРасчета[0].Организации.Количество() = 0 Цикл
		// Удалим строки ранних периодов, в которых нет организаций для пересчета
		СхемаРасчета.Удалить(0);
	КонецЦикла;
	
	Возврат СхемаРасчета;
	
КонецФункции

Процедура РассчитатьКорректировкиНДС(НачалоПериода, ОкончаниеПериода, МассивОрганизаций) Экспорт	
	ИспользоватьПартионныйУчет = Константы.ИспользоватьПартионныйУчет.Получить();
	ИспользоватьРаздельныйУчетПоНалогообложению = Константы.ИспользоватьРаздельныйУчетПоНалогообложению.Получить();
	Если НЕ ИспользоватьПартионныйУчет ИЛИ НЕ ИспользоватьРаздельныйУчетПоНалогообложению Тогда
		Возврат;
	КонецЕсли; 
	УстановитьПривилегированныйРежим(Истина);
	РассчитатьЗаписиКорректировокНДС(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
КонецПроцедуры

Процедура РассчитатьВсеПоГраницу(ПараметрыРасчета, Знач Период, НомерЗадания = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(НомерЗадания) Тогда
		НомерЗадания = РегистрыСведений.ЗаданияКРасчетуСебестоимости.ПолучитьНомерЗадания();
	КонецЕсли;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	МИНИМУМ(Очередь.Месяц) КАК НачалоПериодаРасчета
	|ИЗ
	|	РегистрСведений.ЗаданияКРасчетуСебестоимости КАК Очередь
	|ГДЕ
	|	&ИспользоватьПартионныйУчет
	|	И Очередь.НомерЗадания <= &НомерЗадания
	|ИМЕЮЩИЕ 
	|	НЕ (МИНИМУМ(Очередь.Месяц) ЕСТЬ NULL)
	|	И МИНИМУМ(Очередь.Месяц) <= &РасчетныйПериод
	|");
	Запрос.УстановитьПараметр("ИспользоватьПартионныйУчет", Константы.ИспользоватьПартионныйУчет.Получить());
	Запрос.УстановитьПараметр("НомерЗадания", НомерЗадания);
	Запрос.УстановитьПараметр("РасчетныйПериод", НачалоМесяца(Период));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ГраницаРасчета = Выборка.НачалоПериодаРасчета;
		КоличествоДокументов = РегистрыСведений.ЗаданияКРасчетуСебестоимости.КоличествоНеактуальныхДокументов(Период, НомерЗадания);
		Если НачалоМесяца(Период) < НачалоМесяца(ТекущаяДатаСеанса()) Тогда
			ПериодРасчета = НачалоМесяца(ТекущаяДатаСеанса()) - 1; // предыдущий месяц
		Иначе
			ПериодРасчета = КонецМесяца(ТекущаяДатаСеанса()); // текущий месяц
		КонецЕсли;
		РассчитатьФоновымЗаданием(ПериодРасчета);
	Иначе
		ГраницаРасчета = Неопределено;
		КоличествоДокументов = 0;
	КонецЕсли;
	
	ПараметрыРасчета.Вставить("ГраницаРасчета", ГраницаРасчета);
	ПараметрыРасчета.Вставить("КоличествоДокументов", КоличествоДокументов);
	ПараметрыРасчета.Вставить("НомерЗадания", НомерЗадания);
	ПараметрыРасчета.Вставить("ГраницаПартионногоУчета", Период);
	
КонецПроцедуры

Процедура РассчитатьФоновымЗаданием(Период, Организация = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ФоновоеЗаданиеАктивно() ИЛИ ЗакрытиеМесяцаУТВызовСервера.АктивноЗаданиеЗакрытияМесяца() Тогда
		Возврат;
	КонецЕсли;
	
	НаименованиеЗадания = НСтр("ru='Восстановление последовательности партионного учета';uk='Відновлення послідовності партіонного обліку'");
	
	ПараметрыЭкспортнойПроцедуры = Новый Массив;
	ПараметрыЭкспортнойПроцедуры.Добавить(Период);
	ПараметрыЭкспортнойПроцедуры.Добавить(Организация);
	
	ПараметрыЗадания = Новый Массив;
	ПараметрыЗадания.Добавить("ПартионныйУчет.РассчитатьВсе");
	ПараметрыЗадания.Добавить(ПараметрыЭкспортнойПроцедуры);
	
	Ключ = ИмяФоновогоЗадания();

	ФоновыеЗадания.Выполнить("РаботаВБезопасномРежиме.ВыполнитьМетодКонфигурации", ПараметрыЗадания, Ключ, НаименованиеЗадания);
	
КонецПроцедуры

// Возвращает имя фонового предопределенного задания расчета партий.
Функция ИмяФоновогоЗадания() Экспорт
	Возврат "ПартионныйУчет";
КонецФункции

// Выполняет проверку на активное задание расчета партий.
Функция ФоновоеЗаданиеАктивно() Экспорт
	
	КлючЗадания = ИмяФоновогоЗадания();
	
	Отбор = Новый Структура();
	Отбор.Вставить("Ключ", КлючЗадания);
	Отбор.Вставить("Состояние", СостояниеФоновогоЗадания.Активно);
	
	АктивныеЗадания = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
	
	Если АктивныеЗадания.Количество() > 0 Тогда
		ФоновоеЗаданиеАктивно = Истина;
	Иначе
		ФоновоеЗаданиеАктивно = Ложь;
	КонецЕсли;
	Возврат ФоновоеЗаданиеАктивно;
КонецФункции

#КонецОбласти


#Область ЭтапыРасчета

// Этап 1Х: расчет партий товаров
Процедура РассчитатьПартииТоваров(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ИмяРегистра = Метаданные.РегистрыНакопления.ПартииТоваровОрганизаций.Имя;
	
	НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
	// ФАЗА 0:
	// Восстановление "потерянных" первичных движений по партиям товаров
	ВосстановитьДвиженияПоПартиямТоваров(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	// ФАЗА 10: Выборка исходных данных для расчета партий товаров организаций
	ДанныеДляПартийТоваров = ДанныеДляПартийТоваров(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	// ФАЗА 12: Расчет партий товаров по исходным данным
	МассивИсключаемыхТипов = Новый Массив;
	МассивИсключаемыхТипов.Добавить(Тип("ДокументСсылка.КорректировкаРегистров"));
	Регистраторы = Регистраторы(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, ИмяРегистра, МассивИсключаемыхТипов);
	РегистраторыССохраняемымиДвижениями = РегистраторыССохраняемымиДвижениями(ИмяРегистра, ДанныеДляПартийТоваров, Регистраторы, НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	РасчетныеПартииТоваров = РасчетныеПартииТоваров(ДанныеДляПартийТоваров, Регистраторы);
	// ФАЗА 14: Запись регистра ПартииТоваровОрганизаций
	ЗаписатьРасчетныеПартии(РегистрыНакопления[ИмяРегистра], РасчетныеПартииТоваров, Регистраторы);
	ОчиститьРегистрНаСервере(Регистраторы, ИмяРегистра, РегистраторыССохраняемымиДвижениями);
	ЗаписатьСохраняемыеДвижения(РегистрыНакопления[ИмяРегистра], ДанныеДляПартийТоваров, РегистраторыССохраняемымиДвижениями);
	// Завершение этапа
	КоличествоЗаписей = КоличествоЗаписей(ДанныеДляПартийТоваров);
	ДанныеДляПартийТоваров.Закрыть();
	РасчетныеПартииТоваров = Неопределено;
	Замер = ТекущаяУниверсальнаяДатаВМиллисекундах() - НачалоЗамера;
	Комментарий = НСтр("ru='Рассчитано %КолвоСтрок% стр. за %Замер% сек.';uk='Розраховано %КолвоСтрок% ряд. за %Замер% сек.'",Метаданные.ОсновнойЯзык.КодЯзыка);
	Комментарий = СтрЗаменить(Комментарий, "%КолвоСтрок%", КоличествоЗаписей);
	Комментарий = СтрЗаменить(Комментарий, "%Замер%", Формат(Замер/1000., "ЧДЦ=3; ЧН=; ЧГ="));
	ЗаписьЖурналаРегистрации(
		НСтр("ru='Партионный учет.ПартииТоваровОрганизаций';uk='Партіонний облік.ПартииТоваровОрганизаций'",Метаданные.ОсновнойЯзык.КодЯзыка),
		УровеньЖурналаРегистрации.Информация,,, Комментарий);
КонецПроцедуры

// Этап 16: расчет партий переданных на комиссию
Процедура РассчитатьПартииПереданные(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ИмяРегистра = Метаданные.РегистрыНакопления.ПартииТоваровПереданныеНаКомиссию.Имя;
	
	// ФАЗА 10: Выборка исходных данных для расчета партий товаров организаций
	ДанныеДляПартийПереданных = ДанныеДляПартийПереданных(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	// ФАЗА 12: Расчет партий товаров по исходным данным
	Регистраторы = Регистраторы(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, ИмяРегистра);
	РегистраторыПартийВПути(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, Регистраторы);
	РегистраторыССохраняемымиДвижениями = РегистраторыССохраняемымиДвижениями(ИмяРегистра, ДанныеДляПартийПереданных, Регистраторы, НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	РасчетныеПартииПереданные = РасчетныеПартииПереданные(ДанныеДляПартийПереданных, Регистраторы);
	// ФАЗА 14: Запись регистра ПартииТоваровОрганизаций
	ЗаписатьРасчетныеПартии(РегистрыНакопления[ИмяРегистра], РасчетныеПартииПереданные, Регистраторы);
	ОчиститьРегистрНаСервере(Регистраторы, ИмяРегистра, РегистраторыССохраняемымиДвижениями);
	ЗаписатьСохраняемыеДвижения(РегистрыНакопления[ИмяРегистра], ДанныеДляПартийПереданных, РегистраторыССохраняемымиДвижениями);
	// Завершение этапа
	ДанныеДляПартийПереданных.Закрыть();
	РасчетныеПартииПереданные = Неопределено;
КонецПроцедуры


// Этап 18-1: расчет партий производственных затрат
Процедура РассчитатьПартииПроизводства(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ИмяРегистра = Метаданные.РегистрыНакопления.ПартииПроизводственныхЗатрат.Имя;
	
	НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
	// ФАЗА 11: Выборка данных партий производственных затрат
	ДанныеДляПартийПроизводства = ДанныеДляПартийПроизводства(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	// ФАЗА 12: Расчет партий производственных затрат по исходным данным
	Регистраторы = Регистраторы(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, ИмяРегистра);
	РегистраторыПрошлыхДвиженийМаршрутныхЛистов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, Регистраторы);
	РегистраторыССохраняемымиДвижениями = РегистраторыССохраняемымиДвижениями(ИмяРегистра, ДанныеДляПартийПроизводства, Регистраторы, НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	РасчетныеПартииПроизводства = РасчетныеПартииПроизводства(ДанныеДляПартийПроизводства, Регистраторы);
	// ФАЗА 14: запись партий производственных затрат
	ЗаписатьРасчетныеПартии(РегистрыНакопления[ИмяРегистра], РасчетныеПартииПроизводства, Регистраторы);
	ОчиститьРегистрНаСервере(Регистраторы, ИмяРегистра, РегистраторыССохраняемымиДвижениями);
	ЗаписатьСохраняемыеДвижения(РегистрыНакопления[ИмяРегистра], ДанныеДляПартийПроизводства, РегистраторыССохраняемымиДвижениями);
	// Завершение этапа
	КоличествоЗаписей = КоличествоЗаписей(ДанныеДляПартийПроизводства);
	ДанныеДляПартийПроизводства.Закрыть();
	РасчетныеПартииПроизводства = Неопределено;
	Замер = ТекущаяУниверсальнаяДатаВМиллисекундах() - НачалоЗамера;
	Комментарий = НСтр("ru='Рассчитано %КолвоСтрок% стр. за %Замер% сек.';uk='Розраховано %КолвоСтрок% ряд. за %Замер% сек.'",Метаданные.ОсновнойЯзык.КодЯзыка);
	Комментарий = СтрЗаменить(Комментарий, "%КолвоСтрок%", КоличествоЗаписей);
	Комментарий = СтрЗаменить(Комментарий, "%Замер%", Формат(Замер/1000., "ЧДЦ=3; ЧН=; ЧГ="));
	ЗаписьЖурналаРегистрации(
		НСтр("ru='Партионный учет.ПартииПроизводственныхЗатрат';uk='Партіонний облік.ПартииПроизводственныхЗатрат'",Метаданные.ОсновнойЯзык.КодЯзыка),
		УровеньЖурналаРегистрации.Информация,,, Комментарий);
КонецПроцедуры


// Этап 2Х: расчет партий затрат на выпуск
Процедура РассчитатьПартииЗатрат(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ИмяРегистра = Метаданные.РегистрыНакопления.ПартииЗатратНаВыпуск.Имя;
	
	НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
	// ФАЗА 20: Выборка исходных данных для расчета партий затрат на выпуск
	ДанныеДляПартийЗатрат = ДанныеДляПартийЗатрат(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	
	// ФАЗА 22: Расчет партий затрат по исходным данным
	Регистраторы = Регистраторы(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, ИмяРегистра);
	РегистраторыПартийВПути(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, Регистраторы);
	РегистраторыССохраняемымиДвижениями = РегистраторыССохраняемымиДвижениями(ИмяРегистра, ДанныеДляПартийЗатрат, Регистраторы, НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	РасчетныеПартииЗатрат = РасчетныеПартииЗатрат(ДанныеДляПартийЗатрат, Регистраторы);
	// ФАЗА 24: Запись регистра ПартииЗатратНаВыпуск
	ЗаписатьРасчетныеПартии(РегистрыНакопления[ИмяРегистра], РасчетныеПартииЗатрат, Регистраторы);
	ОчиститьРегистрНаСервере(Регистраторы, ИмяРегистра, РегистраторыССохраняемымиДвижениями);
	ЗаписатьСохраняемыеДвижения(РегистрыНакопления[ИмяРегистра], ДанныеДляПартийЗатрат, РегистраторыССохраняемымиДвижениями);
	// Завершение этапа
	КоличествоЗаписей = КоличествоЗаписей(ДанныеДляПартийЗатрат);
	ДанныеДляПартийЗатрат.Закрыть();
	РасчетныеПартииЗатрат = Неопределено;
	Замер = ТекущаяУниверсальнаяДатаВМиллисекундах() - НачалоЗамера;
	Комментарий = НСтр("ru='Рассчитано %КолвоСтрок% стр. за %Замер% сек.';uk='Розраховано %КолвоСтрок% ряд. за %Замер% сек.'",Метаданные.ОсновнойЯзык.КодЯзыка);
	Комментарий = СтрЗаменить(Комментарий, "%КолвоСтрок%", КоличествоЗаписей);
	Комментарий = СтрЗаменить(Комментарий, "%Замер%", Формат(Замер/1000., "ЧДЦ=3; ЧН=; ЧГ="));
	ЗаписьЖурналаРегистрации(
		НСтр("ru='Партионный учет.ПартииЗатратНаВыпуск';uk='Партіонний облік.ПартииЗатратНаВыпуск'",Метаданные.ОсновнойЯзык.КодЯзыка),
		УровеньЖурналаРегистрации.Информация,,, Комментарий);
КонецПроцедуры

// Этапы 3Х и 4Х: расчет партий прочих расходов на себестоимость товаров, партионный учет включен
Процедура РассчитатьПартииПрочих(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ИспользоватьПартионныйУчет = Константы.ИспользоватьПартионныйУчет.Получить();
// Область РасчетПартийПрочих
	// ФАЗА 30: Выборка исходных данных для расчета списания партий прочих расходов
	Регистраторы = РегистраторыПартийПрочих(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	Если ИспользоватьПартионныйУчет Тогда
		ДанныеДляПартийПрочих = ДанныеДляПартийПрочих(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	Иначе
		ДанныеДляПартийПрочих = ДанныеДляПартийПрочихСебестоимость(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	КонецЕсли;
	// ФАЗА 32: Расчет расхода ПартииПрочихРасходов
	РасчетныеПартииПрочих = РасчетныеПартииПрочих(ДанныеДляПартийПрочих, Неопределено);
	// ФАЗА 34: Запись регистра ПартииПрочихРасчетов
	ЗаписатьРасчетныеПартии(РегистрыНакопления.ПартииПрочихРасходов, РасчетныеПартииПрочих, Неопределено);
	РасчетныеПартииПрочих = Неопределено;
	
// Область РасчетПриходыРасходовСебестоимость
	// ФАЗА 40: Расчет прихода в ПартииРасходовНаСебестоимостьТоваров
	РасчетныеПриходыПартийРасходов = РасчетныеПриходыПартийРасходов(ДанныеДляПартийПрочих, Неопределено);
	ДанныеДляПартийПрочих = Неопределено;
	// ФАЗА 42: Запись прихода в ПартииРасходовНаСебестоимостьТоваров
	Если ИспользоватьПартионныйУчет Тогда
		ЗаписатьРасчетныеПартии(РегистрыНакопления.ПартииРасходовНаСебестоимостьТоваров, РасчетныеПриходыПартийРасходов, Неопределено);
	КонецЕсли;
	
	// ФАЗА 44: Расчет (трансляция приходов партий расходов) приходов в себестоимость товаров
	РасчетныеПриходыСебестоимости = РасчетныеПриходыСебестоимости(НачалоПериода, РасчетныеПриходыПартийРасходов, Регистраторы);
	РасчетныеПриходыПартийРасходов = Неопределено;
	// ФАЗА 46: Запись прихода в СебестоимостьТоваров
	ЗаписатьРасчетныеПартии(РегистрыНакопления.СебестоимостьТоваров, РасчетныеПриходыСебестоимости, Неопределено);
	
	РасчетныеПриходыСебестоимости = Неопределено;
	
// Область РасчетЗаписейНоменклатураДоходыРасходы
	// ФАЗА 47: Выборка исходных данных для движений в НоменклатураДоходыРасходы
	ДанныеДляНоменклатураДоходыРасходы = ДанныеДляНоменклатураДоходыРасходы(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	// ФАЗА 48: Запись движений в НоменклатураДоходыРасходы
	ЗаписатьРасчетныеПартии(РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы, ДанныеДляНоменклатураДоходыРасходы, Неопределено);
	ДанныеДляНоменклатураДоходыРасходы = Неопределено;
КонецПроцедуры

// Этап 5Х: расчет партий расходов на себестоимость выбытия товаров
Процедура РассчитатьПартииРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ИмяРегистра = Метаданные.РегистрыНакопления.ПартииРасходовНаСебестоимостьТоваров.Имя;
	
	НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
	// ФАЗА 50: Выборка исходных данных для расчета списания партий расходов на себестоимость товаров
	ДанныеДляПартийРасходов = ДанныеДляПартийРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	// ФАЗА 52: Расчет расхода ПартииРасходовНаСебестоимостьТоваров
	Регистраторы = Регистраторы(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, ИмяРегистра);
	РегистраторыПартийВПути(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, Регистраторы);
	РегистраторыССохраняемымиДвижениями = РегистраторыССохраняемымиДвижениями(ИмяРегистра, ДанныеДляПартийРасходов, Регистраторы, НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	РасчетныеПартииРасходов = РасчетныеПартииРасходов(ДанныеДляПартийРасходов, Регистраторы);
	// ФАЗА 54: Запись расхода ПартииРасходовНаСебестоимостьТоваров
	ЗаписатьРасчетныеПартии(РегистрыНакопления[ИмяРегистра], РасчетныеПартииРасходов, Регистраторы);
	ОчиститьРегистрНаСервере(Регистраторы, ИмяРегистра, РегистраторыССохраняемымиДвижениями);
	ЗаписатьСохраняемыеДвижения(РегистрыНакопления[ИмяРегистра], ДанныеДляПартийРасходов, РегистраторыССохраняемымиДвижениями);
	// Завершение этапа
	КоличествоЗаписей = КоличествоЗаписей(ДанныеДляПартийРасходов);
	ДанныеДляПартийРасходов.Закрыть();
	РасчетныеПартииРасходов = Неопределено;
	Замер = ТекущаяУниверсальнаяДатаВМиллисекундах() - НачалоЗамера;
	Комментарий = НСтр("ru='Рассчитано %КолвоСтрок% стр. за %Замер% сек.';uk='Розраховано %КолвоСтрок% ряд. за %Замер% сек.'",Метаданные.ОсновнойЯзык.КодЯзыка);
	Комментарий = СтрЗаменить(Комментарий, "%КолвоСтрок%", КоличествоЗаписей);
	Комментарий = СтрЗаменить(Комментарий, "%Замер%", Формат(Замер/1000., "ЧДЦ=3; ЧН=; ЧГ="));
	ЗаписьЖурналаРегистрации(
		НСтр("ru='Партионный учет.ПартииРасходовНаСебестоимостьТоваров';uk='Партіонний облік.ПартииРасходовНаСебестоимостьТоваров'",Метаданные.ОсновнойЯзык.КодЯзыка),
		УровеньЖурналаРегистрации.Информация,,, Комментарий);
КонецПроцедуры

// Этап 6Х: расчет записей регистировк при корректировках налогового назначения НДС
Процедура РассчитатьЗаписиКорректировокНДС(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)		
    
	// ФАЗА 60: выборка данных по восстановлению НДС и условным продажам
	ДанныеДляКорректировокНДС = ДанныеДляКорректировокНДС(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
    
    // ФАЗА 61: выборка устаревших регистраторов по регистру КорректировкиНДСПартий
    УстаревшиеРегистраторыКорректировокНДС = ТаблицаУстаревшихРегистраторовКорректировокНДС(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, ДанныеДляКорректировокНДС, "КорректировкиНДСПартий");
	// ФАЗА 62: дополнить ДанныеДляКорректировокНДС движениями организаций, по которым расчет сейчас не выполняется
	ДополнитьДанныеДляКорректировокНДССохраняемымиДвижениями(ДанныеДляКорректировокНДС, УстаревшиеРегистраторыКорректировокНДС, НачалоПериода, ОкончаниеПериода, МассивОрганизаций, "КорректировкиНДСПартий");
	
	// ФАЗА 63: фильтрация данных по восстановлению НДС
	РасчетныеНДСВосстановлениеНДС = РасчетныеНДСВосстановлениеНДС(ДанныеДляКорректировокНДС);
	// ФАЗА 64: запись данных по восстановлению НДС
	ЗаписатьРасчетныеПартии(РегистрыНакопления.КорректировкиНДСПартий, РасчетныеНДСВосстановлениеНДС, Неопределено);
	
	// ФАЗА 65: фильтрация данных по условным продажам
	РасчетныеНДСУсловнаяПродажа = РасчетныеНДСУсловнаяПродажа(ДанныеДляКорректировокНДС);
	// ФАЗА 66: запись данных по условным продажам
	ЗаписатьРасчетныеПартии(РегистрыНакопления.КорректировкиНДСПартий, РасчетныеНДСУсловнаяПродажа, Неопределено);
    
	// ФАЗА 67: очистка движений устаревших регистраторов по регистру КорректировкиНДСПартий
	ОчиститьДвиженияУстаревшихРегистраторовКорректировокНДС(УстаревшиеРегистраторыКорректировокНДС, "КорректировкиНДСПартий");
	УстаревшиеРегистраторыКорректировокНДС = Неопределено;
    
    // ФАЗА 68: расчет записей по регистру НДСУсловныеПродажи 
	РасчетныеНДСУсловныеПродажи = РасчетныеНДСУсловныеПродажи(РасчетныеНДСУсловнаяПродажа, РасчетныеНДСВосстановлениеНДС);
    
    // ФАЗА 69: выборка устаревших регистраторов по регистру НДСУсловныеПродажи
    УстаревшиеРегистраторыНДСУсловныеПродажи = ТаблицаУстаревшихРегистраторовКорректировокНДС(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, РасчетныеНДСУсловныеПродажи, "НДСУсловныеПродажи");
	// ФАЗА 70: дополнить РасчетныеНДСУсловныеПродажи движениями организаций, по которым расчет сейчас не выполняется
	ДополнитьДанныеДляКорректировокНДССохраняемымиДвижениями(РасчетныеНДСУсловныеПродажи, УстаревшиеРегистраторыНДСУсловныеПродажи, НачалоПериода, ОкончаниеПериода, МассивОрганизаций, "НДСУсловныеПродажи");
    
    // ФАЗА 71: запись данных по регистру НДСУсловныеПродажи 
	ЗаписатьРасчетныеПартии(РегистрыНакопления.НДСУсловныеПродажи, РасчетныеНДСУсловныеПродажи, Неопределено);
    
	// ФАЗА 72: очистка движений устаревших регистраторов по регистру НДСУсловныеПродажи
	ОчиститьДвиженияУстаревшихРегистраторовКорректировокНДС(УстаревшиеРегистраторыНДСУсловныеПродажи, "НДСУсловныеПродажи");
	УстаревшиеРегистраторыНДСУсловныеПродажи = Неопределено;
    
    РасчетныеНДСВосстановлениеНДС = Неопределено;
    РасчетныеНДСУсловнаяПродажа   = Неопределено;
	РасчетныеНДСУсловныеПродажи   = Неопределено;
    
КонецПроцедуры

// Этап 64: расчет приходов партий прочих расходов
Процедура РассчитатьПриходыПартийПрочихРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ИмяРегистра = Метаданные.РегистрыНакопления.ПартииПрочихРасходов.Имя;
	
	// ФАЗА 60: выборка данных для приходов партий прочих расходов
	ДанныеДляПартийПрочихРасходов = ДанныеДляПартийПрочихРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
	// ФАЗА 62: запись книги продаж
	ЗаписатьРасчетныеПартии(РегистрыНакопления[ИмяРегистра], ДанныеДляПартийПрочихРасходов, Неопределено);
	// Завершение этапа
	ДанныеДляПартийПрочихРасходов = Неопределено;
КонецПроцедуры
	
// Этап 7Х: Запись новых границ рассчитанных партий - завершение партионного расчета за период
Процедура УстановитьГраницыПартииТоваровОрганизаций(РассчитанныйПериод, ОкончаниеПериодаРасчета, МассивОрганизаций)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ПланыОбмена.ГлавныйУзел() <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НачалоПериодаРасчета(ОкончаниеПериодаРасчета, МассивОрганизаций) < РассчитанныйПериод Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Месяц,
	|	ДД.Организация
	|ИЗ
	|	РегистрСведений.ЗаданияКРасчетуСебестоимости КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константа.НомерЗаданияКРасчетуСебестоимости КАК НомерКРасчету
	|		ПО ИСТИНА
	|ГДЕ
	|	ДД.Месяц МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И ДД.НомерЗадания < НомерКРасчету.Значение
	|	И ДД.Организация В (&МассивОрганизаций)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДД.Месяц,
	|	ДД.НомерЗадания,
	|	ДД.Организация,
	|	ДД.Документ
	|ИЗ
	|	РегистрСведений.ЗаданияКРасчетуСебестоимости КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константа.НомерЗаданияКРасчетуСебестоимости КАК НомерКРасчету
	|		ПО ИСТИНА
	|ГДЕ
	|	ДД.Месяц МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И ДД.НомерЗадания >= НомерКРасчету.Значение
	|	И ДД.Организация В (&МассивОрганизаций)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(&ОкончаниеПериода, МЕСЯЦ), СЕКУНДА, 1) КАК Месяц,
	|	Организации.Ссылка КАК Организация
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка В(&МассивОрганизаций)
	|";
	
	Запрос.УстановитьПараметр("НачалоПериода",     НачалоМесяца(РассчитанныйПериод));
	Запрос.УстановитьПараметр("ОкончаниеПериода",  КонецМесяца(РассчитанныйПериод));
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Выборка = Результаты[0].Выбрать();
	Пока Выборка.Следующий() Цикл
		Набор = РегистрыСведений.ЗаданияКРасчетуСебестоимости.СоздатьНаборЗаписей();
		Набор.Отбор.Месяц.Установить(Выборка.Месяц);
		Набор.Отбор.Организация.Установить(Выборка.Организация);
		Набор.Записать(Истина);
	КонецЦикла;
	
	Если НЕ Результаты[1].Пустой() Тогда
		Набор = РегистрыСведений.ЗаданияКРасчетуСебестоимости.СоздатьНаборЗаписей();
		Набор.Загрузить(Результаты[1].Выгрузить());
		Набор.Записать(Ложь);
	КонецЕсли;
	
	РегистрыСведений.ЗаданияКРасчетуСебестоимости.СоздатьЗаписиРегистраПоДаннымВыборки(
		Результаты[2].Выбрать(),
		РегистрыСведений.ЗаданияКРасчетуСебестоимости.ПолучитьНомерЗадания() - 1);
	
КонецПроцедуры

Процедура СформироватьДвиженияПоНДС(ОкончаниеПериода, МассивОрганизаций)
	
	// Корректировка использования НДС
	ПартионныйУчетСервер.СформироватьДвиженияПоКорректировкамНДС(ОкончаниеПериода, МассивОрганизаций);
	
	
КонецПроцедуры

Процедура РассчитатьСебестоимость(ОкончаниеПериода, МассивОрганизаций)
    
	ВосстановитьДвиженияДокументовСДублямиДвиженийПоВыручкеИСебестоимостиПродаж(
		НачалоМесяца(ОкончаниеПериода),
		ОкончаниеПериода,
		МассивОрганизаций);
    
    СебестоимостьРассчитана = РасчетСебестоимости.РассчитатьВсеВПопыткеИсключении(
		ОкончаниеПериода,
		Ложь, // Фактический расчет
		МассивОрганизаций,
		,
		Новый Структура("МестоВызоваРасчета", "ПартионныйУчет.РассчитатьСебестоимость"));
	
	Если НЕ СебестоимостьРассчитана Тогда
		ВызватьИсключение
			НСтр("ru='При расчете себестоимости возникла ошибка.
                     |Подробности см. в Журнале регистрации.'
                     |;uk='При розрахунку собівартості виникла помилка.
                     |Подробиці див. у Журналі реєстрації.'");
	КонецЕсли;

КонецПроцедуры

#КонецОбласти


#Область РасчетПартийТоваров

// Текст запроса исходных движений для расчета партий
Функция ДанныеДляПартийТоваров(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	// СОРТИРОВКА по аналитикам, приоритету и моменту движения - требование алгоритма обсчета партий
	ТекстСортировка = "
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура, ПериодПоступления, Приоритет ВОЗР, РазделУчета, Организация, ВидЗапасов, АналитикаУчетаПартий, Регистратор
		|";
	ТекстИндексы = "
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|";
	
	ИсходныйТекстЗапроса =
		ТекстПартииТоваровИнициализация() + ";" // вт ПрошлыеПоступления
		+ ТекстОписаниеПартийТоваров()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПартийТоваров() // использует ПрошлыеПоступления
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПервичныеПартииТоваров()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПервичныеПеремещенияТоваров()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстРеализацииПрошлыхМесяцев()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПотребленияТоваров()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстСписанияКомиссионныхТоваров()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПриходыПеремещений()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстСписаниеИмпортныхПартий()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстСписаниеТаможеннойДекларацией()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПриходыРастаможенногоТовара()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПотребленияЧужихЗапасов()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстВозвратыЧужихЗапасов()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПотребленияСобственныхЗапасов()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПередачиВозвратыКомиссияМеждуОрганизациями()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПереданныхТоваров()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстВводыОстатковПереданныхТоваров()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПередачиНаКомиссию()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстВозвратыПереданныхТоваров()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстВозвратыНаСкладПереданныхТоваров()
		+ ТекстИндексы;
	МВТ = Новый МенеджерВременныхТаблиц;	
	ИсходныйЗапрос = Новый Запрос(СтрЗаменить(ИсходныйТекстЗапроса, "//ВоВременнуюТаблицу", ""));
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);	
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ИсходныйЗапрос.МенеджерВременныхТаблиц = МВТ;
	ИсходныйЗапрос.Выполнить();
	
	
	Запрос = Новый Запрос(ТекстОписаниеПартийТоваров());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	ВременнаяТаблицаДанныхПоОтбору("Номенклатура", ТекстСортировка, РасчетныеПартии, МВТ);
	
	Возврат МВТ;
КонецФункции

Функция РасчетныеПартииТоваров(ДанныеДляРасчета, Регистраторы, ЦепочкиДвижений = Неопределено, Тест = Ложь, РассчитатьПартии = Истина) // ДанныеДляРасчета будут изменены
	// Шаг 1: создаем буфер накопления рассчитанных партий
	Запрос = Новый Запрос(ТекстОписаниеПартийТоваров());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	// Шаг 2: готовим описание обсчета
	КонтекстЦепочек = ОписаниеЦепочек("Потребление, Партия, Остаток, Сторно, Перемещение, Прошлое, Материал, Производство,
		|Возврат, Корректировка, Импорт, Декларация, ВозвратКомиссия, ПеремещениеВПроизводстве");
	
	ПоляПотреблений = "АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета";
	КонтекстДвижений = ОписаниеДвижений(
		"ПартииТоваровОрганизаций",
		"ПартииТоваровОрганизаций",
		ПереченьПолей(РасчетныеПартии.Колонки),
		ПоляПотреблений,
		"Знаменатель, Количество, Стоимость, СтоимостьБезНДС, СтоимостьРегл, НДСРегл, ПостояннаяРазница, ВременнаяРазница",
		"Количество", "Количество", "ДокументИсточник", "ПериодПоступления", "ДокументПоступления", Истина);
		
	// Шаг 3: обсчитываем потребления из партий
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Потребление", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Остаток", 	 ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Партия", 	 ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Импорт", 	 ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Перемещение", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Сторно", 	 ПоляПотреблений);
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Декларация", "АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета, ДокументПоступления");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Декларация", "Остаток", "АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета, ДокументПоступления");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Декларация", "Импорт",  "АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета, ДокументПоступления");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Материал", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Материал", "Остаток", 	  ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Материал", "Партия", 	  ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Материал", "Перемещение", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Материал", "Сторно", 	  ПоляПотреблений);
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Корректировка", "ДокументПоступления, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Корректировка", "Остаток", "ДокументПоступления, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Корректировка", "Партия",  "ДокументПоступления, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Сторно", "ДокументИсточник, КорАналитикаУчетаНоменклатуры, КорВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "Потребление", "Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "Прошлое", 	"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "Материал", 	"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "Возврат", 	"Регистратор, АналитикаУчетаНоменклатуры, КорВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "ВозвратКомиссия", "Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Перемещение", "ДокументИсточник, АналитикаУчетаНоменклатуры, ВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Перемещение", "Потребление", "Регистратор, КорАналитикаУчетаНоменклатуры, КорВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Перемещение", "Декларация",  "Регистратор, КорАналитикаУчетаНоменклатуры, КорВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Перемещение", "Материал", 	 "Регистратор, КорАналитикаУчетаНоменклатуры, КорВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Перемещение", "ПеремещениеВПроизводстве", "Регистратор, КорАналитикаУчетаНоменклатуры, КорВидЗапасов");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Производство", "ДокументИсточник, КорАналитикаУчетаНоменклатуры, КорВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Производство", "Потребление", "Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "ПеремещениеВПроизводстве", "АналитикаУчетаНоменклатуры, Организация, РазделУчета, Назначение");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ПеремещениеВПроизводстве", "Производство", "АналитикаУчетаНоменклатуры, Организация, РазделУчета, Назначение");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ПеремещениеВПроизводстве", "Остаток", 	  "АналитикаУчетаНоменклатуры, Организация, РазделУчета, Назначение");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Возврат", "АналитикаУчетаНоменклатуры, Организация, РазделУчета, Назначение");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Возврат", "Производство", "АналитикаУчетаНоменклатуры, Организация, РазделУчета, Назначение");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Возврат", "Остаток", 	  "АналитикаУчетаНоменклатуры, Организация, РазделУчета, Назначение");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Возврат", "Перемещение",  "АналитикаУчетаНоменклатуры, Организация, РазделУчета, Назначение");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "ВозвратКомиссия", "ДокументИсточник, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ВозвратКомиссия", "Перемещение", "Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ВозвратКомиссия", "Остаток", "Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, РазделУчета");
	
	ЦепочкиДвижений(КонтекстЦепочек, ДанныеДляРасчета);
	Если РассчитатьПартии Тогда
		РассчитатьПартииПоЦепочкам(КонтекстДвижений, ДанныеДляРасчета, РасчетныеПартии, Регистраторы, Тест);
	КонецЕсли;
	ЦепочкиДвижений = ДанныеДляРасчета;
	
	// Шаг 4: Удаляем строки, не требующие записи в базу.
	Если Не Тест Тогда
		УдалитьНезаписываемыеСтроки(КонтекстДвижений.Контекст, РасчетныеПартии);
	КонецЕсли;
	
	// Шаг 5: Сортировка партий для дальнейшей записи
	РасчетныеПартии.Сортировать("Регистратор, Приоритет", Новый СравнениеЗначений);
	Возврат РасчетныеПартии;
КонецФункции

Функция ТекстПартииТоваровИнициализация() // вт ПотребленияЧужихЗапасов, ПрошлыеРеализации, ПрошлыеПоступления, МатериалыИРаботыВПроизводстве, ПрошлыеПоступленияПроизводство, КорректировкиПоступлений
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор,
		|	ДД.ОрганизацияВладелец,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.НомерГТД,
		|	ДД.ВидЗапасовПродавца,
		|	ВидыЗапасов.ВидЗапасовВладельца,
		|	ВидыЗапасов.Организация КАК ОрганизацияПродавец
		|ПОМЕСТИТЬ
		|	ПотребленияЧужихЗапасов
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизацийКПередаче КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ВидыЗапасов.Ссылка = ДД.ВидЗапасовПродавца
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций КАК Расходы
		|		ПО Расходы.Регистратор = ДД.Регистратор
		|		И Расходы.Организация = ДД.ОрганизацияВладелец
		|		И Расходы.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Расходы.НомерГТД = ДД.НомерГТД
		|		И Расходы.ВидЗапасов = ВидыЗапасов.ВидЗапасовВладельца
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ВидыЗапасов.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И Расходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|;
	    |ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументРеализации КАК ДокументРеализации,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов КАК ВидЗапасов
		|ПОМЕСТИТЬ
		|	ПрошлыеРеализации
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций КАК Расход
		|		ПО Расход.Период < &НачалоПериода
		|		И Расход.Регистратор = ДД.ДокументРеализации
		|		И Расход.АналитикаУчетаНоменклатуры = ДД.КорАналитикаУчетаНоменклатуры
		|		И Расход.ВидЗапасов = ДД.КорВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ДокументРеализации <> НЕОПРЕДЕЛЕНО
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Количество < 0
		|	
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументРеализации КАК ДокументРеализации,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов КАК ВидЗапасов
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизацийКПередаче КАК Расход
		|		ПО Расход.Период < &НачалоПериода
		|		И Расход.Регистратор = ДД.ДокументРеализации
		|		И Расход.АналитикаУчетаНоменклатуры = ДД.КорАналитикаУчетаНоменклатуры
		|		И Расход.ВидЗапасовПродавца = ДД.КорВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Активность
		|	И ДД.ДокументРеализации <> НЕОПРЕДЕЛЕНО
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Количество < 0
		|;
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументПоступления КАК Ссылка,
		|	МАКСИМУМ(Периодика.Период) КАК Период,
		|	(ВЫБОР КОГДА Импорт.Регистратор ЕСТЬ NULL
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ) КАК РазделУчета
		|ПОМЕСТИТЬ ПрошлыеПоступления
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровОрганизаций КАК Периодика
		|		ПО Периодика.Период < &НачалоПериода
		|		И Периодика.Регистратор = ДД.ДокументПоступления
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизацийКОформлению КАК Импорт
		|		ПО Импорт.Период < &НачалоПериода
		|		И Импорт.Регистратор = ДД.ДокументПоступления
		|		И Импорт.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|ГДЕ
		|	ДД.ДокументПоступления <> НЕОПРЕДЕЛЕНО
		|СГРУППИРОВАТЬ ПО
		|	ДД.ДокументПоступления,
		|	(ВЫБОР КОГДА Импорт.Регистратор ЕСТЬ NULL
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументПоступления КАК Ссылка,
		|	МАКСИМУМ(Периодика.Период) КАК Период,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровПереданныеНаКомиссию КАК Периодика
		|		ПО Периодика.Период < &НачалоПериода
		|		И Периодика.Регистратор = ДД.ДокументПоступления
		|ГДЕ
		|	ДД.ДокументПоступления <> НЕОПРЕДЕЛЕНО
		|СГРУППИРОВАТЬ ПО
		|	ДД.ДокументПоступления
		|;
	    |ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ
		|	МатериалыИРаботыВПроизводстве
		|ИЗ
		|	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Товары
		|		ПО Товары.Ссылка = ДД.Номенклатура
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И Товары.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|	И ДД.Количество > 0
		|;
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументПоступления КАК Ссылка,
		|	ДД.АналитикаУчетаНоменклатуры.Склад КАК Склад,
		|	МАКСИМУМ(Периодика.Регистратор) КАК Регистратор,
		|	МАКСИМУМ(Периодика.Период) КАК Период
		|ПОМЕСТИТЬ
		|	ПрошлыеПоступленияПроизводство
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат.Остатки(&НачалоПериода) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииПроизводственныхЗатрат КАК Периодика
		|		ПО Периодика.Период < &НачалоПериода
		|		И Периодика.ДокументПоступления = ДД.ДокументПоступления
		|		И Периодика.АналитикаУчетаНоменклатуры.Склад = ДД.АналитикаУчетаНоменклатуры.Склад
		|ГДЕ
		|	ДД.ДокументПоступления <> НЕОПРЕДЕЛЕНО
		|	И Периодика.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|СГРУППИРОВАТЬ ПО
		|	ДД.ДокументПоступления,
		|	ДД.АналитикаУчетаНоменклатуры.Склад
		|;
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов
		|ПОМЕСТИТЬ
		|	КорректировкиПоступлений
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровОрганизаций КАК Поступления
		|		ПО Поступления.Период <= &ОкончаниеПериода
		|		И Поступления.Регистратор = ДД.ДокументПоступления
		|		И Поступления.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Поступления.ВидЗапасов = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Первичное
		|	И ДД.Регистратор ССЫЛКА Документ.КорректировкаПоступления
		|";
КонецФункции

Функция ТекстОписаниеПартийТоваров()
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	""ТекстОписаниеПартийТоваров______________________"" КАК ЗапросИсточник,
		|	0 КАК Приоритет,
		|	""ХХХХХХХХХХХХХХХХХХХХХХХХ"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ПериодПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДД.ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|//ВоВременнуюТаблицу ПОМЕСТИТЬ ИсходныеДанные
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|";
КонецФункции

// КОНТУР ПартииТоваровОрганизаций
Функция ТекстОстаткиПартийТоваров() // использует ПрошлыеПоступления
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстОстаткиПартийТоваров"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Остаток"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЕСТЬNULL(Периодика.РазделУчета, ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)) КАК РазделУчета,
		|	ЕСТЬNULL(Периодика.Период, &НачалоПериода) КАК Период,
		|	ДД.ДокументПоступления КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	ДД.КоличествоОстаток КАК Количество,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ДД.НДСРеглОстаток КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ИСТИНА КАК СохранятьРегл,
		|	Периодика.Период КАК ПериодПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	Аналитика.Номенклатура,
		|	Аналитика.Характеристика,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПрошлыеПоступления КАК Периодика
		|		ПО Периодика.Ссылка = ДД.ДокументПоступления
		|ГДЕ
		|	ДД.КоличествоОстаток > 0.
		|";
КонецФункции

Функция ТекстПервичныеПартииТоваров()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПервичныеПартииТоваров"" КАК ЗапросИсточник,
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.Регистратор ЕСТЬ NULL ТОГДА 15
		|		ИНАЧЕ 10 КОНЕЦ) КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество < 0. ТОГДА ""Сторно""
		|		КОГДА НЕ Корректировка.Регистратор ЕСТЬ NULL ТОГДА ""Корректировка""
		|		КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту) ТОГДА ""Импорт""
		|		ИНАЧЕ ""Партия"" КОНЕЦ) КАК ТипЗаписи,
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.Регистратор ЕСТЬ NULL ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК РасчетЗавершен,
		|	ДД.ВидДвижения КАК ВидДвижения,
		|	(ВЫБОР КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КОНЕЦ) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ДД.Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.Регистратор ЕСТЬ NULL
		|		 И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА Поступление.Дата
		|		ИНАЧЕ ДД.Период КОНЕЦ) КАК ПериодПоступления,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	АналитикиПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПартий КАК АналитикиПартий
		|		ПО АналитикиПартий.Ссылка = ДД.АналитикаУчетаПартий
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК Поступление
		|		ПО Поступление.Ссылка = ДД.ДокументПоступления
		|	ЛЕВОЕ СОЕДИНЕНИЕ КорректировкиПоступлений КАК Корректировка
		|		ПО Корректировка.Регистратор = ДД.Регистратор
		|		И Корректировка.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Корректировка.ВидЗапасов = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Первичное
		|	И (ДД.ДокументИсточник = НЕОПРЕДЕЛЕНО
		|		ИЛИ НЕ Корректировка.Регистратор ЕСТЬ NULL)
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.КорректировкаРеализации
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.Регистратор ЕСТЬ NULL ТОГДА 15
		|		ИНАЧЕ 10 КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество < 0. ТОГДА ""Сторно""
		|		КОГДА НЕ Корректировка.Регистратор ЕСТЬ NULL ТОГДА ""Корректировка""
		|		КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту) ТОГДА ""Импорт""
		|		ИНАЧЕ ""Партия"" КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.Регистратор ЕСТЬ NULL ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ),
		|	ДД.ВидДвижения,
		|	(ВЫБОР КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту)
		|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.Первичное,
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.Регистратор ЕСТЬ NULL
		|		 И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА Поступление.Дата
		|		ИНАЧЕ ДД.Период КОНЕЦ),
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.ДокументИсточник,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	АналитикиПартий.НалоговоеНазначение,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|";
КонецФункции

Функция ТекстПервичныеПеремещенияТоваров()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПервичныеПеремещенияТоваров"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА НЕ Возврат.Ссылка ЕСТЬ NULL ТОГДА ""Сторно""
		|		КОГДА Сборка.Ссылка ЕСТЬ NULL И ПередачаКомиссия.Ссылка ЕСТЬ NULL ТОГДА ""Перемещение"" 
		|		ИНАЧЕ ""Партия"" КОНЕЦ) КАК ТипЗаписи,
		|	(ВЫБОР
		|		КОГДА Сборка.Ссылка ЕСТЬ NULL И ПередачаКомиссия.Ссылка ЕСТЬ NULL ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК РасчетЗавершен,
		|	ДД.ВидДвижения КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	СУММА(ВЫБОР КОГДА Передача.Ссылка ЕСТЬ NULL И Возврат.Ссылка ЕСТЬ NULL ТОГДА 0. ИНАЧЕ ДД.СтоимостьРегл КОНЕЦ) КАК СтоимостьРегл,
		|	СУММА(ВЫБОР КОГДА Передача.Ссылка ЕСТЬ NULL И Возврат.Ссылка ЕСТЬ NULL ТОГДА 0. ИНАЧЕ ДД.НДСРегл КОНЕЦ) КАК НДСРегл,
		|	СУММА(ВЫБОР КОГДА Передача.Ссылка ЕСТЬ NULL И Возврат.Ссылка ЕСТЬ NULL ТОГДА 0. ИНАЧЕ ДД.ПостояннаяРазница КОНЕЦ) КАК ПостояннаяРазница,
		|	СУММА(ВЫБОР КОГДА Передача.Ссылка ЕСТЬ NULL И Возврат.Ссылка ЕСТЬ NULL ТОГДА 0. ИНАЧЕ ДД.ВременнаяРазница КОНЕЦ) КАК ВременнаяРазница,
		|	ДД.Первичное,
		|	(ВЫБОР КОГДА Передача.Ссылка ЕСТЬ NULL И Возврат.Ссылка ЕСТЬ NULL ТОГДА ЛОЖЬ ИНАЧЕ ИСТИНА КОНЕЦ) КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК Сборка
		|		ПО Сборка.Дата = ДД.Период
		|		И Сборка.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК Передача
		|		ПО Передача.Дата = ДД.Период
		|		И Передача.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК ПередачаКомиссия
		|		ПО ПередачаКомиссия.Дата = ДД.Период
		|		И ПередачаКомиссия.Ссылка = ДД.Регистратор
		|		И ПередачаКомиссия.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию)
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями КАК Возврат
		|		ПО Возврат.Дата = ДД.Период
		|		И Возврат.Ссылка = ДД.Регистратор
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Регистратор = ДД.ДокументПоступления
		|	И ДД.Первичное
		|	И ДД.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ПересортицаТоваров
		|	И НЕ (ЕСТЬNULL(Возврат.ПоТоварамКОформлению, ЛОЖЬ)
		|		И Возврат.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями))
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА НЕ Возврат.Ссылка ЕСТЬ NULL ТОГДА ""Сторно""
		|		КОГДА Сборка.Ссылка ЕСТЬ NULL И ПередачаКомиссия.Ссылка ЕСТЬ NULL ТОГДА ""Перемещение"" 
		|		ИНАЧЕ ""Партия"" КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА Сборка.Ссылка ЕСТЬ NULL И ПередачаКомиссия.Ссылка ЕСТЬ NULL ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ),
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.Первичное,
		|	(ВЫБОР КОГДА Передача.Ссылка ЕСТЬ NULL И Возврат.Ссылка ЕСТЬ NULL ТОГДА ЛОЖЬ ИНАЧЕ ИСТИНА КОНЕЦ),
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.ДокументИсточник,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|";
КонецФункции

Функция ТекстРеализацииПрошлыхМесяцев()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстРеализацииПрошлыхМесяцев"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Прошлое"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.ВидДвижения КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ДД.Первичное,
		|	ИСТИНА КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрошлыеРеализации КАК Прошлые
		|		ПО ДД.Регистратор = Прошлые.ДокументРеализации
		|		И ДД.АналитикаУчетаНоменклатуры = Прошлые.АналитикаУчетаНоменклатуры
		|		И ДД.ВидЗапасов = Прошлые.ВидЗапасов
		|ГДЕ
		|	ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.Первичное,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|";
КонецФункции

// КОНТУР ТоварыОрганизаций
Функция ТекстПотребленияТоваров()
	// потребления товаров - реализации, возвраты, расходы перемещений и передач - без расходов чужих видов запасов
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПотребленияТоваров"" КАК ЗапросИсточник,
		|	(ВЫБОР КОГДА ДД.Количество > 0. ТОГДА 90 ИНАЧЕ 10 КОНЕЦ) КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА НЕ Разборка.Ссылка ЕСТЬ NULL ТОГДА ""Материал""
		|		КОГДА ДД.Количество > 0. ТОГДА ""Потребление""
		|		ИНАЧЕ ""Сторно"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор, 
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику ТОГДА ДД.ДокументРеализации
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.ПеремещениеТоваров ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.КорректировкаОбособленногоУчетаЗапасов ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.КорректировкаНалоговогоНазначенияЗапасов ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		КОГДА СпрВидыЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
		|			И ДД.КорАналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|			ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		КОГДА ДД.Количество < 0. ТОГДА ДД.АналитикаУчетаНоменклатуры
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КОНЕЦ) КАК КорАналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.КорВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
		|			И ДД.КорАналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|			ТОГДА ДД.ВидЗапасов
		|		КОГДА ДД.Количество < 0. И ДД.КорВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА ДД.ВидЗапасов
		|		ИНАЧЕ ДД.КорВидЗапасов КОНЕЦ) КАК КорВидЗапасов,
		|	(ВЫБОР
		|		КОГДА ДД.Количество > 0. ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ДД.ДокументРеализации КОНЕЦ) КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.СтатьяРасходов КАК СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК Разборка
		|		ПО Разборка.Дата = ДД.Период
		|		И Разборка.Ссылка = ДД.Регистратор
		|		И Разборка.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
		|		ПО СпрВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Организация = ДД.ОрганизацияОтгрузки
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И (ДД.Количество > 0. ИЛИ ДД.ДокументРеализации <> НЕОПРЕДЕЛЕНО) 
		|	И ДД.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.КорректировкаПоступления
		// сворачиваем строки, различающиеся номерами ГТД
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР КОГДА ДД.Количество > 0. ТОГДА 90 ИНАЧЕ 10 КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА НЕ Разборка.Ссылка ЕСТЬ NULL ТОГДА ""Материал""
		|		КОГДА ДД.Количество > 0. ТОГДА ""Потребление""
		|		ИНАЧЕ ""Сторно"" КОНЕЦ),
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику ТОГДА ДД.ДокументРеализации
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ),
		|	ДД.ВидЗапасов,
		|	ЕСТЬNULL(Разборка.Количество, 0),
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.ПеремещениеТоваров ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.КорректировкаОбособленногоУчетаЗапасов ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.КорректировкаНалоговогоНазначенияЗапасов ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		КОГДА СпрВидыЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
		|			И ДД.КорАналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|			ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		КОГДА ДД.Количество < 0. ТОГДА ДД.АналитикаУчетаНоменклатуры
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.КорВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
		|			И ДД.КорАналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)
		|			ТОГДА ДД.ВидЗапасов
		|		КОГДА ДД.Количество < 0. И ДД.КорВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА ДД.ВидЗапасов
		|		ИНАЧЕ ДД.КорВидЗапасов КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.Количество > 0. ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ДД.ДокументРеализации КОНЕЦ),
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов
		|";
КонецФункции

Функция ТекстСписанияКомиссионныхТоваров()
	// списание товаров, полученных на комиссию, по аналитике номенклатуры у комитента
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстСписанияКомиссионныхТоваров"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	(ВЫБОР КОГДА ДД.КоличествоСписано > 0. ТОГДА ""Потребление""
		|		ИНАЧЕ ""Сторно"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор, 
		|	ДД.ВидЗапасов.Организация КАК Организация,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ДД.КорВидЗапасов КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.КоличествоСписано) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	(ВЫБОР КОГДА ДД.КоличествоСписано > 0. ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		ИНАЧЕ ДД.АналитикаУчетаНоменклатуры КОНЕЦ) КАК КорАналитикаУчетаНоменклатуры,
		|	(ВЫБОР КОГДА ДД.КоличествоСписано > 0. ТОГДА ДД.КорВидЗапасов
		|		ИНАЧЕ ДД.ВидЗапасов КОНЕЦ) КАК КорВидЗапасов,
		|	ТоварыОрганизаций.ДокументРеализации КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ТоварыОрганизаций.СтатьяРасходов КАК СтатьяРасходовСписания,
		|	ТоварыОрганизаций.АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
		|		ПО ТоварыОрганизаций.Регистратор = ДД.Регистратор
		|		И ТоварыОрганизаций.Период = ДД.Период
		|		И ТоварыОрганизаций.КорАналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И ТоварыОрганизаций.ВидЗапасов = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.ВидЗапасов.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.КоличествоСписано <> 0
		|	И ДД.ВидЗапасов.Организация = ДД.КорВидЗапасов.Организация
		// сворачиваем строки, различающиеся номерами ГТД
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР КОГДА ДД.КоличествоСписано > 0. ТОГДА ""Потребление""
		|		ИНАЧЕ ""Сторно"" КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	(ВЫБОР КОГДА ДД.КоличествоСписано > 0. ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		ИНАЧЕ ДД.АналитикаУчетаНоменклатуры КОНЕЦ),
		|	(ВЫБОР КОГДА ДД.КоличествоСписано > 0. ТОГДА ДД.КорВидЗапасов
		|		ИНАЧЕ ДД.ВидЗапасов КОНЕЦ),
		|	ТоварыОрганизаций.ДокументРеализации,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ТоварыОрганизаций.СтатьяРасходов,
		|	ТоварыОрганизаций.АналитикаРасходов
		|";
КонецФункции

Функция ТекстПриходыПеремещений()
	// приходы перемещений, передач, пересортиц по ценам списания, порч по ценам списания
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПриходыПеремещений"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	""Перемещение"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	(ВЫБОР ДД.ХозяйственнаяОперация
		|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваров) ТОГДА ДД.Регистратор
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
		|		ПО Партии.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Партии.Регистратор = ДД.Регистратор
		|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		И Партии.Первичное
		|		И Партии.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Партии.ВидЗапасов = ДД.ВидЗапасов
		|		И НЕ (Партии.Регистратор ССЫЛКА Документ.ПересортицаТоваров И Партии.ДокументИсточник <> НЕОПРЕДЕЛЕНО)
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаТоваров),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПорчаТоваров),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваров),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаОбособленногоУчета),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КорректировкаНалоговыхНазначений),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиентуРеглУчет))
		|	И Партии.Регистратор ЕСТЬ NULL
		// сворачиваем строки, различающиеся номерами ГТД
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	(ВЫБОР ДД.ХозяйственнаяОперация
		|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваров) ТОГДА ДД.Регистратор
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ),
		|	ДД.ВидЗапасов,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.ХозяйственнаяОперация
		|";
КонецФункции
	
// КОНТУР ТоварыОрганизацийКОформлению -> оформление импорта
Функция ТекстСписаниеИмпортныхПартий()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстСписаниеИмпортныхПартий"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	""Потребление"" ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Дата КАК Период,
		|	ДД.Ссылка КАК Регистратор,
		|	ДД.Организация,
		|	Строки.АналитикаУчетаНоменклатуры,
		|	Строки.ДокументПоступления,
		|	Строки.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(Строки.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Дата КАК ПериодПоступления,
		|	Строки.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	Строки.ВидЗапасов КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	Строки.Номенклатура,
		|	Строки.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	Документ.ТаможеннаяДекларацияИмпорт КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ТаможеннаяДекларацияИмпорт.Товары КАК Строки
		|		ПО Строки.Ссылка = ДД.Ссылка
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизацийКОформлению КАК КОформлению
		|		ПО КОформлению.Период = ДД.Дата
		|		И КОформлению.Регистратор = ДД.Ссылка
		|		И КОформлению.АналитикаУчетаНоменклатуры = Строки.АналитикаУчетаНоменклатуры
		|		И КОформлению.ВидЗапасов = Строки.ВидЗапасов
		|		И КОформлению.ДокументПоступления = Строки.ДокументПоступления
		|		И КОформлению.ДокументПоступления <> ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка)
		|ГДЕ
		|	ДД.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|	И КОформлению.ДокументПоступления ЕСТЬ NULL
		|СГРУППИРОВАТЬ ПО
		|	ДД.Дата,
		|	ДД.Ссылка,
		|	Строки.ДокументПоступления,
		|	ДД.Организация,
		|	Строки.АналитикаУчетаНоменклатуры,
		|	Строки.ВидЗапасов,
		|	Строки.Номенклатура,
		|	Строки.Характеристика
		|";
КонецФункции

Функция ТекстСписаниеТаможеннойДекларацией()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстСписаниеТаможеннойДекларацией"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	""Декларация"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	Аналитики.Номенклатура,
		|	Аналитики.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаПоИмпорту) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизацийКОформлению КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитики
		|		ПО Аналитики.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.ДокументПоступления <> ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка)
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.ДокументПоступления,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	Аналитики.Номенклатура,
		|	Аналитики.Характеристика
		|";
КонецФункции

Функция ТекстПриходыРастаможенногоТовара()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПриходыРастаможенногоТовара"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Перемещение"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.Регистратор КАК ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	Аналитики.Номенклатура,
		|	Аналитики.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизацийКОформлению КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитики
		|		ПО Аналитики.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	Аналитики.Номенклатура,
		|	Аналитики.Характеристика
		|";
КонецФункции

// КОНТУР ТоварыОрганизацийКПередаче -> оформление продаж между организациями по расходу чужих запасов
Функция ТекстПотребленияЧужихЗапасов()
	// потребления чужих видов запасов (реализации, перемещения, возвраты от клиентов)
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПотребленияЧужихЗапасов"" КАК ЗапросИсточник,
		|	(ВЫБОР КОГДА ДД.Количество > 0. ТОГДА 90 ИНАЧЕ 10 КОНЕЦ) КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА НЕ Разборка.Ссылка ЕСТЬ NULL ТОГДА ""Материал""
		|		КОГДА ДД.Количество > 0. ТОГДА ""Потребление""
		|		ИНАЧЕ ""Сторно"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.ОрганизацияОтгрузки КАК Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	КПередаче.ВидЗапасовПродавца КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	ДД.Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	(ВЫБОР КОГДА ДД.КорВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА КПередаче.ВидЗапасовПродавца
		|		ИНАЧЕ ДД.КорВидЗапасов КОНЕЦ) КАК КорВидЗапасов,
		|	ДД.ДокументРеализации КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.СтатьяРасходов КАК СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПотребленияЧужихЗапасов КАК КПередаче
		|		ПО КПередаче.Регистратор = ДД.Регистратор
		|		И КПередаче.ОрганизацияВладелец = ДД.Организация
		|		И КПередаче.ОрганизацияПродавец = ДД.ОрганизацияОтгрузки
		|		И КПередаче.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И КПередаче.НомерГТД = ДД.НомерГТД
		|		И КПередаче.ВидЗапасовВладельца = ДД.ВидЗапасов
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК Разборка
		|		ПО Разборка.Дата = ДД.Период
		|		И Разборка.Ссылка = ДД.Регистратор
		|		И Разборка.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.ОрганизацияОтгрузки В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента
		|	И НЕ (ДД.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя))
		|	И НЕ (ДД.Регистратор ССЫЛКА Документ.КорректировкаРеализации И ДД.Количество < 0)
		|";
КонецФункции

Функция ТекстВозвратыЧужихЗапасов()
	// возвраты от клиентов чужих видов запасов
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстВозвратыЧужихЗапасов"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Сторно"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.ОрганизацияОтгрузки КАК Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	КПередаче.ВидЗапасовПродавца КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	ДД.Количество КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов КАК КорВидЗапасов,
		|	(ВЫБОР 
		|		КОГДА ДД.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
		|		 И Возврат.ВозвратПереданнойМногооборотнойТары
		|			ТОГДА ДД.ДокументРеализации
		|		КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера) ТОГДА ДД.Регистратор
		|		ИНАЧЕ ДД.ДокументРеализации КОНЕЦ) КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СправочникВидыЗапасов
		|		ПО СправочникВидыЗапасов.Ссылка = ДД.КорВидЗапасов
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента КАК Возврат
		|		ПО Возврат.Ссылка = ДД.Регистратор
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПотребленияЧужихЗапасов КАК КПередаче
		|		ПО КПередаче.Регистратор = ДД.Регистратор
		|		И КПередаче.ОрганизацияВладелец = ДД.Организация
		|		И КПередаче.ОрганизацияПродавец = ДД.ОрганизацияОтгрузки
		|		И КПередаче.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И КПередаче.НомерГТД = ДД.НомерГТД
		|		И КПередаче.ВидЗапасовВладельца = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Количество < 0
		|	И ДД.Организация <> ДД.ОрганизацияОтгрузки
		|	И (ДД.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента
		|       ИЛИ (ДД.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя))
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.КорректировкаРеализации)
		|	И СправочникВидыЗапасов.РеализацияЗапасовДругойОрганизации
		|";
КонецФункции

Функция ТекстПотребленияСобственныхЗапасов()
	// списание под обеспечение потреблений чужих видов запасов (передачи, возвраты передач)
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПотребленияСобственныхЗапасов"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	(ВЫБОР
		|		КОГДА Не Возврат.Ссылка ЕСТЬ NULL
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КОНЕЦ) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	(ВЫБОР КОГДА ДД.Возвращено > 0 ТОГДА СправочникВидыЗапасов.Организация ИНАЧЕ ДД.ОрганизацияВладелец КОНЕЦ) КАК Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	(ВЫБОР КОГДА ДД.Возвращено > 0 ТОГДА ДД.ВидЗапасовПродавца ИНАЧЕ СправочникВидыЗапасов.ВидЗапасовВладельца КОНЕЦ) КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Количество + ДД.Возвращено) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	(ВЫБОР
		|		КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ДД.АналитикаУчетаНоменклатуры КОНЕЦ) КАК КорАналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		КОГДА ДД.Возвращено > 0 ТОГДА ДД.КорВидЗапасов
		|		ИНАЧЕ ДД.ВидЗапасовПродавца КОНЕЦ) КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизацийКПередаче КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СправочникВидыЗапасов
		|		ПО СправочникВидыЗапасов.Ссылка = ДД.ВидЗапасовПродавца
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями КАК Возврат
		|		ПО Возврат.Дата = ДД.Период
		|		И Возврат.Ссылка = ДД.Регистратор
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И (ВЫБОР КОГДА ДД.Возвращено > 0 ТОГДА СправочникВидыЗапасов.Организация ИНАЧЕ ДД.ОрганизацияВладелец КОНЕЦ) В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию)
		|		// сворачиваем строки, различающиеся номерами ГТД
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА Не Возврат.Ссылка ЕСТЬ NULL
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	(ВЫБОР КОГДА ДД.Возвращено > 0 ТОГДА СправочникВидыЗапасов.Организация ИНАЧЕ ДД.ОрганизацияВладелец КОНЕЦ),
		|	ДД.АналитикаУчетаНоменклатуры,
		|	(ВЫБОР КОГДА ДД.Возвращено > 0 ТОГДА ДД.ВидЗапасовПродавца ИНАЧЕ СправочникВидыЗапасов.ВидЗапасовВладельца КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ДД.АналитикаУчетаНоменклатуры КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		КОГДА ДД.Возвращено > 0 ТОГДА ДД.КорВидЗапасов
		|		ИНАЧЕ ДД.ВидЗапасовПродавца КОНЕЦ),
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация
		|";
КонецФункции

Функция ТекстПередачиВозвратыКомиссияМеждуОрганизациями()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПередачиВозвратыКомиссияМеждуОрганизациями"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА ""Потребление""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КОНЕЦ) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ДД.Регистратор КОНЕЦ) КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ТоварыПереданныеНаКомиссию КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК Передача
		|		ПО Передача.Дата = ДД.Период
		|		И Передача.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями КАК Возврат
		|		ПО Возврат.Дата = ДД.Период
		|		И Возврат.Ссылка = ДД.Регистратор
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И (ЕСТЬNULL(Передача.ПоТоварамКОформлению, ЛОЖЬ) ИЛИ ЕСТЬNULL(Возврат.ПоТоварамКОформлению, ЛОЖЬ))
		// сворачиваем строки, различающиеся номерами ГТД
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА ""Потребление""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ ДД.Регистратор КОНЕЦ),
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.ХозяйственнаяОперация
		|";
КонецФункции


// КОНТУР ПартииТоваровПереданныеНаКомиссию
Функция ТекстОстаткиПереданныхТоваров()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстОстаткиПереданныхТоваров"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Остаток"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию) КАК РазделУчета,
		|	&НачалоПериода КАК Период,
		|	ДД.ДокументПоступления КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	ДД.КоличествоОстаток КАК Количество,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ДД.НДСРеглОстаток КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ИСТИНА КАК СохранятьРегл,
		|	&НачалоПериода КАК ПериодПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДД.ДокументПередачиНаКомиссию КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	Аналитика.Номенклатура,
		|	Аналитика.Характеристика,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровПереданныеНаКомиссию.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.КоличествоОстаток > 0.
		|";
КонецФункции

Функция ТекстВводыОстатковПереданныхТоваров()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстВводыОстатковПереданныхТоваров"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Остаток"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию) КАК РазделУчета,
		|	&НачалоПериода КАК Период,
		|	ДД.ДокументПоступления КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	ДД.Количество,
		|	ДД.Стоимость,
		|	ДД.СтоимостьБезНДС,
		|	ДД.СтоимостьРегл,
		|	ДД.НДСРегл,
		|	ДД.ПостояннаяРазница,
		|	ДД.ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ИСТИНА КАК СохранятьРегл,
		|	&НачалоПериода КАК ПериодПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДД.ДокументПередачиНаКомиссию КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	Аналитика.Номенклатура,
		|	Аналитика.Характеристика,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровПереданныеНаКомиссию КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.Регистратор ССЫЛКА Документ.ВводОстатков
		|";
КонецФункции

Функция ТекстПередачиНаКомиссию()
	// передачи товаров на комиссию
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПередачиНаКомиссию"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Перемещение"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ТоварыПереданныеНаКомиссию КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ВводОстатков
		// сворачиваем строки, различающиеся номерами ГТД
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.ХозяйственнаяОперация
		|";
КонецФункции

Функция ТекстВозвратыПереданныхТоваров()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстВозвратыПереданныхТоваров"" КАК ЗапросИсточник,
		|	90 Приоритет,
		|	(ВЫБОР
		|		КОГДА Реализация.Дата >= &НачалоПериода ТОГДА ""ВозвратКомиссия""
		|		ИНАЧЕ ""Потребление"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор, 
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	ДД.ДокументРеализации КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ТоварыПереданныеНаКомиссию КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Реализация
		|		ПО Реализация.Ссылка = ДД.ДокументРеализации
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями))
		// сворачиваем строки, различающиеся номерами ГТД
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА Реализация.Дата >= &НачалоПериода ТОГДА ""ВозвратКомиссия""
		|		ИНАЧЕ ""Потребление"" КОНЕЦ),
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.ДокументРеализации,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация
		|";
	КонецФункции
	
Функция ТекстВозвратыНаСкладПереданныхТоваров()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстВозвратыНаСкладПереданныхТоваров"" КАК ЗапросИсточник,
		|	90 Приоритет,
		|	""Сторно"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор, 
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СправочникВидыЗапасов
		|		ПО СправочникВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Организация = ДД.ОрганизацияОтгрузки
		|	И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
		|	И НЕ СправочникВидыЗапасов.РеализацияЗапасовДругойОрганизации
		// сворачиваем строки, различающиеся номерами ГТД
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов,
		|	ДД.ДокументРеализации,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация
		|";
КонецФункции

#КонецОбласти


#Область РасчетПартийПереданных

// Текст запроса исходных движений для расчета партий
// ПРИОРИТЕТ:
//	{10, Партия}, {10, Сторно}, {10, Перемещение}, {10, Перемещение/Собственные},
//	{80, Сторно/Чужие},
//	{90, Потребление}, {90, Потребление/Чужие}, {90, Потребление/Собственные}
// ПРИМЕЧАНИЯ:
//	ДокументПоступления - нужен для партий/остатков, приходных движений перемещений и для сторно
//	КорАналитикаУчетаНоменклатуры, КорВидЗапасов - нужны для расходных движений перемещений и для сторно
Функция ДанныеДляПартийПереданных(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	// СОРТИРОВКА по аналитикам, приоритету и моменту движения - требование алгоритма обсчета партий
	ТекстСортировка = "
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура, Приоритет ВОЗР, ПериодПоступления, Регистратор
		|";
	ТекстИндексы = "
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|";	
		
	ИсходныйТекстЗапроса =
		ТекстПартииПереданныхИнициализация() + ";" // вт ПрошлыеПоступления
		+ ТекстОписаниеПартийПереданных()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПартийПереданных()  // использует ПрошлыеПоступления
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстНачальныеОстаткиПереданные()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПартииПереданные()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПартииВПути()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПартииВПутиРеализовано()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстВозвратыКомиссионеров()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстВозвратыМеждуОрганизациями()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОтчетыКомиссионеров()
		+ ТекстИндексы;
	МВТ = Новый МенеджерВременныхТаблиц;	
	ИсходныйЗапрос = Новый Запрос(СтрЗаменить(ИсходныйТекстЗапроса, "//ВоВременнуюТаблицу", ""));
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);	
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ИсходныйЗапрос.МенеджерВременныхТаблиц = МВТ;
	ИсходныйЗапрос.Выполнить();
	
	
	Запрос = Новый Запрос(ТекстОписаниеПартийПереданных());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	ВременнаяТаблицаДанныхПоОтбору("Номенклатура", ТекстСортировка, РасчетныеПартии, МВТ);

	Возврат МВТ;
КонецФункции

Функция РасчетныеПартииПереданные(ДанныеДляРасчета, Регистраторы, ЦепочкиДвижений = Неопределено, Тест = Ложь) // ДанныеДляРасчета будут изменены
	// Шаг 1: создаем буфер накопления рассчитанных партий
	Запрос = Новый Запрос(ТекстОписаниеПартийПереданных());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	// Шаг 2: обсчитываем цепочки движений по передачам, возвратам, перемещениям, порчам, пересортицам и т.д.
	КонтекстЦепочек = ОписаниеЦепочек("Потребление, Партия, Остаток, Сторно, Возврат, ВПути");
	
	ПоляПотреблений = "РазделУчета, Организация, АналитикаУчетаНоменклатуры, ВидЗапасов";
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Потребление", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Партия", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "ВПути", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Остаток", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Сторно", ПоляПотреблений);
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Сторно", "АналитикаУчетаНоменклатуры, ВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "Партия", "АналитикаУчетаНоменклатуры, ВидЗапасов");
	
	ПоляВозврата = "РазделУчета, Организация, АналитикаУчетаНоменклатуры, ВидЗапасов, ДокументПоступления, ДокументПередачиНаКомиссию";
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Возврат", ПоляВозврата);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Возврат", "Остаток", ПоляВозврата);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Возврат", "Партия", ПоляВозврата);
	
	// Шаг 3: замена ложных партий на первичные партии в расчетных строках по результатам построение графа замен
	КонтекстДвижений = ОписаниеДвижений(
		"ПартииТоваровПереданныеНаКомиссию",
		"ПартииТоваровПереданныеНаКомиссию",
		ПереченьПолей(РасчетныеПартии.Колонки),
		ПоляПотреблений,
		"Количество, Стоимость, СтоимостьБезНДС, СтоимостьРегл, НДСРегл, ПостояннаяРазница, ВременнаяРазница",
		"Количество", "Количество", "ДокументПередачиНаКомиссию", "Период");
	ЦепочкиДвижений(КонтекстЦепочек, ДанныеДляРасчета);
	РассчитатьПартииПоЦепочкам(КонтекстДвижений, ДанныеДляРасчета, РасчетныеПартии, Регистраторы, Тест);
	ЦепочкиДвижений = ДанныеДляРасчета;
	
	// Шаг 4: Удаляем нерассчитанные партии
	УдалитьНезаписываемыеСтроки(КонтекстДвижений.Контекст, РасчетныеПартии);
	
	Возврат РасчетныеПартии;
КонецФункции

Функция ТекстПартииПереданныхИнициализация()
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументПоступления КАК Ссылка
		|ПОМЕСТИТЬ
		|	ПрошлыеПоступления
		|ИЗ
		|	РегистрНакопления.ПартииТоваровПереданныеНаКомиссию.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|ГДЕ
		|	ДД.ДокументПоступления <> НЕОПРЕДЕЛЕНО
		|";
КонецФункции

Функция ТекстОписаниеПартийПереданных()
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	""ТекстОписаниеПартийПереданных______________________"" КАК ЗапросИсточник,
		|	0 КАК Приоритет,
		|	""ХХХХХХХХХХХХХХХХ"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	ДД.ДокументПередачиНаКомиссию,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ПериодПоступления,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
		|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры
		|//ВоВременнуюТаблицу ПОМЕСТИТЬ ИсходныеДанные
		|ИЗ
		|	РегистрНакопления.ПартииТоваровПереданныеНаКомиссию КАК ДД
		|";
КонецФункции

Функция ТекстОстаткиПартийПереданных() // использует ПрошлыеПоступления
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстОстаткиПартийПереданных"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Остаток"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию) КАК РазделУчета,
		|	Периодика.Период КАК Период,
		|	ДД.ДокументПоступления КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПередачиНаКомиссию,
		|	ДД.КоличествоОстаток КАК Количество,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ДД.НДСРеглОстаток КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	Периодика.Период КАК ПериодПоступления,
		|	Аналитика.Номенклатура,
		|	Аналитика.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры
		|ИЗ
		|	РегистрНакопления.ПартииТоваровПереданныеНаКомиссию.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
		|		ВЫБРАТЬ
		|			МАКСИМУМ(Периодика.Период) КАК Период, ПрошлыеПоступления.Ссылка
		|		ИЗ
		|			ПрошлыеПоступления КАК ПрошлыеПоступления
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровПереданныеНаКомиссию КАК Периодика
		|				ПО Периодика.Период < &НачалоПериода
		|				И Периодика.ДокументПоступления = ПрошлыеПоступления.Ссылка
		|		СГРУППИРОВАТЬ ПО
		|			ПрошлыеПоступления.Ссылка
		|	) КАК Периодика
		|		ПО Периодика.Ссылка = ДД.ДокументПоступления
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Отгрузки
		|		ПО Отгрузки.Ссылка = ДД.ДокументПередачиНаКомиссию
		|		И Отгрузки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)
		|ГДЕ
		|	ДД.КоличествоОстаток > 0.
		|	И Отгрузки.Ссылка ЕСТЬ NULL
		|";
КонецФункции

Функция ТекстНачальныеОстаткиПереданные()
	Возврат "
		// Ввод начальных остатков
		|ВЫБРАТЬ
		|	""ТекстНачальныеОстаткиПереданные"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Партия"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.ВидДвижения КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПередачиНаКомиссию,
		|	ДД.Количество,
		|	ДД.Стоимость,
		|	ДД.СтоимостьБезНДС,
		|	ДД.СтоимостьРегл,
		|	ДД.НДСРегл,
		|	ДД.ПостояннаяРазница,
		|	ДД.ВременнаяРазница,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры
		|ИЗ
		|	РегистрНакопления.ПартииТоваровПереданныеНаКомиссию КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций КАК Товары
		|		ПО Товары.Регистратор = ДД.Регистратор
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.Регистратор = ДД.ДокументПоступления
		|	И Товары.Регистратор ЕСТЬ NULL
		|";
КонецФункции

Функция ТекстПартииПереданные()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПартииПереданные"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Партия"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	Партии.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	Партии.АналитикаУчетаПартий,
		|	Партии.Регистратор КАК ДокументПередачиНаКомиссию,
		|	СУММА(Партии.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК Количество,
		|	СУММА(Партии.Стоимость) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК Стоимость,
		|	СУММА(Партии.СтоимостьБезНДС) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК СтоимостьБезНДС,
		|	СУММА(Партии.СтоимостьРегл) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК СтоимостьРегл,
		|	СУММА(Партии.НДСРегл) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК НДСРегл,
		|	СУММА(Партии.ПостояннаяРазница) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК ПостояннаяРазница,
		|	СУММА(Партии.ВременнаяРазница) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК ВременнаяРазница,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры
		|ИЗ
		|	РегистрНакопления.ТоварыПереданныеНаКомиссию КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
		|		ПО Партии.Регистратор = ДД.Регистратор
		|		И Партии.АналитикаУчетаНоменклатуры = ДД.КорАналитикаУчетаНоменклатуры
		|		И Партии.ВидЗапасов = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И Партии.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Партии.Количество > 0.
		|	И НЕ Партии.Первичное
		// сворачиваем строки, различающиеся номерами ГТД
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	Партии.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	Партии.АналитикаУчетаПартий,
		|	Партии.Регистратор,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры
		|";
КонецФункции

Функция ТекстПартииВПути()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПартииВПути"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА Отгрузки.ДатаПереходаПраваСобственности МЕЖДУ &НачалоПериода И &ОкончаниеПериода ТОГДА ""ВПути""
		|		ИНАЧЕ ""Партия"" КОНЕЦ) КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.Регистратор КАК ДокументПередачиНаКомиссию,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Отгрузки
		|		ПО Отгрузки.Ссылка = ДД.Регистратор
		|ГДЕ
		|	(ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		ИЛИ Отгрузки.ДатаПереходаПраваСобственности МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		ИЛИ Отгрузки.ДатаПереходаПраваСобственности = ДАТАВРЕМЯ(1,1,1))
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Отгрузки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)
		// сворачиваем строки, различающиеся номерами ГТД
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА Отгрузки.ДатаПереходаПраваСобственности МЕЖДУ &НачалоПериода И &ОкончаниеПериода ТОГДА ""ВПути""
		|		ИНАЧЕ ""Партия"" КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.Регистратор,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры
		|";
КонецФункции

Функция ТекстПартииВПутиРеализовано()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПартииВПутиРеализовано"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыВПути) КАК РазделУчета,
		|	Отгрузки.ДатаПереходаПраваСобственности КАК Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.Регистратор КАК ДокументПередачиНаКомиссию,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	Отгрузки.ДатаПереходаПраваСобственности КАК ПериодПоступления,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Отгрузки
		|		ПО Отгрузки.Ссылка = ДД.Регистратор
		|ГДЕ
		|	Отгрузки.ДатаПереходаПраваСобственности МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Отгрузки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)
		|	И Отгрузки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.Отгружено)
		// сворачиваем строки, различающиеся номерами ГТД
		|СГРУППИРОВАТЬ ПО
		|	Отгрузки.ДатаПереходаПраваСобственности,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.Регистратор,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры
		|";
КонецФункции

Функция ТекстВозвратыКомиссионеров()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстВозвратыКомиссионеров"" КАК ЗапросИсточник,
		|	45 КАК Приоритет,
		|	""Возврат"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	Партии.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	Партии.АналитикаУчетаПартий,
		|	Партии.ДокументИсточник КАК ДокументПередачиНаКомиссию,
		|	- СУММА(Партии.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК Количество,
		|	- СУММА(Партии.Стоимость) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК Стоимость,
		|	- СУММА(Партии.СтоимостьБезНДС) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК СтоимостьБезНДС,
		|	- СУММА(Партии.СтоимостьРегл) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК СтоимостьРегл,
		|	- СУММА(Партии.НДСРегл) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК НДСРегл,
		|	- СУММА(Партии.ПостояннаяРазница) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК ПостояннаяРазница,
		|	- СУММА(Партии.ВременнаяРазница) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК ВременнаяРазница,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ПериодПоступления,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры
		|ИЗ
		|	РегистрНакопления.ТоварыПереданныеНаКомиссию КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
		|		ПО Партии.Регистратор = ДД.Регистратор
		|		И Партии.КорАналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Партии.КорВидЗапасов = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И НЕ ДД.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
		|	И Партии.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Партии.Количество < 0.
		// сворачиваем строки, различающиеся номерами ГТД
		|СГРУППИРОВАТЬ ПО
		|	(НЕ Партии.Первичное),
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	Партии.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	Партии.АналитикаУчетаПартий,
		|	Партии.ДокументИсточник,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры
		|";
КонецФункции

Функция ТекстВозвратыМеждуОрганизациями()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстВозвратыМеждуОрганизациями"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	""Возврат"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	Партии.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	Партии.АналитикаУчетаПартий,
		|	Партии.ДокументИсточник КАК ДокументПередачиНаКомиссию,
		|	СУММА(Партии.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК Количество,
		|	СУММА(Партии.Стоимость) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК Стоимость,
		|	СУММА(Партии.СтоимостьБезНДС) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК СтоимостьБезНДС,
		|	СУММА(Партии.СтоимостьРегл) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК СтоимостьРегл,
		|	СУММА(Партии.НДСРегл) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК НДСРегл,
		|	СУММА(Партии.ПостояннаяРазница) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК ПостояннаяРазница,
		|	СУММА(Партии.ВременнаяРазница) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.НомерСтроки) КАК ВременнаяРазница,
		|	Партии.ДокументПоступления.Дата КАК ПериодПоступления,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры
		|ИЗ
		|	РегистрНакопления.ТоварыПереданныеНаКомиссию КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
		|		ПО Партии.Регистратор = ДД.Регистратор
		|		И Партии.КорАналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Партии.КорВидЗапасов = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
		// сворачиваем строки, различающиеся номерами ГТД
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
        |	Партии.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	Партии.АналитикаУчетаПартий,
		|	Партии.ДокументИсточник,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры
		|";
КонецФункции

Функция ТекстОтчетыКомиссионеров()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстОтчетыКомиссионеров"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	ВЫБОР
		|		КОГДА СУММА(ДД.Количество) < 0
		|		ТОГДА ""Сторно""
		|		ИНАЧЕ ""Потребление""
		|	КОНЕЦ КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ДД.ВидЗапасов КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПередачиНаКомиссию,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0 КАК Стоимость,
		|	0 КАК СтоимостьБезНДС,
		|	0 КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	ДД.Период КАК ПериодПоступления,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры
		|ИЗ
		|	РегистрНакопления.ТоварыПереданныеНаКомиссию КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций КАК Товары
		|		ПО Товары.Регистратор = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизацийКПередаче КАК ТоварыКПередаче
		|		ПО ТоварыКПередаче.Регистратор = ДД.Регистратор
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Товары.Регистратор ЕСТЬ NULL
		|	И ТоварыКПередаче.Регистратор ЕСТЬ NULL
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
        |	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры
		|";
КонецФункции

#КонецОбласти


#Область РасчетПартийЗатрат

Функция ДанныеДляПартийЗатрат(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ТекстСортировка = "
		|УПОРЯДОЧИТЬ ПО
		|	ДокументВыпуска, Период, Регистратор, Приоритет ВОЗР
		|";
	ТекстИндексы = "
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументВыпуска
		|";	
	// Выбираем приходные движения партий затрат, которые дальше будем двигать по партиям
	ИсходныйТекстЗапроса =
		ТекстПартииЗатратИнициализация() + ";" // вт Выпуски
		+ ТекстОписаниеПартийЗатрат()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПартийЗатрат() // использует Выпуски
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПриходыСборокТоваров() // использует Выпуски
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстРасходыПартийЗатратПрошлыхМесяцев() // использует ПрошлыеРеализации
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстИтерацияПартийЗатрат()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстИтерацияПартийЗатратКомиссия()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстИтерацияПартийЗатратКомиссияВозврат()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстДополнениеПартийЗатрат()
		+ ТекстИндексы;
	МВТ = Новый МенеджерВременныхТаблиц;	
	ИсходныйЗапрос = Новый Запрос(СтрЗаменить(ИсходныйТекстЗапроса, "//ВоВременнуюТаблицу", ""));
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);	
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ИсходныйЗапрос.УстановитьПараметр("Итерация", Ложь);
	ИсходныйЗапрос.УстановитьПараметр("СобственныеТипыЗапасов", СобственныеТипыЗапасов());
	ИсходныйЗапрос.УстановитьПараметр("ЕстьФИФОСкользящая", ЕстьФИФОСкользящая(НачалоПериода, ОкончаниеПериода, МассивОрганизаций));
	ИсходныйЗапрос.МенеджерВременныхТаблиц = МВТ;
	ИсходныйЗапрос.Выполнить();
	
	
	Запрос = Новый Запрос(ТекстОписаниеПартийЗатрат());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	ВременнаяТаблицаДанныхПоОтбору("ДокументВыпуска", ТекстСортировка, РасчетныеПартии, МВТ);
	
	Возврат МВТ;
КонецФункции

Функция РасчетныеПартииЗатрат(ДанныеДляРасчета, Регистраторы, ЦепочкиДвижений = Неопределено, Тест = Ложь, РассчитатьПартии = Истина) // ДанныеДляРасчета будут изменены
	// Шаг 1: создаем буфер накопления рассчитанных партий
	Запрос = Новый Запрос(ТекстОписаниеПартийЗатрат());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	// Шаг 2: обсчитываем цепочки движений по передачам, возвратам, перемещениям, порчам, пересортицам и т.д.
	КонтекстЦепочек = ОписаниеЦепочек("Потребление, Перемещение, Партия, Остаток, Выпуск, Сторно, Замещение, Продукция, Передача,
	|Сборка, Затраты, ЗатратыПрочие, Распределение, ВыпускПрочие, ВПути, Прочее, Списание, Прошлое");
	
	ПоляПотреблений = "РазделУчета, ДокументВыпуска, АналитикаУчетаПродукции, Организация, ДокументИсточник";
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Потребление", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Партия", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Остаток", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Перемещение", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Замещение", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Выпуск", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "ВыпускПрочие", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Передача", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Сборка", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Сторно", "РазделУчета, ДокументВыпуска, АналитикаУчетаПродукции, Организация, Регистратор");

	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Перемещение", "Регистратор, АналитикаУчетаПродукции, ДокументВыпуска");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Перемещение", "Потребление", "Регистратор, КорАналитикаУчетаПродукции, ДокументВыпуска");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Перемещение", "Продукция", "Регистратор, КорАналитикаУчетаПродукции, ДокументВыпуска");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Замещение", "ДокументИсточник, АналитикаУчетаПродукции");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Замещение", "Потребление", "Регистратор, КорАналитикаУчетаПродукции");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Передача", "Регистратор, КорАналитикаУчетаПродукции, ДокументВыпуска");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Передача", "Потребление", "Регистратор, АналитикаУчетаПродукции, ДокументВыпуска");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Выпуск", "ДокументИсточник, АналитикаУчетаПродукции, АналитикаУчетаНоменклатуры, ДокументПоступления, ВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Выпуск", "Потребление", "Регистратор, КорАналитикаУчетаПродукции, АналитикаУчетаПродукции, ДокументПоступления, КорВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Выпуск", "Продукция", "Регистратор, КорАналитикаУчетаПродукции, АналитикаУчетаПродукции, ДокументВыпуска, КорВидЗапасов");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Сборка", "ДокументИсточник, АналитикаУчетаПродукции");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сборка", "Потребление", "Регистратор, КорАналитикаУчетаПродукции");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Продукция", "ДокументИсточник, РазделУчета, ДокументВыпуска, АналитикаУчетаПродукции, Организация");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Продукция", "Партия", "ДокументИсточник, РазделУчета, ДокументВыпуска, АналитикаУчетаПродукции, Организация");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Продукция", "Остаток", "ДокументИсточник, РазделУчета, ДокументВыпуска, АналитикаУчетаПродукции, Организация");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Продукция", "Перемещение", "ДокументИсточник, РазделУчета, ДокументВыпуска, АналитикаУчетаПродукции, Организация");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Продукция", "Выпуск", "ДокументИсточник, РазделУчета, ДокументВыпуска, АналитикаУчетаПродукции, Организация");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Продукция", "ВыпускПрочие", "ДокументИсточник, РазделУчета, ДокументВыпуска, АналитикаУчетаПродукции, Организация");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Сторно", "ДокументИсточник, РазделУчета, КорАналитикаУчетаПродукции, ДокументВыпуска");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "Потребление", "Регистратор, РазделУчета, АналитикаУчетаПродукции, ДокументВыпуска");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "Прошлое", "Регистратор, РазделУчета, АналитикаУчетаПродукции, ДокументВыпуска");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "ЗатратыПрочие", "ДокументИсточник, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ЗатратыПрочие", "Потребление", "Регистратор, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов");
	
    ДобавитьОписаниеПриемника(КонтекстЦепочек, "Распределение", "ДокументИсточник, НалоговоеНазначение");
    ДобавитьОписаниеИсточника(КонтекстЦепочек, "Распределение", "Затраты", "Регистратор, НалоговоеНазначение");
    ДобавитьОписаниеИсточника(КонтекстЦепочек, "Распределение", "ЗатратыПрочие", "Регистратор, НалоговоеНазначение");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Прочее", "Организация, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Прочее", "Затраты", "Организация, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Прочее", "ЗатратыПрочие", "Организация, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Списание", "Регистратор");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Списание", "Прочее", "Регистратор");
	
    ДобавитьОписаниеПриемника(КонтекстЦепочек, "ВыпускПрочие", "ДокументИсточник, АналитикаУчетаПродукции, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов, НалоговоеНазначение");
    ДобавитьОписаниеИсточника(КонтекстЦепочек, "ВыпускПрочие", "Распределение", "Регистратор, КорАналитикаУчетаПродукции, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов, НалоговоеНазначение");
	
	// Шаг 4: замена ложных партий на первичные партии в расчетных строках по результатам построение графа замен
	КонтекстДвижений = ОписаниеДвижений(
		"ПартииЗатратНаВыпуск",
		"ПартииЗатратНаВыпуск",
		ПереченьПолей(РасчетныеПартии.Колонки),
		ПоляПотреблений,
		"Знаменатель, Количество, Стоимость, СтоимостьБезНДС, СтоимостьРегл, НДСРегл, ПостояннаяРазница, ВременнаяРазница",
		"Знаменатель", "Знаменатель", "ДокументИсточник", "Период");
	КонтекстДвижений.Вставить("ЗаполнятьАналитикуПартий", Истина);
	КонтекстДвижений.Вставить("ПоляСуммирования", "Количество, Стоимость, СтоимостьБезНДС, СтоимостьРегл, НДСРегл, ПостояннаяРазница, ВременнаяРазница");
	КонтекстДвижений.Вставить("ПоляГруппировки", ПереченьПолей(РасчетныеПартии.Колонки, КонтекстДвижений.ПоляСуммирования));
	ЦепочкиДвижений(КонтекстЦепочек, ДанныеДляРасчета);
	Если РассчитатьПартии Тогда
		РассчитатьПартииПоЦепочкам(КонтекстДвижений, ДанныеДляРасчета, РасчетныеПартии, Регистраторы, Тест);
	КонецЕсли;
	ЦепочкиДвижений = ДанныеДляРасчета;
	
	// Шаг 4: Удаляем нерассчитанные партии
	Если Не Тест Тогда
		УдалитьНезаписываемыеСтроки(КонтекстДвижений.Контекст, РасчетныеПартии);
	КонецЕсли;
	
	Возврат РасчетныеПартии;
КонецФункции

Функция ТекстПартииЗатратИнициализация() // вт ПрошлыеРеализации, Выпуски, ОстаткиПартийСборок, ПроизводственныеЗатраты, ДолиСтоимости, ВыпускиПродукции, ПриходыСборок, ПрошлыеПоступления, ИсключаемыеВыпуски
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументРеализации КАК ДокументРеализации,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
		|ПОМЕСТИТЬ
		|	ПрошлыеРеализации
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций КАК Расход
		|		ПО Расход.Период < &НачалоПериода
		|		И Расход.Регистратор = ДД.ДокументРеализации
		|		И Расход.АналитикаУчетаНоменклатуры = ДД.КорАналитикаУчетаНоменклатуры
		|		И Расход.ВидЗапасов = ДД.КорВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ДокументРеализации <> НЕОПРЕДЕЛЕНО
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Количество < 0
		|	
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументРеализации КАК ДокументРеализации,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизацийКПередаче КАК Расход
		|		ПО Расход.Период < &НачалоПериода
		|		И Расход.Регистратор = ДД.ДокументРеализации
		|		И Расход.АналитикаУчетаНоменклатуры = ДД.КорАналитикаУчетаНоменклатуры
		|		И Расход.ВидЗапасовПродавца = ДД.КорВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Активность
		|	И ДД.ДокументРеализации <> НЕОПРЕДЕЛЕНО
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Количество < 0
		|;
		// Документы и даты выпусков и сборок
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор,
		|	МАКСИМУМ(ДД.Период) КАК Период
		|ПОМЕСТИТЬ Выпуски
		|ИЗ (
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.ДокументВыпуска КАК Регистратор,
		|		Приходы.Период
		|	ИЗ
		|		РегистрНакопления.ПартииЗатратНаВыпуск.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииЗатратНаВыпуск КАК Приходы
		|			ПО Приходы.Период < &НачалоПериода
		|			И Приходы.Регистратор = ДД.ДокументВыпуска
		|			И Приходы.Регистратор = Приходы.ДокументВыпуска
		|
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.Регистратор,
		|		ДД.Период
		|	ИЗ
		|		РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ГДЕ
		|		ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Организация В (&МассивОрганизаций)
		|		И ДД.Активность
		|		И ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИП(Документ.СборкаТоваров)
		|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|) КАК ДД
		|СГРУППИРОВАТЬ ПО
		|	ДД.Регистратор
		|;
		// Остатки партионных регистров на начало
		|ВЫБРАТЬ
		|	Партии.Организация,
		|	Партии.АналитикаУчетаНоменклатуры,
		|	Партии.ДокументПоступления,
		|	СУММА(Партии.Количество) КАК Количество
		|ПОМЕСТИТЬ
		|	ОстаткиПартийСборок
		|ИЗ (
		|	ВЫБРАТЬ
		|		ДД.Организация,
		|		ДД.АналитикаУчетаНоменклатуры,
		|		ДД.ДокументПоступления,
		|		ДД.КоличествоОстаток КАК Количество
		|	ИЗ
		|		РегистрНакопления.ПартииТоваровОрганизаций.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		ДД.Организация,
		|		ДД.АналитикаУчетаНоменклатуры,
		|		ДД.ДокументПоступления,
		|		ДД.КоличествоОстаток КАК Количество
		|	ИЗ
		|		РегистрНакопления.ПартииТоваровПереданныеНаКомиссию.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		ДД.Организация,
		|		ДД.АналитикаУчетаНоменклатуры,
		|		ДД.ДокументПоступления,
		|		ДД.КоличествоОстаток КАК Количество
		|	ИЗ
		|		РегистрНакопления.ПартииПроизводственныхЗатрат.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|
		|	) КАК Партии
		|СГРУППИРОВАТЬ ПО
		|	Партии.Организация,
		|	Партии.АналитикаУчетаНоменклатуры,
		|	Партии.ДокументПоступления
		|;
		// Документы передачи в производство и возврата из производства
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ
		|	МатериалыИРаботыВПроизводстве
		|ИЗ
		|	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Товары
		|		ПО Товары.Ссылка = Аналитика.Номенклатура
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И Товары.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|ИНДЕКСИРОВАТЬ ПО
		|	ДД.Регистратор
		|;
		// Поступления комплектов сборок товаров
		|ВЫБРАТЬ
		|	ДД.Регистратор,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументИсточник,
		|	СУММА(ДД.Количество) КАК Количество
		|ПОМЕСТИТЬ
		|	ПриходыСборок
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Регистратор ССЫЛКА Документ.СборкаТоваров
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументИсточник
		|;
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументПоступления КАК Ссылка,
		|	ДД.Склад КАК Склад,
		|	МАКСИМУМ(ДД.Регистратор) КАК Регистратор,
		|	МАКСИМУМ(ДД.Период) КАК Период
		|ПОМЕСТИТЬ
		|	ПрошлыеПоступления
		|ИЗ (
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.ДокументПоступления,
		|		ДД.АналитикаУчетаНоменклатуры.Склад КАК Склад,
		|		МАКСИМУМ(Периодика.Регистратор) КАК Регистратор,
		|		МАКСИМУМ(Периодика.Период) КАК Период
		|	ИЗ
		|		РегистрНакопления.ПартииПроизводственныхЗатрат.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииПроизводственныхЗатрат КАК Периодика
		|			ПО Периодика.Период < &НачалоПериода
		|			И Периодика.ДокументПоступления = ДД.ДокументПоступления
		|			И Периодика.АналитикаУчетаНоменклатуры.Склад = ДД.АналитикаУчетаНоменклатуры.Склад
		|	ГДЕ
		|		ДД.ДокументПоступления <> НЕОПРЕДЕЛЕНО
		|		И Периодика.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	СГРУППИРОВАТЬ ПО
		|		ДД.ДокументПоступления,
		|		ДД.АналитикаУчетаНоменклатуры.Склад
		|
		|	) КАК ДД
		|СГРУППИРОВАТЬ ПО
		|	ДД.ДокументПоступления,
		|	ДД.Склад
		|;
		// Подразделение документов-регистраторов
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор,
		|	ДД.Подразделение
		|ПОМЕСТИТЬ
		|	ПодразделенияРегистраторов
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|";
КонецФункции

Функция ТекстОписаниеПартийЗатрат()
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	""ТекстОписаниеПартийЗатрат______________________"" КАК ЗапросИсточник,
		|	0 КАК Приоритет,
		|	""ХХХХХХХХХХХХХХХХ"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.ДокументВыпуска,
		|	ДД.ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Знаменатель,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПродукции,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов
		|//ВоВременнуюТаблицу ПОМЕСТИТЬ ИсходныеДанные
		|ИЗ
		|	РегистрНакопления.ПартииЗатратНаВыпуск КАК ДД
		|";
КонецФункции

Функция ТекстОстаткиПартийЗатрат() // использует Выпуски, ОстаткиПартийСборок, ПрошлыеПоступления
	Возврат "
		// остатки партий затрат на выпуск
		|ВЫБРАТЬ
		|	""ТекстОстаткиПартийЗатрат"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	""Остаток"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	(ВЫБОР
		|		КОГДА Периодика.Регистратор ЕСТЬ NULL ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ) КАК РазделУчета,
		|	Выпуски.Период КАК Период,
		|	ЕСТЬNULL(Периодика.Регистратор, ДД.ДокументВыпуска) КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.ДокументВыпуска,
		|	ДД.ДокументПоступления,
		|	ДД.АналитикаУчетаПартий,
		|	Партии.Количество КАК Знаменатель,
		|	ДД.КоличествоОстаток КАК Количество,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ДД.НДСРеглОстаток КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ЕСТЬNULL(Периодика.Регистратор, ДД.ДокументВыпуска) КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПродукции,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПартииЗатратНаВыпуск.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Выпуски
		|		ПО Выпуски.Регистратор = ДД.ДокументВыпуска
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиПартийСборок КАК Партии
		|		ПО Партии.Организация = ДД.Организация
		|		И Партии.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаПродукции
		|		И Партии.ДокументПоступления = ДД.ДокументВыпуска
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПрошлыеПоступления КАК Периодика
		|		ПО Периодика.Ссылка = ДД.ДокументВыпуска
		|		И Периодика.Склад = ДД.АналитикаУчетаПродукции.Склад
		|ГДЕ
		|	Партии.Количество > 0.
		|";
КонецФункции

Функция ТекстПриходыСборокТоваров() // использует Выпуски, ПриходыСборок
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПриходыСборокТоваров"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА Выпуски.Регистратор ЕСТЬ NULL ТОГДА ""Партия""
		|		ИНАЧЕ ""Сборка"" КОНЕЦ) КАК ТипЗаписи,
		|	(ВЫБОР КОГДА Выпуски.Регистратор ЕСТЬ NULL ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	(ВЫБОР
		|		КОГДА Выпуски.Регистратор ЕСТЬ NULL ТОГДА ДД.АналитикаУчетаНоменклатуры
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КОНЕЦ) КАК АналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА Выпуски.Регистратор ЕСТЬ NULL ТОГДА ДД.ВидЗапасов
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КОНЕЦ) КАК ВидЗапасов,
		|	ДД.Регистратор КАК ДокументВыпуска,
		|	(ВЫБОР
		|		КОГДА Выпуски.Регистратор ЕСТЬ NULL ТОГДА ДД.ДокументПоступления
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ДокументПоступления,
		|	ДД.АналитикаУчетаПартий,
		|	Приходы.Количество КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	Приходы.ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначениеПродукции,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПриходыСборок КАК Приходы
		|		ПО Приходы.Регистратор = ДД.Регистратор
		|		И Приходы.ВидЗапасов = ДД.КорВидЗапасов
		|		И Приходы.АналитикаУчетаНоменклатуры = ДД.КорАналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ Выпуски
		|		ПО Выпуски.Регистратор = ДД.ДокументПоступления
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИП(Документ.СборкаТоваров)
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ВидыЗапасов.ТипЗапасов В (&СобственныеТипыЗапасов)
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА Выпуски.Регистратор ЕСТЬ NULL ТОГДА ""Партия""
		|		ИНАЧЕ ""Сборка"" КОНЕЦ),
		|	(ВЫБОР КОГДА Выпуски.Регистратор ЕСТЬ NULL ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА Выпуски.Регистратор ЕСТЬ NULL ТОГДА ДД.АналитикаУчетаНоменклатуры
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА Выпуски.Регистратор ЕСТЬ NULL ТОГДА ДД.ВидЗапасов
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КОНЕЦ),
		|	ДД.Регистратор,
		|	(ВЫБОР
		|		КОГДА Выпуски.Регистратор ЕСТЬ NULL ТОГДА ДД.ДокументПоступления
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ),
		|	ДД.АналитикаУчетаПартий,
		|	Приходы.Количество,
		|	Приходы.ДокументИсточник,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение,
		|	ДД.НалоговоеНазначение 
		|";
КонецФункции

Функция ТекстРасходыПартийЗатратПрошлыхМесяцев() // использует ПрошлыеРеализации
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстРасходыПартийЗатратПрошлыхМесяцев"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Прошлое"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.ДокументВыпуска,
		|	ДД.ДокументПоступления,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ДД.НалоговоеНазначениеПродукции КАК НалоговоеНазначениеПродукции,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПартииЗатратНаВыпуск КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрошлыеРеализации КАК Прошлые
		|		ПО ДД.Регистратор = Прошлые.ДокументРеализации
		|		И ДД.АналитикаУчетаПродукции = Прошлые.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.ДокументВыпуска,
		|	ДД.ДокументПоступления,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.Знаменатель,
		|	ДД.ДокументИсточник,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.НалоговоеНазначение,
		|	ДД.НалоговоеНазначениеПродукции 
		|";
КонецФункции

Функция ТекстИтерацияПартийЗатрат()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстИтерацияПартийЗатрат"" КАК ЗапросИсточник,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 90
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА 10
		|		ИНАЧЕ 40 КОНЕЦ) КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА ""Потребление""
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество < 0. ТОГДА ""Сторно""
		|		КОГДА ДД.Регистратор = ДД.ДокументПоступления ТОГДА ""Замещение""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.ДокументПоступления КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	СУММА(ДД.Количество) КАК Знаменатель,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА ЛОЖЬ
		|		КОГДА Передачи.Ссылка ЕСТЬ NULL И Возвраты.Ссылка ЕСТЬ NULL ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК СохранятьРегл,
		|	ДД.ДокументИсточник,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаПродукции,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА ДД.ВидЗапасов
		|		ИНАЧЕ ДД.КорВидЗапасов КОНЕЦ) КАК КорВидЗапасов,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПродукции,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ЕСТЬNULL(ПодразделенияРегистраторов.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПодразделенияРегистраторов КАК ПодразделенияРегистраторов
		|		ПО ПодразделенияРегистраторов.Регистратор = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК Передачи
		|		ПО Передачи.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Передачи.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями КАК Возвраты
		|		ПО Возвраты.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Возвраты.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента КАК ВозвратыОтКлиента
		|		ПО ВозвратыОтКлиента.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ВозвратыОтКлиента.Ссылка = ДД.Регистратор
		|		И ВозвратыОтКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК Сборка
		|		ПО Сборка.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Сборка.Ссылка = ДД.Регистратор
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|	И ВозвратыОтКлиента.Ссылка ЕСТЬ NULL
		|	И НЕ (ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И НЕ Сборка.Ссылка ЕСТЬ NULL)
		|	И НЕ (ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И НЕ Сборка.Ссылка ЕСТЬ NULL
		|		И ДД.АналитикаУчетаНоменклатуры = ДД.КорАналитикаУчетаНоменклатуры)
		|	И ДД.ДокументПоступления <> НЕОПРЕДЕЛЕНО
		|	И НЕ ДД.ДокументПоступления ССЫЛКА Документ.ВводОстатков
		|	И НЕ ДД.ДокументПоступления ССЫЛКА Документ.ПоступлениеТоваровУслуг
		|	И НЕ ДД.ДокументПоступления ССЫЛКА Документ.ОприходованиеИзлишковТоваров
		|	И НЕ ДД.ДокументПоступления ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
		|	И НЕ (ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		И ЕСТЬNULL(Передачи.ХозяйственнаяОперация, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию))
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 90
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА 10
		|		ИНАЧЕ 40 КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА ""Потребление""
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество < 0. ТОГДА ""Сторно""
		|		КОГДА ДД.Регистратор = ДД.ДокументПоступления ТОГДА ""Замещение""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ),
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА ЛОЖЬ
		|		КОГДА Передачи.Ссылка ЕСТЬ NULL И Возвраты.Ссылка ЕСТЬ NULL ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ),
		|	ДД.ДокументИсточник,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА ДД.ВидЗапасов
		|		ИНАЧЕ ДД.КорВидЗапасов КОНЕЦ),
		|	ДД.ХозяйственнаяОперация,
		|	ДД.НалоговоеНазначение,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ЕСТЬNULL(ПодразделенияРегистраторов.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
		|";
КонецФункции

Функция ТекстИтерацияПартийЗатратКомиссия()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстИтерацияПартийЗатратКомиссия"" КАК ЗапросИсточник,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 90
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА 10
		|		ИНАЧЕ 40 КОНЕЦ) КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА ""Потребление""
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество < 0. ТОГДА ""Сторно""
		|		КОГДА ДД.Регистратор = ДД.ДокументПоступления ТОГДА ""Замещение""
		|		ИНАЧЕ ""Передача"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.ДокументПоступления КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	СУММА(ДД.Количество) КАК Знаменатель,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.ДокументПоступления КАК ДокументИсточник,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПродукции,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровПереданныеНаКомиссию КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И (ДД.Регистратор <> ДД.ДокументПоступления ИЛИ &Итерация)
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 90
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА 10
		|		ИНАЧЕ 40 КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА ""Потребление""
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество < 0. ТОГДА ""Сторно""
		|		КОГДА ДД.Регистратор = ДД.ДокументПоступления ТОГДА ""Замещение""
		|		ИНАЧЕ ""Передача"" КОНЕЦ),
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.НалоговоеНазначение,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение
		|";
КонецФункции

Функция ТекстИтерацияПартийЗатратКомиссияВозврат()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстИтерацияПартийЗатратКомиссияВозврат"" КАК ЗапросИсточник,
		|	40 КАК Приоритет,
		|	""Сторно"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.ДокументПоступления КАК ДокументВыпуска,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	СУММА(-ДД.Количество) КАК Знаменатель,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПродукции,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровПереданныеНаКомиссию КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента КАК ВозвратыОтКлиента
		|		ПО ВозвратыОтКлиента.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ВозвратыОтКлиента.Ссылка = ДД.Регистратор
		|		И ВозвратыОтКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И (ДД.Регистратор <> ДД.ДокументПоступления ИЛИ &Итерация)
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ДокументПередачиНаКомиссию,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.НалоговоеНазначение,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение
		|";
КонецФункции

Функция ТекстДополнениеПартийЗатрат()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстДополнениеПартийЗатрат"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	""ВПути"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.ДокументВыпуска,
		|	ДД.ДокументПоступления,
		|	ДД.АналитикаУчетаПартий,
		|	СУММА(ДД.Знаменатель) КАК Знаменатель,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ДД.КорАналитикаУчетаПродукции,
		|	ДД.КорВидЗапасов,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ДД.КорВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначениеПродукции,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК Отгрузки
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииЗатратНаВыпуск КАК ДД
		|		ПО ДД.Регистратор = Отгрузки.Ссылка
		|ГДЕ
		|	Отгрузки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)
		|	И (Отгрузки.ДатаПереходаПраваСобственности МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		ИЛИ Отгрузки.ДатаПереходаПраваСобственности = ДАТАВРЕМЯ(1,1,1))
		|	И ДД.Период < &НачалоПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.ДокументВыпуска,
		|	ДД.ДокументПоступления,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.КорАналитикаУчетаПродукции,
		|	ДД.КорВидЗапасов,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение,
		|	ДД.НалоговоеНазначение
		|";
КонецФункции



#КонецОбласти


#Область РасчетПартийПрочих

Функция ДанныеДляПартийПрочих(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	МВТ = Новый МенеджерВременныхТаблиц;
	// распределяем только по собственным запасам, исключаем комиссионные и давальческие запасы
	СобственныеТипыЗапасов = СобственныеТипыЗапасов();
	
	// Определяем базу распределения прочих расходов на заказы поставщикам и заказы перемещений,
	// т.е. распределяем выполненные строки заказов на поступления партий - указываем заказ в партии.
	ТекстСортировкаЗаказов = "
		|УПОРЯДОЧИТЬ ПО
		|	Регистратор, Номенклатура, Характеристика, Склад, Приоритет
		|";
	ТекстРасчетаЗаказов = 
		ТекстТаможенныеДекларацииИПоступления() + ";" + // вт Декларации
		ТекстАналитикиРасходовВсе() + ";" + // вт АналитикиРасходовВсе
		ТекстЗаказыИзАналитикРасходов() + ";" + // вт ЗаказыИзАналитикРасходов, использует АналитикиРасходовВсе
		ТекстПоступившиеЗаказы() + // использует ЗаказыИзАналитикРасходов
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПоступленийПоЗаказам() + // использует ЗаказыИзАналитикРасходов
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстПриходыПоступленийПоЗаказам() + // использует ЗаказыИзАналитикРасходов
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстПриходыРаботПоЗаказам() + // использует ЗаказыИзАналитикРасходов
		ТекстСортировкаЗаказов;
	ЗапросРасчетаЗаказов = Новый Запрос(ТекстРасчетаЗаказов);
	ЗапросРасчетаЗаказов.МенеджерВременныхТаблиц = МВТ;
	ЗапросРасчетаЗаказов.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ЗапросРасчетаЗаказов.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	ЗапросРасчетаЗаказов.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ЗапросРасчетаЗаказов.УстановитьПараметр("СобственныеТипыЗапасов", СобственныеТипыЗапасов);
	
	ДанныеРасчетаЗаказов = ЗапросРасчетаЗаказов.Выполнить().Выгрузить();
	РасчетныеПартииПоЗаказам = Новый ТаблицаЗначений;
	ПоляРасчетаЗаказов = СкопироватьКолонки(ДанныеРасчетаЗаказов.Колонки, РасчетныеПартииПоЗаказам.Колонки);
	КонтекстДвижений = ОписаниеДвижений(
		"ЗаказыПоставщикам", "",
		ПоляРасчетаЗаказов,
		"Номенклатура, Регистратор, Характеристика, Склад", "Количество, Стоимость",
		"Количество", "Количество", "Заказ", "Период");
	РаспределитьПриходыНаРасходы(КонтекстДвижений, ДанныеРасчетаЗаказов, РасчетныеПартииПоЗаказам);
	
	// Получаем данные для расчета списания партий прочих расходов и прихода партий расходов на с/с товаров
	ТекстСортировка = "
		|УПОРЯДОЧИТЬ ПО
		|	Организация, Приоритет, ВидДвижения, Период, Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, ДокументПоступления";
	ИсходныйТекстЗапроса =
		ТекстПартииПоЗаказам() + ";" + // вт ПартииПоЗаказам, использует &РасчетныеПартииПоЗаказам
		ТекстПрошлыеПеремещения() + ";" + // вт ПрошлыеПеремещения
		ТекстРегистраторыПрочих() + ";" + // вт РегистраторыПрочих
		ТекстОстаткиПартийСборок() + ";" + // вт ОстаткиЗатратПоСборкам, ОстаткиПартийСборок
		ТекстОстаткиСебестоимости() + ";" + // вт ОстаткиСебестоимости
		ТекстПриходыПартийСборок() + ";" + // вт ПриходыПартийСборок
		ТекстОписаниеПартийПрочих() +
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПартийПрочих() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстПриходыПартийПрочих() +
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстДополненияПартийПрочих() + // использует РегистраторыПрочих
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисОстатки() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисОстаткиСборок() + // использует ОстаткиПартийСборок, АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисПриходы() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисКорректировкиПоступлений() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисПриходыСборок() + // использует ПриходыПартийСборок, АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисРаботы() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисПеремещения() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисПеремещенияСборок() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисПрошлыеПеремещения() + // использует ПрошлыеПеремещения
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисЗаказы() + // использует ПартииПоЗаказам, ЗаказыИзАналитикРасходов
		ТекстСортировка;
	ИсходныйТекстЗапроса = СтрЗаменить(ИсходныйТекстЗапроса, "&Вес", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки("СпрНоменклатура.ЕдиницаИзмерения", "СпрНоменклатура"));
	ИсходныйТекстЗапроса = СтрЗаменить(ИсходныйТекстЗапроса, "&Объем", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаОбъемУпаковки("СпрНоменклатура.ЕдиницаИзмерения", "СпрНоменклатура"));
	ИсходныйЗапрос = Новый Запрос(ИсходныйТекстЗапроса);
	ИсходныйЗапрос.МенеджерВременныхТаблиц = МВТ;
	ИсходныйЗапрос.УстановитьПараметр("РасчетныеПартииПоЗаказам", РасчетныеПартииПоЗаказам);
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ИсходныйЗапрос.УстановитьПараметр("СобственныеТипыЗапасов", СобственныеТипыЗапасов);
	ДанныеДляРасчета = ИсходныйЗапрос.Выполнить().Выгрузить();
	
	Возврат ДанныеДляРасчета;
КонецФункции

Функция РасчетныеПартииПрочих(ДанныеДляРасчета, Регистраторы, УзлыДвижений = Неопределено, Тест = Ложь) // ДанныеДляРасчета будут изменены
    
	// Шаг 0: Свертка исходных данных
	ПоляСуммирования = "Базис, Количество, Вес, Объем, Стоимость, СтоимостьБезНДС, СтоимостьРегл, НДСРегл, ПостояннаяРазница, ВременнаяРазница";
	ПоляГруппировки = ПереченьПолей(ДанныеДляРасчета.Колонки, ПоляСуммирования);
	ДанныеДляРасчета.Свернуть(ПоляГруппировки, ПоляСуммирования);
    
    // Движения, которые надо сохранить в расчетных партиях, но не нужно учитывать в расчетах
	Дополнения = Новый Массив;
	// кэшируем получение пустых ссылок - на множественных итерациях есть выигрыш
	ПустыеСсылки = Новый Соответствие;
	ПропорциональноКоличеству = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноКоличеству;
	ПропорциональноВесу = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноВесу;
	ПропорциональноОбъему = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноОбъему;
	// Шаг 1: Рассчитываем базу распределения для каждого прихода прочих расходов с учетом налогообложения партии распределения
	УзлыДвижений = Новый Соответствие; // [Организация, [АналитикаРасходов, [ИндексСтроки, [НалогообложениеНДС, Базис]]]]
	Ключи = Новый Массив(4); // {Организация, АналитикаРасходов, ИндексСтроки, НалоговоеНазначение}
	// расчет базы по для каждой строки прихода по налоговому назначению каждого расхода
	Для Каждого Движение Из ДанныеДляРасчета Цикл
		Ключи[0] = Движение.Организация;
		Ключи[1] = Неопределено;
		Ключи[2] = ДанныеДляРасчета.Индекс(Движение);
		Ключи[3] = Движение.НалоговоеНазначение;
		// фиксируем дополнение и уходим на следующую запись
		Если Движение.ТипЗаписи = "Дополнение" Тогда
			Дополнения.Добавить(Ключи[2]);
			Продолжить;
		// накапливаем приход партий прочих расходов для распределения по налоговым назначениям
		ИначеЕсли ЗначениеЗаполнено(Движение.СтатьяРасходов) Тогда
			Ключи[1] = Движение.АналитикаРаспределения;
			ДобавитьУзелИндекса(УзлыДвижений, Ключи, Неопределено);
			Продолжить;
		КонецЕсли;
		// Возвраты добавляются как положительный базис
		Количество = ?(Движение.Количество < 0., -Движение.Количество, Движение.Количество);
		Стоимость = ?(Движение.Стоимость < 0., -Движение.Стоимость, Движение.Стоимость);
		Вес = ?(Движение.Вес < 0., -Движение.Вес, Движение.Вес);
		Объем = ?(Движение.Объем < 0., -Движение.Объем, Движение.Объем);
		// непосредственно расчет базисов по налоговым назначениям
		Аналитики = УзелИндекса(УзлыДвижений, Ключи);
		Если Аналитики = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Для Каждого Значение Из АналитикиОбсчетаПартийПрочих(Движение, ПустыеСсылки) Цикл
			ИндексыСтрок = Аналитики[Значение];
			Если ИндексыСтрок = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Для Каждого ИндексСтроки Из ИндексыСтрок Цикл
				Приход = ДанныеДляРасчета[ИндексСтроки.Ключ];
				Если Приход.ПравилоРаспределения = ПропорциональноКоличеству Тогда
					Базис = Количество;
				ИначеЕсли Приход.ПравилоРаспределения = ПропорциональноВесу Тогда
					Базис = Вес;
				ИначеЕсли Приход.ПравилоРаспределения = ПропорциональноОбъему Тогда
					Базис = Объем;	
				Иначе
					Базис = Стоимость;
				КонецЕсли;
				Приход.Базис = Приход.Базис + Базис;
				// увеличим базу по налоговому назначению (Ключи[3])
				Налоги = ИндексСтроки.Значение;
				ОписаниеБазы = ?(Налоги[Ключи[3]] = Неопределено, Новый Структура("Базис", 0.), Налоги[Ключи[3]]);
				ОписаниеБазы.Базис = ОписаниеБазы.Базис + Базис;
				Налоги.Вставить(Ключи[3], ОписаниеБазы);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	// Шаг 2: создаем буфер накопления рассчитанных партий
	РасчетныеПартии = Новый ТаблицаЗначений;
	СкопироватьКолонки(ДанныеДляРасчета.Колонки, РасчетныеПартии.Колонки);
	// Шаг 3: Копируем дополнительные движения в расчетные партии
	Для Каждого Дополнение Из Дополнения Цикл
		Движение = ДанныеДляРасчета[Дополнение];
		РасчетнаяПартия = РасчетныеПартии.Добавить();
		ЗаполнитьРасчетнуюПартию("ПартииПрочихРасходов", РасчетнаяПартия, Движение, Неопределено);
	КонецЦикла;
	// Шаг 4: Создаем расчетные партии расходов по каждому накопленному налоговому назначению
	Для Каждого Организация Из УзлыДвижений Цикл
		Для Каждого Аналитика Из Организация.Значение Цикл
			Для Каждого ИндексСтроки Из Аналитика.Значение Цикл
				Движение = ДанныеДляРасчета[ИндексСтроки.Ключ];
				Если Движение.ТипЗаписи = "Партия" Тогда
					РасчетнаяПартия = РасчетныеПартии.Добавить();
					ЗаполнитьРасчетнуюПартию("ПартииПрочихРасходов", РасчетнаяПартия, Движение, Неопределено);
				КонецЕсли;
				Если Движение.Базис = 0. Тогда
					Продолжить;
				КонецЕсли;
				Для Каждого РаспределениеБазиса Из ИндексСтроки.Значение Цикл
					Если РаспределениеБазиса.Значение = Неопределено Тогда
						Продолжить;
					КонецЕсли;
					РасчетнаяПартия = РасчетныеПартии.Добавить();
					ЗаполнитьРасчетнуюПартию("ПартииПрочихРасходов", РасчетнаяПартия, Движение, РаспределениеБазиса);
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	// Шаг 4: Удаляем измененные записи ДанныеДляРасчета (партии, остатки, дополнения) - они теперь лишние
	МинимальныйИндекс = 1 - ДанныеДляРасчета.Количество();
	Для Индекс = МинимальныйИндекс По 0 Цикл
		Движение = ДанныеДляРасчета[-Индекс];
		Если Движение.ТипЗаписи = "Партия" Или Движение.ТипЗаписи = "Остаток" Или Движение.ТипЗаписи = "Дополнение" Тогда
			ДанныеДляРасчета.Удалить(-Индекс);
		КонецЕсли;
	КонецЦикла;
	// Шаг 5: Копируем расчитанные партии с указанием налогового назначения в ДанныеДляРасчета
	// эти движения понадобятся для формирования прихода в партии расходов на себестоимость
	Для Каждого РасчетнаяПартия Из РасчетныеПартии Цикл
		Если РасчетнаяПартия.ТипЗаписи = "Потребление" Тогда
			Движение = ДанныеДляРасчета.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, РасчетнаяПартия);
			Движение.ТипЗаписи = "Остаток";
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		КонецЕсли;
	КонецЦикла;
	// Шаг 6: Сортировка партий для дальнейшей записи
	РасчетныеПартии.Сортировать("Регистратор, ВидДвижения, Период", Новый СравнениеЗначений);
    
	Возврат РасчетныеПартии;
КонецФункции

Функция ТекстТаможенныеДекларацииИПоступления() // вт Декларации, КоличествоДеклараций
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументПоступления КАК Ссылка,
		|	Партии.ДокументПоступления КАК Поступление
		|ПОМЕСТИТЬ
		|	Декларации
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
		|		ПО Партии.Регистратор = ДД.ДокументПоступления
		|		И Партии.Организация = ДД.Организация
		|		И Партии.АналитикаУчетаНоменклатуры.Номенклатура = Аналитика.Номенклатура
		|		И Партии.АналитикаУчетаНоменклатуры.Характеристика = Аналитика.Характеристика
		|ГДЕ
		|	ДД.ДокументПоступления ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
		|	И Партии.Период < &НачалоПериода
		|	И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|ИНДЕКСИРОВАТЬ ПО
		|	Поступление
		|;
		|ВЫБРАТЬ
		|	ДД.Поступление,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.Ссылка) КАК Количество
		|ПОМЕСТИТЬ
		|	КоличествоДеклараций
		|ИЗ
		|	Декларации КАК ДД
		|СГРУППИРОВАТЬ ПО
		|	ДД.Поступление
		|ИНДЕКСИРОВАТЬ ПО
		|	Поступление
		|";
КонецФункции

Функция ТекстАналитикиРасходовВсе() // вт АналитикиРасходовВсе, использует Декларации
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Ключи.Организация,
		|	Ключи.СтатьяРасходов,
		|	Ключи.АналитикаРасходов
		|ПОМЕСТИТЬ
		|	АналитикиРасходовВсе
		|ИЗ (
		|	ВЫБРАТЬ
		|		ДД.Организация,
		|		ДД.СтатьяРасходов,
		|		ЕСТЬNULL(Декларации.Ссылка, ДД.АналитикаРасходов) КАК АналитикаРасходов
		|	ИЗ
		|		РегистрНакопления.ПартииПрочихРасходов.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) как ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|			ПО Статьи.Ссылка = ДД.СтатьяРасходов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Декларации КАК Декларации
		|			ПО Декларации.Поступление = ДД.АналитикаРасходов
		|	ГДЕ
		|		Статьи.ВариантРаспределенияРасходов =
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		ДД.Организация,
		|		ДД.СтатьяРасходов,
		|		(ВЫБОР
		|			КОГДА ДД.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
		|			 И ДД.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка)
		|				ТОГДА ЗНАЧЕНИЕ(Документ.ТаможеннаяДекларацияИмпорт.ПустаяСсылка)
		|			ИНАЧЕ ЕСТЬNULL(Декларации.Ссылка, ДД.АналитикаРасходов) КОНЕЦ) КАК АналитикаРасходов
		|	ИЗ
		|		РегистрНакопления.ПартииПрочихРасходов как ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|			ПО Статьи.Ссылка = ДД.СтатьяРасходов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Декларации КАК Декларации
		|			ПО Декларации.Поступление = ДД.АналитикаРасходов
		|	ГДЕ
		|		ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Организация В (&МассивОрганизаций)
		|		И ДД.Активность
		|		И ДД.Регистратор = ДД.ДокументПоступленияРасходов
		|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		И Статьи.ВариантРаспределенияРасходов =
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|) КАК Ключи
		|";
КонецФункции

Функция ТекстПрошлыеПеремещения() // вт ПрошлыеПеремещения
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Организация КАК Организация,
		|	ДД.АналитикаРасходов КАК Перемещение,
		|	Партии.Период,
		|	Партии.ДокументПоступления КАК ДокументПоступления,
		|	Партии.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
		|ПОМЕСТИТЬ
		|	ПрошлыеПеремещения
		|ИЗ
		|	РегистрНакопления.ПартииПрочихРасходов КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК Перемещение
		|		ПО Перемещение.Ссылка = ДД.АналитикаРасходов
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
		|		ПО Партии.Период = Перемещение.Дата
		|		И Партии.Регистратор = Перемещение.Ссылка
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И Перемещение.Дата < &НачалоПериода
		|	И Партии.ДокументПоступления <> ДД.Регистратор
		|	И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	ДокументПоступления,
		|	АналитикаУчетаНоменклатуры
		|";
КонецФункции

Функция ТекстРегистраторыПрочих() // вт РегистраторыПрочих
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Ключи.Регистратор
		|ПОМЕСТИТЬ
		|	РегистраторыПрочих
		|ИЗ (
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.ДокументПоступленияРасходов КАК Регистратор
		|	ИЗ
		|		РегистрНакопления.ПартииПрочихРасходов.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|			ПО Статьи.Ссылка = ДД.СтатьяРасходов
		|	ГДЕ
		|		ДД.СтоимостьОстаток > 0.
		|		И Статьи.ВариантРаспределенияРасходов =
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		ДД.Регистратор КАК Регистратор
		|	ИЗ
		|		РегистрНакопления.ПартииПрочихРасходов как ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|			ПО Статьи.Ссылка = ДД.СтатьяРасходов
		|	ГДЕ
		|		ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Организация В (&МассивОрганизаций)
		|		И ДД.Активность
		|		И ДД.Регистратор = ДД.ДокументПоступленияРасходов
		|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		И Статьи.ВариантРаспределенияРасходов =
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|) КАК Ключи
		|";
КонецФункции
	
Функция ТекстОстаткиПартийСборок() // вт ОстаткиЗатратПоСборкам, ОстаткиПартийСборок
	
	Возврат "
		|ВЫБРАТЬ
		|	ДД.ДокументВыпуска
		|ПОМЕСТИТЬ
		|	ОстаткиЗатратПоСборкам
		|ИЗ
		|	РегистрНакопления.ПартииЗатратНаВыпуск.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументВыпуска
		|;
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.КоличествоОстаток КАК Количество
		|ПОМЕСТИТЬ
		|	ОстаткиПартийСборок
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)
		|		И ДокументПоступления В (
		|			ВЫБРАТЬ
		|				Затраты.ДокументВыпуска
		|			ИЗ
		|				ОстаткиЗатратПоСборкам КАК Затраты
		|		)
		|) КАК ДД
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	АналитикаУчетаНоменклатуры,
		|	ДокументПоступления
		|";
КонецФункции

Функция ТекстПриходыПартийСборок() // вт ПриходыПартийСборок
	
	Возврат "
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	СУММА(ДД.Количество) КАК Количество
		|ПОМЕСТИТЬ
		|	ПриходыПартийСборок
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.Активность
		|	И ДД.ДокументПоступления ССЫЛКА Документ.СборкаТоваров
		|	И (ДД.Регистратор ССЫЛКА Документ.СборкаТоваров
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ПеремещениеТоваров)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	АналитикаУчетаНоменклатуры,
		|	ДокументПоступления
		|";
КонецФункции

Функция ТекстОстаткиСебестоимости() // вт ОстаткиСебестоимости
	Возврат "
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры
		|ПОМЕСТИТЬ
		|	ОстаткиСебестоимости
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|ГДЕ
		|	ДД.КоличествоОстаток > 0
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	АналитикаУчетаНоменклатуры
		|";
КонецФункции

Функция ТекстЗаказыИзАналитикРасходов() // вт ЗаказыИзАналитикРасходов, использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДатаПоступления,
		|	ДД.Поступление,
		|	ДД.Заказ,
		|	ДД.Организация,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.Склад,
		|	ДД.Количество
		|ПОМЕСТИТЬ
		|	ЗаказыИзАналитикРасходов
		|ИЗ (
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.Период КАК ДатаПоступления,
		|		ДД.Регистратор КАК Поступление,
		|		ДД.ЗаказПоставщику КАК Заказ,
		|		КлючиРасходов.Организация,
		|		ДД.Номенклатура,
		|		ДД.Характеристика,
		|		ДД.Склад,
		|		ДД.КОформлению КАК Количество
		|	ИЗ
		|		РегистрНакопления.ЗаказыПоставщикам КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиРасходовВсе КАК КлючиРасходов
		|			ПО КлючиРасходов.АналитикаРасходов = ДД.ЗаказПоставщику
		|	ГДЕ
		|		ДД.Период <= &ОкончаниеПериода
		|		И ДД.Активность
		|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.Период КАК ДатаПоступления,
		|		ДД.Регистратор КАК Поступление,
		|		ДД.ЗаказПоставщику КАК Заказ,
		|		КлючиРасходов.Организация,
		|		ДД.Номенклатура,
		|		ДД.Характеристика,
		|		ДД.Склад,
		|		ДД.КОформлению КАК Количество
		|	ИЗ
		|		РегистрНакопления.ЗаказыПоставщикам КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику КАК Заказ
		|			ПО Заказ.Ссылка = ДД.ЗаказПоставщику
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиРасходовВсе КАК КлючиРасходов
		|			ПО КлючиРасходов.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
		|			И КлючиРасходов.Организация = Заказ.Организация
		|	ГДЕ
		|		ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Активность
		|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|
		// Расходы по заказам на перемещение
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.Период КАК ДатаПоступления,
		|		ДД.Регистратор КАК Поступление,
		|		ДД.ЗаказНаПеремещение КАК Заказ,
		|		КлючиРасходов.Организация,
		|		ДД.Номенклатура,
		|		ДД.Характеристика,
		|		Заказ.СкладПолучатель КАК Склад,
		|		ДД.КОформлению КАК Количество
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаПеремещение КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПеремещение КАК Заказ
		|			ПО Заказ.Ссылка = ДД.ЗаказНаПеремещение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиРасходовВсе КАК КлючиРасходов
		|			ПО КлючиРасходов.АналитикаРасходов = ДД.ЗаказНаПеремещение
		|	ГДЕ
		|		ДД.Период <= &ОкончаниеПериода
		|		И ДД.Активность
		|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.Период КАК ДатаПоступления,
		|		ДД.Регистратор КАК Поступление,
		|		ДД.ЗаказНаПеремещение КАК Заказ,
		|		КлючиРасходов.Организация,
		|		ДД.Номенклатура,
		|		ДД.Характеристика,
		|		Заказ.СкладПолучатель КАК Склад,
		|		ДД.КОформлению КАК Количество
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаПеремещение КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПеремещение КАК Заказ
		|			ПО Заказ.Ссылка = ДД.ЗаказНаПеремещение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиРасходовВсе КАК КлючиРасходов
		|			ПО КлючиРасходов.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ЗаказНаПеремещение.ПустаяСсылка)
		|			И КлючиРасходов.Организация = Заказ.Организация
		|	ГДЕ
		|		ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Активность
		|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|
		// Расходы по заказам на сборку
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.Период КАК ДатаПоступления,
		|		ДД.Регистратор КАК Поступление,
		|		ДД.ЗаказНаСборку КАК Заказ,
		|		КлючиРасходов.Организация,
		|		ДД.Номенклатура,
		|		ДД.Характеристика,
		|		Заказ.Склад КАК Склад,
		|		ДД.КОформлению КАК Количество
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаСборку КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку КАК Заказ
		|			ПО Заказ.Ссылка = ДД.ЗаказНаСборку
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиРасходовВсе КАК КлючиРасходов
		|			ПО КлючиРасходов.АналитикаРасходов = ДД.ЗаказНаСборку
		|	ГДЕ
		|		ДД.Период <= &ОкончаниеПериода
		|		И ДД.Активность
		|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И ДД.ТипСборки = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Поступление)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.Период КАК ДатаПоступления,
		|		ДД.Регистратор КАК Поступление,
		|		ДД.ЗаказНаСборку КАК Заказ,
		|		КлючиРасходов.Организация,
		|		ДД.Номенклатура,
		|		ДД.Характеристика,
		|		Заказ.Склад КАК Склад,
		|		ДД.КОформлению КАК Количество
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаСборку КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку КАК Заказ
		|			ПО Заказ.Ссылка = ДД.ЗаказНаСборку
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиРасходовВсе КАК КлючиРасходов
		|			ПО КлючиРасходов.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ЗаказНаСборку.ПустаяСсылка)
		|			И КлючиРасходов.Организация = Заказ.Организация
		|	ГДЕ
		|		ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И ДД.Активность
		|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И ДД.ТипСборки = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Поступление)
		|) КАК ДД
		|";
КонецФункции

Функция ТекстПоступившиеЗаказы() // использует ЗаказыИзАналитикРасходов
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Остаток"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.ДатаПоступления КАК Период,
		|	ДД.Поступление КАК Регистратор,
		|	ДД.Поступление КАК ДокументПоступления,
		|	ДД.Заказ,
		|	ДД.Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	ДД.Склад,
		|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	ДД.Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение 
		|ИЗ
		|	ЗаказыИзАналитикРасходов КАК ДД
		|";
КонецФункции

Функция ТекстОстаткиПоступленийПоЗаказам() // использует ЗаказыИзАналитикРасходов
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	Заказы.ДатаПоступления КАК Период,
		|	ДД.ДокументПоступления КАК Регистратор,
		|	ДД.ДокументПоступления КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК Заказ,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	АналитикиТоваров.Номенклатура,
		|	АналитикиТоваров.Характеристика,
		|	АналитикиТоваров.Склад,
		|	АналитикиТоваров.Серия,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.КоличествоОстаток КАК Количество,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ДД.НДСРеглОстаток КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	АналитикиПартий.НалоговоеНазначение 
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикиПартий
		|		ПО АналитикиПартий.КлючАналитики = ДД.АналитикаУчетаПартий
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			Заказы.ДатаПоступления, Заказы.Поступление,
		|			Заказы.Номенклатура, Заказы.Характеристика, Заказы.Склад
		|		ИЗ
		|			ЗаказыИзАналитикРасходов КАК Заказы
		|		ГДЕ
		|			Заказы.ДатаПоступления < &НачалоПериода
		|	) КАК Заказы 
		|		ПО Заказы.Поступление = ДД.ДокументПоступления
		|		И Заказы.Номенклатура = АналитикиТоваров.Номенклатура
		|		И Заказы.Характеристика = АналитикиТоваров.Характеристика
		|		И Заказы.Склад = АналитикиТоваров.Склад
		|ГДЕ
		|	ДД.КоличествоОстаток > 0.
		|	И ВидыЗапасов.ТипЗапасов В (&СобственныеТипыЗапасов)
		|";
КонецФункции

Функция ТекстПриходыПоступленийПоЗаказам() // использует ЗаказыИзАналитикРасходов
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	Заказы.ДатаПоступления КАК Период,
		|	ДД.Регистратор КАК Регистратор,
		|	ДД.ДокументПоступления КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК Заказ,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	АналитикиТоваров.Номенклатура,
		|	АналитикиТоваров.Характеристика,
		|	АналитикиТоваров.Склад,
		|	АналитикиТоваров.Серия,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.Количество,
		|	ДД.Стоимость,
		|	ДД.СтоимостьБезНДС,
		|	ДД.СтоимостьРегл,
		|	ДД.НДСРегл,
		|	ДД.ПостояннаяРазница,
		|	ДД.ВременнаяРазница,
		|	АналитикиПартий.НалоговоеНазначение 
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикиПартий
		|		ПО АналитикиПартий.КлючАналитики = ДД.АналитикаУчетаПартий
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			Заказы.ДатаПоступления, Заказы.Поступление,
		|			Заказы.Номенклатура, Заказы.Характеристика, Заказы.Склад
		|		ИЗ
		|			ЗаказыИзАналитикРасходов КАК Заказы
		|		ГДЕ
		|			Заказы.ДатаПоступления < &ОкончаниеПериода
		|	) КАК Заказы 
		|		ПО Заказы.Поступление = ДД.Регистратор
		|		И Заказы.Номенклатура = АналитикиТоваров.Номенклатура
		|		И Заказы.Характеристика = АналитикиТоваров.Характеристика
		|		И Заказы.Склад = АналитикиТоваров.Склад
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ВидыЗапасов.ТипЗапасов В (&СобственныеТипыЗапасов)
		|";
КонецФункции

Функция ТекстПриходыРаботПоЗаказам() // использует ЗаказыИзАналитикРасходов
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	Заказы.ДатаПоступления КАК Период,
		|	ДД.Регистратор КАК Регистратор,
		|	ДД.ДокументПоступления КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК Заказ,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	АналитикиТоваров.Номенклатура,
		|	АналитикиТоваров.Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
		|	АналитикиТоваров.Серия,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.Количество,
		|	ДД.Стоимость,
		|	ДД.СтоимостьБезНДС,
		|	ДД.СтоимостьРегл,
		|	ДД.НДСРегл,
		|	ДД.ПостояннаяРазница,
		|	ДД.ВременнаяРазница,
		|	АналитикиПартий.НалоговоеНазначение 
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Работы
		|		ПО Работы.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикиПартий
		|		ПО АналитикиПартий.КлючАналитики = ДД.АналитикаУчетаПартий
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			Заказы.ДатаПоступления, Заказы.Поступление,
		|			Заказы.Номенклатура, Заказы.Характеристика
		|		ИЗ
		|			ЗаказыИзАналитикРасходов КАК Заказы
		|		ГДЕ
		|			Заказы.ДатаПоступления < &ОкончаниеПериода
		|	) КАК Заказы 
		|		ПО Заказы.Поступление = ДД.Регистратор
		|		И Заказы.Номенклатура = АналитикиТоваров.Номенклатура
		|		И Заказы.Характеристика = АналитикиТоваров.Характеристика
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И Работы.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|	И ВидыЗапасов.ТипЗапасов В (&СобственныеТипыЗапасов)
		|";
КонецФункции

Функция ТекстПартииПоЗаказам() // вт ПартииПоЗаказам, использует &РасчетныеПартииПоЗаказам
	Возврат "
		|ВЫБРАТЬ
		|	ДД.Приоритет,
		|	ДД.ТипЗаписи,
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Заказ,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.Регистратор,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.Количество,
		|	ДД.Стоимость,
		|	ДД.СтоимостьБезНДС,
		|	ДД.СтоимостьРегл,
		|	ДД.НДСРегл,
		|	ДД.ПостояннаяРазница,
		|	ДД.ВременнаяРазница,
		|	ДД.НалоговоеНазначение 
		|ПОМЕСТИТЬ
		|	ПартииПоЗаказам
		|ИЗ
		|	&РасчетныеПартииПоЗаказам КАК ДД
		|";
КонецФункции

Функция ТекстОписаниеПартийПрочих()
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	0 КАК Приоритет,
		|	""ХХХХХХХХХХХХХХХХ"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
		|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	0. КАК Количество,
		|	0. КАК Вес,
		|	0. КАК Объем,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК РасчетныйПериод
		|";
КонецФункции

Функция ТекстОстаткиПартийПрочих() // использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Остаток"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	Периоды.Период,
		|	ДД.ДокументПоступленияРасходов КАК Регистратор,
		|	ДД.Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО КАК Склад,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов,
		|	ДД.Подразделение,
		|	ДД.АналитикаРасходов,
		|	ДД.АналитикаРасходов КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	0. КАК Количество,
		|	0. КАК Вес,
		|	0. КАК Объем,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ДД.НДСРеглОстаток КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	Статьи.ПравилоРаспределенияНаСебестоимость КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	&НачалоПериода КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.ПартииПрочихРасходов.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|		ПО Статьи.Ссылка = ДД.СтатьяРасходов
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
		|		ВЫБРАТЬ
		|			ДД.Регистратор КАК ДокументПоступленияРасходов,
		|			ДД.Организация,
		|			ДД.СтатьяРасходов,
		|			ДД.АналитикаРасходов,
		|			МАКСИМУМ(ДД.Период) КАК Период
		|		ИЗ
		|			РегистрНакопления.ПартииПрочихРасходов КАК ДД
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиРасходовВсе КАК КлючиРасходов
		|				ПО КлючиРасходов.Организация = ДД.Организация
		|				И КлючиРасходов.СтатьяРасходов = ДД.СтатьяРасходов
		|				И КлючиРасходов.АналитикаРасходов = ДД.АналитикаРасходов
		|		ГДЕ
		|			ДД.Период < &НачалоПериода
		|			И ДД.Организация В (&МассивОрганизаций)
		|			И ДД.Активность
		|			И ДД.Регистратор = ДД.ДокументПоступленияРасходов
		|			И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		СГРУППИРОВАТЬ ПО
		|			ДД.Регистратор,
		|			ДД.Организация,
		|			ДД.СтатьяРасходов,
		|			ДД.АналитикаРасходов
		|	) КАК Периоды
		|		ПО Периоды.ДокументПоступленияРасходов = ДД.ДокументПоступленияРасходов
		|		И Периоды.Организация = ДД.Организация
		|		И Периоды.СтатьяРасходов = ДД.СтатьяРасходов
		|		И Периоды.АналитикаРасходов = ДД.АналитикаРасходов
		|ГДЕ
		|	Статьи.ВариантРаспределенияРасходов =
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|";
КонецФункции

Функция ТекстПриходыПартийПрочих() // использует Декларации
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Партия"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО КАК Склад,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов,
		|	ДД.Подразделение,
		|	ДД.АналитикаРасходов,
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
		|		 И ДД.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Документ.ТаможеннаяДекларацияИмпорт.ПустаяСсылка)
		|		ИНАЧЕ ЕСТЬNULL(Декларации.Ссылка, ДД.АналитикаРасходов) КОНЕЦ) КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	0. КАК Количество,
		|	0. КАК Вес,
		|	0. КАК Объем,
		|	СУММА(ДД.Стоимость / ЕСТЬNULL(Знаменатели.Количество, 1)) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС / ЕСТЬNULL(Знаменатели.Количество, 1)) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл / ЕСТЬNULL(Знаменатели.Количество, 1)) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл / ЕСТЬNULL(Знаменатели.Количество, 1)) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница / ЕСТЬNULL(Знаменатели.Количество, 1)) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница / ЕСТЬNULL(Знаменатели.Количество, 1)) КАК ВременнаяРазница,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	ДД.ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ДД.СтатьяОтраженияРасходов,
		|	Статьи.ПравилоРаспределенияНаСебестоимость КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.ПартииПрочихРасходов КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|		ПО Статьи.Ссылка = ДД.СтатьяРасходов
		|	ЛЕВОЕ СОЕДИНЕНИЕ Декларации КАК Декларации
		|		ПО Декларации.Поступление = ДД.АналитикаРасходов
		|	ЛЕВОЕ СОЕДИНЕНИЕ КоличествоДеклараций КАК Знаменатели
		|		ПО Знаменатели.Поступление = ДД.АналитикаРасходов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Регистратор = ДД.ДокументПоступленияРасходов
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И Статьи.ВариантРаспределенияРасходов =
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов,
		|	ДД.Подразделение,
		|	ДД.АналитикаРасходов,
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
		|		 И ДД.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Документ.ТаможеннаяДекларацияИмпорт.ПустаяСсылка)
		|		ИНАЧЕ ЕСТЬNULL(Декларации.Ссылка, ДД.АналитикаРасходов) КОНЕЦ),
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение,
		|	ДД.НалоговоеНазначение,
		|	ДД.ДокументРеализации,
		|	ДД.СтатьяОтраженияРасходов,
		|	Статьи.ПравилоРаспределенияНаСебестоимость
		|";
КонецФункции

Функция ТекстДополненияПартийПрочих() // использует РегистраторыПрочих
	Возврат "
		|ВЫБРАТЬ
		|	99 КАК Приоритет,
		|	""Дополнение"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО КАК Склад,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов,
		|	ДД.Подразделение,
		|	ДД.АналитикаРасходов,
		|	ДД.АналитикаРасходов КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	0. КАК Количество,
		|	0. КАК Вес,
		|	0. КАК Объем,
		|	ДД.Стоимость,
		|	ДД.СтоимостьБезНДС,
		|	ДД.СтоимостьРегл,
		|	ДД.НДСРегл,
		|	ДД.ПостояннаяРазница,
		|	ДД.ВременнаяРазница,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	ДД.ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ДД.СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.ПартииПрочихРасходов КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистраторыПрочих КАК Регистраторы
		|		ПО Регистраторы.Регистратор = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|		ПО Статьи.Ссылка = ДД.СтатьяРасходов
		|ГДЕ
		|	НЕ (ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода)
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	ИЛИ Статьи.ВариантРаспределенияРасходов <>
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|	ИЛИ Статьи.Ссылка ЕСТЬ NULL
		|";
КонецФункции

Функция ТекстБазисОстатки() // использует АналитикиРасходовВсе, ОстаткиСебестоимости
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	&НачалоПериода КАК Период,
		|	ДД.ДокументПоступления КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	ДД.КоличествоОстаток КАК Количество,
		|	ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.КоличествоОстаток КАК Вес,
		|	ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.КоличествоОстаток КАК Объем,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ДД.НДСРеглОстаток КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	АналитикиПартий.НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	&НачалоПериода КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикиПартий
		|		ПО АналитикиПартий.КлючАналитики = ДД.АналитикаУчетаПартий
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиСебестоимости КАК Остатки
		|		ПО Остатки.Организация = ДД.Организация
		|		И Остатки.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.СтоимостьОстаток > 0.
		|	И (ДД.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.ДокументПоступления) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.ДокументПоступления
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				АналитикиТоваров.Номенклатура,
		|				ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
		|				АналитикиТоваров.Склад,
		|				ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
		|				ДД.ДокументПоступления)
		|	)
		|	И ВидыЗапасов.ТипЗапасов В (&СобственныеТипыЗапасов)
		|";
КонецФункции

Функция ТекстБазисОстаткиСборок() // использует ОстаткиПартийСборок, АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	&НачалоПериода КАК Период,
		|	ДД.ДокументВыпуска КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции КАК АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	ДД.ДокументВыпуска КАК ДокументПоступления,
		|	Партии.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	Партии.Количество,
		|	ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * Партии.Количество КАК Вес,
		|	ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * Партии.Количество КАК Объем,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ДД.НДСРеглОстаток КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	АналитикиПартий.НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	&НачалоПериода КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.ПартииЗатратНаВыпуск.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиПартийСборок КАК Партии
		|		ПО Партии.Организация = ДД.Организация
		|		И Партии.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаПродукции
		|		И Партии.ДокументПоступления = ДД.ДокументВыпуска
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаПродукции
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикиПартий
		|		ПО АналитикиПартий.КлючАналитики = ДД.АналитикаУчетаПартий
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|ГДЕ
		|	(ДД.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.ДокументПоступления) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.ДокументПоступления
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				АналитикиТоваров.Номенклатура,
		|				ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
		|				АналитикиТоваров.Склад,
		|				ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
		|				ДД.ДокументПоступления)
		|	)
		|	И ВидыЗапасов.ТипЗапасов В (&СобственныеТипыЗапасов)
		|";
КонецФункции

Функция ТекстБазисПриходы() // использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.Количество) КАК Вес,
		|	СУММА(ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.Количество) КАК Объем,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	АналитикиПартий.НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|		ПО АналитикиТоваров.Склад = Склады.Ссылка
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикиПартий
		|		ПО АналитикиПартий.КлючАналитики = ДД.АналитикаУчетаПартий
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
		|		ПО СпрВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК Перемещения
		|		ПО Перемещения.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Перемещения.Ссылка = ДД.Регистратор
		|		И Перемещения.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаТоваров)
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями КАК Возвраты
		|		ПО Возвраты.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Возвраты.Ссылка = ДД.Регистратор
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И (ДД.Регистратор = ДД.ДокументПоступления ИЛИ Не Перемещения.Ссылка ЕСТЬ NULL)
		|	И Возвраты.Ссылка ЕСТЬ NULL
		|	И НЕ ДД.Регистратор Ссылка Документ.СборкаТоваров
		|	И (ДД.Первичное ИЛИ
		|		ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		И (ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИП(Документ.ПередачаТоваровМеждуОрганизациями)
		|			ИЛИ ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИП(Документ.ТаможеннаяДекларацияИмпорт)
		|			ИЛИ Не Перемещения.Ссылка ЕСТЬ NULL)
		|	)
		|	И (ДД.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				АналитикиТоваров.Номенклатура,
		|				ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
		|				АналитикиТоваров.Склад,
		|				ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
		|				ДД.ДокументПоступления)
		|			ИЛИ
		|			ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИПЗНАЧЕНИЯ(КлючиРасходов.АналитикаРасходов)
		|			И КлючиРасходов.АналитикаРасходов В (
		|				ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка),
		|				ЗНАЧЕНИЕ(Документ.ТаможеннаяДекларацияИмпорт.ПустаяСсылка),
		|				ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка))
		|	)
		|	И СпрВидыЗапасов.ТипЗапасов В (&СобственныеТипыЗапасов)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка,
		|	АналитикиТоваров.Склад,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	АналитикиПартий.НалоговоеНазначение 
		|";
КонецФункции

Функция ТекстБазисКорректировкиПоступлений() // использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	Поступление.Дата КАК Период,
		|	ДД.ДокументПоступления КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.Количество) КАК Вес,
		|	СУММА(ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.Количество) КАК Объем,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	АналитикиПартий.НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	Поступление.Дата КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|		ПО АналитикиТоваров.Склад = Склады.Ссылка
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикиПартий
		|		ПО АналитикиПартий.КлючАналитики = ДД.АналитикаУчетаПартий
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
		|		ПО СпрВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК Поступление
		|		ПО Поступление.Ссылка = ДД.ДокументПоступления
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Регистратор Ссылка Документ.КорректировкаПоступления
		|	И ДД.Количество < 0
		|	И ДД.Первичное
		|	И (ДД.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.ДокументПоступления) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.ДокументПоступления
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				АналитикиТоваров.Номенклатура,
		|				ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
		|				АналитикиТоваров.Склад,
		|				ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
		|				ДД.ДокументПоступления)
		|			ИЛИ
		|			ТИПЗНАЧЕНИЯ(ДД.ДокументПоступления) = ТИПЗНАЧЕНИЯ(КлючиРасходов.АналитикаРасходов)
		|			И КлючиРасходов.АналитикаРасходов В (
		|				ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка),
		|				ЗНАЧЕНИЕ(Документ.ТаможеннаяДекларацияИмпорт.ПустаяСсылка),
		|				ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка))
		|	)
		|	И СпрВидыЗапасов.ТипЗапасов В (&СобственныеТипыЗапасов)
		|
		|СГРУППИРОВАТЬ ПО
		|	Поступление.Дата,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка,
		|	АналитикиТоваров.Склад,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	АналитикиПартий.НалоговоеНазначение
		|";
КонецФункции

Функция ТекстБазисПриходыСборок() // использует ПриходыПартийСборок, АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции КАК АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	ДД.ДокументВыпуска КАК ДокументПоступления,
		|	Партии.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	Партии.Количество,
		|	ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * Партии.Количество КАК Вес,
		|	ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * Партии.Количество КАК Объем,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	АналитикиПартий.НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.ПартииЗатратНаВыпуск КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПриходыПартийСборок КАК Партии
		|		ПО Партии.Организация = ДД.Организация
		|		И Партии.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаПродукции
		|		И Партии.ДокументПоступления = ДД.ДокументВыпуска
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаПродукции
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|		ПО АналитикиТоваров.Склад = Склады.Ссылка
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикиПартий
		|		ПО АналитикиПартий.КлючАналитики = ДД.АналитикаУчетаПартий
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
		|		ПО СпрВидыЗапасов.Ссылка = Партии.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Регистратор = ДД.ДокументВыпуска
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И (ДД.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				АналитикиТоваров.Номенклатура,
		|				ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
		|				АналитикиТоваров.Склад,
		|				ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
		|				ДД.ДокументВыпуска)
		|			ИЛИ
		|			ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИПЗНАЧЕНИЯ(КлючиРасходов.АналитикаРасходов)
		|			И КлючиРасходов.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.СборкаТоваров.ПустаяСсылка)
		|	)
		|	И СпрВидыЗапасов.ТипЗапасов В (&СобственныеТипыЗапасов)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции,
		|	СпрНоменклатура.Ссылка,
		|	АналитикиТоваров.Склад,
		|	ДД.ДокументВыпуска,
		|	Партии.ВидЗапасов,
		|	Партии.Количество,
		|	ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * Партии.Количество,
		|	ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * Партии.Количество,
		|	АналитикиПартий.НалоговоеНазначение 
		|";
КонецФункции

Функция ТекстБазисРаботы() // использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.Количество) КАК Вес,
		|	СУММА(ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.Количество) КАК Объем,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	АналитикиПартий.НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Работы
		|		ПО Работы.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикиПартий
		|		ПО АналитикиПартий.КлючАналитики = ДД.АналитикаУчетаПартий
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И Работы.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|	И ДД.Регистратор = ДД.ДокументПоступления
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И (ДД.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				АналитикиТоваров.Номенклатура,
		|				ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
		|				АналитикиТоваров.Склад,
		|				ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
		|				ДД.ДокументПоступления)
		|			ИЛИ
		|			ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИПЗНАЧЕНИЯ(КлючиРасходов.АналитикаРасходов)
		|			И КлючиРасходов.АналитикаРасходов В (
		|				ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка),
		|				ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка))
		|	)
		|	И ВидыЗапасов.ТипЗапасов В (&СобственныеТипыЗапасов)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка,
		|	АналитикиТоваров.Склад,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	АналитикиПартий.НалоговоеНазначение 
		|";
КонецФункции

Функция ТекстБазисПеремещения() // использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО КАК Склад,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ДД.Регистратор КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	ДД.Количество,
		|	ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.Количество КАК Вес,
		|	ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.Количество КАК Объем,
		|	ДД.Стоимость,
		|	ДД.СтоимостьБезНДС,
		|	ДД.СтоимостьРегл,
		|	ДД.НДСРегл,
		|	ДД.ПостояннаяРазница,
		|	ДД.ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	АналитикиПартий.НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикиПартий
		|		ПО АналитикиПартий.КлючАналитики = ДД.АналитикаУчетаПартий
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИП(Документ.ПеремещениеТоваров)
		|	И НЕ ДД.ДокументПоступления Ссылка Документ.СборкаТоваров
		|	И (ДД.Организация, ДД.Регистратор) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				ДД.Регистратор,
		|				ЗНАЧЕНИЕ(Документ.ПеремещениеТоваров.ПустаяСсылка))
		|	)
		|	И ВидыЗапасов.ТипЗапасов В (&СобственныеТипыЗапасов)
		|";
КонецФункции

Функция ТекстБазисПеремещенияСборок() // использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции КАК АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО КАК Склад,
		|	ДД.ДокументВыпуска КАК ДокументПоступления,
		|	Партии.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ДД.Регистратор КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	Партии.Количество,
		|	ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * Партии.Количество КАК Вес,
		|	ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * Партии.Количество КАК Объем,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	АналитикиПартий.НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.ПартииЗатратНаВыпуск КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПриходыПартийСборок КАК Партии
		|		ПО Партии.Организация = ДД.Организация
		|		И Партии.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаПродукции
		|		И Партии.ДокументПоступления = ДД.ДокументВыпуска
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаПродукции
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикиПартий
		|		ПО АналитикиПартий.КлючАналитики = ДД.АналитикаУчетаПартий
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИП(Документ.ПеремещениеТоваров)
		|	И (ДД.Организация, ДД.Регистратор) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				ДД.Регистратор,
		|				ЗНАЧЕНИЕ(Документ.ПеремещениеТоваров.ПустаяСсылка))
		|	)
		|	И ВидыЗапасов.ТипЗапасов В (&СобственныеТипыЗапасов)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаПродукции,
		|	СпрНоменклатура.Ссылка,
		|	ДД.ДокументВыпуска,
		|	Партии.ВидЗапасов,
		|	Партии.Количество,
		|	ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * Партии.Количество,
		|	ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * Партии.Количество,
		|	АналитикиПартий.НалоговоеНазначение
		|";
КонецФункции

Функция ТекстБазисПрошлыеПеремещения() // использует ПрошлыеПеремещения
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ПрошлыеПеремещения.Период,
		|	ПрошлыеПеремещения.Перемещение КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО КАК Склад,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ПрошлыеПеремещения.Перемещение КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	ДД.КоличествоОстаток КАК Количество,
		|	ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.КоличествоОстаток КАК Вес,
		|	ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.КоличествоОстаток КАК Объем,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ДД.НДСРеглОстаток КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	АналитикиПартий.НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	ДД.ДокументПоступления КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	&НачалоПериода КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрошлыеПеремещения КАК ПрошлыеПеремещения
		|		ПО ПрошлыеПеремещения.Организация = ДД.Организация
		|		И ПрошлыеПеремещения.ДокументПоступления = ДД.ДокументПоступления
		|		И ПрошлыеПеремещения.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикиПартий
		|		ПО АналитикиПартий.КлючАналитики = ДД.АналитикаУчетаПартий
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|ГДЕ
		|	ВидыЗапасов.ТипЗапасов В (&СобственныеТипыЗапасов)
		|";
КонецФункции

Функция ТекстБазисЗаказы() // использует ПартииПоЗаказам, ЗаказыИзАналитикРасходов
	Возврат "
		|ВЫБРАТЬ
		|	ДД.Приоритет,
		|	ДД.ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Заказ КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО КАК Склад,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.Количество) КАК Вес,
		|	СУММА(ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.Количество) КАК Объем,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	(ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ДД.Заказ) = ТИП(Документ.ЗаказНаПеремещение) ТОГДА ДД.Регистратор
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
		|	(ВЫБОР КОГДА ДД.Период < &НачалоПериода ТОГДА &НачалоПериода ИНАЧЕ ДД.Период КОНЕЦ) КАК РасчетныйПериод
		|ИЗ
		|	ПартииПоЗаказам КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			Заказы.Поступление,
		|			Заказы.Заказ
		|		ИЗ
		|			ЗаказыИзАналитикРасходов КАК Заказы
		|	) КАК Заказы
		|		ПО Заказы.Поступление = ДД.Регистратор
		|		И Заказы.Заказ = ДД.Заказ
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|ГДЕ
		|	ЕСТЬNULL(ВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)) В (&СобственныеТипыЗапасов)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.Приоритет,
		|	ДД.ТипЗаписи,
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Заказ,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.НалоговоеНазначение,
		|	(ВЫБОР КОГДА ДД.Период < &НачалоПериода ТОГДА &НачалоПериода ИНАЧЕ ДД.Период КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ДД.Заказ) = ТИП(Документ.ЗаказНаПеремещение) ТОГДА ДД.Регистратор
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ)
		|";
КонецФункции

Функция СобственныеТипыЗапасов()
	СобственныеТипыЗапасов = Новый Массив;
	СобственныеТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.Товар);
	СобственныеТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.Материал);
	СобственныеТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.Услуга);
	Возврат СобственныеТипыЗапасов;
КонецФункции

#КонецОбласти


#Область РасчетПриходыРасходовСебестоимость

Функция ДанныеДляПартийПрочихСебестоимость(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	МВТ = Новый МенеджерВременныхТаблиц;
	// распределяем только по собственным запасам, исключаем комиссионные и давальческие запасы
	СобственныеТипыЗапасов = СобственныеТипыЗапасов();
	
	// Определяем базу распределения прочих расходов на заказы поставщикам и заказы перемещений,
	// т.е. распределяем выполненные строки заказов на поступления партий - указываем заказ в партии.
	ТекстСортировкаЗаказов = "
		|УПОРЯДОЧИТЬ ПО
		|	Регистратор, Номенклатура, Характеристика, Склад, Приоритет
		|";
	ТекстРасчетаЗаказов = 
		ТекстТаможенныеДекларацииИПоступления() + ";" + // вт Декларации
		ТекстАналитикиРасходовВсе() + ";" + // вт АналитикиРасходовВсе
		ТекстЗаказыИзАналитикРасходов() +
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстЗаказыНаПеремещенияИзАналитикРасходов() + ";" + // вт ЗаказыИзАналитикРасходов, использует АналитикиРасходовВсе
		ТекстПоступившиеЗаказы() + // использует ЗаказыИзАналитикРасходов
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстПриходыПоступленийПоЗаказамСебестоимости() + // использует ЗаказыИзАналитикРасходов
		ТекстСортировкаЗаказов;
	ЗапросРасчетаЗаказов = Новый Запрос(ТекстРасчетаЗаказов);
	ЗапросРасчетаЗаказов.МенеджерВременныхТаблиц = МВТ;
	ЗапросРасчетаЗаказов.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ЗапросРасчетаЗаказов.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	ЗапросРасчетаЗаказов.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	
	ДанныеРасчетаЗаказов = ЗапросРасчетаЗаказов.Выполнить().Выгрузить();
	РасчетныеПартииПоЗаказам = Новый ТаблицаЗначений;
	ПоляРасчетаЗаказов = СкопироватьКолонки(ДанныеРасчетаЗаказов.Колонки, РасчетныеПартииПоЗаказам.Колонки);
	КонтекстДвижений = ОписаниеДвижений(
		"ЗаказыПоставщикам", "",
		ПоляРасчетаЗаказов,
		"Номенклатура, Регистратор, Характеристика, Склад", "Количество, Стоимость",
		"Количество", "Количество", "Заказ", "Период");
	РаспределитьПриходыНаРасходы(КонтекстДвижений, ДанныеРасчетаЗаказов, РасчетныеПартииПоЗаказам);
	
	// Получаем данные для расчета списания партий прочих расходов и прихода партий расходов на с/с товаров
	ТекстСортировка = "
		|УПОРЯДОЧИТЬ ПО
		|	Организация, Приоритет, ВидДвижения, Период, Регистратор";
	ИсходныйТекстЗапроса =
		ТекстПартииПоЗаказам() + ";" + // вт ПартииПоЗаказам, использует &РасчетныеПартииПоЗаказам
		ТекстРегистраторыПрочих() + ";" + // вт РегистраторыПрочих
		ТекстОписаниеПартийПрочих() +
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПартийПрочих() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстПриходыПартийПрочих() +
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстДополненияПартийПрочих() + // использует РегистраторыПрочих
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисОстаткиСебестоимость() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисПриходыТоваровСебестоимость() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисПриходыИнтеркампаниСебестоимость() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисПриходыИмпортСебестоимость() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисПриходыРаботСебестоимость() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисПеремещенияСебестоимость() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисПрошлыеПриходыТоваровСебестоимость() + // использует АналитикиРасходовВсе
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстБазисЗаказы() + // использует ПартииПоЗаказам, ЗаказыИзАналитикРасходов
		ТекстСортировка;
	ИсходныйТекстЗапроса = СтрЗаменить(ИсходныйТекстЗапроса, "&Вес", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки("СпрНоменклатура.ЕдиницаИзмерения", "СпрНоменклатура"));
	ИсходныйТекстЗапроса = СтрЗаменить(ИсходныйТекстЗапроса, "&Объем", 
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаОбъемУпаковки("СпрНоменклатура.ЕдиницаИзмерения", "СпрНоменклатура"));
	ИсходныйЗапрос = Новый Запрос(ИсходныйТекстЗапроса);
	ИсходныйЗапрос.МенеджерВременныхТаблиц = МВТ;
	ИсходныйЗапрос.УстановитьПараметр("РасчетныеПартииПоЗаказам", РасчетныеПартииПоЗаказам);
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ИсходныйЗапрос.УстановитьПараметр("УчитыватьВидыЗапасов", Константы.УчитыватьСебестоимостьТоваровПоВидамЗапасов.Получить());
	ИсходныйЗапрос.УстановитьПараметр("СобственныеТипыЗапасов", СобственныеТипыЗапасов);
	ДанныеДляРасчета = ИсходныйЗапрос.Выполнить().Выгрузить();
	
	Возврат ДанныеДляРасчета;
КонецФункции

Функция РасчетныеПриходыПартийРасходов(ДанныеДляРасчета, Регистраторы, УзлыДвижений = Неопределено, Тест = Ложь) // ДанныеДляРасчета будут изменены
	// кэшируем получение пустых ссылок - на множественных итерациях есть выигрыш
	ПустыеСсылки = Новый Соответствие;
	ПравилаРаспределения = Новый Массив(4);
	ПравилаРаспределения[0] = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноКоличеству;
	ПравилаРаспределения[1] = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноСебестоимости;
	ПравилаРаспределения[2] = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноВесу;
	ПравилаРаспределения[3] = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноОбъему;
	// Шаг 1: Строим сопоставление приходов с базисом и расходов, по которым базис рассчитан
	ДанныеДляРасчета.Сортировать("Организация, НалоговоеНазначение, Приоритет, Период, Регистратор, АналитикаУчетаНоменклатуры", Новый СравнениеЗначений);
	УзлыДвижений = Новый Соответствие;
	Ключи = Новый Массив(6); // {Организация, НалоговоеНазначение, ПравилоРаспределения, АналитикаРасходов, ДокументПоступленияРасходов, НомерСтроки}
	// формирование упорядоченных массивов строк таблицы ДанныеДляРасчета
	Для Каждого Движение Из ДанныеДляРасчета Цикл
		Ключи[0] = Движение.Организация;
		Ключи[1] = Движение.НалоговоеНазначение;
		Ключи[2] = Движение.ПравилоРаспределения;
		Ключи[3] = Неопределено;
		Ключи[4] = Неопределено;
		Ключи[5] = Неопределено;
		// накапливаем приход партий прочих расходов для дальнейшего сопоставления
		Если ЗначениеЗаполнено(Движение.СтатьяРасходов) Тогда
			Ключи[3] = Движение.АналитикаРаспределения;
			Ключи[4] = Движение.ДокументПоступленияРасходов;
			Ключи[5] = ДанныеДляРасчета.Индекс(Движение);
			Движения = УзелИндекса(УзлыДвижений, Ключи);
			Если Движения = Неопределено Тогда
				Движения = ДобавитьУзелИндекса(УзлыДвижений, Ключи, Новый Массив);
			КонецЕсли;
			Движения.Добавить(Движение);
			Продолжить;
		КонецЕсли;
		// непосредственно вставка строки расхода в сопоставления по каждой аналитике
		Для Каждого Правило Из ПравилаРаспределения Цикл
			Ключи[2] = Правило;
			Аналитики = УзелИндекса(УзлыДвижений, Ключи);
			Если Аналитики = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			// Аналитики содержат соответствие, в ключах которого значение аналитики расхода,
			// в значениях - соответствие между документом поступления расхода и движениями относящимися к этому расходу
			Для Каждого Значение Из АналитикиОбсчетаПартийПрочих(Движение, ПустыеСсылки) Цикл
				ПоступленияРасходов = Аналитики[Значение];
				Если ПоступленияРасходов = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				Для Каждого ПоступлениеРасхода Из ПоступленияРасходов Цикл
					Для Каждого НомерСтроки Из  ПоступлениеРасхода.Значение Цикл
						НомерСтроки.Значение.Добавить(Движение);
					КонецЦикла
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	// Шаг 2: создаем буфер накопления рассчитанных партий
	РасчетныеПартии = Новый ТаблицаЗначений;
	ПоляРасчета = СкопироватьКолонки(ДанныеДляРасчета.Колонки, РасчетныеПартии.Колонки);
	// Шаг 3: распределяем каждый массив строк в аналитиках
	КонтекстДвижений = ОписаниеДвижений(
		"ПартииРасходовНаСебестоимостьТоваровПриход",
		"ПартииРасходовНаСебестоимостьТоваров",
		ПоляРасчета,
		"Организация",
		"Базис, Количество, Вес, Объем, Стоимость, СтоимостьБезНДС, СтоимостьРегл, НДСРегл, ПостояннаяРазница, ВременнаяРазница",
		"Базис", "<БАЗИС_РАСХОДА>", "ДокументРеализации", "Период");
	Для Каждого Организации Из УзлыДвижений Цикл
		Для Каждого НалоговыеНазначения Из Организации.Значение Цикл	
			Для Каждого Правила Из НалоговыеНазначения.Значение Цикл	
				Если Правила.Ключ = ПравилаРаспределения[0] Тогда
					КонтекстДвижений.БазисРасхода = "Количество";
				ИначеЕсли Правила.Ключ = ПравилаРаспределения[2] Тогда
					КонтекстДвижений.БазисРасхода = "Вес";
				ИначеЕсли Правила.Ключ = ПравилаРаспределения[3] Тогда
					КонтекстДвижений.БазисРасхода = "Объем";	
				Иначе
					КонтекстДвижений.БазисРасхода = "Стоимость";
				КонецЕсли;
				Для Каждого Аналитики Из Правила.Значение Цикл
					Для Каждого ПоступлениеРасхода Из Аналитики.Значение Цикл
						Для Каждого НомерСтроки Из  ПоступлениеРасхода.Значение Цикл
							РаспределитьПриходыНаРасходы(КонтекстДвижений, НомерСтроки.Значение, РасчетныеПартии);
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	// Шаг 4: Дополнение расчетных партий данными прямого прихода в партии расходов на с/с
	ИндексРегистраторов = Новый Соответствие;
	Регистраторы = Новый Массив;
	ВсегоРегистраторов = 0;
	НачалоПериода = Дата(1,1,1);
	Для Каждого РасчетнаяПартия Из РасчетныеПартии Цикл
		Ключ = РасчетнаяПартия.Регистратор;
		Если ИндексРегистраторов[Ключ] = Неопределено Тогда
			Регистраторы.Добавить(Ключ);
			ИндексРегистраторов.Вставить(Ключ, ВсегоРегистраторов);
			ВсегоРегистраторов = ВсегоРегистраторов + 1;
			Если НачалоПериода = Дата(1,1,1) Тогда
				НачалоПериода = НачалоМесяца(Движение.Период);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	ЗапросИсходныхПартий = Новый Запрос(ТекстИсходныеПриходыПартийРасходов());
	ЗапросИсходныхПартий.УстановитьПараметр("Регистраторы", Регистраторы);
	ЗапросИсходныхПартий.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ВыборкаИсходныхПартий = ЗапросИсходныхПартий.Выполнить().Выбрать();
	Пока ВыборкаИсходныхПартий.Следующий() Цикл
		РасчетнаяПартия = РасчетныеПартии.Добавить();
		ЗаполнитьЗначенияСвойств(РасчетнаяПартия, ВыборкаИсходныхПартий);
	КонецЦикла;
	// Шаг 5: Сортировка партий для дальнейшей записи
	РасчетныеПартии.Сортировать("Регистратор, ВидДвижения, Период, АналитикаУчетаНоменклатуры", Новый СравнениеЗначений);
	Возврат РасчетныеПартии;
КонецФункции

Функция РасчетныеПриходыСебестоимости(НачалоПериода, РасчетныеПриходыПартийРасходов, ИндексРегистраторов, АналитикиПартнеров = Неопределено, Тест = Ложь)
	// Шаг 1: получаем аналитики учета по партнерам и регистраторы расчетных приходов
	АналитикиПартнеров = Новый Соответствие;
	Поступления = Новый Массив;
	
	Если ИндексРегистраторов = Неопределено Тогда
		ИндексРегистраторов = Новый Соответствие;
		Регистраторы = Новый Массив;
		ВсегоРегистраторов = 0;
	Иначе
		Регистраторы = ОбщегоНазначенияУТКлиентСервер.ПреобразоватьСоответствиеИлиСтруктуруВМассив(ИндексРегистраторов);
		ВсегоРегистраторов = Регистраторы.Количество();
	КонецЕсли;
	
	РасчетныеПриходыПартийРасходов.Сортировать("Регистратор", Новый СравнениеЗначений);
	Для Каждого Движение Из РасчетныеПриходыПартийРасходов Цикл
		Если Движение.ТипЗаписи = "Дополнение" Тогда
			Продолжить;
		КонецЕсли;
		// аналитики учета по партнерам для дальнейшего заполнения по документам поступлений
		Если АналитикиПартнеров[Движение.ДокументПоступления] = Неопределено Тогда
			Поступления.Добавить(Движение.ДокументПоступления);
			АналитикиПартнеров.Вставить(Движение.ДокументПоступления, Неопределено);
		КонецЕсли;
		// регистраторы для дальнейшей выборки онлайн-движений из регистра себестоимости товаров
		Если ИндексРегистраторов[Движение.Регистратор] = Неопределено Тогда
			Регистраторы.Добавить(Движение.Регистратор);
			ИндексРегистраторов.Вставить(Движение.Регистратор, ВсегоРегистраторов);
			ВсегоРегистраторов = ВсегоРегистраторов + 1;
		КонецЕсли;
	КонецЦикла;
	// заполняем аналитики учета по партнерам по документам поступлений товаров
	ЗапросАналитик = Новый Запрос(ТекстАналитикиПартнеров()); // использует &Поступления
	ЗапросАналитик.УстановитьПараметр("Поступления", Поступления);
	ВыборкаАналитик = ЗапросАналитик.Выполнить().Выбрать();
	Пока ВыборкаАналитик.Следующий() Цикл
		АналитикиПартнеров[ВыборкаАналитик.ДокументПоступления] = ВыборкаАналитик.АналитикаУчетаПоПартнерам;
	КонецЦикла;
	Поступления.Очистить();
	// Шаг 2: создаем буфер накопления рассчитанных приходов в себестоимость
	Запрос = Новый Запрос(ТекстОписаниеСебестоимость());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	ТекстСортировка = "УПОРЯДОЧИТЬ ПО Регистратор";
	ЗапросОписания = Новый Запрос(
		ТекстОписаниеСебестоимость() +
		"ОБЪЕДИНИТЬ ВСЕ" + ТекстИсходныеДвиженияСебестоимость() +
		ТекстСортировка
		); // использует &Регистраторы
	ЗапросОписания.УстановитьПараметр("Регистраторы", Регистраторы);
	ЗапросОписания.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Выборка = ЗапросОписания.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РасчетнаяПартия = РасчетныеПартии.Добавить();
		ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Выборка);
		Если Не Тест И РасчетныеПартии.Количество() > 1000 Тогда
			ЗаписатьРасчетныеПартии(РегистрыНакопления.СебестоимостьТоваров, РасчетныеПартии, ИндексРегистраторов);
			РасчетныеПартии.Очистить();
		КонецЕсли;
	КонецЦикла;
	Регистраторы.Очистить();
	// кэшируем константы
	ЗаполнятьВидЗапасов = ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов");
	// Шаг 3: Заполняем буфер накопления
	Для Каждого Движение Из РасчетныеПриходыПартийРасходов Цикл
		Если Не ЗначениеЗаполнено(Движение.СтатьяРасходов)
		 ИЛИ Движение.ТипЗаписи = "Дополнение" Тогда
			Продолжить;
		КонецЕсли;
		РасчетнаяПартия = РасчетныеПартии.Добавить();
		ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Движение,
			"Период, Регистратор, АналитикаУчетаНоменклатуры, Организация, РазделУчета, Подразделение, АналитикаРасходов");
		РасчетнаяПартия.ВидДвижения = ВидДвиженияНакопления.Приход;
		РасчетнаяПартия.ВидЗапасов = ?(ЗаполнятьВидЗапасов, Движение.ВидЗапасов, Неопределено);
		РасчетнаяПартия.СуммаДопРасходов = Движение.Стоимость;
		РасчетнаяПартия.СуммаДопРасходовБезНДС = Движение.СтоимостьБезНДС;
		РасчетнаяПартия.СтоимостьРегл = Движение.СтоимостьРегл;
		Если ЗначениеЗаполнено(Движение.НалоговоеНазначениеПартии) И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Движение.НалоговоеНазначениеПартии, "ВидДеятельностиНДС") = Перечисления.ВидыДеятельностиНДС.Необлагаемая Тогда 
			РасчетнаяПартия.СтоимостьРегл = РасчетнаяПартия.СтоимостьРегл + Движение.НДСРегл;
        КонецЕсли;
		РасчетнаяПартия.СтоимостьРеглБезНДС = Движение.СтоимостьРегл;
		РасчетнаяПартия.НДСРегл = Движение.НДСРегл;
		РасчетнаяПартия.АналитикаУчетаПоПартнерам = АналитикиПартнеров[Движение.ДокументПоступления];
		РасчетнаяПартия.СтатьяРасходовСписания = Движение.СтатьяРасходов;
		РасчетнаяПартия.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика;
		
		Если Не Тест И РасчетныеПартии.Количество() > 1000 Тогда
			ЗаписатьРасчетныеПартии(РегистрыНакопления.СебестоимостьТоваров, РасчетныеПартии, ИндексРегистраторов);
			РасчетныеПартии.Очистить();
		КонецЕсли;
	КонецЦикла;
	АналитикиПартнеров.Очистить();
	Если Не Тест Тогда
		ЗаписатьРасчетныеПартии(РегистрыНакопления.СебестоимостьТоваров, РасчетныеПартии, ИндексРегистраторов);
		ОчиститьРегистрНаСервере(ИндексРегистраторов, "СебестоимостьТоваров");
		РасчетныеПартии.Очистить();
	КонецЕсли;
	// Шаг 5: Сортировка партий для дальнейшей записи
	РасчетныеПартии.Сортировать("Регистратор, ВидДвижения, Период", Новый СравнениеЗначений);
	Возврат РасчетныеПартии;
КонецФункции

Функция ТекстИсходныеПриходыПартийРасходов() // использует &Регистраторы
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Дополнение"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов,
		|	ДД.Количество,
		|	ДД.Стоимость,
		|	ДД.СтоимостьБезНДС,
		|	ДД.СтоимостьРегл,
		|	ДД.НДСРегл,
		|	ДД.ПостояннаяРазница,
		|	ДД.ВременнаяРазница,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.ПодразделениеРасходов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов
		|ИЗ
		|	РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров КАК ДД
		|ГДЕ
		|	ДД.Регистратор В (&Регистраторы)
		|	И ДД.ДокументПоступленияРасходов = ДД.Регистратор
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И (ДД.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|		ИЛИ ДД.Период < &НачалоПериода)
		|";
КонецФункции

Функция ТекстАналитикиПартнеров() // использует &Поступления
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор КАК Декларация,
		|	ДД.ДокументПоступления КАК Поступление
		|ПОМЕСТИТЬ
		|	Импорт
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|ГДЕ
		|	ДД.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
		|	И ДД.Регистратор В (&Поступления)
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|;
		|ВЫБРАТЬ
		|	ДД.Регистратор КАК ДокументПоступления,
		|	МИНИМУМ(ДД.АналитикаУчетаПоПартнерам) КАК АналитикаУчетаПоПартнерам
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|ГДЕ
		|	ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.Количество > 0
		|	И ДД.АналитикаУчетаПоПартнерам <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка)
		|	И ДД.Регистратор В (&Поступления)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Регистратор
		|	
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	Импорт.Декларация КАК ДокументПоступления,
		|	МИНИМУМ(ДД.АналитикаУчетаПоПартнерам) КАК АналитикаУчетаПоПартнерам
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Импорт КАК Импорт
		|		ПО Импорт.Поступление = ДД.Регистратор
		|ГДЕ
		|	ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.Количество > 0
		|	И ДД.АналитикаУчетаПоПартнерам <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка)
		|СГРУППИРОВАТЬ ПО
		|	Импорт.Декларация
		|";
КонецФункции

Функция ТекстОписаниеСебестоимость()
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СуммаДопРасходов,
		|	0. КАК СуммаДопРасходовБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК СтоимостьРеглБезНДС,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК КорРазделУчета,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК КорОрганизация,
		|	0. КАК КорСтоимость,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка) КАК АналитикаУчетаПоПартнерам,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказКлиента,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка) КАК СтатьяДоходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ПериодПродажи,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка) КАК СтатьяАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК КорНалоговоеНазначение,
		|	""ХХ"" КАК ИдентификаторСтроки,
		|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции
		|//ВоВременнуюТаблицу ПОМЕСТИТЬ ДанныеПредварительные
		|";
КонецФункции

Функция ТекстИсходныеДвиженияСебестоимость() // использует &Регистраторы
	Возврат "
		|ВЫБРАТЬ
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.РазделУчета,
		|	ДД.ВидЗапасов,
		|	ДД.Организация,
		|	ДД.Количество,
		|	ДД.Стоимость,
		|	ДД.СтоимостьБезНДС,
		|	ДД.СуммаДопРасходов,
		|	ДД.СуммаДопРасходовБезНДС,
		|	ДД.СтоимостьРегл,
		|	ДД.СтоимостьРеглБезНДС,
		|	ДД.НДСРегл,
		|	ДД.ПостояннаяРазница,
		|	ДД.ВременнаяРазница,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.КорРазделУчета,
		|	ДД.КорВидЗапасов,
		|	ДД.КорОрганизация,
		|	ДД.КорСтоимость,
		|	ДД.АналитикаУчетаПоПартнерам,
		|	ДД.ЗаказКлиента,
		|	ДД.Подразделение,
		|	ДД.АналитикаРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.СтатьяДоходов,
		|	ДД.АналитикаДоходов,
		|	ДД.ПериодПродажи,
		|	ДД.СтатьяАктивовПассивов,
		|	ДД.АналитикаАктивовПассивов,
		|	ДД.ДокументДвижения,
		|	ДД.НалоговоеНазначение,
		|	ДД.КорНалоговоеНазначение,
		|	ДД.ИдентификаторСтроки,
		|	ДД.ГруппаПродукции
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|ГДЕ
		|	ДД.Регистратор В (&Регистраторы)
		|	И НЕ ДД.РасчетСебестоимости
		|	И (ДД.СуммаДопРасходов = 0. И ДД.Количество <> 0
		|		ИЛИ ДД.СуммаДопРасходов <> 0. И ДД.Период < &НачалоПериода
		|		ИЛИ ДД.СтатьяРасходовСписания = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка))
		|";
КонецФункции

Функция ТекстЗаказыНаПеремещенияИзАналитикРасходов() // использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	ДД.Период КАК ДатаПоступления,
		|	ДД.Регистратор КАК Поступление,
		|	ДД.ЗаказНаПеремещение КАК Заказ,
		|	КлючиРасходов.Организация,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	Заказ.СкладПолучатель,
		|	ДД.КОформлению КАК Количество
		|ИЗ
		|	РегистрНакопления.ЗаказыНаПеремещение КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПеремещение КАК Заказ
		|		ПО Заказ.Ссылка = ДД.ЗаказНаПеремещение
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиРасходовВсе КАК КлючиРасходов
		|		ПО КлючиРасходов.АналитикаРасходов = ДД.ЗаказНаПеремещение
		|ГДЕ
		|	ДД.Период < &НачалоПериода
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Период КАК ДатаПоступления,
		|	ДД.Регистратор КАК Поступление,
		|	ДД.ЗаказНаПеремещение КАК Заказ,
		|	КлючиРасходов.Организация,
		|	ДД.Номенклатура,
		|	ДД.Характеристика,
		|	Заказ.СкладПолучатель КАК Склад,
		|	ДД.КОформлению КАК Количество
		|ИЗ
		|	РегистрНакопления.ЗаказыНаПеремещение КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПеремещение КАК Заказ
		|		ПО Заказ.Ссылка = ДД.ЗаказНаПеремещение
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикиРасходовВсе КАК КлючиРасходов
		|		ПО КлючиРасходов.АналитикаРасходов = ЗНАЧЕНИЕ(Документ.ЗаказНаПеремещение.ПустаяСсылка)
		|		И КлючиРасходов.Организация = Заказ.Организация
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|";
КонецФункции

Функция ТекстПриходыПоступленийПоЗаказамСебестоимости() // использует ЗаказыИзАналитикРасходов
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	Заказы.ДатаПоступления КАК Период,
		|	ДД.Регистратор КАК Регистратор,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	НЕОПРЕДЕЛЕНО КАК Заказ,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	АналитикиТоваров.Номенклатура,
		|	АналитикиТоваров.Характеристика,
		|	АналитикиТоваров.Склад,
		|	АналитикиТоваров.Серия,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка),
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	0,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			Заказы.ДатаПоступления, Заказы.Поступление,
		|			Заказы.Номенклатура, Заказы.Характеристика, Заказы.Склад
		|		ИЗ
		|			ЗаказыИзАналитикРасходов КАК Заказы
		|		ГДЕ
		|			Заказы.ДатаПоступления < &ОкончаниеПериода
		|	) КАК Заказы 
		|		ПО Заказы.Поступление = ДД.Регистратор
		|		И Заказы.Номенклатура = АналитикиТоваров.Номенклатура
		|		И Заказы.Характеристика = АналитикиТоваров.Характеристика
		|		И Заказы.Склад = АналитикиТоваров.Склад
		|ГДЕ
		|	ДД.Период <= &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|СГРУППИРОВАТЬ ПО
		|	Заказы.ДатаПоступления,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	АналитикиТоваров.Номенклатура,
		|	АналитикиТоваров.Характеристика,
		|	АналитикиТоваров.Склад,
		|	АналитикиТоваров.Серия,
		|	ДД.ВидЗапасов
		|";
КонецФункции

Функция ТекстБазисОстаткиСебестоимость() // использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	&НачалоПериода КАК Период,
		|	ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка) КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	ДД.КоличествоОстаток КАК Количество,
		|	ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.КоличествоОстаток КАК Вес,
		|	ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.КоличествоОстаток КАК Объем,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ДД.РазделУчета,
		|	&НачалоПериода КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)
		|		И РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
		|		И РазделУчета <> ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
		|	) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|ГДЕ
		|	ДД.СтоимостьОстаток > 0.
		|	И (ДД.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				АналитикиТоваров.Номенклатура,
		|				ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
		|				АналитикиТоваров.Склад,
		|				ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|				)
		|	)
		|";
КонецФункции

Функция ТекстБазисПриходыТоваровСебестоимость() // использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	СУММА(ДД.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК Количество,
		|	СУММА(ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК Вес,
		|	СУММА(ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК Объем,
		|	СУММА(ДД.Стоимость) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ДД.РазделУчета,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|		ПО АналитикиТоваров.Склад = Склады.Ссылка
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций КАК Товары
		|		ПО Товары.Регистратор = ДД.Регистратор
		|		И Товары.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Товары.Организация = ДД.Организация
		|		И (Товары.ВидЗапасов = ДД.ВидЗапасов
		|			ИЛИ НЕ &УчитыватьВидыЗапасов
		|			)
		|		И Товары.Первичное = ИСТИНА
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И НЕ ДД.РазделУчета В (
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку))
		|	И (ДД.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				АналитикиТоваров.Номенклатура,
		|				ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
		|				АналитикиТоваров.Склад,
		|				ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
		|				ДД.Регистратор)
		|			ИЛИ
		|			ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИПЗНАЧЕНИЯ(КлючиРасходов.АналитикаРасходов)
		|			И КлючиРасходов.АналитикаРасходов В (
		|				ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка),
		|				ЗНАЧЕНИЕ(Документ.СборкаТоваров.ПустаяСсылка),
		|				ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка))
		|	)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка,
		|	АналитикиТоваров.Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ДД.РазделУчета
		|";
КонецФункции

Функция ТекстБазисПриходыИнтеркампаниСебестоимость() // использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	СУММА(ДД.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК Количество,
		|	СУММА(ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК Вес,
		|	СУММА(ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК Объем,
		|	СУММА(ДД.Стоимость) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ДД.РазделУчета,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизацийКПередаче КАК Товары
		|		ПО Товары.Регистратор = ДД.Регистратор
		|		И Товары.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Товары.ВидЗапасовПродавца.Организация = ДД.Организация
		|		И (Товары.ВидЗапасовПродавца = ДД.ВидЗапасов
		|			ИЛИ НЕ &УчитыватьВидыЗапасов
		|			)
		|		И Товары.Первичное = ИСТИНА
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И НЕ ДД.РазделУчета В (
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку))
		|	И (ДД.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				АналитикиТоваров.Номенклатура,
		|				ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
		|				АналитикиТоваров.Склад,
		|				ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
		|				ДД.Регистратор)
		|			ИЛИ
		|			ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИПЗНАЧЕНИЯ(КлючиРасходов.АналитикаРасходов)
		|			И КлючиРасходов.АналитикаРасходов В (
		|				ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка),
		|				ЗНАЧЕНИЕ(Документ.СборкаТоваров.ПустаяСсылка),
		|				ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка))
		|	)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка,
		|	АналитикиТоваров.Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ДД.РазделУчета
		|";
КонецФункции

Функция ТекстБазисПриходыРаботСебестоимость() // использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	СУММА(ДД.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Затраты.НомерСтроки) КАК Количество,
		|	СУММА(ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Затраты.НомерСтроки) КАК Вес,
		|	СУММА(ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Затраты.НомерСтроки) КАК Объем,
		|	СУММА(ДД.Стоимость) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Затраты.НомерСтроки) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Затраты.НомерСтроки) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Затраты.НомерСтроки) КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Затраты.НомерСтроки) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Затраты.НомерСтроки) КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ДД.РазделУчета,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.МатериалыИРаботыВПроизводстве КАК Затраты
		|		ПО Затраты.Регистратор = ДД.Регистратор
		|		И Затраты.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Затраты.Организация = ДД.Организация
		|		И (Затраты.Назначение = ДД.ВидЗапасов.Назначение
		|			ИЛИ НЕ &УчитыватьВидыЗапасов
		|			)
		|		И Затраты.Первичное = ИСТИНА
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И (ДД.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				АналитикиТоваров.Номенклатура,
		|				ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
		|				АналитикиТоваров.Склад,
		|				ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
		|				ДД.Регистратор)
		|			ИЛИ
		|			ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИПЗНАЧЕНИЯ(КлючиРасходов.АналитикаРасходов)
		|			И КлючиРасходов.АналитикаРасходов В (
		|				ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка),
		|				ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка))
		|	)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка,
		|	АналитикиТоваров.Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ДД.РазделУчета
		|";
КонецФункции

Функция ТекстБазисПриходыИмпортСебестоимость() // использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	СУММА(ДД.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК Количество,
		|	СУММА(ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК Вес,
		|	СУММА(ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.Количество) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК Объем,
		|	СУММА(ДД.Стоимость) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Товары.НомерСтроки) КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ДД.РазделУчета,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизацийКОформлению КАК Товары
		|		ПО Товары.Регистратор = ДД.Регистратор
		|		И Товары.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Товары.Организация = ДД.Организация
		|		И (Товары.ВидЗапасов = ДД.ВидЗапасов
		|			ИЛИ НЕ &УчитыватьВидыЗапасов
		|			)
		|		И Товары.Первичное = ИСТИНА
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И НЕ ДД.РазделУчета В (
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку))
		|	И (ДД.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				АналитикиТоваров.Номенклатура,
		|				ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
		|				АналитикиТоваров.Склад,
		|				ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
		|				ДД.Регистратор)
		|			ИЛИ
		|			ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИПЗНАЧЕНИЯ(КлючиРасходов.АналитикаРасходов)
		|			И КлючиРасходов.АналитикаРасходов В (
		|				ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка),
		|				ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка))
		|	)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка,
		|	АналитикиТоваров.Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ДД.РазделУчета
		|";
КонецФункции

Функция ТекстБазисПеремещенияСебестоимость() // использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	НЕОПРЕДЕЛЕНО КАК Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	ДД.Количество,
		|	ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.Количество КАК Вес,
		|	ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.Количество КАК Объем,
		|	ДД.Стоимость,
		|	ДД.СтоимостьБезНДС,
		|	ДД.СтоимостьРегл,
		|	0,
		|	ДД.ПостояннаяРазница,
		|	ДД.ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ДД.РазделУчета,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ТИПЗНАЧЕНИЯ(ДД.Регистратор) = ТИП(Документ.ПеремещениеТоваров)
		|	И НЕ ДД.РазделУчета В (
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку))
		|	И (ДД.Организация, ДД.Регистратор) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов В (
		|				ДД.Регистратор,
		|				ЗНАЧЕНИЕ(Документ.ПеремещениеТоваров.ПустаяСсылка))
		|	)
		|";
КонецФункции

Функция ТекстБазисПрошлыеПриходыТоваровСебестоимость() // использует АналитикиРасходовВсе
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Потребление"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка КАК Номенклатура,
		|	АналитикиТоваров.Склад КАК Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРаспределения,
		|	0. КАК Базис,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ВЫРАЗИТЬ(&Вес КАК ЧИСЛО(15,3)) * ДД.Количество) КАК Вес,
		|	СУММА(ВЫРАЗИТЬ(&Объем КАК ЧИСЛО(15,3)) * ДД.Количество) КАК Объем,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	0 КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяОтраженияРасходов,
		|	ЗНАЧЕНИЕ(Перечисление.ПравилаРаспределенияНаСебестоимостьТоваров.ПустаяСсылка) КАК ПравилоРаспределения,
		|	ДД.РазделУчета,
		|	ДД.Период КАК РасчетныйПериод
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров.Остатки(&НачалоПериода) КАК Остатки
		|		ПО Остатки.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Остатки.РазделУчета = ДД.РазделУчета
		|		И Остатки.ВидЗапасов = ДД.ВидЗапасов
		|		И Остатки.Организация = ДД.Организация
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
		|		ПО СпрНоменклатура.Ссылка = АналитикиТоваров.Номенклатура
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|		ПО АналитикиТоваров.Склад = Склады.Ссылка
		|ГДЕ
		|	ДД.Период < &НачалоПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И НЕ ДД.РазделУчета В (
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию),
		|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку))
		|	И (ДД.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор) В (
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			КлючиРасходов.Организация, АналитикиТоваров.Номенклатура, АналитикиТоваров.Склад, ДД.Регистратор
		|		ИЗ
		|			АналитикиРасходовВсе КАК КлючиРасходов
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК Поступление
		|				ПО Поступление.Регистратор = КлючиРасходов.АналитикаРасходов
		|		ГДЕ 
		|			КлючиРасходов.АналитикаРасходов = ДД.Регистратор
		|			И Поступление.Период < &НачалоПериода
		|	)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	СпрНоменклатура.Ссылка,
		|	АналитикиТоваров.Склад,
		|	ДД.Регистратор,
		|	ДД.ВидЗапасов,
		|	ДД.РазделУчета
		|";
КонецФункции

#КонецОбласти


#Область РасчетЗаписейНоменклатураДоходыРасходы

Функция ДанныеДляНоменклатураДоходыРасходы(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ТекстСортировка = "";
	ИсходныйТекстЗапроса = 
		ТекстРегистраторыДляНоменклатураДоходыРасходы() + ";" + // вт Регистраторы
		ТекстОписаниеДанныхДляНоменклатураДоходыРасходы()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстНоменклатураДоходыРасходыИзСебестоимости() // использует Регистраторы
		+ ТекстСортировка;
	ИсходныйЗапрос = Новый Запрос(ИсходныйТекстЗапроса);
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ДанныеДляРасчета = ИсходныйЗапрос.Выполнить().Выгрузить();
	ДанныеДляРасчета.Сортировать("Регистратор", Новый СравнениеЗначений);
	
	Возврат ДанныеДляРасчета;
КонецФункции

Функция ТекстРегистраторыДляНоменклатураДоходыРасходы() // вт Регистраторы
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор
		|ПОМЕСТИТЬ
		|	Регистраторы
		|ИЗ
		|	РегистрНакопления.ПартииПрочихРасходов КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК Партии
		|		ПО Партии.Период = ДД.Период
		|		И Партии.Регистратор = ДД.Регистратор
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|ИНДЕКСИРОВАТЬ ПО
		|	ДД.Регистратор
		|";
	
КонецФункции

Функция ТекстОписаниеДанныхДляНоменклатураДоходыРасходы()
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	0 КАК Приоритет,
		|	""ХХХХХХХХХХХХХХХХ"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка) КАК ТипЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|
		|	НЕОПРЕДЕЛЕНО КАК СтатьяДоходовРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|
		|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументДвижения
		|";
КонецФункции

Функция ТекстНоменклатураДоходыРасходыИзСебестоимости() // использует Регистраторы
	Возврат "
		|ВЫБРАТЬ
		|	90 КАК Приоритет,
		|	""Партия"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.Период,
		|	ДД.Регистратор,
		|
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РаспределениеРасходовНаСебестоимость),
		|	ДД.Организация,
		|	ДД.Подразделение,
		|
		|	ДД.АналитикаУчетаНоменклатуры,
		|	Аналитика.Склад,
		|	ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)) КАК ТипЗапасов,
		|	ДД.ВидЗапасов,
		|
		|	ДД.СтатьяРасходовСписания КАК СтатьяДоходовРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
		|	ДД.АналитикаРасходов КАК АналитикаРасходов,
		|
		|	0. КАК Количество,
		|	СУММА(ДД.СуммаДопРасходов) КАК Стоимость,
		|	СУММА(ДД.СуммаДопРасходовБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|
		|	ДД.ВидЗапасов КАК ИсточникГФУНоменклатуры,
		|	ДД.Регистратор КАК ДокументДвижения
		|
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Регистраторы КАК Регистраторы
		|		ПО Регистраторы.Регистратор = ДД.Регистратор
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
		|		ПО СпрВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И (ДД.СуммаДопРасходов <> 0. ИЛИ ДД.СуммаДопРасходов <> 0.)
		|	И ДД.Количество = 0
		|	И ДД.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
		|	И ДД.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОформлениеГТДСамостоятельно)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.Организация,
		|	ДД.Подразделение,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	Аналитика.Склад,
		|	ЕСТЬNULL(СпрВидыЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)),
		|	ДД.ВидЗапасов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|";
КонецФункции

#КонецОбласти


#Область РасчетПартийРасходов

Функция ДанныеДляПартийРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ТекстСортировка = "
		|УПОРЯДОЧИТЬ ПО
		|	ДокументПоступления, Период, Регистратор, Приоритет УБЫВ,
		|	КорАналитикаУчетаНоменклатуры, КорВидЗапасов, АналитикаУчетаНоменклатуры, ВидЗапасов,
		|	ДокументИсточник, ПодразделениеРасходов, СтатьяРасходовСписания, АналитикаРасходов
		|";
	ТекстИндексы = "
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументПоступления
		|";
	// Выбираем приходные движения партий расходов и дальнейшие движения партий товаров
	ИсходныйТекстЗапроса =
		ТекстПартииРасходовИнициализация() + ";" + // вт ПрошлыеРеализации, Отработано, Аналитики, ОстаткиПартий, ДолиСтоимости, ПрошлыеПоступления
		ТекстОписаниеПартийРасходов()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПартийРасходов() // использует ОстаткиПартий, ПрошлыеПоступления
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПриходыПартийРасходов()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстДополненияПартийРасходов()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстРасходыПартийРасходовПрошлыхМесяцев() // использует ПрошлыеРеализации
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстИтерацияПартийТоваров()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстИтерацияПартийПереданных()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПартииРасходовВПути()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстИтерацияПартийПроизводства()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстИтерацияПартийРаботИПеремещенияВПроизводстве()
		+ ТекстИндексы;
	МВТ = Новый МенеджерВременныхТаблиц;	
	ИсходныйЗапрос = Новый Запрос(СтрЗаменить(ИсходныйТекстЗапроса, "//ВоВременнуюТаблицу", ""));
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);	
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ИсходныйЗапрос.УстановитьПараметр("ЕстьФИФОСкользящая", ЕстьФИФОСкользящая(НачалоПериода, ОкончаниеПериода, МассивОрганизаций));
	ИсходныйЗапрос.МенеджерВременныхТаблиц = МВТ;
	ИсходныйЗапрос.Выполнить();
	
	
	Запрос = Новый Запрос(ТекстОписаниеПартийРасходов());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	ВременнаяТаблицаДанныхПоОтбору("ДокументПоступления", ТекстСортировка, РасчетныеПартии, МВТ);
	
	Возврат МВТ;
КонецФункции

Функция РасчетныеПартииРасходов(ДанныеДляРасчета, Регистраторы, ЦепочкиДвижений = Неопределено, Тест = Ложь, РассчитатьПартии = Истина)
	// Шаг 1: создаем буфер накопления рассчитанных партий
	Запрос = Новый Запрос(ТекстОписаниеПартийРасходов());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	// Шаг 2: обсчитываем цепочки движений по передачам, возвратам, перемещениям, порчам, пересортицам и т.д.
	КонтекстЦепочек = ОписаниеЦепочек("Потребление, Перемещение, Партия, Остаток, Сторно, Прошлое, Замещение,
		|Продукция, Выпуск, Затраты, Распределение, ВыпускПрочие, ВПути, Дополнение, Прочее, Списание");
	
	ПоляПотреблений = "РазделУчета, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, ДокументПоступления, ДокументИсточник";
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Потребление", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Партия", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Остаток", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Перемещение", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Замещение", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Выпуск", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "ВыпускПрочие",
		"РазделУчета, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, ДокументПоступления, Регистратор");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Сторно",
		"РазделУчета, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация, ДокументПоступления, Регистратор");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Перемещение",
		"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, ДокументПоступления");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Перемещение", "Потребление",
		"Регистратор, КорАналитикаУчетаНоменклатуры, КорВидЗапасов, ДокументПоступления");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Перемещение", "Продукция",
		"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, ДокументПоступления");	
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Замещение",
		"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Замещение", "Потребление",
		"Регистратор, КорАналитикаУчетаНоменклатуры, КорВидЗапасов");
		
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Продукция", "ДокументИсточник, РазделУчета, АналитикаУчетаНоменклатуры, ДокументПоступления, ВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Продукция", "Перемещение", "ДокументИсточник, РазделУчета, АналитикаУчетаНоменклатуры, ДокументПоступления, ВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Продукция", "Выпуск", "ДокументИсточник, РазделУчета, АналитикаУчетаНоменклатуры, ДокументПоступления, ВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Продукция", "ВыпускПрочие", "Регистратор, РазделУчета, АналитикаУчетаНоменклатуры, ДокументПоступления, ВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Продукция", "Партия", "ДокументИсточник, РазделУчета, АналитикаУчетаНоменклатуры, ДокументПоступления, ВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Продукция", "Остаток", "ДокументИсточник, РазделУчета, АналитикаУчетаНоменклатуры, ДокументПоступления, ВидЗапасов");
		
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Выпуск", "Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, КорАналитикаУчетаНоменклатуры, КорВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Выпуск", "Продукция", "Регистратор, КорАналитикаУчетаНоменклатуры, КорВидЗапасов, АналитикаУчетаНоменклатуры, ВидЗапасов");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Сторно",
		"ДокументИсточник, КорАналитикаУчетаНоменклатуры, КорВидЗапасов, ДокументПоступления");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "Потребление",
		"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, ДокументПоступления");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "Прошлое",
		"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, ДокументПоступления");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "Перемещение",
		"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, ДокументПоступления");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "Сторно",
		"Регистратор, АналитикаУчетаНоменклатуры, ВидЗапасов, ДокументПоступления");
		
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Затраты", "Организация, АналитикаУчетаНоменклатуры, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Затраты", "Потребление", "Организация, АналитикаУчетаНоменклатуры, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов");
		
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Распределение", "Организация, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Распределение", "Затраты", "Организация, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Прочее", "Организация, СтатьяРасходов, АналитикаРасходов, ПодразделениеРасходов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Прочее", "Затраты", "Организация, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Списание", "Регистратор");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Списание", "Прочее", "Регистратор");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "ВыпускПрочие",
		"Регистратор, ДокументИсточник, АналитикаУчетаНоменклатуры, ВидЗапасов, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ВыпускПрочие", "Распределение",
		"Регистратор, ДокументИсточник, КорАналитикаУчетаНоменклатуры, КорВидЗапасов, СтатьяРасходовСписания, АналитикаРасходов, ПодразделениеРасходов");
		
	// Шаг 3: замена ложных партий на первичные партии в расчетных строках по результатам построение графа замен
	КонтекстДвижений = ОписаниеДвижений(
		"ПартииРасходовНаСебестоимостьТоваров",
		"ПартииРасходовНаСебестоимостьТоваров",
		ПереченьПолей(РасчетныеПартии.Колонки),
		ПоляПотреблений,
		"Количество, Знаменатель, Стоимость, СтоимостьБезНДС, СтоимостьРегл, НДСРегл, ПостояннаяРазница, ВременнаяРазница",
		"Количество", "Количество", "ДокументИсточник", "Период");
	КонтекстДвижений.Вставить("ПоляСуммирования", "Стоимость, СтоимостьБезНДС, СтоимостьРегл, НДСРегл, ПостояннаяРазница, ВременнаяРазница");
	КонтекстДвижений.Вставить("ПоляГруппировки", ПереченьПолей(РасчетныеПартии.Колонки, КонтекстДвижений.ПоляСуммирования));
	ЦепочкиДвижений(КонтекстЦепочек, ДанныеДляРасчета);
	Если РассчитатьПартии Тогда
		РассчитатьПартииПоЦепочкам(КонтекстДвижений, ДанныеДляРасчета, РасчетныеПартии, Регистраторы, Тест);
	КонецЕсли;
	ЦепочкиДвижений = ДанныеДляРасчета;
	
	// Шаг 4: Удаляем нерассчитанные партии
	УдалитьНезаписываемыеСтроки(КонтекстДвижений.Контекст, РасчетныеПартии);
	
	Возврат РасчетныеПартии;
КонецФункции

Функция ТекстПартииРасходовИнициализация() // вт ПрошлыеРеализации, ОстаткиПартий, ПроизводственныеЗатраты, ПрошлыеРегистраторы, Выпуски, ДолиСтоимости, ПрошлыеПоступления
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументРеализации КАК ДокументРеализации,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов КАК ВидЗапасов
		|ПОМЕСТИТЬ
		|	ПрошлыеРеализации
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций КАК Расход
		|		ПО Расход.Период < &НачалоПериода
		|		И Расход.Регистратор = ДД.ДокументРеализации
		|		И Расход.АналитикаУчетаНоменклатуры = ДД.КорАналитикаУчетаНоменклатуры
		|		И Расход.ВидЗапасов = ДД.КорВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ДокументРеализации <> НЕОПРЕДЕЛЕНО
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Количество < 0
		|	
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументРеализации КАК ДокументРеализации,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.КорВидЗапасов КАК ВидЗапасов
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизацийКПередаче КАК Расход
		|		ПО Расход.Период < &НачалоПериода
		|		И Расход.Регистратор = ДД.ДокументРеализации
		|		И Расход.АналитикаУчетаНоменклатуры = ДД.КорАналитикаУчетаНоменклатуры
		|		И Расход.ВидЗапасовПродавца = ДД.КорВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Активность
		|	И ДД.ДокументРеализации <> НЕОПРЕДЕЛЕНО
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Количество < 0
		|;
		// Потенциальные источники, потребления которых надо списывать из знаменателя
		|ВЫБРАТЬ
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	СУММА(ДД.Количество) КАК Знаменатель
		|ПОМЕСТИТЬ
		|	Знаменатели
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|	И НЕ ДД.Первичное
		|	И (ДД.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента
		|       ИЛИ (ДД.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя))
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ПрочееОприходованиеТоваров
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.КорректировкаРеализации)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий
		|;
		// Остатки партионных регистров на начало по аналитикам доп.расходов
		|ВЫБРАТЬ
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	СУММА(ДД.Количество) КАК Количество
		|ПОМЕСТИТЬ
		|	ОстаткиПартий
		|ИЗ (
		|	ВЫБРАТЬ
		|		ДД.Организация,
		|		ДД.АналитикаУчетаНоменклатуры,
		|		ДД.ДокументПоступления,
		|		ДД.ВидЗапасов,
		|		ДД.КоличествоОстаток КАК Количество
		|	ИЗ
		|		РегистрНакопления.ПартииТоваровОрганизаций.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		ДД.Организация,
		|		ДД.АналитикаУчетаНоменклатуры,
		|		ДД.ДокументПоступления,
		|		ДД.ВидЗапасов,
		|		ДД.КоличествоОстаток КАК Количество
		|	ИЗ
		|		РегистрНакопления.ПартииТоваровПереданныеНаКомиссию.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		ДД.Организация,
		|		ДД.АналитикаУчетаНоменклатуры,
		|		ДД.ДокументПоступления,
		|		ДД.ВидЗапасов,
		|		ДД.КоличествоОстаток КАК Количество
		|	ИЗ
		|		РегистрНакопления.ПартииПроизводственныхЗатрат.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|
		|	) КАК ДД
		|СГРУППИРОВАТЬ ПО
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов
		|;
		// Документы передачи в производство и возврата из производства
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ
		|	МатериалыИРаботыВПроизводстве
		|ИЗ
		|	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Товары
		|		ПО Товары.Ссылка = Аналитика.Номенклатура
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И Товары.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|;
		// Документы распределения расходов, возникших в прошлых периодах
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументПоступленияРасходов КАК Ссылка
		|ПОМЕСТИТЬ
		|	ПрошлыеРегистраторы
		|ИЗ
		|	РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров КАК Партии
		|		ПО Партии.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Партии.Регистратор = ДД.ДокументПоступленияРасходов
		|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|СГРУППИРОВАТЬ ПО
		|	ДД.ДокументПоступленияРасходов
		|;
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументПоступления КАК Ссылка,
		|	ДД.Склад КАК Склад,
		|	МАКСИМУМ(ДД.Регистратор) КАК Регистратор,
		|	МАКСИМУМ(ДД.Период) КАК Период
		|ПОМЕСТИТЬ
		|	ПрошлыеПоступления
		|ИЗ (
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ДД.ДокументПоступления,
		|		ДД.АналитикаУчетаНоменклатуры.Склад КАК Склад,
		|		МАКСИМУМ(Периодика.Регистратор) КАК Регистратор,
		|		МАКСИМУМ(Периодика.Период) КАК Период
		|	ИЗ
		|		РегистрНакопления.ПартииПроизводственныхЗатрат.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииПроизводственныхЗатрат КАК Периодика
		|			ПО Периодика.Период < &НачалоПериода
		|			И Периодика.ДокументПоступления = ДД.ДокументПоступления
		|			И Периодика.АналитикаУчетаНоменклатуры.Склад = ДД.АналитикаУчетаНоменклатуры.Склад
		|	ГДЕ
		|		ДД.ДокументПоступления <> НЕОПРЕДЕЛЕНО
		|		И Периодика.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	СГРУППИРОВАТЬ ПО
		|		ДД.ДокументПоступления,
		|		ДД.АналитикаУчетаНоменклатуры.Склад
		|
		|	) КАК ДД
		|СГРУППИРОВАТЬ ПО
		|	ДД.ДокументПоступления,
		|	ДД.Склад
		|;
		// Подразделение документов-регистраторов
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор,
		|	ДД.Подразделение
		|ПОМЕСТИТЬ
		|	ПодразделенияРегистраторов
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|;
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.СтатьяРасходов
		|ПОМЕСТИТЬ
		|	ПартииПрочихРасходов
		|ИЗ
		|	РегистрНакопления.ПартииПрочихРасходов КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.СтатьяРасходов.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|";
КонецФункции

Функция ТекстОписаниеПартийРасходов()
	Возврат "
		// соединения и ЕСТЬNULL использованы для расширения типов полей таблицы ДанныеДляПартийХХХ
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	0 КАК Приоритет,
		|	""ХХХХХХХХХХХХХХХХ"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	ДД.ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	0. КАК Количество,
		|	0. КАК Знаменатель,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДД.ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|//ВоВременнуюТаблицу ПОМЕСТИТЬ ИсходныеДанные
		|ИЗ
		|	РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров КАК ДД
		|";
КонецФункции

Функция ТекстОстаткиПартийРасходов() // использует ОстаткиПартий, ПрошлыеПоступления
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Остаток"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	(ВЫБОР
		|		КОГДА Периодика.Регистратор ЕСТЬ NULL ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ) КАК РазделУчета,
		|	&НачалоПериода КАК Период,
		|	ЕСТЬNULL(Периодика.Регистратор, ДД.ДокументПоступления) КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов,
		|	Партии.Количество,
		|	0. КАК Знаменатель,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ДД.НДСРеглОстаток КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ЕСТЬNULL(Периодика.Регистратор, ДД.ДокументПоступления) КАК ДокументИсточник,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиПартий КАК Партии
		|		ПО Партии.Организация = ДД.Организация
		|		И Партии.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Партии.ДокументПоступления = ДД.ДокументПоступления
		|		И Партии.ВидЗапасов = ДД.ВидЗапасов
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПрошлыеПоступления КАК Периодика
		|		ПО Периодика.Ссылка = ДД.ДокументПоступления
		|		И Периодика.Склад = Аналитика.Склад
		|ГДЕ
		|	Партии.Количество > 0.
		|";
КонецФункции

Функция ТекстПриходыПартийРасходов()
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Партия"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	(ВЫБОР 
		|		КОГДА ТИПЗНАЧЕНИЯ(ДД.АналитикаРасходов) = ТИП(Документ.ПеремещениеТоваров)
		|			И ДД.АналитикаРасходов <> ЗНАЧЕНИЕ(Документ.ПеремещениеТоваров.ПустаяСсылка) ТОГДА ДД.ДокументИсточник
		|		КОГДА ТИПЗНАЧЕНИЯ(ДД.АналитикаРасходов) = ТИП(Документ.ПередачаТоваровМеждуОрганизациями)
		|			И ДД.АналитикаРасходов <> ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка) ТОГДА ДД.АналитикаРасходов
		|		КОГДА ТИПЗНАЧЕНИЯ(ДД.АналитикаРасходов) = ТИП(Документ.ЗаказНаПеремещение) ТОГДА ДД.ДокументИсточник
		|		КОГДА ДД.ДокументИсточник <> НЕОПРЕДЕЛЕНО ТОГДА ДД.ДокументИсточник
		|		ИНАЧЕ ДД.ДокументПоступления КОНЕЦ) КАК ДокументИсточник,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.ПодразделениеРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПартииПрочихРасходов КАК Партии
		|		ПО Партии.Регистратор = ДД.Регистратор
		|		И Партии.Организация = ДД.Организация
		|		И Партии.СтатьяРасходов = ДД.СтатьяРасходов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Регистратор = ДД.ДокументПоступленияРасходов
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И (НЕ Партии.Регистратор ЕСТЬ NULL
		|		ИЛИ ДД.СтатьяРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка))
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	(ВЫБОР 
		|		КОГДА ТИПЗНАЧЕНИЯ(ДД.АналитикаРасходов) = ТИП(Документ.ПеремещениеТоваров)
		|			И ДД.АналитикаРасходов <> ЗНАЧЕНИЕ(Документ.ПеремещениеТоваров.ПустаяСсылка) ТОГДА ДД.ДокументИсточник
		|		КОГДА ТИПЗНАЧЕНИЯ(ДД.АналитикаРасходов) = ТИП(Документ.ПередачаТоваровМеждуОрганизациями)
		|			И ДД.АналитикаРасходов <> ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка) ТОГДА ДД.АналитикаРасходов
		|		КОГДА ТИПЗНАЧЕНИЯ(ДД.АналитикаРасходов) = ТИП(Документ.ЗаказНаПеремещение) ТОГДА ДД.ДокументИсточник
		|		КОГДА ДД.ДокументИсточник <> НЕОПРЕДЕЛЕНО ТОГДА ДД.ДокументИсточник
		|		ИНАЧЕ ДД.ДокументПоступления КОНЕЦ),
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.ПодразделениеРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|";
КонецФункции

Функция ТекстДополненияПартийРасходов() // использует ПрошлыеРегистраторы
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Дополнение"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов,
		|	ДД.Количество,
		|	0. КАК Знаменатель,
		|	ДД.Стоимость,
		|	ДД.СтоимостьБезНДС,
		|	ДД.СтоимостьРегл,
		|	ДД.НДСРегл,
		|	ДД.ПостояннаяРазница,
		|	ДД.ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДД.ДокументИсточник,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.ПодразделениеРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрошлыеРегистраторы КАК ПрошлыеРегистраторы
		|		ПО ПрошлыеРегистраторы.Ссылка = ДД.ДокументПоступленияРасходов
		|ГДЕ
		|	ДД.Период < &НачалоПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|";
КонецФункции

Функция ТекстРасходыПартийРасходовПрошлыхМесяцев() // использует ПрошлыеРеализации
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Прошлое"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов,
		|	МАКСИМУМ(ДД.Количество) КАК Количество,
		|	0. КАК Знаменатель,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.ПодразделениеРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрошлыеРеализации КАК Прошлые
		|		ПО ДД.Регистратор = Прошлые.ДокументРеализации
		|		И ДД.АналитикаУчетаНоменклатуры = Прошлые.АналитикаУчетаНоменклатуры
		|		И ДД.ВидЗапасов = Прошлые.ВидЗапасов
		|ГДЕ
		|	ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.ПодразделениеРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|";
КонецФункции

Функция ТекстИтерацияПартийТоваров()
	Возврат "
		|ВЫБРАТЬ
		|	(ВЫБОР КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА 90
		|		ИНАЧЕ 40 КОНЕЦ) КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор = ДД.ДокументПоступления ТОГДА ""Замещение""
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА ""Потребление""
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество < 0. ТОГДА ""Сторно""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор = ДД.ДокументПоступления ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ИНАЧЕ ДД.ВидДвижения КОНЕЦ) КАК ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период КАК Период,
		|	ДД.Регистратор КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	СУММА(ВЫБОР
		|		КОГДА ДД.Регистратор = ДД.ДокументПоступления И ДД.Количество < 0. ТОГДА -ДД.Количество
		|		ИНАЧЕ ДД.Количество КОНЕЦ) / КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЕСТЬNULL(Комиссия.НомерСтроки, -1)) КАК Количество,
		|	ЕСТЬNULL(Знаменатели.Знаменатель, 0.) КАК Знаменатель,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	(ВЫБОР
		|		КОГДА Не Возвраты.Ссылка ЕСТЬ NULL И ДД.Количество < 0. ТОГДА ИСТИНА
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА ЛОЖЬ
		|		КОГДА Передачи.Ссылка ЕСТЬ NULL И Возвраты.Ссылка ЕСТЬ NULL ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК СохранятьРегл,
		|	ЕСТЬNULL(Комиссия.АналитикаУчетаНоменклатуры, ДД.КорАналитикаУчетаНоменклатуры) КАК КорАналитикаУчетаНоменклатуры,
		|	ЕСТЬNULL(Комиссия.ВидЗапасов, ДД.КорВидЗапасов) КАК КорВидЗапасов,
		|	(ВЫБОР
		|		КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера) ТОГДА ДД.Регистратор
		|		КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства) ТОГДА ДД.Регистратор
		|		ИНАЧЕ ДД.ДокументИсточник КОНЕЦ) КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ЕСТЬNULL(ПодразделенияРегистраторов.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК ПодразделениеРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПодразделенияРегистраторов КАК ПодразделенияРегистраторов
		|		ПО ПодразделенияРегистраторов.Регистратор = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Знаменатели КАК Знаменатели
		|		ПО Знаменатели.Регистратор = ДД.Регистратор
		|		И Знаменатели.Организация = ДД.Организация
		|		И Знаменатели.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|		И Знаменатели.ДокументПоступления = ДД.ДокументПоступления
		|		И Знаменатели.ВидЗапасов = ДД.ВидЗапасов
		|		И Знаменатели.АналитикаУчетаПартий = ДД.АналитикаУчетаПартий
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК Передачи
		|		ПО Передачи.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Передачи.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровМеждуОрганизациями КАК Возвраты
		|		ПО Возвраты.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Возвраты.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровПереданныеНаКомиссию КАК Комиссия
		|		ПО Комиссия.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Комиссия.Регистратор = ДД.Регистратор
		|		И Комиссия.Организация = ДД.Организация
		|		И Комиссия.ДокументПоступления = ДД.ДокументПоступления
		|		И Комиссия.ВидЗапасов = ДД.ВидЗапасов
		|		И Комиссия.КорАналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидЗапасовПрихода
		|		ПО ВидЗапасовПрихода.Ссылка = ДД.ВидЗапасов
		|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ДокументИсточник <> НЕОПРЕДЕЛЕНО
		|	И ЕСТЬNULL(ВидЗапасовПрихода.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар), ИСТИНА)
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА 90
		|		ИНАЧЕ 40 КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор = ДД.ДокументПоступления ТОГДА ""Замещение""
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА ""Потребление""
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество < 0. ТОГДА ""Сторно""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.Регистратор = ДД.ДокументПоступления ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|		ИНАЧЕ ДД.ВидДвижения КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЕСТЬNULL(Знаменатели.Знаменатель, 0.),
		|	(ВЫБОР
		|		КОГДА Не Возвраты.Ссылка ЕСТЬ NULL И ДД.Количество < 0. ТОГДА ИСТИНА
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА ЛОЖЬ
		|		КОГДА Передачи.Ссылка ЕСТЬ NULL И Возвраты.Ссылка ЕСТЬ NULL ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ),
		|	ЕСТЬNULL(Комиссия.АналитикаУчетаНоменклатуры, ДД.КорАналитикаУчетаНоменклатуры),
		|	ЕСТЬNULL(Комиссия.ВидЗапасов, ДД.КорВидЗапасов),
		|	(ВЫБОР
		|		КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера) ТОГДА ДД.Регистратор
		|		КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства) ТОГДА ДД.Регистратор
		|		ИНАЧЕ ДД.ДокументИсточник КОНЕЦ),
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ЕСТЬNULL(ПодразделенияРегистраторов.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
		|";
КонецФункции

Функция ТекстИтерацияПартийПереданных()
	Возврат "
		|ВЫБРАТЬ
		|	(ВЫБОР КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА 90
		|		ИНАЧЕ 40 КОНЕЦ) КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА ""Потребление""
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество < 0. ТОГДА ""Сторно""
		|		КОГДА ДД.Регистратор = ДД.ДокументПоступления ТОГДА ""Замещение""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период КАК Период,
		|	ДД.Регистратор КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Знаменатель,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	(ВЫБОР
		|		КОГДА Реализация.Дата >= &НачалоПериода ТОГДА ДД.ДокументПередачиНаКомиссию
		|		ИНАЧЕ ДД.ДокументПоступления КОНЕЦ) КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровПереданныеНаКомиссию КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК Реализация
		|		ПО Реализация.Ссылка = ДД.ДокументПередачиНаКомиссию
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА 90
		|		ИНАЧЕ 40 КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество > 0. ТОГДА ""Потребление""
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ДД.Количество < 0. ТОГДА ""Сторно""
		|		КОГДА ДД.Регистратор = ДД.ДокументПоступления ТОГДА ""Замещение""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ),
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА Реализация.Дата >= &НачалоПериода ТОГДА ДД.ДокументПередачиНаКомиссию
		|		ИНАЧЕ ДД.ДокументПоступления КОНЕЦ),
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация
		|";
КонецФункции

Функция ТекстПартииРасходовВПути()
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""ВПути"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.СтатьяРасходов,
		|	ДД.Количество,
		|	0. КАК Знаменатель,
		|	ДД.Стоимость,
		|	ДД.СтоимостьБезНДС,
		|	ДД.СтоимостьРегл,
		|	ДД.НДСРегл,
		|	ДД.ПостояннаяРазница,
		|	ДД.ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДД.ДокументИсточник,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ДД.ПодразделениеРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК Отгрузки
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ  РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров КАК ДД
		|		ПО ДД.Регистратор = Отгрузки.Ссылка
		|ГДЕ
		|	Отгрузки.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)
		|	И (Отгрузки.ДатаПереходаПраваСобственности МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		ИЛИ Отгрузки.ДатаПереходаПраваСобственности = ДАТАВРЕМЯ(1,1,1))
		|	И ДД.Период < &НачалоПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|";
КонецФункции

Функция ТекстИтерацияПартийПроизводства()
	Возврат "
		|ВЫБРАТЬ
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 10
		|		ИНАЧЕ 90 КОНЕЦ) КАК Приоритет,
		|	(ВЫБОР 
		|		КОГДА ДД.Количество < 0 ТОГДА ""Сторно""
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА ""Потребление""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КОНЕЦ) КАК ВидДвижения,
		|	(ВЫБОР ДД.ХозяйственнаяОперация
		|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПереработчику)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ) КАК РазделУчета,
		|	ДД.Период КАК Период,
		|	ДД.Регистратор КАК Регистратор,
		|	ДД.Организация,
		|	(ВЫБОР
		|		КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика)
		|			ТОГДА ДД.АналитикаУчетаНоменклатуры
		|		ИНАЧЕ ДД.КорАналитикаУчетаНоменклатуры КОНЕЦ) КАК АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.КорВидЗапасов КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Количество) КАК Знаменатель,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	(ВЫБОР 
		|		КОГДА ДД.Количество < 0 ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		ИНАЧЕ ДД.АналитикаУчетаНоменклатуры КОНЕЦ) КАК КорАналитикаУчетаНоменклатуры,
		|	(ВЫБОР 
		|		КОГДА ДД.Количество < 0 ТОГДА ДД.КорВидЗапасов
		|		ИНАЧЕ ДД.ВидЗапасов КОНЕЦ) КАК КорВидЗапасов,
		|	(ВЫБОР
		|		КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика)
		|			ТОГДА ДД.Регистратор
		|		КОГДА ДД.Количество < 0 ТОГДА ДД.ДокументИсточник
		|		ИНАЧЕ ДД.Регистратор КОНЕЦ) КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ МатериалыИРаботыВПроизводстве КАК Затраты
		|		ПО Затраты.Регистратор = ДД.Регистратор
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА 10
		|		ИНАЧЕ 90 КОНЕЦ),
		|	(ВЫБОР 
		|		КОГДА ДД.Количество < 0 ТОГДА ""Сторно""
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА ""Потребление""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ),
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КОНЕЦ),
		|	(ВЫБОР ДД.ХозяйственнаяОперация
		|		КОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаПереработчику)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеПереработчику)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	(ВЫБОР
		|		КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика)
		|			ТОГДА ДД.АналитикаУчетаНоменклатуры
		|		ИНАЧЕ ДД.КорАналитикаУчетаНоменклатуры КОНЕЦ),
		|	ДД.ДокументПоступления,
		|	ДД.КорВидЗапасов,
		|	(ВЫБОР 
		|		КОГДА ДД.Количество < 0 ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		ИНАЧЕ ДД.АналитикаУчетаНоменклатуры КОНЕЦ),
		|	(ВЫБОР 
		|		КОГДА ДД.Количество < 0 ТОГДА ДД.КорВидЗапасов
		|		ИНАЧЕ ДД.ВидЗапасов КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика)
		|			ТОГДА ДД.Регистратор
		|		КОГДА ДД.Количество < 0 ТОГДА ДД.ДокументИсточник
		|		ИНАЧЕ ДД.Регистратор КОНЕЦ),
		|	ДД.НалоговоеНазначение,
		|	ДД.ХозяйственнаяОперация
		|";
КонецФункции



Функция ТекстИтерацияПартийРаботИПеремещенияВПроизводстве()
	Возврат "
		|ВЫБРАТЬ
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА 90
		|		ИНАЧЕ 10 КОНЕЦ) КАК Приоритет,
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА ""Потребление""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ДД.Период КАК Период,
		|	ДД.Регистратор КАК Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Знаменатель,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		ИНАЧЕ ДД.АналитикаУчетаНоменклатуры КОНЕЦ) КАК КорАналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	(ВЫБОР
		|		КОГДА ДД.ДокументИсточник = НЕОПРЕДЕЛЕНО ТОГДА ДД.ДокументПоступления
		|		ИНАЧЕ ДД.ДокументИсточник КОНЕЦ) КАК ДокументИсточник,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ДД.ПодразделениеРасходов КАК ПодразделениеРасходов,
		|	ДД.СтатьяРасходовСписания КАК СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов КАК АналитикаРасходов
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикиТоваров
		|		ПО АналитикиТоваров.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Работы
		|		ПО Работы.Ссылка = АналитикиТоваров.Номенклатура
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И (Работы.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|		)
		|	И Не ДД.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА 90
		|		ИНАЧЕ 10 КОНЕЦ),
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА ""Потребление""
		|		ИНАЧЕ ""Перемещение"" КОНЕЦ),
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	(ВЫБОР
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			ТОГДА ДД.КорАналитикаУчетаНоменклатуры
		|		ИНАЧЕ ДД.АналитикаУчетаНоменклатуры КОНЕЦ),
		|	(ВЫБОР 
		|		КОГДА ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА ДД.ДокументПоступления
		|		ИНАЧЕ ДД.Регистратор КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.ДокументИсточник = НЕОПРЕДЕЛЕНО ТОГДА ДД.ДокументПоступления
		|		ИНАЧЕ ДД.ДокументИсточник КОНЕЦ),
		|	ДД.НалоговоеНазначение,
		|	ДД.ПодразделениеРасходов,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов
		|";
КонецФункции

#КонецОбласти




#Область РасчетЗаписейКорректировокНДС

Функция ДанныеДляКорректировокНДС(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)			
		
	ТекстСортировка = "";
	
	ИсходныйТекстЗапроса =
		ТекстПартииДляРасчетаКорректировокНДС() + " ; "
		+ ТекстОписаниеДанныхДляКорректировокНДС()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстКорректировкиНДСВосстановлениеНДС()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстКорректировкиНДСУсловнаяПродажа()
		+ ТекстСортировка;
		
	ИсходныйЗапрос = Новый Запрос(ИсходныйТекстЗапроса);
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ИсходныйЗапрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ДанныеДляРасчета = ИсходныйЗапрос.Выполнить().Выгрузить();
	
	
	Возврат ДанныеДляРасчета;
КонецФункции

Функция РасчетныеНДСВосстановлениеНДС(ДанныеДляРасчета, ВнутренниеДанные = Неопределено, Тест = Ложь)
	РасчетныеПартии = ДанныеДляРасчета.Скопировать(Новый Структура("ТипЗаписи", "НДСВосстановлениеНДС"));
	РасчетныеПартии.Сортировать("Регистратор", Новый СравнениеЗначений);
	Возврат РасчетныеПартии;
КонецФункции

Функция РасчетныеНДСУсловнаяПродажа(ДанныеДляРасчета, ВнутренниеДанные = Неопределено, Тест = Ложь)
	РасчетныеПартии = ДанныеДляРасчета.Скопировать(Новый Структура("ТипЗаписи", "НДСУсловнаяПродажа"));
	РасчетныеПартии.Сортировать("Регистратор", Новый СравнениеЗначений);
	Возврат РасчетныеПартии;
КонецФункции

Функция ТекстПартииДляРасчетаКорректировокНДС()	
	
	Возврат "
		|////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Партии.Период КАК Период,
		|	Партии.Регистратор КАК Регистратор,
		|	Партии.Организация КАК Организация,
		|	Партии.ДокументПоступления КАК ДокументПоступления,
		|	Партии.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	Партии.СтавкаНДС КАК СтавкаНДС,
		|
		|   Партии.НалоговоеНазначение					КАК НалоговоеНазначение,
		|   Партии.НалоговоеНазначениеПоФакту           КАК НалоговоеНазначениеПоФакту,
		|
		|   Партии.РазделКорректировки               	КАК РазделКорректировки,
		|	Партии.СтатьяРасходовСписания КАК СтатьяРасходовСписания,
		|	Партии.АналитикаРасходов      КАК АналитикаРасходов,
		|	Партии.ГруппаПродукции КАК ГруппаПродукции,
		|	Партии.АналитикаУчетаПродукции КАК АналитикаУчетаПродукции,
		|	Партии.ВидЗапасов КАК ВидЗапасов,
		|	Партии.КорВидЗапасов КАК КорВидЗапасов,
		|	Партии.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
		|	Партии.СтатьяРасходовПолучатель КАК СтатьяРасходовПолучатель,
		|	Партии.АналитикаРасходовПолучатель КАК АналитикаРасходовПолучатель,
		|
		|	СУММА(Партии.Количество) КАК Количество,
		|	СУММА(Партии.НДСРегл) КАК НДСРегл,
		|	СУММА(Партии.НДСРеглПродукции) КАК НДСРеглПродукции,
		|	СУММА(Партии.СтоимостьРегл) КАК СтоимостьРегл
		|
		|ПОМЕСТИТЬ Партии
		|ИЗ (
		|	ВЫБРАТЬ
		|		Партии.Период,
		|		Партии.Регистратор,
		|		Партии.Организация,
		|		Партии.Количество КАК Количество,
		|		Партии.СтоимостьРегл,
		|		Партии.НДСРегл,
		|		0 КАК НДСРеглПродукции,
		|		Партии.ДокументПоступления,
		|		Партии.АналитикаУчетаПартий,
		|		Партии.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначение,
		|		Партии.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|		Партии.АналитикаУчетаПартий.СтавкаНДС КАК СтавкаНДС,
		|		ЗНАЧЕНИЕ(Перечисление.РазделыКорректировокНДСПартий.ТоварыНаСкладах) КАК РазделКорректировки,
		|		Партии.СтатьяРасходовСписания КАК СтатьяРасходовСписания,
		|		Партии.АналитикаРасходов      КАК АналитикаРасходов,
		|		НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|		НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|		Партии.ВидЗапасов КАК ВидЗапасов,
		|		Партии.КорВидЗапасов КАК КорВидЗапасов,
		|		НЕОПРЕДЕЛЕНО КАК ПодразделениеПолучатель,
		|		НЕОПРЕДЕЛЕНО КАК СтатьяРасходовПолучатель,
		|		НЕОПРЕДЕЛЕНО КАК АналитикаРасходовПолучатель,
		|		Партии.НалоговоеНазначение КАК НалоговоеНазначениеПоФакту
		|	ИЗ
		|		РегистрНакопления.ПартииТоваровОрганизаций КАК Партии
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикаПартий
		|			ПО АналитикаПартий.КлючАналитики = Партии.АналитикаУчетаПартий
		|	ГДЕ
		|		Партии.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Партии.Организация В (&МассивОрганизаций)
		|		И Партии.Активность
		|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И Партии.НДСРегл <> 0.
		|		И Партии.ВидЗапасов.ТипЗапасов В (ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Материал), ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
		|		И Партии.НалоговоеНазначение <> ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)
		|		И Партии.НалоговоеНазначение <> АналитикаПартий.НалоговоеНазначение 
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		Партии.Период КАК Период,
		|		Партии.Регистратор КАК Регистратор,
		|		Партии.Организация КАК Организация,
		|		МАКСИМУМ(ПартииТоваров.Количество) КАК Количество,
		|		СУММА(Партии.СтоимостьРегл) КАК СтоимостьРегл,
		|		СУММА(Партии.НДСРегл) КАК НДСРегл,
		|       СУММА(Партии.СтоимостьРегл * (
		|			ВЫБОР АналитикаПродукции.Номенклатура.СтавкаНДС 
		|				КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20) ТОГДА 0.20
        |				КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС14) ТОГДА 0.14
		|				КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС7)  ТОГДА 0.07
		|               ИНАЧЕ 0
		|	        КОНЕЦ
		|       )) КАК НДСРеглПродукции,
		|		ПартииТоваров.ДокументПоступления  КАК ДокументПоступления,
		|		ПартииТоваров.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
		|		Партии.НалоговоеНазначениеПродукции КАК НалоговоеНазначение,
		|		Партии.АналитикаУчетаПродукции КАК АналитикаУчетаНоменклатуры,
		|		АналитикаПродукции.Номенклатура.СтавкаНДС КАК СтавкаНДС,
		|		ЗНАЧЕНИЕ(Перечисление.РазделыКорректировокНДСПартий.Продукция) КАК РазделКорректировки,
		|		Партии.СтатьяРасходовСписания КАК СтатьяРасходовСписания,
		|		Партии.АналитикаРасходов      КАК АналитикаРасходов,
		|		НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|		Партии.АналитикаУчетаПродукции КАК АналитикаУчетаПродукции,
        |		НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|		Партии.КорВидЗапасов КАК КорВидЗапасов,
		|		НЕОПРЕДЕЛЕНО КАК ПодразделениеПолучатель,
		|		НЕОПРЕДЕЛЕНО КАК СтатьяРасходовПолучатель,
		|		НЕОПРЕДЕЛЕНО КАК АналитикаРасходовПолучатель,
		|		Партии.НалоговоеНазначение КАК НалоговоеНазначениеПоФакту 
		|	ИЗ
		|		РегистрНакопления.ПартииЗатратНаВыпуск КАК Партии
		|		ЛЕВОЕ СОЕДИНЕНИЕ
		|			РегистрНакопления.ПартииТоваровОрганизаций КАК ПартииТоваров
		|		ПО 
		|			Партии.Регистратор = ПартииТоваров.Регистратор 
		|			И Партии.Организация = ПартииТоваров.Организация
		|			И Партии.АналитикаУчетаПродукции = ПартииТоваров.АналитикаУчетаНоменклатуры
		|			И Партии.НалоговоеНазначениеПродукции = ПартииТоваров.АналитикаУчетаПартий.НалоговоеНазначение 
		|			И Партии.НалоговоеНазначение = ПартииТоваров.НалоговоеНазначение 
		|			И ПартииТоваров.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
		|			РегистрСведений.АналитикаУчетаПартий КАК АналитикаПартий
		|		ПО 
		|			АналитикаПартий.КлючАналитики = Партии.АналитикаУчетаПартий
		|		ЛЕВОЕ СОЕДИНЕНИЕ
		|			РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПродукции
		|		ПО
		|			Партии.АналитикаУчетаПродукции = АналитикаПродукции.КлючАналитики
		|	ГДЕ
		|		Партии.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Партии.Организация В (&МассивОрганизаций)
		|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И Партии.НДСРегл <> 0.
		|		И Партии.Активность
		|		И Партии.НалоговоеНазначение <> ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)
		|		И Партии.НалоговоеНазначение <> Партии.НалоговоеНазначениеПродукции
		|	СГРУППИРОВАТЬ ПО
		|		Партии.Период,
		|		Партии.Регистратор,
		|		Партии.Организация,
		|		ПартииТоваров.ДокументПоступления,
		|		ПартииТоваров.АналитикаУчетаПартий,
		|		Партии.НалоговоеНазначениеПродукции,
		|		Партии.АналитикаУчетаПродукции,
		|		Партии.СтатьяРасходовСписания,
		|		Партии.АналитикаРасходов,
		|		Партии.НалоговоеНазначение,
		|		Партии.АналитикаУчетаПродукции,
		|		Партии.КорВидЗапасов,
		|		АналитикаПродукции.Номенклатура.СтавкаНДС
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		Партии.Период КАК Период,
		|		Партии.Регистратор КАК Регистратор,
		|		Партии.Организация КАК Организация,
		|		0 КАК Количество,
        |		(ВЫБОР
        |           КОГДА (Партии.ДокументПоступления ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт ИЛИ Партии.ДокументПоступленияРасходов ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт) ТОГДА
        |				(ВЫБОР АналитикаПартий.СтавкаНДС
        |					КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20) ТОГДА Партии.НДСРегл * 100 / 20
        |					КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС14) ТОГДА Партии.НДСРегл * 100 / 14
        |					КОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС7)  ТОГДА Партии.НДСРегл * 100 /  7
        |					ИНАЧЕ 0 КОНЕЦ)
        |			ИНАЧЕ Партии.СтоимостьРегл КОНЕЦ) КАК СтоимостьРегл,
		|		Партии.НДСРегл КАК НДСРегл,
		|		0 КАК НДСРеглПродукции,
		|		Партии.ДокументПоступленияРасходов КАК ДокументПоступления,
		|		Партии.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
		|		Партии.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначение,
		|		Партии.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|		Партии.АналитикаУчетаПартий.СтавкаНДС КАК СтавкаНДС,
		|		ЗНАЧЕНИЕ(Перечисление.РазделыКорректировокНДСПартий.РасходыНаСебестоимостьТоваров) КАК РазделКорректировки,
		|		Партии.СтатьяРасходовСписания КАК СтатьяРасходовСписания,
		|		Партии.АналитикаРасходов      КАК АналитикаРасходов,
		|		НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|		Партии.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаПродукции,
		|		Партии.ВидЗапасов КАК ВидЗапасов,
		|		НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|		НЕОПРЕДЕЛЕНО КАК ПодразделениеПолучатель,
		|		НЕОПРЕДЕЛЕНО КАК СтатьяРасходовПолучатель,
		|		НЕОПРЕДЕЛЕНО КАК АналитикаРасходовПолучатель,
		|		Партии.НалоговоеНазначение КАК НалоговоеНазначениеПоФакту
		|	ИЗ
		|		РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров КАК Партии
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК АналитикаПартий
		|			ПО АналитикаПартий.КлючАналитики = Партии.АналитикаУчетаПартий
		|	ГДЕ
		|		Партии.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Партии.Организация В (&МассивОрганизаций)
		|		И Партии.Активность
		|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И Партии.НДСРегл <> 0.
		|		И Партии.НалоговоеНазначение <> ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)
		|		И Партии.НалоговоеНазначение <> АналитикаПартий.НалоговоеНазначение 
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		Партии.Период КАК Период,
		|		Партии.Регистратор КАК Регистратор,
		|		Партии.Организация КАК Организация,
		|		0 КАК Количество,
		|		Партии.СтоимостьРегл КАК СтоимостьРегл,
		|		Партии.НДСРегл КАК НДСРегл,
		|		0 КАК НДСРеглПродукции,
		|		Партии.ДокументПоступленияРасходов КАК ДокументПоступления,
		|		Партии.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
		|		Партии.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначение,
		|		Партии.СтатьяРасходов КАК АналитикаУчетаНоменклатуры,
		|		Партии.АналитикаУчетаПартий.СтавкаНДС КАК СтавкаНДС,
		|		ЗНАЧЕНИЕ(Перечисление.РазделыКорректировокНДСПартий.ТЗР) КАК РазделКорректировки,
		|		НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|		НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|		НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|		НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|		НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
		|		НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|		НЕОПРЕДЕЛЕНО КАК ПодразделениеПолучатель,
		|		НЕОПРЕДЕЛЕНО КАК СтатьяРасходовПолучатель,
		|		НЕОПРЕДЕЛЕНО КАК АналитикаРасходовПолучатель,
		|		Партии.НалоговоеНазначение КАК НалоговоеНазначениеПоФакту
		|
		|	ИЗ
		|		РегистрНакопления.ПартииПрочихРасходов КАК Партии
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|			ПО Партии.СтатьяРасходов = Статьи.Ссылка
		|	ГДЕ
		|		Партии.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		И Партии.Организация В (&МассивОрганизаций)
		|		И Партии.Активность
		|		И Партии.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		И Партии.НДСРегл <> 0.
		|		И Статьи.ВариантРаспределенияРасходов В (
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты))
		|		И Партии.НалоговоеНазначение <> ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)
		|		И Партии.НалоговоеНазначение <> Партии.АналитикаУчетаПартий.НалоговоеНазначение 
		|
		|	) КАК Партии
		|
		|СГРУППИРОВАТЬ ПО
		|	Партии.Период,
		|	Партии.Регистратор,
		|	Партии.Организация,
		// |	АналитикаУчетаПартий.Контрагент,
		|	Партии.ДокументПоступления,
		|	Партии.АналитикаУчетаНоменклатуры,
		|	Партии.СтавкаНДС,
		|
		|   Партии.НалоговоеНазначение,
		|   Партии.НалоговоеНазначениеПоФакту,
		|
		|	Партии.СтатьяРасходовСписания,
		|	Партии.АналитикаРасходов,
		|	Партии.ГруппаПродукции,
		|	Партии.АналитикаУчетаПродукции,
		|	Партии.ВидЗапасов,
		|	Партии.КорВидЗапасов,
		|	Партии.ПодразделениеПолучатель,
		|	Партии.СтатьяРасходовПолучатель,
		|	Партии.АналитикаРасходовПолучатель,
		|
		|   Партии.РазделКорректировки
		|";
		
КонецФункции

Функция ТекстОписаниеДанныхДляКорректировокНДС()
	
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	0 КАК Приоритет,
		|	""ХХХХХХХХХХХХХХХХ"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка) КАК СтавкаНДС,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПоФакту,
		|
		|	0. КАК Количество,
		|	0. КАК НДСРегл,
		|	0. КАК НДСРеглПоФакту,
		|
		|	0. КАК СтоимостьРегл,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыКорректировокНДСПартий.ПустаяСсылка) КАК РазделКорректировки,
		|	0. КАК НДСРеглПродукции,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ГруппаПродукции,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПродукции,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	НЕОПРЕДЕЛЕНО КАК ПодразделениеПолучатель,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовПолучатель,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходовПолучатель,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация
		|";

КонецФункции

Функция ТекстКорректировкиНДСВосстановлениеНДС()	
	
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""НДСВосстановлениеНДС"" КАК ТипЗаписи,
		|	ИСТИНА КАК ЗаписыватьВРегистр,
		|	Партии.Период КАК Период,
		|	Партии.Регистратор КАК Регистратор,
		|	Партии.Организация КАК Организация,
		|	Партии.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	Партии.СтавкаНДС КАК СтавкаНДС,
		|	Партии.ДокументПоступления КАК ДокументПоступления,
		|	Партии.НалоговоеНазначение КАК НалоговоеНазначение,
		|	Партии.НалоговоеНазначениеПоФакту КАК НалоговоеНазначениеПоФакту,
		|
		|	Партии.Количество КАК Количество,
		|	0. КАК НДСРегл,
		|	Партии.НДСРегл КАК НДСРеглПоФакту,
		|
		|	Партии.СтоимостьРегл КАК СтоимостьРегл,
		|	Партии.РазделКорректировки КАК РазделКорректировки,
		|	Партии.НДСРеглПродукции КАК НДСРеглПродукции,
		|	Партии.СтатьяРасходовСписания КАК СтатьяРасходовСписания,
		|	Партии.АналитикаРасходов      КАК АналитикаРасходов,
		|	Партии.ГруппаПродукции КАК ГруппаПродукции,
		|	Партии.АналитикаУчетаПродукции КАК АналитикаУчетаПродукции,
		|	Партии.ВидЗапасов КАК ВидЗапасов,
		|	Партии.КорВидЗапасов КАК КорВидЗапасов,
		|	Партии.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
		|	Партии.СтатьяРасходовПолучатель КАК СтатьяРасходовПолучатель,
		|	Партии.АналитикаРасходовПолучатель КАК АналитикаРасходовПолучатель,
		|   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПредполагаемоеВосстановлениеНДС) КАК ХозяйственнаяОперация
		|
		|ИЗ
		|	Партии КАК Партии
		|ГДЕ
		|   Партии.НДСРегл <> 0.
		|	И Партии.НалоговоеНазначение.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая)		
		|	И Партии.НалоговоеНазначениеПоФакту.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Облагаемая)
		|";
		
КонецФункции

Функция ТекстКорректировкиНДСУсловнаяПродажа()	
	
	Возврат "
		|ВЫБРАТЬ
		|	20 КАК Приоритет,
		|	""НДСУсловнаяПродажа"" КАК ТипЗаписи,
		|	ИСТИНА КАК ЗаписыватьВРегистр,
		|	Партии.Период КАК Период,
		|	Партии.Регистратор КАК Регистратор,
		|	Партии.Организация КАК Организация,
		|	Партии.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	Партии.СтавкаНДС КАК СтавкаНДС,
		|	Партии.ДокументПоступления КАК ДокументПоступления,
		|	Партии.НалоговоеНазначение КАК НалоговоеНазначение,
		|	Партии.НалоговоеНазначениеПоФакту КАК НалоговоеНазначениеПоФакту,
		|
		|	Партии.Количество КАК Количество,
		|	Партии.НДСРегл КАК НДСРегл,
		|	0. КАК НДСРеглПоФакту,
		|
		|	Партии.СтоимостьРегл КАК СтоимостьРегл,
		|	Партии.РазделКорректировки КАК РазделКорректировки,
		|	Партии.НДСРеглПродукции КАК НДСРеглПродукции,
		|	Партии.СтатьяРасходовСписания КАК СтатьяРасходовСписания,
		|	Партии.АналитикаРасходов      КАК АналитикаРасходов,
		|	Партии.ГруппаПродукции КАК ГруппаПродукции,
		|	Партии.АналитикаУчетаПродукции КАК АналитикаУчетаПродукции,
		|	Партии.ВидЗапасов КАК ВидЗапасов,
		|	Партии.КорВидЗапасов КАК КорВидЗапасов,
		|	Партии.ПодразделениеПолучатель КАК ПодразделениеПолучатель,
		|	Партии.СтатьяРасходовПолучатель КАК СтатьяРасходовПолучатель,
		|	Партии.АналитикаРасходовПолучатель КАК АналитикаРасходовПолучатель,
		|   ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПредполагаемаяУсловнаяПродажа) КАК ХозяйственнаяОперация
		|
		|ИЗ
		|	Партии КАК Партии
		|ГДЕ
		|   Партии.НДСРегл <> 0.
		|	И (
		|		(Партии.НалоговоеНазначение.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Облагаемая) И Партии.НалоговоеНазначениеПоФакту.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая))
		|		ИЛИ (Партии.НалоговоеНазначение.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.ПропорциональноОблагаемая) И Партии.НалоговоеНазначениеПоФакту = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность))
		|   )
		|";
		
КонецФункции

Функция ТаблицаНДСУсловныеПродажи(ТаблицаНДСУсловнаяПродажа, ТаблицаНДСВосстановлениеНДС)
	
	ТаблицаНДСУсловныеПродажи = РегистрыНакопления.НДСУсловныеПродажи.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ТаблицаНДСУсловныеПродажи.Колонки.Удалить("Активность");
	
    Для Каждого СтрокаУсловнаяПродажа Из ТаблицаНДСУсловнаяПродажа Цикл
        
		
		НоваяСтрока = ТаблицаНДСУсловныеПродажи.Добавить();
		
		НоваяСтрока.Период             			= СтрокаУсловнаяПродажа.Период;
		НоваяСтрока.Регистратор             	= СтрокаУсловнаяПродажа.Регистратор;
		
		НоваяСтрока.Организация        			= СтрокаУсловнаяПродажа.Организация;
		НоваяСтрока.ВидУсловнойПродажи        	= Перечисления.ВидУсловнойПродажи.ПредполагаемаяУсловнаяПродажа;
		
		Если ТипЗнч(СтрокаУсловнаяПродажа.АналитикаУчетаНоменклатуры) = Тип("СправочникСсылка.КлючиАналитикиУчетаНоменклатуры") Тогда
			НоваяСтрока.Номенклатура 				= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаУсловнаяПродажа.АналитикаУчетаНоменклатуры, "Номенклатура"); 
			НоваяСтрока.Характеристика 	            = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаУсловнаяПродажа.АналитикаУчетаНоменклатуры, "Характеристика"); 
		ИначеЕсли ТипЗнч(СтрокаУсловнаяПродажа.АналитикаУчетаНоменклатуры) = Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов") Тогда	
			НоваяСтрока.Номенклатура 				= СтрокаУсловнаяПродажа.АналитикаУчетаНоменклатуры; 
			НоваяСтрока.Характеристика 	            = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		Иначе
			НоваяСтрока.Номенклатура 				= Неопределено; 
			НоваяСтрока.Характеристика 	            = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		КонецЕсли; 
		
		НоваяСтрока.СтавкаНДС        			= СтрокаУсловнаяПродажа.СтавкаНДС;
		НоваяСтрока.НалоговоеНазначение         = СтрокаУсловнаяПродажа.НалоговоеНазначение;
		НоваяСтрока.НалоговоеНазначениеПоФакту  = СтрокаУсловнаяПродажа.НалоговоеНазначениеПоФакту;
		
		НоваяСтрока.Количество     				= СтрокаУсловнаяПродажа.Количество;
		НоваяСтрока.СтоимостьРегл  				= СтрокаУсловнаяПродажа.СтоимостьРегл;
		НоваяСтрока.НДСРегл        				= СтрокаУсловнаяПродажа.НДСРегл;
		НоваяСтрока.НДСРеглРучныеКорректировки 	= 0;
		
	КонецЦикла;
	
    Для Каждого СтрокаВосстановлениеНДС Из ТаблицаНДСВосстановлениеНДС Цикл
        
		
		НоваяСтрока = ТаблицаНДСУсловныеПродажи.Добавить();
		
		НоваяСтрока.Период             			= СтрокаВосстановлениеНДС.Период;
		НоваяСтрока.Регистратор             	= СтрокаВосстановлениеНДС.Регистратор;
		
		НоваяСтрока.Организация        			= СтрокаВосстановлениеНДС.Организация;
		НоваяСтрока.ВидУсловнойПродажи        	= Перечисления.ВидУсловнойПродажи.ПредполагаемоеВосстановлениеНДС;
		
		Если ТипЗнч(СтрокаВосстановлениеНДС.АналитикаУчетаНоменклатуры) = Тип("СправочникСсылка.КлючиАналитикиУчетаНоменклатуры") Тогда
			НоваяСтрока.Номенклатура 				= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаВосстановлениеНДС.АналитикаУчетаНоменклатуры, "Номенклатура"); 
			НоваяСтрока.Характеристика 	            = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаВосстановлениеНДС.АналитикаУчетаНоменклатуры, "Характеристика"); 
		ИначеЕсли ТипЗнч(СтрокаВосстановлениеНДС.АналитикаУчетаНоменклатуры) = Тип("ПланВидовХарактеристикСсылка.СтатьиРасходов") Тогда	
			НоваяСтрока.Номенклатура 				= СтрокаВосстановлениеНДС.АналитикаУчетаНоменклатуры; 
			НоваяСтрока.Характеристика 	            = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		Иначе
			НоваяСтрока.Номенклатура 				= Неопределено; 
			НоваяСтрока.Характеристика 	            = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		КонецЕсли; 
		
		НоваяСтрока.СтавкаНДС        			= СтрокаВосстановлениеНДС.СтавкаНДС;
		НоваяСтрока.НалоговоеНазначение         = СтрокаВосстановлениеНДС.НалоговоеНазначение;
		НоваяСтрока.НалоговоеНазначениеПоФакту  = СтрокаВосстановлениеНДС.НалоговоеНазначениеПоФакту;
		
		НоваяСтрока.Количество     				= СтрокаВосстановлениеНДС.Количество;
		НоваяСтрока.СтоимостьРегл  				= СтрокаВосстановлениеНДС.СтоимостьРегл;
		НоваяСтрока.НДСРегл        				= СтрокаВосстановлениеНДС.НДСРеглПоФакту;
		НоваяСтрока.НДСРеглРучныеКорректировки 	= 0;
		
	КонецЦикла;
	
	Возврат ТаблицаНДСУсловныеПродажи;
	
КонецФункции // ТаблицаНДСУсловныеПродажи

Функция РасчетныеНДСУсловныеПродажи(ТаблицаНДСУсловнаяПродажа, ТаблицаНДСВосстановлениеНДС)
	РасчетныеНДСУсловныеПродажи = ТаблицаНДСУсловныеПродажи(ТаблицаНДСУсловнаяПродажа, ТаблицаНДСВосстановлениеНДС);
	РасчетныеНДСУсловныеПродажи.Сортировать("Регистратор", Новый СравнениеЗначений);
	Возврат РасчетныеНДСУсловныеПродажи;
КонецФункции

Процедура ДополнитьДанныеДляКорректировокНДССохраняемымиДвижениями(ДанныеДляКорректировокНДС, УстаревшиеРегистраторыКорректировокНДС, НачалоПериода, ОкончаниеПериода, МассивОрганизаций, ИмяРегистра)
	
	// Получим регистраторы, по которым будут формироваться движения по НДС
	НовыеРегистраторыКорректировокНДС = ДанныеДляКорректировокНДС.Скопировать(, "Регистратор");
	НовыеРегистраторыКорректировокНДС.Свернуть("Регистратор", "");
	
	// Подготовим запрос
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода",  	  		            НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода",  	  		            ОкончаниеПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",    		            МассивОрганизаций);
	Запрос.УстановитьПараметр("НовыеРегистраторыКорректировокНДС", 		НовыеРегистраторыКорректировокНДС);
	Запрос.УстановитьПараметр("УстаревшиеРегистраторыКорректировокНДС", УстаревшиеРегистраторыКорректировокНДС);
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТСтарыеРегистраторы
	|ИЗ
	|	РегистрНакопления.КорректировкиНДСПартий КАК ДД
	|ГДЕ
	|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И ДД.Организация В (&МассивОрганизаций)
	|
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Регистратор
	|ПОМЕСТИТЬ ВТНовыеРегистраторы
	|ИЗ
	|	&НовыеРегистраторыКорректировокНДС КАК Т
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Регистратор
	|ПОМЕСТИТЬ ВТСохраняемыеРегистраторы
	|ИЗ
	|	ВТНовыеРегистраторы КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСтарыеРегистраторы КАК Т2
	|		ПО Т.Регистратор = Т2.Регистратор
	|ГДЕ
	|	%1
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Регистратор
	|ПОМЕСТИТЬ ВТУстаревшиеРегистраторыКорректировокНДС
	|ИЗ
	|	&УстаревшиеРегистраторыКорректировокНДС КАК Т
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ВТСохраняемыеДвиженияКорректировкиНДСПартий
	|ИЗ
	|	РегистрНакопления.КорректировкиНДСПартий КАК Т
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И НЕ (Т.Организация В (&МассивОрганизаций))
	|	И Т.Регистратор В 
	|		(ВЫБРАТЬ Т.Регистратор ИЗ ВТСохраняемыеРегистраторы КАК Т 
	|		 ОБЪЕДИНИТЬ ВСЕ
	|		 ВЫБРАТЬ Т.Регистратор ИЗ ВТУстаревшиеРегистраторыКорректировокНДС КАК Т)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Регистратор
	|ИЗ
	|	ВТУстаревшиеРегистраторыКорректировокНДС КАК Т
	|ГДЕ
	|	НЕ Т.Регистратор В
	|	   (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.Регистратор ИЗ ВТСохраняемыеДвиженияКорректировкиНДСПартий КАК Т)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	ВТСохраняемыеДвиженияКорректировкиНДСПартий КАК Т
	|";
	
	Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		Запрос.Текст,
		ТекстОтборПоТипамРегистраторовДляСохраненияДвижений()
    );
    
    Запрос.Текст = СтрЗаменить(Запрос.Текст, "РегистрНакопления.КорректировкиНДСПартий", "РегистрНакопления." + ИмяРегистра);
		
	Результат = Запрос.ВыполнитьПакет();
	
	// Из УстаревшиеРегистраторыКорректировокНДС удалим те регистраторы, по которым есть сохраняемые движения по другим организациям
	УстаревшиеРегистраторыКорректировокНДС = Результат[5].Выгрузить();
	
	// Дополним ДанныеДляКорректировокНДС сохраняемыми движениями регистра КорректировкиНДСПартий/НДСУсловныеПродажи по другим организациям
	Выборка = Результат[6].Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ДанныеДляКорректировокНДС.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка); 
	КонецЦикла;
	
КонецПроцедуры

Функция ТаблицаУстаревшихРегистраторовКорректировокНДС(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, НовыеДанныеДляКорректировокНДС, ИмяРегистра)
	
	// Получим типы документов, двигающих партионные регистры
	// Очищать движения корректировок НДС можно только у этих типов документов
	РегистраторыПартий = Новый Массив;
	Для Каждого Мета Из Метаданные.Документы Цикл
        Если Мета.Движения.Содержит(Метаданные.РегистрыНакопления.ПартииТоваровОрганизаций)
            ИЛИ Мета.Движения.Содержит(Метаданные.РегистрыНакопления.ПартииЗатратНаВыпуск)
            ИЛИ Мета.Движения.Содержит(Метаданные.РегистрыНакопления.ПартииРасходовНаСебестоимостьТоваров)
            ИЛИ Мета.Движения.Содержит(Метаданные.РегистрыНакопления.ПартииПрочихРасходов)
		    ИЛИ Мета.Движения.Содержит(Метаданные.РегистрыНакопления.ПартииПроизводственныхЗатрат) 
            
            Тогда
            
			РегистраторыПартий.Добавить(Тип("ДокументСсылка." + Мета.Имя));
            
		КонецЕсли;
	КонецЦикла;
	ТипыРегистраторовПартий = Новый ОписаниеТипов(РегистраторыПартий);
	
	// Создадим таблицу для хранения устаревших регистраторов по регистру КорректировкиНДСПартий или НДСУсловныеПродажи
	УстаревшиеРегистраторыКорректировокНДС = Новый ТаблицаЗначений;
	УстаревшиеРегистраторыКорректировокНДС.Колонки.Добавить("Регистратор", Новый ОписаниеТипов(Документы.ТипВсеСсылки()));
	
	// Заполним таблицу устаревших регистраторов
	ВычислитьУстаревшиеРегистраторыКорректировокНДС(
		НачалоПериода,
		ОкончаниеПериода,
		МассивОрганизаций,
		НовыеДанныеДляКорректировокНДС,
		ТипыРегистраторовПартий,
		УстаревшиеРегистраторыКорректировокНДС,
        ИмяРегистра
    );
	
	Возврат УстаревшиеРегистраторыКорректировокНДС;
	
КонецФункции

Процедура ВычислитьУстаревшиеРегистраторыКорректировокНДС(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, НовыеДанныеДляКорректировокНДС, ТипыРегистраторовПартий, УстаревшиеРегистраторыКорректировокНДС, ИмяРегистра)
	
	// Получим описание типов документов, которые делают онлайн движения по корректировкам НДС
	// Движения этих документов очищать не надо
	ТипыРегистраторовКорректировокНДСОнлайн = РегистраторыКорректировокНДССОнлайнДвижениями(ИмяРегистра);
	
	// Получим старые регистраторы из ИБ, по данным регистра корректировок НДС
	СтарыеРегистраторыКорректировокНДС = Регистраторы(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, ИмяРегистра);
	
	// Получим новые регистраторы из таблицы новых движений корректировок НДС
	НовыеРегистраторыКорректировокНДС = НовыеДанныеДляКорректировокНДС.Скопировать(,"Регистратор");
	НовыеРегистраторыКорректировокНДС.Свернуть("Регистратор", "");
	
	Для Каждого Строка Из НовыеРегистраторыКорректировокНДС Цикл
		// Если есть новые движения по регистратору, то его старые движения очищать не надо - будут замещены при записи
		СтарыеРегистраторыКорректировокНДС.Удалить(Строка.Регистратор);
	КонецЦикла;
	
	Для Каждого КлючИЗначение Из СтарыеРегистраторыКорректировокНДС Цикл
		Если ТипыРегистраторовПартий.СодержитТип(ТипЗнч(КлючИЗначение.Ключ))
		 И НЕ ТипыРегистраторовКорректировокНДСОнлайн.СодержитТип(ТипЗнч(КлючИЗначение.Ключ)) Тогда
		 	// Если старый регистратор двигает партионные регистры и не делает движения по корректировкам НДС онлайн,
			// значит его движения были сформированы механизмом партионного учета - их надо очистить
			ОписаниеОчищаемогоНабора = УстаревшиеРегистраторыКорректировокНДС.Добавить();
			ОписаниеОчищаемогоНабора.Регистратор = КлючИЗначение.Ключ;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОчиститьДвиженияУстаревшихРегистраторовКорректировокНДС(УстаревшиеРегистраторыКорректировокНДС, ИмяРегистра)
    
	Если ТестированиеБезЗаписи() Тогда
		Возврат;
	КонецЕсли;
    
	Для Каждого ОписаниеОчищаемогоНабора Из УстаревшиеРегистраторыКорректировокНДС Цикл
		Движения = РегистрыНакопления[ИмяРегистра].СоздатьНаборЗаписей();
		Движения.Отбор.Регистратор.Установить(ОписаниеОчищаемогоНабора.Регистратор);
		Движения.Записать(Истина);
	КонецЦикла;
	
КонецПроцедуры

// Возвращает описание типов документов, формирующих онлайн движения по корректировкам НДС (при проведении).
// Также в это описание типов добавляется служебный документ КорректировкаРегистров.
//
// Параметры:
//	ИмяРегистра - Строка - имя регистра корректировок НДС из метаданных конфигурации ("КорректировкиНДСПартий" или "НДСУсловныеПродажи")
//
// Возвращаемое значение:
//	ОписаниеТипов - типы документов с онлайн движениями по корректировкам НДС
//	
Функция РегистраторыКорректировокНДССОнлайнДвижениями(ИмяРегистра)
    
    Если ИмяРегистра = "КорректировкиНДСПартий" Тогда
        // У этих документов в модуле менеджера в ДополнительныеСвойства.ТаблицыДляДвижений добавляется "ТаблицаКорректировкиНДСПартий"
        Возврат Новый ОписаниеТипов("
            |ДокументСсылка.ВыкупВозвратнойТарыУПоставщика,    
            |ДокументСсылка.КорректировкаРегистров"
        );
    ИначеЕсли ИмяРегистра = "НДСУсловныеПродажи" Тогда    
        // У этих документов в модуле менеджера в ДополнительныеСвойства.ТаблицыДляДвижений добавляется "ТаблицаНДСУсловныеПродажи"
        Возврат Новый ОписаниеТипов("
            |ДокументСсылка.ВыкупВозвратнойТарыУПоставщика,    
            |ДокументСсылка.НалоговаяНакладная,
            |ДокументСсылка.Приложение2КНалоговойНакладной,
            |ДокументСсылка.РегистрацияВходящегоНалоговогоДокумента,
            |ДокументСсылка.ТаможеннаяДекларацияИмпорт,
            |ДокументСсылка.КорректировкаРегистров"
        );
    Иначе 
        Возврат Неопределено; 
    КонецЕсли; 
	
КонецФункции

// Обработчик подписки ПроверитьВозможностьФормированияОнлайнДвиженийКорректировокНДС на событие ПередЗаписью наборов записей регистров корректировок НДС.
Процедура ПроверитьВозможностьФормированияОнлайнДвиженийКорректировокНДСПередЗаписью(НаборЗаписей, Отказ, Замещение) Экспорт
	
	Если НаборЗаписей.ОбменДанными.Загрузка ИЛИ НаборЗаписей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ НаборЗаписей.ДополнительныеСвойства.Свойство(ИмяДополнительногоСвойстваЗаписываемогоНабора()) Тогда
		
		// Выполняется формирование онлайн движений первичными документами (не механизмом партионного учета)
		// Проверим, что документ-регистратор указан в перечне допустимых регистраторов для онлайн движений по корректировкам НДС
		ИмяРегистра = НаборЗаписей.Метаданные().Имя;
		Регистратор = НаборЗаписей.Отбор.Регистратор.Значение;
		ДопустимыеРегистраторы = РегистраторыКорректировокНДССОнлайнДвижениями(ИмяРегистра);
		
		Если НЕ ДопустимыеРегистраторы.СодержитТип(ТипЗнч(Регистратор)) Тогда
			Отказ = Истина;
			ТекстОшибки = НСтр("ru='Документ ""%1"" не может формировать онлайн движения по регистру накопления ""%2"".
                                   |см. ПартионныйУчет.РегистраторыКорректировокНДССОнлайнДвижениями()'
                                   |;uk='Документ ""%1"" не може формувати онлайн рухи по регістру накопичення ""%2"".
                                   |див. ПартионныйУчет.РегистраторыКорректировокНДССОнлайндвижениями()'");
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, Регистратор, ИмяРегистра);
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры



#КонецОбласти



#Область РасчетПартийПроизводственныхЗатрат

Функция ДанныеДляПартийПроизводства(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ТекстСортировка = "
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура, Приоритет ВОЗР, ПериодПоступления, Регистратор, Назначение
		|";
	ТекстИндексы = "
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|";	
	ИсходныйТекстЗапроса =
		ТекстПартииПроизводстваИнициализация() + ";" // вт МатериалыИРаботыВПроизводстве, ПрошлыеПоступления
		+ ТекстОписаниеДанныхДляПартийПроизводства()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстОстаткиПартийПроизводства() // использует ПрошлыеПоступления
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПервичныеПартииПроизводства()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПервичныеПеремещенияПартийПроизводства()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПоступленияВПроизводство()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстПотребленияВПроизводстве()
		+ "ОБЪЕДИНИТЬ ВСЕ" + ТекстРеализацииРаботПрошлыхМесяцев() // использует ПрошлыеРеализации
		+ ТекстИндексы;
	МВТ = Новый МенеджерВременныхТаблиц;	
	ИсходныйЗапрос = Новый Запрос(СтрЗаменить(ИсходныйТекстЗапроса, "//ВоВременнуюТаблицу", ""));
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);	
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ИсходныйЗапрос.УстановитьПараметр("ИспользоватьПартионныйУчет", Константы.ИспользоватьПартионныйУчет.Получить());
	ИсходныйЗапрос.МенеджерВременныхТаблиц = МВТ;
	ИсходныйЗапрос.Выполнить();
	
	
	Запрос = Новый Запрос(ТекстОписаниеДанныхДляПартийПроизводства());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	ВременнаяТаблицаДанныхПоОтбору("Номенклатура", ТекстСортировка, РасчетныеПартии, МВТ);
	
	Возврат МВТ;
КонецФункции

Функция РасчетныеПартииПроизводства(ДанныеДляРасчета, Регистраторы, ВнутренниеДанные = Неопределено, Тест = Ложь)
	
	// Шаг 1: создаем буфер накопления рассчитанных партий
	Запрос = Новый Запрос(ТекстОписаниеДанныхДляПартийПроизводства());
	РасчетныеПартии = Запрос.Выполнить().Выгрузить();
	
	// Шаг 2: обсчитываем цепочки движений по передачам, возвратам, перемещениям, порчам, пересортицам и т.д.
	КонтекстЦепочек = ОписаниеЦепочек("Потребление, ПотреблениеАвто, Партия, Остаток, ОстатокСторно, Сторно, ПартияСторно, Перемещение, Списание, Дополнение, ВозвратСторно, Корректировка,
									|Прошлое, Возврат");
	
	ПоляПотреблений = "Организация, АналитикаУчетаНоменклатуры, Назначение";
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Потребление", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Партия", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Остаток", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Потребление", "Перемещение", ПоляПотреблений);
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "ПотреблениеАвто", "Организация, АналитикаУчетаНоменклатуры, ВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ПотреблениеАвто", "Партия", "Организация, АналитикаУчетаНоменклатуры, ВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ПотреблениеАвто", "Остаток", "Организация, АналитикаУчетаНоменклатуры, ВидЗапасов");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ПотреблениеАвто", "Перемещение", "Организация, АналитикаУчетаНоменклатуры, ВидЗапасов");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Корректировка", "ДокументПоступления, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Корректировка", "Остаток", "ДокументПоступления, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Корректировка", "Партия", "ДокументПоступления, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "ВозвратСторно", "ДокументИсточник, ДокументПоступления, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ВозвратСторно", "Остаток", "Регистратор, ДокументПоступления, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "ВозвратСторно", "Партия", "Регистратор, ДокументПоступления, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Возврат", "ДокументИсточник, АналитикаУчетаНоменклатуры, Организация");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Возврат", "Прошлое", "Регистратор, АналитикаУчетаНоменклатуры, Организация");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Возврат", "Потребление", "Регистратор, АналитикаУчетаНоменклатуры, Организация");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Списание", "Регистратор, ДокументПоступления, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Списание", "Партия", "Регистратор, ДокументПоступления, АналитикаУчетаНоменклатуры, ВидЗапасов, Организация");
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Сторно", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "ОстатокСторно", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "ПартияСторно", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "Остаток", ПоляПотреблений);
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Сторно", "Партия", ПоляПотреблений);
	
	ДобавитьОписаниеПриемника(КонтекстЦепочек, "Перемещение", "ДокументИсточник, АналитикаУчетаНоменклатуры");
	ДобавитьОписаниеИсточника(КонтекстЦепочек, "Перемещение", "Потребление", "Регистратор, КорАналитикаУчетаНоменклатуры");
	
	// Шаг 3: замена ложных партий на первичные партии в расчетных строках по результатам построение графа замен
	КонтекстДвижений = ОписаниеДвижений(
		"ПартииПроизводственныхЗатрат",
		"ПартииПроизводственныхЗатрат",
		ПереченьПолей(РасчетныеПартии.Колонки),
		ПоляПотреблений,
		"Количество, Стоимость, СтоимостьБезНДС, СтоимостьРегл, НДСРегл, ПостояннаяРазница, ВременнаяРазница",
		"Количество", "Количество", "ДокументИсточник", "Период"
		);
	КонтекстДвижений.Вставить("ЗаполнятьАналитикуПартий", Истина);
	ЦепочкиДвижений(КонтекстЦепочек, ДанныеДляРасчета);
	РассчитатьПартииПоЦепочкам(КонтекстДвижений, ДанныеДляРасчета, РасчетныеПартии, Регистраторы, Тест);
	ВнутренниеДанные = ДанныеДляРасчета;
	
	// Шаг 4: Удаляем нерассчитанные партии
	УдалитьНезаписываемыеСтроки(КонтекстДвижений.Контекст, РасчетныеПартии);
	
	Возврат РасчетныеПартии;
	
КонецФункции

Функция ТекстПартииПроизводстваИнициализация() // вт МатериалыИРаботыВПроизводстве, МатериалыИРаботыРегистраторы, ПрошлыеПоступления, ПрошлыеРеализации
	Возврат "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор КАК Регистратор,
		|	ДД.АналитикаУчетаНоменклатуры
		|ПОМЕСТИТЬ
		|	МатериалыИРаботыВПроизводстве
		|ИЗ
		|	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|;
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор КАК Регистратор
		|ПОМЕСТИТЬ
		|	МатериалыИРаботыРегистраторы
		|ИЗ
		|	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|;
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.ДокументПоступления КАК Ссылка,
		|	ДД.АналитикаУчетаНоменклатуры.Склад КАК Склад,
		|	МАКСИМУМ(Периодика.Регистратор) КАК Регистратор,
		|	МАКСИМУМ(Периодика.Период) КАК Период
		|ПОМЕСТИТЬ
		|	ПрошлыеПоступления
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииПроизводственныхЗатрат КАК Периодика
		|		ПО Периодика.Период < &НачалоПериода
		|		И Периодика.ДокументПоступления = ДД.ДокументПоступления
		|		И Периодика.АналитикаУчетаНоменклатуры.Склад = ДД.АналитикаУчетаНоменклатуры.Склад
		|ГДЕ
		|	ДД.ДокументПоступления <> НЕОПРЕДЕЛЕНО
		|	И Периодика.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|СГРУППИРОВАТЬ ПО
		|	ДД.ДокументПоступления,
		|	ДД.АналитикаУчетаНоменклатуры.Склад
		|;
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Корректировка.ДокументОснование КАК ДокументРеализации,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
		|ПОМЕСТИТЬ
		|	ПрошлыеРеализации
		|ИЗ
		|	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК Корректировка
		|		ПО Корректировка.Ссылка = ДД.Регистратор
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.МатериалыИРаботыВПроизводстве КАК Расход
		|		ПО Расход.Период < &НачалоПериода
		|		И Расход.Регистратор = Корректировка.ДокументОснование
		|		И Расход.АналитикаУчетаНоменклатуры = ДД.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И ДД.Количество < 0
		|";
КонецФункции

Функция ТекстОписаниеДанныхДляПартийПроизводства()
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	ВЫРАЗИТЬ("""" КАК СТРОКА(80)) КАК ЗапросИсточник,
		|	0 КАК Приоритет,
		|	""ХХХХХХХХХХХХХХХХ"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК РазделУчета,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	0. КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ПериодПоступления,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК КорРазделУчета,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ДД.ДокументИсточник,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДД.ПодразделениеРасходов,
		|	0. КАК НомерГруппыЗатрат,
		|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура
		|//ВоВременнуюТаблицу ПОМЕСТИТЬ ИсходныеДанные
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|";
КонецФункции

Функция ТекстОстаткиПартийПроизводства() // использует ПрошлыеПоступления
	// передачи материалов в производство и в переработку, возвраты материалов из производства и от переработчика
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстОстаткиПартийПроизводства"" КАК ЗапросИсточник,
		|	(ВЫБОР
		|		КОГДА ДД.КоличествоОстаток < 0 ТОГДА 5
		|		ИНАЧЕ 10 КОНЕЦ) КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА ДД.КоличествоОстаток < 0 ТОГДА ""ОстатокСторно""
		|		ИНАЧЕ ""Остаток"" КОНЕЦ) КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ЕСТЬNULL(Периодика.Период, &НачалоПериода) КАК Период,
		|	ЕСТЬNULL(Периодика.Регистратор, ДД.ДокументПоступления) КАК Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.КоличествоОстаток КАК Количество,
		|	ДД.СтоимостьОстаток КАК Стоимость,
		|	ДД.СтоимостьБезНДСОстаток КАК СтоимостьБезНДС,
		|	ДД.СтоимостьРеглОстаток КАК СтоимостьРегл,
		|	ДД.НДСРеглОстаток КАК НДСРегл,
		|	ДД.ПостояннаяРазницаОстаток КАК ПостояннаяРазница,
		|	ДД.ВременнаяРазницаОстаток КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	ЕСТЬNULL(Периодика.Период, &НачалоПериода) КАК ПериодПоступления,
		|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка) КАК КорРазделУчета,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение,
		|	ЕСТЬNULL(ДД.ВидЗапасов.Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)) КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	0. КАК НомерГруппыЗатрат,
		|	Аналитика.Номенклатура
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат.Остатки(&НачалоПериода, Организация В (&МассивОрганизаций)) КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ ПрошлыеПоступления КАК Периодика
		|		ПО Периодика.Ссылка = ДД.ДокументПоступления
		|		И Периодика.Склад = ДД.АналитикаУчетаНоменклатуры.Склад
		|ГДЕ
		|	ДД.КоличествоОстаток <> 0
		|";
КонецФункции

Функция ТекстПоступленияВПроизводство()
	// передачи материалов в производство и в переработку, возвраты материалов из производства и от переработчика
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПоступленияВПроизводство"" КАК ЗапросИсточник,
		|	(ВЫБОР
		|		КОГДА ДД.Количество < 0 ТОГДА 5
		|		ИНАЧЕ 10 КОНЕЦ) КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА ДД.Количество < 0 ТОГДА ""ВозвратСторно""
		|		ИНАЧЕ ""Партия"" КОНЕЦ) КАК ТипЗаписи,
		|	(ВЫБОР
		|		КОГДА ДД.Количество < 0 ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	ДД.КорАналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	(ВЫБОР
		|		КОГДА ДД.КорВидЗапасов <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА ДД.КорВидЗапасов
		|		ИНАЧЕ ДД.ВидЗапасов КОНЕЦ) КАК ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	(ВЫБОР
		|		КОГДА ДД.Количество < 0 ТОГДА &НачалоПериода
		|		ИНАЧЕ ДД.Период КОНЕЦ) КАК ПериодПоступления,
		|	ДД.ХозяйственнаяОперация,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК КорРазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ЕСТЬNULL(ДД.КорВидЗапасов.Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)) КАК Назначение,
		|	ДД.ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	0. КАК НомерГруппыЗатрат,
		|	Аналитика.Номенклатура
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ МатериалыИРаботыВПроизводстве КАК Затраты
		|		ПО Затраты.Регистратор = ДД.Регистратор
		|		И Затраты.АналитикаУчетаНоменклатуры = ДД.КорАналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
		|		ПО СпрВидыЗапасов.Ссылка = ДД.ВидЗапасов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И Не ДД.Первичное
		|	И СпрВидыЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
		|	И &ИспользоватьПартионныйУчет
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА ДД.Количество < 0 ТОГДА 5
		|		ИНАЧЕ 10 КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.Количество < 0 ТОГДА ""ВозвратСторно""
		|		ИНАЧЕ ""Партия"" КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА ДД.Количество < 0 ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.КорАналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	(ВЫБОР
		|		КОГДА ДД.КорВидЗапасов <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА ДД.КорВидЗапасов
		|		ИНАЧЕ ДД.ВидЗапасов КОНЕЦ),
		|	ДД.АналитикаУчетаПартий,
		|	(ВЫБОР
		|		КОГДА ДД.Количество < 0 ТОГДА &НачалоПериода
		|		ИНАЧЕ ДД.Период КОНЕЦ),
		|	ДД.ХозяйственнаяОперация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов,
		|	ДД.НалоговоеНазначение,
		|	ЕСТЬNULL(ДД.КорВидЗапасов.Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)),
		|	ДД.ДокументИсточник,
		|	Аналитика.Номенклатура
		|";
КонецФункции

Функция ТекстПервичныеПартииПроизводства()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПервичныеПартииПроизводства"" КАК ЗапросИсточник,
		|	(ВЫБОР
		|		КОГДА ДД.Количество < 0 ТОГДА 5
		|		ИНАЧЕ 10 КОНЕЦ) КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.Ссылка ЕСТЬ NULL ТОГДА ""Корректировка""
		|		КОГДА ДД.Количество < 0 ТОГДА ""ПартияСторно""
		|		ИНАЧЕ ""Партия"" КОНЕЦ) КАК ТипЗаписи,
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.Ссылка ЕСТЬ NULL ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ) КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.Ссылка ЕСТЬ NULL ТОГДА Поступление.Дата
		|		ИНАЧЕ ДД.Период КОНЕЦ) КАК ПериодПоступления,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	ЕСТЬNULL(ДД.ВидЗапасов.Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)) КАК Назначение,
		|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	0. КАК НомерГруппыЗатрат,
		|	Аналитика.Номенклатура
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаПоступления КАК Корректировка
		|		ПО Корректировка.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК Поступление
		|		ПО Поступление.Ссылка = ДД.ДокументПоступления
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И (ДД.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.КорректировкаПоступления
		|		ИЛИ ДД.Регистратор ССЫЛКА Документ.ВводОстатков
		|		)
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА ДД.Количество < 0 ТОГДА 5
		|		ИНАЧЕ 10 КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.Ссылка ЕСТЬ NULL ТОГДА ""Корректировка""
		|		КОГДА ДД.Количество < 0 ТОГДА ""ПартияСторно""
		|		ИНАЧЕ ""Партия"" КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.Ссылка ЕСТЬ NULL ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЕСТЬNULL(ДД.ВидЗапасов.Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)),
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.Ссылка ЕСТЬ NULL ТОГДА Поступление.Дата
		|		ИНАЧЕ ДД.Период КОНЕЦ),
		|	ДД.АналитикаУчетаПартий,
		|	Аналитика.Номенклатура
		|";
КонецФункции

Функция ТекстПервичныеПеремещенияПартийПроизводства()
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПервичныеПеремещенияПартийПроизводства"" КАК ЗапросИсточник,
		|	90 КАК Приоритет,
		|	""Перемещение"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ИСТИНА КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	НЕОПРЕДЕЛЕНО КАК НалоговоеНазначение,
		|	ЕСТЬNULL(ДД.ВидЗапасов.Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)) КАК Назначение,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	0. КАК НомерГруппыЗатрат,
		|	Аналитика.Номенклатура
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И ДД.Регистратор ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ЕСТЬNULL(ДД.ВидЗапасов.Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)),
		|	ДД.АналитикаУчетаПартий,
		|	Аналитика.Номенклатура
		|";
КонецФункции

Функция ТекстПотребленияВПроизводстве()
	// распределение материалов на выпуск, списание
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстПотребленияВПроизводстве"" КАК ЗапросИсточник,
		|	(ВЫБОР
		|		КОГДА ДД.Количество < 0 ТОГДА 35
		|		ИНАЧЕ 40 КОНЕЦ) КАК Приоритет,
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.Ссылка ЕСТЬ NULL И ДД.Количество < 0
		|			ТОГДА ""Возврат""
		|		КОГДА ДД.Количество < 0 ТОГДА ""Сторно""
		|		ИНАЧЕ ""Потребление"" КОНЕЦ) КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	СУММА(ДД.Количество) КАК Количество,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЛОЖЬ КАК Первичное,
		|	ЛОЖЬ КАК СохранятьРегл,
		|	(ВЫБОР
		|		КОГДА ДД.Количество < 0 ТОГДА ДОБАВИТЬКДАТЕ(&НачалоПериода, СЕКУНДА, -1)
		|		ИНАЧЕ ДД.Период КОНЕЦ) КАК ПериодПоступления,
		|	(ВЫБОР
		|		КОГДА НЕ Получатель.КлючАналитики ЕСТЬ NULL
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров)
		|		КОГДА ДД.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваров)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КОНЕЦ) КАК ХозяйственнаяОперация,
		|	(ВЫБОР
		|		КОГДА НЕ Получатель.КлючАналитики ЕСТЬ NULL
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК КорРазделУчета,
		|	(ВЫБОР КОГДА НЕ Передача.Ссылка ЕСТЬ NULL ТОГДА ДД.АналитикаУчетаНоменклатуры
		|		ИНАЧЕ ЕСТЬNULL(Получатель.КлючАналитики, ДД.АналитикаУчетаПродукции) КОНЕЦ) КАК КорАналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ДД.Назначение,
		|	ЕСТЬNULL(Корректировка.ДокументОснование, НЕОПРЕДЕЛЕНО) КАК ДокументИсточник,
		|	ДД.СтатьяРасходов КАК СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДД.ПодразделениеПолучатель КАК ПодразделениеРасходов,
		|	0. КАК НомерГруппыЗатрат,
		|	ДД.Номенклатура
		|ИЗ
		|	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.КлючАналитики = ДД.АналитикаУчетаНоменклатуры
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Получатель
		|		ПО Получатель.Номенклатура = Аналитика.Номенклатура
		|		И Получатель.Характеристика = Аналитика.Характеристика
		|		И Получатель.Серия = Аналитика.Серия
		|		И Получатель.Склад = ДД.ПодразделениеПолучатель
		|		И ДД.ПодразделениеПолучатель <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК Передача
		|		ПО Передача.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации КАК Корректировка
		|		ПО Корректировка.Ссылка = ДД.Регистратор
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|СГРУППИРОВАТЬ ПО
		|	(ВЫБОР
		|		КОГДА ДД.Количество < 0 ТОГДА 35
		|		ИНАЧЕ 40 КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА НЕ Корректировка.Ссылка ЕСТЬ NULL И ДД.Количество < 0
		|			ТОГДА ""Возврат""
		|		КОГДА ДД.Количество < 0 ТОГДА ""Сторно""
		|		ИНАЧЕ ""Потребление"" КОНЕЦ),
		|	ДД.ВидДвижения,
		|	(ВЫБОР
		|		КОГДА ДД.Количество < 0 ТОГДА ДОБАВИТЬКДАТЕ(&НачалоПериода, СЕКУНДА, -1)
		|		ИНАЧЕ ДД.Период КОНЕЦ),
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	(ВЫБОР
		|		КОГДА НЕ Получатель.КлючАналитики ЕСТЬ NULL
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеремещениеТоваров)
		|		КОГДА ДД.СтатьяРасходов <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваров)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КОНЕЦ),
		|	(ВЫБОР
		|		КОГДА НЕ Получатель.КлючАналитики ЕСТЬ NULL
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ),
		|	(ВЫБОР КОГДА НЕ Передача.Ссылка ЕСТЬ NULL ТОГДА ДД.АналитикаУчетаНоменклатуры
		|		ИНАЧЕ ЕСТЬNULL(Получатель.КлючАналитики, ДД.АналитикаУчетаПродукции) КОНЕЦ),
		|	ДД.НалоговоеНазначение,
		|	ДД.Назначение,
		|	ЕСТЬNULL(Корректировка.ДокументОснование, НЕОПРЕДЕЛЕНО),
		|	ДД.СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.ПодразделениеПолучатель,
		|	ДД.Номенклатура
		|";
КонецФункции

Функция ТекстРеализацииРаботПрошлыхМесяцев() // использует ПрошлыеРеализации
	Возврат "
		|ВЫБРАТЬ
		|	""ТекстРеализацииРаботПрошлыхМесяцев"" КАК ЗапросИсточник,
		|	10 КАК Приоритет,
		|	""Прошлое"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ДД.ВидДвижения КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	СУММА(ДД.Количество) КАК Количество,
		|	СУММА(ДД.Стоимость) КАК Стоимость,
		|	СУММА(ДД.СтоимостьБезНДС) КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	СУММА(ДД.ПостояннаяРазница) КАК ПостояннаяРазница,
		|	СУММА(ДД.ВременнаяРазница) КАК ВременнаяРазница,
		|	ИСТИНА КАК Первичное,
		|	ИСТИНА КАК СохранятьРегл,
		|	ДД.Период КАК ПериодПоступления,
		|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
		|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
		|	ДД.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
		|	ДД.ВидЗапасов КАК КорВидЗапасов,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаРегистратора,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение,
		|	ЕСТЬNULL(ДД.ВидЗапасов.Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)) КАК Назначение,
		|	ДД.Регистратор КАК ДокументИсточник,
		|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеРасходов,
		|	0. КАК НомерГруппыЗатрат,
		|	Аналитика.Номенклатура
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
		|		ПО Аналитика.Ссылка = ДД.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПрошлыеРеализации КАК Прошлые
		|		ПО ДД.Регистратор = Прошлые.ДокументРеализации
		|		И ДД.АналитикаУчетаНоменклатуры = Прошлые.АналитикаУчетаНоменклатуры
		|ГДЕ
		|	ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|СГРУППИРОВАТЬ ПО
		|	ДД.ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.ДокументПоступления,
		|	ДД.ВидЗапасов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение,
		|	ДД.НалоговоеНазначение,
		|	ЕСТЬNULL(ДД.ВидЗапасов.Назначение, ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)),
		|	Аналитика.Номенклатура
		|";
КонецФункции

#КонецОбласти


#Область РасчетПриходыПартийПрочихРасходов

Функция ДанныеДляПартийПрочихРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	ТекстСортировка = "";
	ИсходныйТекстЗапроса =
		ТекстОписаниеДанныхДляПартийПрочихРасходов()
		+ ТекстСортировка;
	ИсходныйЗапрос = Новый Запрос(ИсходныйТекстЗапроса);
	ИсходныйЗапрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ИсходныйЗапрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	ИсходныйЗапрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	ДанныеДляРасчета = ИсходныйЗапрос.Выполнить().Выгрузить();
	ДанныеДляРасчета.Сортировать("Регистратор", Новый СравнениеЗначений);
	
	Для Каждого Строка Из ДанныеДляРасчета Цикл
		Строка.АналитикаУчетаПартий =
			АналитикаУчетаПартий(Строка.АналитикаУчетаПартий, Строка.НалоговоеНазначениеПартии, Строка.НалоговоеНазначение);	
	КонецЦикла;
	
	Возврат ДанныеДляРасчета;
КонецФункции

Функция ТекстОписаниеДанныхДляПартийПрочихРасходов()
	Возврат "
		|ВЫБРАТЬ ПЕРВЫЕ 0
		|	0 КАК Приоритет,
		|	""ХХХХХХХХХХХХХХХХ"" КАК ТипЗаписи,
		|	ЛОЖЬ КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
		|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
		|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначениеПартии,
		|	0. КАК Стоимость,
		|	0. КАК СтоимостьБезНДС,
		|	0. КАК СтоимостьРегл,
		|	0. КАК НДСРегл,
		|	0. КАК ПостояннаяРазница,
		|	0. КАК ВременнаяРазница,
		|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) КАК НалоговоеНазначение 
		|";
КонецФункции

Функция ТекстПоступленияПартийПрочихРасходовИзПартий()
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Партия"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ВЫБОР
		|		КОГДА НЕ Потребление.Подразделение ЕСТЬ NULL
		|			ТОГДА Потребление.Подразделение
		|		ИНАЧЕ Сторно.Подразделение
		|	КОНЕЦ КАК Подразделение,
		|	ДД.СтатьяРасходовСписания КАК СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.ДокументПоступления КАК ДокументПоступленияРасходов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	0 КАК Стоимость,
		|	0 КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение 
		|ИЗ
		|	РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров КАК Потребление
		|		ПО Потребление.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров КАК Сторно
		|		ПО Сторно.Ссылка = ДД.Регистратор
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статья
		|		ПО Статья.Ссылка = ДД.СтатьяРасходовСписания
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|   И Статья.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
		|	И ДД.НДСРегл <> 0
		|	И ДД.АналитикаУчетаПартий <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
		|	И ДД.Активность
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ВЫБОР
		|		КОГДА НЕ Потребление.Подразделение ЕСТЬ NULL
		|			ТОГДА Потребление.Подразделение
		|		ИНАЧЕ Сторно.Подразделение
		|	КОНЕЦ,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДД.ДокументПоступления,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.НалоговоеНазначение
		|";
        
КонецФункции

Функция ТекстПоступленияПартийПрочихРасходовИзДопРасходов()
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Партия"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ВЫБОР
		|		КОГДА НЕ Потребление.Подразделение ЕСТЬ NULL
		|			ТОГДА Потребление.Подразделение
		|		ИНАЧЕ Сторно.Подразделение
		|	КОНЕЦ КАК Подразделение,
		|	ДД.СтатьяРасходовСписания КАК СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	0 КАК Стоимость,
		|	0 КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение
		|ИЗ
		|	РегистрНакопления.ПартииРасходовНаСебестоимостьТоваров КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров КАК Потребление
		|		ПО Потребление.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров КАК Сторно
		|		ПО Сторно.Ссылка = ДД.Регистратор
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статья
		|		ПО Статья.Ссылка = ДД.СтатьяРасходовСписания
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|   И Статья.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
		|	И ДД.НДСРегл <> 0
		|	И ДД.АналитикаУчетаПартий <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
		|	И ДД.Активность
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ВЫБОР
		|		КОГДА НЕ Потребление.Подразделение ЕСТЬ NULL
		|			ТОГДА Потребление.Подразделение
		|		ИНАЧЕ Сторно.Подразделение
		|	КОНЕЦ,
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДД.ДокументПоступленияРасходов,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.НалоговоеНазначение 
		|";
        
КонецФункции

Функция ТекстПоступленияПартийПрочихРасходовИзЗатратНаВыпуск()
	Возврат "
		|ВЫБРАТЬ
		|	10 КАК Приоритет,
		|	""Партия"" КАК ТипЗаписи,
		|	ИСТИНА КАК РасчетЗавершен,
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ЕСТЬNULL(Потребление.Подразделение, Сторно.Подразделение) КАК Подразделение,
		|	ДД.СтатьяРасходовСписания КАК СтатьяРасходов,
		|	ДД.АналитикаРасходов,
		|	ДД.ДокументПоступления,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ДД.АналитикаУчетаПартий.НалоговоеНазначение КАК НалоговоеНазначениеПартии,
		|	0 КАК Стоимость,
		|	0 КАК СтоимостьБезНДС,
		|	СУММА(ДД.СтоимостьРегл) КАК СтоимостьРегл,
		|	СУММА(ДД.НДСРегл) КАК НДСРегл,
		|	0 КАК ПостояннаяРазница,
		|	0 КАК ВременнаяРазница,
		|	ДД.НалоговоеНазначение КАК НалоговоеНазначение
		|ИЗ
		|	РегистрНакопления.ПартииЗатратНаВыпуск КАК ДД
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров КАК Потребление
		|		ПО Потребление.Ссылка = ДД.Регистратор
		|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров КАК Сторно
		|		ПО Сторно.Ссылка = ДД.Регистратор
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статья
		|		ПО Статья.Ссылка = ДД.СтатьяРасходовСписания
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|   И Статья.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
		|	И ДД.НДСРегл <> 0
		|	И ДД.АналитикаУчетаПартий <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка)
		|СГРУППИРОВАТЬ ПО
		|	ДД.Период,
		|	ДД.Регистратор,
		|	ДД.Организация,
		|	ЕСТЬNULL(Потребление.Подразделение, Сторно.Подразделение),
		|	ДД.СтатьяРасходовСписания,
		|	ДД.АналитикаРасходов,
		|	ДД.ДокументПоступления,
		|	ДД.АналитикаУчетаПартий,
		|	ДД.АналитикаУчетаНоменклатуры,
		|	ДД.НалоговоеНазначение
		|";
        
КонецФункции

#КонецОбласти

// Контекстные методы заполнения новой расчетной партии по строке расхода и строке прихода
#Область ЗаполнитьРасчетнуюПартию

// Используется для ВСЕХ вызовов заполнения расчетной партии
Процедура ЗаполнитьРасчетнуюПартию(Контекст, РасчетнаяПартия, Расход, Приход)
	Если Контекст = "ПартииТоваровОрганизаций" Тогда
		ЗаполнитьПартиюТоваров(РасчетнаяПартия, Расход, Приход);
		
	ИначеЕсли Контекст = "ПартииТоваровПереданныеНаКомиссию" Тогда
		ЗаполнитьПартиюПереданную(РасчетнаяПартия, Расход, Приход);
		
	ИначеЕсли Контекст = "ПартииЗатратНаВыпуск" Тогда
		ЗаполнитьПартиюЗатрат(РасчетнаяПартия, Расход, Приход);
		
	ИначеЕсли Контекст = "ЗаказыПоставщикам" Тогда
		ЗаполнитьЗаказВПриходе(РасчетнаяПартия, Расход, Приход);
		
	ИначеЕсли Контекст = "ПартииПрочихРасходов" Тогда
		ЗаполнитьПартиюПрочих(РасчетнаяПартия, Расход, Приход);
		
	ИначеЕсли Контекст = "ПартииРасходовНаСебестоимостьТоваровПриход" Тогда
		ЗаполнитьПриходПартииРасходов(РасчетнаяПартия, Расход, Приход);
		
	ИначеЕсли Контекст = "ПартииРасходовНаСебестоимостьТоваров" Тогда
		ЗаполнитьПартиюРасходов(РасчетнаяПартия, Расход, Приход);
		
		
	ИначеЕсли Контекст = "ПартииПроизводственныхЗатрат" Тогда
		ЗаполнитьПартиюПроизводственныхЗатрат(РасчетнаяПартия, Расход, Приход);
		
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьПартиюТоваров(РасчетнаяПартия, Расход, Приход) // ПартииТоваровОрганизаций
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	
	Если Расход.ТипЗаписи = "Корректировка" Тогда
		Если Расход.ВидДвижения = ВидДвиженияНакопления.Приход Тогда
			Приход.Количество = Приход.Количество + Расход.Количество;
			Приход.Стоимость = Приход.Стоимость + Расход.Стоимость;
			Приход.СтоимостьБезНДС = Приход.СтоимостьБезНДС + Расход.СтоимостьБезНДС;
			Приход.СтоимостьРегл = Приход.СтоимостьРегл + Расход.СтоимостьРегл;
			Приход.НДСРегл = Приход.НДСРегл + Расход.НДСРегл;
			Приход.ПостояннаяРазница = Приход.ПостояннаяРазница + Расход.ПостояннаяРазница;
			Приход.ВременнаяРазница = Приход.ВременнаяРазница + Расход.ВременнаяРазница;
		Иначе
			РасчетнаяПартия.Стоимость = Мин(Расход.Стоимость, Приход.Стоимость);
			РасчетнаяПартия.СтоимостьБезНДС = Мин(Расход.СтоимостьБезНДС, Приход.СтоимостьБезНДС);
			РасчетнаяПартия.СтоимостьРегл = Мин(Расход.СтоимостьРегл, Приход.СтоимостьРегл);
			РасчетнаяПартия.НДСРегл = Мин(Расход.НДСРегл, Приход.НДСРегл);
			РасчетнаяПартия.ПостояннаяРазница = Мин(Расход.ПостояннаяРазница, Приход.ПостояннаяРазница);
			РасчетнаяПартия.ВременнаяРазница = Мин(Расход.ВременнаяРазница, Приход.ВременнаяРазница);

			Приход.Количество = Приход.Количество - Расход.Количество;
			Приход.Стоимость = Приход.Стоимость - Мин(Расход.Стоимость, Приход.Стоимость);
			Приход.СтоимостьБезНДС = Приход.СтоимостьБезНДС - Мин(Расход.СтоимостьБезНДС, Приход.СтоимостьБезНДС);
			Приход.СтоимостьРегл = Приход.СтоимостьРегл - Мин(Расход.СтоимостьРегл, Приход.СтоимостьРегл);
			Приход.НДСРегл = Приход.НДСРегл - Мин(Расход.НДСРегл, Приход.НДСРегл);
			Приход.ПостояннаяРазница = Приход.ПостояннаяРазница - Мин(Расход.ПостояннаяРазница, Приход.ПостояннаяРазница);
			Приход.ВременнаяРазница = Приход.ВременнаяРазница - Мин(Расход.ВременнаяРазница, Приход.ВременнаяРазница);
		КонецЕсли;
		Расход.Стоимость = 0;
		Расход.СтоимостьБезНДС = 0;
		Расход.СтоимостьРегл = 0;
		Расход.НДСРегл = 0;
		Расход.ПостояннаяРазница = 0;
		Расход.ВременнаяРазница = 0;
		Расход.Количество = 0;
        
	Иначе	
		// расчетная партия заполняется на наибольшее общее вычитаемое
		Если Расход.ТипЗаписи = "Материал" И Приход.Количество <= Расход.Знаменатель Тогда
			Приход.Знаменатель = ?(Приход.Знаменатель = 0., Приход.Количество, Приход.Знаменатель);
			КоличествоСписания = Приход.Знаменатель / Расход.Знаменатель * Расход.Количество;
			РасчетнаяПартия.Знаменатель = Приход.Знаменатель;
			Расход.Знаменатель = Расход.Знаменатель - Приход.Знаменатель;
		Иначе
			Приход.Знаменатель = 0.;
			КоличествоСписания = Мин(Расход.Количество, Приход.Количество);
		КонецЕсли;
		РасходБазис = ?(Расход.Количество <> 0, КоличествоСписания / Расход.Количество, 0);
		ПриходБазис = ?(Приход.Количество <> 0, КоличествоСписания / Приход.Количество, 0);
		
		РасходСтоимостьРегл = Окр(РасходБазис * Расход.СтоимостьРегл, 2);
		РасходНДСРегл = Окр(РасходБазис * Расход.НДСРегл, 2);
		РасходПостояннаяРазница = Окр(РасходБазис * Расход.ПостояннаяРазница, 2);
		РасходВременнаяРазница = Окр(РасходБазис * Расход.ВременнаяРазница, 2);
		
		ПриходСтоимостьРегл = Окр(ПриходБазис * Приход.СтоимостьРегл, 2);
		ПриходНДСРегл = Окр(ПриходБазис * Приход.НДСРегл, 2);
		ПриходПостояннаяРазница = Окр(ПриходБазис * Приход.ПостояннаяРазница, 2);
		ПриходВременнаяРазница = Окр(ПриходБазис * Приход.ВременнаяРазница, 2);
		
		// заполняем показатели расчетной партии
		РасчетнаяПартия.Стоимость = Окр(ПриходБазис * Приход.Стоимость, 2);
		РасчетнаяПартия.СтоимостьБезНДС = Окр(ПриходБазис * Приход.СтоимостьБезНДС, 2);
		РасчетнаяПартия.Количество = Окр(КоличествоСписания, 3);
		
		Если РасчетнаяПартия.СохранятьРегл Тогда
			РасчетнаяПартия.СтоимостьРегл = РасходСтоимостьРегл;
			РасчетнаяПартия.НДСРегл = РасходНДСРегл;
			РасчетнаяПартия.ПостояннаяРазница = РасходПостояннаяРазница;
			РасчетнаяПартия.ВременнаяРазница = РасходВременнаяРазница;
		Иначе
			Если РасчетнаяПартия.ТипЗаписи = "Перемещение"
			 И ТипЗнч(РасчетнаяПартия.Регистратор) = Тип("ДокументСсылка.ПересортицаТоваров")
			 И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Приход.НалоговоеНазначение, "ВидДеятельностиНДС") = Перечисления.ВидыДеятельностиНДС.Необлагаемая Тогда
				РасчетнаяПартия.СтоимостьРегл = ПриходСтоимостьРегл + ПриходНДСРегл;
				РасчетнаяПартия.НДСРегл = 0;
		 	Иначе
			 	РасчетнаяПартия.СтоимостьРегл = ПриходСтоимостьРегл;
				РасчетнаяПартия.НДСРегл = ПриходНДСРегл;
			КонецЕсли;
			РасчетнаяПартия.ПостояннаяРазница = ПриходПостояннаяРазница;
			РасчетнаяПартия.ВременнаяРазница = ПриходВременнаяРазница;
		КонецЕсли;
		
		// корректируем базу расчета в потреблении
		Расход.Стоимость = Расход.Стоимость - Окр(РасходБазис * Расход.Стоимость, 2);
		Расход.СтоимостьБезНДС = Расход.СтоимостьБезНДС - Окр(РасходБазис * Расход.СтоимостьБезНДС, 2);
		Расход.СтоимостьРегл = Расход.СтоимостьРегл - РасходСтоимостьРегл;
		Расход.НДСРегл = Расход.НДСРегл - РасходНДСРегл;
		Расход.ПостояннаяРазница = Расход.ПостояннаяРазница - РасходПостояннаяРазница;
		Расход.ВременнаяРазница = Расход.ВременнаяРазница - РасходВременнаяРазница;
		Расход.Количество = Расход.Количество - РасчетнаяПартия.Количество;
		
		// корректируем базу расчета в приходе
		Если НЕ (Расход.ТипЗаписи = "Перемещение"
		 И Расход.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиентуРеглУчет) Тогда
			Приход.Стоимость = Приход.Стоимость - РасчетнаяПартия.Стоимость;
			Приход.СтоимостьБезНДС = Приход.СтоимостьБезНДС - РасчетнаяПартия.СтоимостьБезНДС;
			Приход.СтоимостьРегл = Приход.СтоимостьРегл - ПриходСтоимостьРегл;
			Приход.НДСРегл = Приход.НДСРегл - ПриходНДСРегл;
			Приход.ПостояннаяРазница = Приход.ПостояннаяРазница - ПриходПостояннаяРазница;
			Приход.ВременнаяРазница = Приход.ВременнаяРазница - ПриходВременнаяРазница;
			Приход.Количество = Приход.Количество - РасчетнаяПартия.Количество;
		КонецЕсли;
	
		// Заполняем партионную идентификацию в расчетной партии
		Если Не ЗначениеЗаполнено(РасчетнаяПартия.ДокументПоступления)
		 ИЛИ Не ЗначениеЗаполнено(Расход.РазделУчета)
		 ИЛИ Расход.ТипЗаписи = "Потребление" Тогда
			РасчетнаяПартия.ДокументПоступления = Приход.ДокументПоступления;
			Если (РасчетнаяПартия.ТипЗаписи <> "Сторно") Тогда
				РасчетнаяПартия.ПериодПоступления = Приход.ПериодПоступления;
			КонецЕсли;
		КонецЕсли;
		Если Приход.ТипЗаписи = "Возврат"
		 ИЛИ Приход.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию Тогда
			РасчетнаяПартия.ДокументИсточник = Приход.ДокументИсточник;
		КонецЕсли;
		Если Приход.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты
		 И Расход.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты Тогда
			РасчетнаяПартия.ДокументИсточник = Приход.ДокументИсточник;
		КонецЕсли;
		Если РасчетнаяПартия.ТипЗаписи = "Сторно"
		 И (Приход.ТипЗаписи = "Потребление" ИЛИ Приход.ТипЗаписи = "ВозвратКомиссия" ИЛИ Приход.ТипЗаписи = "Перемещение")
		 И (Приход.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты
			ИЛИ Приход.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию) Тогда
			РасчетнаяПартия.ДокументИсточник = Приход.ДокументИсточник;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(РасчетнаяПартия.ДокументИсточник) Тогда
			РасчетнаяПартия.ДокументИсточник = Приход.Регистратор;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(РасчетнаяПартия.ВидЗапасов) Тогда
			РасчетнаяПартия.ВидЗапасов = Приход.ВидЗапасов;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(РасчетнаяПартия.КорВидЗапасов) И РасчетнаяПартия.ТипЗаписи <> "Перемещение" Тогда
			РасчетнаяПартия.КорВидЗапасов = Приход.ВидЗапасов;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(РасчетнаяПартия.АналитикаУчетаПартий) Тогда
			Если (РасчетнаяПартия.ВидДвижения = ВидДвиженияНакопления.Приход ИЛИ РасчетнаяПартия.ТипЗаписи = "Сторно")
			Тогда
				Если РасчетнаяПартия.ТипЗаписи = "Сторно" Тогда
					РасчетнаяПартия.АналитикаУчетаПартий      = Приход.АналитикаУчетаПартий;
					РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначениеПартии;
				ИначеЕсли РасчетнаяПартия.ТипЗаписи = "Перемещение" И Расход.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию Тогда 
					РасчетнаяПартия.АналитикаУчетаПартий      = Приход.АналитикаУчетаПартий;
					РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначениеПартии;
				Иначе
					РасчетнаяПартия.АналитикаУчетаПартий =
						АналитикаУчетаПартий(Приход.АналитикаУчетаПартий, Приход.НалоговоеНазначениеПартии, Приход.НалоговоеНазначение);
					Если ЗначениеЗаполнено(Приход.НалоговоеНазначение) Тогда
						РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначение;
					Иначе
						РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначениеПартии;
					КонецЕсли;
				КонецЕсли; 
			Иначе
				РасчетнаяПартия.АналитикаУчетаПартий = Приход.АналитикаУчетаПартий;
				РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначениеПартии;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	// По результатам партионной идентификации определяем завершенность расчета
	РасчетнаяПартия.РасчетЗавершен = Приход.РасчетЗавершен;
КонецПроцедуры

Процедура ЗаполнитьПартиюПереданную(РасчетнаяПартия, Расход, Приход) // ПартииТоваровПереданныеНаКомиссию
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	
	Если Расход.ТипЗаписи = "Возврат" Тогда
		Приход.Количество = Приход.Количество - Расход.Количество;
		Приход.Стоимость = Приход.Стоимость - Расход.Стоимость;
		Приход.СтоимостьБезНДС = Приход.СтоимостьБезНДС - Расход.СтоимостьБезНДС;
		Приход.СтоимостьРегл = Приход.СтоимостьРегл - Расход.СтоимостьРегл;
		Приход.НДСРегл = Приход.НДСРегл - Расход.НДСРегл;
		Приход.ПостояннаяРазница = Приход.ПостояннаяРазница - Расход.ПостояннаяРазница;
		Приход.ВременнаяРазница = Приход.ВременнаяРазница - Расход.ВременнаяРазница;
		
		Расход.Количество = 0;
		Расход.Стоимость = 0;
		Расход.СтоимостьБезНДС = 0;
		Расход.СтоимостьРегл = 0;
		Расход.НДСРегл = 0;
		Расход.ПостояннаяРазница = 0;
		Расход.ВременнаяРазница = 0;
	Иначе	
		Если Расход.Количество = 0 ИЛИ Приход.Количество = 0 Тогда
			Возврат;
		КонецЕсли;
	
		// расчетная партия заполняется на наибольшее общее вычитаемое
		КоличествоСписания = Мин(Расход.Количество, Приход.Количество);
		
		ПотреблениеСтоимость = Окр(КоличествоСписания * Расход.Стоимость / Расход.Количество, 2);
		ПотреблениеСтоимостьБезНДС = Окр(КоличествоСписания * Расход.СтоимостьБезНДС / Расход.Количество, 2);
		ПотреблениеСтоимостьРегл = Окр(КоличествоСписания * Расход.СтоимостьРегл / Расход.Количество, 2);
		ПотреблениеНДСРегл = Окр(КоличествоСписания * Расход.НДСРегл / Расход.Количество, 2);
		ПотреблениеПостояннаяРазница = Окр(КоличествоСписания * Расход.ПостояннаяРазница / Расход.Количество, 2);
		ПотреблениеВременнаяРазница = Окр(КоличествоСписания * Расход.ВременнаяРазница / Расход.Количество, 2);

		ПартияСтоимость = Окр(КоличествоСписания * Приход.Стоимость / Приход.Количество, 2);
		ПартияСтоимостьБезНДС = Окр(КоличествоСписания * Приход.СтоимостьБезНДС / Приход.Количество, 2);
		ПартияСтоимостьРегл = Окр(КоличествоСписания * Приход.СтоимостьРегл / Приход.Количество, 2);
		ПартияНДСРегл = Окр(КоличествоСписания * Приход.НДСРегл / Приход.Количество, 2);
		ПартияПостояннаяРазница = Окр(КоличествоСписания * Приход.ПостояннаяРазница / Приход.Количество, 2);
		ПартияВременнаяРазница = Окр(КоличествоСписания * Приход.ВременнаяРазница / Приход.Количество, 2);

		// заполняем показатели расчетной партии
		РасчетнаяПартия.Количество = КоличествоСписания;
		РасчетнаяПартия.Стоимость = ПартияСтоимость;
		РасчетнаяПартия.СтоимостьБезНДС = ПартияСтоимостьБезНДС;
		РасчетнаяПартия.СтоимостьРегл = ПартияСтоимостьРегл;
		РасчетнаяПартия.НДСРегл = ПартияНДСРегл;
		РасчетнаяПартия.ПостояннаяРазница = ПартияПостояннаяРазница;
		РасчетнаяПартия.ВременнаяРазница = ПартияВременнаяРазница;
		
		// корректируем базу расчета в расходе
		Если Расход <> РасчетнаяПартия Тогда
			Расход.Количество = Расход.Количество - КоличествоСписания;
			Расход.Стоимость = Расход.Стоимость - ПотреблениеСтоимость;
			Расход.СтоимостьБезНДС = Расход.СтоимостьБезНДС - ПотреблениеСтоимостьБезНДС;
			Расход.СтоимостьРегл = Расход.СтоимостьРегл - ПотреблениеСтоимостьРегл;
			Расход.НДСРегл = Расход.НДСРегл - ПотреблениеНДСРегл;
			Расход.ПостояннаяРазница = Расход.ПостояннаяРазница - ПотреблениеПостояннаяРазница;
			Расход.ВременнаяРазница = Расход.ВременнаяРазница - ПотреблениеВременнаяРазница;
		КонецЕсли;
		
		// корректируем базу расчета в партии
		Приход.Количество = Приход.Количество - КоличествоСписания;
		Приход.Стоимость = Приход.Стоимость - ПартияСтоимость;
		Приход.СтоимостьБезНДС = Приход.СтоимостьБезНДС - ПартияСтоимостьБезНДС;
		Приход.СтоимостьРегл = Приход.СтоимостьРегл - ПартияСтоимостьРегл;
		Приход.НДСРегл = Приход.НДСРегл - ПартияНДСРегл;
		Приход.ПостояннаяРазница = Приход.ПостояннаяРазница - ПартияПостояннаяРазница;
		Приход.ВременнаяРазница = Приход.ВременнаяРазница - ПартияВременнаяРазница;
		
		// Заполняем партионную идентификацию в расчетной партии
		РасчетнаяПартия.ДокументПередачиНаКомиссию = Приход.ДокументПередачиНаКомиссию;
		РасчетнаяПартия.АналитикаУчетаПартий = Приход.АналитикаУчетаПартий;
		РасчетнаяПартия.ДокументПоступления = Приход.ДокументПоступления;
	КонецЕсли;
	
	// По результатам партионной идентификации определяем завершенность расчета
	РасчетнаяПартия.РасчетЗавершен = Приход.РасчетЗавершен И
		ЗначениеЗаполнено(РасчетнаяПартия.АналитикаУчетаПартий) И ЗначениеЗаполнено(РасчетнаяПартия.ДокументПоступления);
	
КонецПроцедуры

Процедура ЗаполнитьПартиюЗатрат(РасчетнаяПартия, Расход, Приход) // ПартииЗатратНаВыпуск
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	
	
	// расчетная партия заполняется на наибольшее общее вычитаемое
	Если Расход.ТипЗаписи = "Выпуск" ИЛИ Расход.ТипЗаписи = "Сборка" ИЛИ Расход.ТипЗаписи = "ВыпускПрочие" Тогда
		ЗнаменательСписания = Мин(Расход.Количество, Приход.Знаменатель);
		РасчетнаяПартия.Знаменатель = Расход.Знаменатель;
	Иначе
		ЗнаменательСписания = Мин(Расход.Знаменатель, Приход.Знаменатель);
		Если Расход.ТипЗаписи <> "Перемещение" И Расход.ТипЗаписи <> "Замещение" Тогда
			РасчетнаяПартия.Знаменатель = ЗнаменательСписания;
		КонецЕсли;
	КонецЕсли;
	
	// заполняем показатели расчетной партии
	РасчетнаяПартия.Количество = Окр(ЗнаменательСписания * Приход.Количество / Приход.Знаменатель, 3);
	Если ЗначениеЗаполнено(Приход.АналитикаУчетаНоменклатуры) И РасчетнаяПартия.Количество = 0 Тогда
		РасчетнаяПартия.Стоимость = 0;
		РасчетнаяПартия.СтоимостьБезНДС = 0;
		ПриходСтоимостьРегл = 0;
		ПриходНДСРегл = 0;
		ПриходПостояннаяРазница = 0;
		ПриходВременнаяРазница = 0;
	ИначеЕсли ЗначениеЗаполнено(Приход.АналитикаУчетаНоменклатуры) И РасчетнаяПартия.Количество = Приход.Количество Тогда
		РасчетнаяПартия.Стоимость = Приход.Стоимость;
		РасчетнаяПартия.СтоимостьБезНДС = Приход.СтоимостьБезНДС;
		
		ПриходСтоимостьРегл = Приход.СтоимостьРегл;
		ПриходНДСРегл = Приход.НДСРегл;
		ПриходПостояннаяРазница = Приход.ПостояннаяРазница;
		ПриходВременнаяРазница = Приход.ВременнаяРазница;
	Иначе
		РасчетнаяПартия.Стоимость = Окр(ЗнаменательСписания * Приход.Стоимость / Приход.Знаменатель, 2);
		РасчетнаяПартия.СтоимостьБезНДС = Окр(ЗнаменательСписания * Приход.СтоимостьБезНДС / Приход.Знаменатель, 2);
		
		ПриходСтоимостьРегл = Окр(ЗнаменательСписания * Приход.СтоимостьРегл / Приход.Знаменатель, 2);
		ПриходНДСРегл = Окр(ЗнаменательСписания * Приход.НДСРегл / Приход.Знаменатель, 2);
		ПриходПостояннаяРазница = Окр(ЗнаменательСписания * Приход.ПостояннаяРазница / Приход.Знаменатель, 2);
		ПриходВременнаяРазница = Окр(ЗнаменательСписания * Приход.ВременнаяРазница / Приход.Знаменатель, 2);
	КонецЕсли;
	
	Если РасчетнаяПартия.СохранятьРегл Тогда
		РасчетнаяПартия.СтоимостьРегл = 0.;
		РасчетнаяПартия.НДСРегл = 0.;
		РасчетнаяПартия.ПостояннаяРазница = 0.;
		РасчетнаяПартия.ВременнаяРазница = 0.;
	Иначе
		РасчетнаяПартия.СтоимостьРегл = ПриходСтоимостьРегл;
		РасчетнаяПартия.НДСРегл = ПриходНДСРегл;
		РасчетнаяПартия.ПостояннаяРазница = ПриходПостояннаяРазница;
		РасчетнаяПартия.ВременнаяРазница = ПриходВременнаяРазница;
	КонецЕсли;
	
	// корректируем базу расчета в приходе
	Приход.Знаменатель = Приход.Знаменатель - ЗнаменательСписания;
	Приход.Количество = Приход.Количество - РасчетнаяПартия.Количество;
	Приход.Стоимость = Приход.Стоимость - РасчетнаяПартия.Стоимость;
	Приход.СтоимостьБезНДС = Приход.СтоимостьБезНДС - РасчетнаяПартия.СтоимостьБезНДС;
	Приход.СтоимостьРегл = Приход.СтоимостьРегл - ПриходСтоимостьРегл;
	Приход.НДСРегл = Приход.НДСРегл - ПриходНДСРегл;
	Приход.ПостояннаяРазница = Приход.ПостояннаяРазница - ПриходПостояннаяРазница;
	Приход.ВременнаяРазница = Приход.ВременнаяРазница - ПриходВременнаяРазница;
	
	Если Не ЗначениеЗаполнено(Приход.АналитикаУчетаНоменклатуры) Тогда
		Приход.Количество = 0.;
		РасчетнаяПартия.Количество = 0.;
	КонецЕсли;
	
	Если Приход.Количество = 0.
	 И Приход.Стоимость = 0.
	 И Приход.СтоимостьБезНДС = 0.
	 И Приход.СтоимостьРегл = 0.
	 И Приход.НДСРегл = 0.
	 И Приход.ПостояннаяРазница = 0.
	 И Приход.ВременнаяРазница = 0. Тогда
		Приход.Знаменатель = 0.;
	КонецЕсли;
	
	// Заполняем партионную идентификацию в расчетной партии
    Если РасчетнаяПартия.ВидДвижения = ВидДвиженияНакопления.Приход ИЛИ РасчетнаяПартия.ТипЗаписи = "Сторно" Тогда
        Если Приход.НалоговоеНазначениеПартии = Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Пропорционально Тогда
            РасчетнаяПартия.АналитикаУчетаПартий = Приход.АналитикаУчетаПартий;
            РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначениеПартии;
        Иначе
    		РасчетнаяПартия.АналитикаУчетаПартий = АналитикаУчетаПартий(Приход.АналитикаУчетаПартий, Приход.НалоговоеНазначениеПартии, Приход.НалоговоеНазначение);
    		Если ЗначениеЗаполнено(Приход.НалоговоеНазначение) Тогда
    			РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначение;
    		Иначе
    			РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначениеПартии;
            КонецЕсли;
        КонецЕсли; 
	Иначе
		РасчетнаяПартия.АналитикаУчетаПартий = Приход.АналитикаУчетаПартий;
		РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначениеПартии;
	КонецЕсли;
	РасчетнаяПартия.АналитикаУчетаНоменклатуры = Приход.АналитикаУчетаНоменклатуры;
	РасчетнаяПартия.ВидЗапасов = Приход.ВидЗапасов;
	РасчетнаяПартия.ДокументПоступления = Приход.ДокументПоступления;
	Если Приход.ТипЗаписи = "Затраты" Тогда
		РасчетнаяПартия.АналитикаУчетаПродукции = Приход.АналитикаУчетаПродукции;
	ИначеЕсли Приход.ТипЗаписи = "Распределение" Тогда
		РасчетнаяПартия.СтатьяРасходовСписания = Приход.СтатьяРасходовСписания;
		РасчетнаяПартия.АналитикаРасходов = Приход.АналитикаРасходов;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(РасчетнаяПартия.ПодразделениеРасходов) Тогда 
		РасчетнаяПартия.ПодразделениеРасходов = Приход.ПодразделениеРасходов;
	КонецЕсли;
	Если Расход.ТипЗаписи = "Продукция" Тогда
		РасчетнаяПартия.ДокументИсточник = Неопределено;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(РасчетнаяПартия.АналитикаУчетаПартий) И ЗначениеЗаполнено(РасчетнаяПартия.НалоговоеНазначениеПартии) Тогда
		РасчетнаяПартия.АналитикаУчетаПартий = АналитикаУчетаПартийПоНалоговомуНазначению(РасчетнаяПартия.НалоговоеНазначениеПартии);
	КонецЕсли; 
    Если (Расход.ТипЗаписи = "Прочее" ИЛИ Расход.ТипЗаписи = "Списание")
        И НЕ ЗначениеЗаполнено(РасчетнаяПартия.НалоговоеНазначение) Тогда
        РасчетнаяПартия.НалоговоеНазначение = Приход.НалоговоеНазначение;
        Расход.НалоговоеНазначение          = Приход.НалоговоеНазначение;
    КонецЕсли;    
	Если РасчетнаяПартия.Количество = 0.
	 И РасчетнаяПартия.Стоимость = 0.
	 И РасчетнаяПартия.СтоимостьБезНДС = 0.
	 И РасчетнаяПартия.СтоимостьРегл = 0.
	 И РасчетнаяПартия.НДСРегл = 0.
	 И РасчетнаяПартия.ПостояннаяРазница = 0.
	 И РасчетнаяПартия.ВременнаяРазница = 0. Тогда
		РасчетнаяПартия.Знаменатель = 0.;
		РасчетнаяПартия.РасчетЗавершен = Ложь;
	Иначе
		РасчетнаяПартия.РасчетЗавершен = Приход.РасчетЗавершен;
	КонецЕсли;
КонецПроцедуры

Процедура ЗаполнитьЗаказВПриходе(РасчетнаяПартия, Расход, Приход) // ЗаказыПоставщикам
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	РасчетнаяПартия.РасчетЗавершен = Истина;
	Если Неопределено = Приход Тогда
		Возврат;
	КонецЕсли;
	
	// расчетная партия заполняется на наибольшее общее вычитаемое
	КоличествоСписания = ?(Расход.Количество >= Приход.Количество, Приход.Количество, Расход.Количество);
	// заполняем показатели расчетной партии
	РасчетнаяПартия.Стоимость = Окр(КоличествоСписания * Расход.Стоимость / Расход.Количество, 2);
	РасчетнаяПартия.СтоимостьБезНДС = Окр(КоличествоСписания * Расход.СтоимостьБезНДС / Расход.Количество, 2);
	РасчетнаяПартия.СтоимостьРегл = Окр(КоличествоСписания * Расход.СтоимостьРегл / Расход.Количество, 2);
	РасчетнаяПартия.НДСРегл = Окр(КоличествоСписания * Расход.НДСРегл / Расход.Количество, 2);
	РасчетнаяПартия.ПостояннаяРазница = Окр(КоличествоСписания * Расход.ПостояннаяРазница / Расход.Количество, 2);
	РасчетнаяПартия.ВременнаяРазница = Окр(КоличествоСписания * Расход.ВременнаяРазница / Расход.Количество, 2);
	РасчетнаяПартия.Количество = КоличествоСписания;
	// корректируем базу расчета в расходе
	Если Расход <> РасчетнаяПартия Тогда
		Расход.Стоимость = Расход.Стоимость - РасчетнаяПартия.Стоимость;
		Расход.СтоимостьБезНДС = Расход.СтоимостьБезНДС - РасчетнаяПартия.СтоимостьБезНДС;
		Расход.СтоимостьРегл = Расход.СтоимостьРегл - РасчетнаяПартия.СтоимостьРегл;
		Расход.НДСРегл = Расход.НДСРегл - РасчетнаяПартия.НДСРегл;
		Расход.ПостояннаяРазница = Расход.ПостояннаяРазница - РасчетнаяПартия.ПостояннаяРазница;
		Расход.ВременнаяРазница = Расход.ВременнаяРазница - РасчетнаяПартия.ВременнаяРазница;
		Расход.Количество = Расход.Количество - КоличествоСписания;
	КонецЕсли;
	// корректируем базу расчета в приходе
	Приход.Стоимость = Приход.Стоимость - Окр(КоличествоСписания * Приход.Стоимость / Приход.Количество, 2);
	Приход.СтоимостьБезНДС = Приход.СтоимостьБезНДС - Окр(КоличествоСписания * Приход.СтоимостьБезНДС / Приход.Количество, 2);
	Приход.СтоимостьРегл = Приход.СтоимостьРегл - Окр(КоличествоСписания * Приход.СтоимостьРегл / Приход.Количество, 2);
	Приход.НДСРегл = Приход.НДСРегл - Окр(КоличествоСписания * Приход.НДСРегл / Приход.Количество, 2);
	Приход.ПостояннаяРазница = Приход.ПостояннаяРазница - Окр(КоличествоСписания * Приход.ПостояннаяРазница / Приход.Количество, 2);
	Приход.ВременнаяРазница = Приход.ВременнаяРазница - Окр(КоличествоСписания * Приход.ВременнаяРазница / Приход.Количество, 2);
	Приход.Количество = Приход.Количество - КоличествоСписания;
	
	// Заполняем партионную идентификацию в расчетной партии
	РасчетнаяПартия.Заказ = Приход.Заказ;
КонецПроцедуры

Функция АналитикиОбсчетаПартийПрочих(Движение, ПустыеСсылки)
	Результат = Новый Массив;
	Результат.Добавить(Движение.Номенклатура);
	Если Движение.Номенклатура <> Неопределено Тогда
		Результат.Добавить(ПустаяСсылка(Движение.Номенклатура, ПустыеСсылки));
	КонецЕсли;
	Результат.Добавить(Движение.Склад);
	Если Движение.Склад <> Неопределено Тогда
		Результат.Добавить(ПустаяСсылка(Движение.Склад, ПустыеСсылки));
	КонецЕсли;
	Результат.Добавить(Движение.Регистратор);
	Результат.Добавить(ПустаяСсылка(Движение.Регистратор, ПустыеСсылки));
	Возврат Результат;
КонецФункции

Процедура ЗаполнитьПартиюПрочих(РасчетнаяПартия, Расход, Приход) // ПартииПрочихРасходов
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	Если Неопределено = Приход Тогда
		Возврат;
	КонецЕсли;
	
	РасчетнаяПартия.ТипЗаписи = "Потребление";
	РасчетнаяПартия.ВидДвижения = ВидДвиженияНакопления.Расход;
	РасчетнаяПартия.Период = Макс(Расход.Период, Расход.РасчетныйПериод);
	
	Если Расход.Базис = 0 Тогда
		Возврат;
	КонецЕсли;
	// расчетная партия заполняется на наибольшее общее вычитаемое
	БазисСписания = ?(Расход.Базис >= Приход.Значение.Базис, Приход.Значение.Базис, Расход.Базис);
	// заполняем показатели расчетной партии
	РасчетнаяПартия.Стоимость = Окр(БазисСписания * Расход.Стоимость / Расход.Базис, 2);
	РасчетнаяПартия.СтоимостьБезНДС = Окр(БазисСписания * Расход.СтоимостьБезНДС / Расход.Базис, 2);
	РасчетнаяПартия.СтоимостьРегл = Окр(БазисСписания * Расход.СтоимостьРегл / Расход.Базис, 2);
	РасчетнаяПартия.НДСРегл = Окр(БазисСписания * Расход.НДСРегл / Расход.Базис, 2);
	РасчетнаяПартия.ПостояннаяРазница = Окр(БазисСписания * Расход.ПостояннаяРазница / Расход.Базис, 2);
	РасчетнаяПартия.ВременнаяРазница = Окр(БазисСписания * Расход.ВременнаяРазница / Расход.Базис, 2);
	РасчетнаяПартия.Базис = БазисСписания;
	// корректируем базу расчета в расходе
	Расход.Стоимость = Расход.Стоимость - РасчетнаяПартия.Стоимость;
	Расход.СтоимостьБезНДС = Расход.СтоимостьБезНДС - РасчетнаяПартия.СтоимостьБезНДС;
	Расход.СтоимостьРегл = Расход.СтоимостьРегл - РасчетнаяПартия.СтоимостьРегл;
	Расход.НДСРегл = Расход.НДСРегл - РасчетнаяПартия.НДСРегл;
	Расход.ПостояннаяРазница = Расход.ПостояннаяРазница - РасчетнаяПартия.ПостояннаяРазница;
	Расход.ВременнаяРазница = Расход.ВременнаяРазница - РасчетнаяПартия.ВременнаяРазница;
	Расход.Базис = Расход.Базис - БазисСписания;
	// корректируем базу расчета в приходе
	Приход.Значение.Базис = Приход.Значение.Базис - БазисСписания;
	
	// Заполняем партионную идентификацию в расчетной партии
	РасчетнаяПартия.НалоговоеНазначение = Приход.Ключ;
КонецПроцедуры

Процедура ЗаполнитьПриходПартииРасходов(РасчетнаяПартия, Расход, Приход) // ПартииРасходовНаСебестоимостьТоваровПриход
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	Если Неопределено = Приход Тогда
		Возврат;
	КонецЕсли;
	
	// расчетная партия заполняется на наибольшее общее вычитаемое
	Если Приход.ПравилоРаспределения = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноКоличеству Тогда
		Расход.Базис = Расход.Количество;
	ИначеЕсли Приход.ПравилоРаспределения = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноВесу Тогда
		Расход.Базис = Расход.Вес;
	ИначеЕсли Приход.ПравилоРаспределения = Перечисления.ПравилаРаспределенияНаСебестоимостьТоваров.ПропорциональноОбъему Тогда
		Расход.Базис = Расход.Объем;
	Иначе
		Расход.Базис = Расход.Стоимость;
	КонецЕсли;
	БазисСписания = ?(Расход.Базис >= Приход.Базис, Приход.Базис, Расход.Базис);
	// заполняем показатели расчетной партии
	РасчетнаяПартия.Количество = Окр(БазисСписания * Расход.Количество / Расход.Базис, 3);
	РасчетнаяПартия.Вес = Окр(БазисСписания * Расход.Вес / Расход.Базис, 3);
	РасчетнаяПартия.Объем = Окр(БазисСписания * Расход.Объем / Расход.Базис, 3);
	РасчетнаяПартия.Стоимость = Окр(БазисСписания * Приход.Стоимость / Приход.Базис, 2);
	РасчетнаяПартия.СтоимостьБезНДС = Окр(БазисСписания * Приход.СтоимостьБезНДС / Приход.Базис, 2);
	РасчетнаяПартия.СтоимостьРегл = Окр(БазисСписания * Приход.СтоимостьРегл / Приход.Базис, 2);
	РасчетнаяПартия.НДСРегл = Окр(БазисСписания * Приход.НДСРегл / Приход.Базис, 2);
	РасчетнаяПартия.ПостояннаяРазница = Окр(БазисСписания * Приход.ПостояннаяРазница / Приход.Базис, 2);
	РасчетнаяПартия.ВременнаяРазница = Окр(БазисСписания * Приход.ВременнаяРазница / Приход.Базис, 2);
	РасчетнаяПартия.Базис = БазисСписания;
	// корректируем базу расчета в приходе
	Приход.Стоимость = Приход.Стоимость - РасчетнаяПартия.Стоимость;
	Приход.СтоимостьБезНДС = Приход.СтоимостьБезНДС - РасчетнаяПартия.СтоимостьБезНДС;
	Приход.СтоимостьРегл = Приход.СтоимостьРегл - РасчетнаяПартия.СтоимостьРегл;
	Приход.НДСРегл = Приход.НДСРегл - РасчетнаяПартия.НДСРегл;
	Приход.ПостояннаяРазница = Приход.ПостояннаяРазница - РасчетнаяПартия.ПостояннаяРазница;
	Приход.ВременнаяРазница = Приход.ВременнаяРазница - РасчетнаяПартия.ВременнаяРазница;
	Приход.Базис = Приход.Базис - БазисСписания;
	// корректируем базу расчета в расходе
	Расход.Количество = Расход.Количество - РасчетнаяПартия.Количество;
	Расход.Вес = Расход.Вес - РасчетнаяПартия.Вес;
	Расход.Объем = Расход.Объем - РасчетнаяПартия.Объем;
	Расход.Стоимость = Расход.Стоимость - Окр(БазисСписания * Расход.Стоимость / Расход.Базис, 2);
	Расход.СтоимостьБезНДС = Расход.СтоимостьБезНДС - Окр(БазисСписания * Расход.СтоимостьБезНДС / Расход.Базис, 2);
	Расход.СтоимостьРегл = Расход.СтоимостьРегл - Окр(БазисСписания * Расход.СтоимостьРегл / Расход.Базис, 2);
	Расход.НДСРегл = Расход.НДСРегл - Окр(БазисСписания * Расход.НДСРегл / Расход.Базис, 2);
	Расход.ПостояннаяРазница = Расход.ПостояннаяРазница - Окр(БазисСписания * Расход.ПостояннаяРазница / Расход.Базис, 2);
	Расход.ВременнаяРазница = Расход.ВременнаяРазница - Окр(БазисСписания * Расход.ВременнаяРазница / Расход.Базис, 2);
	Расход.Базис = Расход.Базис - БазисСписания;
	
	// Заполняем партионную идентификацию в расчетной партии
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Приход,
		"ВидДвижения, Период, Регистратор, ДокументПоступленияРасходов, СтатьяРасходов, ХозяйственнаяОперация,
		|Подразделение, ПравилоРаспределения");
		
	Если ЗначениеЗаполнено(Приход.АналитикаРасходов) Тогда
		РасчетнаяПартия.АналитикаРасходов = Приход.АналитикаРасходов;
	КонецЕсли;
	Если РасчетнаяПартия.ВидДвижения = ВидДвиженияНакопления.Приход Тогда
		РасчетнаяПартия.АналитикаУчетаПартий =
			АналитикаУчетаПартий(Приход.АналитикаУчетаПартий, Приход.НалоговоеНазначениеПартии, Приход.НалоговоеНазначение);
		РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначение;
		РасчетнаяПартия.НалоговоеНазначение = Приход.НалоговоеНазначениеПартии;
	Иначе
		РасчетнаяПартия.АналитикаУчетаПартий = Приход.АналитикаУчетаПартий;
		РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначениеПартии;
		РасчетнаяПартия.НалоговоеНазначение = Приход.НалоговоеНазначение;
	КонецЕсли;
	РасчетнаяПартия.ПодразделениеРасходов = Приход.Подразделение;
	РасчетнаяПартия.ТипЗаписи = "Партия";
	РасчетнаяПартия.РасчетЗавершен = Истина;
КонецПроцедуры

Процедура ЗаполнитьПартиюРасходов(РасчетнаяПартия, Расход, Приход) // ПартииРасходовНаСебестоимостьТоваров
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	
	// расчетная партия заполняется на наибольшее общее вычитаемое
	ВключаяКоличество = (Расход.ТипЗаписи <> "Перемещение" И Расход.ТипЗаписи <> "Замещение" И Расход.ТипЗаписи <> "Выпуск" И Расход.ТипЗаписи <> "Затраты");
	СписыватьЗнаменатель = (Приход.Знаменатель = Приход.Количество) И (Приход.Знаменатель <> 0.);
	ПриходКоличество = Приход.Количество;
	Если Приход.ТипЗаписи = "Сторно" Тогда
		КоличествоСписания = Мин(Расход.Количество, Приход.Количество);
	ИначеЕсли Приход.ТипЗаписи = "ВыпускПрочие" Тогда
		КоличествоСписания = Мин(Расход.Количество, Приход.Знаменатель);
		ПриходКоличество = Приход.Знаменатель;
		СписыватьЗнаменатель = Истина;
	ИначеЕсли ВключаяКоличество Тогда
		КоличествоСписания = Мин(Расход.Количество, Приход.Количество);
	Иначе
		КоличествоСписания = Приход.Количество;
	КонецЕсли;
	
	ПриходСтоимостьРегл = Окр(КоличествоСписания * Приход.СтоимостьРегл / ПриходКоличество, 2);
	ПриходНДСРегл = Окр(КоличествоСписания * Приход.НДСРегл / ПриходКоличество, 2);
	ПриходПостояннаяРазница = Окр(КоличествоСписания * Приход.ПостояннаяРазница / ПриходКоличество, 2);
	ПриходВременнаяРазница = Окр(КоличествоСписания * Приход.ВременнаяРазница / ПриходКоличество, 2);
	
	// заполняем показатели расчетной партии
	РасчетнаяПартия.Стоимость = Окр(КоличествоСписания * Приход.Стоимость / ПриходКоличество, 2);
	РасчетнаяПартия.СтоимостьБезНДС = Окр(КоличествоСписания * Приход.СтоимостьБезНДС / ПриходКоличество, 2);
	Если РасчетнаяПартия.СохранятьРегл Тогда
		РасчетнаяПартия.СтоимостьРегл = 0.;
		РасчетнаяПартия.НДСРегл = 0.;
		РасчетнаяПартия.ПостояннаяРазница = 0.;
		РасчетнаяПартия.ВременнаяРазница = 0.;
	Иначе
		Если РасчетнаяПартия.ТипЗаписи = "Замещение"
		 И ТипЗнч(РасчетнаяПартия.Регистратор) = Тип("ДокументСсылка.ПересортицаТоваров")
         И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Приход.НалоговоеНазначение, "ВидДеятельностиНДС") = Перечисления.ВидыДеятельностиНДС.Необлагаемая Тогда
			РасчетнаяПартия.СтоимостьРегл = ПриходСтоимостьРегл + ПриходНДСРегл;
			РасчетнаяПартия.НДСРегл = 0;
	 	Иначе
		 	РасчетнаяПартия.СтоимостьРегл = ПриходСтоимостьРегл;
			РасчетнаяПартия.НДСРегл = ПриходНДСРегл;
		КонецЕсли;
		РасчетнаяПартия.ПостояннаяРазница = ПриходПостояннаяРазница;
		РасчетнаяПартия.ВременнаяРазница = ПриходВременнаяРазница;
	КонецЕсли;
	Если ВключаяКоличество Тогда
		РасчетнаяПартия.Количество = КоличествоСписания;
		Если Расход.Количество <> 0 И РасчетнаяПартия.ТипЗаписи <> "ВыпускПрочие" Тогда
			РасчетнаяПартия.Знаменатель = РасчетнаяПартия.Знаменатель * РасчетнаяПартия.Количество / Расход.Количество;
		КонецЕсли;
	КонецЕсли;
	
	// корректируем базу расчета в приходе
	Приход.Стоимость = Приход.Стоимость - РасчетнаяПартия.Стоимость;
	Приход.СтоимостьБезНДС = Приход.СтоимостьБезНДС - РасчетнаяПартия.СтоимостьБезНДС;
	Приход.СтоимостьРегл = Приход.СтоимостьРегл - ПриходСтоимостьРегл;
	Приход.НДСРегл = Приход.НДСРегл - ПриходНДСРегл;
	Приход.ПостояннаяРазница = Приход.ПостояннаяРазница - ПриходПостояннаяРазница;
	Приход.ВременнаяРазница = Приход.ВременнаяРазница - ПриходВременнаяРазница;
    
	Если Приход.ТипЗаписи <> "ВыпускПрочие" Тогда
		Приход.Количество = Приход.Количество - КоличествоСписания;
	КонецЕсли;
	
	Если СписыватьЗнаменатель Тогда
		Приход.Знаменатель = Приход.Знаменатель - КоличествоСписания;
	КонецЕсли;
	
	Если Приход.Стоимость = 0.
	 И Приход.СтоимостьБезНДС = 0.
	 И Приход.СтоимостьРегл = 0.
	 И Приход.НДСРегл = 0.
	 И Приход.ПостояннаяРазница = 0.
	 И Приход.ВременнаяРазница = 0. Тогда
	 	Приход.Количество = 0.;
		Приход.Знаменатель = 0.;
	КонецЕсли;
	
	Если РасчетнаяПартия.ВидДвижения = ВидДвиженияНакопления.Приход ИЛИ РасчетнаяПартия.ТипЗаписи = "Сторно" Тогда
		РасчетнаяПартия.АналитикаУчетаПартий =
			АналитикаУчетаПартий(Приход.АналитикаУчетаПартий, Приход.НалоговоеНазначениеПартии, Приход.НалоговоеНазначение);
		Если ЗначениеЗаполнено(Приход.НалоговоеНазначение) Тогда
			РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначение;
		Иначе
			РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначениеПартии;
		КонецЕсли;
	Иначе
		РасчетнаяПартия.АналитикаУчетаПартий = Приход.АналитикаУчетаПартий;
		РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначениеПартии;
	КонецЕсли;

	// Заполняем партионную идентификацию в расчетной партии
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Приход,
		"РасчетЗавершен, ДокументПоступленияРасходов, СтатьяРасходов");
	Если РасчетнаяПартия.Стоимость = 0.
	 И РасчетнаяПартия.СтоимостьБезНДС = 0.
	 И РасчетнаяПартия.СтоимостьРегл = 0.
	 И РасчетнаяПартия.НДСРегл = 0.
	 И РасчетнаяПартия.ПостояннаяРазница = 0.
	 И РасчетнаяПартия.ВременнаяРазница = 0. Тогда
	 	РасчетнаяПартия.Количество = 0.;
		РасчетнаяПартия.Знаменатель = 0.;
		РасчетнаяПартия.РасчетЗавершен = Ложь;
	КонецЕсли;		
КонецПроцедуры


Процедура ЗаполнитьПартиюПроизводственныхЗатрат(РасчетнаяПартия, Расход, Приход) // ПартииПроизводственныхЗатрат
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Расход);
	
	Если Расход.ТипЗаписи = "Корректировка" Тогда
		Приход.Стоимость = Приход.Стоимость + Расход.Стоимость;
		Приход.СтоимостьБезНДС = Приход.СтоимостьБезНДС + Расход.СтоимостьБезНДС;
		Приход.СтоимостьРегл = Приход.СтоимостьРегл + Расход.СтоимостьРегл;
		Приход.НДСРегл = Приход.НДСРегл + Расход.НДСРегл;
		Приход.ПостояннаяРазница = Приход.ПостояннаяРазница + Расход.ПостояннаяРазница;
		Приход.ВременнаяРазница = Приход.ВременнаяРазница + Расход.ВременнаяРазница;
	ИначеЕсли Расход.ТипЗаписи = "ВозвратСторно" Тогда
		РасчетнаяПартия.Количество = Мин(Приход.Количество, Расход.Количество);
		РасчетнаяПартия.Стоимость = Мин(Приход.Стоимость, Расход.Стоимость);
		РасчетнаяПартия.СтоимостьБезНДС = Мин(Приход.СтоимостьБезНДС, Расход.СтоимостьБезНДС);
		РасчетнаяПартия.СтоимостьРегл = Мин(Приход.СтоимостьРегл, Расход.СтоимостьРегл);
		РасчетнаяПартия.НДСРегл = Мин(Приход.НДСРегл, Расход.НДСРегл);
		РасчетнаяПартия.ПостояннаяРазница = Мин(Приход.ПостояннаяРазница, Расход.ПостояннаяРазница);
		РасчетнаяПартия.ВременнаяРазница = Мин(Приход.ВременнаяРазница, Расход.ВременнаяРазница);
		
		Приход.Количество = Приход.Количество - РасчетнаяПартия.Количество;
		Приход.Стоимость = Приход.Стоимость - РасчетнаяПартия.Стоимость;
		Приход.СтоимостьБезНДС = Приход.СтоимостьБезНДС - РасчетнаяПартия.СтоимостьБезНДС;
		Приход.СтоимостьРегл = Приход.СтоимостьРегл - РасчетнаяПартия.СтоимостьРегл;
		Приход.НДСРегл = Приход.НДСРегл - РасчетнаяПартия.НДСРегл;
		Приход.ПостояннаяРазница = Приход.ПостояннаяРазница - РасчетнаяПартия.ПостояннаяРазница;
		Приход.ВременнаяРазница = Приход.ВременнаяРазница - РасчетнаяПартия.ВременнаяРазница;
		
		Расход.Количество = Расход.Количество - РасчетнаяПартия.Количество;
		Расход.Стоимость = Расход.Стоимость - РасчетнаяПартия.Стоимость;
		Расход.СтоимостьБезНДС = Расход.СтоимостьБезНДС - РасчетнаяПартия.СтоимостьБезНДС;
		Расход.СтоимостьРегл = Расход.СтоимостьРегл - РасчетнаяПартия.СтоимостьРегл;
		Расход.НДСРегл = Расход.НДСРегл - РасчетнаяПартия.НДСРегл;
		Расход.ПостояннаяРазница = Расход.ПостояннаяРазница - РасчетнаяПартия.ПостояннаяРазница;
		Расход.ВременнаяРазница = Расход.ВременнаяРазница - РасчетнаяПартия.ВременнаяРазница;
		
		Если Не ЗначениеЗаполнено(РасчетнаяПартия.ДокументИсточник) Тогда
			РасчетнаяПартия.ДокументИсточник = Приход.Регистратор;
		КонецЕсли;
	Иначе
		Если Приход.Количество = 0 Тогда
			Возврат;
		КонецЕсли;
		
		// расчетная партия заполняется на наибольшее общее вычитаемое
		КоличествоСписания = Мин(Расход.Количество, Приход.Количество);
		
		РасходБазис = ?(Расход.Количество <> 0, КоличествоСписания / Расход.Количество, 0);
		ПриходБазис = ?(Приход.Количество <> 0, КоличествоСписания / Приход.Количество, 0);
		
		РасходСтоимостьРегл = Окр(РасходБазис * Расход.СтоимостьРегл, 2);
		РасходНДСРегл = Окр(РасходБазис * Расход.НДСРегл, 2);
		РасходПостояннаяРазница = Окр(РасходБазис * Расход.ПостояннаяРазница, 2);
		РасходВременнаяРазница = Окр(РасходБазис * Расход.ВременнаяРазница, 2);
		
		ПриходСтоимостьРегл = Окр(ПриходБазис * Приход.СтоимостьРегл, 2);
		ПриходНДСРегл = Окр(ПриходБазис * Приход.НДСРегл, 2);
		ПриходПостояннаяРазница = Окр(ПриходБазис * Приход.ПостояннаяРазница, 2);
		ПриходВременнаяРазница = Окр(ПриходБазис * Приход.ВременнаяРазница, 2);
		
		// заполняем показатели расчетной партии
		РасчетнаяПартия.Стоимость = Окр(КоличествоСписания * Приход.Стоимость / Приход.Количество, 2);
		РасчетнаяПартия.СтоимостьБезНДС = Окр(КоличествоСписания * Приход.СтоимостьБезНДС / Приход.Количество, 2);
		Если РасчетнаяПартия.СохранятьРегл Тогда
			РасчетнаяПартия.СтоимостьРегл = РасходСтоимостьРегл;
			РасчетнаяПартия.НДСРегл = РасходНДСРегл;
			РасчетнаяПартия.ПостояннаяРазница = РасходПостояннаяРазница;
			РасчетнаяПартия.ВременнаяРазница = РасходВременнаяРазница;
		Иначе
			РасчетнаяПартия.СтоимостьРегл = ПриходСтоимостьРегл;
			РасчетнаяПартия.НДСРегл = ПриходНДСРегл;
			РасчетнаяПартия.ПостояннаяРазница = ПриходПостояннаяРазница;
			РасчетнаяПартия.ВременнаяРазница = ПриходВременнаяРазница;
		КонецЕсли;
		РасчетнаяПартия.Количество = КоличествоСписания;
		
		// корректируем базу расчета в потреблении
		Расход.Стоимость = Расход.Стоимость - Окр(РасходБазис * Расход.Стоимость, 2);
		Расход.СтоимостьБезНДС = Расход.СтоимостьБезНДС - Окр(РасходБазис * Расход.СтоимостьБезНДС, 2);
		Расход.СтоимостьРегл = Расход.СтоимостьРегл - РасходСтоимостьРегл;
		Расход.НДСРегл = Расход.НДСРегл - РасходНДСРегл;
		Расход.ПостояннаяРазница = Расход.ПостояннаяРазница - РасходПостояннаяРазница;
		Расход.ВременнаяРазница = Расход.ВременнаяРазница - РасходВременнаяРазница;
		Расход.Количество = Расход.Количество - РасчетнаяПартия.Количество;
		
		// корректируем базу расчета в приходе
		Если Расход.ТипЗаписи = "Сторно" И (Приход.ТипЗаписи = "Партия" ИЛИ Приход.ТипЗаписи = "Остаток") Тогда
			Приход.Стоимость = Приход.Стоимость + РасчетнаяПартия.Стоимость;
			Приход.СтоимостьБезНДС = Приход.СтоимостьБезНДС + РасчетнаяПартия.СтоимостьБезНДС;
			Приход.СтоимостьРегл = Приход.СтоимостьРегл + ПриходСтоимостьРегл;
			Приход.НДСРегл = Приход.НДСРегл + ПриходНДСРегл;
			Приход.ПостояннаяРазница = Приход.ПостояннаяРазница + ПриходПостояннаяРазница;
			Приход.ВременнаяРазница = Приход.ВременнаяРазница + ПриходВременнаяРазница;
			Приход.Количество = Приход.Количество + КоличествоСписания;
		Иначе
			Приход.Стоимость = Приход.Стоимость - РасчетнаяПартия.Стоимость;
			Приход.СтоимостьБезНДС = Приход.СтоимостьБезНДС - РасчетнаяПартия.СтоимостьБезНДС;
			Приход.СтоимостьРегл = Приход.СтоимостьРегл - ПриходСтоимостьРегл;
			Приход.НДСРегл = Приход.НДСРегл - ПриходНДСРегл;
			Приход.ПостояннаяРазница = Приход.ПостояннаяРазница - ПриходПостояннаяРазница;
			Приход.ВременнаяРазница = Приход.ВременнаяРазница - ПриходВременнаяРазница;
			Приход.Количество = Приход.Количество - КоличествоСписания;
		КонецЕсли;

		// Заполняем партионную идентификацию в расчетной партии
		Если Не ЗначениеЗаполнено(РасчетнаяПартия.ДокументПоступления) Тогда
			РасчетнаяПартия.ДокументПоступления = Приход.ДокументПоступления;
		КонецЕсли;
		Если Расход.ТипЗаписи = "Перемещение" ИЛИ Приход.ТипЗаписи = "Перемещение" Тогда
			РасчетнаяПартия.ДокументИсточник = Приход.ДокументИсточник;
		ИначеЕсли Не ЗначениеЗаполнено(РасчетнаяПартия.ДокументИсточник) Тогда
			РасчетнаяПартия.ДокументИсточник = Приход.Регистратор;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(РасчетнаяПартия.ВидЗапасов) Тогда
			РасчетнаяПартия.ВидЗапасов = Приход.ВидЗапасов;
		КонецЕсли;
		Если ЗначениеЗаполнено(РасчетнаяПартия.КорАналитикаУчетаНоменклатуры) Тогда
			РасчетнаяПартия.КорВидЗапасов = РасчетнаяПартия.ВидЗапасов;
		КонецЕсли;
		
		Если РасчетнаяПартия.ВидДвижения = ВидДвиженияНакопления.Приход Тогда
			РасчетнаяПартия.АналитикаУчетаПартий =
				АналитикаУчетаПартий(Приход.АналитикаУчетаПартий, Приход.НалоговоеНазначениеПартии, Приход.НалоговоеНазначение);
			РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначение;
		Иначе
			РасчетнаяПартия.АналитикаУчетаПартий = Приход.АналитикаУчетаПартий;
			РасчетнаяПартия.НалоговоеНазначениеПартии = Приход.НалоговоеНазначениеПартии;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(РасчетнаяПартия.ПодразделениеРасходов) Тогда 
			РасчетнаяПартия.ПодразделениеРасходов = Приход.ПодразделениеРасходов;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Приход, "РасчетЗавершен");
КонецПроцедуры

#КонецОбласти

// Общие алгоритмы расчета партий
#Область ОбщиеРасчетныеМетоды

Процедура УдалитьНезаписываемыеСтроки(Контекст, РасчетныеПартии)
	
	УдаляемыеТипы = Новый Структура;
	УдаляемыеРазделы = Новый Соответствие;
	Если Контекст = "ПартииТоваровОрганизаций" Тогда
		УдаляемыеТипы.Вставить("Остаток");
		УдаляемыеТипы.Вставить("Прошлое");
		УдаляемыеРазделы.Вставить(Перечисления.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты, "");
		УдаляемыеРазделы.Вставить(Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию, "");
		УдалятьНезавершенные = Ложь;
	ИначеЕсли Контекст = "ПартииТоваровПереданныеНаКомиссию" Тогда
		УдаляемыеТипы.Вставить("Остаток");
		УдалятьНезавершенные = Истина;
	ИначеЕсли Контекст = "ПартииРасходовНаСебестоимостьТоваров" Тогда
		УдаляемыеТипы.Вставить("Остаток");
		УдаляемыеТипы.Вставить("Прочее");
		УдаляемыеТипы.Вставить("Прошлое");
		УдалятьНезавершенные = Истина;
	ИначеЕсли Контекст = "ПартииЗатратНаВыпуск" Тогда
		УдаляемыеТипы.Вставить("Остаток");
		УдаляемыеТипы.Вставить("Прочее");
		УдаляемыеТипы.Вставить("Прошлое");
		УдалятьНезавершенные = Истина;
	ИначеЕсли Контекст = "ПартииПроизводственныхЗатрат" Тогда
		УдаляемыеТипы.Вставить("Остаток");
		УдаляемыеТипы.Вставить("ОстатокСторно");
		УдалятьНезавершенные = Ложь;	
	ИначеЕсли Контекст = "ПартииНезавершенногоПроизводства" Тогда
		УдаляемыеТипы.Вставить("Остаток");
		УдаляемыеТипы.Вставить("ОстатокСторно");
		УдаляемыеРазделы.Вставить(Перечисления.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка(), "");
		УдалятьНезавершенные = Истина;
	ИначеЕсли Контекст = "ТрудозатратыНезавершенногоПроизводства" Тогда
		УдаляемыеТипы.Вставить("Остаток");
        УдаляемыеТипы.Вставить("НЗП");
		УдаляемыеТипы.Вставить("МаршрутныйЛист");
		УдаляемыеТипы.Вставить("ОстатокБезЗаказа");
		УдаляемыеТипы.Вставить("ПартияБезЗаказа");
		УдаляемыеТипы.Вставить("Потребление");
		УдаляемыеТипы.Вставить("Перемещение");
		УдаляемыеТипы.Вставить("Распределение");
		УдаляемыеТипы.Вставить("ПолуфабрикатДавальца");
		УдаляемыеРазделы.Вставить(Перечисления.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка(), "");
		УдалятьНезавершенные = Истина;
	ИначеЕсли Контекст = "ПрочиеРасходыНезавершенногоПроизводства" Тогда
		УдаляемыеТипы.Вставить("Остаток");
		УдаляемыеТипы.Вставить("Распределение");
		УдаляемыеТипы.Вставить("ПоБазеБезЗаказа");
		УдаляемыеТипы.Вставить("ПолуфабрикатДавальца");
		УдаляемыеРазделы.Вставить(Перечисления.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку, "");
		УдалятьНезавершенные = Истина;
	ИначеЕсли Контекст = "ПрочиеРасходыНезавершенногоПроизводстваКРаспределению" Тогда
		УдаляемыеТипы.Вставить("Партия");
		УдалятьНезавершенные = Истина;
	ИначеЕсли Контекст = "ПрочиеРасходыНезавершенногоПроизводстваПоБазе" Тогда
		УдаляемыеТипы.Вставить("Партия");
		УдалятьНезавершенные = Истина;
	ИначеЕсли Контекст = "ПрочиеРасходыПоБазе" Тогда
		УдаляемыеТипы.Вставить("Партия");
		УдалятьНезавершенные = Истина;
	ИначеЕсли Контекст = "РаспределениеМатериаловИРабот" Тогда
		УдаляемыеТипы.Вставить("Партия");
		УдалятьНезавершенные = Истина;	
	КонецЕсли;
	
	МинимальныйИндекс = 1 - РасчетныеПартии.Количество();
	Для Индекс = МинимальныйИндекс По 0 Цикл
		РасчетнаяПартия = РасчетныеПартии[-Индекс];
		Если УдалятьНезавершенные И РасчетнаяПартия.РасчетЗавершен <> Истина
		 Или УдаляемыеТипы.Свойство(РасчетнаяПартия.ТипЗаписи)
		 Или УдаляемыеРазделы[РасчетнаяПартия.РазделУчета] <> Неопределено
		Тогда
			РасчетныеПартии.Удалить(-Индекс);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция Регистраторы(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, ИмяРегистра,
			МассивИсключаемыхТипов = Неопределено, МассивПоддерживаемыхТипов = Неопределено)
	
	Если МассивИсключаемыхТипов = Неопределено Тогда
		МассивИсключаемыхТипов = Новый Массив;
	КонецЕсли;
	Если МассивПоддерживаемыхТипов = Неопределено Тогда
		МассивПоддерживаемыхТипов = Новый Массив;
	КонецЕсли;
	
	ШаблонЗапроса = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор КАК Регистратор
		|ИЗ
		|	&ШаблонРегистра КАК ДД
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И НЕ ТипЗначения(ДД.Регистратор) В (&МассивИсключаемыхТипов)
		|	И (&ПоддерживаютсяВсеТипы ИЛИ ТипЗначения(ДД.Регистратор) В (&МассивПоддерживаемыхТипов))
		|";
	
	Запрос = Новый Запрос(СтрЗаменить(ШаблонЗапроса, "&ШаблонРегистра", "РегистрНакопления." + ИмяРегистра));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	Запрос.УстановитьПараметр("МассивИсключаемыхТипов", МассивИсключаемыхТипов);
	Запрос.УстановитьПараметр("МассивПоддерживаемыхТипов", МассивПоддерживаемыхТипов);
	Запрос.УстановитьПараметр("ПоддерживаютсяВсеТипы", НЕ ЗначениеЗаполнено(МассивПоддерживаемыхТипов));
	
	Регистраторы = Новый Соответствие;
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Регистраторы.Вставить(Выборка.Регистратор, Истина);
	КонецЦикла;
	
	Возврат Регистраторы;
	
КонецФункции

Процедура РегистраторыПартийВПути(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, Регистраторы)
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ДД.Ссылка КАК Регистратор
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК ДД
		|ГДЕ
		|	(ДД.ДатаПереходаПраваСобственности МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|		ИЛИ ДД.ДатаПереходаПраваСобственности = ДАТАВРЕМЯ(1,1,1))
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Проведен
		|	И ДД.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияБезПереходаПраваСобственности)
		|";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Регистраторы.Вставить(Выборка.Регистратор, Истина);
	КонецЦикла;
КонецПроцедуры

Функция РегистраторыПартийПрочих(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	Запрос = Новый Запрос("
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДД.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.ПартииПрочихРасходов КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК Себестоимость
		|		ПО Себестоимость.Регистратор = ДД.Регистратор
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
		|		ПО Статьи.Ссылка = ДД.СтатьяРасходов
		|ГДЕ
		|	ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.Регистратор = ДД.ДокументПоступленияРасходов
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И Себестоимость.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И НЕ Себестоимость.РасчетСебестоимости
		|	И НЕ Себестоимость.СтатьяРасходовСписания = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)
		|	И Статьи.ВариантРаспределенияРасходов =
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
		|");
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Регистраторы = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		Регистраторы.Вставить(Выборка.Регистратор, Истина);
	КонецЦикла;
	
	Возврат Регистраторы;
	
КонецФункции

Процедура ЗаписатьРасчетныеПартии(МенеджерРегистра, РасчетныеПартии, Регистраторы)
	
	Если ТестированиеБезЗаписи() Тогда
		Возврат;
	КонецЕсли;
	
	Если РасчетныеПартии.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	КоличествоНенулевыхЗаписей = 0;
	КоличествоРегистраторов = 0;
	
	РасчетныеПартии.Сортировать("Регистратор", Новый СравнениеЗначений);
	
	Движения = МенеджерРегистра.СоздатьНаборЗаписей();
	Движения.ДополнительныеСвойства.Вставить(ИмяДополнительногоСвойстваЗаписываемогоНабора());
	
	Если ИсходящиеДанныеМеханизма().Получить(Движения.Метаданные()) = Неопределено Тогда
		ВызватьИсключение
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Движения по регистру ""%1"" не должны формироваться механизмом расчета партий.';uk='Рухи по регістру ""%1"" не повинні формуватися механізмом розрахунку партій.'"),
				Движения.Метаданные().Имя);
	КонецЕсли;
	
	// Получим структуру с ключами, соответствующими ресурсам регистра.
	МетаданныеРегистра = Движения.Метаданные();
	СтруктураРесурсов = Новый Структура;
	Для Каждого МетаРесурс Из МетаданныеРегистра.Ресурсы Цикл
		СтруктураРесурсов.Вставить(МетаРесурс.Имя, 0);
	КонецЦикла;
	
	Регистратор = Неопределено;
	Замещать = Истина;
	Счетчик = 0;
	МаксимумСчетчика = РасчетныеПартии.Количество() - 1;
	
	Пока Счетчик <= МаксимумСчетчика Цикл
		
		РасчетнаяПартия = РасчетныеПартии[Счетчик];
		Если Регистратор <> РасчетнаяПартия.Регистратор Тогда
			Регистратор = РасчетнаяПартия.Регистратор;
			
			Движения.Очистить();
			Движения.Отбор.Регистратор.Установить(Регистратор);
			
			Если Регистраторы <> Неопределено Тогда
				Если Регистраторы[Регистратор] <> Неопределено Тогда
					Замещать = Истина;
					Регистраторы.Удалить(Регистратор);
				Иначе
					Замещать = Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;

		// Проверим заполненность ресурсов в расчетной партии.
		ЗаполнитьЗначенияСвойств(СтруктураРесурсов, РасчетнаяПартия);
		
		Если НЕ ОбщегоНазначенияУТКлиентСервер.ЗначенияСтруктурыНеЗаполнены(СтруктураРесурсов) Тогда
			Движение = Движения.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, РасчетнаяПартия);
		КонецЕсли;
		
		Счетчик = Счетчик + 1;
		
		Если Счетчик > МаксимумСчетчика Или (Регистратор <> РасчетныеПартии[Счетчик].Регистратор) Тогда
			Если Замещать ИЛИ Движения.Количество() > 0 Тогда
				КоличествоНенулевыхЗаписей = КоличествоНенулевыхЗаписей + Движения.Количество();
				КоличествоРегистраторов = КоличествоРегистраторов + 1;
				Движения.Записать(Замещать);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Замер = ТекущаяУниверсальнаяДатаВМиллисекундах() - НачалоЗамера;
	Комментарий = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Записано движений: %1 шт. по %2 док., длительность: %3 сек.';uk='Записано рухів: %1 шт. з %2 док., тривалість: %3 сек.'"),
		СокрЛП(КоличествоНенулевыхЗаписей),
		СокрЛП(КоличествоРегистраторов),
		СокрЛП(Замер/1000));
	ЗаписьЖурналаРегистрации(
		НСтр("ru='Партионный учет.ЗаписатьРасчетныеПартии';uk='Партіонний облік.ЗаписатьРасчетныеПартии'",ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
		УровеньЖурналаРегистрации.Информация,,, Комментарий);
	
КонецПроцедуры

Функция ТекстОтборПоТипамРегистраторовДляСохраненияДвижений()
	
	// Получим перечень метаданные документов, формирующих движения по нескольким организациям
	МетаданныеСохраняемыхРегистраторов = РасчетСебестоимости.ДокументыСРазнымиПериодамиИлиОрганизациямиВДвижениях(Ложь, Истина);
	
	// Сформируем текст для отбора по типу регистратора
	ТекстОтборПоТипамРегистраторов = "";
	
	Для Каждого КлючИЗначение Из МетаданныеСохраняемыхРегистраторов Цикл
		ТекстОтборПоТипамРегистраторов = ТекстОтборПоТипамРегистраторов
			+ ?(ТекстОтборПоТипамРегистраторов = "", "", ", ") + "ТИП(" + КлючИЗначение.Ключ.ПолноеИмя() + ")";
	КонецЦикла;
	
	Возврат "ТИПЗНАЧЕНИЯ(Т.Регистратор) В (" + ТекстОтборПоТипамРегистраторов + ")";
	
КонецФункции

Функция РегистраторыССохраняемымиДвижениями(ИмяРегистра, МенеджерВременныхТаблиц, СтарыеРегистраторы, НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	
	// Подготовим запрос
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода",  	НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода",  	ОкончаниеПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций",  МассивОрганизаций);
	Запрос.УстановитьПараметр("СтарыеРегистраторы",
		ОбщегоНазначенияУТКлиентСервер.ПреобразоватьСоответствиеИлиСтруктуруВМассив(СтарыеРегистраторы));
	
	// Надо сохранить движения по "другим" организациям из тех регистраторов, которые
	//	- входят в регистраторы таблицы данных для расчета партий
	//  - могут формировать движения по нескольким организациям
	//  - входят в список "старых" регистраторов (для них запись расчетных движений будет выполняться с замещением)
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Регистратор
	|ПОМЕСТИТЬ ВТСохраняемыеРегистраторы
	|ИЗ
	|	Данные КАК Т
	|ГДЕ
	|	%1
	|	И Т.Регистратор В (&СтарыеРегистраторы)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ ВТСохраняемыеДвижения
	|ИЗ
	|	РегистрНакопления.%2 КАК Т
	|ГДЕ
	|	Т.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И Т.Регистратор В (ВЫБРАТЬ Т.Регистратор ИЗ ВТСохраняемыеРегистраторы КАК Т)
	|	И НЕ (Т.Организация В (&МассивОрганизаций))
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Т.Регистратор
	|ИЗ
	|	ВТСохраняемыеДвижения КАК Т
	|";
	
	Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		Запрос.Текст,
		ТекстОтборПоТипамРегистраторовДляСохраненияДвижений(),
		ИмяРегистра);
		
	// Получим перечень регистраторов, у которых нужно сохранить движения
	РегистраторыССохраняемымиДвижениями = Новый Соответствие;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		// При восстановлении сохраненных движений их надо добавлять к сформированным расчетным движениям (без замещения)
		РегистраторыССохраняемымиДвижениями.Вставить(Выборка.Регистратор, Ложь);
	КонецЦикла;
	
	Возврат РегистраторыССохраняемымиДвижениями;
	
КонецФункции

Процедура ЗаписатьСохраняемыеДвижения(МенеджерРегистра, МенеджерВременныхТаблиц, РегистраторыССохраняемымиДвижениями)
	
	Если ТестированиеБезЗаписи() Тогда
		Возврат;
	КонецЕсли;
	
	Если РегистраторыССохраняемымиДвижениями.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	*
	|ИЗ
	|	ВТСохраняемыеДвижения КАК Т
	|
	|УПОРЯДОЧИТЬ ПО
	|	Т.Регистратор,
	|	Т.НомерСтроки
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Движения = МенеджерРегистра.СоздатьНаборЗаписей();
	Движения.ДополнительныеСвойства.Вставить(ИмяДополнительногоСвойстваЗаписываемогоНабора());
	
	Регистратор = Неопределено;
	Замещать = Ложь;
	
	Пока Выборка.Следующий() Цикл
		
		Если Регистратор <> Выборка.Регистратор Тогда
			
			Если Регистратор <> Неопределено Тогда
				Движения.Записать(Замещать);
			КонецЕсли;
			
			Регистратор = Выборка.Регистратор;
			Замещать = РегистраторыССохраняемымиДвижениями.Получить(Регистратор);
			
			Движения.Очистить();
			Движения.Отбор.Регистратор.Установить(Регистратор);
			
		КонецЕсли;
		
		Движение = Движения.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		
	КонецЦикла;
	
	Если Регистратор <> Неопределено Тогда
		Движения.Записать(Замещать);
	КонецЕсли;
	
КонецПроцедуры


Функция ЕстьФИФОСкользящая(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	УчетныеПолитики.МетодОценкиСтоимостиТоваров
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&ОкончаниеПериода, Организация В (&МассивОрганизаций)) КАК ДД
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УчетныеПолитикиОрганизаций КАК УчетныеПолитики
	|		ПО УчетныеПолитики.Ссылка = ДД.УчетнаяПолитика
	|ГДЕ
	|	УчетныеПолитики.МетодОценкиСтоимостиТоваров = ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.ФИФОСкользящаяОценка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Расчет.Ссылка.МетодОценки
	|ИЗ
	|	Документ.РасчетСебестоимостиТоваров.Организации КАК Расчет
	|ГДЕ
	|	Расчет.Ссылка.Дата МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|	И Расчет.Организация В (&МассивОрганизаций)
	|	И Расчет.Ссылка.МетодОценки = ЗНАЧЕНИЕ(Перечисление.МетодыОценкиСтоимостиТоваров.ФИФОСкользящаяОценка)
	|	И Расчет.Ссылка.Проведен
	|");
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	Результат = Запрос.Выполнить();
	Возврат НЕ Результат.Пустой();
КонецФункции

Функция ИмяДополнительногоСвойстваЗаписываемогоНабора()
	Возврат "ПартионныйУчет_ЗаписьПартии";
КонецФункции

Процедура ВременнаяТаблицаДанныхПоОтбору(ПолеОтбора, ТекстСортировка, Таблица, МВТ)
	
	// Подготовим необходимые параметры расчета (аналогично параметрам партионного учета версии 2.2).
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("МенеджерВременныхТаблиц", МВТ);
	ПараметрыРасчета.Вставить("ОграниченияВыборки", Новый Структура);
	ПараметрыРасчета.ОграниченияВыборки.Вставить("КоличествоСтрокВТЗ", 100000);
	
	// Подготовим параметры нумерации.
	ТекстСортировка = СтрЗаменить(ТекстСортировка, "	", " ");
	ТекстСортировка = СтрЗаменить(ТекстСортировка, Символы.ПС, " ");
	ТекстСортировка = СтрЗаменить(НРег(ТекстСортировка), "упорядочить по", "");
	
	ПараметрыНумерации = УниверсальныеМеханизмыПартийИСебестоимости.СформироватьПараметрыНумерацииСтрокВременнойТаблицы(
		ПолеОтбора, // разделитель
		"", // ресурсы
		СокрЛП(ТекстСортировка)); // порядок
	
	// Выполним нумерацию строк.
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьНомераСтрокВременнойТаблицы(
		ПараметрыРасчета,
		ПараметрыНумерации,
		"ИсходныеДанные",
		"Данные");
	
КонецПроцедуры

Функция КоличествоЗаписей(МВТ)
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДД.К) КАК Количество
	|ИЗ
	|	Данные КАК ДД
	|");
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Количество = Выборка.Количество;
	Иначе
		Количество = 0;
	КонецЕсли;
	Возврат Количество;
КонецФункции

Функция КоличествоСвязейМеждуЗаписями(МВТ)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК Количество
	|ИЗ
	|	Источники КАК ДД // в таблице Приемники такое же количество записей
	|";
	Запрос.МенеджерВременныхТаблиц = МВТ;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Количество = Выборка.Количество;
	Иначе
		Количество = 0;
	КонецЕсли;
	
	Возврат Количество;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Распределение приходов на расходы

// Основной расчетный метод - заполняет расчетные партии из данных для расчета
// Поля прямого обращения: ТипЗаписи, ВидДвижения, Регистратор
// Обращения к остальным полям происходит через структуру ОписаниеДвижений
Процедура РаспределитьПриходыНаРасходы(ОписаниеДвижений, ДанныеДляРасчета, РасчетныеПартии)
	ПредыдущееДвижение = Неопределено;
	// Буфер партий по аналитике - очередь копий партионных движений
	Приходы = Новый Структура("Очередь, Указатель, УказательРестарта", Новый Массив, 0, -1);
	// Буфер потреблений по аналитике - очередь копий движений потребления
	Расходы = Новый Структура("Очередь, Указатель, УказательРестарта", Новый Массив, 0, -1);
	
	Для Каждого Движение Из ДанныеДляРасчета Цикл
		// сменилась аналитика
		Если Не ПоляЗаписейРавны(ПредыдущееДвижение, Движение, ОписаниеДвижений.КлючиСравнения) Тогда
			// сбрасываем оставшийся буфер потреблений (партии не подобраны) в расчетные партии
			Расходы.Указатель = ?(Расходы.УказательРестарта > 0, Расходы.УказательРестарта, Расходы.Указатель);
			Пока Расходы.Указатель < Расходы.Очередь.Количество() Цикл
				Расход = Расходы.Очередь[Расходы.Указатель];
				Если Расход[ОписаниеДвижений.БазисРасхода] > 0. Тогда
					// перемещения, что приведет к очистке документа поступления у перемещения.
					Распределение = РасчетныеПартии.Добавить();
					ЗаполнитьРасчетнуюПартию(ОписаниеДвижений.Контекст, Распределение, Расход, Неопределено);
				КонецЕсли;
				Расходы.Указатель = Расходы.Указатель + 1;
			КонецЦикла;
			// инициализируемся
			ПредыдущееДвижение = Движение;
			Приходы.Очередь.Очистить();
			Приходы.Указатель = 0;
			Приходы.УказательРестарта = -1;
			Расходы.Очередь.Очистить();
			Расходы.Указатель = 0;
			Расходы.УказательРестарта = -1;
		КонецЕсли;
		
		ЭтоПриход = ("Остаток" = Движение.ТипЗаписи) Или ("Партия" = Движение.ТипЗаписи)
			Или ("Перемещение" = Движение.ТипЗаписи) Или ("Сторно" = Движение.ТипЗаписи);
		ИнвертироватьПоказатели = ЭтоПриход И Движение[ОписаниеДвижений.БазисПрихода] < 0.
			Или НЕ ЭтоПриход И Движение[ОписаниеДвижений.БазисРасхода] < 0.;
		
		Если ЭтоПриход Тогда
			Приход = КопияЗаписиСтруктурой(Движение, ОписаниеДвижений.ПоляРасчета);
			ИнвертироватьПоказатели(Приход, ОписаниеДвижений.Показатели, ИнвертироватьПоказатели);
			// если ранее пропустили расход, то текущий приход начинаем распределять на него
			Если Расходы.УказательРестарта >= 0 Тогда
				Расходы.Указатель = Расходы.УказательРестарта;
				Расходы.УказательРестарта = -1;
			КонецЕсли;
			// покрываем расходы из буфера расходов по очереди (FIFO)
			Пока Приход[ОписаниеДвижений.БазисПрихода] > 0. И Расходы.Указатель < Расходы.Очередь.Количество() Цикл
				Расход = Расходы.Очередь[Расходы.Указатель];
				// приход, сделанный по расходу не может быть распределен на этот расход
				Если Расход.Регистратор = Приход[ОписаниеДвижений.КлючРасхода] Тогда
					Расходы.УказательРестарта = Расходы.Указатель;
					Расходы.Указатель = Расходы.Указатель + 1;
					Продолжить;
				КонецЕсли;
				// добавляем в партии покрытую часть расхода
				Если Расход[ОписаниеДвижений.БазисРасхода] > 0. Тогда
					Распределение = РасчетныеПартии.Добавить();
					ЗаполнитьРасчетнуюПартию(ОписаниеДвижений.Контекст, Распределение, Расход, Приход);
				КонецЕсли;
				// если расход покрыт, то ставим на покрытие следующий расход
				Если Расход[ОписаниеДвижений.БазисРасхода] <= 0. Тогда
					Расходы.Указатель = Расходы.Указатель + 1;
				КонецЕсли;
			КонецЦикла;
			// если приход еще остался, то регистрируемся в буфере приходов
			Если Приход[ОписаниеДвижений.БазисПрихода] > 0. Тогда
				Приходы.Очередь.Добавить(Приход);
			КонецЕсли;
			// приход надо добавить в партии - код должен быть здесь для сохранения сортировки
			Если "Остаток" <> Движение.ТипЗаписи Тогда
				Распределение = РасчетныеПартии.Добавить();
				ЗаполнитьРасчетнуюПартию(ОписаниеДвижений.Контекст, Распределение, Движение, Неопределено);
			КонецЕсли;
		КонецЕсли;
		
		Если "Потребление" = Движение.ТипЗаписи Тогда
			Расход = КопияЗаписиСтруктурой(Движение, ОписаниеДвижений.ПоляРасчета);
			ИнвертироватьПоказатели(Расход, ОписаниеДвижений.Показатели, ИнвертироватьПоказатели);
			// если ранее пропустили приход, то текущий расход начинаем потреблять с него
			Если Приходы.УказательРестарта >= 0 Тогда
				Приходы.Указатель = Приходы.УказательРестарта;
				Приходы.УказательРестарта = -1;
			КонецЕсли;
			// списываем приходы из буфера приходов по очереди (FIFO)
			Пока Расход[ОписаниеДвижений.БазисРасхода] > 0. И Приходы.Указатель < Приходы.Очередь.Количество() Цикл
				Приход = Приходы.Очередь[Приходы.Указатель];
				// приход, сделанный по расходу не может быть распределен на этот расход
				Если Расход.Регистратор = Приход[ОписаниеДвижений.КлючРасхода] Тогда
					Приходы.УказательРестарта = Приходы.Указатель;
					Приходы.Указатель = Приходы.Указатель + 1;
					Продолжить;
				КонецЕсли;
				// добавляем в партии покрытую часть расхода
				Если Приход[ОписаниеДвижений.БазисПрихода] > 0. Тогда
					Распределение = РасчетныеПартии.Добавить();
					ЗаполнитьРасчетнуюПартию(ОписаниеДвижений.Контекст, Распределение, Расход, Приход);
				КонецЕсли;
				// если приход потреблен, то выбираем следующий приход
				Если Приход[ОписаниеДвижений.БазисПрихода] <= 0. Тогда
					Приходы.Указатель = Приходы.Указатель + 1;
				КонецЕсли;
			КонецЦикла;
			// если расход еще остался, то регистрируемся в буфере расходов
			Если Расход[ОписаниеДвижений.БазисРасхода] > 0. Тогда
				Расходы.Очередь.Добавить(Расход);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры

Функция ОписаниеДвижений(Контекст, ИмяРегистра, ПоляРасчета, КлючиСравнения, Показатели, БазисПрихода, БазисРасхода, КлючРасхода, ПолеПорядка, ПоляСортировки = "", СортировкаПоУсловию = "")
	Возврат
		Новый Структура(
			"Контекст, ИмяРегистра, ПоляРасчета, КлючиСравнения, Показатели, БазисПрихода, БазисРасхода, КлючРасхода, ПолеПорядка, ПоляСортировки, СортировкаПоУсловию",
			Контекст, ИмяРегистра, ПоляРасчета, КлючиСравнения, Показатели, БазисПрихода, БазисРасхода, КлючРасхода, ПолеПорядка, ПоляСортировки, СортировкаПоУсловию);
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Построение цепочек движений для проброса партий

Функция ОписаниеЦепочек(ПереченьТиповЗаписей)
	ОписаниеЦепочек = Новый Структура(ПереченьТиповЗаписей);
	Для Каждого Описание Из ОписаниеЦепочек Цикл
		ОписаниеЦепочек[Описание.Ключ] = Новый Структура("ПоляСвязи, ТипыПриемников, ТипыИсточников");
		ОписаниеЦепочек[Описание.Ключ].ПоляСвязи = Новый Массив;
		ОписаниеЦепочек[Описание.Ключ].ТипыПриемников = Новый Соответствие;
		ОписаниеЦепочек[Описание.Ключ].ТипыИсточников = Новый Соответствие;
	КонецЦикла;
	Возврат ОписаниеЦепочек;
КонецФункции

Процедура ДобавитьОписаниеПриемника(ОписаниеЦепочек, ТипПриемника, ПоляПриемника)
	Для Каждого ОписаниеПоля Из Новый Структура(ПоляПриемника) Цикл
		ОписаниеЦепочек[ТипПриемника].ПоляСвязи.Добавить(ОписаниеПоля.Ключ);
	КонецЦикла;
КонецПроцедуры

Процедура ДобавитьОписаниеИсточника(ОписаниеЦепочек, ТипПриемника, ТипИсточника, ПоляИсточника)
	ПоляСвязи = Новый Массив;
	Для Каждого ОписаниеПоля Из Новый Структура(ПоляИсточника) Цикл
		ПоляСвязи.Добавить(ОписаниеПоля.Ключ);
	КонецЦикла;
	ОписаниеЦепочек[ТипИсточника].ТипыПриемников.Вставить(ТипПриемника, ПоляСвязи);
	ОписаниеЦепочек[ТипПриемника].ТипыИсточников.Вставить(ТипИсточника, ПоляСвязи);
КонецПроцедуры

// ждем, что источников будем менее десятка и они будут почти всегда уже упорядочены, поэтому делаем сортировку вставками
Процедура СортироватьИсточники(Источники, ПолеПорядка, РасчетныеПартии)
	Для У = 1 По Источники.ВГраница() Цикл
		Если Неопределено = РасчетныеПартии[Источники[У]] Тогда
			Продолжить;
		КонецЕсли;
		Если ТипЗнч(РасчетныеПартии[Источники[У]]) = Тип("Массив") Тогда
			Если РасчетныеПартии[Источники[У]].Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			ИсточникУ = РасчетныеПартии[Источники[У]][0];
		Иначе
			ИсточникУ = РасчетныеПартии[Источники[У]];
		КонецЕсли;
		Элемент = Новый Структура("Порядок, Источник", ИсточникУ[ПолеПорядка], Источники[У]);
		Х = У - 1;
		Пока Х >= 0 Цикл
			Если ТипЗнч(РасчетныеПартии[Источники[Х]]) = Тип("Массив") Тогда
				Если РасчетныеПартии[Источники[Х]].Количество() = 0 Тогда
					Х = Х - 1;
					Продолжить;
				КонецЕсли;
				ИсточникХ = РасчетныеПартии[Источники[Х]][0];
			Иначе
				ИсточникХ = РасчетныеПартии[Источники[Х]];
			КонецЕсли;
			Если Неопределено = ИсточникХ Тогда
				Х = Х - 1;
				Продолжить;
			КонецЕсли;
			Если ИсточникХ[ПолеПорядка] <= Элемент.Порядок Тогда
				Прервать;
			КонецЕсли;
			Источники[Х + 1] = Источники[Х];
			Х = Х - 1;
		КонецЦикла;
		Источники[Х + 1] = Элемент.Источник;
	КонецЦикла;
КонецПроцедуры

Процедура СортироватьПриходыПоЛИФО(ПолеПорядка, МассивПриходов)
	Список = Новый СписокЗначений;
	Для Каждого Приход Из МассивПриходов Цикл
		Список.Добавить(Приход, Приход[ПолеПорядка]);
	КонецЦикла;
	Список.СортироватьПоПредставлению(НаправлениеСортировки.Убыв);
	МассивПриходов = Список.ВыгрузитьЗначения();
КонецПроцедуры

Процедура СортироватьИсточникиПоЗначениямПолей(Источники, ЗначенияПолей, Приходы)
	
	Список = Новый СписокЗначений;
	ИндексЭлементаМассива = -1;
	
	Для Каждого ИндексИсточника Из Источники Цикл
		
		ИндексЭлементаМассива = ИндексЭлементаМассива + 1;
		МассивПриходов = Приходы[ИндексИсточника];
		
		Если МассивПриходов = Неопределено ИЛИ МассивПриходов.Количество() = 0 Тогда
			Сдвиг = 0;
		Иначе
			Сдвиг = ЗначенияПолей.Количество();
			Для Каждого ПолеСортировки Из ЗначенияПолей Цикл
				Если МассивПриходов[0][ПолеСортировки.Ключ] = ПолеСортировки.Значение Тогда
					Сдвиг = Сдвиг - 1;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Список.Добавить(ИндексИсточника, Формат(ИндексЭлементаМассива + Сдвиг * Источники.Количество(), "ЧЦ=15; ЧДЦ=; ЧВН=; ЧГ="));
		
	КонецЦикла;
	
	Если Список.Количество() > 0 Тогда
		Список.СортироватьПоПредставлению(НаправлениеСортировки.Возр);
		Источники = Список.ВыгрузитьЗначения();
	КонецЕсли;
	
КонецПроцедуры

Функция ТребуетсяСортировка(Контекст, Расход)
	ТребуетсяСортировка = Истина;
	Если Контекст = "ПартииТоваровОрганизаций" Тогда
		ТребуетсяСортировка = (ТипЗнч(Расход.Регистратор) = Тип("ДокументСсылка.ТаможеннаяДекларацияИмпорт") И Расход.ТипЗаписи = "Потребление")
			ИЛИ (ТипЗнч(Расход.Регистратор) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") И Расход.ТипЗаписи = "Потребление");
	КонецЕсли;
	Возврат ТребуетсяСортировка;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Построение цепочек движений с помощью запроса

Процедура ЦепочкиДвижений(ОписаниеЦепочек, МВТ)
	ШаблонЗапроса = "
	|ВЫБРАТЬ
	|	Приемники.К КАК Приемник,
	|	Источники.К КАК Источник
	|ПОМЕСТИТЬ
	|	&Результат
	|ИЗ
	|	Данные КАК Приемники
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Данные КАК Источники
	|		ПО &Условия
	|ГДЕ
	|	Приемники.К <> Источники.К
	|	И Приемники.ТипЗаписи = &ТипПриемника
	|	И Источники.ТипЗаписи = &ТипИсточника
	|;
	|";
	ТекстЗапроса = "";
	Результаты = Новый Массив;
	Для Каждого Описание Из ОписаниеЦепочек Цикл
		ПоляПриемника = Описание.Значение.ПоляСвязи;
		Если ПоляПриемника.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		Для Каждого ОписаниеИсточника Из Описание.Значение.ТипыИсточников Цикл
			ПоляИсточника = ОписаниеИсточника.Значение;
			Если ПоляИсточника.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			НомерПоля = -1;
			Для Каждого ПолеПриемника Из ПоляПриемника Цикл
				НомерПоля = НомерПоля + 1;
				Если НомерПоля = 0 Тогда
					Условия = "Приемники." + ПолеПриемника + " = " + "Источники." + ПоляИсточника[НомерПоля];
				Иначе
					Условия = Условия + Символы.ПС + " И " + "Приемники." + ПолеПриемника + " = " + "Источники." + ПоляИсточника[НомерПоля];
				КонецЕсли;
			КонецЦикла;
			ТекстЗапроса = СтрЗаменить(ШаблонЗапроса, "&Результат", Описание.Ключ + ОписаниеИсточника.Ключ);
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Условия", Условия);
			Результаты.Добавить(Описание.Ключ + ОписаниеИсточника.Ключ);
			Запрос = Новый Запрос(ТекстЗапроса);
			Запрос.МенеджерВременныхТаблиц = МВТ;
			Запрос.УстановитьПараметр("ТипПриемника", Описание.Ключ);
			Запрос.УстановитьПараметр("ТипИсточника", ОписаниеИсточника.Ключ);
			Запрос.Выполнить();
		КонецЦикла;
	КонецЦикла;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ ПЕРВЫЕ 0
	|	-1 КАК Приемник,
	|	-1 КАК Источник
	|ПОМЕСТИТЬ
	|	Цепочки
	|";
	ШаблонЗапроса = "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	ДД.Приемник,
	|	ДД.Источник
	|ИЗ
	|	&ИмяТаблицы КАК ДД
	|";
	Для Каждого Результат Из Результаты Цикл
		ТекстЗапроса = ТекстЗапроса + СтрЗаменить(ШаблонЗапроса, "&ИмяТаблицы", Результат);
	КонецЦикла;
	ТекстЗапроса = ТекстЗапроса + ";";
	Для Каждого Результат Из Результаты Цикл
		ТекстЗапроса = ТекстЗапроса + "УНИЧТОЖИТЬ " + Результат + ";";
	КонецЦикла;
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Приемник КАК Ключ,
	|	ДД.Источник КАК Источник,
	|	0 			КАК Порядок
	|ПОМЕСТИТЬ Источники
	|ИЗ
	|	Цепочки КАК ДД
	|ИНДЕКСИРОВАТЬ ПО
	|	Ключ
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Источник КАК Ключ,
	|	ДД.Приемник КАК Приемник,
	|	0 			КАК Порядок
	|ПОМЕСТИТЬ Приемники
	|ИЗ
	|	Цепочки КАК ДД
	|ИНДЕКСИРОВАТЬ ПО
	|	Ключ
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Цепочки
	|";
	
	Запрос.Выполнить();
	
	ОптимизироватьНумерациюВЦепочках(МВТ);
	
КонецПроцедуры

Процедура ОптимизироватьНумерациюВЦепочках(МенеджерВременныхТаблиц)
	
	РазмерТаблицыДанных = УниверсальныеМеханизмыПартийИСебестоимости.РазмерВременнойТаблицы(МенеджерВременныхТаблиц, "Данные");
	
	Если РазмерТаблицыДанных = 0 Тогда
		Возврат;
	КонецЕсли;
	
	#Область Инициализация
	
	НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	// Подготовим необходимые параметры расчета (аналогично параметрам партионного учета версии 2.2).
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("МенеджерВременныхТаблиц", МенеджерВременныхТаблиц);
	ПараметрыРасчета.Вставить("ОграниченияВыборки", Новый Структура);
	ПараметрыРасчета.ОграниченияВыборки.Вставить("КоличествоСтрокВТЗ", 100000);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ПараметрыРасчета.МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("РазмерТаблицыДанных", РазмерТаблицыДанных);
	Запрос.УстановитьПараметр("КоличествоСтрокВТЗ",  ПараметрыРасчета.ОграниченияВыборки.КоличествоСтрокВТЗ);
	
	// Получим описание структуры временной таблицы Данные.
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 0
	|	*
	|ИЗ
	|	Данные КАК Т";
	
	ПустаяТаблицаДанных    = Запрос.Выполнить().Выгрузить();
	КолонкиТаблицыДанных   = ПустаяТаблицаДанных.Колонки;
	
	ЕстьПериодПоступленияВДанных = (КолонкиТаблицыДанных.Найти("ПериодПоступления") <> Неопределено);
	ЕстьПериодВДанных 	   		 = (КолонкиТаблицыДанных.Найти("Период") <> Неопределено);
	ЕстьРегистраторВДанных 		 = (КолонкиТаблицыДанных.Найти("Регистратор") <> Неопределено);
	
	ИменаКолонокТаблицыДанные = "";
	Для Каждого ТекущаяКолонка Из КолонкиТаблицыДанных Цикл
		
		ИмяКолонки = ?(ТекущаяКолонка.Имя = "К", "НовыеНомера.НовыйНомерУзла КАК К", "Т." + ТекущаяКолонка.Имя);
		
		ИменаКолонокТаблицыДанные = ИменаКолонокТаблицыДанные + ?(ИменаКолонокТаблицыДанные = "", "", ",
			|	") + ИмяКолонки;
		
	КонецЦикла;
	
	#КонецОбласти
	
	#Область Упорядочивание
	
	// Подготовим данные для упорядочивания записей.
	// Упорядочивание выполняется по полям ПериодПоступления, Период, Регистратор
	// Упорядочивание используется для сортировки узлов одной волны подграфа и для сортировки источников и приемников узла.
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.К КАК НомерУзла,
	|	%1 КАК ПериодПоступления,
	|	%2 КАК Период,
	|	%3 КАК Регистратор
	|ПОМЕСТИТЬ ВТДанныеДляУпорядочивания
	|ИЗ
	|	Данные КАК Т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодПоступления,
	|	Период,
	|	Регистратор";
	
	Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		Запрос.Текст,
		?(ЕстьПериодПоступленияВДанных, "ЕСТЬNULL(Т.ПериодПоступления, ДАТАВРЕМЯ(1,1,1))", "ДАТАВРЕМЯ(1,1,1)"),
		?(ЕстьПериодВДанных, "ЕСТЬNULL(Т.Период, ДАТАВРЕМЯ(1,1,1))", "ДАТАВРЕМЯ(1,1,1)"),
		?(ЕстьРегистраторВДанных, "ЕСТЬNULL(Т.Регистратор, НЕОПРЕДЕЛЕНО)", "ДАТАВРЕМЯ(1,1,1)"));
	
	Запрос.Выполнить(); // создание ВТДанныеДляУпорядочивания
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	%1 КАК ЗначениеРазделителя,
	|	Т.ПериодПоступления КАК ПериодПоступления,
	|	Т.Период КАК Период,
	|	Т.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТПоляУпорядочивания
	|ИЗ
	|	ВТДанныеДляУпорядочивания КАК Т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодПоступления,
	|	Период,
	|	Регистратор";
	
	Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		Запрос.Текст,
		?(ЕстьПериодПоступленияВДанных,
			"НАЧАЛОПЕРИОДА(Т.ПериодПоступления, ДЕНЬ)",
			?(ЕстьПериодВДанных,
				"НАЧАЛОПЕРИОДА(Т.Период, ДЕНЬ)",
				"1")));
	
	Запрос.Выполнить(); // создание ВТПоляУпорядочивания
	
	ПараметрыНумерации = УниверсальныеМеханизмыПартийИСебестоимости.СформироватьПараметрыНумерацииСтрокВременнойТаблицы(
		"ЗначениеРазделителя", // разделитель
		"", // ресурсы
		"ПериодПоступления, Период, Регистратор", // порядок
		"Порядок", // номер
		"ПериодПоступления, Период, Регистратор"); // индекс
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьНомераСтрокВременнойТаблицы(
		ПараметрыРасчета,
		ПараметрыНумерации,
		"ВТПоляУпорядочивания");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.НомерУзла 			   КАК НомерУзла,
	|	ПоляУпорядочивания.Порядок КАК Порядок
	|ПОМЕСТИТЬ ВТПорядокУзлов
	|ИЗ
	|	ВТДанныеДляУпорядочивания КАК Т
	|   ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПоляУпорядочивания КАК ПоляУпорядочивания
	|		ПО Т.ПериодПоступления = ПоляУпорядочивания.ПериодПоступления
	|		 И Т.Период = ПоляУпорядочивания.Период
	|		 И Т.Регистратор = ПоляУпорядочивания.Регистратор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла";
	
	Запрос.Выполнить(); // создание ВТПорядокУзлов
	
	УниверсальныеМеханизмыПартийИСебестоимости.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"ВТДанныеДляУпорядочивания, ВТПоляУпорядочивания");
		
	#КонецОбласти
	
	#Область РазбиениеГрафаНаПодграфы
	
	// Выполним разбиение исходного графа данных на несвязанные между собой подграфы.
	// Каждый найденный подграф будет пронумерован от 0 до (количество подграфов - 1) в порядку убывания количества узлов в подграфе.
	// Т.е. подграф с номером 0 будет самым большим, а последние подграфы будут вырожденные (содержат по одному узлу).
	//
	// Разбиение выполняем следующим образов:
	// - для начала каждой вершине присваиваем номер подграфа, равный номеру самой вершины
	// - для каждой вершины i определяем номера подграфов всех ее источников и приемников
	// - если минимальный номер подграфов связанных вершин меньше, чем номер подграфа самой вершины i,
	//	 то присваиваем вершине i этот минимальный номер подграфа
	// - повторяем в цикле действия 2 и 3 до тех пор, пока на очередной итерации ни у одной вершины не изменится номер ее подграфа.
	// Т.е. минимальный номер вершины в каждом подграфе как-бы начинает "расползаться" по этому подграфу - от этой вершины
	// сначала "переходит" на смежные вершины, потом на их смежные вершины и т.д, пока не "займет" весь подграф.
	// В результате каждый подграф будет иметь свой уникальный номер, равный номеру минимальной вершины, входящий в него.
	// Затем сделаем сквозную нумерацию этих подграфов (как написано выше).
	// Например, есть исходный граф ((4-2-1-7) (6) (5-3)):
	// - найдем в нем три подграфа с условными номерами 1, 6 и 3
	// - затем присвоим им номера 0, 2 и 1 соответственно
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.К КАК НомерУзла,
	|	Т.К КАК НомерПодграфа
	|ПОМЕСТИТЬ ВТУзлыПодграфов
	|ИЗ
	|	Данные КАК Т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Ключ КАК НомерУзла,
	|	Т.Источник КАК СвязанныйУзел,
	|	ИСТИНА КАК ЭтоИсточник
	|ПОМЕСТИТЬ ВТСвязиУзлов
	|ИЗ
	|	Источники КАК Т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Т.Ключ,
	|	Т.Приемник,
	|	ЛОЖЬ
	|ИЗ
	|	Приемники КАК Т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СвязанныйУзел,
	|	ЭтоИсточник";
	
	Запрос.Выполнить(); // создание ВТУзлыПодграфов и ВТСвязиУзлов
	
	ЕстьИзменения 	   = Истина;
	КоличествоИтерацийПоискаПодграфов = 0;
	
	Пока ЕстьИзменения Цикл
		
		КоличествоИтерацийПоискаПодграфов = КоличествоИтерацийПоискаПодграфов + 1;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СвязиУзлов.НомерУзла КАК НомерУзла,
		|	МИНИМУМ(Т.НомерПодграфа) КАК НомерПодграфа
		|ПОМЕСТИТЬ ВТПодграфыСвязанныхУзлов
		|ИЗ
		|	ВТУзлыПодграфов КАК Т
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСвязиУзлов КАК СвязиУзлов
		|		ПО Т.НомерУзла = СвязиУзлов.СвязанныйУзел
		|
		|СГРУППИРОВАТЬ ПО
		|	СвязиУзлов.НомерУзла
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерУзла
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.НомерУзла КАК НомерУзла,
		|	ПодграфыСвязанныхУзлов.НомерПодграфа КАК НомерПодграфа
		|ПОМЕСТИТЬ ВТИзмененныеПодграфы
		|ИЗ
		|	ВТУзлыПодграфов КАК Т
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПодграфыСвязанныхУзлов КАК ПодграфыСвязанныхУзлов
		|		ПО Т.НомерУзла = ПодграфыСвязанныхУзлов.НомерУзла
		|ГДЕ
		|	ПодграфыСвязанныхУзлов.НомерПодграфа < Т.НомерПодграфа
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерУзла
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТПодграфыСвязанныхУзлов";
		
		Запрос.Выполнить(); // создание ВТИзмененныеПодграфы
		
		ЕстьИзменения = (УниверсальныеМеханизмыПартийИСебестоимости.РазмерВременнойТаблицы(ПараметрыРасчета, "ВТИзмененныеПодграфы") > 0);
		
		Если ЕстьИзменения Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	Т.НомерУзла,
			|	ВЫБОР КОГДА ИзмененныеПодграфы.НомерУзла ЕСТЬ NULL 
			|		ТОГДА Т.НомерПодграфа
			|		ИНАЧЕ ИзмененныеПодграфы.НомерПодграфа
			|	КОНЕЦ КАК НомерПодграфа
			|ПОМЕСТИТЬ ВТНовыеУзлыПодграфов
			|ИЗ
			|	ВТУзлыПодграфов КАК Т
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИзмененныеПодграфы КАК ИзмененныеПодграфы
			|		ПО Т.НомерУзла = ИзмененныеПодграфы.НомерУзла
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТУзлыПодграфов
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Т.НомерУзла,
			|	Т.НомерПодграфа
			|ПОМЕСТИТЬ ВТУзлыПодграфов
			|ИЗ
			|	ВТНовыеУзлыПодграфов КАК Т
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	НомерУзла
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТНовыеУзлыПодграфов";
			
			Запрос.Выполнить(); // обновление ВТУзлыПодграфов
			
		КонецЕсли;
		
		УниверсальныеМеханизмыПартийИСебестоимости.УничтожитьВременныеТаблицы(ПараметрыРасчета, "ВТИзмененныеПодграфы");
		
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	0 КАК ЗначениеРазделителя,
	|	Т.НомерПодграфа КАК НомерПодграфа,
	|	СУММА(1) КАК КоличествоУзлов,
	|	СУММА(1) КАК НовыйНомерПервогоУзлаПодграфа
	|ПОМЕСТИТЬ ВТПодграфы
	|ИЗ
	|	ВТУзлыПодграфов КАК Т
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.НомерПодграфа";
	
	Запрос.Выполнить(); // создание ВТПодграфы
	
	ПараметрыНумерации = УниверсальныеМеханизмыПартийИСебестоимости.СформироватьПараметрыНумерацииСтрокВременнойТаблицы(
		"ЗначениеРазделителя", // разделитель
		"", // ресурсы
		"КоличествоУзлов УБЫВ, НомерПодграфа", // порядок
		"НовыйНомерПодграфа", // номер
		"НомерПодграфа", // индекс
		"НовыйНомерПервогоУзлаПодграфа"); // накопление
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьНомераСтрокВременнойТаблицы(
		ПараметрыРасчета,
		ПараметрыНумерации,
		"ВТПодграфы");
	
	#КонецОбласти
	
	#Область ВолновойОбходГрафа
	
	// Для того, чтобы пронумеровать вершины графа от начальных (не имеющих входов) до конечных (не имеющих выходов),
	// необходимо для каждой вершины определить ее "удаленность" от начальной вершины.
	// Вершины с меньшей "удаленностью" от начальных должны иметь меньшие номера чем вершины с большей "удаленность".
	// Т.е. цепочки графа должен иметь вид 1->2->3->4, а не 2->4->1->3.
	// При соблюдении этого условию механизм расчета партий по цепочкам будет работать наиболее оптимальным образом.
	//
	// Для расчета удаленности вершин используем волновой метод:
	// - начальным вершинам присваиваем номер волны 1
	// - вершинам, в которые есть путь из начальных вершин - номер волны 2
	// - и т.д., пока не достигнем конечных вершин.
	// Если после этого останутся вершины, которым не присвоен номер волны,
	// значит эти вершины образуют цикл, в который нет пути из начальных вершин.
	// Обрабатываем такие циклы следующим образом:
	// - выбираем произвольную вершину, принадлежащую этому циклу
	// - присваиваем ей очередной номер волны N и от нее продолжаем обход оставшихся вершин
	// В результате всем вершинам исходного графа будет присвоен некий номер волны.
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.НомерУзла КАК НомерУзла,
	|	Т.КоличествоПриемников КАК КоличествоПриемников,
	|	Т.КоличествоИсточников КАК КоличествоИсточников,
	|	ВЫБОР
	|		КОГДА Т.КоличествоПриемников = 0 И Т.КоличествоИсточников = 0
	|			ТОГДА &РазмерТаблицыДанных
	|		КОГДА Т.КоличествоИсточников = 0
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НомерВолны
	|ПОМЕСТИТЬ ВТОписаниеУзлов
	|ИЗ
	|	(ВЫБРАТЬ
	|		Т.НомерУзла КАК НомерУзла,
	|		СУММА(Т.КоличествоПриемников) КАК КоличествоПриемников,
	|		СУММА(Т.КоличествоИсточников) КАК КоличествоИсточников
	|	ИЗ
	|		(ВЫБРАТЬ
	|			Т.НомерУзла КАК НомерУзла,
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Приемники.Приемник) КАК КоличествоПриемников,
	|			0 КАК КоличествоИсточников
	|		ИЗ
	|			ВТУзлыПодграфов КАК Т
	|				ЛЕВОЕ СОЕДИНЕНИЕ Приемники КАК Приемники
	|				ПО Т.НомерУзла = Приемники.Ключ
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Т.НомерУзла
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	|		ВЫБРАТЬ
	|			Т.НомерУзла,
	|			0,
	|			КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Источники.Источник)
	|		ИЗ
	|			ВТУзлыПодграфов КАК Т
	|				ЛЕВОЕ СОЕДИНЕНИЕ Источники КАК Источники
	|				ПО Т.НомерУзла = Источники.Ключ
	|		
	|		СГРУППИРОВАТЬ ПО
	|			Т.НомерУзла) КАК Т
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Т.НомерУзла) КАК Т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла";
	
	Запрос.Выполнить(); // создание ВТОписаниеУзлов
	
	ЕстьИзменения 	    = Истина;
	НомерВолны    	    = 1;
	НомерВолныДляЦиклов = 0;
	
	Пока ЕстьИзменения Цикл
		
		НомерВолны = НомерВолны + 1;
		Запрос.УстановитьПараметр("НомерВолны", НомерВолны);
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Приемники.Приемник КАК НомерУзла
		|ПОМЕСТИТЬ ВТИзменениеОписанияУзлов
		|ИЗ
		|	ВТОписаниеУзлов КАК Т
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Приемники КАК Приемники
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОписаниеУзлов КАК ОписаниеУзловПриемников
		|			ПО Приемники.Приемник = ОписаниеУзловПриемников.НомерУзла
		|				И (ОписаниеУзловПриемников.НомерВолны = 0)
		|		ПО Т.НомерУзла = Приемники.Ключ
		|ГДЕ
		|	Т.НомерВолны = &НомерВолны - 1
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НомерУзла";
		
		Запрос.Выполнить(); // создание ВТИзменениеОписанияУзлов
		
		ЕстьИзменения = (УниверсальныеМеханизмыПартийИСебестоимости.РазмерВременнойТаблицы(ПараметрыРасчета, "ВТИзменениеОписанияУзлов") > 0);
		
		Если НЕ ЕстьИзменения Тогда
			
			// Может получиться, что некоторые узла обойти не удалось - эти узлы могут располагаться в циклах, в которые нет пути из начальных вершин ( с номером волны = 1).
			// В этом случае из цикла берем вершину с минимальным номером и минимальным количеством исходящих дуг и продолжаем обход из нее.
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	КОЛИЧЕСТВО(*) КАК КоличествоУзловВЦиклах
			|ИЗ
			|	ВТОписаниеУзлов КАК Т
			|ГДЕ
			|	Т.НомерВолны = 0
			|";
			
			Выборка = Запрос.Выполнить().Выбрать();
			Выборка.Следующий();
			
			ЕстьИзменения = (Выборка.КоличествоУзловВЦиклах > 0); // если Ложь, то обход графа полностью завершен
				
			Если ЕстьИзменения Тогда
				
				НомерВолныДляЦиклов = ?(ЗначениеЗаполнено(НомерВолныДляЦиклов), НомерВолныДляЦиклов, НомерВолны);
				
				Запрос.Текст =
				"ВЫБРАТЬ
				|	Т.НомерПодграфа КАК НомерПодграфа,
				|	Т.НомерУзла,
				|	ОписаниеУзлов.КоличествоПриемников КАК КоличествоПриемников
				|ПОМЕСТИТЬ ВТУзлыДляОбхода
				|ИЗ
				|	ВТУзлыПодграфов КАК Т
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОписаниеУзлов КАК ОписаниеУзлов
				|		ПО Т.НомерУзла = ОписаниеУзлов.НомерУзла
				|ГДЕ
				|	ОписаниеУзлов.НомерВолны = 0
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	НомерПодграфа,
				|	КоличествоПриемников
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	Т.НомерПодграфа КАК НомерПодграфа,
				|	МИНИМУМ(Т.КоличествоПриемников) КАК КоличествоПриемников
				|ПОМЕСТИТЬ ВТПодграфыДляОбхода
				|ИЗ
				|	ВТУзлыДляОбхода КАК Т
				|
				|СГРУППИРОВАТЬ ПО
				|	Т.НомерПодграфа
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	НомерПодграфа,
				|	КоличествоПриемников
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТИзменениеОписанияУзлов
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТУзлыДляОбхода.НомерПодграфа,
				|	МИНИМУМ(ВТУзлыДляОбхода.НомерУзла) КАК НомерУзла
				|ПОМЕСТИТЬ ВТИзменениеОписанияУзлов
				|ИЗ
				|	ВТУзлыДляОбхода КАК ВТУзлыДляОбхода
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПодграфыДляОбхода КАК ВТПодграфыДляОбхода
				|		ПО ВТУзлыДляОбхода.НомерПодграфа = ВТПодграфыДляОбхода.НомерПодграфа
				|			И ВТУзлыДляОбхода.КоличествоПриемников = ВТПодграфыДляОбхода.КоличествоПриемников
				|
				|СГРУППИРОВАТЬ ПО
				|	ВТУзлыДляОбхода.НомерПодграфа
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	НомерУзла";
				
				Запрос.Выполнить(); // создание ВТИзменениеОписанияУзлов
				
				УниверсальныеМеханизмыПартийИСебестоимости.УничтожитьВременныеТаблицы(ПараметрыРасчета, "ВТУзлыДляОбхода, ВТПодграфыДляОбхода");
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЕстьИзменения Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	Т.НомерУзла,
			|	Т.КоличествоПриемников,
			|	Т.КоличествоИсточников,
			|	ВЫБОР КОГДА ИзменениеОписанияУзлов.НомерУзла ЕСТЬ NULL 
			|		ТОГДА Т.НомерВолны
			|		ИНАЧЕ &НомерВолны
			|	КОНЕЦ КАК НомерВолны
			|ПОМЕСТИТЬ ВТНовоеОписаниеУзлов
			|ИЗ
			|	ВТОписаниеУзлов КАК Т
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИзменениеОписанияУзлов КАК ИзменениеОписанияУзлов
			|		ПО Т.НомерУзла = ИзменениеОписанияУзлов.НомерУзла
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТОписаниеУзлов
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Т.НомерУзла,
			|	Т.КоличествоПриемников,
			|	Т.КоличествоИсточников,
			|	Т.НомерВолны
			|ПОМЕСТИТЬ ВТОписаниеУзлов
			|ИЗ
			|	ВТНовоеОписаниеУзлов КАК Т
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	НомерУзла
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТНовоеОписаниеУзлов";
			
			Запрос.Выполнить(); // обновление ВТОписаниеУзлов
			
		КонецЕсли;
		
		УниверсальныеМеханизмыПартийИСебестоимости.УничтожитьВременныеТаблицы(ПараметрыРасчета, "ВТИзменениеОписанияУзлов");
			
	КонецЦикла;
	
	#КонецОбласти
	
	#Область РасчетНовыхНомеровУзлов
	
	// Рассчитаем новые номера вершин исходного графа:
	// - упорядочим все вершины
	// - обойдем получившийся результат и последовательно пронумеруем вершины от 0 до (количество вершин - 1)
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Подграфы.НовыйНомерПервогоУзлаПодграфа / &КоличествоСтрокВТЗ КАК ЧИСЛО(15,0)) КАК ЗначениеРазделителя,
	|	Подграфы.НомерПодграфа 			КАК НомерПодграфа,
	|	Подграфы.НовыйНомерПодграфа 	КАК НовыйНомерПодграфа,
	|	Т.НомерВолны 					КАК НомерВолны,
	|	Т.НомерУзла 					КАК НомерУзла,
	|	Т.НомерУзла 					КАК НовыйНомерУзла,
	|	ПорядокУзлов.Порядок 			КАК Порядок
	|ПОМЕСТИТЬ ВТНовыеНомераУзлов
	|ИЗ
	|	ВТОписаниеУзлов КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУзлыПодграфов КАК УзлыПодграфов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПодграфы КАК Подграфы
	|			ПО УзлыПодграфов.НомерПодграфа = Подграфы.НомерПодграфа
	|		ПО Т.НомерУзла = УзлыПодграфов.НомерУзла
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПорядокУзлов КАК ПорядокУзлов
	|		ПО Т.НомерУзла = ПорядокУзлов.НомерУзла";
	
	Запрос.Выполнить(); // создание ВТНовыеНомераУзлов
	
	ПараметрыНумерации = УниверсальныеМеханизмыПартийИСебестоимости.СформироватьПараметрыНумерацииСтрокВременнойТаблицы(
		"ЗначениеРазделителя", // разделитель
		"", // ресурсы
		"НовыйНомерПодграфа, НомерВолны, Порядок, НомерУзла", // порядок
		"НовыйНомерУзла", // номер
		"НомерУзла"); // индекс
	
	УниверсальныеМеханизмыПартийИСебестоимости.ЗаполнитьНомераСтрокВременнойТаблицы(
		ПараметрыРасчета,
		ПараметрыНумерации,
		"ВТНовыеНомераУзлов");
		
	#КонецОбласти
	
	#Область ИзменениеНумерацииВТаблицах
	
	// Заменим старые номера вершин на новые в служебных временных таблицах Данные, Источники, Приемники.
	// В таблицах Источники и Приемники заполним поле Порядок.
	// Это поле относятся к колонкам "Источник" и "Приемник" и предназначено для их сортировки по ФИФО.
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.НомерУзла 			 КАК Ключ,
	|	Т.СвязанныйУзел 		 КАК Источник,
	|	ПорядокУзлов.Порядок 	 КАК Порядок
	|ПОМЕСТИТЬ Источники_Временная
	|ИЗ
	|	ВТСвязиУзлов КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПорядокУзлов КАК ПорядокУзлов
	|		ПО Т.СвязанныйУзел = ПорядокУзлов.НомерУзла
	|			И Т.ЭтоИсточник = ИСТИНА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Источники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НовыеНомераКлючей.НовыйНомерУзла 	 КАК Ключ,
	|	НовыеНомераИсточников.НовыйНомерУзла КАК Источник,
	|	Т.Порядок 				 			 КАК Порядок
	|ПОМЕСТИТЬ Источники
	|ИЗ
	|	Источники_Временная КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНовыеНомераУзлов КАК НовыеНомераКлючей
	|		ПО Т.Ключ = НовыеНомераКлючей.НомерУзла
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНовыеНомераУзлов КАК НовыеНомераИсточников
	|		ПО Т.Источник = НовыеНомераИсточников.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Источники_Временная";
	
	Запрос.Выполнить(); // обновление Источники
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.НомерУзла 			 КАК Ключ,
	|	Т.СвязанныйУзел 		 КАК Приемник,
	|	ПорядокУзлов.Порядок 	 КАК Порядок
	|ПОМЕСТИТЬ Приемники_Временная
	|ИЗ
	|	ВТСвязиУзлов КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПорядокУзлов КАК ПорядокУзлов
	|		ПО Т.СвязанныйУзел = ПорядокУзлов.НомерУзла
	|			И (Т.ЭтоИсточник = ЛОЖЬ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Приемники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НовыеНомераКлючей.НовыйНомерУзла 	 КАК Ключ,
	|	НовыеНомераПриемников.НовыйНомерУзла КАК Приемник,
	|	Т.Порядок 				 			 КАК Порядок
	|ПОМЕСТИТЬ Приемники
	|ИЗ
	|	Приемники_Временная КАК Т
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНовыеНомераУзлов КАК НовыеНомераКлючей
	|		ПО Т.Ключ = НовыеНомераКлючей.НомерУзла
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНовыеНомераУзлов КАК НовыеНомераПриемников
	|		ПО Т.Приемник = НовыеНомераПриемников.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Приемники_Временная";
	
	Запрос.Выполнить(); // обновление Приемники
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ЕстьРазличия
	|ИЗ
	|	ВТНовыеНомераУзлов КАК Т
	|ГДЕ
	|	Т.НомерУзла <> Т.НовыйНомерУзла";
	
	ЕстьИзменения = НЕ Запрос.Выполнить().Пустой();
	
	Если ЕстьИзменения Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	*
		|ПОМЕСТИТЬ Данные_Временная
		|ИЗ
		|	Данные КАК Т
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Данные
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	%1
		|ПОМЕСТИТЬ Данные
		|ИЗ
		|	Данные_Временная КАК Т
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНовыеНомераУзлов КАК НовыеНомера
		|		ПО Т.К = НовыеНомера.НомерУзла
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	К
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Данные_Временная";
		
		Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Запрос.Текст, ИменаКолонокТаблицыДанные);
		
		Запрос.Выполнить(); // обновление Данные
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ФормированиеСтатистикиГрафа
	
	// Создадим новые служебные таблицы ОписаниеПодграфов и ОписаниеУзловПодграфов.
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.НовыйНомерУзла 					КАК НомерУзла,
	|	Т.НовыйНомерПодграфа 				КАК НомерПодграфа,
	|	Т.НомерВолны 						КАК НомерВолны,
	|	Т.Порядок							КАК Порядок,
	|	ОписаниеУзлов.КоличествоПриемников 	КАК КоличествоПриемников,
	|	ОписаниеУзлов.КоличествоИсточников 	КАК КоличествоИсточников
	|ПОМЕСТИТЬ ОписаниеУзловПодграфов
	|ИЗ
	|	ВТНовыеНомераУзлов КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОписаниеУзлов КАК ОписаниеУзлов
	|		ПО Т.НомерУзла = ОписаниеУзлов.НомерУзла
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерУзла
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	Т.НомерПодграфа 					КАК НомерПодграфа,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Т.НомерВолны) 	КАК КоличествоВолн,
	|	СУММА(Т.КоличествоИсточников) 		КАК КоличествоСвязей,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Т.НомерУзла) 	КАК КоличествоУзлов,
	|	МИНИМУМ(Т.НомерУзла) 				КАК МинимальныйНомерУзла,
	|	МАКСИМУМ(Т.НомерУзла) 				КАК МаксимальныйНомерУзла,
	|	МАКСИМУМ(Т.КоличествоПриемников) 	КАК МаксимумПриемниковУзла,
	|	МАКСИМУМ(Т.КоличествоИсточников) 	КАК МаксимумИсточниковУзла
	|ПОМЕСТИТЬ ОписаниеПодграфов
	|ИЗ
	|	ОписаниеУзловПодграфов КАК Т
	|СГРУППИРОВАТЬ ПО
	|	Т.НомерПодграфа
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерПодграфа";
	
	Запрос.Выполнить(); // создание ОписаниеУзловПодграфов и ОписаниеПодграфов
	
	// Выведем в журнал регистрации подробное описание графа.
	
	ОписаниеГрафа = НСтр("ru='Описание цепочек (графа) для расчета:
    |	узлов - %01; дуг - %02; макс. исходящих дуг - %03; макс. входящих дуг - %04;
    |	содержит несвязанных подграфов - %05, в т.ч. вырожденных (из одного узла) - %06;
    |	макс. узлов в одном подграфе - %07; макс. дуг в одном подграфе - %08;
    |	выполнено итераций поиска подграфов - %09, итераций нумерации - %10, в т.ч. из-за циклов - %11'
    |;uk='Опис ланцюжків (графа) для розрахунку:
    |	вузлів %01; дуг - %02; макс. вихідних дуг - %03; макс. вхідних дуг - %04;
    |	містить незв''язаних подграфов - %05, в т. ч. вироджених (з одного вузла) - %06;
    |	макс. вузлів в одному подграфе - %07; макс. дуг в одному подграфе - %08;
    |	виконано ітерацій пошуку подграфов - %09, ітерацій нумерації - %10, в т. ч. через циклів - %11'");
	
	Запрос.УстановитьПараметр("КоличествоИтерацийПоискаПодграфов", 	   КоличествоИтерацийПоискаПодграфов);
	Запрос.УстановитьПараметр("КоличествоИтерацийНумерации", 	   	   НомерВолны - 1);
	Запрос.УстановитьПараметр("КоличествоИтерацийНумерацииИзЗаЦиклов", ?(ЗначениеЗаполнено(НомерВолныДляЦиклов), НомерВолны - НомерВолныДляЦиклов, 0));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	1 						 КАК НомерПараметра,
	|	СУММА(Т.КоличествоУзлов) КАК ЗначениеПараметра
	|ИЗ
	|	ОписаниеПодграфов КАК Т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	СУММА(Т.КоличествоСвязей)
	|ИЗ
	|	ОписаниеПодграфов КАК Т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	МАКСИМУМ(Т.МаксимумПриемниковУзла)
	|ИЗ
	|	ОписаниеПодграфов КАК Т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4,
	|	МАКСИМУМ(Т.МаксимумИсточниковУзла)
	|ИЗ
	|	ОписаниеПодграфов КАК Т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	5,
	|	КОЛИЧЕСТВО(*)
	|ИЗ
	|	ОписаниеПодграфов КАК Т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	6,
	|	КОЛИЧЕСТВО(*)
	|ИЗ
	|	ОписаниеПодграфов КАК Т
	|ГДЕ
	|	Т.КоличествоУзлов = 1
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	7,
	|	МАКСИМУМ(Т.КоличествоУзлов)
	|ИЗ
	|	ОписаниеПодграфов КАК Т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	8,
	|	МАКСИМУМ(Т.КоличествоСвязей)
	|ИЗ
	|	ОписаниеПодграфов КАК Т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	9,
	|	&КоличествоИтерацийПоискаПодграфов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	10,
	|	&КоличествоИтерацийНумерации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	11,
	|	&КоличествоИтерацийНумерацииИзЗаЦиклов
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерПараметра";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ОписаниеГрафа = СтрЗаменить(
			ОписаниеГрафа,
			"%" + Формат(Выборка.НомерПараметра, "ЧЦ=2; ЧВН="),
			СокрЛП(Выборка.ЗначениеПараметра));
	КонецЦикла;
	
	ОкончаниеЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
	ОписаниеГрафа = ОписаниеГрафа + "
		|	" + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Время подготовки графа: %1 сек.';uk='Час підготовки графа: %1 сек.'"),
					Формат((ОкончаниеЗамера - НачалоЗамера)/1000, "ЧГ="));
	
	ИмяСобытия = НСтр("ru='Партионный учет.ИнформацияОЦепочках';uk='Партіонний облік.ИнформацияОЦепочках'",ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Информация,,, ОписаниеГрафа);
	
	#КонецОбласти
	
	УниверсальныеМеханизмыПартийИСебестоимости.УничтожитьВременныеТаблицы(ПараметрыРасчета,
		"ВТПорядокУзлов, ВТУзлыПодграфов, ВТСвязиУзлов, ВТПодграфы, ВТОписаниеУзлов, ВТНовыеНомераУзлов");
	
КонецПроцедуры


Функция ЦепочкиДвиженийПоИндексу(МВТ, НачальныйИндекс, КонечныйИндекс, ЦепочкиДвижений, СтрокиЦепочек)
	
	Колонки = СтрокиЦепочек.Колонки;
	Если Колонки.Количество() = 0 Тогда
		Колонки.Добавить("Источники", 	   Новый ОписаниеТипов("Массив"));
		Колонки.Добавить("Приемники", 	   Новый ОписаниеТипов("Массив"));
		Колонки.Добавить("ПройденныйПуть", Новый ОписаниеТипов("Соответствие"));
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("НачальныйИндекс", НачальныйИндекс);
	Запрос.УстановитьПараметр("КонечныйИндекс",  КонечныйИндекс);
	
	ТаблицыСвязейУзлов = Новый Структура;
	ТаблицыСвязейУзлов.Вставить("Источники", "Источник");
	ТаблицыСвязейУзлов.Вставить("Приемники", "Приемник");
	
	ШаблонЗапроса =
	"ВЫБРАТЬ
	|	ДД.Ключ КАК Ключ,
	|	ДД.%2 КАК %2
	|ИЗ
	|	%1 КАК ДД
	|ГДЕ
	|	ДД.Ключ >= &НачальныйИндекс
	|	И ДД.Ключ <= &КонечныйИндекс
	|	И ДД.Ключ <> ДД.%2
	|	
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	ДД.Порядок,
	|	%2";
	
	Для Каждого ОписаниеТаблицы Из ТаблицыСвязейУзлов Цикл
		
		Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонЗапроса,
			ОписаниеТаблицы.Ключ,
			ОписаниеТаблицы.Значение);
		
		ТекущийКлюч = -1;
		Строка = Неопределено;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Ключ = Выборка.Ключ;
			
			Если ТекущийКлюч <> Ключ Тогда
				
				Если ТекущийКлюч <> -1 Тогда
					ЦепочкиДвижений.Вставить(ТекущийКлюч, Строка);
				КонецЕсли;
				
				ТекущийКлюч = Ключ;
				
				Строка = ЦепочкиДвижений[ТекущийКлюч];
				Если Строка = Неопределено Тогда
					Строка = СтрокиЦепочек.Добавить();
				КонецЕсли;
				
			КонецЕсли;
			
			Строка[ОписаниеТаблицы.Ключ].Добавить(Выборка[ОписаниеТаблицы.Значение]);
			
		КонецЦикла;
		
		Если ТекущийКлюч <> -1 Тогда
			ЦепочкиДвижений.Вставить(ТекущийКлюч, Строка);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Выборка.Количество(); // размер выборки из источников и приемников одинаковый
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Расчет партий по цепочкам движений и выборки из результата запроса

Функция ВыборкаДанныеПоИндексу(МВТ, НачальныйИндекс, КонечныйИндекс)
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	Данные КАК ДД
	|ГДЕ
	|	ДД.К >= &НачальныйИндекс
	|	И ДД.К <= &КонечныйИндекс
	|УПОРЯДОЧИТЬ ПО
	|	ДД.К ВОЗР
	|");
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("НачальныйИндекс", НачальныйИндекс);
	Запрос.УстановитьПараметр("КонечныйИндекс", КонечныйИндекс);
	Выборка = Запрос.Выполнить().Выбрать();
	Возврат Выборка;
КонецФункции

Процедура РассчитатьПартииПоЦепочкам(ОписаниеДвижений, ДанныеДляРасчета, РасчетныеПартии, Регистраторы, Тест)
	
	Приходы = Новый Соответствие; // буфер копий партий для покрытия расходов
	Расходы = Новый Соответствие; // буфер нерассчитанных партий для расчета на следующих итерациях
	СтрокиПриходов = РасчетныеПартии.СкопироватьКолонки();
	СтрокиРасходов = РасчетныеПартии.СкопироватьКолонки();
	ПройденныйПуть = Новый Соответствие; // используется для прерывания циклов
	ИндексыРасходов = Новый Массив;
	ЦепочкиДвижений = Новый Соответствие;
	СтрокиЦепочек = Новый ТаблицаЗначений;
	
	ПриходыКолвоСтрок = 0;
	КлючГруппировки = Неопределено;
	ЗаполнятьАналитикуПартий = ОписаниеДвижений.Свойство("ЗаполнятьАналитикуПартий");
	
	Данные = Новый Структура;
	Данные.Вставить("РасчетныеПартии", РасчетныеПартии);
	Данные.Вставить("ЦепочкиДвижений", ЦепочкиДвижений);
	Данные.Вставить("СтрокиЦепочек", СтрокиЦепочек);
	Данные.Вставить("Приходы", Приходы);
	Данные.Вставить("Расходы", Расходы);
	Данные.Вставить("СтрокиПриходов", СтрокиПриходов);
	Данные.Вставить("СтрокиРасходов", СтрокиРасходов);
	Данные.Вставить("ИндексыРасходов", ИндексыРасходов);
	Данные.Вставить("ПройденныйПуть", ПройденныйПуть);
	
	КоличествоЗаписей = КоличествоЗаписей(ДанныеДляРасчета);
	КоличествоСвязей  = КоличествоСвязейМеждуЗаписями(ДанныеДляРасчета);
	
	Комментарий = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='К расчету: строк - %1, связей - %2';uk='До розрахунку: рядків - %1, зв''язків - %2'",ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
		СокрЛП(КоличествоЗаписей),
		СокрЛП(КоличествоСвязей));
	ИмяСобытия = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Партионный учет.%1';uk='Партіонний облік.%1'",ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
		ОписаниеДвижений.Контекст);
	ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Информация,,, Комментарий);
	
	ИндексСтроки = -1;
	КонечнаяЦепочка = -1;
	КоличествоДуг = 0;
	
	Пока ИндексСтроки <= КоличествоЗаписей Цикл
		
		ИндексСтроки = ИндексСтроки + 1;
		Если ИндексСтроки > КонечнаяЦепочка Тогда
			НачальнаяЦепочка = ИндексСтроки;
			КонечнаяЦепочка = КонечнаяЦепочка + 10000;
			Выборка = ВыборкаДанныеПоИндексу(ДанныеДляРасчета, НачальнаяЦепочка, КонечнаяЦепочка);
			КоличествоДуг = ЦепочкиДвиженийПоИндексу(ДанныеДляРасчета, НачальнаяЦепочка, КонечнаяЦепочка, ЦепочкиДвижений, СтрокиЦепочек);
		КонецЕсли;
		
		Если Не Выборка.Следующий() Тогда
			Прервать;
		КонецЕсли;
		
		ЦепочкаДвижений = ЦепочкиДвижений[ИндексСтроки];
		Если ЦепочкаДвижений = Неопределено Тогда
			РасчетнаяПартия = РасчетныеПартии.Добавить();
			ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Выборка);
            Если ЗаполнятьАналитикуПартий И Выборка.ТипЗаписи = "Партия" И Выборка.РасчетЗавершен Тогда
				РасчетнаяПартия.АналитикаУчетаПартий =
					АналитикаУчетаПартий(Выборка.АналитикаУчетаПартий, Выборка.НалоговоеНазначениеПартии, Выборка.НалоговоеНазначение);
                    
			КонецЕсли;
		ИначеЕсли Выборка.РасчетЗавершен Тогда
			РасчетнаяПартия = РасчетныеПартии.Добавить();
			ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Выборка);
			Если ЗаполнятьАналитикуПартий И Выборка.ТипЗаписи = "Партия" Тогда
				РасчетнаяПартия.АналитикаУчетаПартий =
					АналитикаУчетаПартий(Выборка.АналитикаУчетаПартий, Выборка.НалоговоеНазначениеПартии, Выборка.НалоговоеНазначение);
				Если ЗначениеЗаполнено(Выборка.НалоговоеНазначениеПартии) И ЗначениеЗаполнено(Выборка.НалоговоеНазначение) Тогда
					РасчетнаяПартия.НалоговоеНазначениеПартии = Выборка.НалоговоеНазначение;
				КонецЕсли;
			КонецЕсли;
			Если ЦепочкаДвижений.Приемники.Количество() > 0 Тогда
				Приход = СтрокиПриходов.Добавить();
				ЗаполнитьЗначенияСвойств(Приход, РасчетнаяПартия);
				ИнвертироватьПоказатели(Приход, ОписаниеДвижений.Показатели, ("Сторно" = Приход.ТипЗаписи ИЛИ "ПартияСторно" = Приход.ТипЗаписи ИЛИ "ОстатокСторно" = Приход.ТипЗаписи));
				Приходы.Вставить(ИндексСтроки, Новый Массив);
				Приходы[ИндексСтроки].Добавить(Приход);
			КонецЕсли;
			ЦепочкиДвижений.Удалить(ИндексСтроки);
			СтрокиЦепочек.Удалить(ЦепочкаДвижений);
		Иначе
			Расход = СтрокиРасходов.Добавить();
			ЗаполнитьЗначенияСвойств(Расход, Выборка);
			Расходы.Вставить(ИндексСтроки, Расход);
			ИндексыРасходов.Добавить(ИндексСтроки);
		КонецЕсли;
		
		// Запишем порцию движений в регистр.
		Если Не Тест И РасчетныеПартии.Количество() > 100000 Тогда
			Если ОписаниеДвижений.Свойство("ПоляГруппировки") Тогда
				РасчетныеПартии.Свернуть(ОписаниеДвижений.ПоляГруппировки, ОписаниеДвижений.ПоляСуммирования);
			КонецЕсли;
			УдалитьНезаписываемыеСтроки(ОписаниеДвижений.Контекст, РасчетныеПартии);
			ЗаписатьРасчетныеПартии(РегистрыНакопления[ОписаниеДвижений.ИмяРегистра], РасчетныеПартии, Регистраторы);
			РасчетныеПартии.Очистить();
		КонецЕсли;
		
		Если ИндексСтроки > 0 И ИндексСтроки % 10000 = 0 Тогда
			Данные.Вставить("ИндексСтроки", ИндексСтроки);
			Если Приходы.Количество() > 0 Тогда // есть записи по которым расчет завершен
				Пока ИндексыРасходов.Количество() > 0 Цикл
					ИндексРасхода = ИндексыРасходов.Получить(0);
					ИндексыРасходов.Удалить(0);
					Если Расходы[ИндексРасхода] = Неопределено Тогда
						Продолжить; // строка к обсчету НЕ зарегистрирована
                    КонецЕсли;
                    БазисРасхода = Расходы[ИндексРасхода][ОписаниеДвижений.БазисРасхода];                    
					ПройденныйПуть.Очистить();
					РассчитатьПартиюПоЦепочкеИзВыборки(ОписаниеДвижений, Данные, ИндексРасхода, Регистраторы, Тест);
                    
					Если Расходы[ИндексРасхода] <> Неопределено
					 И Расходы[ИндексРасхода][ОписаниеДвижений.БазисРасхода] > 0
					 И Расходы[ИндексРасхода][ОписаниеДвижений.БазисРасхода] <> БазисРасхода Тогда
						ИндексыРасходов.Добавить(ИндексРасхода);
                    КонецЕсли;
					
					// Запишем порцию движений в регистр.
					Если Не Тест И РасчетныеПартии.Количество() > 100000 Тогда
						Если ОписаниеДвижений.Свойство("ПоляГруппировки") Тогда
							РасчетныеПартии.Свернуть(ОписаниеДвижений.ПоляГруппировки, ОписаниеДвижений.ПоляСуммирования);
						КонецЕсли;
						УдалитьНезаписываемыеСтроки(ОписаниеДвижений.Контекст, РасчетныеПартии);
						ЗаписатьРасчетныеПартии(РегистрыНакопления[ОписаниеДвижений.ИмяРегистра], РасчетныеПартии, Регистраторы);
						РасчетныеПартии.Очистить();
					КонецЕсли;
				КонецЦикла;
				
				Для Каждого Элемент Из Расходы Цикл
					ИндексРасхода = Элемент.Ключ;
					ИндексыРасходов.Добавить(ИндексРасхода);
				КонецЦикла;
				Список = Новый СписокЗначений;
				Список.ЗагрузитьЗначения(ИндексыРасходов);
				Список.СортироватьПоЗначению();
				ИндексыРасходов = Список.ВыгрузитьЗначения();
			КонецЕсли;
			
			Комментарий = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Рассчитано: %1 стр., %2 связей';uk='Розраховано: %1 стр., %2 зв''язків'",Метаданные.ОсновнойЯзык.КодЯзыка),
				ИндексСтроки,
				КоличествоДуг);
			ЗаписьЖурналаРегистрации(
				НСтр("ru='Партионный учет.';uk='Партіонний облік.'",Метаданные.ОсновнойЯзык.КодЯзыка) + ОписаниеДвижений.Контекст,
				УровеньЖурналаРегистрации.Информация,,, Комментарий);
		КонецЕсли;
	КонецЦикла;
	
	Если ИндексСтроки > КонечнаяЦепочка Тогда
		НачальнаяЦепочка = ИндексСтроки;
		КонечнаяЦепочка = КонечнаяЦепочка + 10000;
		КоличествоДуг = ЦепочкиДвиженийПоИндексу(ДанныеДляРасчета, НачальнаяЦепочка, КонечнаяЦепочка, ЦепочкиДвижений, СтрокиЦепочек);
	КонецЕсли;
	
	Данные.Вставить("ИндексСтроки", ИндексСтроки);
	Пока ИндексыРасходов.Количество() > 0 Цикл
		ИндексРасхода = ИндексыРасходов.Получить(0);
		ИндексыРасходов.Удалить(0);
		Если Расходы[ИндексРасхода] = Неопределено Тогда
			Продолжить; // строка к обсчету НЕ зарегистрирована
        КонецЕсли;
        БазисРасхода = Расходы[ИндексРасхода][ОписаниеДвижений.БазисРасхода];        
		ПройденныйПуть.Очистить();
		РассчитатьПартиюПоЦепочкеИзВыборки(ОписаниеДвижений, Данные, ИндексРасхода, Регистраторы, Тест);
        
		Если Расходы[ИндексРасхода] <> Неопределено
		 И Расходы[ИндексРасхода][ОписаниеДвижений.БазисРасхода] > 0
		 И Расходы[ИндексРасхода][ОписаниеДвижений.БазисРасхода] <> БазисРасхода Тогда
			ИндексыРасходов.Добавить(ИндексРасхода);
		КонецЕсли;
		
		// Запишем порцию движений в регистр.
		Если Не Тест И РасчетныеПартии.Количество() > 100000 Тогда
			Если ОписаниеДвижений.Свойство("ПоляГруппировки") Тогда
				РасчетныеПартии.Свернуть(ОписаниеДвижений.ПоляГруппировки, ОписаниеДвижений.ПоляСуммирования);
			КонецЕсли;
			УдалитьНезаписываемыеСтроки(ОписаниеДвижений.Контекст, РасчетныеПартии);
			ЗаписатьРасчетныеПартии(РегистрыНакопления[ОписаниеДвижений.ИмяРегистра], РасчетныеПартии, Регистраторы);
			РасчетныеПартии.Очистить();
		КонецЕсли;
	КонецЦикла;

	Для Каждого Строка Из Расходы Цикл
		РасчетнаяПартия = РасчетныеПартии.Добавить();
		ЗаполнитьЗначенияСвойств(РасчетнаяПартия, Строка.Значение);
		Если Не Тест И РасчетныеПартии.Количество() > 100000 Тогда
			Если ОписаниеДвижений.Свойство("ПоляГруппировки") Тогда
				РасчетныеПартии.Свернуть(ОписаниеДвижений.ПоляГруппировки, ОписаниеДвижений.ПоляСуммирования);
			КонецЕсли;
			УдалитьНезаписываемыеСтроки(ОписаниеДвижений.Контекст, РасчетныеПартии);
			ЗаписатьРасчетныеПартии(РегистрыНакопления[ОписаниеДвижений.ИмяРегистра], РасчетныеПартии, Регистраторы);
			РасчетныеПартии.Очистить();
		КонецЕсли;
	КонецЦикла;
	
	Если ОписаниеДвижений.Свойство("ПоляГруппировки") Тогда
		РасчетныеПартии.Свернуть(ОписаниеДвижений.ПоляГруппировки, ОписаниеДвижений.ПоляСуммирования);
	КонецЕсли;
	
	Если КоличествоЗаписей % 10000 <> 0 Тогда
		Комментарий = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Рассчитано: %1 стр., %2 связей';uk='Розраховано: %1 стр., %2 зв''язків'",Метаданные.ОсновнойЯзык.КодЯзыка),
			ИндексСтроки,
			КоличествоДуг);
		ЗаписьЖурналаРегистрации(
			НСтр("ru='Партионный учет.';uk='Партіонний облік.'",Метаданные.ОсновнойЯзык.КодЯзыка) + ОписаниеДвижений.Контекст,
			УровеньЖурналаРегистрации.Информация,,, Комментарий);
	КонецЕсли;
	
	Выборка = Неопределено;
	Приходы.Очистить();
	Расходы.Очистить();
	СтрокиПриходов.Очистить();
	СтрокиРасходов.Очистить();
	Если Не Тест Тогда
		ЦепочкиДвижений.Очистить();
		СтрокиЦепочек.Очистить();
	КонецЕсли;
	
КонецПроцедуры


Функция РассчитатьПартиюПоЦепочкеИзВыборки(ОписаниеДвижений, Данные, ИндексРасхода, Регистраторы, Тест)
	
	РасчетныеПартии = Данные.РасчетныеПартии;
	ПройденныйПуть = Данные.ПройденныйПуть;
	ЦепочкиДвижений = Данные.ЦепочкиДвижений;
	СтрокиЦепочек = Данные.СтрокиЦепочек;
	ЦепочкаРасхода = ЦепочкиДвижений[ИндексРасхода];
	
	Если ЦепочкаРасхода = Неопределено Тогда
		Возврат "НеТребуется";
	КонецЕсли;
	
	Источники = ЦепочкаРасхода.Источники;
    ЕстьЗацикливание = Ложь;    
	Если ИндексРасхода = ПройденныйПуть[ИндексРасхода] Или (Источники.Количество() = 0) Тогда
        ЕстьЗацикливание = Истина;
	КонецЕсли;
	
	ИндексСтроки = Данные.ИндексСтроки;
	Для Каждого ИндексПрихода Из Источники Цикл
		Если ИндексПрихода > ИндексСтроки Тогда
			Возврат "НетДанных"; // еще нет всех строк для распределения
		КонецЕсли;
	КонецЦикла;
	
	ПройденныйПуть.Вставить(ИндексРасхода, ИндексРасхода);
	
	Приходы = Данные.Приходы;
	Расходы = Данные.Расходы;
	СтрокиПриходов = Данные.СтрокиПриходов;
	НовыеПриходы = Неопределено;
	СтрокиРасходов = Данные.СтрокиРасходов;
	
	Расход = Расходы[ИндексРасхода];
    ЭтоСторно = ("Сторно" = Расход.ТипЗаписи ИЛИ "ВозвратСторно" = Расход.ТипЗаписи ИЛИ "СторноПрошлое" = Расход.ТипЗаписи );    
	
	БазисПрихода = 0;
	Если ОписаниеДвижений.Свойство("ПоляГруппировки")
	 ИЛИ ЭтоСторно Тогда
		Для Каждого ИндексИсточника Из Источники Цикл
			Если НЕ ЕстьЗацикливание
			 И Данные.Приходы[ИндексИсточника] = Неопределено
			 И Данные.Расходы[ИндексИсточника] <> Неопределено Тогда // данный источник еще не рассчитан
				Результат = РассчитатьПартиюПоЦепочкеИзВыборки(ОписаниеДвижений, Данные, ИндексИсточника, Регистраторы, Тест);
				Если Результат = "НетДанных" Тогда
					Возврат Результат;
				ИначеЕсли Результат = "Зацикливание" Тогда
					БазисПрихода = БазисПрихода + Расходы[ИндексИсточника][ОписаниеДвижений.БазисПрихода];
                КонецЕсли;
				Если Данные.Расходы[ИндексРасхода] = Неопределено Тогда
					Возврат "НеТребуется";
				КонецЕсли;
			ИначеЕсли ЕстьЗацикливание И Данные.Расходы[ИндексИсточника] <> Неопределено Тогда
				БазисПрихода = БазисПрихода + Расходы[ИндексИсточника][ОписаниеДвижений.БазисПрихода];
			КонецЕсли;
		КонецЦикла;
		Если ЭтоСторно Тогда
			СортироватьИсточники(Источники, ОписаниеДвижений.ПолеПорядка, Приходы);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОписаниеДвижений.ПоляСортировки) Тогда
		ЗначенияПолей = Новый Структура(ОписаниеДвижений.ПоляСортировки);
		ЗаполнитьЗначенияСвойств(ЗначенияПолей, Расход);
		ЗаполненыПоляСортировки = Ложь;
		Для Каждого ПолеСортировки Из ЗначенияПолей Цикл
			Если ЗначениеЗаполнено(ПолеСортировки.Значение) Тогда
				ЗаполненыПоляСортировки = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		ТребуетсяСортировка = Истина;
		Если ЗначениеЗаполнено(ОписаниеДвижений.СортировкаПоУсловию) Тогда
			ТребуетсяСортировка = ТребуетсяСортировка(ОписаниеДвижений.Контекст, Расход); 
		КонецЕсли;
		Если ЗаполненыПоляСортировки И ТребуетсяСортировка Тогда
			СортироватьИсточникиПоЗначениямПолей(Источники, ЗначенияПолей, Приходы);
		КонецЕсли;
    КонецЕсли;
    
	Если ЭтоСторно И ОписаниеДвижений.Контекст = "ПартииПроизводственныхЗатрат" Тогда
		// Сортировка для списания сторно записей в первую очередь.
		СортироватьИсточники(Источники, "Приоритет", Приходы);
    КонецЕсли;
	
	Счетчик = 0;
	ВГраница = Источники.ВГраница();
	РазрывЦикла = Ложь;
    
	УменьшатьБазисРасхода = ОписаниеДвижений.Свойство("УменьшатьБазис");
	
	ИндексРасчетнойПартии = -1;
	ИнвертироватьПоказатели(Расход, ОписаниеДвижений.Показатели, ЭтоСторно);
	Пока Счетчик <= ВГраница Цикл
		Если ОписаниеДвижений.Контекст = "ПартииПроизводственныхЗатрат" Тогда
			ИндексИсточника = Источники[Счетчик];
		Иначе
			ИндексИсточника = Источники[?(ЭтоСторно, ВГраница - Счетчик, Счетчик)];
		КонецЕсли;
		Счетчик = Счетчик + 1;
		
		Если ОписаниеДвижений.Контекст = "ПартииТоваровОрганизаций"
		 И Расход.СохранятьРегл
		 И ИндексИсточника = ПройденныйПуть[ИндексИсточника] Тогда
			РазрывЦикла = Истина;
			Продолжить; // данный источник еще рассчитан не до конца
		КонецЕсли;
		
		МассивПриходов = Приходы[ИндексИсточника];
		Если Неопределено = МассивПриходов Тогда
			Если Неопределено = Расходы[ИндексИсточника] Тогда
				Продолжить;
			КонецЕсли;
			Источник = Расходы[ИндексИсточника];
            Если НЕ ЕстьЗацикливание И НЕ Источник.РасчетЗавершен Тогда
				РассчитатьПартиюПоЦепочкеИзВыборки(ОписаниеДвижений, Данные, ИндексИсточника, Регистраторы, Тест);
				ВГраница = Источники.ВГраница();
				Если Данные.Расходы[ИндексРасхода] = Неопределено Тогда
					Возврат "НеТребуется";
				КонецЕсли;
				МассивПриходов = Приходы[ИндексИсточника];
				Если Неопределено = МассивПриходов Тогда
					Продолжить;
				КонецЕсли;
			Иначе
				МассивПриходов = Приходы[ИндексИсточника];
				Если Неопределено = МассивПриходов Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ЭтоСторно Тогда
			СортироватьПриходыПоЛИФО(ОписаниеДвижений.ПолеПорядка, МассивПриходов);
        КонецЕсли;
        
		УменьшениеБазисаРасхода = 0;
		
		ПриходыКУдалению = Новый Массив;
        Для Каждого Приход Из МассивПриходов Цикл
            
			Если УменьшатьБазисРасхода
			 И УменьшениеБазисаРасхода = 0
			 И Расход.ТипЗаписи = "Сторно" Тогда
				УменьшениеБазисаРасхода = Мин(Расход[ОписаниеДвижений.БазисРасхода], Приход[ОписаниеДвижений.БазисРасхода]);
			КонецЕсли;
			
			РасчетнаяПартия = РасчетныеПартии.Добавить();
			ЗаполнитьРасчетнуюПартию(ОписаниеДвижений.Контекст, РасчетнаяПартия, Расход, Приход);
			ИнвертироватьПоказатели(РасчетнаяПартия, ОписаниеДвижений.Показатели, ЭтоСторно);
			
			Если Приход[ОписаниеДвижений.БазисПрихода] <= 0. Тогда
				ПриходыКУдалению.Добавить(Приход);
			КонецЕсли;
			
			Если РасчетнаяПартия.РасчетЗавершен Тогда
				Если ЦепочкаРасхода.Приемники.Количество() > 0 Тогда
					Если ОписаниеДвижений.Свойство("ПоляГруппировки") Тогда
						Если НовыеПриходы = Неопределено Тогда
							НовыеПриходы = СтрокиПриходов.СкопироватьКолонки();
						КонецЕсли;
						НовыйПриход = НовыеПриходы.Добавить();
						ЗаполнитьЗначенияСвойств(НовыйПриход, РасчетнаяПартия);
						ИнвертироватьПоказатели(НовыйПриход, ОписаниеДвижений.Показатели,
							("Сторно" = НовыйПриход.ТипЗаписи ИЛИ "ВозвратСторно" = НовыйПриход.ТипЗаписи ИЛИ "СторноПрошлое" = НовыйПриход.ТипЗаписи));
					Иначе
						НовыйПриход = СтрокиПриходов.Добавить();
						ЗаполнитьЗначенияСвойств(НовыйПриход, РасчетнаяПартия);
						ИнвертироватьПоказатели(НовыйПриход, ОписаниеДвижений.Показатели,
							("Сторно" = НовыйПриход.ТипЗаписи ИЛИ "ВозвратСторно" = НовыйПриход.ТипЗаписи ИЛИ "СторноПрошлое" = НовыйПриход.ТипЗаписи));
						Если Приходы[ИндексРасхода] = Неопределено Тогда
							Приходы.Вставить(ИндексРасхода, Новый Массив);
						КонецЕсли;
						Приходы[ИндексРасхода].Добавить(НовыйПриход);
					КонецЕсли;
				КонецЕсли;
			Иначе
				РасчетныеПартии.Удалить(РасчетнаяПартия);
			КонецЕсли;
						
			// Запишем порцию движений в регистр.
			Если Не Тест И РасчетныеПартии.Количество() > 100000 Тогда
				Если ОписаниеДвижений.Свойство("ПоляГруппировки") Тогда
					РасчетныеПартии.Свернуть(ОписаниеДвижений.ПоляГруппировки, ОписаниеДвижений.ПоляСуммирования);
				КонецЕсли;
				УдалитьНезаписываемыеСтроки(ОписаниеДвижений.Контекст, РасчетныеПартии);
				ЗаписатьРасчетныеПартии(РегистрыНакопления[ОписаниеДвижений.ИмяРегистра], РасчетныеПартии, Регистраторы);
				РасчетныеПартии.Очистить();
			КонецЕсли;
			Если Расход[ОписаниеДвижений.БазисРасхода] <= 0. Тогда
				Прервать;
			КонецЕсли;
        КонецЦикла;
        
		Если УменьшатьБазисРасхода
		 И УменьшениеБазисаРасхода <> 0 Тогда
			Расход[ОписаниеДвижений.БазисРасхода] = Расход[ОписаниеДвижений.БазисРасхода] - УменьшениеБазисаРасхода;
		КонецЕсли;
        
		Для Каждого Приход Из ПриходыКУдалению Цикл
			Индекс = МассивПриходов.Найти(Приход);
			Если Индекс <> Неопределено Тогда
				МассивПриходов.Удалить(Индекс);
			КонецЕсли;
			СтрокиПриходов.Удалить(Приход);
		КонецЦикла;
		Если МассивПриходов.Количество() = 0 Тогда
			Приходы.Удалить(ИндексИсточника);
			Если Расходы[ИндексИсточника] = Неопределено Тогда
				ЦепочкаПрихода = ЦепочкиДвижений[ИндексИсточника];
				Если ЦепочкаПрихода <> Неопределено Тогда
					ЦепочкиДвижений.Удалить(ИндексИсточника);
					СтрокиЦепочек.Удалить(ЦепочкаПрихода);
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли ПриходыКУдалению.Количество() > 0 Тогда
			Приходы.Вставить(ИндексИсточника, МассивПриходов);
		КонецЕсли;
		Если Расход[ОписаниеДвижений.БазисРасхода] <= 0. Тогда
			Прервать;
		КонецЕсли;
    КонецЦикла;
    БазисРасхода = 0;
	Если ОписаниеДвижений.Свойство("ПоляГруппировки")
	 И НовыеПриходы <> Неопределено
	 И НовыеПриходы.Количество() > 0 Тогда
		НовыеПриходы.Свернуть(ОписаниеДвижений.ПоляГруппировки, ОписаниеДвижений.ПоляСуммирования);
		Если Приходы[ИндексРасхода] = Неопределено Тогда
			Приходы.Вставить(ИндексРасхода, Новый Массив);
		КонецЕсли;
		Для Каждого Строка Из НовыеПриходы Цикл
			НовыйПриход = СтрокиПриходов.Добавить();
			ЗаполнитьЗначенияСвойств(НовыйПриход, Строка);
			Если НовыйПриход[ОписаниеДвижений.БазисРасхода] = 0 Тогда
				НовыйПриход[ОписаниеДвижений.БазисРасхода] = Расход[ОписаниеДвижений.БазисРасхода];
            КонецЕсли;
			Приходы[ИндексРасхода].Добавить(НовыйПриход);
			Если БазисРасхода < НовыйПриход[ОписаниеДвижений.БазисРасхода] Тогда
				БазисРасхода = НовыйПриход[ОписаниеДвижений.БазисРасхода];
			КонецЕсли;
		КонецЦикла;
		НовыеПриходы = Неопределено;
	КонецЕсли;
	Если ОписаниеДвижений.Свойство("ПоляГруппировки") Тогда
		Если Расход.ТипЗаписи = "Перемещение" И БазисПрихода <> 0 Тогда
			Расход[ОписаниеДвижений.БазисРасхода] = БазисПрихода;
		ИначеЕсли БазисРасхода > 0 И Расход[ОписаниеДвижений.БазисРасхода] - БазисРасхода > 0 Тогда
			Расход[ОписаниеДвижений.БазисРасхода] = Расход[ОписаниеДвижений.БазисРасхода] - БазисРасхода;	
		Иначе
			Расход[ОписаниеДвижений.БазисРасхода] = 0;
		КонецЕсли;
	КонецЕсли;
	
    Если Расход[ОписаниеДвижений.БазисРасхода] > 0 Тогда 
		ИнвертироватьПоказатели(Расход, ОписаниеДвижений.Показатели,
            ("Сторно" = Расход.ТипЗаписи ИЛИ "ВозвратСторно" = Расход.ТипЗаписи ИЛИ "СторноПрошлое" = Расход.ТипЗаписи));
		Если ОписаниеДвижений.Контекст = "ПартииТоваровОрганизаций"
		 И РазрывЦикла
		 И Расход.СохранятьРегл Тогда
		 	Расход.РасчетЗавершен = Истина;
		 	НоваяПартия = РасчетныеПартии.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяПартия, Расход);
			Если ЦепочкаРасхода <> Неопределено
			 И ЦепочкаРасхода.Приемники.Количество() > 0 Тогда
				Приход = СтрокиПриходов.Добавить();
				ЗаполнитьЗначенияСвойств(Приход, НоваяПартия);
				ИнвертироватьПоказатели(Приход, ОписаниеДвижений.Показатели, ("Сторно" = Приход.ТипЗаписи));
				Если Приходы[ИндексРасхода] = Неопределено Тогда
					Приходы.Вставить(ИндексРасхода, Новый Массив);
				КонецЕсли;
				Приходы[ИндексРасхода].Добавить(Приход);
			КонецЕсли;
			Расходы.Удалить(ИндексРасхода);
			СтрокиРасходов.Удалить(Расход);
		КонецЕсли;
	Иначе
		Расходы.Удалить(ИндексРасхода);
		ЦепочкиДвижений.Удалить(ИндексРасхода);
        СтрокиРасходов.Удалить(Расход);        
		СтрокиЦепочек.Удалить(ЦепочкаРасхода);
	КонецЕсли;
	
	Возврат "Выполнено";
	
КонецФункции

#КонецОбласти

// Вспомогательные универсальные методы
#Область СлужебныеПроцедурыИФункции

Функция ПоляЗаписейРавны(Запись1, Запись2, ПереченьКлючей)
	Если Неопределено = Запись1 Или Неопределено = Запись2 Тогда
		Возврат (Запись1 = Запись2);
	КонецЕсли;
	
	Для Каждого Поле Из Новый Структура(ПереченьКлючей) Цикл
		Если Запись1[Поле.Ключ] <> Запись2[Поле.Ключ] Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
КонецФункции

Функция КопияЗаписиСтруктурой(Запись, ПереченьПолей)
	КопияСтрокиСтруктурой = Новый Структура(ПереченьПолей);
	ЗаполнитьЗначенияСвойств(КопияСтрокиСтруктурой, Запись);
	Возврат КопияСтрокиСтруктурой;
КонецФункции

Процедура ИнвертироватьПоказатели(Запись, ПереченьПоказателей, Инвертировать)
	Если Не Инвертировать Тогда
		Возврат;
	КонецЕсли;
	Для Каждого Поле Из Новый Структура(ПереченьПоказателей) Цикл
		Запись[Поле.Ключ] = -Запись[Поле.Ключ];
	КонецЦикла;
КонецПроцедуры

Функция СкопироватьКолонки(КолонкиИсточника, КолонкиПриемника)
	ПоляИсточника = "";
	Для Каждого Колонка Из КолонкиИсточника Цикл
		КолонкиПриемника.Добавить(Колонка.Имя, Колонка.ТипЗначения);
		ПоляИсточника = ПоляИсточника + ?(ЗначениеЗаполнено(ПоляИсточника), ", ", "") + Колонка.Имя;
	КонецЦикла;
	Возврат ПоляИсточника;
КонецФункции

Функция ПереченьПолей(КоллекцияКолонок, Исключения = "")
	ИсключаемыеПоля = Новый Структура(Исключения);
	ПереченьПолей = "";
	Для Каждого Колонка Из КоллекцияКолонок Цикл
		Если НЕ ИсключаемыеПоля.Свойство(Колонка.Имя) Тогда
			ПереченьПолей = ПереченьПолей + ?(ЗначениеЗаполнено(ПереченьПолей), ", ", "") + Колонка.Имя;
		КонецЕсли;
	КонецЦикла;
	Возврат ПереченьПолей;
КонецФункции

Функция ПустаяСсылка(Ссылка, КэшСсылок)
	Результат = КэшСсылок[ТипЗнч(Ссылка)];
	Если Результат = Неопределено Тогда
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Ссылка);
		Если МенеджерОбъекта = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		Результат = МенеджерОбъекта.ПустаяСсылка();
		КэшСсылок.Вставить(ТипЗнч(Ссылка), Результат);
	КонецЕсли;
	Возврат Результат;
КонецФункции

Функция УзелИндекса(Индекс, КлючиИндекса)
	УзелИндекса = Индекс;
	Счетчик = 0;
	Пока Счетчик <= КлючиИндекса.ВГраница() И КлючиИндекса[Счетчик] <> Неопределено Цикл
		УзелИндекса = УзелИндекса[КлючиИндекса[Счетчик]];
		Если УзелИндекса = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		Счетчик = Счетчик + 1;
	КонецЦикла;
	Возврат УзелИндекса;
КонецФункции

Функция ДобавитьУзелИндекса(Индекс, КлючиИндекса, Значение)
	ВГраница = КлючиИндекса.ВГраница();
	Если ВГраница < 0 Или КлючиИндекса[0] = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	УзелИндекса = Индекс;
	Счетчик = 0;
	Пока Счетчик < ВГраница Цикл
		ПодузелИндекса = УзелИндекса[КлючиИндекса[Счетчик]];
		Если ПодузелИндекса = Неопределено Тогда
			ПодузелИндекса = Новый Соответствие;
			УзелИндекса.Вставить(КлючиИндекса[Счетчик], ПодузелИндекса);
		КонецЕсли;
		УзелИндекса = ПодузелИндекса;
		Счетчик = Счетчик + 1;
		Если КлючиИндекса[Счетчик] = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
	КонецЦикла;
	УзелИндекса.Вставить(КлючиИндекса[Счетчик], Значение);
	Возврат Значение;
КонецФункции

Функция АналитикаУчетаПартий(Знач АналитикаУчетаПартий, НалоговоеНазначениеПартии, НалоговоеНазначение)		
	
	Если ЗначениеЗаполнено(НалоговоеНазначениеПартии) И ЗначениеЗаполнено(НалоговоеНазначение)
	 И НалоговоеНазначениеПартии <> НалоговоеНазначение Тогда
	 
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	НоваяАналитика.КлючАналитики КАК АналитикаУчетаПартий,
		|	&НалоговоеНазначение КАК НалоговоеНазначение,
		|	Аналитика.ГруппаФинансовогоУчета,
		|	Аналитика.Поставщик,
		|	Аналитика.Контрагент,
		|	Аналитика.СтавкаНДС
		|ИЗ
		|	Справочник.КлючиАналитикиУчетаПартий КАК Аналитика
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК НоваяАналитика
		|		ПО НоваяАналитика.Поставщик = Аналитика.Поставщик
		|		И НоваяАналитика.НалоговоеНазначение = &НалоговоеНазначение
		|		И НоваяАналитика.Контрагент = Аналитика.Контрагент
		|		И НоваяАналитика.СтавкаНДС = Аналитика.СтавкаНДС
		|		И НоваяАналитика.ГруппаФинансовогоУчета = Аналитика.ГруппаФинансовогоУчета
		|ГДЕ
		|	Аналитика.Ссылка = &Ссылка
		|");
		Запрос.УстановитьПараметр("Ссылка", АналитикаУчетаПартий); 
		Запрос.УстановитьПараметр("НалоговоеНазначение", НалоговоеНазначение);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Если ЗначениеЗаполнено(Выборка.АналитикаУчетаПартий) Тогда
				АналитикаУчетаПартий = Выборка.АналитикаУчетаПартий;
			Иначе
				АналитикаУчетаПартий = Справочники.КлючиАналитикиУчетаПартий.КлючиАналитикиУчетаПартийДокумента(Выборка);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат АналитикаУчетаПартий;
	
КонецФункции

Функция АналитикаУчетаПартийПоНалоговомуНазначению(Знач НалоговоеНазначениеПартии)
	
	Если ЗначениеЗаполнено(НалоговоеНазначениеПартии) Тогда
	 
	 	СтруктураАналитикУчетаПартий = Новый Структура;
		
		СтруктураАналитикУчетаПартий.Вставить("НалоговоеНазначение", НалоговоеНазначениеПартии);
		
		СтруктураАналитикУчетаПартий.Вставить("ГруппаФинансовогоУчета",	Неопределено);
		СтруктураАналитикУчетаПартий.Вставить("Поставщик", 				Неопределено);
		СтруктураАналитикУчетаПартий.Вставить("Контрагент", 			Неопределено);
		СтруктураАналитикУчетаПартий.Вставить("СтавкаНДС", 				Неопределено);
	 
		АналитикаУчетаПартий = Справочники.КлючиАналитикиУчетаПартий.КлючиАналитикиУчетаПартийДокумента(СтруктураАналитикУчетаПартий);
	
		Возврат АналитикаУчетаПартий;
		
	Иначе
		
		Возврат Неопределено;
		
	КонецЕсли;	
	
КонецФункции

Процедура УвеличитьНомерЗадания()
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("Константа.НомерЗаданияКРасчетуСебестоимости");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	
	НачатьТранзакцию();
	Блокировка.Заблокировать();
	
	НомерЗадания = Константы.НомерЗаданияКРасчетуСебестоимости.Получить();
	Константы.НомерЗаданияКРасчетуСебестоимости.Установить(НомерЗадания + 1);
	
	ЗафиксироватьТранзакцию();

КонецПроцедуры

Процедура СформироватьЗаданияККорректировкеНалоговыхНазначенийКапитальныхИнвестиций(НачалоПериода, ОкончаниеПериода, МассивОрганизаций)
КонецПроцедуры

// Дополняет перечень организаций остальными организациями ИБ, связанными с ними по схеме Интеркампани.
//
// Параметры:
//	Дата - Дата - период расчета партий
//	МассивОрганизаций - Массив или СправочникСсылка.Организации - отбор по организациям
//
// Возвращаемое значение:
//	Массив - или все организации ИБ, если не указан отбор по организациям,
//			 или массив связанных организаций, подробнее см. РасчетСебестоимости.СвязиОрганизацийПоСхемеИнтеркампани()
//
Функция СвязиОрганизацийПоСхемеИнтеркампани(Дата = Неопределено, МассивОрганизаций = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(МассивОрганизаций) ИЛИ НЕ ЗначениеЗаполнено(Дата) Тогда
		
		// Выберем все организации из ИБ.
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Организации.Ссылка
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	НЕ Организации.ПометкаУдаления
		|	И ВЫБОР
		|		КОГДА НЕ &ИспользоватьУпрОрганизацию
		|				И Организации.Ссылка = ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
		|			ТОГДА ЛОЖЬ
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ";
		
		Запрос.УстановитьПараметр("ИспользоватьУпрОрганизацию", ПолучитьФункциональнуюОпцию("ИспользоватьУправленческуюОрганизацию"));
		
		Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
		
	Иначе
		
		// Дополним отбор МассивОрганизаций связанными по Интеркампани организациями
		Результат = РасчетСебестоимости.СвязиОрганизацийПоСхемеИнтеркампани(Дата, МассивОрганизаций, Ложь);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти


#Область ОчисткаДвиженийРегистров

Процедура ОчиститьРегистрНаСервере(Регистраторы, ИмяРегистра, РегистраторыССохраняемымиДвижениями = Неопределено)
	
	Если ТестированиеБезЗаписи() Тогда
		Возврат;
	КонецЕсли;
	
	НачалоЗамера = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	Для Каждого Элемент Из Регистраторы Цикл 
		
		Если РегистраторыССохраняемымиДвижениями <> Неопределено
		 И РегистраторыССохраняемымиДвижениями.Получить(Элемент.Ключ) <> Неопределено Тогда
			// При восстановлении сохраненных движений надо удалять устаревшие движения
			РегистраторыССохраняемымиДвижениями.Вставить(Элемент.Ключ, Истина);
			Продолжить;
		КонецЕсли;
		
		Движения = РегистрыНакопления[ИмяРегистра].СоздатьНаборЗаписей();
		Движения.Отбор.Регистратор.Установить(Элемент.Ключ);
		Движения.Записать();
		
	КонецЦикла;
	
	Замер = ТекущаяУниверсальнаяДатаВМиллисекундах() - НачалоЗамера;
	Комментарий = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Очистка устаревших движений: %1 док., длительность: %2 сек.';uk='Очищення застарілих рухів: %1 док., тривалість: %2 сек.'"),
		СокрЛП(Регистраторы.Количество()),
		СокрЛП(Замер/1000));
	ЗаписьЖурналаРегистрации(
		НСтр("ru='Партионный учет.ОчиститьРегистрНаСервере';uk='Партіонний облік.ОчиститьРегистрНаСервере'",ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
		УровеньЖурналаРегистрации.Информация,,, Комментарий);
	
КонецПроцедуры

#КонецОбласти


#Область Тестирование

Функция ТестТекстОписание(ИмяМетода) Экспорт
	Если ИмяМетода = "ТекстОписаниеПартийТоваров" Тогда
		Возврат ТекстОписаниеПартийТоваров();
		
	ИначеЕсли ИмяМетода = "ТекстОписаниеПартийПереданных" Тогда
		Возврат ТекстОписаниеПартийПереданных();
		
	ИначеЕсли ИмяМетода = "ТекстОписаниеПартийЗатрат" Тогда
		Возврат ТекстОписаниеПартийЗатрат();
		
	ИначеЕсли ИмяМетода = "ТекстОписаниеПартийПрочих" Тогда
		Возврат ТекстОписаниеПартийПрочих();
		
	ИначеЕсли ИмяМетода = "ТекстОписаниеСебестоимость" Тогда
		Возврат ТекстОписаниеСебестоимость();
		
	ИначеЕсли ИмяМетода = "ТекстОписаниеПартийРасходов" Тогда
		Возврат ТекстОписаниеПартийРасходов();
		
	ИначеЕсли ИмяМетода = "ТекстОписаниеДанныхДляКорректировокНДС" Тогда
		Возврат ТекстОписаниеДанныхДляКорректировокНДС();
		
	ИначеЕсли ИмяМетода = "ТекстОписаниеДанныхДляПартийПрочихРасходов" Тогда
		Возврат ТекстОписаниеДанныхДляПартийПрочихРасходов();	
		
	ИначеЕсли ИмяМетода = "ТекстОписаниеДанныхДляПартийПроизводства" Тогда
		Возврат ТекстОписаниеДанныхДляПартийПроизводства();
		
		
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ВыгрузитьИзВременнойТаблицы(МВТ)
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	Данные КАК ДД
	|");
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Функция ТестДанныеДляПартий(ИмяМетода, НачалоПериода, ОкончаниеПериода, Организация = Неопределено) Экспорт
	
	МассивОрганизаций = СвязиОрганизацийПоСхемеИнтеркампани(ОкончаниеПериода, Организация);
	
	Если ИмяМетода = "ДанныеДляПартийТоваров" Тогда
		Возврат ВыгрузитьИзВременнойТаблицы(ДанныеДляПартийТоваров(НачалоПериода, ОкончаниеПериода, МассивОрганизаций));
		
	ИначеЕсли ИмяМетода = "ДанныеДляПартийПереданных" Тогда
		Возврат ВыгрузитьИзВременнойТаблицы(ДанныеДляПартийПереданных(НачалоПериода, ОкончаниеПериода, МассивОрганизаций));
		
	ИначеЕсли ИмяМетода = "ДанныеДляПартийЗатрат" Тогда
		Возврат ВыгрузитьИзВременнойТаблицы(ДанныеДляПартийЗатрат(НачалоПериода, ОкончаниеПериода, МассивОрганизаций));
		
	ИначеЕсли ИмяМетода = "ДанныеДляПартийПрочих" Тогда
		Возврат ДанныеДляПартийПрочих(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
	ИначеЕсли ИмяМетода = "ДанныеДляПартийПрочихСебестоимость" Тогда
		Возврат ДанныеДляПартийПрочихСебестоимость(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
	ИначеЕсли ИмяМетода = "ДанныеДляПартийРасходов" Тогда
		Возврат ВыгрузитьИзВременнойТаблицы(ДанныеДляПартийРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций));
		
	ИначеЕсли ИмяМетода = "ДанныеДляКорректировокНДС" Тогда
		Возврат ДанныеДляКорректировокНДС(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
	ИначеЕсли ИмяМетода = "ДанныеДляПартийПрочихРасходов" Тогда
		Возврат ДанныеДляПартийПрочихРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);	
		
	ИначеЕсли ИмяМетода = "ДанныеДляПартийПроизводства" Тогда
		Возврат ВыгрузитьИзВременнойТаблицы(ДанныеДляПартийПроизводства(НачалоПериода, ОкончаниеПериода, МассивОрганизаций));
		

	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции


Функция ЗагрузитьВоВременнуюТаблицу(ДанныеДляПартий)
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ
	|	Данные
	|ИЗ
	|	&ДанныеДляПартий КАК ДД
	|ИНДЕКСИРОВАТЬ ПО
	|	ДД.К
	|");
	МВТ = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("ДанныеДляПартий", ДанныеДляПартий);
	Запрос.Выполнить();
	Возврат МВТ;
КонецФункции

Функция ТестРасчетныеПартии(ИмяМетода, ДанныеДляПартий, ВнутренниеДанные = Неопределено) Экспорт
	Если ИмяМетода = "РасчетныеПартииТоваров" Тогда
		МВТ = ЗагрузитьВоВременнуюТаблицу(ДанныеДляПартий);
		РасчетныеПартии = РасчетныеПартииТоваров(МВТ, Неопределено, ВнутренниеДанные, Истина);
		ДанныеДляПартий = ВыгрузитьИзВременнойТаблицы(МВТ); 
		Возврат РасчетныеПартии;
		
	ИначеЕсли ИмяМетода = "РасчетныеПартииПереданные" Тогда
		МВТ = ЗагрузитьВоВременнуюТаблицу(ДанныеДляПартий);
		РасчетныеПартии = РасчетныеПартииПереданные(МВТ, Неопределено, ВнутренниеДанные, Истина);
		ДанныеДляПартий = ВыгрузитьИзВременнойТаблицы(МВТ); 
		Возврат РасчетныеПартии;
		
	ИначеЕсли ИмяМетода = "РасчетныеПартииЗатрат" Тогда
		Возврат РасчетныеПартииЗатрат(ЗагрузитьВоВременнуюТаблицу(ДанныеДляПартий), Неопределено, ВнутренниеДанные, Истина);
		
	ИначеЕсли ИмяМетода = "РасчетныеПартииПрочих" Тогда
		Возврат РасчетныеПартииПрочих(ДанныеДляПартий, Неопределено, ВнутренниеДанные, Истина);
		
	ИначеЕсли ИмяМетода = "РасчетныеПриходыПартийРасходов" Тогда
		Возврат РасчетныеПриходыПартийРасходов(ДанныеДляПартий, Неопределено, ВнутренниеДанные, Истина);
		
	ИначеЕсли ИмяМетода = "РасчетныеПриходыСебестоимости" Тогда
		Возврат РасчетныеПриходыСебестоимости(Дата(1,1,1), ДанныеДляПартий, Неопределено, ВнутренниеДанные, Истина);
		
	ИначеЕсли ИмяМетода = "РасчетныеПартииРасходов" Тогда
		Возврат РасчетныеПартииРасходов(ЗагрузитьВоВременнуюТаблицу(ДанныеДляПартий), Неопределено, ВнутренниеДанные, Истина);
		
	ИначеЕсли ИмяМетода = "РасчетныеНДСВосстановлениеНДС" Тогда
		Возврат РасчетныеНДСВосстановлениеНДС(ДанныеДляПартий, ВнутренниеДанные, Истина);
		
	ИначеЕсли ИмяМетода = "РасчетныеНДСУсловнаяПродажа" Тогда
		Возврат РасчетныеНДСУсловнаяПродажа(ДанныеДляПартий, ВнутренниеДанные, Истина);
		
	ИначеЕсли ИмяМетода = "РасчетныеПартииПроизводства" Тогда
		Возврат РасчетныеПартииПроизводства(ЗагрузитьВоВременнуюТаблицу(ДанныеДляПартий), Неопределено, ВнутренниеДанные, Истина);
		
		
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ТестРассчитать(ИмяМетода, НачалоПериода, ОкончаниеПериода, Организация = Неопределено) Экспорт
	Перем РасчетныеПартии;
	
	МассивОрганизаций = СвязиОрганизацийПоСхемеИнтеркампани(ОкончаниеПериода, Организация);
	
	Если ИмяМетода = "РассчитатьПартииТоваров" Тогда
		РассчитатьПартииТоваров(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
	ИначеЕсли ИмяМетода = "РассчитатьПартииПереданные" Тогда
		РассчитатьПартииПереданные(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
	ИначеЕсли ИмяМетода = "РассчитатьПартииЗатрат" Тогда
		РассчитатьПартииЗатрат(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
	ИначеЕсли ИмяМетода = "РассчитатьПартииПрочих" Тогда
		РассчитатьПартииПрочих(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
	ИначеЕсли ИмяМетода = "РассчитатьПартииРасходов" Тогда
		РассчитатьПартииРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
	ИначеЕсли ИмяМетода = "РассчитатьЗаписиКорректировокНДС" Тогда
		РассчитатьЗаписиКорректировокНДС(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
	ИначеЕсли ИмяМетода = "РассчитатьПартииПроизводства" Тогда
		РассчитатьПартииПроизводства(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);		
		
	
	ИначеЕсли ИмяМетода = "УстановитьГраницыПартииТоваровОрганизаций" Тогда
		УстановитьГраницыПартииТоваровОрганизаций(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		
	КонецЕсли;
	
	Возврат РасчетныеПартии;
	
КонецФункции

Процедура ТестЗаписатьРасчет(МенеджерРегистра, РасчетныеПартии) Экспорт
	ЗаписатьРасчетныеПартии(МенеджерРегистра, РасчетныеПартии, Неопределено);
КонецПроцедуры

Функция ТестРассчитатьЦепочкиДвижений(ИмяМетода, НачалоПериода, ОкончаниеПериода, Организация = Неопределено, ВнутренниеДанные) Экспорт
	Перем РасчетныеПартии;
	
	МассивОрганизаций = СвязиОрганизацийПоСхемеИнтеркампани(ОкончаниеПериода, Организация);
	
	Если ИмяМетода = "ПартииТоваров" Тогда
		ДанныеДляПартийТоваров = ДанныеДляПартийТоваров(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		РасчетныеПартии = РасчетныеПартииТоваров(ДанныеДляПартийТоваров, Неопределено, ВнутренниеДанные, Истина, Ложь);
	ИначеЕсли ИмяМетода = "ПартииЗатрат" Тогда
		ДанныеДляПартийЗатрат = ДанныеДляПартийЗатрат(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		РасчетныеПартии = РасчетныеПартииЗатрат(ДанныеДляПартийЗатрат, Неопределено, ВнутренниеДанные, Истина, Ложь);
	ИначеЕсли ИмяМетода = "ПартииРасходов" Тогда
		ДанныеДляПартийРасходов = ДанныеДляПартийРасходов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций);
		РасчетныеПартии = РасчетныеПартииРасходов(ДанныеДляПартийРасходов, Неопределено, ВнутренниеДанные, Истина, Ложь);
	КонецЕсли;
	Возврат РасчетныеПартии;
КонецФункции

// Позволяет отключить все операции записи регистров накопления (для тестирования расчета).
//
Функция ТестированиеБезЗаписи()
	Возврат Ложь;
КонецФункции

#КонецОбласти

#Область ВосстановлениеДвижений

// Исправление "внештатных" ситуаций в движениях документов
// По своей сути эти процедуры аналогичны обработчикам обновлений.
// Отличие в том, что обработчики должны поправить все данные в ИБ,
// а эти процедуры исправляют данные только в том периоде, по которому выполняется расчет партий.
// Такой подход позволяет не "портить" данные в уже рассчитанных и закрытых периодах.


#Область РегистрНакопления_ПартииТоваровОрганизаций

Процедура ВосстановитьДвиженияПоПартиямТоваров(НачалоПериода, ОкончаниеПериода, МассивОрганизаций) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.Ссылка,
	|	СУММА(ДД.Количество)
	|ИЗ (
	|	ВЫБРАТЬ
	|		ДД.Регистратор КАК Ссылка,
	|		СУММА(ДД.Количество) КАК Количество
	|	ИЗ 
	|		РегистрНакопления.ТоварыОрганизаций КАК ДД
	|	ГДЕ
	|		ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|		И ДД.Организация В (&МассивОрганизаций)
	|		И ДД.Первичное
	|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	СГРУППИРОВАТЬ ПО
	|		ДД.Регистратор
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		ДД.Регистратор КАК Ссылка,
	|		СУММА(ДД.Количество) КАК Количество
	|	ИЗ 
	|		РегистрНакопления.ТоварыОрганизацийКОформлению КАК ДД
	|	ГДЕ
	|		ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|		И ДД.Организация В (&МассивОрганизаций)
	|		И ДД.Первичное
	|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	СГРУППИРОВАТЬ ПО
	|		ДД.Регистратор
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		ДД.Регистратор КАК Ссылка,
	|		СУММА(ДД.Количество) КАК Количество
	|	ИЗ 
	|		РегистрНакопления.ТоварыОрганизацийКПередаче КАК ДД
	|	ГДЕ
	|		ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|		И ДД.ВидЗапасовПродавца.Организация В (&МассивОрганизаций)
	|		И ДД.Первичное
	|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	СГРУППИРОВАТЬ ПО
	|		ДД.Регистратор
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		ДД.Регистратор КАК Ссылка,
	|		СУММА(ДД.КоличествоСписано) КАК Количество
	|	ИЗ 
	|		РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ДД
	|	ГДЕ
	|		ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|		И ДД.ВидЗапасов.Организация В (&МассивОрганизаций)
	|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	СГРУППИРОВАТЬ ПО
	|		ДД.Регистратор
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		ДД.Регистратор КАК Ссылка,
	|		СУММА(-ДД.Количество) КАК Количество
	|	ИЗ 
	|		РегистрНакопления.ПартииТоваровОрганизаций КАК ДД
	|	ГДЕ
	|		ДД.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|		И ДД.Организация В (&МассивОрганизаций)
	|		И ДД.Первичное
	|		И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	СГРУППИРОВАТЬ ПО
	|		ДД.Регистратор
	|	) КАК ДД
	|СГРУППИРОВАТЬ ПО
	|	ДД.Ссылка	
	|ИМЕЮЩИЕ
	|	СУММА(ДД.Количество) <> 0
	|");
	
	Запрос.УстановитьПараметр("НачалоПериода",     НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода",  ОкончаниеПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ВосстановитьДвиженияДокументовПоРегиструНакопления(
		Выборка,
		Метаданные.РегистрыНакопления.ПартииТоваровОрганизаций.Имя);
	
КонецПроцедуры

#КонецОбласти


#Область РегистрНакопления_ВыручкаИСебестоимостьПродаж

Процедура ВосстановитьДвиженияДокументовСДублямиДвиженийПоВыручкеИСебестоимостиПродаж(НачалоПериода, ОкончаниеПериода, МассивОрганизаций) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаДокументыСДублямиДвиженийПоВыручкеИСебестоимостиПродаж();
	
	Запрос.УстановитьПараметр("НачалоПериода",     НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода",  ОкончаниеПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ВосстановитьДвиженияДокументовПоРегиструНакопления(
		Выборка,
		Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж.Имя);
	
КонецПроцедуры

// Возвращает текст запроса, позволяющего получить список документов
// с некорректными (задублированными) движениями по выручке и себестоимости продаж,
// появившимися в результате ошибки 
// "При перепроведении документа "Передача товаров между организациями" множаться движения по регистру "Выручка и себестоимость продаж"."
Функция ТекстЗапросаДокументыСДублямиДвиженийПоВыручкеИСебестоимостиПродаж() Экспорт
	Возврат
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Т.Регистратор КАК Ссылка
		|ИЗ
		|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК Т
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаПоПартнерам КАК Аналитики
		|		ПО Т.АналитикаУчетаПоПартнерам = Аналитики.Ссылка
		|ГДЕ
		|	Т.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И Аналитики.Организация В(&МассивОрганизаций)
		|	И Т.Количество = 0
		|	И Т.Себестоимость <> 0
		|	И НЕ Т.РасчетСебестоимости
		|	И НЕ Т.Регистратор ССЫЛКА Документ.КорректировкаРегистров
		|	И НЕ Т.Регистратор ССЫЛКА Документ.РасчетСебестоимостиТоваров";
КонецФункции

#КонецОбласти

#Область ОбщиеПроцедурыВосстановленияДвижений

// Перепроводит указанные документы только по одному указанному регистру накопления.
//
// Параметры:
//	ВыборкаДокументов - ВыборкаИзРезультатаЗапроса - выборка запроса, обязательно должна содержать поле Ссылка
//	ИмяРегистраНакопления - Строка - имя регистра накопления, по которому надо перепровести документы
//
Процедура ВосстановитьДвиженияДокументовПоРегиструНакопления(ВыборкаДокументов, ИмяРегистраНакопления)
	
	Если ВыборкаДокументов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыНакопления[ИмяРегистраНакопления].СоздатьНаборЗаписей();
	
	ДополнительныеСвойства = Новый Структура("ЭтоНовый, РежимЗаписи", Ложь, РежимЗаписиДокумента.Проведение);
	
	Пока ВыборкаДокументов.Следующий() Цикл
		
		Регистратор = ВыборкаДокументов.Ссылка;
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления." + ИмяРегистраНакопления + ".НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Регистратор);
			Блокировка.Заблокировать();
		
			ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(
				Регистратор,
				ДополнительныеСвойства,
				РежимПроведенияДокумента.Неоперативный);
				
			МетаданныеДокумента = ДополнительныеСвойства.ДляПроведения.МетаданныеДокумента;
			
			Документы[МетаданныеДокумента.Имя].ИнициализироватьДанныеДокумента(
				Регистратор,
				ДополнительныеСвойства);
				
			НаборЗаписей.Отбор.Регистратор.Установить(Регистратор);
			НаборЗаписей.Записывать = Истина;
			НаборЗаписей.Загрузить(ДополнительныеСвойства.ТаблицыДляДвижений["Таблица" + ИмяРегистраНакопления]);
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Не удалось обработать: %1 по причине: %2';uk='Не вдалося обробити: %1 з причини: %2'"),
				Регистратор,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				
			ЗаписьЖурналаРегистрации(
				ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
				УровеньЖурналаРегистрации.Предупреждение,
				Регистратор.Метаданные(),
				Регистратор,
				ТекстСообщения);
			
		КонецПопытки;
			
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти


#Область ОписаниеДанныхМеханизма

// Возвращает перечень объектов метаданных, на основании данных которых выполняется расчет партий.
//
// Возвращаемое значение:
//	Соответствие - Ключ - ОбъектМетаданных
//
Функция ВходящиеДанныеМеханизма() Экспорт
	
	ВходящиеДанные = Новый Соответствие;
	
	ВходящиеДанные.Вставить(Метаданные.Документы.ВнутреннееПотреблениеТоваров);
	ВходящиеДанные.Вставить(Метаданные.Документы.ВозвратТоваровМеждуОрганизациями);
	ВходящиеДанные.Вставить(Метаданные.Документы.ВозвратТоваровОтКлиента);
	ВходящиеДанные.Вставить(Метаданные.Документы.ЗаказНаПеремещение);
	ВходящиеДанные.Вставить(Метаданные.Документы.ЗаказПоставщику);
	ВходящиеДанные.Вставить(Метаданные.Документы.КорректировкаПоступления);
    ВходящиеДанные.Вставить(Метаданные.Документы.ОтчетОРозничныхПродажах);
	ВходящиеДанные.Вставить(Метаданные.Документы.ПередачаТоваровМеждуОрганизациями);
	ВходящиеДанные.Вставить(Метаданные.Документы.ПеремещениеТоваров);
	ВходящиеДанные.Вставить(Метаданные.Документы.ПоступлениеТоваровУслуг);
	ВходящиеДанные.Вставить(Метаданные.Документы.ПрочееОприходованиеТоваров);
	ВходящиеДанные.Вставить(Метаданные.Документы.РасчетСебестоимостиТоваров);
	ВходящиеДанные.Вставить(Метаданные.Документы.РеализацияТоваровУслуг);
	ВходящиеДанные.Вставить(Метаданные.Документы.СборкаТоваров);
	ВходящиеДанные.Вставить(Метаданные.Документы.КорректировкаНалоговогоНазначенияЗапасов);
	ВходящиеДанные.Вставить(Метаданные.Документы.ТаможеннаяДекларацияИмпорт);
	
	
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ЗаказыНаПеремещение);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ЗаказыПоставщикам);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.МатериалыИРаботыВПроизводстве);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.КорректировкиНДСПартий);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.НДСУсловныеПродажи);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииЗатратНаВыпуск);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииПроизводственныхЗатрат);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииПрочихРасходов);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииРасходовНаСебестоимостьТоваров);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииТоваровОрганизаций);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииТоваровПереданныеНаКомиссию);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеРасходы);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.СебестоимостьТоваров);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ТоварыКОформлениюОтчетовКомитенту);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ТоварыОрганизаций);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ТоварыОрганизацийКОформлению);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ТоварыОрганизацийКПередаче);
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ТоварыПереданныеНаКомиссию);
	
	
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.АналитикаУчетаНоменклатуры);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.АналитикаУчетаПартий);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ЗаданияКРасчетуСебестоимости);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.СтоимостьТоваров);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.УчетнаяПолитикаОрганизаций);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ЦеныНоменклатуры);
	
	
	Возврат ВходящиеДанные;
	
КонецФункции

// Возвращает перечень регистров, обслуживаемых механизмом расчета партий.
//
// Возвращаемое значение:
//	Соответствие - Ключ - ОбъектМетаданных
//
Функция ИсходящиеДанныеМеханизма() Экспорт
	
	// Перечень метаданных регистров, по которым формируются движения по партиям.
	ИсходящиеДанные = Новый Соответствие;
	
	Значение = Истина; // чтобы можно было проверить вхождение объекта метаданных в это соответствие
	
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы, 		Значение);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.МатериалыИРаботыВПроизводстве, 			Значение);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.КорректировкиНДСПартий, 					Значение);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.НДСУсловныеПродажи, 					    Значение);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииЗатратНаВыпуск, 					Значение);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииПроизводственныхЗатрат, 			Значение);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииПрочихРасходов, 					Значение);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииРасходовНаСебестоимостьТоваров, 	Значение);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииТоваровОрганизаций, 				Значение);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПартииТоваровПереданныеНаКомиссию, 		Значение);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеРасходы, 							Значение);
	ИсходящиеДанные.Вставить(Метаданные.РегистрыНакопления.СебестоимостьТоваров, 					Значение);
	
	
	Возврат ИсходящиеДанные;
	
КонецФункции

#КонецОбласти

#Область ВспомогательныеПроцедурыДляБлокировкиАлгоритмаПриОбновленииИБ

Процедура ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(ПредставлениеОперации)
	
	ЗакрытиеМесяцаУТВызовСервера.ПроверитьБлокировкуВходящихДанныхПриОбновленииИБ(
		ВходящиеДанныеМеханизма(),
		ПредставлениеОперации);
	
КонецПроцедуры

Процедура РегистраторыПрошлыхДвиженийМаршрутныхЛистов(НачалоПериода, ОкончаниеПериода, МассивОрганизаций, Регистраторы)
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	ДД.Регистратор
		|ИЗ
		|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК ДД
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.МатериалыИРаботыВПроизводстве КАК Движения
		|		ПО Движения.Регистратор = ДД.Регистратор
		|ГДЕ
		|	ДД.Период < &НачалоПериода
		|	И ДД.Организация В (&МассивОрганизаций)
		|	И ДД.Активность
		|	И ДД.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Движения.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
		|	И Движения.Организация В (&МассивОрганизаций)
		|	И Движения.Активность
		|";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("МассивОрганизаций", МассивОрганизаций);	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Регистраторы.Вставить(Выборка.Регистратор, Истина);
	КонецЦикла;
КонецПроцедуры

#КонецОбласти
