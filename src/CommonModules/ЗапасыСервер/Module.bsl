
#Область ПрограммныйИнтерфейс

// Проверяет заполнение подразделения в табличной части.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект.ЗаказПоставщику, ДокументОбъект.ПоступлениеТоваровИУслуг - Проверяемый документ
//	Товары - ДанныеФормыКоллекция - Табличная часть товаров
//	ТипыНоменклатуры - Массив - Массив проверяемых типов номенклатуры
//	ТекстОшибки - Строка - Текст ошибки с параметром "%1" для номера строки
//	Отказ - Булево - Признак наличия ошибок
//
Процедура ПроверитьЗаполнениеПодразделенияВТабличнойЧасти(ДокументОбъект, Товары, ТипыНоменклатуры, ТекстОшибки, Отказ) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьПодразделения") Тогда
		Возврат;
	КонецЕсли;  
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Подразделение КАК Подразделение,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры В (&ТипыНоменклатуры)
	|	И ТаблицаТовары.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("ТаблицаТовары",     Товары.Выгрузить(, "Номенклатура, Подразделение, НомерСтроки"));
	Запрос.УстановитьПараметр("ТипыНоменклатуры",  ТипыНоменклатуры);
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, Выборка.НомерСтроки);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстОшибки,
				ДокументОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "Подразделение"),
				,
				Отказ);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура проверяет указание номеров ГТД в табличной части "Товары".
//
// Параметры:
//	ДокументОбъект - Текущий документ
//	Товары - ДанныеФормыКоллекция - Табличная часть товаров
//	Отказ - Булево - Признак отказа от проведения документа
//
Процедура ПроверитьЗаполнениеНомеровГТД(ДокументОбъект, Отказ, ИмяТЧ = "Товары") Экспорт
	
	МетаданныеОбъекта = ДокументОбъект.Метаданные();
	ПредставлениеТЧ = МетаданныеОбъекта.ТабличныеЧасти[ИмяТЧ].Синоним;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ИсходнаяТаблица.НомерСтроки КАК НомерСтроки,
	|	ИсходнаяТаблица.Номенклатура КАК Номенклатура,
	|	ИсходнаяТаблица.НомерГТД КАК НомерГТД
	|
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ИсходнаяТаблица
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.НомерГТД = ЗНАЧЕНИЕ(Справочник.НоменклатураГТД.ПустаяСсылка)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТаблицаТовары.Номенклатура.ВестиУчетПоГТД
	|");
	ТаблицаТовары = ДокументОбъект[ИмяТЧ].Выгрузить(, "НомерСтроки, Номенклатура, НомерГТД");
	Запрос.УстановитьПараметр("ТаблицаТовары", ТаблицаТовары);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Не заполнена колонка ""Код УКТВЭД и номер ГТД"" в строке %1 списка ""%2""';uk='Не заповнена колонка ""Код УКТЗЕД та номер ВМД"" в рядку %1 списку ""%2""'"),
			Выборка.НомерСтроки,
			ПредставлениеТЧ);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Текст,
			ДокументОбъект,
			ИмяТЧ + "[" + (Выборка.НомерСтроки - 1) + "].НомерГТД",
			,
			Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Функция выполняет создание номеров ГТД по параметрам переданным в колонках
Процедура ЗаполнитьНоменклатуруГТД(ИсходныеДанные, СоздаватьЭлементы = Ложь, ИгнорироватьПризнакВестиУчетПоГТД = Ложь, Комментарий = "", Отказ = Ложь, ТекстОшибки = "") Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ИсходныеДанные.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ВЫРАЗИТЬ(ИсходныеДанные.КодУКТВЭД КАК Справочник.КлассификаторУКТВЭД) КАК КодУКТВЭД,
	|	ВЫРАЗИТЬ(ИсходныеДанные.НомерГТД КАК Справочник.НомераГТД) КАК НомерГТД,
	|	ВЫРАЗИТЬ(ИсходныеДанные.СтараяНоменклатураГТД КАК Справочник.НоменклатураГТД) КАК СтараяНоменклатураГТД
	|ПОМЕСТИТЬ ИсходныеДанные
	|ИЗ
	|	&ИсходныеДанные КАК ИсходныеДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсходныеДанные.Номенклатура КАК Номенклатура,
	|	ИсходныеДанные.КодУКТВЭД КАК КодУКТВЭД,
	|	ИсходныеДанные.НомерГТД КАК НомерГТД,
	|	ВЫБОР 
	|		КОГДА ИсходныеДанные.СтараяНоменклатураГТД <> ЗНАЧЕНИЕ(Справочник.НоменклатураГТД.ПустаяСсылка)
	|			И ИсходныеДанные.Номенклатура = ИсходныеДанные.СтараяНоменклатураГТД.Владелец
	|			И ИсходныеДанные.КодУКТВЭД = ИсходныеДанные.СтараяНоменклатураГТД.КодУКТВЭД
	|			И ИсходныеДанные.НомерГТД = ИсходныеДанные.СтараяНоменклатураГТД.НомерГТД
	|			ТОГДА ИсходныеДанные.СтараяНоменклатураГТД
	|       ИНАЧЕ
	|			ЕСТЬNULL(Номенклатура_ГТД.Ссылка, ЗНАЧЕНИЕ(Справочник.НоменклатураГТД.ПустаяСсылка))
	|	КОНЕЦ КАК НоменклатураГТД
	|ИЗ
	|	ИсходныеДанные КАК ИсходныеДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НоменклатураГТД КАК Номенклатура_ГТД
	|		ПО ИсходныеДанные.Номенклатура = Номенклатура_ГТД.Владелец
	|			И ИсходныеДанные.КодУКТВЭД = Номенклатура_ГТД.КодУКТВЭД
	|			И ИсходныеДанные.НомерГТД = Номенклатура_ГТД.НомерГТД
	|ГДЕ
	|	(&ИгнорироватьПризнакВестиУчетПоГТД ИЛИ ИсходныеДанные.Номенклатура.ВестиУчетПоГТД)
	|	И ИсходныеДанные.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ИсходныеДанные", ИсходныеДанные);
	Запрос.УстановитьПараметр("ИгнорироватьПризнакВестиУчетПоГТД", ИгнорироватьПризнакВестиУчетПоГТД);
	
	НайденныеДанные = Запрос.Выполнить().Выгрузить();
	
	Если СоздаватьЭлементы Тогда
		
		Для Каждого СтрокаТаблицы Из НайденныеДанные Цикл
				
			Если ЗначениеЗаполнено(СтрокаТаблицы.НоменклатураГТД) Тогда
				Продолжить;
			КонецЕсли;
					
			НоменклатураГТДОбъект = Справочники.НоменклатураГТД.СоздатьЭлемент();
			ЗаполнитьЗначенияСвойств(НоменклатураГТДОбъект, СтрокаТаблицы);
			НоменклатураГТДОбъект.Владелец = СтрокаТаблицы.Номенклатура;
			НоменклатураГТДОбъект.Комментарий = Комментарий;
			
			Попытка
				НоменклатураГТДОбъект.Записать();
			Исключение
				ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Ошибка при автоматическом создании кодов УКТВЭД и номеров ГТД: %1';uk='Помилка при автоматичному створенні кодів УКТЗЕД та номерів ВМД: %1'"),
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
				);
				Отказ = Истина;
				Возврат;
			КонецПопытки;
			
			СтрокаТаблицы.НоменклатураГТД = НоменклатураГТДОбъект.Ссылка;
			
		КонецЦикла;
	
	КонецЕсли;
	
	ИсходныеДанные.Колонки.Добавить("НоменклатураГТД", Новый ОписаниеТипов("СправочникСсылка.НоменклатураГТД"));
	
	Отбор = Новый Структура("Номенклатура, КодУКТВЭД, НомерГТД");
	Для каждого СтрокаТаблицы Из НайденныеДанные Цикл		
		
		ЗаполнитьЗначенияСвойств(Отбор, СтрокаТаблицы);
		НайденныеСтроки = ИсходныеДанные.НайтиСтроки(Отбор);
		Для каждого СтрокаТаблицыИсходныхДанных Из НайденныеСтроки Цикл
			СтрокаТаблицыИсходныхДанных.НоменклатураГТД = СтрокаТаблицы.НоменклатураГТД;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьНоменклатуруГТД()

Процедура ЗаполнитьНоменклатуруГТДОприходованиеВидовЗапасов(Ссылка, ВидыЗапасов, Отказ, ИгнорироватьПризнакВестиУчетПоГТД = Истина) Экспорт

	// Если в ходе проведения документа были ошибки не создаем новые сущности в ИБ
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК ИсходнаяАналитикаУчетаНоменклатуры,
	|	ВЫРАЗИТЬ(ВидыЗапасов.НомерГТД КАК Справочник.НоменклатураГТД) КАК ИсходнаяНоменклатураГТД,
	|	ВидыЗапасов.НоменклатураОприходование КАК Номенклатура
	|ПОМЕСТИТЬ ВидыЗапасов
	|ИЗ
	|	&ВидыЗапасов КАК ВидыЗапасов
	|;
	|
	// Сохраняем ссылки на номенклатуру ГТД использованную при предыдущем проведении
	// Т.к. возможны не уникальные элементы при использовании РИБ
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВидыЗапасов.НомерГТДОприходование.Владелец КАК Номенклатура,
	|	ВидыЗапасов.НомерГТДОприходование.КодУКТВЭД КАК КодУКТВЭД,
	|	ВидыЗапасов.НомерГТДОприходование.НомерГТД КАК НомерГТД,
	|	ВидыЗапасов.НомерГТДОприходование КАК НоменклатураГТД
	|ПОМЕСТИТЬ СтараяНоменклатураГТД
	|ИЗ
	// Имя документа будет заменено на имя реального документа
	|	Документ.ВозвратТоваровОтКлиента.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВидыЗапасов.ИсходнаяАналитикаУчетаНоменклатуры КАК ИсходнаяАналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.ИсходнаяНоменклатураГТД КАК ИсходнаяНоменклатураГТД,
	|	ВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ВидыЗапасов.ИсходнаяНоменклатураГТД.КодУКТВЭД КАК КодУКТВЭД,
	|	ВидыЗапасов.ИсходнаяНоменклатураГТД.НомерГТД КАК НомерГТД,
	|	СтараяНоменклатураГТД.НоменклатураГТД КАК СтараяНоменклатураГТД
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ВидыЗапасов.ИсходнаяАналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|       ЛЕВОЕ СОЕДИНЕНИЕ СтараяНоменклатураГТД КАК СтараяНоменклатураГТД
	|		ПО Аналитика.Номенклатура = СтараяНоменклатураГТД.Номенклатура
	|			И ВидыЗапасов.ИсходнаяНоменклатураГТД.КодУКТВЭД = СтараяНоменклатураГТД.КодУКТВЭД
	|			И ВидыЗапасов.ИсходнаяНоменклатураГТД.НомерГТД  = СтараяНоменклатураГТД.НомерГТД
	|ГДЕ
	|	ВидыЗапасов.ИсходнаяНоменклатураГТД <> ЗНАЧЕНИЕ(Справочник.НоменклатураГТД.ПустаяСсылка)";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВозвратТоваровОтКлиента", Ссылка.Метаданные().Имя);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ВидыЗапасов", ВидыЗапасов.Выгрузить(,"АналитикаУчетаНоменклатуры, НомерГТД, НоменклатураОприходование"));	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	ИсходныеДанные = Запрос.Выполнить().Выгрузить();	
	КодЯзыка = ЛокализацияПовтИсп.КодЯзыкаИнформационнойБазы();
	Комментарий = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Элемент создан автоматически при проведении документа ""%1""';uk='Елемент створений автоматично при проведенні документа ""%1""'"), 
		?(Ссылка.Пустая(),  ЛокализацияПовтИсп.ОбработатьПереводы(Ссылка.Метаданные().ПолноеИмя(), Ссылка.Метаданные().Имя, КодЯзыка), Локализация.ПолучитьЛокализованноеПредставление(Ссылка, КодЯзыка)));
	ТекстОшибки = "";
	
	// Документ проводится в привилегированном режиме. Проблем с записью быть не должно	
	// Сохраняем значение кода УКТВЭД и номера ГТД исходного товара независимо от признака ВедетсяУчетПоГТД
	ЗаполнитьНоменклатуруГТД(ИсходныеДанные, Истина, ИгнорироватьПризнакВестиУчетПоГТД, Комментарий, Отказ, ТекстОшибки);
	
   	Если Отказ Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка);
		Возврат;	
	КонецЕсли;
	
	Отбор = Новый Структура("ИсходнаяАналитикаУчетаНоменклатуры, ИсходнаяНоменклатураГТД, Номенклатура");
	Для каждого СтрокаВидыЗапасов Из ВидыЗапасов Цикл		
		
		СтрокаВидыЗапасов.НомерГТДОприходование = Неопределено;
		
		Если Не ЗначениеЗаполнено(СтрокаВидыЗапасов.НомерГТД) Тогда
			Продолжить;
		КонецЕсли;
		
		Отбор.ИсходнаяАналитикаУчетаНоменклатуры = СтрокаВидыЗапасов.АналитикаУчетаНоменклатуры;
		Отбор.ИсходнаяНоменклатураГТД            = СтрокаВидыЗапасов.НомерГТД;
		Отбор.Номенклатура                       = СтрокаВидыЗапасов.НоменклатураОприходование;
		
		НайденныеСтроки = ИсходныеДанные.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество() = 0 Тогда
			Продолжить;			
		КонецЕсли;
		
		СтрокаВидыЗапасов.НомерГТДОприходование = НайденныеСтроки[0].НоменклатураГТД;
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьНоменклатуруГТДОприходованиеВидовЗапасов

Процедура ЗаполнитьНоменклатуруГТДИмпорт(Ссылка, Разделы, Товары, НомерГТД, Отказ) Экспорт

	// Если в ходе проведения документа были ошибки не создаем новые сущности в ИБ
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// При проведении документа уже проверено:
	// а) Наличие кодов УКТВЭД во всех строках табличной части Разделы
	// б) Заполенность номера раздела во всех строках табличной части Товары
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаРазделов.НомерРаздела КАК НомерРаздела,
	|	ТаблицаРазделов.КодУКТВЭД КАК КодУКТВЭД
	|ПОМЕСТИТЬ ТаблицаРазделов
	|ИЗ
	|	&ТаблицаРазделов КАК ТаблицаРазделов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваров.НомерРаздела КАК НомерРаздела,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	// Сохраняем ссылки на номенклатуру ГТД использованную при предыдущем проведении
	// Т.к. возможны не уникальные элементы при использовании РИБ
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваров.НомерГТД.Владелец КАК Номенклатура,
	|	ТаблицаТоваров.НомерГТД.КодУКТВЭД КАК КодУКТВЭД,
	|	ТаблицаТоваров.НомерГТД.НомерГТД КАК НомерГТД,
	|	ТаблицаТоваров.НомерГТД КАК НоменклатураГТД
	|ПОМЕСТИТЬ СтараяНоменклатураГТД
	|ИЗ
	|   Документ.ТаможеннаяДекларацияИмпорт.Товары КАК ТаблицаТоваров
	|ГДЕ
	|  	ТаблицаТоваров.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРазделов.НомерРаздела КАК НомерРаздела,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаРазделов.КодУКТВЭД КАК КодУКТВЭД,
	|	&НомерГТД КАК НомерГТД,
	|	СтараяНоменклатураГТД.НоменклатураГТД КАК СтараяНоменклатураГТД
	|ИЗ
	|	ТаблицаРазделов КАК ТаблицаРазделов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваров КАК ТаблицаТоваров
	|		ПО ТаблицаРазделов.НомерРаздела = ТаблицаТоваров.НомерРаздела
	|       ЛЕВОЕ СОЕДИНЕНИЕ СтараяНоменклатураГТД КАК СтараяНоменклатураГТД
	|		ПО ТаблицаТоваров.Номенклатура = СтараяНоменклатураГТД.Номенклатура
	|			И ТаблицаРазделов.КодУКТВЭД = СтараяНоменклатураГТД.КодУКТВЭД
	|			И &НомерГТД = СтараяНоменклатураГТД.НомерГТД
	|";

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТаблицаРазделов", Разделы.Выгрузить(, "НомерРаздела,КодУКТВЭД"));
	Запрос.УстановитьПараметр("ТаблицаТоваров",  Товары.Выгрузить (, "НомерРаздела,Номенклатура"));
	Запрос.УстановитьПараметр("НомерГТД",        НомерГТД);
	Запрос.УстановитьПараметр("Ссылка",          Ссылка);
	
	ИсходныеДанные = Запрос.Выполнить().Выгрузить();	
	КодЯзыка = ЛокализацияПовтИсп.КодЯзыкаИнформационнойБазы();
	Комментарий = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Элемент создан автоматически при проведении документа ""%1""';uk='Елемент створений автоматично при проведенні документа ""%1""'"), 
		?(Ссылка.Пустая(),  ЛокализацияПовтИсп.ОбработатьПереводы(Ссылка.Метаданные().ПолноеИмя(), Ссылка.Метаданные().Имя, КодЯзыка), Локализация.ПолучитьЛокализованноеПредставление(Ссылка, КодЯзыка)));
	ТекстОшибки = "";
	
	// Документ проводится в привилегированном режиме. Проблем с записью быть не должно	
	// Сохраняем значение кода УКТВЭД и номера ГТД исходного товара независимо от признака ВедетсяУчетПоГТД
	ЗаполнитьНоменклатуруГТД(ИсходныеДанные, Истина, Истина, Комментарий, Отказ, ТекстОшибки);
	
   	Если Отказ Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, Ссылка);
		Возврат;	
	КонецЕсли;
	
	Отбор = Новый Структура("НомерРаздела, Номенклатура");
	Для каждого СтрокаТовары Из Товары Цикл		
		
		СтрокаТовары.НомерГТД = Неопределено;
		
		ЗаполнитьЗначенияСвойств(Отбор, СтрокаТовары); 		
		НайденныеСтроки = ИсходныеДанные.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество() = 0 Тогда
			Продолжить;			
		КонецЕсли;
		
		СтрокаТовары.НомерГТД = НайденныеСтроки[0].НоменклатураГТД;
		
	КонецЦикла;
	
КонецПроцедуры  // ЗаполнитьНоменклатуруГТДИмпорт

// Процедура помещает табличные части "Товары" и "Виды запасов" во временное хранилище.
//
Процедура ПоместитьТоварыИВидыЗапасовВХранилище(
	Знач Товары,
	Знач ВидыЗапасов,
	УникальныйИдентификатор, 
	АдресТоваровВХранилище, 
	АдресВидовЗапасовВХранилище
	) Экспорт
	
	ТоварыЭтоТЗ      = (ТипЗнч(Товары) = Тип("ТаблицаЗначений"));
	ВидыЗапасовЭтоТЗ = (ТипЗнч(ВидыЗапасов) = Тип("ТаблицаЗначений"));
	
	КолонкиТаблицаТоваров = "НомерСтроки, АналитикаУчетаНоменклатуры, Номенклатура, Характеристика, Количество";
	КолонкиТаблицаВидовЗапасов = "АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД, Количество";
	
	Если Товары.Количество() > 0 Тогда
		
		Если (ТоварыЭтоТЗ И Товары.Колонки.Найти("Сумма") <> Неопределено) ИЛИ (Не ТоварыЭтоТЗ И Товары[0].Свойство("Сумма")) Тогда
			КолонкиТаблицаТоваров = КолонкиТаблицаТоваров + ",Сумма";
		КонецЕсли;
		Если (ТоварыЭтоТЗ И Товары.Колонки.Найти("СуммаНДС") <> Неопределено) ИЛИ (Не ТоварыЭтоТЗ И Товары[0].Свойство("СуммаНДС")) Тогда
			КолонкиТаблицаТоваров = КолонкиТаблицаТоваров + ",СуммаНДС,СтавкаНДС";
		КонецЕсли;
		Если (ТоварыЭтоТЗ И Товары.Колонки.Найти("СуммаПродажи") <> Неопределено) ИЛИ (Не ТоварыЭтоТЗ И Товары[0].Свойство("СуммаПродажи")) Тогда	
			КолонкиТаблицаТоваров = КолонкиТаблицаТоваров + ",СуммаПродажи";
		КонецЕсли;
		Если (ТоварыЭтоТЗ И Товары.Колонки.Найти("Склад") <> Неопределено) ИЛИ (Не ТоварыЭтоТЗ И Товары[0].Свойство("Склад")) Тогда
			КолонкиТаблицаТоваров = КолонкиТаблицаТоваров + ",Склад";
		КонецЕсли;
		Если (ТоварыЭтоТЗ И Товары.Колонки.Найти("ДокументРеализации") <> Неопределено) ИЛИ (Не ТоварыЭтоТЗ И Товары[0].Свойство("ДокументРеализации")) Тогда	
			КолонкиТаблицаТоваров = КолонкиТаблицаТоваров + ",ДокументРеализации";
		КонецЕсли;
		Если (ТоварыЭтоТЗ И Товары.Колонки.Найти("Серия") <> Неопределено) ИЛИ (Не ТоварыЭтоТЗ И Товары[0].Свойство("Серия")) Тогда	
			КолонкиТаблицаТоваров = КолонкиТаблицаТоваров + ",Серия";
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВидыЗапасов.Количество() > 0 Тогда
		
		Если (ВидыЗапасовЭтоТЗ И ВидыЗапасов.Колонки.Найти("СуммаСНДС") <> Неопределено) ИЛИ (Не ВидыЗапасовЭтоТЗ И ВидыЗапасов[0].Свойство("СуммаСНДС")) Тогда	
			КолонкиТаблицаВидовЗапасов = КолонкиТаблицаВидовЗапасов + ",СуммаСНДС";
		КонецЕсли;
		Если (ВидыЗапасовЭтоТЗ И ВидыЗапасов.Колонки.Найти("СуммаНДС") <> Неопределено) ИЛИ (Не ВидыЗапасовЭтоТЗ И ВидыЗапасов[0].Свойство("СуммаНДС")) Тогда
			КолонкиТаблицаВидовЗапасов = КолонкиТаблицаВидовЗапасов + ",СуммаНДС,СтавкаНДС";
		КонецЕсли;
		Если (ВидыЗапасовЭтоТЗ И ВидыЗапасов.Колонки.Найти("ЦелевоеНалоговоеНазначение") <> Неопределено) ИЛИ (Не ВидыЗапасовЭтоТЗ И ВидыЗапасов[0].Свойство("ЦелевоеНалоговоеНазначение")) Тогда
			КолонкиТаблицаВидовЗапасов = КолонкиТаблицаВидовЗапасов + ",ЦелевоеНалоговоеНазначение";
		КонецЕсли;
		Если (ВидыЗапасовЭтоТЗ И ВидыЗапасов.Колонки.Найти("Склад") <> Неопределено) ИЛИ (Не ВидыЗапасовЭтоТЗ И ВидыЗапасов[0].Свойство("Склад")) Тогда						
			КолонкиТаблицаВидовЗапасов = КолонкиТаблицаВидовЗапасов + ",Склад";
		КонецЕсли;
		Если (ВидыЗапасовЭтоТЗ И ВидыЗапасов.Колонки.Найти("СкладОтгрузки") <> Неопределено) ИЛИ (Не ВидыЗапасовЭтоТЗ И ВидыЗапасов[0].Свойство("СкладОтгрузки")) Тогда					
			КолонкиТаблицаВидовЗапасов = КолонкиТаблицаВидовЗапасов + ",СкладОтгрузки";
		КонецЕсли;
		Если (ВидыЗапасовЭтоТЗ И ВидыЗапасов.Колонки.Найти("ДокументРеализации") <> Неопределено) ИЛИ (Не ВидыЗапасовЭтоТЗ И ВидыЗапасов[0].Свойство("ДокументРеализации")) Тогда					
			КолонкиТаблицаВидовЗапасов = КолонкиТаблицаВидовЗапасов + ",ДокументРеализации";
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТоварыЭтоТЗ Тогда
		ТаблицаТоваров = Товары.Скопировать(,КолонкиТаблицаТоваров);
	Иначе
		ТаблицаТоваров = Товары.Выгрузить(,КолонкиТаблицаТоваров);
	КонецЕсли;
	Если ВидыЗапасовЭтоТЗ Тогда
		ТаблицаВидовЗапасов = ВидыЗапасов.Скопировать(,КолонкиТаблицаВидовЗапасов);
	Иначе
		ТаблицаВидовЗапасов = ВидыЗапасов.Выгрузить(,КолонкиТаблицаВидовЗапасов);
	КонецЕсли;
	
	АдресТоваровВХранилище = ПоместитьВоВременноеХранилище(
		ТаблицаТоваров,
		УникальныйИдентификатор);
	АдресВидовЗапасовВХранилище = ПоместитьВоВременноеХранилище(
		ТаблицаВидовЗапасов,
		УникальныйИдентификатор);
	
КонецПроцедуры // ПоместитьТоварыИВидыЗапасовВХранилище()

// Процедура устанавливает видимость выбора типов предназначений видов запасов в форме.
//
// Параметры:
//	Форма - УправляемаяФорма - Текущая форма
//	Поле - ПолеФормы - Поле формы для выбора предназначения
//
Процедура УстановитьВидимостьТиповПредназначенийВидовЗапасов(Форма, Поле) Экспорт
	
	МассивПредназначений = Новый Массив;
	
	Если Не Форма.ПолучитьФункциональнуюОпциюФормы("ФормироватьВидыЗапасовПоПодразделениямМенеджерам") Тогда
		МассивПредназначений.Добавить(Перечисления.ТипыПредназначенияВидовЗапасов.ПредназначенДляМенеджера);
		МассивПредназначений.Добавить(Перечисления.ТипыПредназначенияВидовЗапасов.ПредназначенДляПодразделения);
	КонецЕсли;
	
	Если Не Форма.ПолучитьФункциональнуюОпциюФормы("ФормироватьВидыЗапасовПоСделкам") Тогда
		МассивПредназначений.Добавить(Перечисления.ТипыПредназначенияВидовЗапасов.ПредназначенДляСделки);
	КонецЕсли;	
		
	Для Каждого Предназначение Из МассивПредназначений Цикл
	
		ЭлементСписка = Поле.СписокВыбора.НайтиПоЗначению(Предназначение);
		Если ЭлементСписка <> Неопределено Тогда
			Поле.СписокВыбора.Удалить(ЭлементСписка);
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры // УстановитьВидимостьТиповПредназначенийВидовЗапасов()

// Процедура заполняет список выбора налогообложения для документа закупки.
//
// Параметры:
//	Поле - ПолеФормы - Поле формы для выбора налогообложения
//
Процедура ЗаполнитьСписокВыбораНалогообложения(Поле, ХозяйственнаяОперация) Экспорт
	
	СписокНалогообложений = Поле.СписокВыбора;
	
	СписокНалогообложений.Очистить();
	СписокНалогообложений.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС, НСтр("ru='Закупка облагается НДС';uk='Купівля оподатковується ПДВ'"));
	СписокНалогообложений.Добавить(Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС, НСтр("ru='Закупка не облагается НДС';uk='Купівля не оподатковується ПДВ'"));
	
КонецПроцедуры

#Область ПроцедурыФормированияТаблицыДоступныхВидовЗапасов

// Процедура формирует временную таблицу доступных видов запасов.
//
// Параметры:
//	Организация - СправочникСсылка.Организации - Организация документа
//	Сделки - массив элементов СправочникСсылка.Сделка или одна ссылка СправочникСсылка.Сделка - Сделка/сделки документа
//	Менеджер - СправочникСсылка.Пользователи - Менеджер документа
//	Подразделение - СправочникСсылка.СтруктураПредприятия - Подразделение документа
//	МенеджерВременныхТаблиц - Менеджер временных таблиц
//  ДоступнаПередачаНаКомиссию - Булево - Разрешается побирать запасы организаций со способом между организациями "передача на комиссию"
//  ХозОперация - ПеречислениеСсылка.ХозяйственныеОперации - хоз.операция документа
//
Процедура ВидыЗапасовНеОбособленныеИОбособленные(Организация, Сделки, Менеджер, Подразделение, МенеджерВременныхТаблиц, ДоступнаПередачаНаКомиссию = Ложь, ХозОперация = Неопределено, ДатаДокумента = Неопределено) Экспорт 
	
	Запрос = Новый Запрос("
	|// Собственные виды запасов
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов,
	|	ВидыЗапасов.Ссылка КАК ВидЗапасовПродавца,
	|	ВидыЗапасов.Предназначение КАК Предназначение,
	|	ВидыЗапасов.Сделка КАК Сделка,
	|	ВидыЗапасов.Менеджер КАК Менеджер,
	|	ВидыЗапасов.Подразделение КАК Подразделение,
	|	ВидыЗапасов.Назначение КАК Назначение
	|
	|ПОМЕСТИТЬ ВидыЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	Не ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И ВидыЗапасов.Организация = &Организация
	|	И Не ВидыЗапасов.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Виды запасов интеркомпани
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов,
	|	ЕСТЬNULL(ВидыЗапасовПродавца.Ссылка, Неопределено) КАК ВидЗапасовПродавца,
	|	ВидыЗапасов.Предназначение КАК Предназначение,
	|	ВидыЗапасов.Сделка КАК Сделка,
	|	ВидыЗапасов.Менеджер КАК Менеджер,
	|	ВидыЗапасов.Подразделение КАК Подразделение,
	|	ВидыЗапасов.Назначение КАК Назначение
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|	ПО
	|		ВидыЗапасов.Организация = Настройка.ОрганизацияВладелец
	|		И ВидыЗапасов.ТипЗапасов = Настройка.ТипЗапасов
	|		И Настройка.СпособПередачиТоваров <> ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.НеПередается)
	|		И Настройка.ОрганизацияПродавец = &Организация
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК ВидыЗапасовПродавца
	|	ПО
	|		ВидыЗапасов.Ссылка = ВидыЗапасовПродавца.ВидЗапасовВладельца
	|		И Настройка.ОрганизацияПродавец = ВидыЗапасовПродавца.Организация
	|		И Настройка.СпособПередачиТоваров = ВидыЗапасовПродавца.СпособПередачиТоваров
	|		И Настройка.Валюта = ВидыЗапасовПродавца.Валюта
	|		// Если не указать отбор по налоговому назначению, то рискуем получить удвоение остатков,
	|		// в любом случае новый вид запасов, при необходимости, будет создан
	|		И ВидыЗапасов.НалоговоеНазначение = ВидыЗапасовПродавца.НалоговоеНазначение
	|		И ВЫБОР КОГДА &ОрганизацияПлательщикНДС 
	|			ТОГДА ИСТИНА 
	|			ИНАЧЕ ВидыЗапасовПродавца.НалоговоеНазначение.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая) 
	|		КОНЕЦ
	|		И ВЫБОР КОГДА ВидыЗапасов.НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.Управленческое)
	|			ТОГДА ВидыЗапасовПродавца.НалоговоеНазначение = &НалоговоеНазначениеОрганизации
	|			ИНАЧЕ ИСТИНА 
	|		КОНЕЦ
	|		И ВЫБОР КОГДА &Организация = ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|			ТОГДА ВидыЗапасовПродавца.НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.Управленческое)
	|			ИНАЧЕ ИСТИНА 
	|		КОНЕЦ
	|ГДЕ
	|	&ИспользоватьПередачиТоваровМеждуОрганизациями
	|	И Не ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И ВидыЗапасов.Организация <> &Организация
	|	И Не ВидыЗапасов.ПометкаУдаления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Предназначение
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|
	|// Не обособленные виды запасов
	|ВЫБРАТЬ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|
	|ПОМЕСТИТЬ ДоступныеВидыЗапасов
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначениеНеОграничено)
	|	ИЛИ ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обособленные виды запасов по сделке
	|ВЫБРАТЬ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляСделки)
	|	И ВидыЗапасов.Сделка В (&Сделки)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обособленные виды запасов по менеджеру
	|ВЫБРАТЬ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляМенеджера)
	|	И ВидыЗапасов.Менеджер = &Менеджер
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обособленные виды запасов по подразделению
	|ВЫБРАТЬ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляПодразделения)
	|	И ВидыЗапасов.Подразделение = &Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обособленные виды запасов по заказам
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляЗаказа)
	|	И ВидыЗапасов.Назначение В (
	|		ВЫБРАТЬ
	|			ТаблицаТоваров.Назначение
	|		ИЗ
	|			ТаблицаТоваров КАК ТаблицаТоваров
	|	)
	|");
	Запрос.УстановитьПараметр("ХозОперация", ХозОперация);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Сделки", ОбщегоНазначенияУТКлиентСервер.Массив(Сделки));
	Запрос.УстановитьПараметр("Менеджер", Менеджер);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("ИспользоватьПередачиТоваровМеждуОрганизациями", ПолучитьФункциональнуюОпцию("ИспользоватьПередачиТоваровМеждуОрганизациями"));
	Запрос.УстановитьПараметр("ДоступнаПередачаНаКомиссию", ДоступнаПередачаНаКомиссию);
	Запрос.УстановитьПараметр("ОрганизацияПлательщикНДС", НДСОбщегоНазначенияСервер.ОрганизацияПлательщикНДС(Организация, ?(ДатаДокумента = Неопределено, ТекущаяДатаСеанса(), ДатаДокумента)));
	Запрос.УстановитьПараметр("НалоговоеНазначениеОрганизации", Справочники.Организации.НалоговоеНазначениеНДС(Организация, ?(ДатаДокумента = Неопределено, ТекущаяДатаСеанса(), ДатаДокумента)));
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	
КонецПроцедуры

// Процедура формирует временную таблицу доступных видов запасов.
//
// Параметры:
//	Организация - СправочникСсылка.Организации - Организация документа
//	НалоговоеНазначение - СправочникСсылка.НалоговыеНазначенияАктивовИЗатрат  - НалоговоеНазначение НДС документа
//	КонтролироватьНалогообложение - Булево - Признак необходимости контроля налогообложения НДС
//	Дата - Дата документа
//	МассивСделок - Массив СправочникСсылка.Сделка - Сделки документа
//	Менеджер - СправочникСсылка.Пользователи - Менеджер документа
//	Подразделение - СправочникСсылка.СтруктураПредприятия - Подразделение документа
//	МенеджерВременныхТаблиц - Менеджер временных таблиц
//
Процедура ВидыЗапасовПоНалогообложению(Организация, НалоговоеНазначение, КонтролироватьНалогообложение, Дата, МассивСделок, Менеджер, Подразделение, МенеджерВременныхТаблиц) Экспорт	
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Настройка.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность) КАК НалоговоеНазначение 
	|	
	|ПОМЕСТИТЬ Налогообложение
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(
	|		&Дата, &ИспользоватьПередачиТоваровМеждуОрганизациями) КАК Настройка
	|	ГДЕ НЕ Настройка.ПлательщикНДС
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|
	|// Собственные виды запасов
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов,
	|	ВидыЗапасов.Ссылка КАК ВидЗапасовПродавца,
	|
	|	ВидыЗапасов.Предназначение КАК Предназначение,
	|	ВидыЗапасов.Сделка КАК Сделка,
	|	ВидыЗапасов.Менеджер КАК Менеджер,
	|	ВидыЗапасов.Подразделение КАК Подразделение,
	|	ВидыЗапасов.Назначение КАК Назначение,
	|
	|	ВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВидыЗапасов.НалоговоеНазначение КАК НалоговоеНазначение
	|
	|ПОМЕСТИТЬ ВозможныеВидыЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	Не ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И ВидыЗапасов.Организация = &Организация
	|	И Не ВидыЗапасов.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Виды запасов интеркампани
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов,
	|	ЕСТЬNULL(ВидыЗапасовПродавца.Ссылка, Неопределено) КАК ВидЗапасовПродавца,
	|
	|	ВидыЗапасов.Предназначение КАК Предназначение,
	|	ВидыЗапасов.Сделка КАК Сделка,
	|	ВидыЗапасов.Менеджер КАК Менеджер,
	|	ВидыЗапасов.Подразделение КАК Подразделение,
	|	ВидыЗапасов.Назначение КАК Назначение,
	|	
	|	ВЫБОР КОГДА Настройка.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.Продажа) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	КОГДА Настройка.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ТипЗапасов,
	|	
	|	ВЫБОР КОГДА Настройка.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию) ТОГДА
	|		ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			ВидыЗапасов.НалоговоеНазначение 
	|		ИНАЧЕ
	|			ЕСТЬNULL(Налогообложение.НалоговоеНазначение, ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая))
	|		КОНЕЦ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК НалоговоеНазначение 
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|	ПО
	|		ВидыЗапасов.Организация = Настройка.ОрганизацияВладелец
	|		И ВидыЗапасов.ТипЗапасов = Настройка.ТипЗапасов
	|		И Настройка.СпособПередачиТоваров <> ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.НеПередается)
	|		И Настройка.ОрганизацияПродавец = &Организация
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Налогообложение КАК Налогообложение
	|	ПО
	|		Настройка.ОрганизацияВладелец = Налогообложение.Организация
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК ВидыЗапасовПродавца
	|	ПО
	|		ВидыЗапасов.Ссылка = ВидыЗапасовПродавца.ВидЗапасовВладельца
	|		И Настройка.ОрганизацияПродавец = ВидыЗапасовПродавца.Организация
	|		И Настройка.СпособПередачиТоваров = ВидыЗапасовПродавца.СпособПередачиТоваров
	|		И Настройка.Валюта = ВидыЗапасовПродавца.Валюта
	|		И ВидыЗапасовПродавца.НалоговоеНазначение = &НалоговоеНазначениеДеятельность
	|ГДЕ
	|	&ИспользоватьПередачиТоваровМеждуОрганизациями
	|	И Не ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И ВидыЗапасов.Организация <> &Организация
	|	И Не ВидыЗапасов.ПометкаУдаления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Предназначение
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ // Собственные товары
	|	ВозможныеВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВозможныеВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца,
	|
	|	ВозможныеВидыЗапасов.Предназначение КАК Предназначение,
	|	ВозможныеВидыЗапасов.Сделка КАК Сделка,
	|	ВозможныеВидыЗапасов.Менеджер КАК Менеджер,
	|	ВозможныеВидыЗапасов.Подразделение КАК Подразделение,
	|	ВозможныеВидыЗапасов.Назначение КАК Назначение
	|
	|ПОМЕСТИТЬ ВидыЗапасов
	|ИЗ
	|	ВозможныеВидыЗапасов КАК ВозможныеВидыЗапасов
	|ГДЕ
	|	ВозможныеВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И Не &ТолькоКомиссионныйТовар
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Комиссионные товары
	|	ВозможныеВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВозможныеВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца,
	|
	|	ВозможныеВидыЗапасов.Предназначение КАК Предназначение,
	|	ВозможныеВидыЗапасов.Сделка КАК Сделка,
	|	ВозможныеВидыЗапасов.Менеджер КАК Менеджер,
	|	ВозможныеВидыЗапасов.Подразделение КАК Подразделение,
	|	ВозможныеВидыЗапасов.Назначение КАК Назначение
	|ИЗ
	|	ВозможныеВидыЗапасов КАК ВозможныеВидыЗапасов
	|ГДЕ
	|	ВозможныеВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И (&НалоговоеНазначение = Неопределено
	|		ИЛИ ВозможныеВидыЗапасов.НалоговоеНазначение = &НалоговоеНазначение
	|		)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|
	|// Не обособленные виды запасов
	|ВЫБРАТЬ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|
	|ПОМЕСТИТЬ ДоступныеВидыЗапасов
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначениеНеОграничено)
	|	ИЛИ ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обособленные виды запасов по сделке
	|ВЫБРАТЬ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляСделки)
	|	И ВидыЗапасов.Сделка В (&МассивСделок)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обособленные виды запасов по менеджеру
	|ВЫБРАТЬ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляМенеджера)
	|	И ВидыЗапасов.Менеджер = &Менеджер
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обособленные виды запасов по подразделению
	|ВЫБРАТЬ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляПодразделения)
	|	И ВидыЗапасов.Подразделение = &Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обособленные виды запасов по заказам
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляЗаказа)
	|	И ВидыЗапасов.Назначение В (
	|		ВЫБРАТЬ
	|			ТаблицаТоваров.Назначение
	|		ИЗ
	|			ТаблицаТоваров КАК ТаблицаТоваров
	|	)
	|");
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.УстановитьПараметр("МассивСделок", МассивСделок);
	Запрос.УстановитьПараметр("Менеджер", Менеджер);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("ИспользоватьПередачиТоваровМеждуОрганизациями", ПолучитьФункциональнуюОпцию("ИспользоватьПередачиТоваровМеждуОрганизациями"));
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если Не КонтролироватьНалогообложение Тогда
		Запрос.УстановитьПараметр("НалоговоеНазначение", Неопределено);
		Запрос.УстановитьПараметр("ТолькоКомиссионныйТовар", Ложь);
	Иначе
		НалоговоеНазначениеОрганизации = Справочники.Организации.НалоговоеНазначениеНДС(Организация, Дата);
		Запрос.УстановитьПараметр("НалоговоеНазначение", НалоговоеНазначение);
		Запрос.УстановитьПараметр("ТолькоКомиссионныйТовар", (НалоговоеНазначениеОрганизации <> НалоговоеНазначение));
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьРаздельныйУчетПоНалогообложению") Тогда
		Запрос.УстановитьПараметр("НалоговоеНазначениеДеятельность", НалоговоеНазначение);
	Иначе
		Запрос.УстановитьПараметр("НалоговоеНазначениеДеятельность", Справочники.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка());
	КонецЕсли; 
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Процедура формирует временную таблицу доступных видов запасов.
//
// Параметры:
//	Организация - СправочникСсылка.Организации - Организация документа
//	Сделки - Массив элементов СправочникСсылка.Сделка или одна ссылка СправочникСсылка.Сделка - Сделка/сделки документа
//	Менеджер - СправочникСсылка.Пользователи - Менеджер документа
//	Подразделение - СправочникСсылка.СтруктураПредприятия - Подразделение документа
//	МенеджерВременныхТаблиц - Менеджер временных таблиц
//
Процедура ВидыЗапасовНеОбособленныеИОбособленныеБезИнтеркомпани(Организация, Сделки, Менеджер, Подразделение, МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|// Собственные виды запасов
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов,
	|	ВидыЗапасов.Ссылка КАК ВидЗапасовПродавца,
	|	ВидыЗапасов.Предназначение КАК Предназначение,
	|	ВидыЗапасов.Сделка КАК Сделка,
	|	ВидыЗапасов.Менеджер КАК Менеджер,
	|	ВидыЗапасов.Подразделение КАК Подразделение,
	|	ВидыЗапасов.Назначение КАК Назначение
	|
	|ПОМЕСТИТЬ ВидыЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	Не ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И ВидыЗапасов.Организация = &Организация
	|	И Не ВидыЗапасов.ПометкаУдаления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Предназначение
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|
	|// Не обособленные виды запасов
	|ВЫБРАТЬ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|
	|ПОМЕСТИТЬ ДоступныеВидыЗапасов
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначениеНеОграничено)
	|	ИЛИ ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обособленные виды запасов по сделке
	|ВЫБРАТЬ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляСделки)
	|	И ВидыЗапасов.Сделка В (&Сделки)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обособленные виды запасов по менеджеру
	|ВЫБРАТЬ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляМенеджера)
	|	И ВидыЗапасов.Менеджер = &Менеджер
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обособленные виды запасов по подразделению
	|ВЫБРАТЬ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляПодразделения)
	|	И ВидыЗапасов.Подразделение = &Подразделение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Обособленные виды запасов по заказам
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасовПродавца КАК ВидЗапасовПродавца
	|ИЗ
	|	ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляЗаказа)
	|	И ВидыЗапасов.Назначение В (
	|		ВЫБРАТЬ
	|			ТаблицаТоваров.Назначение
	|		ИЗ
	|			ТаблицаТоваров КАК ТаблицаТоваров
	|	)
	|");
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Сделки", ОбщегоНазначенияУТКлиентСервер.Массив(Сделки));
	Запрос.УстановитьПараметр("Менеджер", Менеджер);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Процедура формирует временную таблицу доступных видов запасов.
//
// Параметры:
//	Организация - СправочникСсылка.Организации - Организация документа
//	Сделка - СправочникСсылка.Сделка - Сделка документа
//	Менеджер - СправочникСсылка.Пользователи - Менеджер документа
//	Подразделение - СправочникСсылка.СтруктураПредприятия - Подразделение документа
//	МенеджерВременныхТаблиц - Менеджер временных таблиц
//
Процедура ВидыЗапасовЛюбыеБезИнтеркомпани(Организация, МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|// Собственные виды запасов
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов,
	|	ВидыЗапасов.Ссылка КАК ВидЗапасовПродавца
	|
	|ПОМЕСТИТЬ ДоступныеВидыЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	Не ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И ВидыЗапасов.Организация = &Организация
	|	И ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И Не ВидыЗапасов.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Комиссионные виды запасов
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов,
	|	ВидыЗапасов.Ссылка КАК ВидЗапасовПродавца
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	Не ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И ВидыЗапасов.Организация = &Организация
	|	И ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И ВидыЗапасов.Комитент ССЫЛКА Справочник.Партнеры
	|	И Не ВидыЗапасов.ПометкаУдаления
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|");
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры // ВидыЗапасовЛюбыеБезИнтеркомпани()

// Функция формирует таблицу ошибок заполнения видов запасов.
//
Функция ТаблицаОшибокЗаполненияВидовЗапасов() Экспорт
	
	ТаблицаОшибок = Новый ТаблицаЗначений;
	ТаблицаОшибок.Колонки.Добавить("Номенклатура");
	ТаблицаОшибок.Колонки.Добавить("Характеристика");
	ТаблицаОшибок.Колонки.Добавить("Серия");
	ТаблицаОшибок.Колонки.Добавить("Склад");
	ТаблицаОшибок.Колонки.Добавить("Количество");
	ТаблицаОшибок.Колонки.Добавить("Сумма");
	ТаблицаОшибок.Колонки.Добавить("ЕдиницаИзмерения");
	ТаблицаОшибок.Колонки.Добавить("Сделка");
	ТаблицаОшибок.Колонки.Добавить("НеУказанНомерГТД");

	Возврат ТаблицаОшибок;
	
КонецФункции 

// Функция определяет аналитику обособленного учета документа.
//
// Параметры:
//	МенеджерВременныхТаблиц - Менеджер временных таблиц
//
// Возвращаемое значение:
//	Структура - данные аналитики обособленного учета
//
Функция АналитикаОбособленноУчетаДокумента(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА ДанныеДокумента.Сделка <> ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) ТОГДА
	|		ДанныеДокумента.Сделка
	|	КОГДА ДанныеДокумента.Менеджер <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка) ТОГДА
	|		ДанныеДокумента.Менеджер
	|	КОГДА ДанныеДокумента.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) ТОГДА
	|		ДанныеДокумента.Подразделение
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК АналитикаОбособленногоУчета,
	|
	|	(ВЫБОР
	|		КОГДА ДанныеДокумента.Сделка <> ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) ТОГДА &ДляСделки
	|		КОГДА ДанныеДокумента.Менеджер <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка) ТОГДА &ДляМенеджера
	|		КОГДА ДанныеДокумента.Подразделение <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) ТОГДА &ДляПодразделения
	|		ИНАЧЕ """" КОНЕЦ) КАК СтрокаАналитикиОбособленногоУчета
	|ИЗ
	|	ТаблицаДанныхДокумента КАК ДанныеДокумента
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДляСделки", НСтр("ru='для сделки';uk='для угоди'"));
	Запрос.УстановитьПараметр("ДляМенеджера", НСтр("ru='для менеджера';uk='для менеджера'"));
	Запрос.УстановитьПараметр("ДляПодразделения", НСтр("ru='для подразделения';uk='для підрозділу'"));
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Структура = Новый Структура;
	Структура.Вставить("СтрокаАналитики", Выборка.СтрокаАналитикиОбособленногоУчета);
	Структура.Вставить("Аналитика", Выборка.АналитикаОбособленногоУчета);

	Возврат Структура;
	
КонецФункции // АналитикаОбособленноУчетаДокумента()

// Функция проверяет изменение табличной части "Товары" относительно табличной части "Виды запасов" документа.
//
// Параметры:
//	МенеджерВременныхТаблиц - Менеджер временных таблиц
//
// Возвращаемое значение:
//	Булево - Истина - товары изменены
//           Ложь - товары не изменены
//
Функция ПроверитьИзменениеТоваровПоКоличеству(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ИЗ (
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаТоваров.Количество КАК Количество
	|	ИЗ
	|		ТаблицаТоваров КАК ТаблицаТоваров
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		-ТаблицаВидыЗапасов.Количество КАК Количество
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	) КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаТоваров.Количество) <> 0
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции

// Функция проверяет изменение табличной части "Товары" относительно табличной части "Виды запасов" документа.
//
// Параметры:
//	МенеджерВременныхТаблиц - Менеджер временных таблиц
//
// Возвращаемое значение:
//	Булево - Истина - товары изменены
//           Ложь - товары не изменены
//
Функция ПроверитьИзменениеТоваровПоКоличествуИСумме(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС
	|ИЗ (
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|		ТаблицаТоваров.Количество КАК Количество,
	|		ТаблицаТоваров.СуммаСНДС КАК СуммаСНДС,
	|		ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|		ТаблицаТоваров.СуммаВознаграждения КАК СуммаВознаграждения,
	|		ТаблицаТоваров.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения
	|	ИЗ
	|		ТаблицаТоваров КАК ТаблицаТоваров
	|	ГДЕ
	|		ТаблицаТоваров.Номенклатура.ТипНоменклатуры  В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|		-ТаблицаВидыЗапасов.Количество КАК Количество,
	|		-ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаСНДС,
	|		-ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС,
	|		-ТаблицаВидыЗапасов.СуммаВознаграждения КАК СуммаВознаграждения,
	|		-ТаблицаВидыЗапасов.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|	) КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.СтавкаНДС
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаТоваров.Количество) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаСНДС) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаНДС) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаВознаграждения) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаНДСВознаграждения) <> 0
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции

// Процедура устанавливает исключительную блокировку на остстки по регистру "Товары организаций".
//
Процедура УстановитьБлокировкуОстатковТоваровОрганизаций(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаДанныхДокумента.Организация КАК Организация
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|	ПО
	|		Истина
	|ГДЕ
	|	ТаблицаТоваров.Номенклатура.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), 
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|	)
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	РезультатЗапроса = Запрос.Выполнить();
	
	Блокировка = Новый БлокировкаДанных;
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыОрганизаций");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = РезультатЗапроса;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("АналитикаУчетаНоменклатуры", "АналитикаУчетаНоменклатуры");
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьПередачиТоваровМеждуОрганизациями") Тогда
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Организация", "Организация");
	КонецЕсли;
	
	Блокировка.Заблокировать();
	
КонецПроцедуры

// Процедура формирует таблицу остатков товаров организаций.
//
// Параметры:
//	ДокументСсылка - Текущий документ
//	Организация - СправочникСсылка.Организации - Организация документа
//	Дата - Дата документа
//	ДополнительныеСвойства - Структура - Дополнительные свойства документа
//	МенеджерВременныхТаблиц - Менеджер временных таблиц
//
Процедура ТаблицаОстатковТоваровОрганизаций(ДокументСсылка, Организация, Дата, ДополнительныеСвойства, МенеджерВременныхТаблиц, ПоВсемВидамЗапасов = Ложь) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ // Движения документа
	|	МАКСИМУМ(Товары.Период) КАК Период,
	|	Товары.Организация,
	|	Товары.АналитикаУчетаНоменклатуры,
	|	Товары.ВидЗапасов,
	|	Товары.НомерГТД,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ДвиженияДокумента
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК Товары
	|	ЛЕВОЕ СОЕДИНЕНИЕ ДоступныеВидыЗапасов КАК ДоступныеВидыЗапасов
	|		ПО Товары.ВидЗапасов = ДоступныеВидыЗапасов.ВидЗапасов
	|ГДЕ
	|	Товары.Регистратор = &Ссылка
	|	И Товары.Активность
	|	И Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И (Товары.АналитикаУчетаНоменклатуры) В (
	|		ВЫБРАТЬ
	|			ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|		ИЗ
	|			ТаблицаТоваров КАК ТаблицаТоваров
	|		)
	|	И ((Не &ПоВсемВидамЗапасов И Не ДоступныеВидыЗапасов.ВидЗапасов ЕСТЬ NULL) ИЛИ &ПоВсемВидамЗапасов)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Организация,
	|	Товары.АналитикаУчетаНоменклатуры,
	|	Товары.ВидЗапасов,
	|	Товары.НомерГТД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Товары.Организация,
	|	Товары.АналитикаУчетаНоменклатуры,
	|	Товары.ВидЗапасов,
	|	Товары.НомерГТД
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ // Остатки товаров организации на конец месяца
	|	Остатки.Организация,
	|	Остатки.АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	Остатки.ВидЗапасов,
	|	Остатки.НомерГТД,
	|	Остатки.КоличествоОстаток КАК КоличествоОстаток
	|ПОМЕСТИТЬ ОстаткиНаКонецМесяца
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций.Остатки(&ГраницаМесяца,
	|		(АналитикаУчетаНоменклатуры) В (
	|			ВЫБРАТЬ
	|				ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ТаблицаТоваров КАК ТаблицаТоваров
	|			)
	|		И (
	|			ВидЗапасов В (
	|				ВЫБРАТЬ
	|					ДоступныеВидыЗапасов.ВидЗапасов
	|				ИЗ
	|					ДоступныеВидыЗапасов КАК ДоступныеВидыЗапасов
	|				)
	|			ИЛИ &ПоВсемВидамЗапасов
	|			)
	|		И Организация = ВидЗапасов.Организация
	|	) КАК Остатки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ // Остатки товаров организации на конец дня
	|	Остатки.Организация,
	|	Остатки.АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	Остатки.ВидЗапасов,
	|	Остатки.НомерГТД,
	|	Остатки.КоличествоОстаток КАК КоличествоОстаток
	|ПОМЕСТИТЬ ОстаткиНаКонецДня
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций.Остатки(&ГраницаДня,
	|		(АналитикаУчетаНоменклатуры) В (
	|			ВЫБРАТЬ
	|				ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ТаблицаТоваров КАК ТаблицаТоваров
	|			)
	|		И (
	|			ВидЗапасов В (
	|				ВЫБРАТЬ
	|					ДоступныеВидыЗапасов.ВидЗапасов
	|				ИЗ
	|					ДоступныеВидыЗапасов КАК ДоступныеВидыЗапасов
	|				)
	|			ИЛИ &ПоВсемВидамЗапасов
	|			)
	|		И Организация = ВидЗапасов.Организация
	|	) КАК Остатки
	|ГДЕ
	|	&КонтролироватьНаКонецДня
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК НомерГТД,
	|	0 КАК КоличествоОстаток
	|ГДЕ
	|	НЕ &КонтролироватьНаКонецДня
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ // Остатки товаров организации на дату последнего движения
	|	Остатки.Организация,
	|	Остатки.АналитикаУчетаНоменклатуры,
	|	Остатки.ВидЗапасов,
	|	Остатки.НомерГТД,
	|	Остатки.КоличествоОстаток КАК КоличествоОстаток
	|ПОМЕСТИТЬ ОстаткиНаПоследнееДвижение
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций.Остатки(,
	|		Не &ИспользоватьОстаткиНаКонецМесяца
	|		И (АналитикаУчетаНоменклатуры) В (
	|			ВЫБРАТЬ
	|				ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ТаблицаТоваров КАК ТаблицаТоваров
	|			)
	|		И (
	|			ВидЗапасов В (
	|				ВЫБРАТЬ
	|					ДоступныеВидыЗапасов.ВидЗапасов
	|				ИЗ
	|					ДоступныеВидыЗапасов КАК ДоступныеВидыЗапасов
	|				)
	|			ИЛИ &ПоВсемВидамЗапасов
	|			)
	|		И Организация = ВидЗапасов.Организация
	|	) КАК Остатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Остатки.Организация,
	|	Остатки.АналитикаУчетаНоменклатуры,
	|	Остатки.ВидЗапасов,
	|	Остатки.НомерГТД
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.Организация КАК Организация,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Серия КАК Серия,
	|	Аналитика.Склад КАК Склад,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ВЫБОР КОГДА ТоварыОрганизаций.Организация <> &Организация
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТоварыОрганизаций.ВидЗапасов
	|	КОНЕЦ КАК ВидЗапасов,
	|	ТоварыОрганизаций.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	Неопределено КАК ВидЗапасовПолучателя,
	|	Неопределено КАК ВидЗапасовОтгрузки,
	|	ВЫБОР КОГДА ТоварыОрганизаций.Организация <> &Организация
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК РеализацияЗапасовДругойОрганизации,
	|	ТоварыОрганизаций.ВидЗапасовВладельца.Назначение КАК Назначение,
    |   СпрВидыЗапасовВладельца.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	МАКСИМУМ(
	|		ВЫБОР КОГДА ТоварыОрганизаций.ДатаПоступления > &КонецМесяца
	|			ТОГДА &НачалоМесяца
	|			ИНАЧЕ ТоварыОрганизаций.ДатаПоступления
	|		КОНЕЦ
	|	) КАК ДатаПоступления,
	|	СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстаток,
	|	СУММА(ТоварыОрганизаций.НаДатуКонтроля) КАК НаДатуКонтроля,
	|	СУММА(ТоварыОрганизаций.НаДатуАктуальности) КАК НаДатуАктуальности,
	|	0 КАК СуммаОстаток,
	|
	|	ВЫБОР КОГДА ТоварыОрганизаций.ВидЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляСделки) ТОГДА
	|		ТоварыОрганизаций.ВидЗапасов.Сделка
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)
	|	КОНЕЦ КАК Сделка
	|
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ (
	|	ВЫБРАТЬ // Движения документа
	|		ТоварыОрганизаций.Организация КАК Организация,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ЕСТЬNULL(ДоступныеВидыЗапасов.ВидЗапасовПродавца, ТоварыОрганизаций.ВидЗапасов) КАК ВидЗапасов,
	|		ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасовВладельца,
	|		ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|		ТоварыОрганизаций.Количество КАК Количество,
	|		0 КАК НаДатуКонтроля,
	|		0 КАК НаДатуАктуальности,
	|
	|		ДатыПоступления.ДатаПоступления КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ДатыПоступления
	|		ПО
	|			ТоварыОрганизаций.ВидЗапасов = ДатыПоступления.ВидЗапасов
	|			И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура = ДатыПоступления.Номенклатура
	|			И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика = ДатыПоступления.Характеристика
	|			И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия = ДатыПоступления.Серия
	|			И ТоварыОрганизаций.НомерГТД = ДатыПоступления.НомерГТД
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНаКонецМесяца КАК НаКонецМесяца
	|			ПО ТоварыОрганизаций.Организация = НаКонецМесяца.Организация
	|			И ТоварыОрганизаций.АналитикаУчетаНоменклатуры = НаКонецМесяца.АналитикаУчетаНоменклатуры
	|			И ТоварыОрганизаций.ВидЗапасов = НаКонецМесяца.ВидЗапасов
	|			И ТоварыОрганизаций.НомерГТД = НаКонецМесяца.НомерГТД
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ДоступныеВидыЗапасов КАК ДоступныеВидыЗапасов
	|		ПО
	|			ТоварыОрганизаций.ВидЗапасов = ДоступныеВидыЗапасов.ВидЗапасов
	|	ГДЕ
	|		ТоварыОрганизаций.Период <= &ДатаДокумента
	|		И ТоварыОрганизаций.Регистратор = &Ссылка
	|		И НаКонецМесяца.ВидЗапасов ЕСТЬ NULL
	|		И ТоварыОрганизаций.Активность
	|		И ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И (ТоварыОрганизаций.АналитикаУчетаНоменклатуры) В (
	|			ВЫБРАТЬ
	|				ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ТаблицаТоваров КАК ТаблицаТоваров
	|			)
	|		И ((Не &ПоВсемВидамЗапасов И Не ДоступныеВидыЗапасов.ВидЗапасов ЕСТЬ NULL) ИЛИ &ПоВсемВидамЗапасов)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Остатки товаров организации
	|		НаКонецМесяца.Организация КАК Организация,
	|		НаКонецМесяца.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ЕСТЬNULL(ДоступныеВидыЗапасов.ВидЗапасовПродавца, НаКонецМесяца.ВидЗапасов) КАК ВидЗапасов,
	|		НаКонецМесяца.ВидЗапасов КАК ВидЗапасовВладельца,
	|		НаКонецМесяца.НомерГТД КАК НомерГТД,
	|
	|		ВЫБОР 
	|			КОГДА &ИспользоватьОстаткиНаКонецМесяца 
	|				ТОГДА НаКонецМесяца.КоличествоОстаток
	|			КОГДА НаКонецМесяца.КоличествоОстаток <= ЕСТЬNULL(НаПоследнееДвижение.КоличествоОстаток, 0)
	|					И (НаКонецМесяца.КоличествоОстаток <= ЕСТЬNULL(НаКонецДня.КоличествоОстаток, 0) ИЛИ НЕ &КонтролироватьНаКонецДня)
	|			ТОГДА
	|				НаКонецМесяца.КоличествоОстаток + ЕСТЬNULL(Движения.Количество, 0)
	|			КОГДА ЕСТЬNULL(НаПоследнееДвижение.КоличествоОстаток, 0) <= НаКонецМесяца.КоличествоОстаток
	|					И (ЕСТЬNULL(НаПоследнееДвижение.КоличествоОстаток, 0) <= ЕСТЬNULL(НаКонецДня.КоличествоОстаток, 0) ИЛИ НЕ &КонтролироватьНаКонецДня)
	|			ТОГДА
	|				ЕСТЬNULL(НаПоследнееДвижение.КоличествоОстаток, 0) + ЕСТЬNULL(Движения.Количество, 0)
	|			КОГДА ЕСТЬNULL(НаКонецДня.КоличествоОстаток, 0) <= ЕСТЬNULL(НаПоследнееДвижение.КоличествоОстаток, 0)
	|					И ЕСТЬNULL(НаКонецДня.КоличествоОстаток, 0) <= НаКонецМесяца.КоличествоОстаток
	|					И &КонтролироватьНаКонецДня
	|			ТОГДА
	|				ЕСТЬNULL(НаКонецДня.КоличествоОстаток, 0) + ЕСТЬNULL(Движения.Количество, 0)
	|		КОНЕЦ КАК Количество,
	|
	|		НаКонецМесяца.КоличествоОстаток КАК НаДатуКонтроля,
	|		0 КАК НаДатуАктуальности,
	|		ДатыПоступления.ДатаПоступления КАК ДатаПоступления
	|	ИЗ
	|		ОстаткиНаКонецМесяца КАК НаКонецМесяца
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДвиженияДокумента КАК Движения
	|			ПО Движения.Организация = НаКонецМесяца.Организация
	|			И Движения.АналитикаУчетаНоменклатуры = НаКонецМесяца.АналитикаУчетаНоменклатуры
	|			И Движения.ВидЗапасов = НаКонецМесяца.ВидЗапасов
	|			И Движения.НомерГТД = НаКонецМесяца.НомерГТД
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНаПоследнееДвижение КАК НаПоследнееДвижение
	|			ПО НаКонецМесяца.Организация = НаПоследнееДвижение.Организация
	|			И НаКонецМесяца.АналитикаУчетаНоменклатуры = НаПоследнееДвижение.АналитикаУчетаНоменклатуры
	|			И НаКонецМесяца.ВидЗапасов = НаПоследнееДвижение.ВидЗапасов
	|			И НаКонецМесяца.НомерГТД = НаПоследнееДвижение.НомерГТД
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНаКонецДня КАК НаКонецДня
	|			ПО НаКонецМесяца.Организация = НаКонецДня.Организация
	|			И НаКонецМесяца.АналитикаУчетаНоменклатуры = НаКонецДня.АналитикаУчетаНоменклатуры
	|			И НаКонецМесяца.ВидЗапасов = НаКонецДня.ВидЗапасов
	|			И НаКонецМесяца.НомерГТД = НаКонецДня.НомерГТД
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ДатыПоступления
	|			ПО НаКонецМесяца.ВидЗапасов = ДатыПоступления.ВидЗапасов
	|			И НаКонецМесяца.АналитикаУчетаНоменклатуры.Номенклатура = ДатыПоступления.Номенклатура
	|			И НаКонецМесяца.АналитикаУчетаНоменклатуры.Характеристика = ДатыПоступления.Характеристика
	|			И НаКонецМесяца.АналитикаУчетаНоменклатуры.Серия = ДатыПоступления.Серия
	|			И НаКонецМесяца.НомерГТД = ДатыПоступления.НомерГТД
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДоступныеВидыЗапасов КАК ДоступныеВидыЗапасов
	|			ПО НаКонецМесяца.ВидЗапасов = ДоступныеВидыЗапасов.ВидЗапасов
	|	ГДЕ
	|		((Не &ПоВсемВидамЗапасов И Не ДоступныеВидыЗапасов.ВидЗапасов ЕСТЬ NULL) ИЛИ &ПоВсемВидамЗапасов)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Остатки товаров организации на дату актуальности
	|		ТоварыОрганизаций.Организация КАК Организация,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ЕСТЬNULL(ДоступныеВидыЗапасов.ВидЗапасовПродавца, ТоварыОрганизаций.ВидЗапасов) КАК ВидЗапасов,
	|		ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасовВладельца,
	|		ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|
	|		0 КАК Количество,
	|		0 КАК НаДатуКонтроля,
	|		ТоварыОрганизаций.КоличествоОстаток КАК НаДатуАктуальности,
	|		ДатыПоступления.ДатаПоступления КАК ДатаПоступления
	|	ИЗ
	|		ОстаткиНаПоследнееДвижение КАК ТоварыОрганизаций
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ДатыПоступления
	|		ПО
	|			ТоварыОрганизаций.ВидЗапасов = ДатыПоступления.ВидЗапасов
	|			И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура = ДатыПоступления.Номенклатура
	|			И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика = ДатыПоступления.Характеристика
	|			И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия = ДатыПоступления.Серия
	|			И ТоварыОрганизаций.НомерГТД = ДатыПоступления.НомерГТД
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			ДоступныеВидыЗапасов КАК ДоступныеВидыЗапасов
	|		ПО
	|			ТоварыОрганизаций.ВидЗапасов = ДоступныеВидыЗапасов.ВидЗапасов
	|	ГДЕ
	|		((Не &ПоВсемВидамЗапасов И Не ДоступныеВидыЗапасов.ВидЗапасов ЕСТЬ NULL) ИЛИ &ПоВсемВидамЗапасов)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Поступление товаров организаций, отраженные текущим документом.
	|		ТоварыОрганизаций.Организация КАК Организация,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасовВладельца,
	|		ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|		(-ТоварыОрганизаций.Количество) КАК Количество,
	|		0 КАК НаДатуКонтроля,
	|		0 КАК НаДатуАктуальности,
	|
	|		ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|
	|	ГДЕ
	|		ТоварыОрганизаций.Регистратор = &Ссылка
	|		И ТоварыОрганизаций.Активность
	|		И ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И (ТоварыОрганизаций.АналитикаУчетаНоменклатуры) В (
	|			ВЫБРАТЬ
	|				ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ТаблицаТоваров КАК ТаблицаТоваров
	|			)
	|	) КАК ТоварыОрганизаций
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
    |
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
    |       Справочник.ВидыЗапасов КАК СпрВидыЗапасовВладельца
	|	ПО 
    |       СпрВидыЗапасовВладельца.Ссылка = ТоварыОрганизаций.ВидЗапасовВладельца
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрганизаций.Организация,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	Аналитика.Серия,
	|	Аналитика.Склад,
	|	ВЫБОР КОГДА ТоварыОрганизаций.Организация <> &Организация
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТоварыОрганизаций.ВидЗапасов
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ТоварыОрганизаций.Организация <> &Организация
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ТоварыОрганизаций.ВидЗапасовВладельца,
    |   СпрВидыЗапасовВладельца.НалоговоеНазначение,
	|	ТоварыОрганизаций.НомерГТД,
	|	ВЫБОР КОГДА ТоварыОрганизаций.ВидЗапасов.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляСделки) ТОГДА
	|		ТоварыОрганизаций.ВидЗапасов.Сделка
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|");
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПоВсемВидамЗапасов", ПоВсемВидамЗапасов);
    Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("КонецДня", КонецДня(Дата));
	Запрос.УстановитьПараметр("ГраницаМесяца", Новый Граница(КонецМесяца(Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ГраницаДня", Новый Граница(КонецДня(Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
	Запрос.УстановитьПараметр("КонтролироватьНаКонецДня", Константы.ВидКонтроляТоваровОрганизаций.Получить() = Перечисления.ВидыКонтроляТоваровОрганизаций.КонецДняКонецМесяцаИДатаПоследнегоДвижения);
	
	ИгнорироватьОперативныеОстатки = ДополнительныеСвойства.Свойство("ИгнорироватьОперативныеОстатки");
	Запрос.УстановитьПараметр("ИспользоватьОстаткиНаКонецМесяца", ?(ИгнорироватьОперативныеОстатки, Истина, Ложь));
	Запрос.УстановитьПараметр("ПерезаполнениеВидовЗапасов", ДополнительныеСвойства.Свойство("ПерезаполнитьВидыЗапасов"));
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	
КонецПроцедуры

// Процедура формирует таблицу остатков товаров, переданных на комиссию.
//
Процедура ТаблицаОстатковТоваровПереданныхНаКомиссию(ДокументСсылка, Организация, Партнер, Соглашение, Дата, ДополнительныеСвойства, МенеджерВременныхТаблиц, Склад = Неопределено) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.ДокументРеализации	
	|ПОМЕСТИТЬ
	|	Основания
	|ИЗ
	|	ТаблицаТоваров КАК Товары
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Движения.АналитикаУчетаНоменклатуры,
	|	Движения.ВидЗапасов,
	|	Движения.НомерГТД,
	|	СУММА(Движения.Количество) КАК Количество
	|ПОМЕСТИТЬ
	|	ПереданныеТовары
	|ИЗ
	|	РегистрНакопления.ТоварыПереданныеНаКомиссию КАК Движения
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Основания КАК Основания
	|		ПО Основания.ДокументРеализации = Движения.Регистратор
	|СГРУППИРОВАТЬ ПО
	|	Движения.АналитикаУчетаНоменклатуры,
	|	Движения.ВидЗапасов,
	|	Движения.НомерГТД
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ // Остатки товаров организации на конец месяца
	|	Остатки.Организация КАК Организация,
	|	Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Остатки.Соглашение КАК Соглашение,
	|	Остатки.ВидЗапасов КАК ВидЗапасов,
	|	Остатки.НомерГТД КАК НомерГТД,
	|	Остатки.КоличествоОстаток КАК КоличествоОстаток
	|
	|ПОМЕСТИТЬ НаКонецМесяца
	|ИЗ
	|	РегистрНакопления.ТоварыПереданныеНаКомиссию.Остатки(&Дата,
	|		Организация = &Организация
	|		И Соглашение = &Соглашение
	|		И АналитикаУчетаНоменклатуры В (
	|			ВЫБРАТЬ
	|				Аналитика.КлючАналитики
	|			ИЗ
	|				РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваров КАК Товары
	|				ПО Товары.Номенклатура = Аналитика.Номенклатура
	|				И Товары.Характеристика = Аналитика.Характеристика
	|				И Аналитика.Склад = &Партнер
	|				И Товары.ДокументРеализации = НЕОПРЕДЕЛЕНО
	|				)
	|	) КАК Остатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	Остатки.Организация,
	|	Остатки.АналитикаУчетаНоменклатуры,
	|	Остатки.Соглашение,
	|	Остатки.ВидЗапасов,
	|	Остатки.НомерГТД,
	|	Остатки.КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ТоварыПереданныеНаКомиссию.Остатки(&Дата,
	|		Организация = &Организация
	|		И Соглашение = &Соглашение
	|		И (АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД) В (
	|			ВЫБРАТЬ
	|				АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД
	|			ИЗ
	|				ПереданныеТовары КАК ПереданныеТовары
	|			)
	|	) КАК Остатки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ // Остатки товаров организации на дату актуальности
	|	Остатки.Организация КАК Организация,
	|	Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Остатки.Соглашение КАК Соглашение,
	|	Остатки.ВидЗапасов КАК ВидЗапасов,
	|	Остатки.НомерГТД КАК НомерГТД,
	|	Остатки.КоличествоОстаток КАК КоличествоОстаток
	|
	|ПОМЕСТИТЬ НаДатуАктуальности
	|ИЗ
	|	РегистрНакопления.ТоварыПереданныеНаКомиссию.Остатки(,
	|		Не &ИспользоватьОстаткиНаКонецМесяца
	|		И Организация = &Организация
	|		И Соглашение = &Соглашение
	|		И АналитикаУчетаНоменклатуры В (
	|			ВЫБРАТЬ
	|				Аналитика.КлючАналитики
	|			ИЗ
	|				РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваров КАК Товары
	|				ПО Товары.Номенклатура = Аналитика.Номенклатура
	|				И Товары.Характеристика = Аналитика.Характеристика
	|				И Аналитика.Склад = &Партнер
	|				И Товары.ДокументРеализации = НЕОПРЕДЕЛЕНО
	|				)
	|	) КАК Остатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	Остатки.Организация,
	|	Остатки.АналитикаУчетаНоменклатуры,
	|	Остатки.Соглашение,
	|	Остатки.ВидЗапасов,
	|	Остатки.НомерГТД,
	|	(ВЫБОР
	|		КОГДА ПереданныеТовары.Количество < Остатки.КоличествоОстаток ТОГДА ПереданныеТовары.Количество
	|		ИНАЧЕ Остатки.КоличествоОстаток КОНЕЦ) КАК КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ТоварыПереданныеНаКомиссию.Остатки(,
	|		Не &ИспользоватьОстаткиНаКонецМесяца
	|		И Организация = &Организация
	|		И Соглашение = &Соглашение
	|		И (АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД) В (
	|			ВЫБРАТЬ
	|				АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД
	|			ИЗ
	|				ПереданныеТовары КАК ПереданныеТовары
	|			)
	|	) КАК Остатки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПереданныеТовары КАК ПереданныеТовары
	|		ПО ПереданныеТовары.АналитикаУчетаНоменклатуры = Остатки.АналитикаУчетаНоменклатуры
	|		И ПереданныеТовары.ВидЗапасов = Остатки.ВидЗапасов
	|		И ПереданныеТовары.НомерГТД = Остатки.НомерГТД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	АналитикаУчетаНоменклатуры,
	|	Соглашение,
	|	ВидЗапасов,
	|	НомерГТД
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Серия КАК Серия,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	(ВЫБОР
	|		КОГДА &ЭтоВозврат И Не ТоварыОрганизаций.КВозвратуМеждуОрганизациями
	|	 	 И ТоварыОрганизаций.ВидЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		ИНАЧЕ ТоварыОрганизаций.ВидЗапасов КОНЕЦ) КАК ВидЗапасов,
	|	(ВЫБОР 
	|		КОГДА &ЭтоВозврат И Не ТоварыОрганизаций.КВозвратуМеждуОрганизациями
	|	 	 И ТоварыОрганизаций.ВидЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА ТоварыОрганизаций.ВидЗапасов.ВидЗапасовВладельца
	|		ИНАЧЕ ТоварыОрганизаций.ВидЗапасов КОНЕЦ) КАК ВидЗапасовВладельца,
	|	Неопределено КАК ВидЗапасовПолучателя,
	|	(ВЫБОР КОГДА &ЭтоВозврат ТОГДА ТоварыОрганизаций.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ВидЗапасовОтгрузки,
	|	(ВЫБОР
	|		КОГДА &ЭтоВозврат И ТоварыОрганизаций.КВозвратуМеждуОрганизациями
	|			ТОГДА ТоварыОрганизаций.ВидЗапасов.РеализацияЗапасовДругойОрганизации
	|		ИНАЧЕ ЛОЖЬ КОНЕЦ) КАК РеализацияЗапасовДругойОрганизации,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	(ВЫБОР 
	|		КОГДА &ЭтоВозврат И Не ТоварыОрганизаций.КВозвратуМеждуОрганизациями
	|	 	 И ТоварыОрганизаций.ВидЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА ТоварыОрганизаций.ВидЗапасов.ВидЗапасовВладельца.НалоговоеНазначение
	|		ИНАЧЕ ТоварыОрганизаций.ВидЗапасов.НалоговоеНазначение КОНЕЦ) КАК НалоговоеНазначение,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	ТоварыОрганизаций.Знак,
	|	МАКСИМУМ(ТоварыОрганизаций.ДатаПоступления) КАК ДатаПоступления,
	|	СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстаток,
	|	0 КАК СуммаОстаток
	|
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ (
	|	ВЫБРАТЬ // ВидыЗапасов, списанные документом ""Отчет комиссионера""
	|		ТоварыПереданныеНаКомиссию.Организация КАК Организация,
	|		ТоварыПереданныеНаКомиссию.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыПереданныеНаКомиссию.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыПереданныеНаКомиссию.НомерГТД КАК НомерГТД,
	|		ТоварыПереданныеНаКомиссию.Количество КАК Количество,
	|		0 КАК Знак,
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления,
	|		ЕСТЬNULL(Настройка.ИспользоватьПриВозвратеОтКлиента, Ложь) КАК КВозвратуМеждуОрганизациями
	|	ИЗ
	|		РегистрНакопления.ТоварыПереданныеНаКомиссию КАК ТоварыПереданныеНаКомиссию
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			ТоварыПереданныеНаКомиссию.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|			ПО Настройка.ОрганизацияВладелец = ТоварыПереданныеНаКомиссию.ВидЗапасов.ВидЗапасовВладельца.Организация
	|			И Настройка.ТипЗапасов = ТоварыПереданныеНаКомиссию.ВидЗапасов.ВидЗапасовВладельца.ТипЗапасов
	|			И Настройка.ОрганизацияПродавец = &Организация
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|		ПО
	|			ТоварыПереданныеНаКомиссию.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|			И ТоварыПереданныеНаКомиссию.АналитикаУчетаНоменклатуры = ДатыПередачиТоваровНаКомиссию.АналитикаУчетаНоменклатуры
	|			И ТоварыПереданныеНаКомиссию.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|			И ТоварыПереданныеНаКомиссию.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|			И ТоварыПереданныеНаКомиссию.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|	ГДЕ
	|		ТоварыПереданныеНаКомиссию.Период <= &Дата
	|		И ТоварыПереданныеНаКомиссию.Регистратор = &Ссылка
	|		И ТоварыПереданныеНаКомиссию.Активность
	|		И ТоварыПереданныеНаКомиссию.Организация = &Организация
	|		И Аналитика.Склад = &Партнер
	|		И ТоварыПереданныеНаКомиссию.Соглашение = &Соглашение
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // ВидыЗапасов, переданные и возвращенные между организациями
	|		ТоварыПереданныеНаКомиссию.Организация КАК Организация,
	|		ТоварыПереданныеНаКомиссию.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыПереданныеНаКомиссию.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыПереданныеНаКомиссию.НомерГТД КАК НомерГТД,
	|		(ВЫБОР
	|			КОГДА ТоварыПереданныеНаКомиссию.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -ТоварыПереданныеНаКомиссию.Количество
	|			ИНАЧЕ ТоварыПереданныеНаКомиссию.Количество КОНЕЦ) КАК Количество,
	|		(ВЫБОР
	|			КОГДА ТоварыПереданныеНаКомиссию.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА -1
	|			ИНАЧЕ 1 КОНЕЦ) КАК Знак,
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления,
	|		ЕСТЬNULL(Настройка.ИспользоватьПриВозвратеОтКлиента, Ложь) КАК КВозвратуМеждуОрганизациями
	|	ИЗ
	|		РегистрНакопления.ТоварыПереданныеНаКомиссию КАК ТоварыПереданныеНаКомиссию
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО ТоварыПереданныеНаКомиссию.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|			ПО Настройка.ОрганизацияВладелец = ТоварыПереданныеНаКомиссию.ВидЗапасов.ВидЗапасовВладельца.Организация
	|			И Настройка.ТипЗапасов = ТоварыПереданныеНаКомиссию.ВидЗапасов.ВидЗапасовВладельца.ТипЗапасов
	|			И Настройка.ОрганизацияПродавец = &Организация
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|			ПО ТоварыПереданныеНаКомиссию.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|			И ТоварыПереданныеНаКомиссию.АналитикаУчетаНоменклатуры = ДатыПередачиТоваровНаКомиссию.АналитикаУчетаНоменклатуры
	|			И ТоварыПереданныеНаКомиссию.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|			И ТоварыПереданныеНаКомиссию.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|			И ТоварыПереданныеНаКомиссию.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|	ГДЕ
	|		&ЭтоОтчетПоКомиссии
	|		И ТоварыПереданныеНаКомиссию.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И ТоварыПереданныеНаКомиссию.Регистратор <> &Ссылка
	|		И ТоварыПереданныеНаКомиссию.Активность
	|		И ТоварыПереданныеНаКомиссию.Организация = &Организация
	|		И Аналитика.Склад = &Партнер
	|		И ТоварыПереданныеНаКомиссию.Соглашение = &Соглашение
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // ВидыЗапасов, переданные на комисию
	|		НаКонецМесяца.Организация КАК Организация,
	|		НаКонецМесяца.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		НаКонецМесяца.ВидЗапасов КАК ВидЗапасов,
	|		НаКонецМесяца.НомерГТД КАК НомерГТД,
	|		ВЫБОР КОГДА Не &ИспользоватьОстаткиНаКонецМесяца
	|		 И НаКонецМесяца.КоличествоОстаток >=  ЕСТЬNULL(НаДатуАктуальности.КоличествоОстаток, 0) ТОГДА
	|			ЕСТЬNULL(НаДатуАктуальности.КоличествоОстаток, 0)
	|		ИНАЧЕ
	|			НаКонецМесяца.КоличествоОстаток
	|		КОНЕЦ КАК Количество,
	|		0 КАК Знак,
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления,
	|		ЕСТЬNULL(Настройка.ИспользоватьПриВозвратеОтКлиента, Ложь) КАК КВозвратуМеждуОрганизациями
	|	ИЗ
	|		НаКонецМесяца КАК НаКонецМесяца
	|		ЛЕВОЕ СОЕДИНЕНИЕ НаДатуАктуальности КАК НаДатуАктуальности
	|			ПО НаДатуАктуальности.Организация = НаКонецМесяца.Организация
	|			И НаДатуАктуальности.АналитикаУчетаНоменклатуры = НаКонецМесяца.АналитикаУчетаНоменклатуры
	|			И НаДатуАктуальности.Соглашение = НаКонецМесяца.Соглашение
	|			И НаДатуАктуальности.ВидЗапасов = НаКонецМесяца.ВидЗапасов
	|			И НаДатуАктуальности.НомерГТД = НаКонецМесяца.НомерГТД
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|			ПО Настройка.ОрганизацияВладелец = НаКонецМесяца.ВидЗапасов.ВидЗапасовВладельца.Организация
	|			И Настройка.ТипЗапасов = НаКонецМесяца.ВидЗапасов.ВидЗапасовВладельца.ТипЗапасов
	|			И Настройка.ОрганизацияПродавец = &Организация
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|		ПО
	|			НаКонецМесяца.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|			И НаКонецМесяца.АналитикаУчетаНоменклатуры = ДатыПередачиТоваровНаКомиссию.АналитикаУчетаНоменклатуры
	|			И НаКонецМесяца.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|			И НаКонецМесяца.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|			И НаКонецМесяца.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Возвратная тара, списанная документом
	|		Движения.ВидЗапасов.Организация КАК Организация,
	|		Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|		Движения.ВидЗапасов КАК ВидЗапасов,
	|		Движения.НомерГТД КАК НомерГТД,
	|		Движения.Количество КАК Количество,
	|		0 КАК Знак,
	|		Движения.ДокументПередачи.Дата КАК ДатаПоступления,
	|		ЕСТЬNULL(Настройка.ИспользоватьПриВозвратеОтКлиента, Ложь) КАК КВозвратуМеждуОрганизациями
	|	ИЗ
	|		РегистрНакопления.ПереданнаяВозвратнаяТара КАК Движения
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			Движения.Номенклатура = Аналитика.Номенклатура
	|			И Движения.Характеристика = Аналитика.Характеристика
	|			И Движения.Партнер = Аналитика.Склад
	|			И Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|			ПО Настройка.ОрганизацияВладелец = Движения.ВидЗапасов.ВидЗапасовВладельца.Организация
	|			И Настройка.ТипЗапасов = Движения.ВидЗапасов.ВидЗапасовВладельца.ТипЗапасов
	|			И Настройка.ОрганизацияПродавец = &Организация
	|	ГДЕ
	|		Движения.Регистратор = &Ссылка
	|		И Движения.Активность
	|		И Движения.ВидЗапасов.Организация = &Организация
	|		И Движения.Партнер = &Партнер
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Переданная возвратная тара
	|		Остатки.ВидЗапасов.Организация КАК Организация,
	|		Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|		Остатки.ВидЗапасов КАК ВидЗапасов,
	|		Остатки.НомерГТД КАК НомерГТД,
	|		Остатки.КоличествоОстаток КАК Количество,
	|		0 КАК Знак,
	|		ДокументПередачи.Дата КАК ДатаПоступления,
	|		ЕСТЬNULL(Настройка.ИспользоватьПриВозвратеОтКлиента, Ложь) КАК КВозвратуМеждуОрганизациями
	|	ИЗ
	|		РегистрНакопления.ПереданнаяВозвратнаяТара.Остатки(&Дата,
	|			ВидЗапасов.Организация = &Организация
	|			И Партнер = &Партнер
	|			И (Номенклатура, Характеристика) В (
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Аналитика.Номенклатура,
	|					Аналитика.Характеристика
	|				ИЗ
	|					ТаблицаТоваров КАК ТаблицаТоваров
	|				
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|						Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|					ПО
	|						ТаблицаТоваров.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|				ГДЕ
	|					Аналитика.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|				)
	|		) КАК Остатки
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			Остатки.Номенклатура = Аналитика.Номенклатура
	|			И Остатки.Характеристика = Аналитика.Характеристика
	|			И Остатки.Партнер = Аналитика.Склад
	|			И Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|			ПО Настройка.ОрганизацияВладелец = Остатки.ВидЗапасов.ВидЗапасовВладельца.Организация
	|			И Настройка.ТипЗапасов = Остатки.ВидЗапасов.ВидЗапасовВладельца.ТипЗапасов
	|			И Настройка.ОрганизацияПродавец = &Организация
	|
	|	) КАК ТоварыОрганизаций
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрганизаций.Организация,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	Аналитика.Серия,
	|	(ВЫБОР
	|		КОГДА &ЭтоВозврат И Не ТоварыОрганизаций.КВозвратуМеждуОрганизациями
	|	 	 И ТоварыОрганизаций.ВидЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		ИНАЧЕ ТоварыОрганизаций.ВидЗапасов КОНЕЦ),
	|	(ВЫБОР 
	|		КОГДА &ЭтоВозврат И Не ТоварыОрганизаций.КВозвратуМеждуОрганизациями
	|	 	 И ТоварыОрганизаций.ВидЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА ТоварыОрганизаций.ВидЗапасов.ВидЗапасовВладельца
	|		ИНАЧЕ ТоварыОрганизаций.ВидЗапасов КОНЕЦ),
	|	(ВЫБОР КОГДА &ЭтоВозврат ТОГДА ТоварыОрганизаций.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ),
	|	(ВЫБОР
	|		КОГДА &ЭтоВозврат И ТоварыОрганизаций.КВозвратуМеждуОрганизациями
	|			ТОГДА ТоварыОрганизаций.ВидЗапасов.РеализацияЗапасовДругойОрганизации
	|		ИНАЧЕ ЛОЖЬ КОНЕЦ),
	|	(ВЫБОР 
	|		КОГДА &ЭтоВозврат И Не ТоварыОрганизаций.КВозвратуМеждуОрганизациями
	|	 	 И ТоварыОрганизаций.ВидЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА ТоварыОрганизаций.ВидЗапасов.ВидЗапасовВладельца.НалоговоеНазначение
	|		ИНАЧЕ ТоварыОрганизаций.ВидЗапасов.НалоговоеНазначение КОНЕЦ),
	|	ТоварыОрганизаций.НомерГТД,
	|	ТоварыОрганизаций.Знак
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|");
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Партнер", Партнер);
	Запрос.УстановитьПараметр("Соглашение", Соглашение);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Дата", Дата + 1);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("ЭтоВозврат", ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента"));
	Запрос.УстановитьПараметр("ЭтоОтчетПоКомиссии", ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями"));
	
	ИгнорироватьОперативныеОстатки = ДополнительныеСвойства.Свойство("ИгнорироватьОперативныеОстатки");
	Запрос.УстановитьПараметр("ИспользоватьОстаткиНаКонецМесяца", ?(ИгнорироватьОперативныеОстатки, Истина, Ложь));
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

// Процедура формирует таблицу остатков товаров к оформлению отчетов комитенту.
//
Процедура ТаблицаОстатковКОформлениюОтчетаКомитенту(ДокументСсылка, Дата, Валюта, ЭтоОтчетКомитентуОСписании, МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Серия КАК Серия,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасовВладельца,
	|	ТоварыОрганизаций.ВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
	|	Неопределено КАК ВидЗапасовПолучателя,
	|	Неопределено КАК ВидЗапасовОтгрузки,
	|	Ложь КАК РеализацияЗапасовДругойОрганизации,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	МАКСИМУМ(ТоварыОрганизаций.ДатаПоступления) КАК ДатаПоступления,
	|	СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстаток,
	|	СУММА(ТоварыОрганизаций.СуммаВыручки) КАК СуммаОстаток
	|
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ (
	|	ВЫБРАТЬ // ВидыЗапасов, списанные документом
	|		ТоварыКОформлению.ВидЗапасов.Организация КАК Организация,
	|		ТоварыКОформлению.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыКОформлению.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыКОформлению.НомерГТД КАК НомерГТД,
	|		ВЫБОР КОГДА &ЭтоОтчетКомитентуОСписании ТОГДА
	|			ТоварыКОформлению.КоличествоСписано
	|		ИНАЧЕ
	|			ТоварыКОформлению.Количество
	|		КОНЕЦ КАК Количество,
	|		ВЫБОР КОГДА &ЭтоОтчетКомитентуОСписании ТОГДА
	|			0
	|		ИНАЧЕ
	|			ТоварыКОформлению.СуммаВыручки
	|		КОНЕЦ КАК СуммаВыручки,
	|
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ТоварыКОформлению
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|		ПО
	|			ТоварыКОформлению.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|			И ТоварыКОформлению.АналитикаУчетаНоменклатуры = ДатыПередачиТоваровНаКомиссию.АналитикаУчетаНоменклатуры
	|			И ТоварыКОформлению.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|			И ТоварыКОформлению.ВидЗапасов.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|			И ТоварыКОформлению.ВидЗапасов.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|	ГДЕ
	|		ТоварыКОформлению.Регистратор = &Ссылка
	|		И ТоварыКОформлению.Активность
	|		И ТоварыКОформлению.ВидЗапасов В (
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ДоступныеВидыЗапасов.ВидЗапасов
	|			ИЗ
	|				ДоступныеВидыЗапасов КАК ДоступныеВидыЗапасов
	|			)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Реализованные виды запасов
	|		ТоварыКОформлению.ВидЗапасов.Организация КАК Организация,
	|		ТоварыКОформлению.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыКОформлению.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыКОформлению.НомерГТД КАК НомерГТД,
	|		ВЫБОР КОГДА &ЭтоОтчетКомитентуОСписании ТОГДА
	|			ТоварыКОформлению.КоличествоСписаноОстаток
	|		ИНАЧЕ
	|			ТоварыКОформлению.КоличествоОстаток
	|		КОНЕЦ КАК Количество,
	|
	|		ВЫБОР КОГДА &ЭтоОтчетКомитентуОСписании ТОГДА
	|			0
	|		ИНАЧЕ
	|			ТоварыКОформлению.СуммаВыручкиОстаток
	|		КОНЕЦ КАК СуммаВыручки,
	|
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту.Остатки(&Дата,
	|			Валюта = &Валюта
	|			И ВидЗапасов В (
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ДоступныеВидыЗапасов.ВидЗапасов
	|				ИЗ
	|					ДоступныеВидыЗапасов КАК ДоступныеВидыЗапасов
	|				)
	|			И (АналитикаУчетаНоменклатуры) В (
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|				ИЗ
	|					ТаблицаТоваров КАК ТаблицаТоваров
	|				)
	|		) КАК ТоварыКОформлению
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|		ПО
	|			ТоварыКОформлению.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|			И ТоварыКОформлению.АналитикаУчетаНоменклатуры = ДатыПередачиТоваровНаКомиссию.АналитикаУчетаНоменклатуры
	|			И ТоварыКОформлению.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|			И ТоварыКОформлению.ВидЗапасов.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|			И ТоварыКОформлению.ВидЗапасов.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Виды запасов, указанные в документе вручную.
	|		Запасы.ВидЗапасов.Организация КАК Организация,
	|		Запасы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Запасы.ВидЗапасов КАК ВидЗапасов,
	|		Запасы.НомерГТД КАК НомерГТД,
	|		Запасы.Количество КАК Количество,
	|		Запасы.СуммаСНДС КАК СуммаВыручки,
	|		ДАТАВРЕМЯ(1,1,1) КАК ДатаПоступления
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК Запасы
	|	ГДЕ
	|		Запасы.ВидыЗапасовУказаныВручную
	|		И (Запасы.АналитикаУчетаНоменклатуры) В (
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ТаблицаТоваров КАК ТаблицаТоваров
	|			)
	|
	|	) КАК ТоварыОрганизаций
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО ТоварыОрганизаций.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрганизаций.Организация,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	Аналитика.Серия,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|");
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Валюта", Валюта);
	Запрос.УстановитьПараметр("ЭтоОтчетКомитентуОСписании", ЭтоОтчетКомитентуОСписании);
	Запрос.УстановитьПараметр("Дата", КонецДня(Дата) + 1);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры 

// Формирование врем.табл. ТаблицаОстатков к передаче или к возврату в зависимости от вида ссылки.
// Параметры:
//	Ссылка - ДокументСсылка.{ПередачаТоваровМеждуОрганизациями | ВозвратТоваровМеждуОрганизациями}
//	Владелец - СправочникСсылка.Организации, владелец передаваемого/возвращаемого запаса
//	Склад - склад подбора остатков в операции
//	Дата - дата подбора остатков
//	ВременныеТаблицы - менеджер временных таблиц для ТаблицаОстатков, должен содержать ВТ ДоступныеВидыЗапасов
//	ПоВсемВидамЗапасов - признак игнорирования доступных видов запасов
Процедура ТаблицаОстатковТоваровКПередаче(Ссылка, Владелец, Склад, Дата, ВременныеТаблицы, ПоВсемВидамЗапасов = Ложь) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	КПередаче.Организация КАК Организация,
	|	КПередаче.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Серия КАК Серия,
	|	Аналитика.Склад КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|
	|	ВЫБОР КОГДА &ПередачаТоваров ТОГДА
	|		ВидыЗапасов.ВидЗапасовВладельца
	|	ИНАЧЕ
	|		КПередаче.ВидЗапасовПродавца
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	ВидыЗапасов.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|
	|	ВЫБОР КОГДА &ПередачаТоваров ТОГДА
	|		ВидыЗапасов.ВидЗапасовВладельца.НалоговоеНазначение 
	|	ИНАЧЕ
	|		КПередаче.ВидЗапасовПродавца.НалоговоеНазначение 
	|	КОНЕЦ КАК НалоговоеНазначение,
	|
	|	ВЫБОР КОГДА &ПередачаТоваров ТОГДА
	|		КПередаче.ВидЗапасовПродавца
	|	ИНАЧЕ
	|		ВидыЗапасов.ВидЗапасовВладельца
	|	КОНЕЦ КАК ВидЗапасовПолучателя,
	|
	|	Неопределено КАК ВидЗапасовОтгрузки,
	|	Ложь КАК РеализацияЗапасовДругойОрганизации,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	КПередаче.НомерГТД КАК НомерГТД,
	|	МАКСИМУМ(КПередаче.ДатаПоступления) КАК ДатаПоступления,
	|	СУММА(КПередаче.Количество) КАК КоличествоОстаток,
	|	0 КАК НаДатуКонтроля,
	|	0 КАК НаДатуАктуальности,
	|	0 КАК СуммаОстаток
	|
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ (
	|	ВЫБРАТЬ // ВидыЗапасов, переданные документом ""Передача товаров между организациями""
	|		КПередаче.ОрганизацияВладелец КАК Организация,
	|		КПередаче.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		КПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца КАК ВидЗапасов,
	|		КПередаче.ВидЗапасовПродавца КАК ВидЗапасовПродавца,
	|		КПередаче.НомерГТД КАК НомерГТД,
	|		ВЫБОР КОГДА &ПередачаТоваров ТОГДА
	|			КПередаче.Количество
	|		ИНАЧЕ
	|			КПередаче.Возвращено
	|		КОНЕЦ КАК Количество,
	|		ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизацийКПередаче КАК КПередаче
	|	ГДЕ
	|		КПередаче.Регистратор = &Ссылка
	|		И КПередаче.Активность
	|		И (Не &ПоВсемВидамЗапасов И КПередаче.ВидЗапасовПродавца В (
	|			ВЫБРАТЬ
	|				Доступные.ВидЗапасовПродавца
	|			ИЗ
	|				ДоступныеВидыЗапасов КАК Доступные
	|			)
	|			ИЛИ &ПоВсемВидамЗапасов
	|		)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // ВидыЗапасов, указанные в документе
	|		КПередаче.ОрганизацияВладелец КАК Организация,
	|		КПередаче.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		КПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца КАК ВидЗапасов,
	|		КПередаче.ВидЗапасовПродавца КАК ВидЗапасовПродавца,
	|		КПередаче.НомерГТД КАК НомерГТД,
	|		ВЫБОР КОГДА &ПередачаТоваров ТОГДА
	|			КПередаче.КоличествоОстаток
	|		ИНАЧЕ
	|			КПередаче.ВозвращеноОстаток
	|		КОНЕЦ КАК Количество,
	|		ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизацийКПередаче.Остатки(&Дата,
	|			ОрганизацияВладелец = &Владелец
	|			И (АналитикаУчетаНоменклатуры, ВидЗапасовПродавца) В (
	|				ВЫБРАТЬ
	|					ВидыЗапасов.АналитикаУчетаНоменклатуры,
	|					ВидыЗапасов.ВидЗапасовПолучателя
	|				ИЗ
	|					ТаблицаВидыЗапасов КАК ВидыЗапасов
	|				)
	|		) КАК КПередаче
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // ВидыЗапасов, проданные другими оранизациями
	|		КПередаче.ОрганизацияВладелец КАК Организация,
	|		КПередаче.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		КПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца КАК ВидЗапасов,
	|		КПередаче.ВидЗапасовПродавца КАК ВидЗапасовПродавца,
	|		КПередаче.НомерГТД КАК НомерГТД,
	|		ВЫБОР КОГДА &ПередачаТоваров ТОГДА
	|			КПередаче.КоличествоОстаток
	|		ИНАЧЕ
	|			КПередаче.ВозвращеноОстаток
	|		КОНЕЦ КАК Количество,
	|		ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизацийКПередаче.Остатки(&Дата,
	|			ОрганизацияВладелец = &Владелец
	|			И АналитикаУчетаНоменклатуры В (
	|				ВЫБРАТЬ
	|					ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|				ИЗ
	|					ТаблицаТоваров КАК ТаблицаТоваров
	|				)
	|			И (Не &ПоВсемВидамЗапасов И ВидЗапасовПродавца В (
	|				ВЫБРАТЬ
	|					Доступные.ВидЗапасовПродавца
	|				ИЗ
	|					ДоступныеВидыЗапасов КАК Доступные
	|				)
	|				ИЛИ &ПоВсемВидамЗапасов
	|			)
	|		) КАК КПередаче
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаВидыЗапасов КАК ВидыЗапасов
	|	ПО
	|		КПередаче.АналитикаУчетаНоменклатуры = ВидыЗапасов.АналитикаУчетаНоменклатуры
	|		И КПередаче.ВидЗапасовПродавца = ВидыЗапасов.ВидЗапасовПолучателя
	|	ГДЕ
	|		ВидыЗапасов.ВидЗапасов ЕСТЬ NULL
	|
	|) КАК КПередаче
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК ВидыЗапасов
	|	ПО
	|		ВидыЗапасов.Ссылка = КПередаче.ВидЗапасовПродавца
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		КПередаче.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|СГРУППИРОВАТЬ ПО
	|	КПередаче.Организация,
	|	КПередаче.АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	Аналитика.Серия,
	|	Аналитика.Склад,
	|	ВидыЗапасов.ВидЗапасовВладельца,
	|	КПередаче.ВидЗапасовПродавца,
	|	КПередаче.НомерГТД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|///////////////////////////////////////
	|");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Владелец", Владелец);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("ПоВсемВидамЗапасов", ПоВсемВидамЗапасов);
	Запрос.УстановитьПараметр("Дата", Дата + 1);
	Запрос.УстановитьПараметр("ПередачаТоваров",
		ТипЗнч(Ссылка) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями"));
	
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	Запрос.Выполнить();
КонецПроцедуры

// Процедура формирует таблицу остатков реализованных товаров.
//
Процедура ТаблицаОстатковРеализованныхТоваров(ДокументСсылка, Организация, Склад, ХозяйственнаяОперация, МенеджерВременныхТаблиц, ПереданнаяТара = Ложь) Экспорт
    
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Дата
	|
	|ПОМЕСТИТЬ ДокументыРеализации
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|	ПО
	|		ИСТИНА
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияТоваровУслуг КАК ДанныеДокумента
	|	ПО
	|		ДанныеДокумента.Ссылка = ТаблицаТоваров.ДокументРеализации
	|		ИЛИ (ТаблицаТоваров.ПодбиратьВидыЗапасов
	|			И ТаблицаТоваров.ДокументРеализации = НЕОПРЕДЕЛЕНО
	|			И ДанныеДокумента.Организация = ТаблицаДанныхДокумента.Организация
	|			И ДанныеДокумента.Партнер = ТаблицаДанныхДокумента.Партнер
	|			И ДанныеДокумента.Контрагент = ТаблицаДанныхДокумента.Контрагент)
	|
	|ГДЕ
	|	(ДанныеДокумента.ХозяйственнаяОперация = &ХозяйственнаяОперацияДокументаРеализации
	|	И ДанныеДокумента.Дата <= КОНЕЦПЕРИОДА(ТаблицаДанныхДокумента.Дата, ДЕНЬ))
	|	ИЛИ ДанныеДокумента.Ссылка = ТаблицаТоваров.ДокументРеализации
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Дата
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|	ПО
	|		ИСТИНА
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ОтчетОРозничныхПродажах КАК ДанныеДокумента
	|	ПО
	|		ДанныеДокумента.Ссылка = ТаблицаТоваров.ДокументРеализации
	|
	|ГДЕ
	|	&ХозяйственнаяОперацияДокументаРеализации = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВРозницу)
	|	И ДанныеДокумента.Дата <= КОНЕЦПЕРИОДА(ТаблицаДанныхДокумента.Дата, ДЕНЬ)
	// При перепроведении ООРП продажа может смениться на возврат. 
	|	И ДанныеДокумента.Ссылка <> &Ссылка
	|
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|
	|ПОМЕСТИТЬ ДокументыВозврата
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента КАК ДанныеДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|	ПО
	|		ДанныеДокумента.Организация = ТаблицаДанныхДокумента.Организация
	|		И ДанныеДокумента.Партнер = ТаблицаДанныхДокумента.Партнер
	|		И ДанныеДокумента.Контрагент = ТаблицаДанныхДокумента.Контрагент
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка <> &Ссылка
	|	И ДанныеДокумента.ХозяйственнаяОперация = &ХозяйственнаяОперацияДокументаВозврата
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ВидыЗапасов.Ссылка, 
	|		ВидыЗапасов.Ссылка.Организация 
	|	ИЗ 
	// Хозяйственной операций в документе нет. Определить, формирует ли документ возвраты можно только 
	// по табличной части ВидыЗапасовПоВозвратамЗакрытойСмены
	|		Документ.ОтчетОРозничныхПродажах.ВидыЗапасовПоВозвратамЗакрытойСмены КАК ВидыЗапасов) КАК ДанныеДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|	ПО
	|		ДанныеДокумента.Организация = ТаблицаДанныхДокумента.Организация
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка <> &Ссылка
	|	И ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя) = &ХозяйственнаяОперацияДокументаВозврата
	|
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.КорректировкаРеализации) ТОГДА
	|		Аналитика.Склад
	|	ИНАЧЕ
	|		&Склад
	|	КОНЕЦ КАК Склад, 
	|	
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.КорректировкаРеализации) ТОГДА
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры
	|	ИНАЧЕ
	|		ЕСТЬNULL(Аналитика.КлючАналитики, ТоварыОрганизаций.АналитикаУчетаНоменклатуры)
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры, 
	|
	|	ТоварыОрганизаций.СкладОтгрузки КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|
	|	АналитикаОтгрузки.Номенклатура КАК Номенклатура,
	|	АналитикаОтгрузки.Характеристика КАК Характеристика,
	|	АналитикаОтгрузки.Серия КАК Серия,
	|	ТоварыОрганизаций.ДокументРеализации КАК ДокументРеализации,
	|
	|	ВЫБОР КОГДА ТоварыОрганизаций.ВидЗапасов.Организация <> &Организация
	|		ИЛИ ТоварыОрганизаций.ВидЗапасов.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	ТОГДА
	|		&ВидЗапасовПоУмолчанию
	|	ИНАЧЕ
	|		ТоварыОрганизаций.ВидЗапасов
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасовВладельца,
	|	Неопределено КАК ВидЗапасовПолучателя,
	|	
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасовОтгрузки,
	|
	|	ВЫБОР КОГДА ТоварыОрганизаций.ВидЗапасов.Организация <> &Организация
	|		И ТоварыОрганизаций.КВозвратуМеждуОрганизациями
	|	ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК РеализацияЗапасовДругойОрганизации,
	|
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.КорректировкаРеализации) ТОГДА
	|		ТоварыОрганизаций.ВидЗапасов.Назначение
	|	ИНАЧЕ 
	|		ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТоварыОрганизаций.ВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,	
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	МИНИМУМ(
	|		РАЗНОСТЬДАТ(ТоварыОрганизаций.ДатаРеализации, &МаксимальнаяДата, ДЕНЬ)
	|	) КАК ДатаПоступления,
	|	СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстаток,
	|	0 КАК СуммаОстаток
	|
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ (
	|	ВЫБРАТЬ // ВидыЗапасов, отгруженные документом реализации
	|		ТоварыОрганизаций.Регистратор КАК ДокументРеализации,
	|		Аналитика.Склад КАК СкладОтгрузки,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|		ВЫБОР КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ТоварыОрганизаций.Количество > 0 ТОГДА
	|			ТоварыОрганизаций.Количество
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК Количество,
	|		ДокументыРеализации.Дата КАК ДатаРеализации,
	|		ЕСТЬNULL(Настройка.ИспользоватьПриВозвратеОтКлиента, Ложь) КАК КВозвратуМеждуОрганизациями
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ДокументыРеализации КАК ДокументыРеализации
	|		ПО
	|			ТоварыОрганизаций.Регистратор = ДокументыРеализации.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|		ПО
	|			ТоварыОрганизаций.ВидЗапасов.Организация = Настройка.ОрганизацияВладелец
	|			И ТоварыОрганизаций.ВидЗапасов.ТипЗапасов = Настройка.ТипЗапасов
	|			И Настройка.ОрганизацияПродавец = &Организация
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			ТоварыОрганизаций.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|	ГДЕ
	|		ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И (&ПереданнаяТара И Аналитика.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			ИЛИ Не &ПереданнаяТара)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // ВидыЗапасов, возвращенные от клиентов
	|		ТоварыОрганизаций.ДокументРеализации КАК ДокументРеализации,
	|		ЕСТЬNULL(КорАналитика.Склад, Аналитика.Склад) КАК СкладОтгрузки,
	|		ЕСТЬNULL(КорАналитика.КлючАналитики, Аналитика.КлючАналитики) КАК АналитикаУчетаНоменклатуры,
	|		ВЫБОР КОГДА НЕ ТоварыОрганизаций.КорВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА
	|			ВЫБОР КОГДА ТоварыОрганизаций.КорВидЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
	|				ТоварыОрганизаций.КорВидЗапасов.ВидЗапасовВладельца
	|			ИНАЧЕ
	|				ТоварыОрганизаций.КорВидЗапасов
	|			КОНЕЦ
	|		ИНАЧЕ
	|			ТоварыОрганизаций.ВидЗапасов
	|		КОНЕЦ КАК ВидЗапасов,
	|		ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|		ВЫБОР КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ТоварыОрганизаций.Количество < 0 ТОГДА
	|			ТоварыОрганизаций.Количество
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК Количество,
	|		ДАТАВРЕМЯ(1, 1, 1) КАК ДатаРеализации,
	|		ЕСТЬNULL(ТоварыОрганизаций.КорВидЗапасов.РеализацияЗапасовДругойОрганизации, Ложь) КАК КВозвратуМеждуОрганизациями
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ДокументыВозврата КАК ДокументыВозврата
	|		ПО
	|			ТоварыОрганизаций.Регистратор = ДокументыВозврата.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			ТоварыОрганизаций.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК КорАналитика
	|		ПО
	|			ТоварыОрганизаций.КорАналитикаУчетаНоменклатуры = КорАналитика.КлючАналитики

	|	ГДЕ
	|		НЕ (Аналитика.КлючАналитики ЕСТЬ NULL И КорАналитика.КлючАналитики ЕСТЬ NULL)
	|		И (&ПереданнаяТара И Аналитика.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			ИЛИ Не &ПереданнаяТара)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // ВидыЗапасов, с учетом корректировок
	|		ТоварыОрганизаций.ДокументРеализации КАК ДокументРеализации,
	|		Аналитика.Склад КАК СкладОтгрузки,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|		ВЫБОР КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
	|			ТоварыОрганизаций.Количество
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК Количество,
	|		ДАТАВРЕМЯ(1, 1, 1) КАК ДатаРеализации,
	|		ЕСТЬNULL(Настройка.ИспользоватьПриВозвратеОтКлиента, Ложь) КАК КВозвратуМеждуОрганизациями
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			Документ.КорректировкаРеализации КАК ДокументыКорректировки
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|				ДокументыРеализации КАК ДокументыРеализации
	|			ПО
	|				ДокументыКорректировки.ДокументОснование = ДокументыРеализации.Ссылка
	|
	|		ПО
	|			ТоварыОрганизаций.Регистратор = ДокументыКорректировки.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|		ПО
	|			ТоварыОрганизаций.ВидЗапасов.Организация = Настройка.ОрганизацияВладелец
	|			И ТоварыОрганизаций.ВидЗапасов.ТипЗапасов = Настройка.ТипЗапасов
	|			И Настройка.ОрганизацияПродавец = &Организация
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			ТоварыОрганизаций.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|	ГДЕ
	|		&ХозяйственнаяОперацияДокументаРеализации = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
	|		И (&ПереданнаяТара И Аналитика.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|			ИЛИ Не &ПереданнаяТара)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // ВидыЗапасов, указанные в документе
	|		Неопределено КАК ДокументРеализации,
	|		ТаблицаВидыЗапасов.СкладОтгрузки КАК СкладОтгрузки,
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|		ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|		ТаблицаВидыЗапасов.Количество КАК Количество,
	|		ДАТАВРЕМЯ(1, 1, 1) КАК ДатаРеализации,
	|		Ложь КАК КВозвратуМеждуОрганизациями
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|	ГДЕ
	|		ТаблицаВидыЗапасов.ВидыЗапасовУказаныВручную
	|		И (Аналитика.Номенклатура, Аналитика.Характеристика) В (
	|			ВЫБРАТЬ
	|				ТаблицаТоваров.Номенклатура,
	|				ТаблицаТоваров.Характеристика
	|			ИЗ
	|				ТаблицаТоваров КАК ТаблицаТоваров
	|			ГДЕ
	|				ТаблицаТоваров.ДокументРеализации = Неопределено
	|		)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Переданная возвратная тара
	|		Остатки.ДокументПередачи КАК ДокументРеализации,
	|		&Склад КАК СкладОтгрузки,
	|		Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|		Остатки.ВидЗапасов КАК ВидЗапасов,
	|		Остатки.НомерГТД КАК НомерГТД,
	|		Остатки.КоличествоОстаток КАК Количество,
	|		Остатки.ДокументПередачи.Дата КАК ДатаРеализации,
	|		Ложь КАК КВозвратуМеждуОрганизациями
	|	ИЗ
	|		РегистрНакопления.ПереданнаяВозвратнаяТара.Остатки(,
	|			&ПереданнаяТара
	|			И (Номенклатура, Характеристика, ДокументПередачи) В (
	|			ВЫБРАТЬ
	|				ТаблицаТоваров.Номенклатура,
	|				ТаблицаТоваров.Характеристика,
	|				ТаблицаТоваров.ДокументРеализации
	|			ИЗ
	|				ТаблицаТоваров КАК ТаблицаТоваров
	|			)
	|		) КАК Остатки
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			Аналитика.Номенклатура = Остатки.Номенклатура
	|			И Аналитика.Характеристика = Остатки.Характеристика
	|			И Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			И Аналитика.Склад = &Склад
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Переданная возвратная тара, списанная текущим документом
	|		Движения.ДокументПередачи КАК ДокументРеализации,
	|		&Склад КАК СкладОтгрузки,
	|		Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|		Движения.ВидЗапасов КАК ВидЗапасов,
	|		Движения.НомерГТД КАК НомерГТД,
	|		Движения.Количество КАК Количество,
	|		Движения.ДокументПередачи.Дата КАК ДатаРеализации,
	|		Ложь КАК КВозвратуМеждуОрганизациями
	|	ИЗ
	|		РегистрНакопления.ПереданнаяВозвратнаяТара КАК Движения
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			Аналитика.Номенклатура = Движения.Номенклатура
	|			И Аналитика.Характеристика = Движения.Характеристика
	|			И Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			И Аналитика.Склад = &Склад
	|	ГДЕ	
	|		Движения.Регистратор = &Ссылка
	|		И &ПереданнаяТара
	|	) КАК ТоварыОрганизаций
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаОтгрузки
	|	ПО
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры = АналитикаОтгрузки.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		АналитикаОтгрузки.Номенклатура = Аналитика.Номенклатура
	|		И АналитикаОтгрузки.Характеристика = Аналитика.Характеристика
	|		И АналитикаОтгрузки.Серия = Аналитика.Серия
	|		И &Склад = Аналитика.Склад
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументРеализации,
	|	ТоварыОрганизаций.СкладОтгрузки,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.КорректировкаРеализации) ТОГДА
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры
	|	ИНАЧЕ
	|		ЕСТЬNULL(Аналитика.КлючАналитики, ТоварыОрганизаций.АналитикаУчетаНоменклатуры)
	|	КОНЕЦ, 
	|	АналитикаОтгрузки.Номенклатура,
	|	АналитикаОтгрузки.Характеристика,
	|	АналитикаОтгрузки.Серия,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(&Ссылка) = ТИП(Документ.КорректировкаРеализации) ТОГДА
	|		Аналитика.Склад
	|	ИНАЧЕ
	|		&Склад
	|	КОНЕЦ, 
	|	ВЫБОР КОГДА ТоварыОрганизаций.ВидЗапасов.Организация <> &Организация
	|		ИЛИ ТоварыОрганизаций.ВидЗапасов.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	ТОГДА
	|		&ВидЗапасовПоУмолчанию
	|	ИНАЧЕ
	|		ТоварыОрганизаций.ВидЗапасов
	|	КОНЕЦ,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ВЫБОР КОГДА ТоварыОрганизаций.ВидЗапасов.Организация <> &Организация
	|		ИЛИ ТоварыОрганизаций.ВидЗапасов.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	ТОГДА
	|		ТоварыОрганизаций.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ТоварыОрганизаций.ВидЗапасов.Организация <> &Организация
	|		И ТоварыОрганизаций.КВозвратуМеждуОрганизациями
	|	ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ,
	|	ТоварыОрганизаций.НомерГТД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|");
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("ВидЗапасовПоУмолчанию", Справочники.ВидыЗапасов.ПустаяСсылка());
	Запрос.УстановитьПараметр("МаксимальнаяДата", Дата(2399, 1, 1));
	Запрос.УстановитьПараметр("ПереданнаяТара", ПереданнаяТара);
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтКомиссионера Тогда
		ХозяйственнаяОперацияДокументаРеализации = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя Тогда
		ХозяйственнаяОперацияДокументаРеализации = Перечисления.ХозяйственныеОперации.РеализацияВРозницу
	Иначе
		ХозяйственнаяОперацияДокументаРеализации = Перечисления.ХозяйственныеОперации.РеализацияКлиенту
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ХозяйственнаяОперацияДокументаРеализации", ХозяйственнаяОперацияДокументаРеализации);
	Запрос.УстановитьПараметр("ХозяйственнаяОперацияДокументаВозврата", ХозяйственнаяОперация);
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	
КонецПроцедуры

// Процедура формирует таблицу остатков списанных на расходы товаров.
//
Процедура ТаблицаОстатковСписанныхНаРасходыТоваров(ДокументСсылка, Организация, Склад, МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Дата
	|
	|ПОМЕСТИТЬ ДокументыСписания
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ВнутреннееПотреблениеТоваров КАК ДанныеДокумента
	|	ПО
	|		ДанныеДокумента.Ссылка = ТаблицаТоваров.ДокументРеализации
	|		И ДанныеДокумента.Проведен
	|		И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	&Склад КАК Склад,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, ТоварыОрганизаций.АналитикаУчетаНоменклатуры) КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.СкладСписания КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	АналитикаСписания.Номенклатура КАК Номенклатура,
	|	АналитикаСписания.Характеристика КАК Характеристика,
	|	АналитикаСписания.Серия КАК Серия,
	|	ТоварыОрганизаций.ДокументСписания КАК ДокументРеализации,
	|	ТоварыОрганизаций.СтатьяРасходов КАК СтатьяРасходов,
	|	ТоварыОрганизаций.АналитикаРасходов КАК АналитикаРасходов,
	|
	|	ВЫБОР КОГДА ТоварыОрганизаций.ВидЗапасов.Организация <> &Организация
	|		ИЛИ ТоварыОрганизаций.ВидЗапасов.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	ТОГДА
	|		&ВидЗапасовПоУмолчанию
	|	ИНАЧЕ
	|		ТоварыОрганизаций.ВидЗапасов
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасовВладельца,
	|	Неопределено КАК ВидЗапасовПолучателя,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасовОтгрузки,
	|
	|	ВЫБОР КОГДА ТоварыОрганизаций.ВидЗапасов.Организация <> &Организация
	|		И ТоварыОрганизаций.КВозвратуМеждуОрганизациями
	|	ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК РеализацияЗапасовДругойОрганизации,
	|
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	ТоварыОрганизаций.ВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,	
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	МИНИМУМ(
	|		РАЗНОСТЬДАТ(ТоварыОрганизаций.ДатаСписания, &МаксимальнаяДата, ДЕНЬ)
	|	) КАК ДатаПоступления,
	|	СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстаток,
	|	0 КАК СуммаОстаток
	|
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ (
	|	ВЫБРАТЬ // ВидыЗапасов, списанные внутренним потреблением
	|		ТоварыОрганизаций.Регистратор КАК ДокументСписания,
	|		Аналитика.Склад КАК СкладСписания,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|		ТоварыОрганизаций.Количество КАК Количество,
	|		ДокументыСписания.Дата КАК ДатаСписания,
	|		ТоварыОрганизаций.СтатьяРасходов КАК СтатьяРасходов,
	|		ТоварыОрганизаций.АналитикаРасходов КАК АналитикаРасходов,
	|		ЕСТЬNULL(Настройка.ИспользоватьПриВозвратеОтКлиента, Ложь) КАК КВозвратуМеждуОрганизациями
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ДокументыСписания КАК ДокументыСписания
	|		ПО
	|			ТоварыОрганизаций.Регистратор = ДокументыСписания.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|		ПО
	|			ТоварыОрганизаций.ВидЗапасов.Организация = Настройка.ОрганизацияВладелец
	|			И ТоварыОрганизаций.ВидЗапасов.ТипЗапасов = Настройка.ТипЗапасов
	|			И Настройка.ОрганизацияПродавец = &Организация
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			ТоварыОрганизаций.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|	) КАК ТоварыОрганизаций
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаСписания
	|	ПО
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры = АналитикаСписания.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		АналитикаСписания.Номенклатура = Аналитика.Номенклатура
	|		И АналитикаСписания.Характеристика = Аналитика.Характеристика
	|		И АналитикаСписания.Серия = Аналитика.Серия
	|		И &Склад = Аналитика.Склад
	|
	|СГРУППИРОВАТЬ ПО
	|	&Организация,
	|	&Склад,
	|	ЕСТЬNULL(Аналитика.КлючАналитики, ТоварыОрганизаций.АналитикаУчетаНоменклатуры),
	|	ТоварыОрганизаций.СкладСписания,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка),
	|	АналитикаСписания.Номенклатура,
	|	АналитикаСписания.Характеристика,
	|	АналитикаСписания.Серия,
	|	ТоварыОрганизаций.ДокументСписания,
	|	ТоварыОрганизаций.СтатьяРасходов,
	|	ТоварыОрганизаций.АналитикаРасходов,
	|
	|	ВЫБОР КОГДА ТоварыОрганизаций.ВидЗапасов.Организация <> &Организация
	|		ИЛИ ТоварыОрганизаций.ВидЗапасов.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	ТОГДА
	|		&ВидЗапасовПоУмолчанию
	|	ИНАЧЕ
	|		ТоварыОрганизаций.ВидЗапасов
	|	КОНЕЦ,
	|
	|	ТоварыОрганизаций.ВидЗапасов,
	|	Неопределено,
	|	ТоварыОрганизаций.ВидЗапасов,
	|
	|	ВЫБОР КОГДА ТоварыОрганизаций.ВидЗапасов.Организация <> &Организация
	|		И ТоварыОрганизаций.КВозвратуМеждуОрганизациями
	|	ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ,
	|
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка),
	|	ТоварыОрганизаций.НомерГТД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|");
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("ВидЗапасовПоУмолчанию", Справочники.ВидыЗапасов.ПустаяСсылка());
	Запрос.УстановитьПараметр("МаксимальнаяДата", Дата(2399, 1, 1));
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	
КонецПроцедуры
// Процедура формирует таблицу остатков комиссионных товаров инеркампани.
//
Процедура ТаблицаОстатковКомиссионныхТоваровИнтеркампани(Организация, НачалоПериода, КонецПериода, ВременныеТаблицы, Ссылка, ЭтоОтчетОСписании = Ложь) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ПОМЕСТИТЬ ОтборПоАналитике
	|ИЗ
	|	ТаблицаТоваров КАК Товары
	|;
	|/////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыКОформлению.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыКОформлению.НомерГТД КАК НомерГТД,
	|	
	|	(ВЫБОР
	|		КОГДА ТоварыКОформлению.Количество >= 0 ТОГДА 1
	|		ИНАЧЕ -1 КОНЕЦ) КАК Знак,
	|	
	|	СУММА(ВЫБОР КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|		ВЫБОР КОГДА &ЭтоОтчетОСписании 
	|			ТОГДА ТоварыКОформлению.КоличествоСписано
	|			ИНАЧЕ ТоварыКОформлению.Количество
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ВЫБОР
	|			КОГДА ТоварыКОформлению.Регистратор = &ТекущийОтчет ТОГДА 0
	|			КОГДА &ЭтоОтчетОСписании ТОГДА -ТоварыКОформлению.КоличествоСписано
	|			ИНАЧЕ -ТоварыКОформлению.Количество КОНЕЦ
	|	КОНЕЦ) КАК Количество,
	|	СУММА(ВЫБОР КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|		ТоварыКОформлению.СуммаВыручки
	|	ИНАЧЕ
	|		-ТоварыКОформлению.СуммаВыручки
	|	КОНЕЦ) КАК СуммаВыручки,
	|	СУММА(
	|		ВЫБОР
	|			КОГДА ТоварыКОформлению.Регистратор = &ТекущийОтчет И &ЭтоОтчетОСписании ТОГДА ТоварыКОформлению.КоличествоСписано
	|			КОГДА ТоварыКОформлению.Регистратор = &ТекущийОтчет ТОГДА ТоварыКОформлению.Количество
	|			ИНАЧЕ 0 КОНЕЦ
	|	) КАК КоличествоВДокументе
	|ПОМЕСТИТЬ
	|	Остатки
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ТоварыКОформлению
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ОтборПоАналитике КАК ОтборПоАналитике
	|	ПО
	|		ОтборПоАналитике.АналитикаУчетаНоменклатуры = ТоварыКОформлению.АналитикаУчетаНоменклатуры
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ДоступныеВидыЗапасов КАК ВидыЗапасов
	|	ПО
	|		ТоварыКОформлению.ВидЗапасов = ВидыЗапасов.ВидЗапасов
	|	
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.РеализацияТоваровУслуг КАК ДанныеРеализации
	|	ПО
	|		ТоварыКОформлению.ДокументРеализации = ДанныеРеализации.Ссылка
    |
	|ГДЕ
	|	ТоварыКОформлению.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ТоварыКОформлению.Активность
	|	И ТоварыКОформлению.Регистратор <> &ТекущийОтчет
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.АналитикаУчетаНоменклатуры,
	|	ТоварыКОформлению.ВидЗапасов,
	|	ТоварыКОформлению.НомерГТД,
	|	(ВЫБОР
	|		КОГДА ТоварыКОформлению.Количество >= 0 ТОГДА 1
	|		ИНАЧЕ -1 КОНЕЦ)
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|		ВЫБОР КОГДА &ЭтоОтчетОСписании 
	|			ТОГДА ТоварыКОформлению.КоличествоСписано
	|			ИНАЧЕ ТоварыКОформлению.Количество
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ВЫБОР
	|			КОГДА ТоварыКОформлению.Регистратор = &ТекущийОтчет ТОГДА 0
	|			КОГДА &ЭтоОтчетОСписании ТОГДА -ТоварыКОформлению.КоличествоСписано
	|			ИНАЧЕ -ТоварыКОформлению.Количество КОНЕЦ
	|	КОНЕЦ) <> 0
	|");
	
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	Граница = Новый Граница(КонецПериода, ВидГраницы.Включая);
	
	Запрос.УстановитьПараметр("Граница", Граница);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(КонецПериода));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ТекущийОтчет", Ссылка);
	Запрос.УстановитьПараметр("ЭтоОтчетОСписании", ЭтоОтчетОСписании);
	
	Запрос.Выполнить();
	
	
КонецПроцедуры

// Процедура заполняет табличную часть "Виды запасов" документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - требуется временные таблицы:
//		ТаблицаТоваров, ТаблицаДанныхДокумента, ТаблицаВидыЗапасов, ТаблицаОстатков
//	ДополнительныеСвойства - Дополнительные свойства документа
//	ТабличнаяЧастьВидыЗапасов - ТабличнаяЧасть - Табличная часть "Виды запасов" документа
//	ТаблицаОшибок - ТаблицаЗначений - Таблица для отражения ошибок при заполнении видов запасов
//	Отказ - Булево - Признак отказа от записи документа
//
Процедура ЗаполнитьВидыЗапасовДокумента(МенеджерВременныхТаблиц, ДополнительныеСвойства, ТабличнаяЧастьВидыЗапасов, ТаблицаОшибок, Отказ = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТаблицаВидыЗапасов = ТабличнаяЧастьВидыЗапасов.Выгрузить();
	
	КонтролироватьИзменениеНомеровГТД = ДополнительныеСвойства.Свойство("КонтролироватьИзменениеНомеровГТД");
	Если КонтролироватьИзменениеНомеровГТД Тогда
		ТаблицаНомеровГТД = ТаблицаВидыЗапасов.Скопировать(, "АналитикаУчетаНоменклатуры, НомерГТД, Количество");
	КонецЕсли;
	
	ТаблицаВидыЗапасов.Очистить();
	
	ВидЗапасовПоУмолчанию = Неопределено;
	ВидЗапасовПолучателяПоУмолчанию = Неопределено;
	
	ПерезаполнитьВидыЗапасов = ДополнительныеСвойства.Свойство("ПерезаполнитьВидыЗапасов");
	Если Не ПерезаполнитьВидыЗапасов Тогда
		КонтролироватьОстаткиТоваровОрганизаций = ПолучитьФункциональнуюОпцию("КонтролироватьОстаткиТоваровОрганизаций");
	Иначе
		КонтролироватьОстаткиТоваровОрганизаций = Ложь;
	КонецЕсли;
	КонтролироватьОстаткиТоваровОрганизаций = КонтролироватьОстаткиТоваровОрганизаций
		Или ДополнительныеСвойства.Свойство("КонтролироватьОстаткиТоваровОрганизаций");
		
	КонтролироватьОстаткиТоваровОрганизацийПоНалоговымНазначениям = ДополнительныеСвойства.Свойство("КонтролироватьОстаткиТоваровОрганизацийПоНалоговымНазначениям");
	
	Запрос = ЗапросДанныеЗаполненияВидовЗапасов(МенеджерВременныхТаблиц, ДополнительныеСвойства);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	
	ВыборкаДанныеДокумента = МассивРезультатов[1].Выбрать();
	ВыборкаТаблицаТоваров = МассивРезультатов[2].Выбрать();
	
	ВыборкаДанныеДокумента.Следующий();
	Организация = ВыборкаДанныеДокумента.Организация;
	ХозяйственнаяОперация = ВыборкаДанныеДокумента.ХозяйственнаяОперация;
	ДатаДокумента = ВыборкаДанныеДокумента.Дата;
	
	СоответствиеВидовЗапасов = Новый Соответствие;
	СоответствиеВидовЗапасовВладельца = Новый Соответствие;
	СоответствиеВидовЗапасовВозвратаБезПередачи = Новый Соответствие;
	
	СтруктураДанныхСтроки = Новый Структура("
		|Склад,
		|СкладОтгрузки,
		|Сделка,
		|Назначение,
		|Количество,
		|СуммаСНДС,
		|СтавкаНДС,
		|ЦелевоеНалоговоеНазначение, 
		|СуммаНДС,
		|СуммаВознаграждения,
		|СуммаНДСВознаграждения,
		|ВидЗапасовПолучателя,
		|ВидЗапасовОтгрузки,
		|ДокументРеализации,
		|ЗаказКлиента
		|");
	
	СтруктураВидаЗапасовПоУмолчанию = Новый Структура("
		|ГруппаФинансовогоУчета,
		|ОбособленныйУчетТоваровПоСделке,
		|ВариантОбособленногоУчетаТоваров,
		|Назначение,
		|Поставщик,
		|Контрагент,
		|Соглашение,
		|Договор,
		|Валюта,
		|НалоговоеНазначение,
		|НалоговоеНазначениеОрганизации
		|");
	
	СтруктураВидаЗапасовПоУмолчанию.ГруппаФинансовогоУчета				= Справочники.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка();
	СтруктураВидаЗапасовПоУмолчанию.ОбособленныйУчетТоваровПоСделке		= Ложь;
	СтруктураВидаЗапасовПоУмолчанию.ВариантОбособленногоУчетаТоваров	= Неопределено;
	СтруктураВидаЗапасовПоУмолчанию.Назначение							= Справочники.Назначения.ПустаяСсылка();
	СтруктураВидаЗапасовПоУмолчанию.Поставщик							= ВыборкаДанныеДокумента.Партнер;
	СтруктураВидаЗапасовПоУмолчанию.Контрагент							= ВыборкаДанныеДокумента.Контрагент;
	СтруктураВидаЗапасовПоУмолчанию.Соглашение							= ВыборкаДанныеДокумента.Соглашение;
	СтруктураВидаЗапасовПоУмолчанию.Договор								= ВыборкаДанныеДокумента.Договор;
	СтруктураВидаЗапасовПоУмолчанию.Валюта								= ВыборкаДанныеДокумента.Валюта;
	СтруктураВидаЗапасовПоУмолчанию.НалоговоеНазначениеОрганизации		= ВыборкаДанныеДокумента.НалоговоеНазначениеОрганизации;
	
	
	ВидыЗапасовПоУмолчанию = Новый ТаблицаЗначений;
	ВидыЗапасовПоУмолчанию.Колонки.Добавить("ГруппаФинансовогоУчета", Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаНоменклатуры"));
	ВидыЗапасовПоУмолчанию.Колонки.Добавить("НалоговоеНазначение",    Новый ОписаниеТипов("СправочникСсылка.НалоговыеНазначенияАктивовИЗатрат"));
	ВидыЗапасовПоУмолчанию.Колонки.Добавить("ВидЗапасов",    		  Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов"));
	СтруктураПоискаВидаЗапасовПоУмолчанию = Новый Структура("ГруппаФинансовогоУчета, НалоговоеНазначение");
	
	РезультатЗапроса = МассивРезультатов[МассивРезультатов.ВГраница()];
	ВыборкаПоСтрокам = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоСтрокам.Следующий() Цикл
		
		КоличествоТовара			= ВыборкаПоСтрокам.Количество;
		СуммаТовараСНДС				= ВыборкаПоСтрокам.СуммаСНДС;
		СуммаНДСТовара				= ВыборкаПоСтрокам.СуммаНДС;
		СуммаВознагражденияВсего	= ВыборкаПоСтрокам.СуммаВознаграждения;
		СуммаНДСВознагражденияВсего	= ВыборкаПоСтрокам.СуммаНДСВознаграждения;
		
		ЕстьНулевыеОстаткиТоваровОрганизаций = Ложь;
		
		// Детальные записи
		Выборка = ВыборкаПоСтрокам.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ВидЗапасовОтгрузки = Неопределено;
			
			Если ЗначениеЗаполнено(Выборка.ВидЗапасов) Тогда
				
				ВидЗапасов =  Выборка.ВидЗапасов;
				
			// Для возврата товаров от клиента формируется новый вид запасов по виду запасов отгрузки.	
			ИначеЕсли ЗначениеЗаполнено(Выборка.ВидЗапасовОтгрузки) И Не Выборка.РеализацияЗапасовДругойОрганизации
				И Выборка.ОрганизацияОтгрузки = Организация
			Тогда
			
				Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратНедопоставленногоТовара
				 ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИсправлениеОшибок
				 ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.КорректировкаПоСогласованиюСторон
				Тогда
					ВидЗапасов = Выборка.ВидЗапасовОтгрузки;
				Иначе
					ВидЗапасов = СоответствиеВидовЗапасов.Получить(Выборка.ВидЗапасовОтгрузки);
				КонецЕсли;
				
				Если ВидЗапасов = Неопределено Тогда
					ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДляВозвратаТоваровОтКлиента(Выборка.ВидЗапасовОтгрузки, Организация);
					СоответствиеВидовЗапасов.Вставить(Выборка.ВидЗапасовОтгрузки, ВидЗапасов);
				КонецЕсли;
			
			ИначеЕсли ЗначениеЗаполнено(Выборка.ВидЗапасовВладельца) Тогда
				
				ВидЗапасовОтгрузки = ВидЗапасовОтгрузки(Выборка,
					Организация,
					Выборка.ЦелевоеНалоговоеНазначение,
					СоответствиеВидовЗапасовВозвратаБезПередачи,
					СоответствиеВидовЗапасов);
				
				Если ЗначениеЗаполнено(Выборка.ВидЗапасовОтгрузки) Тогда
					
					ВидЗапасовВладельца = СоответствиеВидовЗапасовВладельца.Получить(Выборка.ВидЗапасовВладельца);
					Если ВидЗапасовВладельца = Неопределено Тогда
						ВидЗапасовВладельца = Справочники.ВидыЗапасов.ВидЗапасовДляВозвратаТоваровОтКлиента(Выборка.ВидЗапасовВладельца);
						СоответствиеВидовЗапасовВладельца.Вставить(Выборка.ВидЗапасовВладельца, ВидЗапасовВладельца);
					КонецЕсли;
					
				Иначе
					
					ВидЗапасовВладельца = Выборка.ВидЗапасовВладельца;
					
				КонецЕсли;
				
				ВидЗапасов = СоответствиеВидовЗапасов.Получить(ВидЗапасовВладельца);
                
                Если ВидЗапасов = Неопределено Тогда
					Если Не Выборка.РеализацияЗапасовДругойОрганизации
						И Выборка.ОрганизацияОтгрузки <> Организация
					Тогда // теперь это собственный товар
						ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДляВозвратаТоваровОтКлиента(ВидЗапасовОтгрузки, Организация);
						СоответствиеВидовЗапасов.Вставить(Выборка.ВидЗапасовОтгрузки, ВидЗапасов);
					Иначе
						ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДляПередачиМеждуОрганизациями(
							ВидЗапасовВладельца,
							Организация,
							Выборка.ЦелевоеНалоговоеНазначение,
							ДатаДокумента
						);
							
						СоответствиеВидовЗапасов.Вставить(ВидЗапасовВладельца, ВидЗапасов);
					КонецЕсли;
				КонецЕсли;
				
			Иначе
				
				ВидЗапасов = Справочники.ВидыЗапасов.ПустаяСсылка();
				
			КонецЕсли;
			
			Если ВидЗапасовОтгрузки = Неопределено Тогда
				ВидЗапасовОтгрузки = ВидЗапасовОтгрузки(Выборка,
					Организация,
					Выборка.ЦелевоеНалоговоеНазначение,
					СоответствиеВидовЗапасовВозвратаБезПередачи,
					СоответствиеВидовЗапасов);
			КонецЕсли;
			
			КоличествоОстаток	= Выборка.КоличествоОстаток;
			СуммаОстаток		= Выборка.СуммаОстаток;
			НеУказанНомерГТД	= Ложь;
			
			Если Выборка.НеУказанНомерГТД Тогда
				
				КоличествоОстаток	= 0;
				СуммаОстаток		= 0;
				НеУказанНомерГТД	= Выборка.НеУказанНомерГТД;
				
			ИначеЕсли (КоличествоТовара > 0 И КоличествоОстаток > 0)
			 ИЛИ (КоличествоТовара < 0 И КоличествоОстаток < 0) Тогда
				
				НоваяСтрока = ТаблицаВидыЗапасов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				
				Если ЗначениеЗаполнено(ВидЗапасов) Тогда
					
					НоваяСтрока.ВидЗапасов = ВидЗапасов;
					
				Иначе
					
					СтруктураПоискаВидаЗапасовПоУмолчанию.Вставить("ГруппаФинансовогоУчета", Выборка.ГруппаФинансовогоУчета);
					СтруктураПоискаВидаЗапасовПоУмолчанию.Вставить("НалоговоеНазначение",    Выборка.ЦелевоеНалоговоеНазначение);
					МассивВидовЗапасов = ВидыЗапасовПоУмолчанию.НайтиСтроки(СтруктураПоискаВидаЗапасовПоУмолчанию);
					Если МассивВидовЗапасов.Количество() > 0 Тогда
						ВидЗапасовПоУмолчанию = МассивВидовЗапасов[0].ВидЗапасов;
					Иначе
						СтруктураВидаЗапасовПоУмолчанию.Вставить("ГруппаФинансовогоУчета", Выборка.ГруппаФинансовогоУчета);	
						СтруктураВидаЗапасовПоУмолчанию.Вставить("НалоговоеНазначение",    Выборка.ЦелевоеНалоговоеНазначение);	
						ВидЗапасовПоУмолчанию = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
							Организация,
							ХозяйственнаяОперация,
							СтруктураВидаЗапасовПоУмолчанию
						);
						
						СтрокаВидыЗапасовПоУмолчанию = ВидыЗапасовПоУмолчанию.Добавить();
						СтрокаВидыЗапасовПоУмолчанию.ГруппаФинансовогоУчета = Выборка.ГруппаФинансовогоУчета;
						СтрокаВидыЗапасовПоУмолчанию.НалоговоеНазначение    = Выборка.ЦелевоеНалоговоеНазначение;
						СтрокаВидыЗапасовПоУмолчанию.ВидЗапасов             = ВидЗапасовПоУмолчанию;
						
					КонецЕсли; 
							
					
					НоваяСтрока.ВидЗапасов = ВидЗапасовПоУмолчанию;
					
				КонецЕсли;
				
				Если КоличествоТовара > 0 Тогда
					
					КоличествоОстаток = Макс(КоличествоОстаток, 0);
					Количество = Мин(КоличествоТовара, КоличествоОстаток);
					
					Если СуммаОстаток <> 0 Тогда
						СуммаОстаток = Макс(СуммаОстаток, 0);
						СуммаСНДС = ?(КоличествоОстаток = Количество, СуммаОстаток, Мин(СуммаТовараСНДС, СуммаОстаток));
					Иначе
						СуммаСНДС = ?(КоличествоТовара <> 0, Окр(Количество * СуммаТовараСНДС / КоличествоТовара, 2, 1), 0);
					КонецЕсли;
					
				Иначе
					
					КоличествоОстаток = Мин(КоличествоОстаток, 0);
					Количество = Макс(КоличествоТовара, КоличествоОстаток);
					
					Если СуммаОстаток <> 0 Тогда
						СуммаОстаток = Мин(СуммаОстаток, 0);
						СуммаСНДС = ?(КоличествоОстаток = Количество, СуммаОстаток, Макс(СуммаТовараСНДС, СуммаОстаток));
					Иначе
						СуммаСНДС = ?(КоличествоТовара <> 0, Окр(Количество * СуммаТовараСНДС / КоличествоТовара, 2, 1), 0);
					КонецЕсли;
					
				КонецЕсли;
				
				СтруктураДанныхСтроки.Количество				= Количество;
				СтруктураДанныхСтроки.СуммаСНДС					= СуммаСНДС;
				СтруктураДанныхСтроки.СуммаНДС					= ?(СуммаТовараСНДС <> 0, Окр(СуммаСНДС * СуммаНДСТовара / СуммаТовараСНДС, 2, 1), 0);
				СтруктураДанныхСтроки.СтавкаНДС					= Выборка.СтавкаНДС;
				СтруктураДанныхСтроки.СуммаВознаграждения		= ?(КоличествоТовара <> 0, Окр(Количество * СуммаВознагражденияВсего / КоличествоТовара, 2, 1), 0);
				СтруктураДанныхСтроки.СуммаНДСВознаграждения	= ?(КоличествоТовара <> 0, Окр(Количество * СуммаНДСВознагражденияВсего / КоличествоТовара, 2, 1), 0);
				СтруктураДанныхСтроки.Склад						= Выборка.Склад;
				СтруктураДанныхСтроки.Сделка					= Выборка.Сделка;
				СтруктураДанныхСтроки.Назначение				= Выборка.Назначение;
				Если ЗначениеЗаполнено(Выборка.ЦелевоеНалоговоеНазначение) Тогда
					СтруктураДанныхСтроки.ЦелевоеНалоговоеНазначение = Выборка.ЦелевоеНалоговоеНазначение;
				Иначе	
					СтруктураДанныхСтроки.ЦелевоеНалоговоеНазначение = Выборка.НалоговоеНазначениеВидаЗапаса;
				КонецЕсли; 
				СтруктураДанныхСтроки.СкладОтгрузки				= Выборка.СкладОтгрузки;
				СтруктураДанныхСтроки.ВидЗапасовПолучателя		= Выборка.ВидЗапасовПолучателя;
				СтруктураДанныхСтроки.ВидЗапасовОтгрузки		= ВидЗапасовОтгрузки;
				СтруктураДанныхСтроки.ДокументРеализации		= Выборка.ДокументРеализации;
				СтруктураДанныхСтроки.ЗаказКлиента				= Выборка.Заказ;
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДанныхСтроки);
				
				КоличествоТовара			= КоличествоТовара				- СтруктураДанныхСтроки.Количество;
				СуммаТовараСНДС				= СуммаТовараСНДС				- СтруктураДанныхСтроки.СуммаСНДС;
				СуммаНДСТовара				= СуммаНДСТовара				- СтруктураДанныхСтроки.СуммаНДС;
				СуммаВознагражденияВсего	= СуммаВознагражденияВсего		- СтруктураДанныхСтроки.СуммаВознаграждения;
				СуммаНДСВознагражденияВсего	= СуммаНДСВознагражденияВсего	- СтруктураДанныхСтроки.СуммаНДСВознаграждения;
				СуммаОстаток				= СуммаОстаток					- СтруктураДанныхСтроки.СуммаСНДС;
				
			КонецЕсли;
			
		КонецЦикла; // Выборка по остаткам
		
		Если КоличествоТовара <> 0 ИЛИ СуммаТовараСНДС <> 0 Тогда
			
			ВыборкаТаблицаТоваров.Сбросить();
			
			Если ВыборкаТаблицаТоваров.НайтиСледующий(Новый Структура("НомерСтроки", ВыборкаПоСтрокам.НомерСтроки)) Тогда
				
				СтруктураПоискаВидаЗапасовПоУмолчанию.Вставить("ГруппаФинансовогоУчета", ВыборкаТаблицаТоваров.ГруппаФинансовогоУчета);
				СтруктураПоискаВидаЗапасовПоУмолчанию.Вставить("НалоговоеНазначение",    ВыборкаТаблицаТоваров.ЦелевоеНалоговоеНазначение);
				МассивВидовЗапасов = ВидыЗапасовПоУмолчанию.НайтиСтроки(СтруктураПоискаВидаЗапасовПоУмолчанию);
				Если МассивВидовЗапасов.Количество() > 0 Тогда
					ВидЗапасовПоУмолчанию = МассивВидовЗапасов[0].ВидЗапасов;
				Иначе
					СтруктураВидаЗапасовПоУмолчанию.Вставить("ГруппаФинансовогоУчета", ВыборкаТаблицаТоваров.ГруппаФинансовогоУчета);	
					СтруктураВидаЗапасовПоУмолчанию.Вставить("НалоговоеНазначение",    ВыборкаТаблицаТоваров.ЦелевоеНалоговоеНазначение);	
					ВидЗапасовПоУмолчанию = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
						Организация,
						ХозяйственнаяОперация,
						СтруктураВидаЗапасовПоУмолчанию
					);
					
					СтрокаВидыЗапасовПоУмолчанию = ВидыЗапасовПоУмолчанию.Добавить();
					СтрокаВидыЗапасовПоУмолчанию.ГруппаФинансовогоУчета = ВыборкаТаблицаТоваров.ГруппаФинансовогоУчета;
					СтрокаВидыЗапасовПоУмолчанию.НалоговоеНазначение    = ВыборкаТаблицаТоваров.ЦелевоеНалоговоеНазначение;
					СтрокаВидыЗапасовПоУмолчанию.ВидЗапасов             = ВидЗапасовПоУмолчанию;
					
				КонецЕсли; 
				
				ОрганизацияПолучатель = Неопределено;
				Если ДополнительныеСвойства.Свойство("ЗаполнятьВидЗапасовПолучателя", ОрганизацияПолучатель)
						И ВидЗапасовПолучателяПоУмолчанию = Неопределено Тогда
				 
					ВидЗапасовПолучателяПоУмолчанию = Справочники.ВидыЗапасов.ВидЗапасовДляПередачиМеждуОрганизациями(
						ВидЗапасовПоУмолчанию,
						ОрганизацияПолучатель,
						ВыборкаТаблицаТоваров.ЦелевоеНалоговоеНазначение,
						ДатаДокумента	
					);
					
				КонецЕсли;
				
				НоваяСтрока = ТаблицаВидыЗапасов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТаблицаТоваров);
				НоваяСтрока.ВидЗапасов = ВидЗапасовПоУмолчанию;
				
				СтруктураДанныхСтроки.Количество				= КоличествоТовара;
				СтруктураДанныхСтроки.СуммаСНДС					= СуммаТовараСНДС;
				СтруктураДанныхСтроки.СуммаНДС					= СуммаНДСТовара;
				СтруктураДанныхСтроки.СуммаВознаграждения		= 0;
				СтруктураДанныхСтроки.СуммаНДСВознаграждения	= 0;
				СтруктураДанныхСтроки.СтавкаНДС					= ВыборкаТаблицаТоваров.СтавкаНДС;
				СтруктураДанныхСтроки.Склад						= ВыборкаТаблицаТоваров.Склад;
				СтруктураДанныхСтроки.Сделка					= ВыборкаТаблицаТоваров.Сделка;
				СтруктураДанныхСтроки.Назначение				= Выборка.Назначение;
				СтруктураДанныхСтроки.ЦелевоеНалоговоеНазначение= ВыборкаТаблицаТоваров.ЦелевоеНалоговоеНазначение;
				СтруктураДанныхСтроки.СкладОтгрузки				= ВыборкаТаблицаТоваров.Склад;
				СтруктураДанныхСтроки.ВидЗапасовПолучателя		= ВидЗапасовПолучателяПоУмолчанию;
				СтруктураДанныхСтроки.ДокументРеализации		= Неопределено;
				СтруктураДанныхСтроки.ЗаказКлиента				= Неопределено;
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДанныхСтроки);
				
				Если (КоличествоТовара > 0 ИЛИ (КоличествоТовара = 0 И СуммаТовараСНДС <> 0)) Тогда
					
					ДополнительныеСвойства.Вставить("НедостаточноОстатковТоваровОрганизаций", Истина);
					Если КонтролироватьОстаткиТоваровОрганизаций ИЛИ КонтролироватьОстаткиТоваровОрганизацийПоНалоговымНазначениям Тогда	
						
						Выборка = ВыборкаПоСтрокам.Выбрать();
						Выборка.Следующий();
						
						НоваяСтрокаОшибок = ТаблицаОшибок.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаОшибок, ВыборкаТаблицаТоваров);
						
						НоваяСтрокаОшибок.Количество		= КоличествоТовара;
						НоваяСтрокаОшибок.Сумма				= СуммаТовараСНДС;
						НоваяСтрокаОшибок.ЕдиницаИзмерения	= Выборка.ЕдиницаИзмерения;
						НоваяСтрокаОшибок.НеУказанНомерГТД	= НеУказанНомерГТД;
						
						Если Не ДополнительныеСвойства.Свойство("ПерезаполнитьВидыЗапасов") Тогда
							Отказ = Истина;
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла; // Выборка по строкам документа
		
	ТабличнаяЧастьВидыЗапасов.Загрузить(ТаблицаВидыЗапасов);
	
	Если КонтролироватьИзменениеНомеровГТД Тогда
		
		ТаблицаНомеровГТД.Колонки.Добавить("НовоеКоличество");
		
		Для Каждого СтрокаТаблицы Из ТаблицаВидыЗапасов Цикл
			
			НоваяСтрока = ТаблицаНомеровГТД.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
			НоваяСтрока.Количество = 0;
			НоваяСтрока.НовоеКоличество = СтрокаТаблицы.Количество;
			
		КонецЦикла;
		
		ТаблицаНомеровГТД.Свернуть("АналитикаУчетаНоменклатуры, НомерГТД", "Количество, НовоеКоличество");
		Для Каждого СтрокаТаблицы Из ТаблицаНомеровГТД Цикл
			Если СтрокаТаблицы.Количество <> СтрокаТаблицы.НовоеКоличество Тогда
				ДополнительныеСвойства.Вставить("ИзменилисьНомераГТД", Истина);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполняет табличную часть "Виды запасов" документов "Отчет по комиссии между организациями" и "Отчет по комиссии между организациями о списании".
//
// Параметры:
//	ВременныеТаблицы - требуется временные таблицы:
//		ТаблицаТоваров, ТаблицаДанныхДокумента, ТаблицаВидыЗапасов, ТаблицаОстатков
//	ДополнительныеСвойства - Дополнительные свойства документа
//	ВидыЗапасов - ТабличнаяЧасть - Табличная часть "Виды запасов" документа
//	ТаблицаОшибок - ТаблицаЗначений - Таблица для отражения ошибок при заполнении видов запасов
//	Отказ - Булево - Признак отказа от записи документа
//  ЗначенияПоУмолчанию - Структура - Содержит в себе перечень необходимых полей для генерации вида запасов.
Процедура ЗаполнитьВидыЗапасовИнтеркампаниОтчетаПоКомиссии(ВременныеТаблицы, ДополнительныеСвойства, ВидыЗапасов, ТаблицаОшибок, Отказ, ЗначенияПоУмолчанию) Экспорт
	
	ПерезаполнитьВидыЗапасов = ДополнительныеСвойства.Свойство("ПерезаполнитьВидыЗапасов");
	ЭтоОтчетОПродажах = ДополнительныеСвойства.Свойство("ЭтоОтчетОПродажах");
	Если Не ПерезаполнитьВидыЗапасов Тогда
		КонтролироватьОстаткиТоваровОрганизаций = ПолучитьФункциональнуюОпцию("КонтролироватьОстаткиТоваровОрганизаций");
	Иначе
		КонтролироватьОстаткиТоваровОрганизаций = Ложь;
	КонецЕсли;
	
	ВидЗапасовПоУмолчанию = Неопределено;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Остатки.ВидЗапасов                 КАК ВидЗапасов,
	|	Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Остатки.НомерГТД                   КАК НомерГТД,
    |	Остатки.Знак                       КАК Знак,
	|	ВЫБОР КОГДА Остатки.Количество < 0
	|		ТОГДА 0 - Остатки.Количество
	|		ИНАЧЕ Остатки.Количество
	|	КОНЕЦ                              КАК Количество,
	|	ВЫБОР КОГДА Остатки.Количество < 0
	|		ТОГДА 0 - Остатки.СуммаВыручки
	|		ИНАЧЕ Остатки.СуммаВыручки
	|	КОНЕЦ                              КАК СуммаВыручки
	|ИЗ
	|	Остатки КАК Остатки
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Количество УБЫВ,
	|	Знак УБЫВ
	|;
	|//////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.АналитикаУчетаНоменклатуры          КАК АналитикаУчетаНоменклатуры,
	|	Товары.Упаковка                            КАК Упаковка,
	|	ВЫБОР КОГДА Товары.Количество < 0
	|		ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ                                      КАК Знак,
	|	СУММА(ВЫБОР КОГДА Товары.Количество < 0
	|		ТОГДА 0 - Товары.Количество
	|		ИНАЧЕ Товары.Количество
	|	КОНЕЦ)                                     КАК Количество,
	|	СУММА(ВЫБОР КОГДА Товары.Количество < 0
	|		ТОГДА 0 - Товары.КоличествоУпаковок
	|		ИНАЧЕ Товары.КоличествоУпаковок
	|	КОНЕЦ)                                     КАК КоличествоУпаковок,
	|	СУММА(ВЫБОР КОГДА Товары.Количество < 0
	|		ТОГДА 0 - Товары.СуммаСНДС
	|		ИНАЧЕ Товары.СуммаСНДС
	|	КОНЕЦ)                                     КАК СуммаСНДС,
	|	СУММА(ВЫБОР КОГДА Товары.Количество < 0
	|		ТОГДА 0 - Товары.СуммаВознаграждения
	|		ИНАЧЕ Товары.СуммаВознаграждения
	|	КОНЕЦ)                                     КАК СуммаВознаграждения,
	|	СУММА(ВЫБОР КОГДА Товары.Количество < 0
	|		ТОГДА 0 - Товары.СуммаНДСВознаграждения
	|		ИНАЧЕ Товары.СуммаНДСВознаграждения
	|	КОНЕЦ)                                     КАК СуммаНДСВознаграждения,
	|	СУММА(ВЫБОР КОГДА Товары.Количество < 0
	|		ТОГДА 0 - Товары.СуммаНДС
	|		ИНАЧЕ Товары.СуммаНДС
	|	КОНЕЦ)                                     КАК СуммаНДС,
	|	Товары.СтавкаНДС                           КАК СтавкаНДС,
	|	Товары.ЦелевоеНалоговоеНазначение 		   КАК ЦелевоеНалоговоеНазначение,
	|	Товары.СтавкаНДСПродажи                    КАК СтавкаНДСПродажи,
	|	Товары.НалоговоеНазначениеСписания 		   КАК НалоговоеНазначениеСписания,
	|	Товары.Склад                               КАК Склад,
	|	Товары.Сделка                              КАК Сделка,
	|	Товары.Назначение                          КАК Назначение,
	|	ВЫБОР 
	|		КОГДА &ИспользоватьГруппыФинУчета
	|		ТОГДА ЕСТЬNULL(Товары.Номенклатура.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                      КАК ГруппаФинансовогоУчета,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения    КАК ЕдиницаИзмерения
	|ИЗ
	|	ТаблицаТоваров КАК Товары
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО Аналитика.КлючАналитики = Товары.АналитикаУчетаНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО 
	|	Товары.АналитикаУчетаНоменклатуры,
	|	Товары.Упаковка,
	|	Товары.СтавкаНДС,
	|	Товары.ЦелевоеНалоговоеНазначение,
	|	Товары.СтавкаНДСПродажи,
	|	Товары.НалоговоеНазначениеСписания,
	|	Товары.Склад,
	|	Товары.Сделка,
	|	Товары.Назначение,
	|	ВЫБОР 
	|		КОГДА &ИспользоватьГруппыФинУчета
	|		ТОГДА ЕСТЬNULL(Товары.Номенклатура.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	Аналитика.Номенклатура.ЕдиницаИзмерения,
	|	ВЫБОР КОГДА Товары.Количество < 0
	|		ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Количество УБЫВ,
	|	Знак УБЫВ
	|");
	
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	Запрос.УстановитьПараметр("ИспользоватьГруппыФинУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Результат = Запрос.ВыполнитьПакет();
	Остатки = Результат[0].Выгрузить();
	ВыборкаТовары = Результат[1].Выбрать();
	
 	СтруктураПоиска = Новый Структура("АналитикаУчетаНоменклатуры, Знак");
	Пока ВыборкаТовары.Следующий() Цикл
		Количество = ВыборкаТовары.Количество;
		СуммаСНДС = ВыборкаТовары.СуммаСНДС;
		СуммаНДС = ВыборкаТовары.СуммаНДС;
		СуммаВознаграждения = ВыборкаТовары.СуммаВознаграждения;
		СуммаНДСВознаграждения = ВыборкаТовары.СуммаНДСВознаграждения;
		КоличествоУпаковок = ВыборкаТовары.КоличествоУпаковок;

		ЗаполнитьЗначенияСвойств(СтруктураПоиска, ВыборкаТовары);
		Для Каждого СтрокаОстатка Из Остатки.НайтиСтроки(СтруктураПоиска) Цикл
			Если СтрокаОстатка.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			НоваяСтрока = ВидыЗапасов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТовары);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОстатка, "ВидЗапасов, НомерГТД");
			Если Количество <= СтрокаОстатка.Количество Тогда
                Если СуммаСНДС <= СтрокаОстатка.СуммаВыручки ИЛИ СуммаСНДС = 0 ИЛИ НЕ ЭтоОтчетОПродажах Тогда
					НоваяСтрока.СуммаСНДС = СуммаСНДС * ВыборкаТовары.Знак;
					НоваяСтрока.СуммаНДС = СуммаНДС * ВыборкаТовары.Знак;
				Иначе
					НоваяСтрока.СуммаСНДС = СтрокаОстатка.СуммаВыручки * СтрокаОстатка.Знак;
					НоваяСтрока.СуммаНДС = СуммаНДС * ВыборкаТовары.Знак * СтрокаОстатка.СуммаВыручки / СуммаСНДС;
				КонецЕсли;
				НоваяСтрока.КоличествоУпаковок = КоличествоУпаковок * ВыборкаТовары.Знак;
				НоваяСтрока.Количество = Количество * ВыборкаТовары.Знак;
				Если ЭтоОтчетОПродажах Тогда
					НоваяСтрока.СуммаВознаграждения = СуммаВознаграждения * ВыборкаТовары.Знак;
					НоваяСтрока.СуммаНДСВознаграждения = СуммаНДСВознаграждения * ВыборкаТовары.Знак;
				КонецЕсли;
				СтрокаОстатка.Количество = СтрокаОстатка.Количество - Количество;
				СтрокаОстатка.СуммаВыручки = СтрокаОстатка.СуммаВыручки - НоваяСтрока.СуммаСНДС * СтрокаОстатка.Знак;
			Иначе
				НоваяСтрока.СуммаСНДС = СтрокаОстатка.СуммаВыручки * СтрокаОстатка.Знак;
				НоваяСтрока.СуммаНДС = СуммаНДС * ВыборкаТовары.Знак * СтрокаОстатка.СуммаВыручки / СуммаСНДС;
				НоваяСтрока.КоличествоУпаковок = Окр(КоличествоУпаковок * СтрокаОстатка.Количество / Количество, 2, 1) * СтрокаОстатка.Знак;
				НоваяСтрока.Количество = СтрокаОстатка.Количество * СтрокаОстатка.Знак;
				Если ЭтоОтчетОПродажах Тогда
					НоваяСтрока.СуммаВознаграждения = Окр(СуммаВознаграждения * СтрокаОстатка.Количество / Количество, 2, 1) * СтрокаОстатка.Знак;
					НоваяСтрока.СуммаНДСВознаграждения = Окр(СуммаНДСВознаграждения * СтрокаОстатка.Количество / Количество, 2, 1) * СтрокаОстатка.Знак;
				КонецЕсли;
				СтрокаОстатка.Количество = 0;
			КонецЕсли;
			СуммаСНДС = СуммаСНДС - НоваяСтрока.СуммаСНДС * ВыборкаТовары.Знак;
			СуммаНДС = СуммаНДС - НоваяСтрока.СуммаНДС * ВыборкаТовары.Знак;
			КоличествоУпаковок = КоличествоУпаковок - НоваяСтрока.КоличествоУпаковок * ВыборкаТовары.Знак;
			Количество = Количество - НоваяСтрока.Количество * ВыборкаТовары.Знак;
			Если ЭтоОтчетОПродажах Тогда
				СуммаВознаграждения = СуммаВознаграждения - НоваяСтрока.СуммаВознаграждения * ВыборкаТовары.Знак;
				СуммаНДСВознаграждения = СуммаНДСВознаграждения - НоваяСтрока.СуммаНДСВознаграждения * ВыборкаТовары.Знак;
			КонецЕсли;
			Если Количество = 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если Количество <> 0 Тогда // остатков не хватило, генерируем вид запасов - собственный.
			НоваяСтрока = ВидыЗапасов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТовары);
			НоваяСтрока.СуммаСНДС = СуммаСНДС * ВыборкаТовары.Знак;
			НоваяСтрока.СуммаНДС = СуммаНДС * ВыборкаТовары.Знак;
			НоваяСтрока.КоличествоУпаковок = КоличествоУпаковок * ВыборкаТовары.Знак;
			НоваяСтрока.Количество = Количество * ВыборкаТовары.Знак;
			Если ЭтоОтчетОПродажах Тогда
				НоваяСтрока.СуммаВознаграждения = СуммаВознаграждения * ВыборкаТовары.Знак;
				НоваяСтрока.СуммаНДСВознаграждения = СуммаНДСВознаграждения * ВыборкаТовары.Знак;
			КонецЕсли;
			Если ВидЗапасовПоУмолчанию = Неопределено Тогда
				ВидЗапасовПоУмолчанию = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
					ЗначенияПоУмолчанию.Организация,
					Перечисления.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями,
					ЗначенияПоУмолчанию);
			КонецЕсли;
			НоваяСтрока.ВидЗапасов = ВидЗапасовПоУмолчанию;
			
			ДополнительныеСвойства.Вставить("НедостаточноОстатковТоваровОрганизаций", Истина);
			Если КонтролироватьОстаткиТоваровОрганизаций Тогда // добавим в таблицу ошибок
				НоваяСтрокаОшибок = ТаблицаОшибок.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаОшибок, ВыборкаТовары);
				НоваяСтрокаОшибок.Количество = Количество;
				НоваяСтрокаОшибок.Сумма = СуммаСНДС;
				НоваяСтрокаОшибок.ЕдиницаИзмерения	= ВыборкаТовары.ЕдиницаИзмерения;
				Если Не ПерезаполнитьВидыЗапасов Тогда
					Отказ = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

// Функция дополняет таблицы товаров или видов запасов обязательными колонками
//	для формирования временных таблиц данных документа.
Функция ТаблицаДополненнаяОбязательнымиКолонками(Таблица) Экспорт
	
	Если Таблица.Колонки.Найти("ДокументРеализации") = Неопределено Тогда
		Таблица.Колонки.Добавить("ДокументРеализации", Новый ОписаниеТипов("ДокументСсылка.РеализацияТоваровУслуг, ДокументСсылка.ОтчетОРозничныхПродажах"));
	КонецЕсли;
	
	Возврат Таблица;
	
КонецФункции

// Процедура заполняет виды запасов в табличной части "Товары" документа поступления товаров.
//
// Параметры:
//	МенеджерВременныхТаблиц - требуется временные таблица ИсходнаяТаблицаТоваров
// 			(НомерСтроки, Номенклатура, Сделка, Подразделение, Менеджер, Организация, ХозяйственнаяОперация, ТипЗапасов, Поставщик, Соглашение, Валюта, НалоговоеНазначение) 
//	ТабличнаяЧастьТовары - Табличная часть документа
//	ВидЗапасовДокумента - СправочникСсылка.ВидыЗапасов - Найденный вид запасов (возвращаемое значение). Используется если параметр "ТабличнаяЧастьТовары" имеет значение Неопределено.
//		
Процедура ЗаполнитьВидыЗапасовВТабличнойЧастиТовары(МенеджерВременныхТаблиц, ТабличнаяЧастьТовары, ВидЗапасовДокумента = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Подразделение КАК Подразделение,
	|	ТаблицаТоваров.Менеджер КАК Менеджер,
	|	ТаблицаТоваров.Сделка КАК Сделка,
	|	ТаблицаТоваров.Назначение КАК Назначение,
	|	ТаблицаТоваров.ЭтоВозвратнаяТара КАК ЭтоВозвратнаяТара,
	|	
	|	ЕСТЬNULL(Сделки.ОбособленныйУчетТоваровПоСделке, ЛОЖЬ) КАК ОбособленныйУчетТоваровПоСделке,
	|	СтруктураПредприятия.ВариантОбособленногоУчетаТоваров КАК ВариантОбособленногоУчетаТоваров,
	|	
	|	ВЫБОР
	|		КОГДА
	|			ТаблицаТоваров.ЭтоВозвратнаяТара
	|		ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		ИНАЧЕ
	|			ТаблицаТоваров.ТипЗапасов
	|	КОНЕЦ КАК ТипЗапасов,
	|	ТаблицаТоваров.Организация,
	|	ВЫБОР
	|		КОГДА
	|			ТаблицаТоваров.ЭтоВозвратнаяТара
	|		ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
	|		ИНАЧЕ
	|			ТаблицаТоваров.ХозяйственнаяОперация
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	ТаблицаТоваров.Соглашение,
	|	ТаблицаТоваров.Валюта,
	|	ТаблицаТоваров.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ТаблицаТоваров.НалоговоеНазначениеОрганизации КАК НалоговоеНазначениеОрганизации,
	|	ТаблицаТоваров.Поставщик,
	|	ТаблицаТоваров.Контрагент,
	|	ТаблицаТоваров.Договор,
	|	
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ТаблицаТоваров.Номенклатура.ГруппаФинансовогоУчета
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|
	|	ВЫБОР КОГДА ТаблицаТоваров.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|		ТаблицаТоваров.Назначение
	|
	|	КОГДА ЕСТЬNULL(Сделки.ОбособленныйУчетТоваровПоСделке, ЛОЖЬ)
	|		И &ФормироватьВидыЗапасовПоСделкам
	|	ТОГДА
	|		Сделки.Ссылка
	|
	|	КОГДА СтруктураПредприятия.ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоМенеджерамПодразделения)
	|		И &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|	ТОГДА
	|		ТаблицаТоваров.Менеджер
	|
	|	КОГДА СтруктураПредприятия.ВариантОбособленногоУчетаТоваров = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленногоУчетаТоваров.ПоПодразделению)
	|		И &ФормироватьВидыЗапасовПоПодразделениямМенеджерам
	|	ТОГДА
	|		ТаблицаТоваров.Подразделение
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК АналитикаПредназначения,
	|	ТаблицаТоваров.ГруппаПродукции
	|
	|ПОМЕСТИТЬ ТаблицаТоваровСАналитикой
	|ИЗ
	|	ИсходнаяТаблицаТоваров КАК ТаблицаТоваров
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.СтруктураПредприятия КАК СтруктураПредприятия
	|	ПО
	|		ТаблицаТоваров.Подразделение = СтруктураПредприятия.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.СделкиСКлиентами КАК Сделки
	|	ПО
	|		ТаблицаТоваров.Сделка = Сделки.Ссылка
	|	
	|ГДЕ
	|	ТаблицаТоваров.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), 
	|												   ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки												КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура												КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)					КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)							КАК Менеджер,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)						КАК Сделка,
	|	ТаблицаТоваров.Назначение												КАК Назначение,
	|	ЛОЖЬ																	КАК ЭтоВозвратнаяТара,
	|	ЛОЖЬ																	КАК ОбособленныйУчетТоваровПоСделке,
	|	НЕОПРЕДЕЛЕНО															КАК ВариантОбособленногоУчетаТоваров,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)								КАК ТипЗапасов,
	|	ТаблицаТоваров.Организация												КАК Организация,
	|	ТаблицаТоваров.ХозяйственнаяОперация									КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка)				КАК Соглашение,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)								КАК Валюта,
	|	ТаблицаТоваров.НалоговоеНазначение										КАК НалоговоеНазначение,
	|	ТаблицаТоваров.НалоговоеНазначениеОрганизации 							КАК НалоговоеНазначениеОрганизации,
	|	НЕОПРЕДЕЛЕНО															КАК Поставщик,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)							КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)					КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)	КАК ГруппаФинансовогоУчета,
	|	ТаблицаТоваров.Назначение												КАК АналитикаПредназначения,
	|	ТаблицаТоваров.ГруппаПродукции											КАК ГруппаПродукции
	|	
	|ИЗ
	|	ИсходнаяТаблицаТоваров КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ТаблицаТоваров.АналитикаПредназначения КАК АналитикаПредназначения,
	|	ТаблицаТоваров.ТипЗапасов КАК ТипЗапасов,
	|	ТаблицаТоваров.Организация,
	|	ТаблицаТоваров.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаТоваров.Соглашение,
	|	ТаблицаТоваров.Валюта,
	|	ТаблицаТоваров.НалоговоеНазначение КАК НалоговоеНазначение,
    |	ТаблицаТоваров.НалоговоеНазначениеОрганизации КАК НалоговоеНазначениеОрганизации,
	|	ТаблицаТоваров.Поставщик,
	|	ТаблицаТоваров.Контрагент,
	|	ТаблицаТоваров.Договор,
	|	ТаблицаТоваров.ГруппаПродукции,
	|
	|	ТаблицаТоваров.Менеджер КАК Менеджер,
	|	ТаблицаТоваров.Подразделение КАК Подразделение,
	|	ТаблицаТоваров.Сделка КАК Сделка,
	|	ТаблицаТоваров.Назначение КАК Назначение,
	|	ТаблицаТоваров.ОбособленныйУчетТоваровПоСделке КАК ОбособленныйУчетТоваровПоСделке,
	|	ТаблицаТоваров.ВариантОбособленногоУчетаТоваров КАК ВариантОбособленногоУчетаТоваров,
	|
	|	АналитикаВидовЗапасов.КлючАналитики КАК ВидЗапасов
	|ИЗ
	|	ТаблицаТоваровСАналитикой КАК ТаблицаТоваров
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаВидовЗапасов КАК АналитикаВидовЗапасов
	|	ПО
	|		ТаблицаТоваров.Организация = АналитикаВидовЗапасов.Организация
	|		И ТаблицаТоваров.ТипЗапасов = АналитикаВидовЗапасов.ТипЗапасов
	|		И ТаблицаТоваров.Поставщик = АналитикаВидовЗапасов.Поставщик
	|		И ТаблицаТоваров.Контрагент = АналитикаВидовЗапасов.Контрагент
	|		И ТаблицаТоваров.Соглашение = АналитикаВидовЗапасов.Соглашение
	|		И ТаблицаТоваров.Договор = АналитикаВидовЗапасов.Договор
	|		И ТаблицаТоваров.Валюта = АналитикаВидовЗапасов.Валюта
	|		И ТаблицаТоваров.НалоговоеНазначение = АналитикаВидовЗапасов.НалоговоеНазначение 
	|		И ТаблицаТоваров.АналитикаПредназначения = АналитикаВидовЗапасов.АналитикаПредназначения
	|		И ТаблицаТоваров.ГруппаФинансовогоУчета = АналитикаВидовЗапасов.ГруппаФинансовогоУчета
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|
	|ИТОГИ ПО
	|	ГруппаФинансовогоУчета,
	|	АналитикаПредназначения,
	|	ТаблицаТоваров.ГруппаПродукции,
	|	ТипЗапасов,
	|	НалоговоеНазначение,
	|	ЭтоВозвратнаяТара
	|");
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоСделкам", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоСделкам"));
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоПодразделениямМенеджерам", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоПодразделениямМенеджерам"));
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ВыборкаПоГруппам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоГруппам.Следующий() Цикл
		
		ВыборкаПоАналитике = ВыборкаПоГруппам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоАналитике.Следующий() Цикл
			
			ВыборкаПоГруппеПродукции = ВыборкаПоАналитике.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоГруппеПродукции.Следующий() Цикл
				
				ВыборкаПоТипу = ВыборкаПоГруппеПродукции.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаПоТипу.Следующий() Цикл
				
					ВидЗапасов = Неопределено;
					
					ВыборкаПоНалоговымНазначениям = ВыборкаПоТипу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаПоНалоговымНазначениям.Следующий() Цикл
						
						ВидЗапасов = Неопределено;
					
						ВыборкаПоТаре = ВыборкаПоНалоговымНазначениям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока ВыборкаПоТаре.Следующий() Цикл
						
							ВидЗапасов = Неопределено;
							
							Выборка = ВыборкаПоТаре.Выбрать();
							Пока Выборка.Следующий() Цикл
						
								Если Не ЗначениеЗаполнено(ВидЗапасов) Тогда
									Если ЗначениеЗаполнено(Выборка.ВидЗапасов) Тогда
										ВидЗапасов = Выборка.ВидЗапасов;
									Иначе
										ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
											Выборка.Организация,
											Выборка.ХозяйственнаяОперация,
											Выборка);
									КонецЕсли;
								КонецЕсли;
								
								Если ТабличнаяЧастьТовары <> Неопределено Тогда
									СтрокаТаблицы = ТабличнаяЧастьТовары.Найти(Выборка.НомерСтроки, "НомерСтроки");
									СтрокаТаблицы.ВидЗапасов = ВидЗапасов;
								Иначе
									ВидЗапасовДокумента = ВидЗапасов;
								КонецЕсли;
							
							КонецЦикла;
						КонецЦикла;
					КонецЦикла;
				КонецЦикла
			
			КонецЦикла
		
		КонецЦикла
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура выполняет проведение документов по регистру "Себестоимость товаров".
//
Процедура ПроведениеДокументовПоРегиструСебестоимостьТоваров() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗаписьЖурналаРегистрации(
		НСтр("ru='Запасы сервер.Проведение документов по регистру себестоимость товаров';uk='Запаси сервер.Проведення документів за регістру собівартість товарів'"), 
		УровеньЖурналаРегистрации.Информация, , ,
		НСтр("ru='Начато перепроведение документов по регистру ""Себестоимость товаров""';uk='Розпочато перепроведення документів по регістру ""Собівартість товарів""'"), 
		РежимТранзакцииЗаписиЖурналаРегистрации.Транзакционная);
		
	ИспользоватьВидыЗапасов = Константы.УчитыватьСебестоимостьТоваровПоВидамЗапасов.Получить();
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Себестоимость.Регистратор КАК Ссылка,
	|	Себестоимость.МоментВремени КАК МоментВремени
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК Себестоимость
	|ГДЕ
	| ТИПЗНАЧЕНИЯ(Себестоимость.Регистратор) <> ТИП(Документ.РасчетСебестоимостиТоваров)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Себестоимость.Регистратор КАК Ссылка,
	|	Себестоимость.МоментВремени КАК МоментВремени
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК Себестоимость
	|ГДЕ
	|	&ОчиститьВидыЗапасов
	|	И ТИПЗНАЧЕНИЯ(Себестоимость.Регистратор) = ТИП(Документ.РасчетСебестоимостиТоваров)
	|УПОРЯДОЧИТЬ ПО
	|	Себестоимость.МоментВремени Возр
	|");
	
	Запрос.УстановитьПараметр("ОчиститьВидыЗапасов", НЕ ИспользоватьВидыЗапасов);
	ДопСвойства = Новый Структура("ЭтоНовый, РежимЗаписи", Ложь, РежимЗаписиДокумента.Проведение);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если НЕ ИспользоватьВидыЗапасов Тогда
			// Очищаем виды запасов для всех регистраторов
			ОчиститьВидыЗапасовВСебестоимости(Выборка.Ссылка);
			Если ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.РасчетСебестоимостиТоваров") Тогда
				ОчиститьВидыЗапасовСтоимостиТоваров(Выборка.Ссылка);
			КонецЕсли;
		Иначе
			// Проводим документы по регистру "Себестоимость товаров"
			// "Расчет себестоимости товаров" необходимо провести позже вручную
			НачатьТранзакцию();
			Блокировка = Новый БлокировкаДанных;
			ИмяДокумента = Выборка.Ссылка.Метаданные().Имя;
			ЭлементБлокировки = Блокировка.Добавить("Документ."+ИмяДокумента);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			Блокировка.Заблокировать();
			
			Отказ = Ложь;
			
			ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Выборка.Ссылка, ДопСвойства, РежимПроведенияДокумента.Неоперативный);
			Документы[ИмяДокумента].ИнициализироватьДанныеДокумента(Выборка.Ссылка, ДопСвойства);
			
			Если ДопСвойства.ТаблицыДляДвижений.Свойство("ТаблицаСебестоимостьТоваров") Тогда
				ЗаписатьДвиженияВБазу(
					РегистрыНакопления.СебестоимостьТоваров, 
					ДопСвойства.ТаблицыДляДвижений.ТаблицаСебестоимостьТоваров,
					Выборка.Ссылка);
			КонецЕсли;
			ЗафиксироватьТранзакцию();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры 

// Процедура выполняет перепроведение документов, которые некорректно проведены по товарам организаций
//
Процедура ПерепроведениеДокументовПоТоварамОрганизаций() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗаписьЖурналаРегистрации(
		НСтр("ru='Запасы сервер.Перепроведение документов по товарам организаций';uk='Запаси сервер.Повторне проведення документів по товарах організацій'"), 
		УровеньЖурналаРегистрации.Информация, , ,
		НСтр("ru='Начато перепроведение документов по товарам организаций';uk='Розпочато перепроведення документів по товарах організацій'"), 
		РежимТранзакцииЗаписиЖурналаРегистрации.Транзакционная);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|    ТоварыОрганизаций.Регистратор КАК Регистратор
	|ИЗ (
	|	ВЫБРАТЬ
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|		ТоварыОрганизаций.Организация,
	|		ТоварыОрганизаций.Регистратор,
	|		МАКСИМУМ(ТоварыОрганизаций.ВидЗапасов) КАК ВидЗапасов,
	|		МАКСИМУМ(ТоварыОрганизаций.НомерГТД) КАК НомерГТД
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций.ОстаткиИОбороты(,, Регистратор) КАК ТоварыОрганизаций
	|	ГДЕ
	|		ТоварыОрганизаций.КоличествоКонечныйОстаток < 0
	|		И Не ТоварыОрганизаций.Регистратор ССЫЛКА Документ.КорректировкаРегистров
	|		
	|	СГРУППИРОВАТЬ ПО
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|		ТоварыОрганизаций.Организация,
	|		ТоварыОрганизаций.Регистратор
	|		
	|	) КАК ТоварыОрганизаций
	|	
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрганизаций.Регистратор
	|    
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыОрганизаций.Регистратор.Дата Возр,
	|	ТоварыОрганизаций.Регистратор 
	|");
	
	Отказ = Ложь;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(Выборка.Регистратор) Тогда
			ДокументОбъект = Выборка.Регистратор.ПолучитьОбъект();
			ДокументОбъект.ДополнительныеСвойства.Вставить("ПерезаполнитьВидыЗапасов", Истина);
			Попытка
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Исключение
				ЗаписьЖурналаРегистрации(
					НСтр("ru='Ошибка при проведении документа';uk='Помилка при проведенні документа'"), 
					УровеньЖурналаРегистрации.Ошибка,
					,
					, 
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ПерепроведениеДокументовПоТоварамОрганизаций()

#КонецОбласти

#Область ПроцедурыЗаписиДвиженийВРегистр

Процедура ОтразитьТоварыПереданныеПереработчику(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыПереданныеПереработчику;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Движения.ТоварыПереданныеПереработчику.Записывать = Истина;
	Движения.ТоварыПереданныеПереработчику.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьТоварыПолученныеОтПереработчика(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыПолученныеОтПереработчика;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Движения.ТоварыПолученныеОтПереработчика.Записывать = Истина;
	Движения.ТоварыПолученныеОтПереработчика.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьТоварыНаСкладах(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыНаСкладах;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.ТоварыНаСкладах.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьДатыПоступленияТоваровОрганизаций(ДополнительныеСвойства, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДатыПоступленияТоваровОрганизаций;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из Таблица Цикл
		МенеджерЗаписи = РегистрыСведений.ДатыПоступленияТоваровОрганизаций.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СтрокаТаблицы);
		МенеджерЗаписи.Записать(Истина);	
	КонецЦикла;

КонецПроцедуры // ОтразитьДатыПоступленияТоваровОрганизаций()

Процедура ОтразитьТоварыОрганизаций(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыОрганизаций;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Движения.ТоварыОрганизаций.Записывать = Истина;
	Движения.ТоварыОрганизаций.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьТоварыОрганизацийКПередаче(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыОрганизацийКПередаче;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ТоварыОрганизацийКПередаче.Записывать = Истина;
	Движения.ТоварыОрганизацийКПередаче.Загрузить(Таблица);
	
КонецПроцедуры 

Процедура ОтразитьТоварыОрганизацийКОформлению(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыОрганизацийКОформлению;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ТоварыОрганизацийКОформлению.Записывать = Истина;
	Движения.ТоварыОрганизацийКОформлению.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьТоварыПереданныеНаКомиссию(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыПереданныеНаКомиссию;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ТоварыПереданныеНаКомиссию.Записывать = Истина;
	Движения.ТоварыПереданныеНаКомиссию.Загрузить(Таблица);

КонецПроцедуры

Процедура ОтразитьДатыПередачиТоваровНаКомиссию(ДополнительныеСвойства, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДатыПередачиТоваровНаКомиссию;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из Таблица Цикл
		МенеджерЗаписи = РегистрыСведений.ДатыПередачиТоваровНаКомиссию.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СтрокаТаблицы);
		МенеджерЗаписи.Записать(Истина);	
	КонецЦикла;

КонецПроцедуры 

Процедура ОтразитьТоварыКОформлениюОтчетовКомитента(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыКОформлениюОтчетовКомитенту;
	
	Если Отказ ИЛИ Таблица .Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ТоварыКОформлениюОтчетовКомитенту.Записывать = Истина;
	Движения.ТоварыКОформлениюОтчетовКомитенту.Загрузить(Таблица);
	
КонецПроцедуры 

Процедура ОтразитьСвободныеОстатки(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаСвободныеОстатки;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.СвободныеОстатки.Записывать = Истина;
	Движения.СвободныеОстатки.Загрузить(Таблица);

КонецПроцедуры

Процедура ОтразитьТоварыКОформлениюИзлишковНедостач(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыКОформлениюИзлишковНедостач;

	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ТоварыКОформлениюИзлишковНедостач.Записывать = Истина;
	Движения.ТоварыКОформлениюИзлишковНедостач.Загрузить(Таблица);

КонецПроцедуры


Процедура ОтразитьОбеспечениеЗаказов(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаОбеспечениеЗаказов;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ОбеспечениеЗаказов.Записывать = Истина;
	Движения.ОбеспечениеЗаказов.Загрузить(Таблица);

КонецПроцедуры

Процедура ОтразитьОбеспечениеЗаказовРаботами(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаОбеспечениеЗаказовРаботами;
	
	Если Отказ Или Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ОбеспечениеЗаказовРаботами.Записывать = Истина;
	Движения.ОбеспечениеЗаказовРаботами.Загрузить(Таблица);

КонецПроцедуры

#КонецОбласти

#Область ПроцедурыРегламентныхЗаданий

// Процедуры обновления информации о доступности товаров.
//
Процедура ОбновитьИнформациюОДоступностиТоваровДляВнешнихПользователей() Экспорт

	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания();
	
	УстановитьПривилегированныйРежим(Истина);

	НаборЗаписей = РегистрыСведений.ДоступностьТоваровДляВнешнихПользователей.СоздатьНаборЗаписей();
	НаборЗаписей.Записать(Истина);

	ВыгрузитьГрафикДоступностьТоваров();

КонецПроцедуры

#КонецОбласти

#Область Прочее

// Возвращает вид запасов отгрузки
Функция ВидЗапасовОтгрузки(Выборка, Организация, ЦелевоеНалоговоеНазначение, ВозвратБезПередачи, ОстальныеВидыЗапасов)	
	ВидЗапасовОтгрузки = Неопределено;
	Если ЗначениеЗаполнено(Выборка.ВидЗапасовОтгрузки) Тогда
		Если Не Выборка.РеализацияЗапасовДругойОрганизации И Выборка.ОрганизацияОтгрузки = Организация Тогда
			ВидЗапасовОтгрузки = Выборка.ВидЗапасовОтгрузки;
		ИначеЕсли Не Выборка.РеализацияЗапасовДругойОрганизации Тогда
			ВидЗапасовОтгрузки = ВозвратБезПередачи.Получить(Выборка.ВидЗапасовОтгрузки);
		Иначе
			ВидЗапасовОтгрузки = ОстальныеВидыЗапасов.Получить(Выборка.ВидЗапасовОтгрузки);
		КонецЕсли;
		Если ВидЗапасовОтгрузки = Неопределено Тогда
			ВидЗапасовОтгрузки = Справочники.ВидыЗапасов.ВидЗапасовДляПередачиМеждуОрганизациями(
				Выборка.ВидЗапасовОтгрузки,
				Организация,
				ЦелевоеНалоговоеНазначение, 
                Выборка.ДатаДокумента);
			Если Не Выборка.РеализацияЗапасовДругойОрганизации Тогда
				ВозвратБезПередачи.Вставить(Выборка.ВидЗапасовОтгрузки, ВидЗапасовОтгрузки);
			Иначе
				ОстальныеВидыЗапасов.Вставить(Выборка.ВидЗапасовОтгрузки, ВидЗапасовОтгрузки);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат ВидЗапасовОтгрузки;
КонецФункции

// Получает таблицу остатков к заказу с учетом введенных на основании документов и состояния обеспечения потребности.
//
// Параметры:
//	ДокументСсылка - ДокументСсылка.ЗаказКлиента, ДокументСсылка.ЗаказНаПроизводство, ДокументСсылка.ЗаказНаПеремещение,
//		ДокументСсылка.ЗаказНаВнутреннееПотребление, ДокументСсылка.ЗаказНаРемонт, ДокументСсылка.ЗаказНаСборкуРазборку,
//		ДокументСсылка.ВозвратТоваровОтКлиента - документ-основание
//	ПолучатьТовары - Булево - признак получения товаров
//	ПолучатьУслуги - Булево - признак получения услуг
//	ПолучатьРаботы - Булево - признак получения работ
//	Отбор          - Произвольный - отбор, реализованный в методе ВременныеТаблицыТоваровЗаказа конкретного документа
//
// Возвращаемое значение:
//	ТаблицаЗначений - таблица остатков
//
Функция ТаблицаОстатковКЗаказу(ДокументСсылка, ПолучатьТовары = Истина, ПолучатьУслуги = Истина, ПолучатьРаботы = Истина, Отбор = Неопределено) Экспорт
	
	ИмяДокумента = ДокументСсылка.Метаданные().Имя;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	УстановитьПривилегированныйРежим(Истина);
    
	Если ЗначениеЗаполнено(Отбор) Тогда
		Документы[ИмяДокумента].ВременныеТаблицыТоваровЗаказа(МенеджерВременныхТаблиц, ДокументСсылка, Отбор);
	Иначе
		Документы[ИмяДокумента].ВременныеТаблицыТоваровЗаказа(МенеджерВременныхТаблиц, ДокументСсылка);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОбеспечениеТоварами.Номенклатура КАК Номенклатура,
	|	ОбеспечениеТоварами.Характеристика КАК Характеристика,
	|	ОбеспечениеТоварами.Склад КАК Склад,
	|	ОбеспечениеТоварами.Назначение КАК Назначение,
	|	ОбеспечениеТоварами.КЗаказуОстаток КАК КЗаказу
	|ПОМЕСТИТЬ Потребность
	|ИЗ
	|	РегистрНакопления.ОбеспечениеЗаказов.Остатки(
	|			,
	|			(Номенклатура, Характеристика, Склад, Назначение) В
	|				(ВЫБРАТЬ
	|					Т.Номенклатура,
	|					Т.Характеристика,
	|					Т.Склад,
	|					Т.Назначение
	|				ИЗ
	|					НоменклатураЗаказаОбособленная КАК Т)) КАК ОбеспечениеТоварами
	|ГДЕ
	|	ОбеспечениеТоварами.КЗаказуОстаток > 0
	|	И &ПолучатьТовары
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОбеспечениеРаботами.Номенклатура,
	|	ОбеспечениеРаботами.Характеристика,
	|	ОбеспечениеРаботами.Подразделение,
	|	ОбеспечениеРаботами.Назначение,
	|	ОбеспечениеРаботами.КОбеспечениюОстаток
	|ИЗ
	|	РегистрНакопления.ОбеспечениеЗаказовРаботами.Остатки(
	|			,
	|			(Номенклатура, Характеристика, Подразделение, Назначение) В
	|				(ВЫБРАТЬ
	|					Т.Номенклатура,
	|					Т.Характеристика,
	|					Т.Подразделение,
	|					Т.Назначение
	|				ИЗ
	|					НоменклатураЗаказаОбособленная КАК Т)) КАК ОбеспечениеРаботами
	|ГДЕ
	|	ОбеспечениеРаботами.КОбеспечениюОстаток > 0
	|	И &ПолучатьРаботы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Назначение,
	|	Номенклатура,
	|	Характеристика,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таб.НомерСтроки КАК НомерСтроки,
	|	Таб.Номенклатура КАК Номенклатура,
	|	Таб.Характеристика КАК Характеристика,
	|	Таб.Склад КАК Склад,
	|	Таб.Подразделение КАК Подразделение,
	|	Таб.Назначение КАК Назначение,
	|	Таб.Упаковка КАК Упаковка,
	|	Таб.Количество КАК Количество
	|ПОМЕСТИТЬ ВТОбособленные
	|ИЗ
	|	(ВЫБРАТЬ
	|		Т.Номенклатура КАК Номенклатура,
	|		Т.Характеристика КАК Характеристика,
	|		Т.Склад КАК Склад,
	|		Т.Подразделение КАК Подразделение,
	|		Т.Назначение КАК Назначение,
	|		ВЫБОР
	|			КОГДА Т.Заказано > ВтКЗаказу.КЗаказу
	|				ТОГДА ВтКЗаказу.КЗаказу
	|			ИНАЧЕ Т.Заказано
	|		КОНЕЦ КАК Количество,
	|		Т.Упаковка КАК Упаковка,
	|		Т.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		НоменклатураЗаказаОбособленная КАК Т
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Потребность КАК ВтКЗаказу
	|			ПО Т.Номенклатура = ВтКЗаказу.Номенклатура
	|				И Т.Характеристика = ВтКЗаказу.Характеристика
	|				И Т.Склад = ВтКЗаказу.Склад
	|				И Т.Назначение = ВтКЗаказу.Назначение
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Т.Номенклатура,
	|		Т.Характеристика,
	|		НЕОПРЕДЕЛЕНО,
	|		Т.Подразделение,
	|		Т.Назначение,
	|		ВЫБОР
	|			КОГДА Т.Заказано > ВтКЗаказу.КЗаказу
	|				ТОГДА ВтКЗаказу.КЗаказу
	|			ИНАЧЕ Т.Заказано
	|		КОНЕЦ,
	|		Т.Упаковка,
	|		Т.НомерСтроки
	|	ИЗ
	|		НоменклатураЗаказаОбособленная КАК Т
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Потребность КАК ВтКЗаказу
	|			ПО Т.Номенклатура = ВтКЗаказу.Номенклатура
	|				И Т.Характеристика = ВтКЗаказу.Характеристика
	|				И Т.Подразделение = ВтКЗаказу.Склад
	|				И Т.Назначение = ВтКЗаказу.Назначение) КАК Таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураЗаказаНеОбособленная.Номенклатура,
	|	НоменклатураЗаказаНеОбособленная.Характеристика,
	|	НоменклатураЗаказаНеОбособленная.Заказано КАК Количество,
	|	НоменклатураЗаказаНеОбособленная.Упаковка,
	|	НоменклатураЗаказаНеОбособленная.Склад,
	|	НоменклатураЗаказаНеОбособленная.Подразделение,
	|	НоменклатураЗаказаНеОбособленная.НомерСтроки
	|ПОМЕСТИТЬ ВТНеОбособленные
	|ИЗ
	|	НоменклатураЗаказаНеОбособленная КАК НоменклатураЗаказаНеОбособленная
	|ГДЕ
	|	(НоменклатураЗаказаНеОбособленная.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|				И &ПолучатьТовары
	|			ИЛИ НоменклатураЗаказаНеОбособленная.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|				И &ПолучатьУслуги
	|			ИЛИ НоменклатураЗаказаНеОбособленная.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|				И &ПолучатьРаботы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОбособленные.НомерСтроки КАК НомерСтроки,
	|	ВТОбособленные.Номенклатура КАК Номенклатура,
	|	ВТОбособленные.Характеристика КАК Характеристика,
	|	ВТОбособленные.Номенклатура.СтавкаНДС КАК СтавкаНДС,
	|	ВТОбособленные.Назначение КАК Назначение,
	|	ВТОбособленные.Упаковка КАК Упаковка,
	|	ВТОбособленные.Количество КАК Количество,
	|	ВТОбособленные.Количество / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) КАК КоличествоУпаковок,
	|	ВТОбособленные.Склад КАК Склад,
	|	ВТОбособленные.Подразделение КАК Подразделение,
	|	ВЫБОР КОГДА ВТОбособленные.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК СписатьНаРасходы
	|ИЗ
	|	ВТОбособленные КАК ВТОбособленные
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТНеОбособленные.НомерСтроки,
	|	ВТНеОбособленные.Номенклатура,
	|	ВТНеОбособленные.Характеристика,
	|	ВТНеОбособленные.Номенклатура.СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка),
	|	ВТНеОбособленные.Упаковка,
	|	ВТНеОбособленные.Количество,
	|	ВТНеОбособленные.Количество / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) КАК КоличествоУпаковок,
	|	ВТНеОбособленные.Склад,
	|	ВТНеОбособленные.Подразделение,
	|	ВЫБОР КОГДА ВТНеОбособленные.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	ВТНеОбособленные КАК ВТНеОбособленные
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ВТОбособленные.Упаковка",
		"ВТОбособленные.Номенклатура"));
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ВТНеОбособленные.Упаковка",
		"ВТНеОбособленные.Номенклатура"));
		
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	Запрос.УстановитьПараметр("ПолучатьТовары", ПолучатьТовары);
	Запрос.УстановитьПараметр("ПолучатьУслуги", ПолучатьУслуги);
	Запрос.УстановитьПараметр("ПолучатьРаботы", ПолучатьРаботы);
	
	ТаблицаТоваров = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаТоваров;
	
КонецФункции

// Дополняет таблицу видов запасов документом реализации и складом отгрузки
//
// Параметры:
//	ДокументСсылка - ДокументСсылка.ВозвратТоваровОтКлиента, ДокументСсылка.ВозвратТоваровМеждуОрганизациями - документ, формирующий движения
//	Организация - СправочникСсылка.Организации
//	Комиссионер - СправочникСсылка.Партнеры
//	Дата - Дата - период получения остатков
//	Соглашение - СправочникСсылка.СоглашенияСКлиентами
//	ВидыЗапасов - ТабличнаяЧасть - таб. часть для дополнения
//	Ресурсы - Строка - ресурсы табличной части виды запасов, которые необходимо распределить проворционально количеству
//
// Возвращаемое значение:
//	ТаблицаЗначений - таблица ошибок подбора документов реализации
//
Функция ДополнитьВидыЗапасовДокументомРеализации(ДокументСсылка, Организация, Комиссионер, Дата, Соглашение, ВидыЗапасов, Знач Ресурсы = "") Экспорт
	
#Область ТекстЗапроса
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Т.АналитикаУчетаНоменклатуры,
	|	&ВидЗапасов,
	|	Т.НомерГТД,
	|	Т.НомерСтроки
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	&ВидыЗапасов КАК Т
	|ГДЕ
	|	Т.ДокументРеализации = НЕОПРЕДЕЛЕНО
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналитикаПередачи.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов,
	|	Т.НомерГТД,
	|	Т.НомерСтроки
	|ПОМЕСТИТЬ ВидыЗапасов
	|ИЗ
	|	ВтВидыЗапасов КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО Аналитика.КлючАналитики = Т.АналитикаУчетаНоменклатуры
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПередачи
	|		ПО АналитикаПередачи.Номенклатура = Аналитика.Номенклатура
	|		И АналитикаПередачи.Характеристика = Аналитика.Характеристика
	|		И АналитикаПередачи.Серия = &Серия
	|		И АналитикаПередачи.Склад = &Комиссионер
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО ВидыЗапасов.Ссылка = Т.ВидЗапасов
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	НомерГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.АналитикаУчетаНоменклатуры,
	|	Товары.ВидЗапасов,
	|	Товары.НомерГТД,
	|	Товары.СкладОтгрузки,
	|	Товары.ДокументРеализации,
	|	СУММА(Товары.Количество) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ПереданныеТовары
	|ИЗ (
	|	ВЫБРАТЬ // ВидыЗапасов, переданные на комисию
	|		ВЫБОР КОГДА Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
	|			Товары.ДокументРеализации
	|		ИНАЧЕ
	|			Товары.Регистратор
	|		КОНЕЦ КАК ДокументРеализации,
	|		ЕСТЬNULL(АналитикаОтгрузки.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) КАК СкладОтгрузки,
	|		Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Товары.ВидЗапасов КАК ВидЗапасов,
	|		Товары.НомерГТД КАК НомерГТД,
	|		ВЫБОР КОГДА Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
	|			-Товары.Количество
	|		ИНАЧЕ
	|			Товары.Количество
	|		КОНЕЦ КАК Количество
	|	ИЗ
	|		РегистрНакопления.ТоварыПереданныеНаКомиссию КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВидыЗапасов КАК ВидыЗапасов
	|			ПО Товары.АналитикаУчетаНоменклатуры = ВидыЗапасов.АналитикаУчетаНоменклатуры
	|			И Товары.ВидЗапасов = ВидыЗапасов.ВидЗапасов
	|			И Товары.НомерГТД = ВидыЗапасов.НомерГТД
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаОтгрузки
	|			ПО Товары.КорАналитикаУчетаНоменклатуры = АналитикаОтгрузки.КлючАналитики
	|	ГДЕ
	|		НЕ Товары.Регистратор = &Ссылка
	|		И (Товары.ДокументРеализации <> НЕОПРЕДЕЛЕНО ИЛИ Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|		И Товары.Период <= &Дата
	|		И Товары.Организация = &Организация
	|		И Товары.Соглашение = &Соглашение
	|
	|	) КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.СкладОтгрузки,
	|	Товары.ДокументРеализации,
	|	Товары.АналитикаУчетаНоменклатуры,
	|	Товары.ВидЗапасов,
	|	Товары.НомерГТД
	|
	|ИМЕЮЩИЕ
	|	СУММА(Товары.Количество) <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	НомерГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.НомерСтроки,
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов,
	|	Т.НомерГТД,
	|	Т.СкладОтгрузки,
	|	Т.ДокументРеализации,
	|	Т.КоличествоОстаток
	|ИЗ
	|	ПереданныеТовары КАК Т
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВидыЗапасов КАК ВидыЗапасов
	|		ПО Т.АналитикаУчетаНоменклатуры = ВидыЗапасов.АналитикаУчетаНоменклатуры
	|		И Т.ВидЗапасов = ВидыЗапасов.ВидЗапасов
	|		И Т.НомерГТД = ВидыЗапасов.НомерГТД
	|УПОРЯДОЧИТЬ ПО
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов,
	|	Т.НомерГТД,
	|	Т.ДокументРеализации.МоментВремени УБЫВ,
	|	Т.СкладОтгрузки,
	|	ВидыЗапасов.НомерСтроки ВОЗР
	|ИТОГИ МАКСИМУМ(Т.КоличествоОстаток)
	|ПО
	|	Т.АналитикаУчетаНоменклатуры,
	|	Т.ВидЗапасов,
	|	Т.НомерГТД,
	|	Т.ДокументРеализации,
	|	Т.СкладОтгрузки
	|");
#КонецОбласти
	
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВозвратТоваровМеждуОрганизациями") Тогда
		СписокПолей = "НомерСтроки, АналитикаУчетаНоменклатуры, ВидЗапасовПолучателя, НомерГТД, ДокументРеализации";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ВидЗапасов", "Т.ВидЗапасовПолучателя КАК ВидЗапасов");
	Иначе
		СписокПолей = "НомерСтроки, АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД, ДокументРеализации";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ВидЗапасов", "Т.ВидЗапасов КАК ВидЗапасов");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВидыЗапасов",	ВидыЗапасов.Выгрузить(, СписокПолей));
	Запрос.УстановитьПараметр("Ссылка",			ДокументСсылка);
	Запрос.УстановитьПараметр("Организация",	Организация);
	Запрос.УстановитьПараметр("Комиссионер",	Комиссионер);
	Запрос.УстановитьПараметр("Соглашение",		Соглашение);
	Запрос.УстановитьПараметр("Дата",			Дата + 1);
	Запрос.УстановитьПараметр("Серия",			Справочники.СерииНоменклатуры.ПустаяСсылка());
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Ресурсы = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(?(Ресурсы = "", "СуммаСНДС,СуммаНДС", Ресурсы), ",");
	
	СтрокКПроверке = ВидыЗапасов.Количество();
	
	Выборки = ИнициализироватьВыборки(Запрос, 5);
	ВыборкаБезНомеровСтрок = Неопределено;
	МассивСтрокКУдалению = Новый Массив;
	Пока СледующаяВыборка(Выборки, ВыборкаБезНомеровСтрок, 5) Цикл
		
		Остаток = ВыборкаБезНомеровСтрок.КоличествоОстаток;
		
		Выборка = ВыборкаБезНомеровСтрок.Выбрать(ОбходРезультатаЗапроса.Прямой);
		Пока Выборка.Следующий() Цикл
			
			СтрокаЗапасов = ВидыЗапасов[Выборка.НомерСтроки - 1];
			
			Если СтрокаЗапасов.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если СтрокаЗапасов.Количество > 0 Тогда
				Количество = Мин(Остаток, СтрокаЗапасов.Количество);
			Иначе
				Количество = Макс(Остаток, СтрокаЗапасов.Количество);
			КонецЕсли;
			
			НоваяСтрока = ВидыЗапасов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
			
			НоваяСтрока.ДокументРеализации = Выборка.ДокументРеализации;
			НоваяСтрока.СкладОтгрузки = Выборка.СкладОтгрузки;
			
			Если Количество <> СтрокаЗапасов.Количество Тогда
				Для Каждого Ресурс из Ресурсы Цикл
					НоваяСтрока[Ресурс] = ?(СтрокаЗапасов[Ресурс] <> 0, СтрокаЗапасов[Ресурс] * Количество / Остаток, 0);
				КонецЦикла;
				НоваяСтрока.Количество = Количество;
			КонецЕсли;
			
			Для Каждого Ресурс из Ресурсы Цикл
				СтрокаЗапасов[Ресурс] = СтрокаЗапасов[Ресурс] - НоваяСтрока[Ресурс];
			КонецЦикла;
			СтрокаЗапасов.Количество = СтрокаЗапасов.Количество - НоваяСтрока.Количество;
			
			Остаток = Остаток - НоваяСтрока.Количество;
			
			Если СтрокаЗапасов.Количество = 0 Тогда
				МассивСтрокКУдалению.Добавить(СтрокаЗапасов);
			КонецЕсли;
			
			Если Остаток = 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Для Каждого СтрокаЗапасов из МассивСтрокКУдалению Цикл
		ВидыЗапасов.Удалить(СтрокаЗапасов);
	КонецЦикла;
	
#Область Проверка
	ТаблицаОшибок = Новый ТаблицаЗначений;
	БезДокументаРеализации = СтрокКПроверке - МассивСтрокКУдалению.Количество();
	
	Если БезДокументаРеализации > 0 Тогда
		
		МассивСтрокСОшибками = Новый Массив;
		Для Х = 0 По БезДокументаРеализации - 1 Цикл
			// В этом диапазоне остались строки, к которым не удалось подобрать соответствующий документ передачи на комиссию
			МассивСтрокСОшибками.Добавить(ВидыЗапасов[Х]);
		КонецЦикла;
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Т.АналитикаУчетаНоменклатуры,
		|	Т.Количество
		|ПОМЕСТИТЬ ВидыЗапасов
		|ИЗ
		|	&ВидыЗапасов КАК Т
		|ГДЕ
		|	Т.ДокументРеализации = НЕОПРЕДЕЛЕНО
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	А.Номенклатура,
		|	А.Характеристика,
		|	Н.ЕдиницаИзмерения,
		|	СУММА(Т.Количество) КАК Количество
		|ИЗ
		|	ВидыЗапасов КАК Т
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК А
		|		ПО А.КлючАналитики = Т.АналитикаУчетаНоменклатуры
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Н
		|		ПО Н.Ссылка = А.Номенклатура
		|СГРУППИРОВАТЬ ПО
		|	А.Номенклатура,
		|	А.Характеристика,
		|	Н.ЕдиницаИзмерения
		|");
		
		Запрос.УстановитьПараметр(
			"ВидыЗапасов",
			ВидыЗапасов.Выгрузить(МассивСтрокСОшибками, "АналитикаУчетаНоменклатуры, Количество, ДокументРеализации"));
		ТаблицаОшибок = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.Прямой);
		
	КонецЕсли;
#КонецОбласти
	
	Возврат ТаблицаОшибок;
	
КонецФункции

// В переданной табличной части документа очищает колонку "Аналитика учета партий".
//
// Параметры:
//	ТабЧасть - Табличная часть документа
Процедура ОчиститьАналитикуУчетаПартийВТабличнойЧасти(ТабЧасть) Экспорт
	
	Если ТабЧасть.ВыгрузитьКолонки().Колонки.Найти("АналитикаУчетаПартий") <> Неопределено Тогда
		Для Каждого Строка Из ТабЧасть Цикл 
			Строка.АналитикаУчетаПартий = Неопределено;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Функция СледующаяВыборка(Выборки, Выборка, ТребуемыйУровень = Неопределено)
	
	Максимум = Выборки.Количество() - 1;
	
	// Приведем необходимый уровень выборки к индексу массива
	СтартовыйИндекс = Максимум - ?(ТребуемыйУровень = Неопределено, Максимум, ТребуемыйУровень - 1);
	
	// Перебираем массивы выборок начиная с самого детального уровня
	Для Х = СтартовыйИндекс По Максимум Цикл
		
		ТекИндекс = Максимум - Х;
		Если Выборки[ТекИндекс] = Неопределено Или Не Выборки[ТекИндекс].Следующий() Тогда
			Продолжить; // Не удолось выбрать следующую запись из выборки текущего уровня, спустимся ниже
		ИначеЕсли Х = СтартовыйИндекс Тогда
			Выборка = Выборки[ТекИндекс];
			Возврат Истина; // Выбрали следующую запись из выборки нужного уровня
		КонецЕсли;
		
		// Инициализируем новую выборку более детального уровня ...
		Выборки[ТекИндекс + 1] = Выборки[ТекИндекс].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		// ... и обозначим переход на эту выборку, поднявшись выше
		Х = Х - 2;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Функция ИнициализироватьВыборки(Запрос, КоличествоГруппировок)
	
	Выборки = Новый Массив(КоличествоГруппировок + 1); // Количество группировок +1 для детальных записей
	Выборки[0] = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Возврат Выборки;
	
КонецФункции

#КонецОбласти

#Область УсловноеОформление

// Устанавливаем условное оформление для подразделения, если используются виды запасов по подразделениям
//
// Параметры:
// 		Форма - Форма - Содержит данную форму 
// 		ИмяПоляВводаПодразделения - Строка - Наименование элемента формы, содержащего подразделение,
//											   если оно отличается от "Подразделение"
// 		ПутьКПолюОтбора - Строка - Полный путь к реквизиту "Подразделение",
//									если он отличается от "Объект.Подразделение"
// 
Процедура УстановитьУсловноеОформлениеПодразделенияДляВидовЗапасов(Форма,
																	ИмяПоляВводаПодразделения = "Подразделение",
																	ПутьКПолюОтбора = "Объект.Подразделение") Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоПодразделениямМенеджерам") Тогда
		Возврат;
	КонецЕсли;
	
	УсловноеОформление = Форма.УсловноеОформление;
	ЭлементыФормы = Форма.Элементы;
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаПодразделения].Имя);
	
	ЭлементыФормы[ИмяПоляВводаПодразделения].АвтоОтметкаНезаполненного = Истина;
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПутьКПолюОтбора);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;

	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроцедурыФормированияТаблицыДоступныхВидовЗапасов

// Процедура формирует запрос по данным для заполнения видов запасов документа.
//
Функция ЗапросДанныеЗаполненияВидовЗапасов(МенеджерВременныхТаблиц, ДополнительныеСвойства)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаТоваров.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(АналитикаКомиссионера.КлючАналитики, ТаблицаТоваров.АналитикаУчетаНоменклатуры) КАК АналитикаОстатков,
	|	Справочник.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Справочник.ВестиУчетПоГТД КАК ВестиУчетПоГТД,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Серия КАК Серия,
	|	ТаблицаТоваров.Склад КАК Склад,
	|	ТаблицаТоваров.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаТоваров.ПодбиратьВидыЗапасов КАК ПодбиратьВидыЗапасов,
	|
	|	ВЫБОР КОГДА ТаблицаТоваров.Сделка.ОбособленныйУчетТоваровПоСделке
	|		И &ФормироватьВидыЗапасовПоСделкам
	|	ТОГДА
	|		ТаблицаТоваров.Сделка
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)
	|	КОНЕЦ КАК Сделка,
	|	ТаблицаТоваров.Назначение КАК Назначение,
	|	ТаблицаТоваров.ЦелевоеНалоговоеНазначение КАК ЦелевоеНалоговоеНазначение,
	|	ЕСТЬNULL(ТаблицаТоваров.Назначение.Заказ, Неопределено) КАК Заказ,
	|
	|	МАКСИМУМ(ТаблицаТоваров.СтавкаНДС) КАК СтавкаНДС,
	|	СУММА(ТаблицаТоваров.Количество) КАК Количество,
	|	СУММА(ТаблицаТоваров.СуммаСНДС) КАК СуммаСНДС,
	|	СУММА(ТаблицаТоваров.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ТаблицаТоваров.СуммаВознаграждения) КАК СуммаВознаграждения,
	|	СУММА(ТаблицаТоваров.СуммаНДСВознаграждения) КАК СуммаНДСВознаграждения
	|	
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаТоваров.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.Номенклатура КАК Справочник
	|	ПО
	|		Аналитика.Номенклатура = Справочник.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|	ПО
	|		ИСТИНА
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомиссионера
	|	ПО
	|		ТаблицаТоваров.Номенклатура = АналитикаКомиссионера.Номенклатура
	|		И ТаблицаТоваров.Характеристика = АналитикаКомиссионера.Характеристика
	|		И ТаблицаДанныхДокумента.Партнер = АналитикаКомиссионера.Склад
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = АналитикаКомиссионера.Серия
	|		И (ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|			ИЛИ ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика))
	|	
	|ГДЕ
	|	ТаблицаТоваров.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(АналитикаКомиссионера.КлючАналитики, ТаблицаТоваров.АналитикаУчетаНоменклатуры),
	|	Справочник.ЕдиницаИзмерения,
	|	Справочник.ВестиУчетПоГТД,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	Аналитика.Серия,
	|	ТаблицаТоваров.Склад,
	|	ТаблицаТоваров.ДокументРеализации,
	|	ВЫБОР КОГДА ТаблицаТоваров.Сделка.ОбособленныйУчетТоваровПоСделке
	|		И &ФормироватьВидыЗапасовПоСделкам
	|	ТОГДА
	|		ТаблицаТоваров.Сделка
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаТоваров.Назначение,
	|	ТаблицаТоваров.ЦелевоеНалоговоеНазначение,
	|	ЕСТЬNULL(ТаблицаТоваров.Назначение.Заказ, Неопределено),
	|	ТаблицаТоваров.ПодбиратьВидыЗапасов
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДанныхДокумента.Организация КАК Организация,
	|	ТаблицаДанныхДокумента.Дата КАК Дата,
	|	Неопределено КАК Партнер,
	|	Неопределено КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка) КАК Соглашение,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК Валюта,
	|	ТаблицаДанныхДокумента.НалоговоеНазначениеОрганизации КАК НалоговоеНазначениеОрганизации,
	|	ТаблицаДанныхДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ИЗ
	|	ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|ГДЕ
	|	ТаблицаДанныхДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровКомитенту)
	|	И ТаблицаДанныхДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДанныхДокумента.Организация КАК Организация,
	|	ТаблицаДанныхДокумента.Дата КАК Дата,
	|	ТаблицаДанныхДокумента.Партнер КАК Партнер,
	|	ТаблицаДанныхДокумента.Контрагент КАК Контрагент,
	|	ТаблицаДанныхДокумента.Соглашение КАК Соглашение,
	|	ТаблицаДанныхДокумента.Договор КАК Договор,
	|	ТаблицаДанныхДокумента.Валюта КАК Валюта,
	|	ТаблицаДанныхДокумента.НалоговоеНазначениеОрганизации КАК НалоговоеНазначениеОрганизации,
	|	ТаблицаДанныхДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ИЗ
	|	ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|ГДЕ
	|	ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровКомитенту)
	|	ИЛИ ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Склад КАК Склад,
	|	ТаблицаДокумента.Сделка КАК Сделка,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.Серия КАК Серия,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.ЦелевоеНалоговоеНазначение КАК ЦелевоеНалоговоеНазначение,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ВЫБОР 
	|		КОГДА &ИспользоватьГруппыФинУчета
	|		ТОГДА ЕСТЬNULL(Аналитика.Номенклатура.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК ГруппаФинансовогоУчета
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО ТаблицаДокумента.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаВидыЗапасов.НомерСтроки) КАК НомерСтроки,
	|	ЕСТЬNULL(АналитикаКомиссионера.КлючАналитики, ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры) КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.СкладОтгрузки КАК СкладОтгрузки,
	|	ТаблицаВидыЗапасов.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаВидыЗапасов.Сделка КАК Сделка,
	|
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.ВидыЗапасовУказаныВручную КАК ВидыЗапасовУказаныВручную,
	|	СУММА(ТаблицаВидыЗапасов.Количество) КАК Количество,
	|	ВЫБОР КОГДА СУММА(ТаблицаВидыЗапасов.Количество) > 0 ТОГДА
	|		1
	|	ИНАЧЕ
	|		-1
	|	КОНЕЦ КАК Знак
	|
	|ПОМЕСТИТЬ ВтВидыЗапасовСводно
	|ИЗ
	|	ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|	ПО
	|		ИСТИНА
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомиссионера
	|	ПО
	|		ТаблицаВидыЗапасов.Номенклатура = АналитикаКомиссионера.Номенклатура
	|		И ТаблицаВидыЗапасов.Характеристика = АналитикаКомиссионера.Характеристика
	|		И ТаблицаДанныхДокумента.Партнер = АналитикаКомиссионера.Склад
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = АналитикаКомиссионера.Серия
	|		И ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(АналитикаКомиссионера.КлючАналитики, ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры),
	|	ТаблицаВидыЗапасов.СкладОтгрузки,
	|	ТаблицаВидыЗапасов.ДокументРеализации,
	|	ТаблицаВидыЗапасов.Сделка,
	|	ТаблицаВидыЗапасов.ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД,
	|	ТаблицаВидыЗапасов.ВидыЗапасовУказаныВручную
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	СкладОтгрузки,
	|	ДокументРеализации,
	|	Сделка,
	|	ВидЗапасов,
	|	НомерГТД
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ // ОСТАТКИ, УКАЗАННЫЕ В ДОКУМЕНТЕ
	|	ВЫБОР КОГДА РеквизитыВидаЗапасовВладельца.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляЗаказа) ТОГДА
	|		1
	|	КОГДА РеквизитыВидаЗапасовВладельца.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляСделки) ТОГДА
	|		4
	|	КОГДА РеквизитыВидаЗапасовВладельца.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляМенеджера) ТОГДА
	|		7
	|	КОГДА РеквизитыВидаЗапасовВладельца.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляПодразделения) ТОГДА
	|		10
	|	ИНАЧЕ
	|		16
	|	КОНЕЦ КАК ПриоритетПредназначения,
	|	ВЫБОР КОГДА ЕСТЬNULL(Остатки.ДатаПоступления, РеквизитыДокумента.Дата) <= КОНЕЦПЕРИОДА(РеквизитыДокумента.Дата, ДЕНЬ) ТОГДА
	|		13
	|	ИНАЧЕ
	|		16
	|	КОНЕЦ КАК ПриоритетДатыПоступления,
	|
	|	ИСТИНА КАК ОстаткиДокумента,
	|
	|	Остатки.Организация КАК Организация,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.СкладОтгрузки КАК СкладОтгрузки,
	|	ВидыЗапасов.ДокументРеализации КАК ДокументРеализации,
	|	ВидыЗапасов.Сделка КАК Сделка,
	|	РеквизитыВидаЗапасовВладельца.Назначение КАК Назначение,
	|	РеквизитыВидаЗапасовВладельца.НалоговоеНазначение КАК НалоговоеНазначениеОстатков,
	|
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	Остатки.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	Остатки.ВидЗапасовПолучателя КАК ВидЗапасовПолучателя,
	|	Остатки.ВидЗапасовОтгрузки КАК ВидЗапасовОтгрузки,
	|	РеквизитыВидаЗапасовОтгрузки.Организация КАК ОрганизацияОтгрузки,
	|	Остатки.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|
	|	ВидыЗапасов.НомерГТД КАК НомерГТД,
	|	Остатки.ДатаПоступления КАК ДатаПоступления,
	|
	|	ВЫБОР КОГДА ВидыЗапасов.ВидыЗапасовУказаныВручную И Не &ПерезаполнениеВидовЗапасов ТОГДА
	|		ВидыЗапасов.Количество
	|	КОГДА ВидыЗапасов.Знак * Остатки.КоличествоОстаток > ВидыЗапасов.Знак * ВидыЗапасов.Количество ТОГДА
	|		ВидыЗапасов.Количество
	|	ИНАЧЕ
	|		Остатки.КоличествоОстаток
	|	КОНЕЦ КАК КоличествоОстаток,
	|
	|	ВЫБОР КОГДА (ВидыЗапасов.Знак * Остатки.КоличествоОстаток > ВидыЗапасов.Знак * ВидыЗапасов.Количество)
	|	 И Остатки.КоличествоОстаток <> 0 ТОГДА
	|		ВидыЗапасов.Количество * Остатки.СуммаОстаток / Остатки.КоличествоОстаток
	|	ИНАЧЕ
	|		Остатки.СуммаОстаток
	|	КОНЕЦ КАК СуммаОстаток
	|
	|ПОМЕСТИТЬ ВтОстатки
	|ИЗ
	|	ВтВидыЗапасовСводно КАК ВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокумента КАК РеквизитыДокумента
	|	ПО
	|		Истина
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаОстатков КАК Остатки
	|	ПО
	|		Остатки.АналитикаУчетаНоменклатуры = ВидыЗапасов.АналитикаУчетаНоменклатуры
	|		И Остатки.СкладОтгрузки = ВидыЗапасов.СкладОтгрузки
	|		И Остатки.ДокументРеализации = ВидыЗапасов.ДокументРеализации
	|		И Остатки.Сделка = ВидыЗапасов.Сделка
	|		И Остатки.ВидЗапасов = ВидыЗапасов.ВидЗапасов
	|		И Остатки.НомерГТД = ВидыЗапасов.НомерГТД
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК РеквизитыВидаЗапасовВладельца
	|	ПО
	|		ЕСТЬNULL(Остатки.ВидЗапасовВладельца, ВидыЗапасов.ВидЗапасов) = РеквизитыВидаЗапасовВладельца.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК РеквизитыВидаЗапасовОтгрузки
	|	ПО
	|		Остатки.ВидЗапасовОтгрузки = РеквизитыВидаЗапасовОтгрузки.Ссылка
	|ГДЕ
	|	НЕ Остатки.ВидЗапасов ЕСТЬ NULL
	|	ИЛИ (ВидыЗапасов.ВидыЗапасовУказаныВручную И Не &ПерезаполнениеВидовЗапасов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // ОСТАТКИ, НЕ УКАЗАННЫЕ В ДОКУМЕНТЕ
	
	|	ВЫБОР КОГДА Остатки.Организация = РеквизитыДокумента.Организация ТОГДА
	|		ВЫБОР КОГДА РеквизитыВидаЗапасовВладельца.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляЗаказа) ТОГДА
	|			2
	|		КОГДА РеквизитыВидаЗапасовВладельца.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляСделки) ТОГДА
	|			5
	|		КОГДА РеквизитыВидаЗапасовВладельца.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляМенеджера) ТОГДА
	|			8
	|		КОГДА РеквизитыВидаЗапасовВладельца.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляПодразделения) ТОГДА
	|			11
	|		ИНАЧЕ
	|			17
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ВЫБОР КОГДА РеквизитыВидаЗапасовВладельца.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляЗаказа) ТОГДА
	|			3
	|		КОГДА РеквизитыВидаЗапасовВладельца.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляСделки) ТОГДА
	|			6
	|		КОГДА РеквизитыВидаЗапасовВладельца.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляМенеджера) ТОГДА
	|			9
	|		КОГДА РеквизитыВидаЗапасовВладельца.Предназначение = ЗНАЧЕНИЕ(Перечисление.ТипыПредназначенияВидовЗапасов.ПредназначенДляПодразделения) ТОГДА
	|			12
	|		ИНАЧЕ
	|			18
	|		КОНЕЦ
	|	КОНЕЦ КАК ПриоритетПредназначения,
	|	ВЫБОР КОГДА Остатки.Организация = РеквизитыДокумента.Организация ТОГДА
	|		ВЫБОР КОГДА Остатки.ДатаПоступления <= КОНЕЦПЕРИОДА(РеквизитыДокумента.Дата, ДЕНЬ) ТОГДА
	|			14
	|		ИНАЧЕ
	|			17
	|		КОНЕЦ
	|	ИНАЧЕ
	|		18
	|	КОНЕЦ КАК ПриоритетДатыПоступления,
	|
	|	ЛОЖЬ КАК ОстаткиДокумента,
	|
	|	Остатки.Организация КАК Организация,
	|	Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Остатки.СкладОтгрузки КАК СкладОтгрузки,
	|	Остатки.ДокументРеализации КАК ДокументРеализации,
	|	Остатки.Сделка КАК Сделка,
	|	Остатки.Назначение КАК Назначение,
	|	Остатки.НалоговоеНазначение КАК НалоговоеНазначениеОстатков,
	|
	|	Остатки.ВидЗапасов КАК ВидЗапасов,
	|	Остатки.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	Остатки.ВидЗапасовПолучателя КАК ВидЗапасовПолучателя,
	|	Остатки.ВидЗапасовОтгрузки КАК ВидЗапасовОтгрузки,
	|	РеквизитыВидаЗапасовОтгрузки.Организация КАК ОрганизацияОтгрузки,
	|	Остатки.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|
	|	Остатки.НомерГТД КАК НомерГТД,
	|	Остатки.ДатаПоступления КАК ДатаПоступления,
	|
	|	Остатки.КоличествоОстаток - ЕСТЬNULL(ВидыЗапасов.Количество, 0) КАК КоличествоОстаток,
	|	ВЫБОР КОГДА Остатки.КоличествоОстаток <> 0 ТОГДА
	|		Остатки.СуммаОстаток
	|			- (ЕСТЬNULL(ВидыЗапасов.Количество, 0) * Остатки.СуммаОстаток / Остатки.КоличествоОстаток)
	|	КОГДА ЕСТЬNULL(ВидыЗапасов.Количество, 0) = 0 ТОГДА
	|		Остатки.СуммаОстаток
	|	ИНАЧЕ
	|		0 // Сумма остатка подобралась в строках с видом запасов
	|	КОНЕЦ КАК СуммаОстаток
	|ИЗ
	|	ТаблицаОстатков КАК Остатки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокумента КАК РеквизитыДокумента
	|	ПО
	|		Истина
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК РеквизитыВидаЗапасовВладельца
	|	ПО
	|		Остатки.ВидЗапасовВладельца = РеквизитыВидаЗапасовВладельца.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК РеквизитыВидаЗапасовОтгрузки
	|	ПО
	|		Остатки.ВидЗапасовОтгрузки = РеквизитыВидаЗапасовОтгрузки.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтВидыЗапасовСводно КАК ВидыЗапасов
	|	ПО
	|		Остатки.АналитикаУчетаНоменклатуры = ВидыЗапасов.АналитикаУчетаНоменклатуры
	|		И Остатки.СкладОтгрузки = ВидыЗапасов.СкладОтгрузки
	|		И Остатки.ДокументРеализации = ВидыЗапасов.ДокументРеализации
	|		И Остатки.Сделка = ВидыЗапасов.Сделка
	|		И Остатки.ВидЗапасов = ВидыЗапасов.ВидЗапасов
	|		И Остатки.НомерГТД = ВидыЗапасов.НомерГТД
	|ГДЕ
	|	ВЫБОР КОГДА ВидыЗапасов.Количество ЕСТЬ NULL ТОГДА
	|		ИСТИНА
	|	КОГДА ВидыЗапасов.Количество = 0 ТОГДА
	|		НЕ ВидыЗапасов.НомерСтроки = 99999
	|	КОГДА ВидыЗапасов.Знак * ВидыЗапасов.Количество > 0 ТОГДА
	|		ВидыЗапасов.Знак * Остатки.КоличествоОстаток
	|			- ВидыЗапасов.Знак * ВидыЗапасов.Количество > 0
	|	ИНАЧЕ
	|		ВидыЗапасов.Знак * Остатки.КоличествоОстаток
	|			- ВидыЗапасов.Знак * ВидыЗапасов.Количество < 0
	|	КОНЕЦ 
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(Остатки.ПриоритетПредназначения, 0) КАК ПриоритетПредназначения,
	|	ВЫБОР КОГДА Не &ИспользоватьРаздельныйУчетПоНалогообложению ТОГДА
	|		0
	|	ИНАЧЕ 
	|		ВЫБОР КОГДА ТаблицаДокумента.ЦелевоеНалоговоеНазначение <> ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) И ТаблицаДокумента.ЦелевоеНалоговоеНазначение = Остатки.НалоговоеНазначениеОстатков ТОГДА
	|			1
	|		ИНАЧЕ 
	|			ВЫБОР КОГДА ТаблицаДокумента.ЦелевоеНалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка) И ТаблицаДанныхДокумента.НалоговоеНазначениеОрганизации = Остатки.НалоговоеНазначениеОстатков ТОГДА
	|				2
	|			ИНАЧЕ
	|				3
	|			КОНЕЦ
	|		КОНЕЦ
	|	КОНЕЦ КАК ПриоритетНалоговогоНазначения,
	|	ЕСТЬNULL(Остатки.ПриоритетДатыПоступления, 0) КАК ПриоритетДатыПоступления,
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Склад КАК Склад,
	|	ТаблицаДокумента.Сделка КАК Сделка,
	|	ТаблицаДокумента.Назначение КАК Назначение,
	|	ТаблицаДокумента.ЦелевоеНалоговоеНазначение КАК ЦелевоеНалоговоеНазначение,
	|	ТаблицаДокумента.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ВЫБОР 
	|		КОГДА &ИспользоватьГруппыФинУчета
	|		ТОГДА ЕСТЬNULL(ТаблицаДокумента.Номенклатура.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ТаблицаДокумента.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаВознаграждения КАК СуммаВознаграждения,
	|	ТаблицаДокумента.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения,
    |	ТаблицаДанныхДокумента.Дата КАК ДатаДокумента,
	|
	|	ЕСТЬNULL(Остатки.ВидЗапасов, Неопределено) КАК ВидЗапасов,
	|	ЕСТЬNULL(Остатки.ВидЗапасов.НалоговоеНазначение, Неопределено) КАК НалоговоеНазначениеВидаЗапаса,
	|	ЕСТЬNULL(Остатки.ВидЗапасовВладельца, Неопределено) КАК ВидЗапасовВладельца,
	|	ЕСТЬNULL(Остатки.ВидЗапасовПолучателя, Неопределено) КАК ВидЗапасовПолучателя,
	|	ЕСТЬNULL(Остатки.ВидЗапасовОтгрузки, Неопределено) КАК ВидЗапасовОтгрузки,
	|	ЕСТЬNULL(Остатки.ОрганизацияОтгрузки, Неопределено) КАК ОрганизацияОтгрузки,
	|	ЕСТЬNULL(Остатки.РеализацияЗапасовДругойОрганизации, Ложь) КАК РеализацияЗапасовДругойОрганизации,
	|	ЕСТЬNULL(Остатки.НомерГТД, Неопределено) КАК НомерГТД,
	|
	|	ВЫБОР КОГДА ТаблицаДокумента.ВестиУчетПоГТД
	|		И &ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД
	|		И (Остатки.НомерГТД = ЗНАЧЕНИЕ(Справочник.НоменклатураГТД.ПустаяСсылка) ИЛИ Остатки.НомерГТД ЕСТЬ NULL)
	|	ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК НеУказанНомерГТД,
	|
	|	ЕСТЬNULL(Остатки.ДатаПоступления, ДАТАВРЕМЯ(2399, 1, 1)) КАК ДатаПоступления,
	|	ЕСТЬNULL(Остатки.СкладОтгрузки, Неопределено) КАК СкладОтгрузки,
	|	ВЫБОР КОГДА ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|		И ТаблицаДокумента.ДокументРеализации <> НЕОПРЕДЕЛЕНО
	|	ТОГДА
	|		ТаблицаДокумента.ДокументРеализации
	|	ИНАЧЕ
	|		ЕСТЬNULL(Остатки.ДокументРеализации, Неопределено)
	|	КОНЕЦ КАК ДокументРеализации,
	|	ЕСТЬNULL(ТаблицаДокумента.Заказ, Неопределено) КАК Заказ,
	|
	|	ЕСТЬNULL(Остатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(Остатки.СуммаОстаток, 0) КАК СуммаОстаток
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|	ПО
	|		Истина
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтОстатки КАК Остатки
	|	ПО
	|		ТаблицаДокумента.АналитикаОстатков = Остатки.АналитикаУчетаНоменклатуры
	|		И (ТаблицаДокумента.ДокументРеализации = Остатки.ДокументРеализации
	|			ИЛИ (ТаблицаДокумента.ДокументРеализации = НЕОПРЕДЕЛЕНО И ТаблицаДокумента.ПодбиратьВидыЗапасов)
	|			ИЛИ ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|			)
	|		И (Не ТаблицаДанныхДокумента.ЕстьСделкиВТабличнойЧасти
	|			ИЛИ ТаблицаДокумента.Сделка = Остатки.Сделка
	|			ИЛИ Остатки.Сделка = ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)
	|			)
	|		И (ТаблицаДокумента.Назначение = Остатки.Назначение ИЛИ Остатки.ВидЗапасовПолучателя <> НЕОПРЕДЕЛЕНО)
	|		И (НЕ &КонтролироватьОстаткиТоваровОрганизацийПоНалоговымНазначениям ИЛИ ТаблицаДокумента.ЦелевоеНалоговоеНазначение = Остатки.НалоговоеНазначениеОстатков)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ДатыПоступления
	|	ПО
	|		ДатыПоступления.ВидЗапасов = Остатки.ВидЗапасов
	|		И ДатыПоступления.Номенклатура = Остатки.АналитикаУчетаНоменклатуры.Номенклатура
	|		И ДатыПоступления.Характеристика = Остатки.АналитикаУчетаНоменклатуры.Характеристика
	|		И ДатыПоступления.Серия = Остатки.АналитикаУчетаНоменклатуры.Серия
	|		И ДатыПоступления.НомерГТД = Остатки.НомерГТД
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПриоритетПредназначения       Возр,
	|	ПриоритетНалоговогоНазначения Возр,
	|	ПриоритетДатыПоступления      Возр,
	|	НомерСтроки Возр,
	|	ДатаПоступления Возр,
	|	ДатыПоступления.ДатаПоступления Возр
	|
	|ИТОГИ
	|	МАКСИМУМ(Количество),
	|	МАКСИМУМ(СуммаСНДС),
	|	МАКСИМУМ(СтавкаНДС),
	|	МАКСИМУМ(СуммаНДС),
	|	МАКСИМУМ(СуммаВознаграждения),
	|	МАКСИМУМ(СуммаНДСВознаграждения),
	|	СУММА(КоличествоОстаток)
	|ПО
	|	НомерСтроки
	|");
	Запрос.УстановитьПараметр("ИспользоватьРаздельныйУчетПоНалогообложению", ПолучитьФункциональнуюОпцию("ИспользоватьРаздельныйУчетПоНалогообложению"));
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоСделкам", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоСделкам"));
	Запрос.УстановитьПараметр("ПерезаполнениеВидовЗапасов", ДополнительныеСвойства.Свойство("ПерезаполнитьВидыЗапасов"));
	Запрос.УстановитьПараметр("ИспользоватьГруппыФинУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Если ДополнительныеСвойства.Свойство("КонтролироватьНомераГТД") Тогда
		Запрос.УстановитьПараметр("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД", ДополнительныеСвойства.КонтролироватьНомераГТД);
	Иначе
		Запрос.УстановитьПараметр("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД", ПолучитьФункциональнуюОпцию("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД"));
	КонецЕсли;
	Запрос.УстановитьПараметр("КонтролироватьОстаткиТоваровОрганизацийПоНалоговымНазначениям", ДополнительныеСвойства.Свойство("КонтролироватьОстаткиТоваровОрганизацийПоНалоговымНазначениям"));
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Возврат Запрос;
	
КонецФункции

#КонецОбласти

Процедура ВыгрузитьГрафикДоступностьТоваров()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоДня",   НачалоДня(ТекущаяДата()));

	Запрос.Текст =
		"ВЫБРАТЬ
		|	Т.Номенклатура           КАК Номенклатура,
		|	Т.Характеристика         КАК Характеристика,
		|	Т.Склад                  КАК Склад,
		|	Т.ВНаличииОстаток
		|		- Т.ВРезервеСоСкладаОстаток
		|		- Т.ВРезервеПодЗаказОстаток КАК Количество
		|
		|ПОМЕСТИТЬ ВтОстаткиСклада
		|ИЗ
		|	РегистрНакопления.СвободныеОстатки.Остатки(,) КАК Т
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад
		|;
		|
		|//////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Т.ДатаДоступности         КАК Период,
		|
		|	Т.Номенклатура            КАК Номенклатура,
		|	Т.Характеристика          КАК Характеристика,
		|	Т.Склад                   КАК Склад,
		|
		|	Т.Количество + ЕСТЬNULL(ОстаткиСклада.Количество, 0) КАК Доступно
		|
		|ИЗ
		|	РегистрСведений.ДоступныеОстаткиПланируемыхПоступлений КАК Т
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОстаткиСклада КАК ОстаткиСклада
		|		ПО Т.Склад          = ОстаткиСклада.Склад
		|		 И Т.Номенклатура   = ОстаткиСклада.Номенклатура
		|		 И Т.Характеристика = ОстаткиСклада.Характеристика
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаХарактеристика
		|		ПО Т.Склад          = НастройкаХарактеристика.Склад
		|		 И Т.Номенклатура   = НастройкаХарактеристика.Номенклатура
		|		 И Т.Характеристика = НастройкаХарактеристика.Характеристика
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаНоменклатура
		|		ПО Т.Склад        = НастройкаНоменклатура.Склад
		|		 И Т.Номенклатура = НастройкаНоменклатура.Номенклатура
		|		 И НастройкаНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|		 И НастройкаХарактеристика.Склад ЕСТЬ NULL
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаСклад
		|		ПО Т.Склад = НастройкаСклад.Склад
		|		 И НастройкаСклад.Номенклатура   = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|		 И НастройкаСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|		 И НастройкаХарактеристика.Склад ЕСТЬ NULL
		|		 И НастройкаНоменклатура.Склад ЕСТЬ NULL
		|
		|ГДЕ
		|	ЕСТЬNULL(НастройкаХарактеристика.Контролировать, ЕСТЬNULL(НастройкаНоменклатура.Контролировать, НастройкаСклад.Контролировать))
		|	И Т.ДатаДоступности > &НачалоДня
		|	
		|ОБЪЕДИНИТЬ ВСЕ
		|	
		|ВЫБРАТЬ
		|	&НачалоДня               КАК Период,
		|
		|	Т.Номенклатура           КАК Номенклатура,
		|	Т.Характеристика         КАК Характеристика,
		|	Т.Склад                  КАК Склад,
		|
		|	Т.Количество + ЕСТЬNULL(ОстаткиИзЗаказов.Количество, 0) КАК Доступно
		|
		|ИЗ
		|	ВтОстаткиСклада КАК Т
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДоступныеОстаткиПланируемыхПоступлений КАК ОстаткиИзЗаказов
		|		ПО Т.Склад          = ОстаткиИзЗаказов.Склад
		|		 И Т.Номенклатура   = ОстаткиИзЗаказов.Номенклатура
		|		 И Т.Характеристика = ОстаткиИзЗаказов.Характеристика
		|		 И ОстаткиИзЗаказов.ДатаДоступности = ДАТАВРЕМЯ(1, 1, 1)
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаХарактеристика
		|		ПО Т.Склад          = НастройкаХарактеристика.Склад
		|		 И Т.Номенклатура   = НастройкаХарактеристика.Номенклатура
		|		 И Т.Характеристика = НастройкаХарактеристика.Характеристика
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаНоменклатура
		|		ПО Т.Склад        = НастройкаНоменклатура.Склад
		|		 И Т.Номенклатура = НастройкаНоменклатура.Номенклатура
		|		 И НастройкаНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|		 И НастройкаХарактеристика.Склад ЕСТЬ NULL
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаСклад
		|		ПО Т.Склад = НастройкаСклад.Склад
		|		 И НастройкаСклад.Номенклатура   = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|		 И НастройкаСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|		 И НастройкаХарактеристика.Склад ЕСТЬ NULL
		|		 И НастройкаНоменклатура.Склад ЕСТЬ NULL
		|
		|ГДЕ
		|	ЕСТЬNULL(НастройкаХарактеристика.Контролировать, ЕСТЬNULL(НастройкаНоменклатура.Контролировать, НастройкаСклад.Контролировать))";

	НаборЗаписей = РегистрыСведений.ДоступностьТоваровДляВнешнихПользователей.СоздатьНаборЗаписей();
	НаборЗаписей.Загрузить(Запрос.Выполнить().Выгрузить());
	Если НаборЗаписей.Модифицированность() Тогда
		НаборЗаписей.Записать(Ложь);
	КонецЕсли;

КонецПроцедуры

Процедура ОчиститьВидыЗапасовВСебестоимости(Ссылка)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	РегистрНакопления.СебестоимостьТоваров КАК Себестоимость
	|ГДЕ
	|	Себестоимость.Регистратор = &Регистратор
	|");
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Результат = Запрос.Выполнить().Выгрузить();
	
	НачатьТранзакцию();
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.СебестоимостьТоваров.НаборЗаписей");
	ЭлементБлокировки.УстановитьЗначение("Регистратор", Ссылка);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	
	Набор = РегистрыНакопления.СебестоимостьТоваров.СоздатьНаборЗаписей();
	Набор.Отбор.Регистратор.Установить(Ссылка);
	Для Каждого ТекущаяЗапись Из Результат Цикл
		НоваяЗапись = Набор.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяЗапись, ТекущаяЗапись);
		НоваяЗапись.ВидЗапасов = Справочники.ВидыЗапасов.ПустаяСсылка();
        НоваяЗапись.КорВидЗапасов = Справочники.ВидыЗапасов.ПустаяСсылка();
	КонецЦикла;
	Попытка
		Набор.Записать();
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
	КонецПопытки;
	
КонецПроцедуры

Процедура ОчиститьВидыЗапасовСтоимостиТоваров(Ссылка)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Данные.Период КАК Период,
	|	Данные.Регистратор КАК Регистратор,
	|	Данные.НомерСтроки КАК НомерСтроки,
	|	Данные.Активность КАК Активность,
	|	Данные.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Данные.Организация КАК Организация,
	|	Данные.РазделУчета КАК РазделУчета,
	|	СРЕДНЕЕ(Данные.Стоимость) КАК Стоимость,
	|	СРЕДНЕЕ(Данные.СтоимостьДопРасходы) КАК СтоимостьДопРасходы,
	|	СРЕДНЕЕ(Данные.СтоимостьБезНДС) КАК СтоимостьБезНДС,
	|	СРЕДНЕЕ(Данные.СтоимостьДопРасходыБезНДС) КАК СтоимостьДопРасходыБезНДС,
	|	СРЕДНЕЕ(Данные.СтоимостьРегл) КАК СтоимостьРегл,
	|	СРЕДНЕЕ(Данные.ПостояннаяРазница) КАК ПостояннаяРазница,
	|	СРЕДНЕЕ(Данные.ВременнаяРазница) КАК ВременнаяРазница
	|ИЗ
	|	РегистрСведений.СтоимостьТоваров КАК Данные
	|ГДЕ
	|	Данные.Регистратор = &Регистратор
	|СГРУППИРОВАТЬ ПО
	|	Данные.Период,
	|	Данные.Регистратор,
	|	Данные.НомерСтроки,
	|	Данные.Активность,
	|	Данные.АналитикаУчетаНоменклатуры,
	|	Данные.Организация,
	|	Данные.РазделУчета
	|");
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.СтоимостьТоваров.НаборЗаписей");
	ЭлементБлокировки.УстановитьЗначение("Регистратор", Ссылка);
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	
	Набор = РегистрыСведений.СтоимостьТоваров.СоздатьНаборЗаписей();
	Набор.Отбор.Регистратор.Установить(Ссылка);
	Набор.Загрузить(Результат.Выгрузить());
	Попытка
		Набор.Записать();
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
	КонецПопытки;
	
КонецПроцедуры

Процедура ЗаписатьДвиженияВБазу(МенеджерДвижений, Таблица, Ссылка, ЗаполнятьЦиклом = Ложь, УстановитьАктивность = Истина, ДопСвойства = Неопределено) Экспорт
	Набор = МенеджерДвижений.СоздатьНаборЗаписей();
	Набор.Отбор.Регистратор.Установить(Ссылка);
	Набор.Прочитать();
	Если ДопСвойства <> Неопределено Тогда
		Для Каждого Свойство ИЗ ДопСвойства Цикл
			Набор.ДополнительныеСвойства.Вставить(Свойство.Ключ, Свойство.Значение);
		КонецЦикла;
	КонецЕсли;
	Если Набор.Количество() > 0 Или Таблица.Количество() > 0 Тогда
		Если ЗаполнятьЦиклом Тогда
			Для Каждого Строка Из Таблица Цикл
				Запись = Набор.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, Строка);
			КонецЦикла;
		Иначе
			Набор.Загрузить(Таблица);
		КонецЕсли;
		Если УстановитьАктивность Тогда
			Набор.УстановитьАктивность(Истина);
		КонецЕсли;
		Набор.Записать();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
