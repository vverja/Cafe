#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Прочее

Процедура ЗагрузитьДеревоФорматов(Дерево, СхемаОбеспечения) Экспорт
	
	Дерево.ПолучитьЭлементы().Очистить();
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСТЬNULL(СпрФорматы.ФорматМагазина, ЗНАЧЕНИЕ(Справочник.ФорматыМагазинов.ПустаяСсылка)) КАК Формат,
		|	СпрСклады.Ссылка          КАК Склад,
		|	
		|	СпрСпособСклада.Ссылка КАК СпособОбеспечения,
		|	
		|	СпрСпособСклада.СрокИсполненияЗаказа    КАК СрокПоставки,
		|	СпрСпособСклада.ОбеспечиваемыйПериод    КАК ОбеспечиваемыйПериод,
		|	ЕСТЬNULL(СпрСпособСклада.ТипОбеспечения, ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.Покупка)) КАК ТипОбеспечения,
		|	ЕСТЬNULL(СпрСпособСклада.ИсточникОбеспеченияПотребностей, НЕОПРЕДЕЛЕНО)                  КАК ИсточникОбеспечения,
		|	
		|	СпрСпособФормата.Ссылка КАК СпособОбеспеченияФормата,
		|	
		|	СпрСпособФормата.СрокИсполненияЗаказа   КАК СрокПоставкиФормата,
		|	СпрСпособФормата.ОбеспечиваемыйПериод   КАК ОбеспечиваемыйПериодФормата,
		|	ЕСТЬNULL(СпрСпособФормата.ТипОбеспечения, ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.Покупка)) КАК ТипОбеспеченияФормата,
		|	ЕСТЬNULL(СпрСпособФормата.ИсточникОбеспеченияПотребностей, НЕОПРЕДЕЛЕНО)                  КАК ИсточникОбеспеченияФормата,
		|	
		|	ВЫБОР КОГДА СпрФорматы.ФорматМагазина ЕСТЬ NULL ТОГДА
		|				ЛОЖЬ
		|			ИНАЧЕ
		|				ИСТИНА
		|		КОНЕЦ            КАК ЕстьФормат,
		|	ВЫБОР КОГДА НастройкаДляСклада.СпособОбеспеченияПотребностей ЕСТЬ NULL ТОГДА
		|				ЛОЖЬ
		|			ИНАЧЕ
		|				ИСТИНА
		|		КОНЕЦ            КАК ЕстьНастройкаДляСклада,
		|	ВЫБОР КОГДА НастройкаДляФормата.СпособОбеспеченияПотребностей ЕСТЬ NULL ТОГДА
		|				ЛОЖЬ
		|			ИНАЧЕ
		|				ИСТИНА
		|		КОНЕЦ            КАК ЕстьНастройкаДляФормата
		|ИЗ
		|	Справочник.Склады КАК СпрСклады
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияИзмененияФорматовМагазинов.СрезПоследних(, ) КАК СпрФорматы
		|		ПО СпрФорматы.Склад = СпрСклады.Ссылка
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СхемыОбеспечения КАК НастройкаДляСклада
		|		ПО НастройкаДляСклада.Склад = СпрСклады.Ссылка
		|		 И НастройкаДляСклада.СхемаОбеспечения = &СхемаОбеспечения
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СхемыОбеспечения КАК НастройкаДляФормата
		|		ПО НастройкаДляФормата.Склад = СпрФорматы.ФорматМагазина
		|		 И НастройкаДляФормата.СхемаОбеспечения = &СхемаОбеспечения
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОбеспеченияПотребностей КАК СпрСпособСклада
		|		ПО СпрСпособСклада.Ссылка = ЕСТЬNULL(НастройкаДляСклада.СпособОбеспеченияПотребностей, НастройкаДляФормата.СпособОбеспеченияПотребностей)
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОбеспеченияПотребностей КАК СпрСпособФормата
		|		ПО СпрСпособФормата.Ссылка = НастройкаДляФормата.СпособОбеспеченияПотребностей
		|ГДЕ
		|	НЕ СпрСклады.ЭтоГруппа
		|УПОРЯДОЧИТЬ ПО
		|	ФорматМагазина";
		
	Запрос.УстановитьПараметр("СхемаОбеспечения", СхемаОбеспечения);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Корень = Дерево.ПолучитьЭлементы();
	Формат = Неопределено;
	Пока Выборка.Следующий() Цикл
		
		Если Формат <> Выборка.Формат Тогда
			
			Формат = Выборка.Формат;
			
			УзелКорня = Корень.Добавить();
			УзелКорня.СтандартнаяКартинка = 1;
			
			УзелКорня.ФорматСклад          = Выборка.Формат;
			УзелКорня.ТипОбеспечения       = Выборка.ТипОбеспеченияФормата;
			УзелКорня.СпособОбеспечения    = Выборка.СпособОбеспеченияФормата;
			УзелКорня.СрокПоставки         = Выборка.СрокПоставкиФормата;
			УзелКорня.ОбеспечиваемыйПериод = Выборка.ОбеспечиваемыйПериодФормата;
			УзелКорня.ИсточникОбеспечения  = Выборка.ИсточникОбеспеченияФормата;
			
			Ветвь = УзелКорня.ПолучитьЭлементы();
			
		КонецЕсли;
		
		Узел = Ветвь.Добавить();
		Узел.ФорматСклад = Выборка.Склад;
		ЗаполнитьЗначенияСвойств(Узел, Выборка);
		Узел.НастройкаСклада = Новый Структура(Новый ФиксированнаяСтруктура(РеквизитыСпособаПоУмолчанию()));
		Если Выборка.ЕстьНастройкаДляСклада Тогда
			ЗаполнитьЗначенияСвойств(Узел.НастройкаСклада, Выборка);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСпособОбеспеченияНаСервере(Форма, СпособОбеспечения) Экспорт
	
	Если Форма.Отображение = НСтр("ru='Склады';uk='Склади'") Тогда
		
		Если Форма.ОбрабатываетсяВыбор Тогда
			
			Склад = Форма.Элементы.Список.ТекущаяСтрока;
			РегистрыСведений.СхемыОбеспечения.Добавить(Склад, Форма.Объект.Ссылка, СпособОбеспечения);
			
		Иначе
			
			Для Каждого Строка Из Форма.Элементы.Список.ВыделенныеСтроки Цикл
				
				Если Строка.ЭтоГруппа Тогда
					Продолжить;
				КонецЕсли;
				Если ЗначениеЗаполнено(СпособОбеспечения) Тогда
					РегистрыСведений.СхемыОбеспечения.Добавить(Строка.Ссылка, Форма.Объект.Ссылка, СпособОбеспечения);
				Иначе
					РегистрыСведений.СхемыОбеспечения.Удалить(Строка.Ссылка, Форма.Объект.Ссылка);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Форма.Элементы.Список.Обновить();
		
	Иначе
		
		Если Форма.ОбрабатываетсяВыбор Тогда
			
			СтрокаДерева = Форма.ДеревоФорматов.НайтиПоИдентификатору(Форма.Элементы.ДеревоФорматов.ТекущаяСтрока);
			
			Если ЗначениеЗаполнено(СтрокаДерева.ФорматСклад) Тогда
			
				Если ЗначениеЗаполнено(СпособОбеспечения) Тогда
					РегистрыСведений.СхемыОбеспечения.Добавить(СтрокаДерева.ФорматСклад, Форма.Объект.Ссылка, СпособОбеспечения);
				Иначе
					РегистрыСведений.СхемыОбеспечения.Удалить(СтрокаДерева.ФорматСклад, Форма.Объект.Ссылка);
				КонецЕсли;
			
			КонецЕсли;
			
		Иначе
			
			Для Каждого Идентификатор Из Форма.Элементы.ДеревоФорматов.ВыделенныеСтроки Цикл
				
				СтрокаДерева = Форма.ДеревоФорматов.НайтиПоИдентификатору(Идентификатор);
				
				Если Не ЗначениеЗаполнено(СтрокаДерева.ФорматСклад) Тогда
					Продолжить;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СпособОбеспечения) Тогда
					РегистрыСведений.СхемыОбеспечения.Добавить(СтрокаДерева.ФорматСклад, Форма.Объект.Ссылка, СпособОбеспечения);
				Иначе
					РегистрыСведений.СхемыОбеспечения.Удалить(СтрокаДерева.ФорматСклад, Форма.Объект.Ссылка);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СпособОбеспечения) Тогда
			РеквизитыСпособа = РеквизитыСпособа(СпособОбеспечения);
		Иначе
			РеквизитыСпособа = РеквизитыСпособаПоУмолчанию();
		КонецЕсли;
		
		Если Форма.ОбрабатываетсяВыбор Тогда
			
			СтрокаДерева = Форма.ДеревоФорматов.НайтиПоИдентификатору(Форма.Элементы.ДеревоФорматов.ТекущаяСтрока);
			
			Родитель = СтрокаДерева.ПолучитьРодителя();
			Если Родитель <> Неопределено Тогда
				Если ЗначениеЗаполнено(СпособОбеспечения) Тогда
					ЗаполнитьСпособОбеспеченияСклада(СтрокаДерева, СпособОбеспечения, РеквизитыСпособа);
				Иначе
					ЗаполнитьСпособОбеспеченияСклада(СтрокаДерева, СпособОбеспечения, Родитель);
				КонецЕсли;
			ИначеЕсли ЗначениеЗаполнено(СтрокаДерева.ФорматСклад) Тогда
				ЗаполнитьСпособОбеспеченияФормата(СтрокаДерева, СпособОбеспечения, РеквизитыСпособа);
			КонецЕсли;
			
		Иначе
			
			Для Каждого Идентификатор Из Форма.Элементы.ДеревоФорматов.ВыделенныеСтроки Цикл
				
				СтрокаДерева = Форма.ДеревоФорматов.НайтиПоИдентификатору(Идентификатор);
				
				Родитель = СтрокаДерева.ПолучитьРодителя();
				Если Родитель <> Неопределено Тогда
					Если ЗначениеЗаполнено(СпособОбеспечения) Тогда
						ЗаполнитьСпособОбеспеченияСклада(СтрокаДерева, СпособОбеспечения, РеквизитыСпособа);
					Иначе
						ЗаполнитьСпособОбеспеченияСклада(СтрокаДерева, СпособОбеспечения, Родитель);
					КонецЕсли;
				ИначеЕсли ЗначениеЗаполнено(СтрокаДерева.ФорматСклад) Тогда
					ЗаполнитьСпособОбеспеченияФормата(СтрокаДерева, СпособОбеспечения, РеквизитыСпособа);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		
	КонецЕсли;
	
КонецПроцедуры

Функция КоличествоИспользований(Ссылка) Экспорт
	
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		
		Возврат 0;
		
	КонецЕсли;
	
	Запрос = новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК КоличествоИспользований
	|ИЗ
	|	Справочник.Номенклатура КАК Таблица
	|ГДЕ
	|	Таблица.СхемаОбеспечения = &Ссылка
	|	И НЕ Таблица.ПометкаУдаления";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	КоличествоИспользований = 0;
	Если Выборка.Следующий() Тогда
		
		КоличествоИспользований = Выборка.КоличествоИспользований;
		
	КонецЕсли;
	
	Возврат КоличествоИспользований;
	
КонецФункции

Функция РеквизитыСпособа(Ссылка)
	
	ПоляНастройки = Новый Структура(ПоляНастройки());
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка,
		"ИсточникОбеспеченияПотребностей, СрокИсполненияЗаказа, ОбеспечиваемыйПериод, ТипОбеспечения");
	ПоляНастройки.СрокПоставки = ЗначенияРеквизитов.СрокИсполненияЗаказа;
	ПоляНастройки.ИсточникОбеспечения = ЗначенияРеквизитов.ИсточникОбеспеченияПотребностей;
	ПоляНастройки.ОбеспечиваемыйПериод = ЗначенияРеквизитов.ОбеспечиваемыйПериод;
	ПоляНастройки.ТипОбеспечения = ЗначенияРеквизитов.ТипОбеспечения;
	ПоляНастройки.СпособОбеспечения = Ссылка;
	
	Возврат ПоляНастройки;
	
КонецФункции

Функция ПоляНастройки()
	
	Возврат "СпособОбеспечения, ИсточникОбеспечения, СрокПоставки, ОбеспечиваемыйПериод, ТипОбеспечения";
	
КонецФункции

Функция РеквизитыСпособаПоУмолчанию()
	
	ПоляНастройки = Новый Структура(ПоляНастройки());
	ПоляНастройки.СрокПоставки = 0;
	ПоляНастройки.ИсточникОбеспечения = Неопределено;
	ПоляНастройки.ОбеспечиваемыйПериод = 0;
	ПоляНастройки.СпособОбеспечения = Справочники.СпособыОбеспеченияПотребностей.ПустаяСсылка();
	ПоляНастройки.ТипОбеспечения = ПредопределенноеЗначение("Перечисление.ТипыОбеспечения.ПустаяСсылка");
	
	Возврат ПоляНастройки;
	
КонецФункции

Процедура ЗаполнитьСпособОбеспеченияСклада(СтрокаДерева, СпособОбеспечения, РеквизитыСпособа)
	
	СтрокаДерева.ЕстьНастройкаДляСклада = ЗначениеЗаполнено(СпособОбеспечения);
	ЗаполнитьЗначенияСвойств(СтрокаДерева, РеквизитыСпособа, ПоляНастройки());
	ЗаполнитьЗначенияСвойств(СтрокаДерева.НастройкаСклада, РеквизитыСпособа);
	
КонецПроцедуры

Процедура ЗаполнитьСпособОбеспеченияФормата(СтрокаДерева, СпособОбеспечения, РеквизитыСпособа)
	
	СтрокаДерева.ЕстьНастройкаДляФормата = ЗначениеЗаполнено(СпособОбеспечения);
	СтрокаДерева.СпособОбеспечения = СпособОбеспечения;
	ЗаполнитьЗначенияСвойств(СтрокаДерева, РеквизитыСпособа);
	
	Для Каждого ПодчиненныйЭлемент Из СтрокаДерева.ПолучитьЭлементы() Цикл
		
		ПодчиненныйЭлемент.ЕстьНастройкаДляФормата = СтрокаДерева.ЕстьНастройкаДляФормата;
		Если Не ПодчиненныйЭлемент.ЕстьНастройкаДляСклада Тогда
			ЗаполнитьЗначенияСвойств(ПодчиненныйЭлемент, РеквизитыСпособа);
		Иначе
			ЗаполнитьЗначенияСвойств(ПодчиненныйЭлемент, ПодчиненныйЭлемент.НастройкаСклада);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли