#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Документы.ОперацияПоПлатежнойКарте.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	
	Документы.ПоступлениеБезналичныхДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	
	Документы.ПриходныйКассовыйОрдер.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	
	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);
	
	ВводНаОснованииПереопределяемый.ДобавитьКомандыСоздатьНаОснованииПисмаПоШаблону(КомандыСоздатьНаОсновании);
	
КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетНаОплатуКлиенту) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.СчетНаОплатуКлиенту.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.СчетНаОплатуКлиенту);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьСчетаНаОплатуКлиентам";
		
		
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ДобавитьКомандуСоздатьНаОснованииСчетаНаОплату(КомандыСоздатьНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетНаОплатуКлиенту) Тогда 
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "ВводНаОснованииУТКлиент.СоздатьСчетНаОплату";
		КомандаСоздатьНаОсновании.Идентификатор = "СоздатьСчетНаОплату";
		КомандаСоздатьНаОсновании.Представление = НСтр("ru='Счета на оплату';uk='Рахунки на оплату'");
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьСчетаНаОплатуКлиентам";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ДобавитьКомандуСоздатьНаОснованииСчетаНаОплатуРеализацияАкт(КомандыСоздатьНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетНаОплатуКлиенту) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "ВводНаОснованииУТКлиент.СоздатьСчетНаОплатуРеализацияАкт";
		КомандаСоздатьНаОсновании.Идентификатор = "СоздатьСчетНаОплатуРеализацияАкт";
		КомандаСоздатьНаОсновании.Представление = НСтр("ru='Счет на оплату';uk='Рахунок на оплату'");
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьСчетаНаОплатуКлиентам";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ДобавитьКомандуСоздатьНаОснованииСчетаНаОплатуПоДоговору(КомандыСоздатьНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетНаОплатуКлиенту) Тогда 
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "ВводНаОснованииУТКлиент.СоздатьСчетНаОплатуПоДоговору";
		КомандаСоздатьНаОсновании.Идентификатор = "СоздатьСчетНаОплатуПоДоговору";
		КомандаСоздатьНаОсновании.Представление = НСтр("ru='Счет на оплату (по задолженности)';uk='Рахунок на оплату (за заборгованістю)'");
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьСчетаНаОплатуКлиентам";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ДобавитьКомандуСоздатьНаОснованииСчетаНаОплатуПредоплатаПоДоговору(КомандыСоздатьНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетНаОплатуКлиенту) Тогда 
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "ВводНаОснованииУТКлиент.СоздатьСчетНаОплатуПредоплатаПоДоговору";
		КомандаСоздатьНаОсновании.Идентификатор = "СоздатьСчетНаОплатуПредоплатаПоДоговору";
		КомандаСоздатьНаОсновании.Представление = НСтр("ru='Счет на оплату (предоплата)';uk='Рахунок на оплату (передоплату)'");
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьСчетаНаОплатуКлиентам";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ДобавитьКомандуСоздатьНаОснованииСчетаНаОплатуОтчетДавальцу(КомандыСоздатьНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетНаОплатуКлиенту) Тогда 
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "ВводНаОснованииУТКлиент.СоздатьСчетНаОплатуОтчетДавальцу";
		КомандаСоздатьНаОсновании.Идентификатор = "СоздатьСчетНаОплатуОтчетДавальцу";
		КомандаСоздатьНаОсновании.Представление = НСтр("ru='Счет на оплату';uk='Рахунок на оплату'");
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьСчетаНаОплатуКлиентам";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ДобавитьКомандуСоздатьНаОснованииСчетаНаОплатуЗаказДавальца(КомандыСоздатьНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.СчетНаОплатуКлиенту) Тогда 
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "ВводНаОснованииУТКлиент.СоздатьСчетНаОплатуЗаказДавальца";
		КомандаСоздатьНаОсновании.Идентификатор = "СоздатьСчетНаОплатуЗаказДавальца";
		КомандаСоздатьНаОсновании.Представление = НСтр("ru='Счет на оплату';uk='Рахунок на оплату'");
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьСчетаНаОплатуКлиентам";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

КонецПроцедуры


// Возвращает сумму документа - основания счета
//
// Параметры:
//	ДокументОснование - ДокументСсылка.ЗаказКлиента, ДокументСсылка.РеализацияТоваровУслуг
//
// Возвращаемое значение:
//	Число - Сумма документа - основания, если ДокументОснование не пустая ссылка, 0 в противном случае
//
Функция ПолучитьСуммуДокументаОснования(ДокументОснование) Экспорт
	
	СуммаДокумента = 0;
	
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		
		Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
			ТекстЗапроса = "
			|ВЫБРАТЬ
			|	ВЫБОР КОГДА ДокументПродажи.ТребуетсяЗалогЗаТару ТОГДА
			|		ДокументПродажи.СуммаДокумента + ДокументПродажи.СуммаВозвратнойТары
			|	ИНАЧЕ
			|		ДокументПродажи.СуммаДокумента
			|	КОНЕЦ КАК СуммаДокумента
			|ИЗ
			|	Документ.ЗаказКлиента КАК ДокументПродажи
			|ГДЕ
			|	ДокументПродажи.Ссылка = &Ссылка
			|";
		ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента") Тогда
			ТекстЗапроса = "
			|ВЫБРАТЬ
			|	ВЫБОР КОГДА ДокументПродажи.ТребуетсяЗалогЗаТару ТОГДА
			|		ДокументПродажи.СуммаЗамены + ДокументПродажи.СуммаВозвратнойТары
			|	ИНАЧЕ
			|		ДокументПродажи.СуммаЗамены
			|	КОНЕЦ КАК СуммаДокумента
			|ИЗ
			|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ДокументПродажи
			|ГДЕ
			|	ДокументПродажи.Ссылка = &Ссылка
			|";
		ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			ТекстЗапроса = "
			|ВЫБРАТЬ
			|	ДокументПродажи.СуммаВзаиморасчетов КАК СуммаДокумента
			|ИЗ
			|	Документ.РеализацияТоваровУслуг КАК ДокументПродажи
			|ГДЕ
			|	ДокументПродажи.Ссылка = &Ссылка
			|";
		ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВыкупВозвратнойТарыКлиентом") Тогда
			ТекстЗапроса = "
			|ВЫБРАТЬ
			|	ДокументПродажи.СуммаВзаиморасчетов КАК СуммаДокумента
			|ИЗ
			|	Документ.ВыкупВозвратнойТарыКлиентом КАК ДокументПродажи
			|ГДЕ
			|	ДокументПродажи.Ссылка = &Ссылка
			|";
		ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.АктВыполненныхРабот") Тогда
			ТекстЗапроса = "
			|ВЫБРАТЬ
			|	ДокументПродажи.СуммаВзаиморасчетов КАК СуммаДокумента
			|ИЗ
			|	Документ.АктВыполненныхРабот КАК ДокументПродажи
			|ГДЕ
			|	ДокументПродажи.Ссылка = &Ссылка
			|";
		ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтчетКомитенту") Тогда
			ТекстЗапроса = "
			|ВЫБРАТЬ
			|	ДокументПродажи.СуммаВознаграждения КАК СуммаДокумента
			|ИЗ
			|	Документ.ОтчетКомитенту КАК ДокументПродажи
			|ГДЕ
			|	ДокументПродажи.Ссылка = &Ссылка
			|";
		ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтчетКомиссионера") Тогда
			ТекстЗапроса = "
			|ВЫБРАТЬ
			|	ДокументПродажи.СуммаДокумента КАК СуммаДокумента
			|ИЗ
			|	Документ.ОтчетКомиссионера КАК ДокументПродажи
			|ГДЕ
			|	ДокументПродажи.Ссылка = &Ссылка
			|";
		ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтчетКомиссионераОСписании") Тогда
			ТекстЗапроса = "
			|ВЫБРАТЬ
			|	ДокументПродажи.СуммаДокумента КАК СуммаДокумента
			|ИЗ
			|	Документ.ОтчетКомиссионераОСписании КАК ДокументПродажи
			|ГДЕ
			|	ДокументПродажи.Ссылка = &Ссылка
			|";	
		Иначе
			ТекстЗапроса = "";
		КонецЕсли;
	
		Если Не ПустаяСтрока(ТекстЗапроса) Тогда
			
			Запрос = Новый Запрос(ТекстЗапроса);
			Запрос.УстановитьПараметр("Ссылка", ДокументОснование);
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				СуммаДокумента  = Выборка.СуммаДокумента;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
		
	Возврат СуммаДокумента;
	
КонецФункции

Процедура ПроверитьКорректностьХозяйственнойОперацииДокументаОснования(ЕстьОшибкиХозяйственнаяОперация, ХозяйственнаяОперация) Экспорт

	Если ЕстьОшибкиХозяйственнаяОперация Тогда
		
		ТекстОшибки = НСтр("ru='Ввод на основании документа с хозяйственной операцией %ХозяйственнаяОперация% невозможен.';uk='Введення на підставі документа з господарською операцією %ХозяйственнаяОперация% неможливе.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ХозяйственнаяОперация%", ХозяйственнаяОперация);
		
		ВызватьИсключение ТекстОшибки;
		
	КонецЕсли;
	
КонецПроцедуры

// Устанавливает статус счетов на оплату клиентам
//
// Параметры:
//	СчетаНаОплату - массив ссылок счетов на оплату
//
Функция УстановитьПризнакАннулирован(Знач СчетаНаОплату) Экспорт
	
	МассивСсылок = Новый Массив();
	КоличествоОбработанных = 0;
	
	Для Каждого СчетНаОплату Из СчетаНаОплату Цикл
	
		Если ТипЗнч(СчетНаОплату) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			Продолжить;
		КонецЕсли;
		
		МассивСсылок.Добавить(СчетНаОплату);
		
	КонецЦикла;
	
	Если МассивСсылок = 0 Тогда
		Возврат КоличествоОбработанных;
	КонецЕсли;
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	СчетНаОплатуКлиенту.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.СчетНаОплатуКлиенту КАК СчетНаОплатуКлиенту
		|ГДЕ
		|	СчетНаОплатуКлиенту.Ссылка В(&МассивСсылок)
		|	И Не СчетНаОплатуКлиенту.Аннулирован
		|");
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Выборка = Запрос.Выполнить().Выбрать();
		
	НачатьТранзакцию();
	
	Пока Выборка.Следующий() Цикл
		
		Попытка
			ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);
		Исключение
			
			ТекстОшибки = НСтр("ru='Не удалось заблокировать %Документ%. %ОписаниеОшибки%';uk='Не вдалося заблокувати %Документ%. %ОписаниеОшибки%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%",       Выборка.Ссылка);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ОписаниеОшибки%", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ОтменитьТранзакцию();
			
			ВызватьИсключение ТекстОшибки;
				
		КонецПопытки;
		
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Объект.Аннулирован = Истина;
		
		НетОшибок = Истина;
		
		Если Объект.Проведен Тогда
			НетОшибок = Объект.ПроверитьЗаполнение();
		КонецЕсли;
			
		Если Не НетОшибок Тогда
			Продолжить;
		КонецЕсли;

		Попытка
			
			Объект.Записать(?(Объект.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
			КоличествоОбработанных = КоличествоОбработанных + 1;
			
		Исключение
			
			ТекстОшибки = НСтр("ru='Не удалось записать %Документ%. %ОписаниеОшибки%';uk='Не вдалося записати %Документ%. %ОписаниеОшибки%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%",       Выборка.Ссылка);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ОписаниеОшибки%", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			ОтменитьТранзакцию();
			ВызватьИсключение ТекстОшибки;
			
		КонецПопытки

	КонецЦикла;

	ЗафиксироватьТранзакцию();
	
	Возврат КоличествоОбработанных;

КонецФункции

// Формирует назначение платежа для счета на оплату клиенту
//
// Параметры:
//	Номер - Строка - номер документа основания
//	Префикс - Строка - префикс номера
//	ДокументОснование - ДокументСсылка - документ, который является основанием счета на оплату
//
Функция СформироватьНазначениеПлатежа(Знач Номер, Знач ДокументОснование) Экспорт
	
	ТекстДокумента = "";
		
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаказКлиента") Тогда
		
		ТекстНазначениеПлатежа = НСтр("ru='Оплата по заказу клиента №%Номер%';uk='Оплата за замовленням клієнта №%Номер%'");
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("СправочникСсылка.СоглашенияСКлиентами") Тогда
		
		ТекстНазначениеПлатежа = НСтр("ru='Оплата по соглашению №%Номер%';uk='Оплата за офертою №%Номер%'");
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента") Тогда
		
		ТекстНазначениеПлатежа = НСтр("ru='Оплата по заявке на возврат №%Номер%';uk='Оплата за заявкою на повернення №%Номер%'");
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтчетКомиссионераОСписании") Тогда
		
		ТекстНазначениеПлатежа = НСтр("ru='Оплата по отчету комиссионера о списании №%Номер%';uk='Оплата за звітом комісіонера про списання №%Номер%'");
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтчетКомитенту") Тогда
		
		ТекстНазначениеПлатежа = НСтр("ru='Оплата по отчету комитенту №%Номер%';uk='Оплата за звітом комітенту №%Номер%'");
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОтчетКомиссионера") Тогда
		
		ТекстНазначениеПлатежа = НСтр("ru='Оплата по отчету комиссионера о продажах №%Номер%';uk='Оплата за звітом комісіонера про продажі №%Номер%'");
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		ТекстНазначениеПлатежа = НСтр("ru='Оплата по реализации товаров и услуг №%Номер%';uk='Оплата за реалізацією товарів і послуг №%Номер%'");
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ВыкупВозвратнойТарыКлиентом") Тогда
		
		ТекстНазначениеПлатежа = НСтр("ru='Оплата по выкупу возвратной тары клиентом №%Номер%';uk='Оплата по викупу зворотної тари клієнтом №%Номер%'");
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.АктВыполненныхРабот") Тогда
		
		ТекстНазначениеПлатежа = НСтр("ru='Оплата по акту выполненных работ №%Номер%';uk='Оплата за актом виконаних робіт №%Номер%'");
		
	ИначеЕсли ТипЗнч(ДокументОснование) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		
		ТекстНазначениеПлатежа = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОснование, "НаименованиеДляПечати");
		
	КонецЕсли;
		
	ТекстНазначениеПлатежа = СтрЗаменить(
		ТекстНазначениеПлатежа,
		"%Номер%",
		ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(Номер, Ложь, Истина));
		
	Возврат ТекстНазначениеПлатежа;
	
КонецФункции

#Область ПроцедурыИФункцииПечатиФормы

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	ЭтоПартнер = ПраваПользователяПовтИсп.ЭтоПартнер();
	
	Если НЕ ЭтоПартнер
		 И ПолучитьФункциональнуюОпцию("НеВыбиратьВариантВыводаСкидокПриПечатиДокументовПродажи") Тогда
		// Счет на оплату
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьСчетовНаОплату";
		КомандаПечати.Идентификатор = "СчетНаОплату";
		КомандаПечати.Представление = НСтр("ru='Счет на оплату';uk='Рахунок на оплату'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;

	Если НЕ ЭтоПартнер
		 И ПолучитьФункциональнуюОпцию("ВыбиратьВариантВыводаСкидокПриПечатиДокументовПродажи") Тогда
		// Счет на оплату (не выводить скидки)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьСчетовНаОплату";
		КомандаПечати.Идентификатор = "СчетНаОплату";
		КомандаПечати.Представление = НСтр("ru='Счет на оплату (не выводить скидки)';uk='Рахунок на оплату (не виводити знижки)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ОтображатьСкидки", Ложь);
	КонецЕсли;

	Если НЕ ЭтоПартнер
		 И ПолучитьФункциональнуюОпцию("ВыбиратьВариантВыводаСкидокПриПечатиДокументовПродажи") Тогда
		// Счет на оплату (выводить скидки)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьСчетовНаОплату";
		КомандаПечати.Идентификатор = "СчетНаОплату";
		КомандаПечати.Представление = НСтр("ru='Счет на оплату (выводить скидки)';uk='Рахунок на оплату (виводити знижки)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ОтображатьСкидки", Истина);
	КонецЕсли;

	Если ЭтоПартнер
		 И ПолучитьФункциональнуюОпцию("ИспользоватьСчетаНаОплатуКлиентам") Тогда
		// Счет на оплату
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьСчетовНаОплату";
		КомандаПечати.Идентификатор = "СчетНаОплату";
		КомандаПечати.Представление = НСтр("ru='Счет на оплату';uk='Рахунок на оплату'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;

	Если НЕ ЭтоПартнер
		 И ПолучитьФункциональнуюОпцию("НеВыбиратьВариантВыводаСкидокПриПечатиДокументовПродажи") Тогда
		// Счет на оплату
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьСчетовНаОплату";
		КомандаПечати.Идентификатор = "СчетНаОплату";
		КомандаПечати.Представление = НСтр("ru='Счет на оплату с факсимиле';uk='Рахунок на оплату з факсиміле'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ОтображатьФаксимиле", Истина);
	КонецЕсли;

	Если НЕ ЭтоПартнер
		 И ПолучитьФункциональнуюОпцию("ВыбиратьВариантВыводаСкидокПриПечатиДокументовПродажи") Тогда
		// Счет на оплату (не выводить скидки)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьСчетовНаОплату";
		КомандаПечати.Идентификатор = "СчетНаОплату";
		КомандаПечати.Представление = НСтр("ru='Счет на оплату с факсимиле (не выводить скидки)';uk='Рахунок на оплату з факсиміле (не виводити знижки)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ОтображатьСкидки", Ложь);
		КомандаПечати.ДополнительныеПараметры.Вставить("ОтображатьФаксимиле", Истина);
	КонецЕсли;

	Если НЕ ЭтоПартнер
		 И ПолучитьФункциональнуюОпцию("ВыбиратьВариантВыводаСкидокПриПечатиДокументовПродажи") Тогда
		// Счет на оплату (выводить скидки)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьСчетовНаОплату";
		КомандаПечати.Идентификатор = "СчетНаОплату";
		КомандаПечати.Представление = НСтр("ru='Счет на оплату с факсимиле (выводить скидки)';uk='Рахунок на оплату з факсиміле (виводити знижки)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ОтображатьСкидки", Истина);
		КомандаПечати.ДополнительныеПараметры.Вставить("ОтображатьФаксимиле", Истина);
	КонецЕсли;

	Если ЭтоПартнер
		 И ПолучитьФункциональнуюОпцию("ИспользоватьСчетаНаОплатуКлиентам") Тогда
		// Счет на оплату
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьСчетовНаОплату";
		КомандаПечати.Идентификатор = "СчетНаОплату";
		КомандаПечати.Представление = НСтр("ru='Счет на оплату с факсимиле';uk='Рахунок на оплату з факсиміле'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ДополнительныеПараметры.Вставить("ОтображатьФаксимиле", Истина);
	КонецЕсли;


	Если НЕ ЭтоПартнер Тогда
		// Комплект документов на принтер
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьКомплектаДокументов";
		КомандаПечати.МенеджерПечати = "";
		КомандаПечати.Идентификатор = "КомплектДокументов";
		КомандаПечати.СразуНаПринтер = Истина;
		КомандаПечати.Представление = НСтр("ru='Комплект документов на принтер';uk='Комплект документів на принтер'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 1;

		// Комплект документов с настройкой...
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьКомплектаДокументовСНастройкой";
		КомандаПечати.МенеджерПечати = "";
		КомандаПечати.Идентификатор = "КомплектДокументовСНастройкой";
		КомандаПечати.Представление = НСтр("ru='Комплект документов с настройкой...';uk='Комплект документів з настройкою...'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 2;
	КонецЕсли;

КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "КомплектДокументов") Тогда
		КоллекцияПечатныхФорм.Очистить();
		СформироватьКомплектПечатныхФорм(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);
	КонецЕсли;
	
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

// Функция получает данные для формирования печатной формы "Счет на оплату"
//
// Параметры:
//	ПараметрыПечати - Структура
//	МассивОбъектов - Массив - Массив ссылок на документы, по которым необходимо получить данные
//
// Возвращаемое значение:
//	Структура - Структура с полями: "РезультатПоШапке", "РезультатПоЭтапамОплаты", "РезультатПоТабличнойЧасти"
//
Функция ПолучитьДанныеДляПечатнойФормыСчетаНаОплату(ПараметрыПечати, МассивОбъектов) Экспорт
	
	Возврат ДанныеДляПечатныхФормСчетаНаОплатуИзвещения(ПараметрыПечати, МассивОбъектов);
	
КонецФункции


Функция ДанныеДляПечатныхФормСчетаНаОплатуИзвещения(ПараметрыПечати, МассивОбъектов)
	
	Если ПараметрыПечати <> Неопределено И ПараметрыПечати.Свойство("ОтображатьСкидки") Тогда
		ОтображатьСкидки = ПараметрыПечати.ОтображатьСкидки;
	Иначе
		ОтображатьСкидки = (Константы.ОтображениеСкидокВПечатныхФормахДокументовПродажи.Получить()
			<> Перечисления.ВариантыВыводаСкидокВПечатныхФормах.НеВыводитьСкидки);
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Документы.Ссылка КАК Ссылка,
	|	Документы.ДокументОснование КАК ДокументОснование
	|ПОМЕСТИТЬ ТаблицаДокументов
	|ИЗ
	|	Документ.СчетНаОплатуКлиенту КАК Документы
	|ГДЕ
	|	Документы.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ДокументОснование
	|;
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|   ЛОЖЬ КАК УчитыватьНДС,
	|   ДоговорыКонтрагентов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ТаблицаУчитыватьНДС
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Ссылка В(ВЫБРАТЬ ТаблицаДокументов.ДокументОснование ИЗ ТаблицаДокументов) 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|   ИСТИНА КАК УчитыватьНДС,
	|   Товары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаказКлиента.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(ВЫБРАТЬ ТаблицаДокументов.ДокументОснование ИЗ ТаблицаДокументов) И Товары.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НеНДС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|   ИСТИНА КАК УчитыватьНДС,
	|   Товары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента.ЗаменяющиеТовары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(ВЫБРАТЬ ТаблицаДокументов.ДокументОснование ИЗ ТаблицаДокументов) И Товары.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НеНДС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|   ИСТИНА КАК УчитыватьНДС,
	|   Товары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(ВЫБРАТЬ ТаблицаДокументов.ДокументОснование ИЗ ТаблицаДокументов) И Товары.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НеНДС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|   ИСТИНА КАК УчитыватьНДС,
	|   Товары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ВыкупВозвратнойТарыКлиентом.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(ВЫБРАТЬ ТаблицаДокументов.ДокументОснование ИЗ ТаблицаДокументов) И Товары.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НеНДС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|   ИСТИНА КАК УчитыватьНДС,
	|   Товары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.АктВыполненныхРабот.Услуги КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(ВЫБРАТЬ ТаблицаДокументов.ДокументОснование ИЗ ТаблицаДокументов) И Товары.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НеНДС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|   ИСТИНА КАК УчитыватьНДС,
	|   ОтчетКомитенту.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ОтчетКомитенту
	|ГДЕ
	|	ОтчетКомитенту.Ссылка В(ВЫБРАТЬ ТаблицаДокументов.ДокументОснование ИЗ ТаблицаДокументов) И ОтчетКомитенту.СтавкаНДСВознаграждения <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НеНДС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|   ИСТИНА КАК УчитыватьНДС,
	|   Товары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ОтчетКомиссионера.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(ВЫБРАТЬ ТаблицаДокументов.ДокументОснование ИЗ ТаблицаДокументов) И Товары.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НеНДС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|   ИСТИНА КАК УчитыватьНДС,
	|   Товары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ОтчетКомиссионераОСписании.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(ВЫБРАТЬ ТаблицаДокументов.ДокументОснование ИЗ ТаблицаДокументов) И Товары.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НеНДС)
	|
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Ссылка КАК Ссылка,
	|	Документы.Номер КАК Номер,
	|	Документы.Дата КАК Дата,
	|	Документы.ДокументОснование КАК ДокументОснование,
	|	ЕСТЬNULL(Документы.БанковскийСчет.Владелец, Документы.Организация) КАК Организация,
	|	Документы.Организация КАК ОрганизацияПоставщик,
	|	Документы.ПредставительОрганизации КАК ПредставительОрганизации,
	|	Документы.ПредставительОрганизацииДолжность КАК ПредставительОрганизацииДолжность,	 
	|	Документы.Контрагент КАК Контрагент,
	|	Документы.Контрагент.ЮрФизЛицо КАК КонтрагентЮрФизЛицо,
	|	Документы.БанковскийСчет КАК БанковскийСчет,
	|	
	|	ВЫБОР КОГДА Документы.БанковскийСчет.ИностранныйБанк
	|		ИЛИ Документы.БанковскийСчет.ВалютаДенежныхСредств <> Константы.ВалютаРегламентированногоУчета ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ПлатежЗаРубеж,
	|	Документы.БанковскийСчет.СВИФТБанка КАК СВИФТБанка,
	|	Документы.БанковскийСчет.СВИФТБанкаДляРасчетов КАК СВИФТБанкаДляРасчетов,
	|	ВЫБОР
	|		КОГДА Документы.БанковскийСчет.РучноеИзменениеРеквизитовБанка
	|			ТОГДА Документы.БанковскийСчет.АдресБанка
	|		ИНАЧЕ Документы.БанковскийСчет.Банк.Адрес
	|	КОНЕЦ КАК АдресБанка,
	|	Документы.БанковскийСчет.АдресБанкаДляРасчетов КАК АдресБанкаДляРасчетов,
	|	Документы.БанковскийСчет.СчетВБанкеДляРасчетов КАК СчетВБанкеДляРасчетов,
	|	
	|	Документы.БанковскийСчет.НомерСчета КАК НомерБанковскогоСчета,
	|	ВЫБОР
	|		КОГДА Документы.БанковскийСчет.РучноеИзменениеРеквизитовБанка
	|			ТОГДА Документы.БанковскийСчет.НаименованиеБанка
	|		ИНАЧЕ Документы.БанковскийСчет.Банк.Наименование
	|	КОНЕЦ КАК НаименованиеБанка,
	|	Документы.БанковскийСчет.НаименованиеБанкаДляРасчетов КАК НаименованиеБанкаДляРасчетов,
	|	Документы.БанковскийСчет.ТекстКорреспондента КАК БанковскийСчетТекстКорреспондента,
	|	ВЫБОР
	|		КОГДА Документы.ДокументОснование ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА ЛОЖЬ
	|		КОГДА Документы.ДокументОснование ССЫЛКА Документ.ОтчетКомитенту
	|			ТОГДА ИСТИНА
	|		КОГДА Документы.ДокументОснование ССЫЛКА Документ.ОтчетКомиссионера
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ Документы.ДокументОснование.ЦенаВключаетНДС
	|	КОНЕЦ КАК ЦенаВключаетНДС,
	|	Документы.ДокументОснование.СуммаДокумента КАК СуммаКВозврату,
	|   ЕСТЬNULL(ТаблицаУчитыватьНДС.УчитыватьНДС, Ложь) КАК УчитыватьНДС,
	|	Документы.Валюта КАК Валюта,
	|	Документы.Менеджер.ФизическоеЛицо КАК Менеджер,
	|	Документы.ДополнительнаяИнформация КАК ДополнительнаяИнформация,
	|	Документы.ЧастичнаяОплата КАК ЧастичнаяОплата,
	|	Документы.НазначениеПлатежа КАК НазначениеПлатежа,
	|	ВЫБОР КОГДА Документы.ДокументОснование ССЫЛКА Документ.ОтчетКомитенту
	|				И Документы.ДокументОснование.СуммаВознаграждения = 0 ТОГДА
	|		0
	|	КОГДА Документы.ДокументОснование ССЫЛКА Документ.ОтчетКомитенту ТОГДА // СуммаВознаграждения <> 0
	|		Документы.СуммаДокумента * 100 / Документы.ДокументОснование.СуммаВознаграждения
	|	КОГДА Документы.ДокументОснование.СуммаДокумента = 0 ТОГДА
	|		0
	|	КОГДА (Документы.ДокументОснование ССЫЛКА Документ.ЗаказКлиента
	|				ИЛИ Документы.ДокументОснование ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента)
	|				И Документы.ДокументОснование.ТребуетсяЗалогЗаТару ТОГДА
	|		Документы.СуммаДокумента * 100 / (Документы.ДокументОснование.СуммаДокумента + Документы.ДокументОснование.СуммаВозвратнойТары)
	|	ИНАЧЕ
	|		Документы.СуммаДокумента * 100 / Документы.ДокументОснование.СуммаДокумента
	|	КОНЕЦ КАК ПроцентОплаты,
	|	Документы.СуммаДокумента КАК СуммаДокумента,
	|	Неопределено КАК Грузоотправитель,
	|	Неопределено КАК Грузополучатель,
	|	ВЫБОР
	|		КОГДА ЗаявкаНаВозвратТоваровОтКлиента.Ссылка ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК СчетКВозврату
	|ИЗ
	|	Документ.СчетНаОплатуКлиенту КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозвратТоваровОтКлиента
	|		ПО Документы.ДокументОснование = ЗаявкаНаВозвратТоваровОтКлиента.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаУчитыватьНДС КАК ТаблицаУчитыватьНДС
	|		ПО Документы.ДокументОснование = ТаблицаУчитыватьНДС.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Константы
	|		ПО Истина
	|ГДЕ
	|	Документы.Ссылка В
	|			(ВЫБРАТЬ
	|				ТаблицаДокументов.Ссылка
	|			ИЗ
	|				ТаблицаДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Документы.МоментВремени
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЭтапыГрафикаОплаты.Ссылка КАК Ссылка,
	|	ЭтапыГрафикаОплаты.НомерСтроки КАК НомерСтроки,
	|	ЭтапыГрафикаОплаты.ДатаПлатежа КАК ДатаПлатежа,
	|	ЭтапыГрафикаОплаты.ПроцентПлатежа КАК ПроцентПлатежа,
	|	ЭтапыГрафикаОплаты.СуммаПлатежа КАК СуммаПлатежа,
	|	ЭтапыГрафикаОплаты.ЭтоЗалогЗаТару КАК ЭтоЗалогЗаТару
	|ИЗ
	|	Документ.СчетНаОплатуКлиенту.ЭтапыГрафикаОплаты КАК ЭтапыГрафикаОплаты
	|ГДЕ
	|	ЭтапыГрафикаОплаты.Ссылка В
	|			(ВЫБРАТЬ
	|				ТаблицаДокументов.Ссылка
	|			ИЗ
	|				ТаблицаДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка КАК Ссылка,
	|	ТаблицаДокументов.ДокументОснование.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.НоменклатураНабора,
	|	Товары.ХарактеристикаНабора,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.Количество КАК Количество,
	|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА &ОтображатьСкидки ТОГДА
	|			Товары.Цена
	|		ИНАЧЕ Товары.Сумма/Товары.КоличествоУпаковок 
	|	КОНЕЦ КАК Цена,
	|	Товары.Сумма КАК Сумма,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	Товары.СуммаНДС КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА &ОтображатьСкидки ТОГДА
	|			Товары.СуммаРучнойСкидки + Товары.СуммаАвтоматическойСкидки
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК СуммаСкидки,
	|	Товары.Сумма + Товары.СуммаРучнойСкидки + Товары.СуммаАвтоматическойСкидки КАК СуммаБезСкидки,
	|	ВЫБОР
	|		КОГДА
	|			Товары.Ссылка.ВернутьМногооборотнуюТару
	|			И Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЭтоВозвратнаяТара,
	|	Товары.Содержание КАК Содержание
	|ПОМЕСТИТЬ ТоварыПодготовка
	|ИЗ
	|	ТаблицаДокументов КАК ТаблицаДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК Товары
	|		ПО ТаблицаДокументов.ДокументОснование = Товары.Ссылка
	|			И (Товары.Отменено = ЛОЖЬ)
	|			И (Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|				ИЛИ Товары.Ссылка.ТребуетсяЗалогЗаТару
	|				ИЛИ НЕ Товары.Ссылка.ВернутьМногооборотнуюТару)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка,
	|	ТаблицаДокументов.ДокументОснование.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Товары.НомерСтроки,
	|	Товары.НоменклатураНабора,
	|	Товары.ХарактеристикаНабора,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Упаковка,
	|	Товары.Количество,
	|	Товары.КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА &ОтображатьСкидки ТОГДА
	|			Товары.Цена
	|		ИНАЧЕ Товары.Сумма/Товары.КоличествоУпаковок 
	|	КОНЕЦ,
	|	Товары.Сумма,
	|	Товары.СтавкаНДС,
	|	Товары.СуммаНДС,
	|	ВЫБОР
	|		КОГДА &ОтображатьСкидки ТОГДА
	|			Товары.СуммаРучнойСкидки + Товары.СуммаАвтоматическойСкидки
	|		ИНАЧЕ 0 
	|	КОНЕЦ,
	|	Товары.Сумма + Товары.СуммаРучнойСкидки + Товары.СуммаАвтоматическойСкидки,
	|	ВЫБОР
	|		КОГДА
	|			Товары.Ссылка.ВернутьМногооборотнуюТару
	|			И Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЭтоВозвратнаяТара,
	|	Товары.Содержание
	|ИЗ
	|	ТаблицаДокументов КАК ТаблицаДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВозвратТоваровОтКлиента.ЗаменяющиеТовары КАК Товары
	|		ПО ТаблицаДокументов.ДокументОснование = Товары.Ссылка
	|			И (Товары.Отменено = ЛОЖЬ)
	|			И (Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|				ИЛИ Товары.Ссылка.ТребуетсяЗалогЗаТару
	|				ИЛИ НЕ Товары.Ссылка.ВернутьМногооборотнуюТару)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка,
	|	ТаблицаДокументов.ДокументОснование.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Товары.НомерСтроки,
	|	Товары.НоменклатураНабора,
	|	Товары.ХарактеристикаНабора,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Упаковка,
	|	Товары.Количество,
	|	Товары.КоличествоУпаковок,
	|	ВЫБОР
	|		КОГДА &ОтображатьСкидки ТОГДА
	|			Товары.Цена
	|		ИНАЧЕ Товары.Сумма/Товары.КоличествоУпаковок 
	|	КОНЕЦ,
	|	Товары.Сумма,
	|	Товары.СтавкаНДС,
	|	Товары.СуммаНДС,
	|	ВЫБОР
	|		КОГДА &ОтображатьСкидки ТОГДА
	|			Товары.СуммаРучнойСкидки + Товары.СуммаАвтоматическойСкидки
	|		ИНАЧЕ 0 
	|	КОНЕЦ,
	|	Товары.Сумма + Товары.СуммаРучнойСкидки + Товары.СуммаАвтоматическойСкидки,
	|	ВЫБОР
	|		КОГДА
	|			Товары.Ссылка.ВернутьМногооборотнуюТару
	|			И Товары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЭтоВозвратнаяТара,
	|	NULL
	|ИЗ
	|	ТаблицаДокументов КАК ТаблицаДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК Товары
	|		ПО ТаблицаДокументов.ДокументОснование = Товары.Ссылка
	|			И (Товары.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|				ИЛИ Товары.Ссылка.ТребуетсяЗалогЗаТару
	|				ИЛИ НЕ Товары.Ссылка.ВернутьМногооборотнуюТару)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка,
	|	Неопределено КАК ХозяйственнаяОперация,
	|	Товары.НомерСтроки,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Упаковка,
	|	Товары.Количество,
	|	Товары.КоличествоУпаковок,
	|	Товары.Цена,
	|	Товары.Сумма,
	|	Товары.СтавкаНДС,
	|	Товары.СуммаНДС,
	|	0,
	|	0,
	|	Ложь,
	|	NULL
	|ИЗ
	|	ТаблицаДокументов КАК ТаблицаДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВыкупВозвратнойТарыКлиентом.Товары КАК Товары
	|		ПО ТаблицаДокументов.ДокументОснование = Товары.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка,
	|	ТаблицаДокументов.ДокументОснование.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	Услуги.НомерСтроки,
	|	Услуги.НоменклатураНабора,
	|	Услуги.ХарактеристикаНабора,
	|	Услуги.Номенклатура,
	|	Услуги.Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка),
	|	Услуги.Количество,
	|	Услуги.Количество,
	|	ВЫБОР
	|		КОГДА &ОтображатьСкидки ТОГДА
	|			Услуги.Цена
	|		ИНАЧЕ Услуги.Сумма/Услуги.Количество 
	|	КОНЕЦ,
	|	Услуги.Сумма,
	|	Услуги.СтавкаНДС,
	|	Услуги.СуммаНДС,
	|	ВЫБОР
	|		КОГДА &ОтображатьСкидки ТОГДА
	|			Услуги.СуммаРучнойСкидки + Услуги.СуммаАвтоматическойСкидки
	|		ИНАЧЕ 0 
	|	КОНЕЦ,
	|	Услуги.Сумма + Услуги.СуммаРучнойСкидки + Услуги.СуммаАвтоматическойСкидки,
	|	Ложь,
	|	Услуги.Содержание
	|ИЗ
	|	ТаблицаДокументов КАК ТаблицаДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктВыполненныхРабот.Услуги КАК Услуги
	|		ПО ТаблицаДокументов.ДокументОснование = Услуги.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка,
	|	Неопределено КАК ХозяйственнаяОперация,
	|	1,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	Основание.Услуга,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	Неопределено,
	|	1,
	|	1,
	|	Основание.СуммаВознаграждения,
	|	Основание.СуммаВознаграждения,
	|	Основание.СтавкаНДСВознаграждения,
	|	Основание.СуммаНДСВознаграждения,
	|	0,
	|	Основание.СуммаВознаграждения,
	|	Ложь,
	|	NULL
	|ИЗ
	|	ТаблицаДокументов КАК ТаблицаДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомитенту КАК Основание
	|		ПО ТаблицаДокументов.ДокументОснование = Основание.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка,
	|	Неопределено КАК ХозяйственнаяОперация,
	|	Товары.НомерСтроки,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Упаковка,
	|	Товары.Количество,
	|	Товары.КоличествоУпаковок,
	|	Товары.ЦенаПродажи,
	|	Товары.СуммаПродажи,
	|	Товары.СтавкаНДС,
	|	Товары.СуммаПродажиНДС,
	|	0,
	|	Товары.СуммаПродажи,
	|	Ложь,
	|	NULL
	|ИЗ
	|	ТаблицаДокументов КАК ТаблицаДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионера.Товары КАК Товары
	|		ПО ТаблицаДокументов.ДокументОснование = Товары.Ссылка
	|ГДЕ
	|	Товары.Количество <> 0
	|	И Товары.СуммаПродажи <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка,
	|	Неопределено КАК ХозяйственнаяОперация,
	|	Товары.НомерСтроки,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Упаковка,
	|	Товары.Количество,
	|	Товары.КоличествоУпаковок,
	|	Товары.Цена,
	|	Товары.Сумма,
	|	Товары.СтавкаНДС,
	|	Товары.СуммаНДС,
	|	0,
	|	Товары.Сумма,
	|	Ложь,
	|	NULL
	|ИЗ
	|	ТаблицаДокументов КАК ТаблицаДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетКомиссионераОСписании.Товары КАК Товары
	|		ПО ТаблицаДокументов.ДокументОснование = Товары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Ссылка КАК Ссылка,
	|	Таблица.ХозяйственнаяОперация,
	|	
	|	ВариантыКомплектацииНоменклатуры.Ссылка КАК ВариантКомплектацииНоменклатуры,
	|	ВариантыКомплектацииНоменклатуры.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ВариантыКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
	|	Таблица.НоменклатураНабора   КАК НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора КАК ХарактеристикаНабора,
	|	
	|	Таблица.НомерСтроки КАК НомерСтроки,
	|	Таблица.Номенклатура КАК Номенклатура,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.Упаковка КАК Упаковка,
	|	Таблица.Количество КАК Количество,
	|	Таблица.КоличествоУпаковок КАК КоличествоУпаковок,
	|	Таблица.Цена,
	|	Таблица.Сумма КАК Сумма,
	|	Таблица.СтавкаНДС,
	|	Таблица.СуммаНДС,
	|	Таблица.СуммаСкидки,
	|	Таблица.СуммаБезСкидки,
	|	Таблица.ЭтоВозвратнаяТара КАК ЭтоВозвратнаяТара,
	|	Таблица.Содержание КАК Содержание
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	ТоварыПодготовка КАК Таблица
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
	|		ПО ВариантыКомплектацииНоменклатуры.Владелец = Таблица.НоменклатураНабора
	|		И ВариантыКомплектацииНоменклатуры.Характеристика = Таблица.ХарактеристикаНабора
	|		И ВариантыКомплектацииНоменклатуры.Основной
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Ссылка                 КАК Ссылка,
	|	Таблица.ХозяйственнаяОперация,
	|	Таблица.НоменклатураНабора     КАК НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора   КАК ХарактеристикаНабора,
	|	МИНИМУМ(Таблица.НомерСтроки)   КАК НомерСтроки,
	|	СУММА(Таблица.Сумма)           КАК Сумма,
	|	СУММА(Таблица.СуммаНДС)        КАК СуммаНДС,
	|	СУММА(Таблица.СуммаСкидки)     КАК СуммаСкидки,
	|	СУММА(Таблица.СуммаБезСкидки)  КАК СуммаБезСкидки
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыПодготовка
	|ИЗ
	|	Товары КАК Таблица
	|
	|ГДЕ
	|	Таблица.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Ссылка,
	|	Таблица.ХозяйственнаяОперация,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка                                    КАК Ссылка,
	|	Товары.ВариантКомплектацииНоменклатуры           КАК ВариантКомплектацииНоменклатуры,
	|	Товары.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	Товары.ВариантРасчетаЦеныНабора                  КАК ВариантРасчетаЦеныНабора,
	|	Товары.НоменклатураНабора,
	|	Товары.ХарактеристикаНабора,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	ВЫБОР КОГДА Товары.ВариантКомплектацииНоменклатуры.НоменклатураОсновногоКомпонента = Товары.Номенклатура
	|		И Товары.ВариантКомплектацииНоменклатуры.ХарактеристикаОсновногоКомпонента = Товары.Характеристика ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК ОсновнаяКомплектующая,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	0 КАК КоличествоПоУмолчанию,
	|	Товары.Количество КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьПервая
	|ИЗ
	|	Товары КАК Товары
	|
	|ГДЕ
	|	Товары.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Т.Ссылка                                                                                КАК Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка                                           КАК ВариантКомплектацииНоменклатуры,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантРасчетаЦеныНабора                  КАК ВариантРасчетаЦеныНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец                                  КАК НоменклатураНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика                            КАК ХарактеристикаНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура   КАК Номенклатура,
	|	ВариантыКомплектацииНоменклатурыТовары.Характеристика КАК Характеристика,
	|	ЛОЖЬ КАК ОсновнаяКомплектующая,
	|	NULL КАК СтавкаНДС,
	|	СУММА(ВариантыКомплектацииНоменклатурыТовары.Количество) КАК КоличествоПоУмолчанию,
	|	0 КАК Количество
	|ИЗ
	|	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.Ссылка ИЗ Товары КАК Т) КАК Т
	|		ПО ИСТИНА
	|ГДЕ
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка В (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.ВариантКомплектацииНоменклатуры ИЗ Товары КАК Т)
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика,
	|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
	|	ВариантыКомплектацииНоменклатурыТовары.Характеристика,
	|	ВариантыКомплектацииНоменклатурыТовары.Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Ссылка,
	|	Таблица.ВариантКомплектацииНоменклатуры,
	|	Таблица.ВариантРасчетаЦеныНабора,
	|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	МАКСИМУМ(Таблица.СтавкаНДС) КАК СтавкаНДС,
	|	МАКСИМУМ(Таблица.ОсновнаяКомплектующая) КАК ОсновнаяКомплектующая,
	|	СУММА(Таблица.КоличествоПоУмолчанию) КАК КоличествоПоУмолчанию,
	|	СУММА(Таблица.Количество) КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьВторая
	|ИЗ
	|	ВременнаяТаблицаНаборыДополнительноЧастьПервая КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Ссылка,
	|	Таблица.ВариантКомплектацииНоменклатуры,
	|	Таблица.ВариантРасчетаЦеныНабора,
	|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Результат.Ссылка,
	|	Результат.ВариантКомплектацииНоменклатуры,
	|	Результат.ВариантРасчетаЦеныНабора,
	|	Результат.ВариантПредставленияНабораВПечатныхФормах,
	|	Результат.НоменклатураНабора,
	|	Результат.ХарактеристикаНабора,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Результат.ОсновнаяКомплектующая
	|				ТОГДА Результат.СтавкаНДС
	|			ИНАЧЕ null
	|		КОНЕЦ) КАК СтавкаНДС,
	|	ВЫРАЗИТЬ(МИНИМУМ(ВЫБОР
	|			КОГДА Результат.КоличествоПоУмолчанию <> 0 И Результат.ОсновнаяКомплектующая
	|				ТОГДА Результат.Количество / Результат.КоличествоПоУмолчанию
	|			ИНАЧЕ null
	|		КОНЕЦ) + 0.5 КАК Число(10,0)) - 1 КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительно
	|ИЗ
	|	ВременнаяТаблицаНаборыДополнительноЧастьВторая КАК Результат
	|СГРУППИРОВАТЬ ПО
	|	Результат.Ссылка,
	|	Результат.ВариантКомплектацииНоменклатуры,
	|	Результат.ВариантРасчетаЦеныНабора,
	|	Результат.ВариантПредставленияНабораВПечатныхФормах,
	|	Результат.НоменклатураНабора,
	|	Результат.ХарактеристикаНабора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаНаборыДополнительно.ВариантКомплектацииНоменклатуры,
	|	
	|	ВЫБОР КОГДА Таблица.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию) ТОГДА
	|		ВЫБОР КОГДА ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
	|		ИНАЧЕ
	|			ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
	|	КОНЕЦ КАК ВариантПредставленияНабораВПечатныхФормах,
	|	
	|	ВЫБОР КОГДА Таблица.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию) ТОГДА
	|		ВЫБОР КОГДА
	|			ВЫБОР КОГДА ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
	|			ИНАЧЕ
	|				ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах
	|			КОНЕЦ = ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)
	|			И ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора В (ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоЦенам),ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоДолям)) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.РассчитываетсяИзЦенКомплектующих)
	|		ИНАЧЕ
	|			ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора
	|	КОНЕЦ КАК ВариантРасчетаЦеныНабора,
	|	
	|	Таблица.Ссылка                            КАК Ссылка,
	|	Таблица.ХозяйственнаяОперация,
	|	Таблица.НоменклатураНабора                КАК НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора              КАК ХарактеристикаНабора,
	|	Таблица.НомерСтроки                       КАК НомерСтроки,
	|	ЕСТЬNULL(ВременнаяТаблицаНаборыДополнительно.Количество, 1) КАК КоличествоУпаковок,
	|	ЕСТЬNULL(ВременнаяТаблицаНаборыДополнительно.Количество, 1) КАК Количество,
	|	Таблица.Сумма                                 КАК Сумма,
	|	Таблица.СуммаНДС                              КАК СуммаНДС,
	|	Таблица.СуммаСкидки                           КАК СуммаСкидки,
	|	Таблица.СуммаБезСкидки                        КАК СуммаБезСкидки,
	|	ВременнаяТаблицаНаборыДополнительно.СтавкаНДС КАК СтавкаНДС
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборы
	|ИЗ
	|	ВременнаяТаблицаНаборыПодготовка КАК Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборыДополнительно КАК ВременнаяТаблицаНаборыДополнительно
	|		ПО Таблица.НоменклатураНабора = ВременнаяТаблицаНаборыДополнительно.НоменклатураНабора
	|		И Таблица.ХарактеристикаНабора = ВременнаяТаблицаНаборыДополнительно.ХарактеристикаНабора
	|		И Таблица.Ссылка = ВременнаяТаблицаНаборыДополнительно.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	
	|	Товары.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	Товары.ВариантРасчетаЦеныНабора                  КАК ВариантРасчетаЦеныНабора,
	|	
	|	Товары.НоменклатураНабора    КАК НоменклатураНабора,
	|	Товары.ХарактеристикаНабора  КАК ХарактеристикаНабора,
	|	Товары.ЭтоНабор         КАК ЭтоНабор,
	|	Товары.ЭтоКомплектующие КАК ЭтоКомплектующие,
	|	
	|	Товары.НомерСтроки                     КАК НомерСтроки,
	|	Товары.Номенклатура                    КАК Номенклатура,
	|	Товары.Номенклатура.Код                КАК Код,
	|	Товары.Номенклатура.Артикул            КАК Артикул,
	|	Товары.Номенклатура.НаименованиеПолное КАК НаименованиеПолное,
	|	Товары.Содержание                      КАК Содержание,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения 				 КАК ЕдиницаИзмерения,
	|	Товары.КоличествоУпаковок                                КАК Количество,
	|	Товары.Цена КАК Цена,
	|	Товары.Сумма                                             КАК Сумма,
	|	Товары.СтавкаНДС                                         КАК СтавкаНДС,
	|	Товары.СуммаНДС                                          КАК СуммаНДС,
	|	НЕОПРЕДЕЛЕНО                                             КАК ВидЦеныИсполнителя,
	|	ЕСТЬNULL(Товары.Характеристика.НаименованиеПолное, """") КАК Характеристика,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 1 ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		Товары.Упаковка.Наименование
	|	КОНЕЦ                                                    КАК Упаковка,
	|	
	|	Товары.СуммаСкидки                                       КАК СуммаСкидки,
	|	
	|	Товары.СуммаБезСкидки                                    КАК СуммаБезСкидки,
	|	
	|	Товары.ЭтоВозвратнаяТара                                 КАК ЭтоВозвратнаяТара	
	|	
	|ИЗ (
	|	
	|	ВЫБРАТЬ
	|		Таблица.Ссылка,
	|		
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ПустаяСсылка)
	|		КОНЕЦ КАК ВариантПредставленияНабораВПечатныхФормах,
	|		
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			ВременнаяТаблицаНаборы.ВариантРасчетаЦеныНабора
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаЦенНаборов.ПустаяСсылка)
	|		КОНЕЦ КАК ВариантРасчетаЦеныНабора,
	|		
	|		Таблица.НоменклатураНабора,
	|		Таблица.ХарактеристикаНабора,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			Истина
	|		ИНАЧЕ
	|			Ложь
	|		КОНЕЦ КАК ЭтоКомплектующие,
	|		Ложь КАК ЭтоНабор,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			ВременнаяТаблицаНаборы.НомерСтроки
	|		ИНАЧЕ
	|			Таблица.НомерСтроки
	|		КОНЕЦ КАК НомерСтроки,
	|		Таблица.Номенклатура,
	|		Таблица.Количество,
	|		Таблица.КоличествоУпаковок,
	|		Таблица.Цена,
	|		Таблица.Сумма,
	|		Таблица.СтавкаНДС,
	|		Таблица.СуммаНДС,
	|		Таблица.Характеристика,
	|		Таблица.Упаковка,
	|		Таблица.СуммаСкидки,
	|		Таблица.СуммаБезСкидки,
	|		Таблица.ЭтоВозвратнаяТара,
	|		Таблица.Содержание
	|	ИЗ
	|		Товары КАК Таблица
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
	|			ПО ВременнаяТаблицаНаборы.НоменклатураНабора = Таблица.НоменклатураНабора
	|			 И ВременнаяТаблицаНаборы.ХарактеристикаНабора = Таблица.ХарактеристикаНабора
	|			 И ВременнаяТаблицаНаборы.Ссылка = Таблица.Ссылка
	|
	|	ГДЕ
	|		Таблица.НоменклатураНабора = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		ИЛИ (Таблица.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	        И ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В (ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоКомплектующие),
	|	                                                                              ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВременнаяТаблицаНаборы.Ссылка,
	|		ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах,
	|		ВременнаяТаблицаНаборы.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
	|		ВременнаяТаблицаНаборы.НоменклатураНабора,
	|		ВременнаяТаблицаНаборы.ХарактеристикаНабора,
	|		Ложь КАК ЭтоКомплектующие,
	|		Истина КАК ЭтоНабор,
	|		ВременнаяТаблицаНаборы.НомерСтроки,
	|		ВременнаяТаблицаНаборы.НоменклатураНабора,
	|		ВременнаяТаблицаНаборы.Количество,
	|		ВременнаяТаблицаНаборы.КоличествоУпаковок,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.КоличествоУпаковок, 1) <> 0 ТОГДА
	|			ВременнаяТаблицаНаборы.СуммаБезСкидки / ЕСТЬNULL(ВременнаяТаблицаНаборы.КоличествоУпаковок, 1)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК Цена,
	|		ВременнаяТаблицаНаборы.Сумма КАК Сумма,
	|		ВременнаяТаблицаНаборы.СтавкаНДС,
	|		ВременнаяТаблицаНаборы.СуммаНДС,
	|		ВременнаяТаблицаНаборы.ХарактеристикаНабора,
	|		ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
	|		ВременнаяТаблицаНаборы.СуммаСкидки,
	|		ВременнаяТаблицаНаборы.СуммаБезСкидки,
	|		Ложь,
	|		""""
	|	ИЗ
	|		ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
	|	ГДЕ
	|		ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В (ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор),
	|	                                                                        ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие))
	|) КАК Товары
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки,
	|	ЭтоНабор УБЫВ
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Товары.Упаковка",
			"Товары.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"Товары.Упаковка",
			"Товары.Номенклатура"));
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ОтображатьСкидки", ОтображатьСкидки);
	
	ПакетРезультатовЗапроса = Запрос.ВыполнитьПакет();
	
	СтруктураДанныхДляПечати = Новый Структура;
	СтруктураДанныхДляПечати.Вставить("РезультатПоШапке", ПакетРезультатовЗапроса[2]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоЭтапамОплаты", ПакетРезультатовЗапроса[3]);
	СтруктураДанныхДляПечати.Вставить("РезультатПоТабличнойЧасти", ПакетРезультатовЗапроса[ПакетРезультатовЗапроса.Количество() - 1]);
	
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

Функция СформироватьКомплектПечатныхФорм(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт 
	
	Перем АдресКомплектаПечатныхФорм;
	
	Если ТипЗнч(ПараметрыПечати) = Тип("Структура") И ПараметрыПечати.Свойство("АдресКомплектаПечатныхФорм", АдресКомплектаПечатныхФорм) Тогда
		
		КомплектПечатныхФорм = ПолучитьИзВременногоХранилища(АдресКомплектаПечатныхФорм);
		
	Иначе
		
		КомплектПечатныхФорм = РегистрыСведений.НастройкиПечатиОбъектов.КомплектПечатныхФорм(
			Метаданные.Документы.СчетНаОплатуКлиенту.ПолноеИмя(),
			МассивОбъектов, Неопределено);
		
	КонецЕсли;
	
	Если КомплектПечатныхФорм = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СтруктураТипов = Новый Соответствие;
	СтруктураТипов.Вставить("Документ.СчетНаОплатуКлиенту", МассивОбъектов);
	
	ИмяМакета = "СчетНаОплату";
	ТекущийКомплект = КомплектПечатныхФорм.Скопировать(Новый Структура("Имя,Печатать,",ИмяМакета,Истина));
	Если ТекущийКомплект.Количество() > 0 Тогда
		Если ТекущийКомплект.Колонки.Найти("Ссылка") <> Неопределено И ЗначениеЗаполнено(ТекущийКомплект[0].Ссылка) Тогда
			РегистрыСведений.НастройкиПечатиОбъектов.СкопироватьПечатнуюФормуВКоллекциюОдинЭкземпляр(КоллекцияПечатныхФорм, ИмяМакета);
			ТаблицаСсылок = ТекущийКомплект.Скопировать(,"Ссылка");
			ТаблицаСсылок.Свернуть("Ссылка");
			ТекущаяСтруктураТипов = Новый Соответствие;
			ТекущаяСтруктураТипов.Вставить("Документ.СчетНаОплатуКлиенту", ТаблицаСсылок.ВыгрузитьКолонку("Ссылка"));
		Иначе
			РегистрыСведений.НастройкиПечатиОбъектов.СкопироватьПечатнуюФормуВКоллекцию(КоллекцияПечатныхФорм, ТекущийКомплект[0]);
			ТекущаяСтруктураТипов = СтруктураТипов;
		КонецЕсли;
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			ИмяМакета,
			ТекущийКомплект[0].Представление,
			Обработки.ПечатьСчетовНаОплату.СформироватьПечатнуюФормуСчетНаОплату(ТекущаяСтруктураТипов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода, ТекущийКомплект),
			,
			,
			,
			Истина // ЭтоМногоязычнаяПечатнаяФорма 
		);
	КонецЕсли;
	
	ИмяМакета = "СчетНаОплатуБезСкидок";
	ТекущийКомплект = КомплектПечатныхФорм.Скопировать(Новый Структура("Имя,Печатать,",ИмяМакета,Истина));
	Если ТекущийКомплект.Количество() > 0 Тогда
		Если ТекущийКомплект.Колонки.Найти("Ссылка") <> Неопределено И ЗначениеЗаполнено(ТекущийКомплект[0].Ссылка) Тогда
			РегистрыСведений.НастройкиПечатиОбъектов.СкопироватьПечатнуюФормуВКоллекциюОдинЭкземпляр(КоллекцияПечатныхФорм, ИмяМакета);
			ТаблицаСсылок = ТекущийКомплект.Скопировать(,"Ссылка");
			ТаблицаСсылок.Свернуть("Ссылка");
			ТекущаяСтруктураТипов = Новый Соответствие;
			ТекущаяСтруктураТипов.Вставить("Документ.СчетНаОплатуКлиенту", ТаблицаСсылок.ВыгрузитьКолонку("Ссылка"));
		Иначе
			РегистрыСведений.НастройкиПечатиОбъектов.СкопироватьПечатнуюФормуВКоллекцию(КоллекцияПечатныхФорм, ТекущийКомплект[0]);
			ТекущаяСтруктураТипов = СтруктураТипов;
		КонецЕсли;
		
		ПараметрыПечати.Вставить("ОтображатьСкидки", Ложь);
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			ИмяМакета,
			ТекущийКомплект[0].Представление,
			Обработки.ПечатьСчетовНаОплату.СформироватьПечатнуюФормуСчетНаОплату(ТекущаяСтруктураТипов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода, ТекущийКомплект),
			,
			,
			,
			Истина // ЭтоМногоязычнаяПечатнаяФорма 
		);
	КонецЕсли;
	
	ИмяМакета = "СчетНаОплатуСФаксимиле";
	ТекущийКомплект = КомплектПечатныхФорм.Скопировать(Новый Структура("Имя,Печатать,",ИмяМакета,Истина));
	Если ТекущийКомплект.Количество() > 0 Тогда
		Если ТекущийКомплект.Колонки.Найти("Ссылка") <> Неопределено И ЗначениеЗаполнено(ТекущийКомплект[0].Ссылка) Тогда
			РегистрыСведений.НастройкиПечатиОбъектов.СкопироватьПечатнуюФормуВКоллекциюОдинЭкземпляр(КоллекцияПечатныхФорм, ИмяМакета);
			ТаблицаСсылок = ТекущийКомплект.Скопировать(,"Ссылка");
			ТаблицаСсылок.Свернуть("Ссылка");
			ТекущаяСтруктураТипов = Новый Соответствие;
			ТекущаяСтруктураТипов.Вставить("Документ.РеализацияТоваровУслуг", ТаблицаСсылок.ВыгрузитьКолонку("Ссылка"));
		Иначе
			РегистрыСведений.НастройкиПечатиОбъектов.СкопироватьПечатнуюФормуВКоллекцию(КоллекцияПечатныхФорм, ТекущийКомплект[0]);
			ТекущаяСтруктураТипов = СтруктураТипов;
		КонецЕсли;
		
		ПараметрыПечати.Вставить("ОтображатьФаксимиле", Истина);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			ИмяМакета,
			ТекущийКомплект[0].Представление,
			Обработки.ПечатьСчетовНаОплату.СформироватьПечатнуюФормуСчетНаОплату(ТекущаяСтруктураТипов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода, ТекущийКомплект),
			,
			,
			,
			Истина // ЭтоМногоязычнаяПечатнаяФорма 
		);
	КонецЕсли;
	
	ИмяМакета = "СчетНаОплатуСФаксимилеБезСкидок";
	ТекущийКомплект = КомплектПечатныхФорм.Скопировать(Новый Структура("Имя,Печатать,",ИмяМакета,Истина));
	Если ТекущийКомплект.Количество() > 0 Тогда
		Если ТекущийКомплект.Колонки.Найти("Ссылка") <> Неопределено И ЗначениеЗаполнено(ТекущийКомплект[0].Ссылка) Тогда
			РегистрыСведений.НастройкиПечатиОбъектов.СкопироватьПечатнуюФормуВКоллекциюОдинЭкземпляр(КоллекцияПечатныхФорм, ИмяМакета);
			ТаблицаСсылок = ТекущийКомплект.Скопировать(,"Ссылка");
			ТаблицаСсылок.Свернуть("Ссылка");
			ТекущаяСтруктураТипов = Новый Соответствие;
			ТекущаяСтруктураТипов.Вставить("Документ.РеализацияТоваровУслуг", ТаблицаСсылок.ВыгрузитьКолонку("Ссылка"));
		Иначе
			РегистрыСведений.НастройкиПечатиОбъектов.СкопироватьПечатнуюФормуВКоллекцию(КоллекцияПечатныхФорм, ТекущийКомплект[0]);
			ТекущаяСтруктураТипов = СтруктураТипов;
		КонецЕсли;
		
		ПараметрыПечати.Вставить("ОтображатьСкидки", Ложь);
		ПараметрыПечати.Вставить("ОтображатьФаксимиле", Истина);
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			ИмяМакета,
			ТекущийКомплект[0].Представление,
			Обработки.ПечатьСчетовНаОплату.СформироватьПечатнуюФормуСчетНаОплату(ТекущаяСтруктураТипов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода, ТекущийКомплект),
			,
			,
			,
			Истина // ЭтоМногоязычнаяПечатнаяФорма 
		);
	КонецЕсли;
	
	
	РегистрыСведений.НастройкиПечатиОбъектов.СформироватьКомплектВнешнихПечатныхФорм(
		"Документ.СчетНаОплатуКлиенту",
		МассивОбъектов,
		ПараметрыПечати,
		КоллекцияПечатныхФорм,
		ОбъектыПечати);
	
КонецФункции

Функция КомплектПечатныхФорм() Экспорт
	
	КомплектПечатныхФорм = РегистрыСведений.НастройкиПечатиОбъектов.ПодготовитьКомплектПечатныхФорм();
	
	Если ПолучитьФункциональнуюОпцию("ВыбиратьВариантВыводаСкидокПриПечатиДокументовПродажи") Тогда
		РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "СчетНаОплату", НСтр("ru='Счет на оплату (выводить скидки)';uk='Рахунок на оплату (виводити знижки)'"), 1);
		РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "СчетНаОплатуБезСкидок", НСтр("ru='Счет на оплату (не выводить скидки)';uk='Рахунок на оплату (не виводити знижки)'"), 0);
		РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "СчетНаОплатуСФаксимиле", НСтр("ru='Счет на оплату с факсимиле (выводить скидки)';uk='Рахунок на оплату з факсиміле (виводити знижки)'"), 0);
		РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "СчетНаОплатуСФаксимилеБезСкидок", НСтр("ru='Счет на оплату с факсимиле (не выводить скидки)';uk='Рахунок на оплату з факсиміле (не виводити знижки)'"), 0);
	Иначе
		РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "СчетНаОплату", НСтр("ru='Счет на оплату';uk='Рахунок на оплату'"), 1);
		РегистрыСведений.НастройкиПечатиОбъектов.ДобавитьПечатнуюФормуВКомплект(КомплектПечатныхФорм, "СчетНаОплатуСФаксимиле", НСтр("ru='Счет на оплату с факсимиле';uk='Рахунок на оплату з факсиміле'"), 0);
	КонецЕсли;
	
	Возврат КомплектПечатныхФорм;
	
КонецФункции

Процедура ЗаполнитьСтруктуруПолучателейПечатныхФорм(СтруктураДанныхОбъектаПечати) Экспорт
	
	СтруктураДанныхОбъектаПечати.ОсновнойПолучатель = "Партнер";
	
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Партнер");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда 
		СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Контрагент");
	КонецЕсли;
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("КонтактноеЛицо");
	
КонецПроцедуры

Функция ДоступныеДляШаблоновПечатныеФормы() Экспорт

	МассивДоступныхПечатныхФорм = Новый Массив;
	
	ШаблоныСообщенийСервер.ДобавитьВМассивПечатныеФормыСчета(МассивДоступныхПечатныхФорм);
	
	Возврат МассивДоступныхПечатныхФорм

КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
