
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("Отбор") И Параметры.Отбор.Свойство("Владелец") Тогда

		Владелец            = Параметры.Отбор.Владелец;
		ВладелецДляОтбора   = Неопределено;
		ОбщиеХарактеристики = Неопределено;

		Если ТипЗнч(Владелец) = Тип("СправочникСсылка.Номенклатура") Тогда

			Если Владелец.ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры Тогда
				ВладелецДляОтбора = Владелец;
				ОбщиеХарактеристики = Ложь;
			ИначеЕсли Владелец.ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры Тогда
				ВладелецДляОтбора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Владелец, "ВидНоменклатуры");
				ОбщиеХарактеристики = Истина;
			ИначеЕсли Владелец.ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры Тогда
				ВладелецДляОтбора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Владелец, "ВладелецХарактеристик");
				ОбщиеХарактеристики = Истина;
			КонецЕсли;

			Номенклатура = Владелец;
			
		ИначеЕсли ТипЗнч(Владелец) = Тип("СправочникСсылка.ВидыНоменклатуры") Тогда

			Если Владелец.ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры Тогда
				ВладелецДляОтбора = Владелец;
				ОбщиеХарактеристики = Истина;
			ИначеЕсли Владелец.ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры Тогда
				ВладелецДляОтбора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Владелец, "ВладелецХарактеристик");
				ОбщиеХарактеристики = Истина;
			КонецЕсли;

		КонецЕсли;

		Если ВладелецДляОтбора = Неопределено Тогда

			ТекстЗаголовка = НСтр("ru='Для элемента: ""%Владелец%"" характеристики не используются';uk='Для елемента: ""%Владелец%"" характеристики не використовуються'");
			ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%Владелец%", Строка(Владелец));

			АвтоЗаголовок = Ложь;
			Заголовок     = ТекстЗаголовка;

			Элементы.Список.ТолькоПросмотр = Истина;
		Иначе
			
			ТекстЗаголовка = НСтр("ru='Характеристики номенклатуры (%Владелец%)';uk='Характеристики номенклатури (%Владелец%)'");
			ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%Владелец%", Строка(ВладелецДляОтбора));

			АвтоЗаголовок = Ложь;
			Заголовок     = ТекстЗаголовка;
			
		КонецЕсли;

		Если ОбщиеХарактеристики = Истина Тогда
			Элементы.ДекорацияПредупреждение.Видимость = Истина;
			Элементы.ДекорацияПредупреждение.Заголовок = Элементы.ДекорацияПредупреждение.Заголовок + " """ + Строка(ВладелецДляОтбора) + """";
		Иначе
			Элементы.ДекорацияПредупреждение.Видимость = Ложь;
		КонецЕсли;
		
		Параметры.Отбор.Владелец = ВладелецДляОтбора;

	КонецЕсли;

	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "Владелец", Номенклатура, Истина);
	
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		ТипНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Номенклатура, "ТипНоменклатуры");
		Элементы.СоставНабора.Видимость = (ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Набор) И ПолучитьФункциональнуюОпцию("ИспользоватьНаборы");
	Иначе
		Элементы.СоставНабора.Видимость = Ложь;
	КонецЕсли;
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ХарактеристикиНоменклатуры" 
		И ЗначениеЗаполнено(Источник) Тогда
		Элементы.Список.ТекущаяСтрока = Источник;
	КонецЕсли;
	
	Если ИмяСобытия = "Запись_ВариантыКомплектацииНоменклатуры" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.СоставНабора Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ОсновнаяКомплектация = НаборыВызовСервера.ВариантКомплектацииНоменклатурыПоУмолчанию(
			Владелец,
			Элементы.Список.ТекущиеДанные.Ссылка);
		
		ПараметрыФормы = Неопределено;
		Если НЕ ЗначениеЗаполнено(ОсновнаяКомплектация) Тогда
			Отбор = Новый Структура;
			Отбор.Вставить("Владелец", Владелец);
			Отбор.Вставить("Характеристика", Элементы.Список.ТекущиеДанные.Ссылка);
			ПараметрыФормы = Новый Структура("Отбор", Отбор);
		Иначе
			ПараметрыФормы = Новый Структура("Ключ", ОсновнаяКомплектация);
		КонецЕсли;
		
		ОткрытьФорму("Справочник.ВариантыКомплектацииНоменклатуры.Форма.СоставНабора",
			ПараметрыФормы);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
    
	Если Не ЗначениеЗаполнено(Владелец) Тогда
		ПоказатьПредупреждение(,НСтр("ru='Создавать характеристики можно только через карточку владельца (номенклатуры или вида номенклатуры).';uk='Створювати характеристики можна тільки через картку власника (номенклатури або виду номенклатури).'"));
		Отказ = Истина;
		Возврат
	КонецЕсли;
	
	Если Не Копирование	И Не Группа Тогда
		Отказ = Истина;
		Если ТипЗнч(Владелец) = Тип("СправочникСсылка.Номенклатура") Тогда
			ВидНоменклатуры = ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Владелец, "ВидНоменклатуры");
		Иначе
			ВидНоменклатуры = Владелец;
		КонецЕсли;
		СтруктураПараметров = Новый Структура("ВидНоменклатуры, Владелец, Номенклатура", ВидНоменклатуры, Владелец, Номенклатура);
		ОткрытьФорму("Справочник.ХарактеристикиНоменклатуры.Форма.ПомощникНового",  СтруктураПараметров, ЭтаФорма);
	ИначеЕсли Копирование
		И Не Группа Тогда
		Отказ = Истина;
		ТекущиеДанные = Элементы.Список.ТекущиеДанные;
		СтруктураПараметров = Новый Структура("ЗначениеКопирования, Номенклатура", ТекущиеДанные.Ссылка, Номенклатура);
		ОткрытьФорму("Справочник.ХарактеристикиНоменклатуры.Форма.ПомощникНового",  СтруктураПараметров, ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();
	
	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СоставНабора.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.СоставНабора");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Справочники.ВариантыКомплектацииНоменклатуры.ПустаяСсылка();

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветГиперссылки);
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(WindowsШрифты.DefaultGUIFont, , , Ложь, Ложь, Истина, Ложь, ));
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru='Настроить набор';uk='Настроїти набір'"));
	
	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.СоставНабора.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.СоставНабора");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Справочники.ВариантыКомплектацииНоменклатуры.ПустаяСсылка();

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветГиперссылки);
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(WindowsШрифты.DefaultGUIFont, , , Ложь, Ложь, Истина, Ложь, ));
	
КонецПроцедуры

#КонецОбласти