&НаКлиенте
Перем КэшированныеЗначения;

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	НоменклатураСервер.УстановитьУсловноеОформлениеХарактеристикНоменклатуры(ЭтаФорма, , 
																		     "Товары.ХарактеристикиИспользуются");

КонецПроцедуры

&НаСервере
Процедура ДобавитьНоменклатуруДляВыбора(НоменклатураПоставщика, Номенклатура)
	
	СтруктураПоиска = Новый Структура();
	СтруктураПоиска.Вставить("НоменклатураПоставщика", НоменклатураПоставщика);
	СтруктураПоиска.Вставить("Номенклатура", Номенклатура);
	НайденныеСтроки = НоменклатураДляВыбора.НайтиСтроки(СтруктураПоиска);
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		НоваяСтрока = НоменклатураДляВыбора.Добавить();
		НоваяСтрока.НоменклатураПоставщика = НоменклатураПоставщика;
		НоваяСтрока.Номенклатура = Номенклатура;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПоместитьВоВременноеХранилищеНаСервере()
	
	МассивСтрок = Новый Массив();
	Для Каждого ТекСтрока Из Товары Цикл
		Если ЗначениеЗаполнено(ТекСтрока.Номенклатура) Тогда
			МассивСтрок.Добавить(ТекСтрока);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПоместитьВоВременноеХранилище(Товары.Выгрузить(МассивСтрок, "НомерСтроки,Номенклатура,Характеристика,Упаковка"), ИдентификаторВызывающейФормы);
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ИдентификаторВызывающейФормы = Параметры.УникальныйИдентификатор;
	ТаблицаНоменклатурыПоставщика = ПолучитьИзВременногоХранилища(Параметры.АдресТоваровВХранилище);
	
	// Подготовка номенклатуры поставщика для сопоставления
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	Товары.НоменклатураПоставщика КАК Ссылка,
		|	Товары.НомерСтроки            КАК НомерСтроки
		|ПОМЕСТИТЬ
		|	Товары
		|ИЗ
		|	&Товары КАК Товары
		|;
		|ВЫБРАТЬ
		|	Товары.Ссылка.Артикул      КАК АртикулПоиск,
		|	Товары.Ссылка.Наименование КАК НаименованиеПоиск,
		|	Товары.Ссылка              КАК Ссылка,
		|	Товары.НомерСтроки         КАК НомерСтроки
		|ИЗ
		|	Товары КАК Товары
		|");
		
	Запрос.УстановитьПараметр("Товары", ТаблицаНоменклатурыПоставщика);
	ТаблицаНоменклатурыПоставщика = Запрос.Выполнить().Выгрузить();
	
	Для Каждого ТекСтрока Из ТаблицаНоменклатурыПоставщика Цикл
		
		ТекСтрока.АртикулПоиск = СтрЗаменить(ТекСтрока.АртикулПоиск, " ", "");
		ТекСтрока.НаименованиеПоиск = СтрЗаменить(ТекСтрока.НаименованиеПоиск, " ", "");
		
	КонецЦикла;
	
	// Подготовка номенклатуры для сопоставления
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	Номенклатура.Артикул        КАК АртикулПоиск,
		|	Номенклатура.Наименование   КАК НаименованиеПоиск,
		|	Номенклатура.Ссылка         КАК Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	НЕ Номенклатура.ЭтоГруппа
		|	И НЕ Номенклатура.ПометкаУдаления
		|");
		
	ТаблицаНоменклатуры = Запрос.Выполнить().Выгрузить();
	
	Для Каждого ТекСтрока Из ТаблицаНоменклатуры Цикл
		
		ТекСтрока.АртикулПоиск = СтрЗаменить(ТекСтрока.АртикулПоиск, " ", "");
		ТекСтрока.НаименованиеПоиск = СтрЗаменить(ТекСтрока.НаименованиеПоиск, " ", "");
		
	КонецЦикла;
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	НоменклатураПоставщика.НомерСтроки         КАК НомерСтроки,
		|	НоменклатураПоставщика.АртикулПоиск        КАК АртикулПоиск,
		|	НоменклатураПоставщика.НаименованиеПоиск   КАК НаименованиеПоиск,
		|	НоменклатураПоставщика.Ссылка              КАК Ссылка
		|ПОМЕСТИТЬ НоменклатураПоставщика
		|ИЗ
		|	&НоменклатураПоставщика КАК НоменклатураПоставщика
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НаименованиеПоиск,
		|	АртикулПоиск
		|;
		|ВЫБРАТЬ
		|	Номенклатура.АртикулПоиск        КАК АртикулПоиск,
		|	Номенклатура.НаименованиеПоиск   КАК НаименованиеПоиск,
		|	Номенклатура.Ссылка              КАК Ссылка
		|ПОМЕСТИТЬ Номенклатура
		|ИЗ
		|	&Номенклатура КАК Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НаименованиеПоиск,
		|	АртикулПоиск
		|;
		|ВЫБРАТЬ
		|	НоменклатураПоставщика.НомерСтроки           КАК НомерСтроки,
		|	НоменклатураПоставщика.Ссылка                КАК НоменклатураПоставщика,
		|	НоменклатураПоставщика.Ссылка.Номенклатура   КАК НоменклатураПоставщикаНоменклатура,
		|	НоменклатураПоставщика.Ссылка.Характеристика КАК НоменклатураПоставщикаХарактеристика,
		|	НоменклатураПоставщика.Ссылка.Упаковка       КАК НоменклатураПоставщикаУпаковка,
		|	Номенклатура.Ссылка                          КАК Номенклатура
		|ИЗ
		|	НоменклатураПоставщика КАК НоменклатураПоставщика
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	Номенклатура
		|ПО
		|	(НоменклатураПоставщика.АртикулПоиск = Номенклатура.АртикулПоиск И НоменклатураПоставщика.АртикулПоиск <> """")
		|	ИЛИ (НоменклатураПоставщика.НаименованиеПоиск = Номенклатура.НаименованиеПоиск)
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|ИТОГИ ПО
		|	НомерСтроки
		|");
		
	Запрос.УстановитьПараметр("НоменклатураПоставщика", ТаблицаНоменклатурыПоставщика);
	Запрос.УстановитьПараметр("Номенклатура", ТаблицаНоменклатуры);
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = Товары.Добавить();
		НоваяСтрока.НомерСтроки = Выборка.НомерСтроки;
		ВыборкаНоменклатура = Выборка.Выбрать();
		
		Если ВыборкаНоменклатура.Количество() = 1 Тогда
			ВыборкаНоменклатура.Следующий();
			НоваяСтрока.НоменклатураПоставщика = ВыборкаНоменклатура.НоменклатураПоставщика;
			Если ЗначениеЗаполнено(ВыборкаНоменклатура.НоменклатураПоставщикаНоменклатура) Тогда
				НоваяСтрока.Номенклатура = ВыборкаНоменклатура.НоменклатураПоставщикаНоменклатура;
				НоваяСтрока.Характеристика = ВыборкаНоменклатура.НоменклатураПоставщикаХарактеристика;
				НоваяСтрока.Упаковка = ВыборкаНоменклатура.НоменклатураПоставщикаУпаковка;
			ИначеЕсли ЗначениеЗаполнено(ВыборкаНоменклатура.Номенклатура) Тогда
				НоваяСтрока.Номенклатура = ВыборкаНоменклатура.Номенклатура;
				НоваяСтрока.КоличествоНоменклатурыДляВыбора = НоваяСтрока.КоличествоНоменклатурыДляВыбора + 1;
				ДобавитьНоменклатуруДляВыбора(ВыборкаНоменклатура.НоменклатураПоставщика, ВыборкаНоменклатура.Номенклатура);
			КонецЕсли;
		Иначе
			Пока ВыборкаНоменклатура.Следующий() Цикл
				
				Если Не ЗначениеЗаполнено(НоваяСтрока.НоменклатураПоставщика) Тогда
					НоваяСтрока.НоменклатураПоставщика = ВыборкаНоменклатура.НоменклатураПоставщика;
					Если ЗначениеЗаполнено(ВыборкаНоменклатура.НоменклатураПоставщикаНоменклатура) Тогда
						НоваяСтрока.Номенклатура = ВыборкаНоменклатура.НоменклатураПоставщикаНоменклатура;
						НоваяСтрока.Характеристика = ВыборкаНоменклатура.НоменклатураПоставщикаХарактеристика;
						НоваяСтрока.Упаковка = ВыборкаНоменклатура.НоменклатураПоставщикаУпаковка;
					КонецЕсли;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ВыборкаНоменклатура.Номенклатура) Тогда
					НоваяСтрока.КоличествоНоменклатурыДляВыбора = НоваяСтрока.КоличествоНоменклатурыДляВыбора + 1;
					ДобавитьНоменклатуруДляВыбора(ВыборкаНоменклатура.НоменклатураПоставщика, ВыборкаНоменклатура.Номенклатура);
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(
		Товары,
		Новый Структура("ЗаполнитьПризнакХарактеристикиИспользуются",
			Новый Структура("Номенклатура", "ХарактеристикиИспользуются")));
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Не ПеренестиВДокумент И Товары.Количество() > 0 Тогда
		
		Отказ = Истина;
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ПередЗакрытиемВопросЗавершение", ЭтотОбъект),
			НСтр("ru='Номенклатура не перенесена в документ. Перенести?';uk='Номенклатура не перенесена в документ. Перенести?'"),
			РежимДиалогаВопрос.ДаНетОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемВопросЗавершение(ОтветНаВопрос, ДополнительныеПараметры) Экспорт
	
	Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
		
		Если ПроверитьЗаполнение() Тогда
			
			ПеренестиВДокумент = Истина;
			АдресТоваровВХранилище = ПоместитьВоВременноеХранилищеНаСервере();
			Закрыть(АдресТоваровВХранилище);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	ШаблонСообщения = НСтр("ru='Не заполнена колонка ""Характеристика"" в строке %НомерСтроки% списка ""Товары"".';uk='Не заповнена колонка ""Характеристика"" в рядку %НомерСтроки% списку ""Товари"".'");
	
	ТекНомерСтроки = 1;
	Для Каждого ТекСтрока Из Товары Цикл
		Если ЗначениеЗаполнено(ТекСтрока.Номенклатура) И ТекСтрока.ХарактеристикиИспользуются И Не ЗначениеЗаполнено(ТекСтрока.Характеристика) Тогда
			ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НомерСтроки%", ТекНомерСтроки);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", ТекНомерСтроки, "Характеристика"),
				,
				Отказ);
		КонецЕсли;
		ТекНомерСтроки = ТекНомерСтроки + 1;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

&НаКлиенте
Процедура Отмена(Команда)
	
	ПеренестиВДокумент = Истина;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		ПеренестиВДокумент = Истина;
		АдресТоваровВХранилище = ПоместитьВоВременноеХранилищеНаСервере();
		Закрыть(АдресТоваровВХранилище);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// ОБРАБОТЧИКИ "ПриИзменении".

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПроверитьХарактеристикуПоВладельцу", ТекущаяСтрока.Характеристика);
	СтруктураДействий.Вставить("ПроверитьЗаполнитьУпаковкуПоВладельцу", ТекущаяСтрока.Упаковка);
	ОбработкаТабличнойЧастиКлиент.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриАктивизацииЯчейки(Элемент)
	
	ТекущаяСтрока = Элементы.Товары.ТекущиеДанные;
	
	Если Элемент.ТекущийЭлемент.Имя = "ТоварыНоменклатура" И ТекущаяСтрока <> Неопределено Тогда 
		СписокВыбораНоменклатура = Элементы.ТоварыНоменклатура.СписокВыбора;
		СписокВыбораНоменклатура.Очистить();
		
		ТекущаяНоменклатураПоставщика = Элементы.Товары.ТекущиеДанные.НоменклатураПоставщика;
		НайденныеСтроки = НоменклатураДляВыбора.НайтиСтроки(Новый Структура("НоменклатураПоставщика", ТекущаяНоменклатураПоставщика));
		Для Каждого ТекСтрока Из НайденныеСтроки Цикл
			СписокВыбораНоменклатура.Добавить(ТекСтрока.Номенклатура, ТекСтрока.НоменклатураПоставщика);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
