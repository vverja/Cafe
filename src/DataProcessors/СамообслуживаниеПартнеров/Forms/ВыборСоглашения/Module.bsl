
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("Партнер") Тогда
		
		Партнер = Параметры.Партнер;
		СоглашенияСписок.Параметры.УстановитьЗначениеПараметра("Партнер",Параметры.Партнер);
		СоглашенияСписок.Параметры.УстановитьЗначениеПараметра("ТекущаяДата",НачалоДня(ТекущаяДатаСеанса()));
		СоглашенияСписок.Параметры.УстановитьЗначениеПараметра("УказаныРеквизитыПланирования",Параметры.Свойство("УказаныРеквизитыПланирования"));
		
		Если Параметры.Свойство("Соглашение") Тогда
			Элементы.СоглашенияСписок.ТекущаяСтрока = Параметры.Соглашение;
		КонецЕсли;
		
		Если Параметры.Свойство("ХозяйственнаяОперация") Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			             СоглашенияСписок, "ХозяйственнаяОперация",
			             Параметры.ХозяйственнаяОперация, ВидСравненияКомпоновкиДанных.Равно);
		КонецЕсли;
	Иначе
		
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;
	
	ИспользоватьНесколькоВалют                      = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВалют");
	Если Не ИспользоватьНесколькоВалют Тогда
		ВалютаИБ = Константы.ВалютаРегламентированногоУчета.Получить();
	КонецЕсли;
	
	ИспользоватьТиповыеСоглашенияСКлиентами         = ПолучитьФункциональнуюОпцию("ИспользоватьТиповыеСоглашенияСКлиентами");
	ИспользоватьИндивидуальныеСоглашенияСКлиентами  = ПолучитьФункциональнуюОпцию("ИспользоватьИндивидуальныеСоглашенияСКлиентами");
	ТолькоТиповые = ИспользоватьТиповыеСоглашенияСКлиентами И НЕ ИспользоватьИндивидуальныеСоглашенияСКлиентами;
	ТолькоИндивидуальные = НЕ ИспользоватьТиповыеСоглашенияСКлиентами И ИспользоватьИндивидуальныеСоглашенияСКлиентами;
	
	СоглашенияСписок.Параметры.УстановитьЗначениеПараметра("ТолькоТиповые",ТолькоТиповые);
	СоглашенияСписок.Параметры.УстановитьЗначениеПараметра("ТолькоИндивидуальные",ТолькоИндивидуальные);
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюПечать);
	// Конец СтандартныеПодсистемы.Печать
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСоглашенияСписок

&НаКлиенте
Процедура СоглашенияСписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработатьВыбор();
	
КонецПроцедуры

&НаКлиенте
Процедура СоглашенияСписокПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработатьВыбор();
	
	ТекущиеДанные = Элементы.СоглашенияСписок.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Закрыть();
	Иначе
		
		СтруктураВозврата = Новый Структура;
		СтруктураВозврата.Вставить("Соглашение", ТекущиеДанные.Ссылка);
		СтруктураВозврата.Вставить("СоглашениеСтрока", ТекущиеДанные.Наименование);
		СтруктураВозврата.Вставить("Валюта", ?(ЗначениеЗаполнено(ВалютаИБ), ВалютаИБ, ТекущиеДанные.Валюта));
		СтруктураВозврата.Вставить("Склад", ТекущиеДанные.Склад);
		СтруктураВозврата.Вставить("НалогообложениеНДС", ТекущиеДанные.НалогообложениеНДС);
		СтруктураВозврата.Вставить("ЦенаВключаетНДС", ТекущиеДанные.ЦенаВключаетНДС);
		СтруктураВозврата.Вставить("ГрафикОплаты", ТекущиеДанные.ГрафикОплаты);
		СтруктураВозврата.Вставить("ФормаОплаты", ТекущиеДанные.ФормаОплаты);
		СтруктураВозврата.Вставить("Контрагент", ТекущиеДанные.Контрагент);
		СтруктураВозврата.Вставить("Организация", ТекущиеДанные.Организация);
		СтруктураВозврата.Вставить("ХозяйственнаяОперация", ТекущиеДанные.ХозяйственнаяОперация);
		СтруктураВозврата.Вставить("ПорядокРасчетов", ТекущиеДанные.ПорядокРасчетов);
		СтруктураВозврата.Вставить("ЭтоГруппаСкладов", ТекущиеДанные.ЭтоГруппаСкладов);
		СтруктураВозврата.Вставить("ИспользуютсяДоговорыКонтрагентов", ТекущиеДанные.ИспользуютсяДоговорыКонтрагентов);
		СтруктураВозврата.Вставить("СегментНоменклатуры", ТекущиеДанные.СегментНоменклатуры);
		СтруктураВозврата.Вставить("Сценарий", ТекущиеДанные.Сценарий);
		СтруктураВозврата.Вставить("ВидПлана", ТекущиеДанные.ВидПлана);
		СтруктураВозврата.Вставить("Периодичность", ТекущиеДанные.Периодичность);
		СтруктураВозврата.Вставить("ПланироватьПоСумме", ТекущиеДанные.ПланироватьПоСумме);
		СтруктураВозврата.Вставить("Партнер",Партнер);
		
		Закрыть(СтруктураВозврата);
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

#КонецОбласти
