#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ПометкаУдаления Тогда
		ПроверяемыеРеквизиты.Очистить();
		Возврат;
	КонецЕсли;
	
	Если Не ЭтоИнтеркампани
		И (СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезСервис1СЭДО
			ИЛИ СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезЭлектроннуюПочту
			ИЛИ СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезКаталог
			ИЛИ СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезFTP) Тогда
		
		Если Не ЗначениеЗаполнено(Контрагент) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ЭлектронноеВзаимодействиеКлиентСервер.ТекстСообщения("Поле", "Заполнение", "Контрагент"),
				ЭтотОбъект,
				"Контрагент",
				,
				Отказ);
		КонецЕсли;
		
		ПроверитьНастройкиПрямогоОбмена = Ложь;
		
		Если РасширенныйРежимНастройкиСоглашения Тогда
			
			МассивСтрокЭлектронныхДокументов = ИсходящиеДокументы.НайтиСтроки(Новый Структура("Формировать", Истина));
			Для каждого СтрокаТаблицы Из МассивСтрокЭлектронныхДокументов Цикл
				
				Префикс = "ИсходящиеДокументы[" + Формат(СтрокаТаблицы.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].";
				
				Если Не ЗначениеЗаполнено(СтрокаТаблицы.ПрофильНастроекЭДО) Тогда
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ЭлектронноеВзаимодействиеКлиентСервер.ТекстСообщения("Колонка", "ЗАПОЛНЕНИЕ", "Профиль настроек ЭДО",
						СтрокаТаблицы.НомерСтроки, "Электронные документы"),
						ЭтотОбъект,
						Префикс + "ПрофильНастроекЭДО",
						,
						Отказ);
				КонецЕсли;
				Если ОбменСКонтрагентамиСлужебныйВызовСервера.ЭтоПрямойОбмен(СтрокаТаблицы.СпособОбменаЭД)
					И Не ЗначениеЗаполнено(СтрокаТаблицы.ИдентификаторКонтрагента) Тогда
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ЭлектронноеВзаимодействиеКлиентСервер.ТекстСообщения("Колонка", "ЗАПОЛНЕНИЕ", "Идентификатор контрагента",
						СтрокаТаблицы.НомерСтроки, "Электронные документы"),
						ЭтотОбъект,
						Префикс + "ИдентификаторКонтрагента",
						,
						Отказ);
				КонецЕсли;
				
				Если СтрокаТаблицы.СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезКаталог Тогда
					ПроверитьНастройкиПрямогоОбмена = Истина;
					
					ПроверяемыеРеквизиты.Добавить("КаталогВходящихДокументов");
					ПроверяемыеРеквизиты.Добавить("КаталогИсходящихДокументов");
				ИначеЕсли СтрокаТаблицы.СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезЭлектроннуюПочту Тогда
					ПроверитьНастройкиПрямогоОбмена = Истина;
					
					ПроверяемыеРеквизиты.Добавить("ЭлектроннаяПочтаКонтрагента");
				ИначеЕсли СтрокаТаблицы.СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезFTP Тогда
					ПроверитьНастройкиПрямогоОбмена = Истина;
					
					ПроверяемыеРеквизиты.Добавить("КаталогВходящихДокументовFTP");
					ПроверяемыеРеквизиты.Добавить("КаталогИсходящихДокументовFTP");
				КонецЕсли;
			КонецЦикла;
		Иначе
			
			Если ОбменСКонтрагентамиСлужебныйВызовСервера.ЭтоПрямойОбмен(СпособОбменаЭД)
				И Не ЗначениеЗаполнено(ИдентификаторКонтрагента) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					ЭлектронноеВзаимодействиеКлиентСервер.ТекстСообщения("Поле", "Заполнение", "Идентификатор контрагента"),
					ЭтотОбъект,
					"ИдентификаторКонтрагента",
					,
					Отказ);
			КонецЕсли;
			
			Если СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезКаталог Тогда
				ПроверяемыеРеквизиты.Добавить("КаталогВходящихДокументов");
				ПроверяемыеРеквизиты.Добавить("КаталогИсходящихДокументов");
			ИначеЕсли СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезЭлектроннуюПочту Тогда
				
				ПроверяемыеРеквизиты.Добавить("ЭлектроннаяПочтаКонтрагента");
			ИначеЕсли СпособОбменаЭД = Перечисления.СпособыОбменаЭД.ЧерезFTP Тогда
				
				ПроверяемыеРеквизиты.Добавить("КаталогВходящихДокументовFTP");
				ПроверяемыеРеквизиты.Добавить("КаталогИсходящихДокументовFTP");
			КонецЕсли;
		КонецЕсли;
		
		Возврат;
	КонецЕсли;
	
	ПроверяемыеРеквизиты.Очистить();
	Если ЭтоИнтеркампани И СтатусСоглашения = Перечисления.СтатусыСоглашенийЭД.Действует Тогда
		
		Если НЕ ЗначениеЗаполнено(Организация) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ЭлектронноеВзаимодействиеКлиентСервер.ТекстСообщения("Поле", "Заполнение", "Организация-отправитель"),
				ЭтотОбъект,
				"Организация",
				,
				Отказ);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ИдентификаторОрганизации) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ЭлектронноеВзаимодействиеКлиентСервер.ТекстСообщения("Поле", "Заполнение", "Идентификатор отправителя"),
				ЭтотОбъект,
				"ИдентификаторОрганизации",
				,
				Отказ);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Контрагент) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ЭлектронноеВзаимодействиеКлиентСервер.ТекстСообщения("Поле", "Заполнение", "Организация-получатель"),
				ЭтотОбъект,
				"Контрагент",
				,
				Отказ);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ИдентификаторКонтрагента) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ЭлектронноеВзаимодействиеКлиентСервер.ТекстСообщения("Поле", "Заполнение", "Идентификатор получателя"),
				ЭтотОбъект,
				"ИдентификаторКонтрагента",
				,
				Отказ);
		КонецЕсли;
		
		Возврат;
	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Не НастройкаЭДОУникальна() Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если НЕ ПометкаУдаления Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СоглашенияОбИспользованииЭДИсходящиеДокументы.ПрофильНастроекЭДО
		|ИЗ
		|	Справочник.СоглашенияОбИспользованииЭД.ИсходящиеДокументы КАК СоглашенияОбИспользованииЭДИсходящиеДокументы
		|ГДЕ
		|	СоглашенияОбИспользованииЭДИсходящиеДокументы.ПрофильНастроекЭДО.ПометкаУдаления
		|	И СоглашенияОбИспользованииЭДИсходящиеДокументы.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
		
		Результат = Запрос.Выполнить().Выбрать();
		Если Результат.Следующий() Тогда
			ШаблонСообщения = НСтр("ru='Операция отменена.
                |В текущей настройке ЭДО используется помеченный на удаление профиль настроек ЭДО:
                |%1'
                |;uk='Операція скасована.
                |У поточній настройці ЕДО використовується відмічений для вилучення профіль настройок ЕДО:
                |%1'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Результат.ПрофильНастроекЭДО);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		КонецЕсли;
	КонецЕсли;
	
	ЭтотОбъект.ДополнительныеСвойства.Вставить("ЕстьСоглашение", Истина);
	ЭтотОбъект.ДополнительныеСвойства.Вставить("ЗарегистрироватьОбъект",
		НЕ ОбменСКонтрагентамиСлужебныйВызовСервера.ЕстьДОПоДокументу(ЭтотОбъект.Ссылка));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Только для внутреннего использования
Функция НастройкаЭДОУникальна() Экспорт
	
	Если ПометкаУдаления Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтатусПодключения <> Перечисления.СтатусыУчастниковОбменаЭД.Присоединен Тогда
		Возврат Истина;
	КонецЕсли;
	
	ТекущаяНастройкаУникальна = Истина;
	
	// Проверка на уникальное использование настройки по реквизитам: Организация, Контрагент, ДоговорКонтрагента.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НастройкиЭДО.Ссылка КАК Настройка,
	|	НастройкиЭДО.Контрагент КАК Контрагент,
	|	НастройкиЭДО.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НастройкиЭДО.Организация КАК Организация
	|ИЗ
	|	Справочник.СоглашенияОбИспользованииЭД КАК НастройкиЭДО
	|ГДЕ
	|	НЕ НастройкиЭДО.ПометкаУдаления
	|	И НастройкиЭДО.Организация = &Организация
	|	И НастройкиЭДО.Контрагент = &Контрагент
	|	И НастройкиЭДО.ДоговорКонтрагента = &ДоговорКонтрагента
	|	И НастройкиЭДО.СтатусПодключения = Значение(Перечисление.СтатусыУчастниковОбменаЭД.Присоединен)
	|	И НастройкиЭДО.Ссылка <> &ТекущаяНастройка";
	Запрос.УстановитьПараметр("ТекущаяНастройка",   ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("Организация",        ЭтотОбъект.Организация);
	Запрос.УстановитьПараметр("Контрагент",         ЭтотОбъект.Контрагент);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ЭтотОбъект.ДоговорКонтрагента);
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		ТекущаяНастройкаУникальна = Ложь;
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			ШаблонСообщения = НСтр("ru='В информационной базе уже существует настройка ЭДО со статусом подключения ""Присоединен""
                                        |между контрагентом %1 и организацией %2'
                                        |;uk='В інформаційній базі вже існує настройка ЕДО зі статусом підключення ""Приєднаний""
                                        |між контрагентом %1 і організацією %2'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Выборка.Контрагент,
				Выборка.Организация);
			Если ЗначениеЗаполнено(Выборка.ДоговорКонтрагента) Тогда
				Шаблон = НСтр("ru='%1 по договору %2';uk='%1 по договору %2'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										Шаблон, ТекстСообщения, Выборка.ДоговорКонтрагента);
			КонецЕсли;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЦикла;
	КонецЕсли;
	
	Возврат ТекущаяНастройкаУникальна;
	
КонецФункции

#КонецОбласти

#КонецЕсли