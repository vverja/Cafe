
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	Валюта = Параметры.Валюта;
	Дата = Параметры.Дата;
	Контрагент = Параметры.Контрагент;
	Организация = Параметры.Организация;
	Партнер = Параметры.Партнер;
	СуммаТоваров = Параметры.СуммаТоваров;
	ИдентификаторВызывающейФормы = Параметры.ИдентификаторВызывающейФормы;
	ХозяйственнаяОперация = Параметры.ХозяйственнаяОперация;
	Документ = Параметры.Документ;
	Проведен = Параметры.Проведен;
	ЭтоРасчетыСКлиентами = Параметры.ЭтоРасчетыСКлиентами;
	ТолькоПросмотр = Параметры.ТолькоПросмотр;
	ЭтаФорма.ТолькоПросмотр = ТолькоПросмотр;
	
	ПолучитьРасшифровкуПлатежаИзХранилища(Параметры.АдресПлатежейВХранилище);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ПринудительноЗакрытьФорму Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		
		СписокКнопок = Новый СписокЗначений();
		СписокКнопок.Добавить("Закрыть", НСтр("ru='Закрыть';uk='Закрити'"));
		СписокКнопок.Добавить("НеЗакрывать", НСтр("ru='Не закрывать';uk='Не закривати'"));
		
		Отказа = Истина;
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ПередЗакрытиемВопросЗавершение", ЭтотОбъект),
			НСтр("ru='Все измененные данные будут потеряны. Закрыть форму?';uk='Всі змінені дані будуть втрачені. Закрити форму?'"),
			СписокКнопок);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемВопросЗавершение(ОтветНаВопрос, ДополнительныеПараметры) Экспорт
	
	Если ОтветНаВопрос = "Закрыть" Тогда
		ПринудительноЗакрытьФорму = Истина;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ТолькоПросмотр Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаРасшифровки Из РасшифровкаПлатежа Цикл
		
		Если Не ЗначениеЗаполнено(СтрокаРасшифровки.Заказ) Тогда
			
			ТекстСообщения = НСтр("ru='Не заполнена колонка ""Объект расчетов"" в строке %НомерСтроки% списка ""Взаиморасчеты""';uk='Не заповнена колонка ""Об''єкт розрахунків"" в рядку %НомерСтроки% списку ""Взаєморозрахунки""'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", СтрокаРасшифровки.НомерСтроки);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				,
				"РасшифровкаПлатежа["+(СтрокаРасшифровки.НомерСтроки-1)+"].Заказ",
				,
				Отказ);
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаРасшифровки.Сумма) Тогда
			
			ТекстСообщения = НСтр("ru='Не заполнена колонка ""Сумма"" в строке %НомерСтроки% списка ""Взаиморасчеты""';uk='Не заповнена колонка ""Сума"" в рядку %НомерСтроки% списку ""Взаєморозрахунки""'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", СтрокаРасшифровки.НомерСтроки);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				,
				"РасшифровкаПлатежа["+(СтрокаРасшифровки.НомерСтроки-1)+"].Сумма",
				,
				Отказ);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если РасшифровкаПлатежа.Количество() > 0 И СуммаТоваров < РасшифровкаПлатежа.Итог("Сумма") Тогда
		ТекстСообщения = НСтр("ru='Сумма по строкам в табличной части превышает сумму документа %СуммаТоваров% %Валюта%';uk='Сума за рядками у табличній частині перевищує суму документа %СуммаТоваров% %Валюта%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%СуммаТоваров%", Формат(СуммаТоваров, "ЧДЦ=2; ЧН=0,00"));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Валюта%", Валюта);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			,
			"РасшифровкаПлатежа[0].Сумма",
			,
			Отказ);
	КонецЕсли;
	
	Запрос = ДенежныеСредстваСервер.ЗапросПоТабличнойЧастиРасшифровкаПлатежа(РасшифровкаПлатежа, Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Организация в заказе в строке %1 списка ""Взаиморасчеты"" не соответствует организации документа %2';uk='Організація в замовленні в рядку %1 списку ""Взаиморасчеты"" не відповідає організації документа %2'"),
			Выборка.НомерСтроки,
			Организация);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстСообщения,
			,
			"РасшифровкаПлатежа["+(Выборка.НомерСтроки-1)+"].Заказ",
			,
			Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "ОбщаяФорма.ПодборПоРасчетамСПартнерами" Тогда
		ПолучитьРасшифровкуПлатежаИзХранилища(ВыбранноеЗначение.АдресПлатежейВХранилище);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРасшифровкаПлатежа

&НаКлиенте
Процедура РасшифровкаПлатежаПриИзменении(Элемент)
	
	ПронумероватьТаблицу(РасшифровкаПлатежа);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	СтрокаТаблицы = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	ФинансыКлиент.УстановитьПустуюСсылкуНаЗаказ(
		СтрокаТаблицы.Заказ,
		ЭтоРасчетыСКлиентами);
	
	Если НоваяСтрока И Не Копирование Тогда
		
		СуммаОстаток = СуммаТоваров - РасшифровкаПлатежа.Итог("Сумма");
		СтрокаТаблицы.Сумма = СуммаОстаток;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаСуммаПриИзменении(Элемент)

	СтрокаТаблицы = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	СтрокаТаблицы.СуммаВзаиморасчетов = 0;
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаЗаказНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ЗначенияОтбора = Новый Структура;
	ЗначенияОтбора.Вставить("Организация", Организация);
	ЗначенияОтбора.Вставить("Партнер",     Партнер);
	ЗначенияОтбора.Вставить("Контрагент",  Контрагент);
	
	НастройкиВыбора = ФинансыКлиент.ПараметрыВыбораДокументаРасчетов();
	НастройкиВыбора.РедактируемыйДокумент         = Документ;
	НастройкиВыбора.ЭтоРасчетыСКлиентами          = ЭтоРасчетыСклиентами;
	НастройкиВыбора.ЗапретитьДоговорыПоДокументам = Истина;
	
	ФинансыКлиент.ДокументРасчетовНачалоВыбора(ЗначенияОтбора, НастройкиВыбора, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаЗаказОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтрокаТаблицы = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ВыбранноеЗначение);
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РасшифровкаПлатежаВалютаВзаиморасчетовПриИзменении(Элемент)
	
	СтрокаТаблицы = Элементы.РасшифровкаПлатежа.ТекущиеДанные;
	СтрокаТаблицы.СуммаВзаиморасчетов = 0;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодборПоОстаткам(Команда)
	
	Если Проведен Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("ru='Подбор по остаткам возможен только в непроведенном документе.';uk='Підбір за залишками можливий тільки в непроведенном документі.'"));
		Возврат;
	КонецЕсли;
	
	АдресПлатежейВХранилище = ПоместитьРасшифровкуПлатежаВХранилище();
	ПараметрыПодбора = Новый Структура;
	ПараметрыПодбора.Вставить("АдресПлатежейВХранилище", АдресПлатежейВХранилище);
	ПараметрыПодбора.Вставить("Организация", Организация);
	ПараметрыПодбора.Вставить("Партнер", Партнер);
	ПараметрыПодбора.Вставить("Контрагент", Контрагент);
	ПараметрыПодбора.Вставить("Валюта", Валюта);
	ПараметрыПодбора.Вставить("СуммаДокумента", СуммаТоваров);
	ПараметрыПодбора.Вставить("ДатаДокумента", Дата);
	ПараметрыПодбора.Вставить("ХозяйственнаяОперация", ХозяйственнаяОперация);
	
	ОткрытьФорму(
		"ОбщаяФорма.ПодборПоРасчетамСПартнерами",
		ПараметрыПодбора,
		ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	ОчиститьСообщения();
	
	Если ПроверитьЗаполнение() Тогда
		
		ПринудительноЗакрытьФорму = Истина;
		Закрыть(ПоместитьРасшифровкуПлатежаВХранилище());
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПолучитьРасшифровкуПлатежаИзХранилища(АдресПлатежейВХранилище)
	
	РасшифровкаПлатежа.Очистить();
	
	ВременнаяТаблица = ПолучитьИзВременногоХранилища(АдресПлатежейВХранилище);
	
	Для Каждого СтрокаРасшифровки Из ВременнаяТаблица Цикл
		Если ЗначениеЗаполнено(СтрокаРасшифровки.Заказ) Тогда
			НоваяСтрока = РасшифровкаПлатежа.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРасшифровки);
		КонецЕсли;
	КонецЦикла;
	
	ПронумероватьТаблицу(РасшифровкаПлатежа);
	
КонецПроцедуры

&НаСервере
Функция ПоместитьРасшифровкуПлатежаВХранилище()
	
	ВременнаяТаблица = РасшифровкаПлатежа.Выгрузить(,"Заказ, Сумма, ВалютаВзаиморасчетов, СуммаВзаиморасчетов");
	СуммаКомпенсации = СуммаТоваров - РасшифровкаПлатежа.Итог("Сумма");
	Если СуммаКомпенсации > 0 Тогда
		НоваяСтрока = ВременнаяТаблица.Добавить();
		НоваяСтрока.Сумма = СуммаКомпенсации;
	КонецЕсли;
	
	Возврат ПоместитьВоВременноеХранилище(ВременнаяТаблица, ИдентификаторВызывающейФормы);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ПронумероватьТаблицу(РасшифровкаПлатежа)
	
	НомерСтроки = 1;
	Для каждого СтрокаРасшифровки Из РасшифровкаПлатежа Цикл
		СтрокаРасшифровки.НомерСтроки = НомерСтроки;
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
