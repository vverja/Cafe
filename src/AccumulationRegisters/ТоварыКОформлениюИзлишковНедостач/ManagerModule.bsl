#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы


Процедура ИсправитьДвижения_ДанныеДляОбновления(Параметры) Экспорт 
	
	ИмяРегистра = "ТоварыКОформлениюИзлишковНедостач";
	ПолноеИмяРегистра = "РегистрНакопления.ТоварыКОформлениюИзлишковНедостач";
    
#Область АктОРасхожденияхПослеОтгрузки    
	ТекстЗапросаМеханизмаПроведения = Документы.АктОРасхожденияхПослеОтгрузки.АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
	Регистраторы = ОбновлениеИнформационнойБазыУТ.РегистраторыДляПерепроведения(
		ТекстЗапросаМеханизмаПроведения,
		ПолноеИмяРегистра,
		"Документ.АктОРасхожденияхПослеОтгрузки"
    );
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
#КонецОбласти    

#Область АктОРасхожденияхПослеПеремещения	
	ТекстЗапросаМеханизмаПроведения = Документы.АктОРасхожденияхПослеПеремещения.АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
	Регистраторы = ОбновлениеИнформационнойБазыУТ.РегистраторыДляПерепроведения(
		ТекстЗапросаМеханизмаПроведения,
		ПолноеИмяРегистра,
		"Документ.АктОРасхожденияхПослеПеремещения"
    );
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
#КонецОбласти    
    

#Область ПриходныйОрдерНаТовары
	ТекстЗапросаМеханизмаПроведения = Документы.ПриходныйОрдерНаТовары.АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
	Регистраторы = ОбновлениеИнформационнойБазыУТ.РегистраторыДляПерепроведения(
        ТекстЗапросаМеханизмаПроведения,
		ПолноеИмяРегистра,
		"Документ.ПриходныйОрдерНаТовары"
    );
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
#КонецОбласти

#Область ОчиститьДвиженияПоНеордернымСкладам

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыКОформлениюИзлишковНедостач.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюИзлишковНедостач КАК ТоварыКОформлениюИзлишковНедостач
	|ГДЕ
	|	НЕ(ТоварыКОформлениюИзлишковНедостач.Склад.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|				И ТоварыКОформлениюИзлишковНедостач.Склад.ДатаНачалаОрдернойСхемыПриОтраженииИзлишковНедостач <= ТоварыКОформлениюИзлишковНедостач.Период)
	|	И (ТоварыКОформлениюИзлишковНедостач.Регистратор ССЫЛКА Документ.ВводОстатков
	|			ИЛИ ТоварыКОформлениюИзлишковНедостач.Регистратор ССЫЛКА Документ.КорректировкаПоОрдеруНаТовары
	|			ИЛИ ТоварыКОформлениюИзлишковНедостач.Регистратор ССЫЛКА Документ.ОприходованиеИзлишковТоваров
	|			ИЛИ ТоварыКОформлениюИзлишковНедостач.Регистратор ССЫЛКА Документ.ОрдерНаОтражениеИзлишковТоваров
	|			ИЛИ ТоварыКОформлениюИзлишковНедостач.Регистратор ССЫЛКА Документ.ОрдерНаОтражениеНедостачТоваров
	|			ИЛИ ТоварыКОформлениюИзлишковНедостач.Регистратор ССЫЛКА Документ.ОрдерНаОтражениеПорчиТоваров
	|			ИЛИ ТоварыКОформлениюИзлишковНедостач.Регистратор ССЫЛКА Документ.ПересортицаТоваров
	|			ИЛИ ТоварыКОформлениюИзлишковНедостач.Регистратор ССЫЛКА Документ.ПересчетТоваров
	|			ИЛИ ТоварыКОформлениюИзлишковНедостач.Регистратор ССЫЛКА Документ.ПорчаТоваров
	|			ИЛИ ТоварыКОформлениюИзлишковНедостач.Регистратор ССЫЛКА Документ.ПриходныйОрдерНаТовары
	|			ИЛИ ТоварыКОформлениюИзлишковНедостач.Регистратор ССЫЛКА Документ.СписаниеНедостачТоваров)";
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
#КонецОбласти

КонецПроцедуры

Процедура ИсправитьДвижения(Параметры) Экспорт
	
	Регистраторы = Новый Массив;
	Регистраторы.Добавить("Документ.АктОРасхожденияхПослеОтгрузки");
	Регистраторы.Добавить("Документ.АктОРасхожденияхПослеПеремещения");
	Регистраторы.Добавить("Документ.ВводОстатков");
	Регистраторы.Добавить("Документ.КорректировкаПоОрдеруНаТовары");
	Регистраторы.Добавить("Документ.ОприходованиеИзлишковТоваров");
	Регистраторы.Добавить("Документ.ОрдерНаОтражениеИзлишковТоваров");
	Регистраторы.Добавить("Документ.ОрдерНаОтражениеНедостачТоваров");
	Регистраторы.Добавить("Документ.ОрдерНаОтражениеПорчиТоваров");
	Регистраторы.Добавить("Документ.ПересортицаТоваров");
	Регистраторы.Добавить("Документ.ПересчетТоваров");
	Регистраторы.Добавить("Документ.ПорчаТоваров");
	Регистраторы.Добавить("Документ.ПриходныйОрдерНаТовары");
	Регистраторы.Добавить("Документ.СписаниеНедостачТоваров");
	
	ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
        Регистраторы,
        "РегистрНакопления.ТоварыКОформлениюИзлишковНедостач",
        Параметры.Очередь
    );
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
        Параметры.Очередь,
		"РегистрНакопления.ТоварыКОформлениюИзлишковНедостач"
    );
	
КонецПроцедуры



#КонецОбласти

#КонецОбласти

#КонецЕсли