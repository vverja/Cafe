#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Формированиезапроса

Функция РезультатЗапросаПоДаннымОтчета(СтруктураФормированияОтчета)
	
	СтруктураФормированияОтчета.Вставить("ЕстьОбращенияКРегистрамРасчетыПоДокументамКлиенты", Ложь);
	СтруктураФормированияОтчета.Вставить("ЕстьОбращенияКРегистрамРасчетыПоДокументамПоставщики", Ложь);
	СтруктураФормированияОтчета.Вставить("ТипыОбъектовДляПроверкиДоступа", Новый Массив);
	
	Запрос = Новый Запрос();
	ТекстЗапроса = "";
	ВременныеТаблицы = Новый МенеджерВременныхТаблиц;
	ДатаОтчета = ТекущаяДата();
	ТекстЗапроса = ТекстЗапроса + ТекстЗапросаПоОтбору(Запрос, СтруктураФормированияОтчета);
	ТекстЗапросаПоВидамСобытий = ТекстЗапросаДанныеПоВидамСобытий(Запрос, СтруктураФормированияОтчета);
	ТекстЗапроса = ТекстЗапроса + СтруктураФормированияОтчета.ТекстЗапросыВременныеТаблицы + ТекстЗапросаПоВидамСобытий;
	ТекстЗапроса = ТекстЗапроса + ТекстЗапросаРезультирующий(СтруктураФормированияОтчета);
	УстановитьЗначенияПараметровЗапроса(Запрос,СтруктураФормированияОтчета);
	Запрос.МенеджерВременныхТаблиц  = ВременныеТаблицы;
	Запрос.Текст = ТекстЗапроса;
	
	УстановитьПривилегированныйРежим(Истина);
	Если СтруктураФормированияОтчета.ЕстьОбращенияКРегистрамРасчетыПоДокументамКлиенты Тогда
		ВзаиморасчетыСервер.РассчитатьОперативныеДатыПлатежаКлиента(ВременныеТаблицы, ДатаОтчета, "КОплате");
		ВзаиморасчетыСервер.РассчитатьОперативныеДатыПлатежаКлиента(ВременныеТаблицы, ДатаОтчета, "КОтгрузке");
	КонецЕсли;
	Если СтруктураФормированияОтчета.ЕстьОбращенияКРегистрамРасчетыПоДокументамПоставщики Тогда
		ВзаиморасчетыСервер.РассчитатьОперативныеДатыПлатежаПоставщика(ВременныеТаблицы, ДатаОтчета, "КОплате");
		ВзаиморасчетыСервер.РассчитатьОперативныеДатыПлатежаПоставщика(ВременныеТаблицы, ДатаОтчета, "КПоступлению");
	КонецЕсли;
	Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат РезультатЗапросаСУчетомПравДоступа(Запрос, СтруктураФормированияОтчета);
	
КонецФункции

Функция РезультатЗапросаСУчетомПравДоступа(Запрос, СтруктураФормированияОтчета)

	ТекстЗапросаПраваДоступа = "
	|%ТекстОбъединить%
	|	СобытияБезРазрешенные.СсылкаНаОбъектСобытия КАК СсылкаНаОбъектСобытия %ТекстПоместить%
	|ИЗ СобытияБезРазрешенные КАК СобытияБезРазрешенные
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ %ТаблицаОбъекта% КАК ТаблицаОбъекта
	|	ПО СобытияБезРазрешенные.СсылкаНаОбъектСобытия = ТаблицаОбъекта.Ссылка
	|";
	
	ТекстЗапроса = "";
	Счетчик = 1;
	
	Для каждого ЭлементМассива Из СтруктураФормированияОтчета.ТипыОбъектовДляПроверкиДоступа Цикл
		
		Если Счетчик = 1 Тогда
			
			ТекстОбъединить = "ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ";
			ТекстПоместить  = "
			|ПОМЕСТИТЬ ДоступныеОбъектыСобытий";
			
		Иначе
			
			ТекстОбъединить = "
			|ОБЪЕДИНИТЬ ВСЕ 
			|
			|ВЫБРАТЬ";
			ТекстПоместить  = "";
			
		КонецЕсли;
		
		ТекстЗапросаПоОбъектуМетаданных = СтрЗаменить(ТекстЗапросаПраваДоступа,"%ТекстОбъединить%",ТекстОбъединить);
		ТекстЗапросаПоОбъектуМетаданных = СтрЗаменить(ТекстЗапросаПоОбъектуМетаданных,"%ТекстПоместить%",ТекстПоместить);
		ТекстЗапросаПоОбъектуМетаданных = СтрЗаменить(ТекстЗапросаПоОбъектуМетаданных,"%ТаблицаОбъекта%",ЭлементМассива);
		
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаПоОбъектуМетаданных;
		
		Счетчик = Счетчик + 1;
		
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СобытияБезРазрешенные.СсылкаНаОбъектСобытия,
	|	СобытияБезРазрешенные.Предмет,
	|	СобытияБезРазрешенные.ТипСобытия,
	|	СобытияБезРазрешенные.ДатаОбъектаСобытия КАК ДатаОбъектаСобытия,
	|	СобытияБезРазрешенные.ДатаСобытия КАК ДатаСобытия,
	|	СобытияБезРазрешенные.Статус КАК Статус,
	|	СобытияБезРазрешенные.Ответственный КАК Ответственный,
	|	СобытияБезРазрешенные.Партнер КАК Партнер,
	|	СобытияБезРазрешенные.Описание КАК Описание,
	|	СобытияБезРазрешенные.ДопРеквизитОписание1 КАК ДопРеквизитОписание1,
	|	СобытияБезРазрешенные.ДопРеквизитОписание2 КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА СобытияБезРазрешенные.Статус = &Предстоящее
	|			ТОГДА 3
	|		КОГДА СобытияБезРазрешенные.Статус = &Текущее
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК ПорядокСтатуса,
	|	СобытияБезРазрешенные.РасчетыНеактуальныСКлиентом КАК РасчетыНеактуальныСКлиентом,
	|	СобытияБезРазрешенные.РасчетыНеактуальныСПоставщиком КАК РасчетыНеактуальныСПоставщиком
	|ИЗ
	|	ДоступныеОбъектыСобытий КАК ДоступныеОбъектыСобытий
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ СобытияБезРазрешенные КАК СобытияБезРазрешенные
	|	ПО СобытияБезРазрешенные.СсылкаНаОбъектСобытия = ДоступныеОбъектыСобытий.СсылкаНаОбъектСобытия
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПорядокСтатуса,
	|	ДатаСобытия ВОЗР
	|
	|ИТОГИ 
	|	КОЛИЧЕСТВО(ДатаОбъектаСобытия)
	|ПО
	|	Статус,
	|	ДатаСобытия";
	
	Запрос.Текст = ТекстЗапроса;
	Возврат Запрос.Выполнить();

КонецФункции

Процедура УстановитьЗначенияПараметровЗапроса(Запрос,СтруктураФормированияОтчета)
	
	Запрос.УстановитьПараметр("Предстоящее", "Предстоящее");
	Запрос.УстановитьПараметр("Текущее", "Текущее");
	Запрос.УстановитьПараметр("Просроченное", "Просроченное");
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончанияПериодаФормирования(СтруктураФормированияОтчета.ПериодФормирования));
	
	Запрос.УстановитьПараметр("СогласованиеЗаказаКлиента",НСтр("ru='Согласовать заказ клиента';uk='Погодити замовлення клієнта'"));
	Запрос.УстановитьПараметр("ОжиданиеОплатыДоОбеспечения",НСтр("ru='Получить оплату до обеспечения';uk='Отримати оплату до забезпечення'"));
	Запрос.УстановитьПараметр("ТребуетОбеспечения",НСтр("ru='Обеспечить';uk='Забезпечити'"));
	Запрос.УстановитьПараметр("ОжиданиеПредоплатыДоОтгрузки",НСтр("ru='Получить предоплату до отгрузки';uk='Отримати передплату до відвантаження'"));
	Запрос.УстановитьПараметр("ПодготовкаКОтгрузке",НСтр("ru='Подготовить отгрузку';uk='Підготувати відвантаження'"));
	Запрос.УстановитьПараметр("Отгрузка",НСтр("ru='Отгрузить';uk='Відвантажити'"));
	Запрос.УстановитьПараметр("ОжиданиеОплатыПослеОтгрузки",НСтр("ru='Получить оплату после отгрузки';uk='Отримати оплату після відвантаження'"));
	Запрос.УстановитьПараметр("ЗакрытиеЗаказа",НСтр("ru='Закрыть заказ';uk='Закрити замовлення'"));
	Запрос.УстановитьПараметр("КонтролироватьЗакрытиеЗаказа", ПолучитьФункциональнуюОпцию("НеЗакрыватьЗаказыКлиентовБезПолнойОплаты") 
						ИЛИ ПолучитьФункциональнуюОпцию("НеЗакрыватьЗаказыКлиентовБезПолнойОтгрузки"));
	
	Запрос.УстановитьПараметр("СогласованиеЗаказаПоставщика",НСтр("ru='Согласовать заказ поставщику';uk='Погодити замовлення постачальнику'"));
	Запрос.УстановитьПараметр("ВнестиАвансДоПодтверждения",НСтр("ru='Внести оплату до подтверждения';uk='Внести оплату до підтвердження'"));
	Запрос.УстановитьПараметр("ПодтверждениеЗаказа",НСтр("ru='Получить подтверждение заказа';uk='Отримати підтвердження замовлення'"));
	Запрос.УстановитьПараметр("ВнесениеПредоплатыДоОтгрузки",НСтр("ru='Внести предоплату до поступления';uk='Внести передплату до надходження'"));
	Запрос.УстановитьПараметр("ПодготовкаКПоступлению",НСтр("ru='Подготовить поступление';uk='Підготувати надходження'"));
	Запрос.УстановитьПараметр("ПолучениеЗаказа",НСтр("ru='Получить заказ';uk='Отримати замовлення'"));
	Запрос.УстановитьПараметр("ОплатаПослеПоступления",НСтр("ru='Оплатить после поступления';uk='Сплатити після надходження'"));
	Запрос.УстановитьПараметр("ЗакрытиеЗаказаПоставщику",НСтр("ru='Закрыть заказ поставщику';uk='Закрити замовлення постачальнику'"));
	Запрос.УстановитьПараметр("НеИспользоватьСтатусыЗаказовПоставщикам", НЕ ПолучитьФункциональнуюОпцию("ИспользоватьСтатусыЗаказовПоставщикам"));
	
	Запрос.УстановитьПараметр("СогласованиеЗаявкиНаВозврат",НСтр("ru='Согласовать заявку на возврат';uk='Погодити заявку на повернення'"));
	Запрос.УстановитьПараметр("ОформлениеЗаявкиНаВозврат",НСтр("ru='Оформить возврат от клиента';uk='Оформити повернення від клієнта'"));
	Запрос.УстановитьПараметр("ОжиданиеОплатыДоОбеспеченияЗаявкаНаВозврат",НСтр("ru='Получить оплату до обеспечения';uk='Отримати оплату до забезпечення'"));
	Запрос.УстановитьПараметр("ОжиданиеПредоплатыДоОтгрузкиЗаявкаНаВозврат",НСтр("ru='Получить предоплату до отгрузки по замене';uk='Отримати передплату до відвантаження по заміні'"));
	Запрос.УстановитьПараметр("ПодготовкаКОтгрузкеЗаявкаНаВозврат",НСтр("ru='Подготовить отгрузку замены';uk='Підготувати відвантаження заміни'"));
	Запрос.УстановитьПараметр("ОтгрузкаЗаявкаНаВозврат",НСтр("ru='Отгрузить замену';uk='Відвантажити заміну'"));
	Запрос.УстановитьПараметр("ОжиданиеОплатыПослеОтгрузкиЗаявкаНаВозврат",НСтр("ru='Получить оплату после отгрузки по замене';uk='Отримати оплату після відвантаження по заміні'"));
	Запрос.УстановитьПараметр("ОтметкаВыполненияЗаявкиНаВозврат",НСтр("ru='Отметить выполнение';uk='Позначити виконання'"));
	
	Запрос.УстановитьПараметр("ПроконтролироватьОтгрузкуПоРеализации",НСтр("ru='Проконтролировать отгрузку';uk='Проконтролювати відвантаження'"));
	Запрос.УстановитьПараметр("ПеревестиВСтатусОтгружено",НСтр("ru='Перевести в статус ""Реализовано""';uk='Перевести в статус ""Реалізовано""'"));
	Запрос.УстановитьПараметр("ПолучитьОплатуПоРеализации",НСтр("ru='Получить оплату';uk='Отримати оплату'"));
КонецПроцедуры

Функция ДатаОкончанияПериодаФормирования(ПериодФормирования)

	СекундВДне = 24*60*60;
	
	Если ПериодФормирования = "Сегодня" Тогда
		
		Возврат НачалоДня(ТекущаяДата() + СекундВДне);
		
	ИначеЕсли ПериодФормирования = НСтр("ru='На три дня вперед';uk='На три дні вперед'") Тогда
		
		Возврат НачалоДня(ТекущаяДата() + 3 * СекундВДне);
		
	ИначеЕсли ПериодФормирования = НСтр("ru='На неделю вперед';uk='На тиждень вперед'") Тогда
		
		Возврат НачалоДня(ТекущаяДата() + 7 * СекундВДне);
		
	ИначеЕсли ПериодФормирования = НСтр("ru='На месяц вперед';uk='На місяць вперед'") Тогда
		
		Возврат НачалоДня(ДобавитьМесяц(ТекущаяДата(),1) + СекундВДне);
		
	ИначеЕсли ПериодФормирования = НСтр("ru='На три месяца вперед';uk='На три місяці вперед'") Тогда
		
		Возврат НачалоДня(ДобавитьМесяц(ТекущаяДата(),3) + СекундВДне);
		
	ИначеЕсли ПериодФормирования = НСтр("ru='На полугодие вперед';uk='На півріччя вперед'") Тогда
		
		Возврат НачалоДня(ДобавитьМесяц(ТекущаяДата(),6) + СекундВДне);
		
	ИначеЕсли ПериодФормирования = НСтр("ru='На год вперед';uk='На рік вперед'") Тогда
		
		Возврат НачалоДня(ДобавитьМесяц(ТекущаяДата(),12) + СекундВДне);
		
	КонецЕсли;
	
	Возврат Дата(1,1,1);

КонецФункции

Функция ТекстЗапросаПоОтбору(Запрос, СтруктураФормированияОтчета)
	
	ТекстЗапроса = "";
	ТекстУсловияПоПользователям = "";
	
	СхемаДляОтбора = ПолучитьМакет("СхемаОтборы");
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаДляОтбора, КомпоновщикНастроек.ПолучитьНастройки(),,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	Если МакетКомпоновкиДанных.ЗначенияПараметров.Количество() <> 1 Тогда
		
		ТекстЗапроса = МакетКомпоновкиДанных.НаборыДанных.ОтборПоПользователям.Запрос;
		
		Для каждого Параметр Из МакетКомпоновкиДанных.ЗначенияПараметров Цикл
			Запрос.Параметры.Вставить(Параметр.Имя, Параметр.Значение);
		КонецЦикла;
		
		ТекстЗапроса = ТекстЗапроса +"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
		НайденнаяПозицияИЗ = СтрНайти(ТекстЗапроса,"ИЗ");
		Если НайденнаяПозицияИЗ <> 0 Тогда
			ТекстЗапроса = Лев(ТекстЗапроса,НайденнаяПозицияИЗ - 1) + "  ПОМЕСТИТЬ ОтборПоПользователям
			|  " + Прав(ТекстЗапроса,СтрДлина(ТекстЗапроса) - НайденнаяПозицияИЗ + 1);
			
		КонецЕсли;
		
		ТекстУсловияПоПользователям = " В 
		|	(ВЫБРАТЬ
		|		ОтборПоПользователям.Пользователь
		|	ИЗ
		|		ОтборПоПользователям КАК ОтборПоПользователям)";
		
	КонецЕсли;
	
	СтруктураФормированияОтчета.Вставить("ТекстУсловияПоПользователям",ТекстУсловияПоПользователям);

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРезультирующий(СтруктураФормированияОтчета)
	
	ТекстЗапроса = "";
	
	Для Инд = 1 По СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий Цикл
		
		ПодзапросПоВидуСобытия = "
		|%ТекстВыбрать%
		|	%ТекстТаблица%.СсылкаНаОбъектСобытия,
		|	%ТекстТаблица%.Предмет,
		|	%ТекстТаблица%.ТипСобытия,
		|	%ТекстТаблица%.ДатаОбъектаСобытия КАК ДатаОбъектаСобытия,
		|	%ТекстТаблица%.ДатаСобытия КАК ДатаСобытия,
		|	%ТекстТаблица%.Статус КАК Статус,
		|	%ТекстТаблица%.Ответственный КАК Ответственный,
		|	%ТекстТаблица%.Партнер КАК Партнер,
		|	%ТекстТаблица%.Описание КАК Описание,
		|	%ТекстТаблица%.ДопРеквизитОписание1 КАК ДопРеквизитОписание1,
		|	%ТекстТаблица%.ДопРеквизитОписание2 КАК ДопРеквизитОписание2
		|%ТекстПоместить%
		|ИЗ
		|	%ТекстТаблица% КАК %ТекстТаблица%";
		
		ТекстТаблица = "ДанныеПоВидуСобытия" + Строка(Инд);
		
		Если Инд = 1 Тогда
			
			ТекстВыбрать = "
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ ";
			
			ТекстПоместить = "ПОМЕСТИТЬ События";
			
		Иначе
			
			ТекстВыбрать = "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ ";
			
			ТекстПоместить = "";
			
		КонецЕсли;
		
		ПодзапросПоВидуСобытия = СтрЗаменить(ПодзапросПоВидуСобытия,"%ТекстТаблица%",ТекстТаблица);
		ПодзапросПоВидуСобытия = СтрЗаменить(ПодзапросПоВидуСобытия,"%ТекстВыбрать%",ТекстВыбрать);
		ПодзапросПоВидуСобытия = СтрЗаменить(ПодзапросПоВидуСобытия,"%ТекстПоместить%",ТекстПоместить);
		
		ТекстЗапроса = ТекстЗапроса + ПодзапросПоВидуСобытия;
		
	КонецЦикла;
	
	Если НЕ СтруктураФормированияОтчета.ЕстьОбращенияКРегистрамРасчетыПоДокументамКлиенты И НЕ СтруктураФормированияОтчета.ЕстьОбращенияКРегистрамРасчетыПоДокументамПоставщики Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	События.СсылкаНаОбъектСобытия,
		|	События.Предмет,
		|	События.ТипСобытия,
		|	События.ДатаОбъектаСобытия КАК ДатаОбъектаСобытия,
		|	События.ДатаСобытия КАК ДатаСобытия,
		|	События.Статус КАК Статус,
		|	События.Ответственный КАК Ответственный,
		|	События.Партнер КАК Партнер,
		|	События.Описание КАК Описание,
		|	События.ДопРеквизитОписание1 КАК ДопРеквизитОписание1,
		|	События.ДопРеквизитОписание2 КАК ДопРеквизитОписание2,
		|	ВЫБОР
		|		КОГДА События.Статус = &Предстоящее
		|			ТОГДА 3
		|		КОГДА События.Статус = &Текущее
		|			ТОГДА 2
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК ПорядокСтатуса,
		|	ЛОЖЬ КАК РасчетыНеактуальныСКлиентом,
		|	ЛОЖЬ КАК РасчетыНеактуальныСПоставщиком
		|ПОМЕСТИТЬ СобытияБезРазрешенные
		|ИЗ
		|	События КАК События";
		
	Иначе
		
		Если СтруктураФормированияОтчета.ЕстьОбращенияКРегистрамРасчетыПоДокументамКлиенты Тогда
			
			ТекстЗапроса = ТекстЗапроса + "
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	События.Партнер
			|ПОМЕСТИТЬ ПартнерыРасчетыКлиенты
			|ИЗ
			|	События КАК События
			|ГДЕ
			|	(События.ТипСобытия = &ЗакрытиеЗаказа
			|			ИЛИ События.ТипСобытия = &ОжиданиеОплатыПослеОтгрузки
			|			ИЛИ События.ТипСобытия = &ПодготовкаКОтгрузке
			|			ИЛИ События.ТипСобытия = &ОжиданиеПредоплатыДоОтгрузки
			|			ИЛИ События.ТипСобытия = &ПолучитьОплатуПоРеализации
			|			ИЛИ События.ТипСобытия = &ОжиданиеОплатыДоОбеспеченияЗаявкаНаВозврат
			|			ИЛИ События.ТипСобытия = &ОжиданиеПредоплатыДоОтгрузкиЗаявкаНаВозврат
			|			ИЛИ События.ТипСобытия = &ПодготовкаКОтгрузкеЗаявкаНаВозврат
			|			ИЛИ События.ТипСобытия = &ОжиданиеОплатыПослеОтгрузкиЗаявкаНаВозврат
			|			ИЛИ События.ТипСобытия = &ОтметкаВыполненияЗаявкиНаВозврат
			|			ИЛИ События.ТипСобытия = &ОжиданиеОплатыДоОбеспечения)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	АналитикаУчетаПоПартнерам.КлючАналитики
			|ПОМЕСТИТЬ ОтборАналитикиПартнеров
			|ИЗ
			|	РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
			|ГДЕ
			|	АналитикаУчетаПоПартнерам.Партнер В
			|			(ВЫБРАТЬ
			|				ПартнерыРасчеты.Партнер
			|			ИЗ
			|				ПартнерыРасчетыКлиенты КАК ПартнерыРасчеты)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	Задания.АналитикаУчетаПоПартнерам.Партнер КАК Партнер
			|ПОМЕСТИТЬ ПартнерыРасчетыСКлиентамиНеактуальны
			|ИЗ
			|	РегистрСведений.ЗаданияКРаспределениюРасчетовСКлиентами КАК Задания
			|ГДЕ
			|	Задания.Месяц <= &ДатаОкончания
			|	И Задания.Документ <> НЕОПРЕДЕЛЕНО
			|	И Задания.АналитикаУчетаПоПартнерам В
			|			(ВЫБРАТЬ
			|				ОтборАналитикиПартнеров.КлючАналитики
			|			ИЗ
			|				ОтборАналитикиПартнеров КАК ОтборАналитикиПартнеров)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|";
			
		Иначе
			
			ТекстЗапроса = ТекстЗапроса + "
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|
			|ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК Партнер
			|ПОМЕСТИТЬ ПартнерыРасчетыСКлиентамиНеактуальны
			|ГДЕ
			|	ЛОЖЬ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|";
			
		КонецЕсли;
		
		Если СтруктураФормированияОтчета.ЕстьОбращенияКРегистрамРасчетыПоДокументамПоставщики Тогда
			
			ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	События.Партнер
			|ПОМЕСТИТЬ ПартнерыРасчетыПоставщики
			|ИЗ
			|	События КАК События
			|ГДЕ
			|	(События.ТипСобытия = &ВнестиАвансДоПодтверждения
			|			ИЛИ События.ТипСобытия = &ПодтверждениеЗаказа
			|			ИЛИ События.ТипСобытия = &ВнесениеПредоплатыДоОтгрузки
			|			ИЛИ События.ТипСобытия = &ПодготовкаКПоступлению
			|			ИЛИ События.ТипСобытия = &ОплатаПослеПоступления
			|			ИЛИ События.ТипСобытия = &ЗакрытиеЗаказаПоставщику)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	АналитикаУчетаПоПартнерам.КлючАналитики
			|ПОМЕСТИТЬ ОтборАналитикиПартнеровПоставщики
			|ИЗ
			|	РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
			|ГДЕ
			|	АналитикаУчетаПоПартнерам.Партнер В
			|			(ВЫБРАТЬ
			|				ПартнерыРасчеты.Партнер
			|			ИЗ
			|				ПартнерыРасчетыПоставщики КАК ПартнерыРасчеты)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	Задания.АналитикаУчетаПоПартнерам.Партнер КАК Партнер
			|ПОМЕСТИТЬ ПартнерыРасчетыСПоставщикамиНеактуальны
			|ИЗ
			|	РегистрСведений.ЗаданияКРаспределениюРасчетовСПоставщиками КАК Задания
			|ГДЕ
			|	Задания.Месяц <= &ДатаОкончания
			|	И Задания.Документ <> НЕОПРЕДЕЛЕНО
			|	И Задания.АналитикаУчетаПоПартнерам В
			|			(ВЫБРАТЬ
			|				ОтборАналитикиПартнеров.КлючАналитики
			|			ИЗ
			|				ОтборАналитикиПартнеровПоставщики КАК ОтборАналитикиПартнеров)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|"
			
		Иначе
			
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ВЫБРАТЬ
			|	ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка) КАК Партнер
			|ПОМЕСТИТЬ ПартнерыРасчетыСПоставщикамиНеактуальны
			|ГДЕ
			|	ЛОЖЬ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|";
			
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + "
		|ВЫБРАТЬ
		|	События.СсылкаНаОбъектСобытия,
		|	События.Предмет,
		|	События.ТипСобытия,
		|	События.ДатаОбъектаСобытия КАК ДатаОбъектаСобытия,
		|	События.ДатаСобытия КАК ДатаСобытия,
		|	События.Статус КАК Статус,
		|	События.Ответственный КАК Ответственный,
		|	События.Партнер КАК Партнер,
		|	События.Описание КАК Описание,
		|	События.ДопРеквизитОписание1 КАК ДопРеквизитОписание1,
		|	События.ДопРеквизитОписание2 КАК ДопРеквизитОписание2,
		|	ВЫБОР
		|		КОГДА События.Статус = &Предстоящее
		|			ТОГДА 3
		|		КОГДА События.Статус = &Текущее
		|			ТОГДА 2
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК ПорядокСтатуса,
		|	ВЫБОР
		|		КОГДА ПартнерыРасчетыСКлиентамиНеактуальны.Партнер ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК РасчетыНеактуальныСКлиентом,
		|	ВЫБОР
		|		КОГДА ПартнерыРасчетыСПоставщикамиНеактуальны.Партнер ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК РасчетыНеактуальныСПоставщиком
		|ПОМЕСТИТЬ СобытияБезРазрешенные
		|ИЗ
		|	События КАК События
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПартнерыРасчетыСКлиентамиНеактуальны КАК ПартнерыРасчетыСКлиентамиНеактуальны
		|		ПО События.Партнер = ПартнерыРасчетыСКлиентамиНеактуальны.Партнер
		|			И (События.ТипСобытия = &ЗакрытиеЗаказа
		|			ИЛИ События.ТипСобытия = &ОжиданиеОплатыПослеОтгрузки
		|			ИЛИ События.ТипСобытия = &ПодготовкаКОтгрузке
		|			ИЛИ События.ТипСобытия = &ОжиданиеПредоплатыДоОтгрузки
		|			ИЛИ События.ТипСобытия = &ПолучитьОплатуПоРеализации
		|			ИЛИ События.ТипСобытия = &ОжиданиеОплатыДоОбеспеченияЗаявкаНаВозврат
		|			ИЛИ События.ТипСобытия = &ОжиданиеПредоплатыДоОтгрузкиЗаявкаНаВозврат
		|			ИЛИ События.ТипСобытия = &ПодготовкаКОтгрузкеЗаявкаНаВозврат
		|			ИЛИ События.ТипСобытия = &ОжиданиеОплатыПослеОтгрузкиЗаявкаНаВозврат
		|			ИЛИ События.ТипСобытия = &ОтметкаВыполненияЗаявкиНаВозврат
		|			ИЛИ События.ТипСобытия = &ОжиданиеОплатыДоОбеспечения)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПартнерыРасчетыСПоставщикамиНеактуальны КАК ПартнерыРасчетыСПоставщикамиНеактуальны
		|		ПО События.Партнер = ПартнерыРасчетыСПоставщикамиНеактуальны.Партнер
		|			И (События.ТипСобытия = &ВнестиАвансДоПодтверждения
		|			ИЛИ События.ТипСобытия = &ПодтверждениеЗаказа
		|			ИЛИ События.ТипСобытия = &ВнесениеПредоплатыДоОтгрузки
		|			ИЛИ События.ТипСобытия = &ПодготовкаКПоступлению
		|			ИЛИ События.ТипСобытия = &ОплатаПослеПоступления
		|			ИЛИ События.ТипСобытия = &ЗакрытиеЗаказаПоставщику)";
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаДанныеПоВидамСобытий(Запрос, СтруктураФормированияОтчета)
	
	ТекстЗапроса = "";
	СтруктураФормированияОтчета.Вставить("ТекущийНомерПодзапросаПоВидамСобытий",0);
	СтруктураФормированияОтчета.Вставить("ТекстЗапросыВременныеТаблицы","");
	
	Для Каждого СтрокаВерхнегоУровня ИЗ СтруктураФормированияОтчета.ВидыСобытий.Строки Цикл
		
		Если СтрокаВерхнегоУровня.Пометка > 0 Тогда
			
			Для Каждого СтрокаВидСобытий Из СтрокаВерхнегоУровня.Строки Цикл
				
				Если СтрокаВидСобытий.Пометка > 0 Тогда
					
					ТекстЗапроса = ТекстЗапроса + ТекстЗапросаПоВидуСобытия(Запрос,СтрокаВидСобытий.ВидСобытия,СтруктураФормированияОтчета);
					
				КонецЕсли;
				
			КонецЦикла
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПоВидуСобытия(Запрос,ВидСобытия,СтруктураФормированияОтчета)
	
	СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий = СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий + 1;
	
	Если ВидСобытия = "ВходящиеПисьма" Тогда
		Возврат ТекстЗапросаВходящиеПисьма(Запрос, СтруктураФормированияОтчета);
	ИначеЕсли ВидСобытия = "ИсходящиеПисьма" Тогда
		Возврат ТекстЗапросаИсходящиеПисьма(Запрос, СтруктураФормированияОтчета);
	ИначеЕсли ВидСобытия = "Встречи" Тогда
		Возврат ТекстЗапросаВстречи(Запрос, СтруктураФормированияОтчета);
	ИначеЕсли ВидСобытия = "ТелефонныеЗвонки" Тогда
		Возврат ТекстЗапросаТелефонныеЗвонки(Запрос, СтруктураФормированияОтчета);
	ИначеЕсли ВидСобытия = "ЗапланированныеВзаимодействия" Тогда
		Возврат ТекстЗапросаЗапланированныеВзаимодействия(Запрос,СтруктураФормированияОтчета);
	ИначеЕсли ВидСобытия = "ДниРожденияКонтактныхЛиц" Тогда
		Возврат ТекстЗапросаДниРожденияКонтактныхЛиц(Запрос,СтруктураФормированияОтчета);
	ИначеЕсли ВидСобытия = "ДоговораКонтрагентов" Тогда
		Возврат ТекстЗапросаДоговораКонтрагентов(Запрос,СтруктураФормированияОтчета);
	ИначеЕсли ВидСобытия = "МаркетинговыеМероприятия" Тогда
		Возврат ТекстЗапросаМаркетинговыеМероприятия(Запрос,СтруктураФормированияОтчета);
	ИначеЕсли ВидСобытия = "Проекты" Тогда
		Возврат ТекстЗапросаПроекты(Запрос,СтруктураФормированияОтчета);
	ИначеЕсли ВидСобытия = "Сделки" Тогда
		Возврат ТекстЗапросаСделки(Запрос,СтруктураФормированияОтчета);
	ИначеЕсли ВидСобытия = "СоглашенияСКлиентам" Тогда
		Возврат ТекстЗапросаСоглашенияСКлиентами(Запрос,СтруктураФормированияОтчета);
	ИначеЕсли ВидСобытия = "СоглашенияСПоставщиками" Тогда
		Возврат ТекстЗапросаСоглашенияСПоставщиками(Запрос,СтруктураФормированияОтчета);
	ИначеЕсли ВидСобытия = "КоммерческиеПредложения" Тогда
		Возврат ТекстЗапросаКоммерческиеПредложения(Запрос,СтруктураФормированияОтчета)
	ИначеЕсли ВидСобытия = "УстановкаЦен" Тогда
		Возврат ТекстЗапросаУстановкаЦен(Запрос,СтруктураФормированияОтчета);
	ИначеЕсли ВидСобытия = "ЗаказыКлиентов" Тогда
		Возврат ТекстЗапросаЗаказыКлиентов(Запрос,СтруктураФормированияОтчета);
	ИначеЕсли ВидСобытия = "ЗаказыПоставщикам" Тогда
		Возврат ТекстЗапросаЗаказыПоставщикам(Запрос,СтруктураФормированияОтчета);
	ИначеЕсли ВидСобытия = "ЗаявкиНаВозврат" Тогда
		Возврат ТекстЗапросаЗаявкиНаВозврат(Запрос,СтруктураФормированияОтчета);
	ИначеЕсли ВидСобытия = "РеализацииТоваровУслуг" Тогда
		Возврат ТекстЗапросаРеализацииТоваровУслуг(Запрос,СтруктураФормированияОтчета);
	ИначеЕсли ВидСобытия = "ВозвратыПоставщику" Тогда
		Возврат ТекстЗапросаВозвратыПоставщику(Запрос,СтруктураФормированияОтчета);
	ИначеЕсли ВидСобытия = "ДоверенностьПолучениеТоваров" Тогда
		Возврат ТекстЗапросаДоверенностьПолучениеТоваров(Запрос,СтруктураФормированияОтчета);
	ИначеЕсли ВидСобытия = "ЗаказНаВнутреннееПотребление" Тогда
		Возврат ТекстЗапросаЗаказНаВнутреннееПотребление(Запрос,СтруктураФормированияОтчета);
	ИначеЕсли ВидСобытия = "ВнутреннееПотребление" Тогда
		Возврат ТекстЗапросаВнутреннееПотребление(Запрос,СтруктураФормированияОтчета);
	ИначеЕсли ВидСобытия = "ЗаявкаНаРасходованиеДенежныхСредств" Тогда
		Возврат ТекстЗапросаЗаявкаНаРасходованиеДенежныхСредств(Запрос,СтруктураФормированияОтчета);
	ИначеЕсли ВидСобытия = "СверкаВзаиморасчетов" Тогда
		Возврат ТекстЗапросаСверкаВзаиморасчетов(Запрос,СтруктураФормированияОтчета);
	ИначеЕсли ВидСобытия = "ЗадачаИсполнителя" Тогда
		Возврат ТекстЗапросаПрочиеЗадачиИсполнителя(Запрос,СтруктураФормированияОтчета);
	ИначеЕсли ВидСобытия = "АктыПриемкиКлиента" Тогда
		Возврат ТекстЗапросаАктыПриемкиКлиента(Запрос,СтруктураФормированияОтчета);
	КонецЕсли;
	
КонецФункции

Функция ТекстЗапросаПрочиеЗадачиИсполнителя(Запрос,СтруктураФормированияОтчета)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗадачаИсполнителя.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ЗадачаИсполнителя.Предмет КАК Предмет,
	|	ЗадачаИсполнителя.Наименование КАК ТипСобытия,
	|	ЗадачаИсполнителя.Дата КАК ДатаОбъектаСобытия,
	|	ВЫБОР
	|	КОГДА ЗадачаИсполнителя.СрокИсполнения = ДАТАВРЕМЯ(1, 1, 1)
	|		ТОГДА ЗадачаИсполнителя.Дата
	|		ИНАЧЕ ЗадачаИсполнителя.СрокИсполнения
	|	КОНЕЦ КАК ДатаСобытия,
	|	ПРЕДСТАВЛЕНИЕ(ЗадачаИсполнителя.Предмет) КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА ЗадачаИсполнителя.СрокИсполнения = ДАТАВРЕМЯ(1, 1, 1)
	|		ТОГДА &Текущее
	|		ИНАЧЕ ВЫБОР
	|			КОГДА ЗадачаИсполнителя.СрокИсполнения < &ТекущаяДата
	|				ТОГДА &Просроченное
	|			КОГДА НАЧАЛОПЕРИОДА(ЗадачаИсполнителя.СрокИсполнения, ДЕНЬ) = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|				ТОГДА &Текущее
	|			ИНАЧЕ &Предстоящее
	|		КОНЕЦ
	|	КОНЕЦ КАК Статус,
	|	ЗадачаИсполнителя.Предмет.Партнер КАК Партнер,
	|	ЗадачаИсполнителя.Исполнитель КАК Ответственный
	|%ТекстПоместить%
	|ИЗ
	|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
	|ГДЕ
	|	ЗадачаИсполнителя.СостояниеБизнесПроцесса = ЗНАЧЕНИЕ(Перечисление.СостоянияБизнесПроцессов.Активен)
	|		И НЕ ЗадачаИсполнителя.Выполнена
	|		И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.ЭлектронноеПисьмоВходящее
	|		И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.ЭлектронноеПисьмоИсходящее
	|		И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.Встреча
	|		И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.ТелефонныйЗвонок
	|		И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.ЗапланированноеВзаимодействие
	|		И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.СверкаВзаиморасчетов
	|		И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.ЗаявкаНаРасходованиеДенежныхСредств
	|		И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.ВнутреннееПотреблениеТоваров
	|		И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.ЗаказНаВнутреннееПотребление
	|		И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.ДоверенностьВыданная
	|		И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.ВозвратТоваровПоставщику
	|		И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.РеализацияТоваровУслуг
	|		И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
	|		И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.ЗаказПоставщику
	|		И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.ЗаказКлиента
	|		И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.УстановкаЦенНоменклатуры
	|		И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.КоммерческоеПредложениеКлиенту
	|		И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Справочник.СоглашенияСПоставщиками
	|		И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Справочник.СоглашенияСКлиентами
	|		И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Справочник.СделкиСКлиентами
	|		И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Справочник.Проекты
	|		И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Справочник.МаркетинговыеМероприятия
	|		И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Справочник.ДоговорыКонтрагентов
	|		И ВЫБОР
	|			КОГДА ЗадачаИсполнителя.СрокИсполнения = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЗадачаИсполнителя.СрокИсполнения < &ДатаОкончания
	|		КОНЕЦ 
	|	%ТекстУсловияЗадачаОтбор%";
	
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияЗадачаОтбор ="
		|И  ЗадачаИсполнителя.Исполнитель" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
		Если СтруктураФормированияОтчета.ЕстьПравоРолиИсполнителей Тогда
				
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗадачаИсполнителя.Ссылка,
		|	ЗадачаИсполнителя.Предмет,
		|	ЗадачаИсполнителя.Наименование,
		|	ЗадачаИсполнителя.Дата,
		|	ВЫБОР
		|		КОГДА ЗадачаИсполнителя.СрокИсполнения = ДАТАВРЕМЯ(1, 1, 1)
		|		ТОГДА НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
		|		ИНАЧЕ ЗадачаИсполнителя.СрокИсполнения
		|	КОНЕЦ,
		|	ЗадачаИсполнителя.Предмет КАК Описание,
		|	NULL,
		|	NULL,
		|	ВЫБОР
		|		КОГДА ЗадачаИсполнителя.СрокИсполнения = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА &Текущее
		|		ИНАЧЕ ВЫБОР
		|		КОГДА ЗадачаИсполнителя.СрокИсполнения < &ТекущаяДата
		|			ТОГДА &Просроченное
		|		КОГДА НАЧАЛОПЕРИОДА(ЗадачаИсполнителя.СрокИсполнения, ДЕНЬ) = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
		|				ТОГДА &Текущее
		|			ИНАЧЕ &Предстоящее
		|		КОНЕЦ
		|	КОНЕЦ,
		|	ЗадачаИсполнителя.Предмет.Партнер,
		|	ВЫБОР
		|		КОГДА ЗадачаИсполнителя.Исполнитель = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
		|			ТОГДА ЗадачаИсполнителя.РольИсполнителя
		|		ИНАЧЕ ЗадачаИсполнителя.Исполнитель
		|	КОНЕЦ 
		|ИЗ
		|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборПоПользователям КАК ОтборПоПользователям
		|	ПО (ЗадачаИсполнителя.РольИсполнителя = ОтборПоПользователям.РольИсполнителя
		|			И ЗадачаИсполнителя.ОсновнойОбъектАдресации = ОтборПоПользователям.ОсновнойОбъектАдресации
		|			И ЗадачаИсполнителя.ДополнительныйОбъектАдресации = ОтборПоПользователям.ДополнительныйОбъектАдресации)
		|ГДЕ
		|	ЗадачаИсполнителя.СостояниеБизнесПроцесса = ЗНАЧЕНИЕ(Перечисление.СостоянияБизнесПроцессов.Активен)
		|	И НЕ ЗадачаИсполнителя.Выполнена
		|	И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.ЭлектронноеПисьмоВходящее
		|	И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.ЭлектронноеПисьмоИсходящее
		|	И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.Встреча
		|	И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.ТелефонныйЗвонок
		|	И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.ЗапланированноеВзаимодействие
		|	И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.СверкаВзаиморасчетов
		|	И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.ЗаявкаНаРасходованиеДенежныхСредств
		|	И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.ВнутреннееПотреблениеТоваров
		|	И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.ЗаказНаВнутреннееПотребление
		|	И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.ДоверенностьВыданная
		|	И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.ВозвратТоваровПоставщику
		|	И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.РеализацияТоваровУслуг
		|	И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
		|	И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.ЗаказПоставщику
		|	И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.ЗаказКлиента
		|	И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.УстановкаЦенНоменклатуры
		|	И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Документ.КоммерческоеПредложениеКлиенту
		|	И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Справочник.СоглашенияСПоставщиками
		|	И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Справочник.СоглашенияСКлиентами
		|	И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Справочник.СделкиСКлиентами
		|	И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Справочник.Проекты
		|	И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Справочник.МаркетинговыеМероприятия
		|	И НЕ ЗадачаИсполнителя.Предмет ССЫЛКА Справочник.ДоговорыКонтрагентов
		|	И ВЫБОР
		|		КОГДА ЗадачаИсполнителя.СрокИсполнения = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЗадачаИсполнителя.СрокИсполнения < &ДатаОкончания
		|	КОНЕЦ";
		
		КонецЕсли;
		
	Иначе
		
		ТекстУсловияЗадачаОтбор = "";
		
	КонецЕсли;
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияЗадачаОтбор%",ТекстУсловияЗадачаОтбор);
	ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса,СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий);
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Задача.ЗадачаИсполнителя");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСверкаВзаиморасчетов(Запрос,СтруктураФормированияОтчета)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	СверкаВзаиморасчетов.Ссылка КАК СсылкаНаОбъектСобытия,
	|	СверкаВзаиморасчетов.Ссылка КАК Предмет,
	|	ВЫБОР
	|		КОГДА СверкаВзаиморасчетов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСверокВзаиморасчетов.Создана)
	|			ТОГДА &НаправитьНаСверку
	|		ИНАЧЕ &СогласоватьДанныеСверки
	|	КОНЕЦ КАК ТипСобытия,
	|	СверкаВзаиморасчетов.Дата КАК ДатаОбъектаСобытия,
	|	НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) КАК ДатаСобытия,
	|	СверкаВзаиморасчетов.Представление КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	&Текущее КАК Статус,
	|	СверкаВзаиморасчетов.Партнер КАК Партнер,
	|	СверкаВзаиморасчетов.Менеджер КАК Ответственный
	|%ТекстПоместить%
	|ИЗ
	|	Документ.СверкаВзаиморасчетов КАК СверкаВзаиморасчетов
	|ГДЕ
	|	СверкаВзаиморасчетов.Проведен
	|	И (СверкаВзаиморасчетов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСверокВзаиморасчетов.Создана)
	|			ИЛИ СверкаВзаиморасчетов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСверокВзаиморасчетов.НаСверке))
	|	%ТекстУсловияОтбор%";
	
	Запрос.УстановитьПараметр("НаправитьНаСверку",НСтр("ru='Передать партнеру на сверку';uk='Передати партнерові на звірку'"));
	Запрос.УстановитьПараметр("СогласоватьДанныеСверки",НСтр("ru='Согласовать с партнером данные сверки';uk='Погодити з партнером дані звірки'"));
	
	ДобавитьЗапросПоЗадачам(ТекстЗапроса,"Документ.СверкаВзаиморасчетов",СтруктураФормированияОтчета);
	
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияОтбор ="
		|И СверкаВзаиморасчетов.Менеджер" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
	Иначе
		
		ТекстУсловияОтбор = "";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтбор%",ТекстУсловияОтбор);
	ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса,СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий);
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Документ.СверкаВзаиморасчетов");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаявкаНаРасходованиеДенежныхСредств(Запрос,СтруктураФормированияОтчета)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ЗаявкаНаРасходованиеДенежныхСредств.Ссылка КАК Предмет,
	|	&СогласоватьЗаявкуНаРасходованиеДенежныхСредств КАК ТипСобытия,
	|	ЗаявкаНаРасходованиеДенежныхСредств.Дата КАК ДатаОбъектаСобытия,
	|	ЗаявкаНаРасходованиеДенежныхСредств.ЖелательнаяДатаПлатежа КАК ДатаСобытия,
	|	ЗаявкаНаРасходованиеДенежныхСредств.Представление КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА ЗаявкаНаРасходованиеДенежныхСредств.ЖелательнаяДатаПлатежа > НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Предстоящее
	|		КОГДА ЗаявкаНаРасходованиеДенежныхСредств.ЖелательнаяДатаПлатежа = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Текущее
	|		ИНАЧЕ &Просроченное
	|	КОНЕЦ КАК Статус,
	|	NULL КАК Партнер,
	|	ЗаявкаНаРасходованиеДенежныхСредств.КтоЗаявил КАК Ответственный
	|%ТекстПоместить%
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|ГДЕ
	|	ЗаявкаНаРасходованиеДенежныхСредств.Проведен И ЗаявкаНаРасходованиеДенежныхСредств.ЖелательнаяДатаПлатежа < &ДатаОкончания
	|	И ЗаявкаНаРасходованиеДенежныхСредств.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована) %ТекстУсловияОтбор%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаявкаНаРасходованиеДенежныхСредств.Ссылка,
	|	ЗаявкаНаРасходованиеДенежныхСредств.Ссылка,
	|	&УтвердитьЗаявкуНаРасходованиеДенежныхСредств,
	|	ЗаявкаНаРасходованиеДенежныхСредств.Дата,
	|	ЗаявкаНаРасходованиеДенежныхСредств.ЖелательнаяДатаПлатежа,
	|	ЗаявкаНаРасходованиеДенежныхСредств.Представление,
	|	NULL,
	|	NULL,
	|	ВЫБОР
	|		КОГДА ЗаявкаНаРасходованиеДенежныхСредств.ЖелательнаяДатаПлатежа > НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Предстоящее
	|		КОГДА ЗаявкаНаРасходованиеДенежныхСредств.ЖелательнаяДатаПлатежа = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Текущее
	|		ИНАЧЕ &Просроченное
	|	КОНЕЦ,
	|	NULL КАК Партнер,
	|	ЗаявкаНаРасходованиеДенежныхСредств.КтоЗаявил КАК Ответственный
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|ГДЕ
	|	ЗаявкаНаРасходованиеДенежныхСредств.Проведен  И ЗаявкаНаРасходованиеДенежныхСредств.ЖелательнаяДатаПлатежа < &ДатаОкончания
	|	И ЗаявкаНаРасходованиеДенежныхСредств.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.Согласована) 
	|	%ТекстУсловияОтбор%";
	
	Запрос.УстановитьПараметр("СогласоватьЗаявкуНаРасходованиеДенежныхСредств",НСтр("ru='Получить согласование заявки';uk='Отримати погодження заявки'"));
	Запрос.УстановитьПараметр("УтвердитьЗаявкуНаРасходованиеДенежныхСредств",НСтр("ru='Получить утверждение заявки';uk='Отримати затвердження заявки'"));
	
	ДобавитьЗапросПоЗадачам(ТекстЗапроса,"Документ.ЗаявкаНаРасходованиеДенежныхСредств",СтруктураФормированияОтчета);
	
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияОтбор ="
		|И ЗаявкаНаРасходованиеДенежныхСредств.КтоЗаявил" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
	Иначе
		
		ТекстУсловияОтбор = "";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтбор%",ТекстУсловияОтбор);
	ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса,СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий);
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Документ.ЗаявкаНаРасходованиеДенежныхСредств");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаВнутреннееПотребление(Запрос,СтруктураФормированияОтчета)

	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВнутреннееПотреблениеТоваров.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ВнутреннееПотреблениеТоваров.Ссылка КАК Предмет,
	|	&ПроконтролироватьОтгрузкуВнутреннееПотребление КАК ТипСобытия,
	|	ВнутреннееПотреблениеТоваров.Дата КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ) КАК ДатаСобытия,
	|	ВнутреннееПотреблениеТоваров.Представление КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	&Текущее КАК Статус,
	|	NULL КАК Партнер,
	|	ВнутреннееПотреблениеТоваров.Ответственный КАК Ответственный
	|%ТекстПоместить%
	|ИЗ
	|	Документ.ВнутреннееПотреблениеТоваров КАК ВнутреннееПотреблениеТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО ВнутреннееПотреблениеТоваров.Склад = Склады.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке.Остатки(, ДокументОтгрузки ССЫЛКА Документ.ВнутреннееПотреблениеТоваров %ТекстУсловияОтборДокументОтгрузки%) КАК ТоварыКОтгрузкеОстатки
	|		ПО ТоварыКОтгрузкеОстатки.ДокументОтгрузки = ВнутреннееПотреблениеТоваров.Ссылка
	|ГДЕ
	|	ВнутреннееПотреблениеТоваров.Проведен
	|	И ВЫБОР
	|			КОГДА Склады.ИспользоватьОрдернуюСхемуПриОтгрузке
	|						И ВнутреннееПотреблениеТоваров.Дата >= Склады.ДатаНачалаОрдернойСхемыПриОтгрузке
	|				ТОГДА ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток > 0
	|						ИЛИ ТоварыКОтгрузкеОстатки.СобираетсяОстаток > 0
	|						ИЛИ ТоварыКОтгрузкеОстатки.СобраноОстаток > 0
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	%ТекстУсловияОтбор%";
	
	Запрос.УстановитьПараметр("ПроконтролироватьОтгрузкуВнутреннееПотребление",НСтр("ru='Проконтролировать отгрузку';uk='Проконтролювати відвантаження'"));
	
	ДобавитьЗапросПоЗадачам(ТекстЗапроса,"Документ.ВнутреннееПотреблениеТоваров",СтруктураФормированияОтчета);
	
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияОтбор ="
		|И ВнутреннееПотреблениеТоваров.Ответственный" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		ТекстУсловияОтборДокументОтгрузки ="
		|И ДокументОтгрузки.Ответственный" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
	Иначе
		
		ТекстУсловияОтборДокументОтгрузки ="";
		ТекстУсловияОтбор = "";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтборДокументОтгрузки%",ТекстУсловияОтборДокументОтгрузки);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтбор%",ТекстУсловияОтбор);
	ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса,СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий);
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Документ.ВнутреннееПотреблениеТоваров");
	
	Возврат ТекстЗапроса;

КонецФункции


Функция ТекстЗапросаЗаказНаВнутреннееПотребление(Запрос,СтруктураФормированияОтчета)

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДокументЗаказНаВнутреннееПотребление.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ДокументЗаказНаВнутреннееПотребление.Ссылка КАК Предмет,
	|	&ПодготовитьКОтгрузке КАК ТипСобытия,
	|	ДокументЗаказНаВнутреннееПотребление.Дата КАК ДатаОбъектаСобытия,
	|	МИНИМУМ(КОНЕЦПЕРИОДА(ЗаказНаВнутреннееПотреблениеТовары.ДатаОтгрузки,ДЕНЬ)) КАК ДатаСобытия,
	|	ДокументЗаказНаВнутреннееПотребление.Представление КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) < ЗаказНаВнутреннееПотреблениеТовары.ДатаОтгрузки
	|			ТОГДА &Предстоящее
	|		КОГДА НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) = ЗаказНаВнутреннееПотреблениеТовары.ДатаОтгрузки
	|			ТОГДА &Текущее
	|		ИНАЧЕ &Просроченное
	|	КОНЕЦ КАК Статус,
	|	NULL КАК Партнер,
	|	ДокументЗаказНаВнутреннееПотребление.Ответственный КАК Ответственный
	|%ТекстПоместить%
	|ИЗ
	|	Документ.ЗаказНаВнутреннееПотребление.Товары КАК ЗаказНаВнутреннееПотреблениеТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаВнутреннееПотребление КАК ДокументЗаказНаВнутреннееПотребление
	|		ПО ЗаказНаВнутреннееПотреблениеТовары.Ссылка = ДокументЗаказНаВнутреннееПотребление.Ссылка
	|ГДЕ
	|	ДокументЗаказНаВнутреннееПотребление.Проведен
	|	И ДокументЗаказНаВнутреннееПотребление.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.КОбеспечению)
	|	И ЗаказНаВнутреннееПотреблениеТовары.ДатаОтгрузки < &ДатаОкончания  %ТекстУсловияОтборДокумент%
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументЗаказНаВнутреннееПотребление.Ссылка,
	|	ДокументЗаказНаВнутреннееПотребление.Дата,
	|	ДокументЗаказНаВнутреннееПотребление.Представление,
	|	ДокументЗаказНаВнутреннееПотребление.Ответственный,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) < ЗаказНаВнутреннееПотреблениеТовары.ДатаОтгрузки
	|			ТОГДА &Предстоящее
	|		КОГДА НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) = ЗаказНаВнутреннееПотреблениеТовары.ДатаОтгрузки
	|			ТОГДА &Текущее
	|		ИНАЧЕ &Просроченное
	|	КОНЕЦ,
	|	ДокументЗаказНаВнутреннееПотребление.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументЗаказНаВнутреннееПотребление.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ДокументЗаказНаВнутреннееПотребление.Ссылка КАК Предмет,
	|	&ВыполнитьЗаказНаВнутреннееПотребление КАК ТипСобытия,
	|	ДокументЗаказНаВнутреннееПотребление.Дата КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(ЗаказНаВнутреннееПотреблениеТовары.ДатаОтгрузки,ДЕНЬ) КАК ДатаСобытия,
	|	ЗаказыНаВнутреннееПотреблениеОстатки.ЗаказНаВнутреннееПотребление.Представление КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) < ЗаказНаВнутреннееПотреблениеТовары.ДатаОтгрузки
	|			ТОГДА &Предстоящее
	|		КОГДА НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) = ЗаказНаВнутреннееПотреблениеТовары.ДатаОтгрузки
	|			ТОГДА &Текущее
	|		ИНАЧЕ &Просроченное
	|	КОНЕЦ КАК Статус,
	|	NULL КАК Партнер,
	|	ДокументЗаказНаВнутреннееПотребление.Ответственный КАК Ответственный
	|ИЗ
	|	РегистрНакопления.ЗаказыНаВнутреннееПотребление.Остатки(
	|			,
	|			ЗаказНаВнутреннееПотребление.Товары.ДатаОтгрузки < &ДатаОкончания
	|				И ЗаказНаВнутреннееПотребление.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.КВыполнению) %ТекстУсловияОтбор%) КАК ЗаказыНаВнутреннееПотреблениеОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаВнутреннееПотребление.Товары КАК ЗаказНаВнутреннееПотреблениеТовары
	|		ПО ЗаказыНаВнутреннееПотреблениеОстатки.ЗаказНаВнутреннееПотребление = ЗаказНаВнутреннееПотреблениеТовары.Ссылка
	|			И ЗаказыНаВнутреннееПотреблениеОстатки.КодСтроки = ЗаказНаВнутреннееПотреблениеТовары.КодСтроки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаВнутреннееПотребление КАК ДокументЗаказНаВнутреннееПотребление
	|		ПО ЗаказыНаВнутреннееПотреблениеОстатки.ЗаказНаВнутреннееПотребление = ДокументЗаказНаВнутреннееПотребление.Ссылка
	|ГДЕ
	|	ЗаказыНаВнутреннееПотреблениеОстатки.КОформлениюОстаток > 0 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументЗаказНаВнутреннееПотребление.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ДокументЗаказНаВнутреннееПотребление.Ссылка КАК Предмет,
	|	&ЗакрытьЗаказНаВнутреннееПотребление КАК ТипСобытия,
	|	ДокументЗаказНаВнутреннееПотребление.Дата КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ) КАК ДатаСобытия,
	|	ДокументЗаказНаВнутреннееПотребление.Представление КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	&Текущее КАК Статус,
	|	NULL КАК Партнер,
	|	ДокументЗаказНаВнутреннееПотребление.Ответственный КАК Ответственный
	|ИЗ
	|	Документ.ЗаказНаВнутреннееПотребление КАК ДокументЗаказНаВнутреннееПотребление
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыНаВнутреннееПотребление.Остатки(, ЗаказНаВнутреннееПотребление.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.КВыполнению) %ТекстУсловияОтбор%) КАК ЗаказыНаВнутреннееПотреблениеОстатки
	|		ПО ЗаказыНаВнутреннееПотреблениеОстатки.ЗаказНаВнутреннееПотребление = ДокументЗаказНаВнутреннееПотребление.Ссылка
	|ГДЕ
	|	ЕСТЬNULL(ЗаказыНаВнутреннееПотреблениеОстатки.КОформлениюОстаток, 0) = 0 
	|	И ДокументЗаказНаВнутреннееПотребление.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыВнутреннихЗаказов.КВыполнению) 
	|	%ТекстУсловияОтборДокумент%";
	
	Запрос.УстановитьПараметр("ПодготовитьКОтгрузке",НСтр("ru='Подготовить к отгрузке';uk='Підготувати до відвантаження'"));
	Запрос.УстановитьПараметр("ВыполнитьЗаказНаВнутреннееПотребление",НСтр("ru='Выполнить заказ';uk='Виконати замовлення'"));
	Запрос.УстановитьПараметр("ЗакрытьЗаказНаВнутреннееПотребление",НСтр("ru='Закрыть заказ';uk='Закрити замовлення'"));
	
	ДобавитьЗапросПоЗадачам(ТекстЗапроса,"Документ.ЗаказНаВнутреннееПотребление",СтруктураФормированияОтчета);
	
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияОтбор ="
		|И ЗаказНаВнутреннееПотребление.Ответственный" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		ТекстУсловияОтборДокумент ="
		|И ДокументЗаказНаВнутреннееПотребление.Ответственный" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
	Иначе
		
		ТекстУсловияОтбор = "";
		ТекстУсловияОтборДокумент ="";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтбор%",ТекстУсловияОтбор);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтборДокумент%",ТекстУсловияОтборДокумент);
	ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса,СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий);
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Документ.ЗаказНаВнутреннееПотребление");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаДоверенностьПолучениеТоваров(Запрос,СтруктураФормированияОтчета)

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДоверенностьВыданная.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ДоверенностьВыданная.Ссылка КАК Предмет,
	|	&ПроконтролироватьСдачуДоверенности КАК ТипСобытия,
	|	ДоверенностьВыданная.Дата КАК ДатаОбъектаСобытия,
	|	ВЫБОР
	|		КОГДА ДоверенностьВыданная.ДатаОкончанияДействия = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(ДоверенностьВыданная.ДатаОкончанияДействия,ДЕНЬ)
	|	КОНЕЦ КАК ДатаСобытия,
	|	ДоверенностьВыданная.Представление КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА ДоверенностьВыданная.ДатаОкончанияДействия = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &Текущее
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) < ДоверенностьВыданная.ДатаОкончанияДействия
	|					ТОГДА &Предстоящее
	|				КОГДА НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) = ДоверенностьВыданная.ДатаОкончанияДействия
	|					ТОГДА &Текущее
	|				ИНАЧЕ &Просроченное
	|			КОНЕЦ
	|	КОНЕЦ КАК Статус,
	|	ДоверенностьВыданная.Партнер КАК Партнер,
	|	ДоверенностьВыданная.Ответственный КАК Ответственный
	|%ТекстПоместить%
	|ИЗ
	|	Документ.ДоверенностьВыданная КАК ДоверенностьВыданная
	|ГДЕ
	|	НЕ ДоверенностьВыданная.ПометкаУдаления
	|	И ДоверенностьВыданная.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДоверенностей.Выдана)
	|	И ВЫБОР
	|			КОГДА ДоверенностьВыданная.ДатаОкончанияДействия = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ДоверенностьВыданная.ДатаОкончанияДействия < &ДатаОкончания
	|		КОНЕЦ 
	|	%ТекстУсловияОтбор%";
	
	Запрос.УстановитьПараметр("ПроконтролироватьСдачуДоверенности",НСтр("ru='Проконтролировать сдачу доверенности';uk='Проконтролювати складання довіреності'"));
	
	ДобавитьЗапросПоЗадачам(ТекстЗапроса,"Документ.ДоверенностьВыданная",СтруктураФормированияОтчета);
	
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияОтбор ="
		|И ДоверенностьВыданная.Ответственный" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
	Иначе
		
		ТекстУсловияОтбор = "";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтбор%",ТекстУсловияОтбор);
	ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса,СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий);
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Документ.ДоверенностьВыданная");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаВозвратыПоставщику(Запрос,СтруктураФормированияОтчета)

	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВозвратТоваровПоставщику.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ВозвратТоваровПоставщику.Ссылка КАК Предмет,
	|	&ПроконтролироватьОтгрузкуПоВозвратуПоставщику КАК ТипСобытия,
	|	ВозвратТоваровПоставщику.Дата КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ) КАК ДатаСобытия,
	|	ВозвратТоваровПоставщику.Представление КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	&Текущее КАК Статус,
	|	ВозвратТоваровПоставщику.Менеджер КАК Ответственный,
	|	ВозвратТоваровПоставщику.Партнер КАК Партнер
	|%ТекстПоместить%
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО ВозвратТоваровПоставщику.Склад = Склады.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке.Остатки(, ДокументОтгрузки ССЫЛКА Документ.ВозвратТоваровПоставщику %ТекстУсловияОтборДокументОтгрузки%) КАК ТоварыКОтгрузкеОстатки
	|		ПО ТоварыКОтгрузкеОстатки.ДокументОтгрузки = ВозвратТоваровПоставщику.Ссылка
	|ГДЕ
	|	ВозвратТоваровПоставщику.Проведен
	|	И ВЫБОР
	|		КОГДА Склады.ИспользоватьОрдернуюСхемуПриОтгрузке
	|				И ВозвратТоваровПоставщику.Дата >= Склады.ДатаНачалаОрдернойСхемыПриОтгрузке
	|			ТОГДА ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток > 0
	|					ИЛИ ТоварыКОтгрузкеОстатки.СобираетсяОстаток > 0
	|					ИЛИ ТоварыКОтгрузкеОстатки.СобраноОстаток > 0
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	%ТекстУсловияОтбор%
	|";
	
	Запрос.УстановитьПараметр("ПроконтролироватьОтгрузкуПоВозвратуПоставщику",НСтр("ru='Проконтролировать отгрузку';uk='Проконтролювати відвантаження'"));
	
	ДобавитьЗапросПоЗадачам(ТекстЗапроса,"Документ.ВозвратТоваровПоставщику",СтруктураФормированияОтчета);
	
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияОтбор ="
		|И ВозвратТоваровПоставщику.Менеджер" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		ТекстУсловияОтборДокументОтгрузки ="
		|И ДокументОтгрузки.Менеджер" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
	Иначе
		
		ТекстУсловияОтбор = "";
		ТекстУсловияОтборДокументОтгрузки ="";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтбор%",ТекстУсловияОтбор);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтборДокументОтгрузки%",ТекстУсловияОтборДокументОтгрузки);
	ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса,СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий);
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Документ.ВозвратТоваровПоставщику");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаРеализацииТоваровУслуг(Запрос,СтруктураФормированияОтчета)

	ТекстЗапроса = " 
	|ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК СсылкаНаОбъектСобытия,
	|	РеализацияТоваровУслуг.Ссылка КАК Предмет,
	|	&ПроконтролироватьОтгрузкуПоРеализации КАК ТипСобытия,
	|	РеализацияТоваровУслуг.Дата КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ) КАК ДатаСобытия,
	|	РеализацияТоваровУслуг.Представление КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	&Текущее КАК Статус,
	|	РеализацияТоваровУслуг.Партнер,
	|	РеализацияТоваровУслуг.Менеджер КАК Ответственный
	|%ТекстПоместить%
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке.Остатки(
	|				,
	|				ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг
	|					И ДокументОтгрузки В
	|						(ВЫБРАТЬ
	|							РеализацииСоставСкладов.Ссылка
	|						ИЗ
	|							РеализацииСоставСкладов КАК РеализацииСоставСкладов
	|						ГДЕ
	|							РеализацииСоставСкладов.ЕстьОрдерныеСклады > 0)) КАК ТоварыКОтгрузкеОстатки
	|		ПО (ТоварыКОтгрузкеОстатки.ДокументОтгрузки = РеализацияТоваровУслуг.Ссылка)
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В
	|			(ВЫБРАТЬ
	|				РеализацииСоставСкладов.Ссылка
	|			ИЗ
	|				РеализацииСоставСкладов КАК РеализацииСоставСкладов
	|			ГДЕ
	|				(РеализацииСоставСкладов.ЕстьНеОрдерныеСклады > 0
	|						И РеализацииСоставСкладов.ЕстьОрдерныеСклады = 0
	|					ИЛИ РеализацииСоставСкладов.ЕстьОрдерныеСклады > 0
	|						И (ЕСТЬNULL(ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток, 0) > 0
	|							ИЛИ ЕСТЬNULL(ТоварыКОтгрузкеОстатки.СобираетсяОстаток, 0) > 0
	|							ИЛИ ЕСТЬNULL(ТоварыКОтгрузкеОстатки.СобраноОстаток, 0) > 0)))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РеализацияТоваровУслуг.Ссылка КАК СсылкаНаОбъектСобытия,
	|	РеализацияТоваровУслуг.Ссылка КАК Предмет,
	|	&ПолучитьОплатуПоРеализации КАК ТипСобытия,
	|	РеализацияТоваровУслуг.Дата КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(РеализацияТоваровУслуг.ДатаПлатежа,ДЕНЬ) КАК ДатаСобытия,
	|	РеализацияТоваровУслуг.Представление КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА РеализацияТоваровУслуг.ДатаПлатежа = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Текущее
	|		КОГДА РеализацияТоваровУслуг.ДатаПлатежа > НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Предстоящее
	|		ИНАЧЕ &Просроченное
	|	КОНЕЦ КАК Статус,
	|	РеализацияТоваровУслуг.Партнер,
	|	РеализацияТоваровУслуг.Менеджер КАК Ответственный
	|ИЗ
	|	ТаблицаОстатковКлиентовКОплате КАК РасчетыСКлиентами
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|	ПО РасчетыСКлиентами.ЗаказКлиента = РеализацияТоваровУслуг.Ссылка
	|ГДЕ
	|	РасчетыСКлиентами.КОплатеОстаток > 0
	|	И РасчетыСКлиентами.ЗаказКлиента ССЫЛКА Документ.РеализацияТоваровУслуг
	|	И НЕ РасчетыСКлиентами.ЗаказКлиента.РеализацияПоЗаказам
	|	И РасчетыСКлиентами.ДатаПлатежа < &ДатаОкончания
	|	И РасчетыСКлиентами.ЗаказКлиента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКлиенту)
	|	%ТекстУсловияОтбор%
	|";
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСтатусыРеализацийТоваровУслуг") Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка,
		|	РеализацияТоваровУслуг.Ссылка,
		|	&ПеревестиВСтатусОтгружено,
		|	РеализацияТоваровУслуг.Дата,
		|	КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ),
		|	РеализацияТоваровУслуг.Представление,
		|	NULL,
		|	NULL,
		|	&Текущее,
		|	РеализацияТоваровУслуг.Партнер,
		|	РеализацияТоваровУслуг.Менеджер
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке.Остатки(
		|				,
		|				ДокументОтгрузки ССЫЛКА Документ.РеализацияТоваровУслуг
		|					И ДокументОтгрузки В
		|						(ВЫБРАТЬ
		|							РеализацииСоставСкладов.Ссылка
		|						ИЗ
		|							РеализацииСоставСкладов КАК РеализацииСоставСкладов
		|						ГДЕ
		|							РеализацииСоставСкладов.ЕстьОрдерныеСклады > 0)) КАК ТоварыКОтгрузкеОстатки
		|		ПО (ТоварыКОтгрузкеОстатки.ДокументОтгрузки = РеализацияТоваровУслуг.Ссылка)
		|ГДЕ
		|	РеализацияТоваровУслуг.Ссылка В
		|			(ВЫБРАТЬ
		|				РеализацииСоставСкладов.Ссылка
		|			ИЗ
		|				РеализацииСоставСкладов КАК РеализацииСоставСкладов
		|			ГДЕ
		|				РеализацииСоставСкладов.ЕстьНеОрдерныеСклады = 0
		|				И РеализацииСоставСкладов.ЕстьОрдерныеСклады > 0
		|				И ЕСТЬNULL(ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток, 0) <= 0
		|				И ЕСТЬNULL(ТоварыКОтгрузкеОстатки.СобираетсяОстаток, 0) <= 0
		|				И ЕСТЬNULL(ТоварыКОтгрузкеОстатки.СобраноОстаток, 0) <= 0)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка КАК СсылкаНаОбъектСобытия,
		|	РеализацияТоваровУслуг.Ссылка КАК Предмет,
		|	&ПеревестиВСтатусОтгружено КАК ТипСобытия,
		|	РеализацияТоваровУслуг.Дата КАК ДатаОбъектаСобытия,
		|	КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ) КАК ДатаСобытия,
		|	РеализацияТоваровУслуг.Представление КАК Описание,
		|	NULL КАК ДопРеквизитОписание1,
		|	NULL КАК ДопРеквизитОписание2,
		|	&Текущее КАК Статус,
		|	РеализацияТоваровУслуг.Партнер,
		|	РеализацияТоваровУслуг.Менеджер КАК Ответственный
		|ИЗ
		|
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентами.Остатки(
		|			,
		|			ЗаказКлиента ССЫЛКА Документ.РеализацияТоваровУслуг
		|				И ЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.КПредоплате) %ТекстУсловияОтборЗаказ%) КАК РасчетыСКлиентами
		|		ПО РеализацияТоваровУслуг.Ссылка = РасчетыСКлиентами.ЗаказКлиента
		|ГДЕ
		|	РеализацияТоваровУслуг.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.КПредоплате) 
		|	И РеализацияТоваровУслуг.СуммаВзаиморасчетов - РеализацияТоваровУслуг.СуммаПредоплаты >= ЕСТЬNULL(РасчетыСКлиентами.КОплатеОстаток, 0)";
		
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|	%ТекстУсловияОтбор%";
	
	СтруктураФормированияОтчета.ЕстьОбращенияКРегистрамРасчетыПоДокументамКлиенты = Истина;
	ДобавитьЗапросПоЗадачам(ТекстЗапроса,"Документ.РеализацияТоваровУслуг",СтруктураФормированияОтчета);
	
	ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса,СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий);
	
	ТекстЗапросПоСкладамРеализациям = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслугТовары.Ссылка,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(Склады.ИспользоватьОрдернуюСхемуПриОтгрузке, ЛОЖЬ)
	|				И РеализацияТоваровУслуг.Дата >= ЕСТЬNULL(Склады.ДатаНачалаОрдернойСхемыПриОтгрузке, ДатаВремя(1,1,1))
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЕстьОрдерныеСклады,
	|	СУММА(ВЫБОР
	|			КОГДА ЕСТЬNULL(Склады.ИспользоватьОрдернуюСхемуПриОтгрузке, ЛОЖЬ) = ЛОЖЬ
	|				ИЛИ РеализацияТоваровУслуг.Дата < ЕСТЬNULL(Склады.ДатаНачалаОрдернойСхемыПриОтгрузке, ДатаВремя(1,1,1))
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ЕстьНеОрдерныеСклады
	|ПОМЕСТИТЬ РеализацииСоставСкладов
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|		ПО РеализацияТоваровУслугТовары.Склад = Склады.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО РеализацияТоваровУслугТовары.Ссылка = РеализацияТоваровУслуг.Ссылка
	|ГДЕ
	|	РеализацияТоваровУслуг.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.Отгружено) 
	|	%ТекстУсловияОтбор%
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслугТовары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияОтбор ="
		|И РеализацияТоваровУслуг.Менеджер" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		ТекстУсловияОтборЗаказ ="
		|И ЗаказКлиента.Менеджер" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
	Иначе
		
		ТекстУсловияОтборЗаказ ="";
		ТекстУсловияОтбор      ="";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтбор%",ТекстУсловияОтбор);
	ТекстЗапросПоСкладамРеализациям = СтрЗаменить(ТекстЗапросПоСкладамРеализациям,"%ТекстУсловияОтбор%",ТекстУсловияОтбор);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтборЗаказ%",ТекстУсловияОтборЗаказ);
	
	СтруктураФормированияОтчета.ТекстЗапросыВременныеТаблицы = СтруктураФормированияОтчета.ТекстЗапросыВременныеТаблицы +ТекстЗапросПоСкладамРеализациям;
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Документ.РеализацияТоваровУслуг");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаЗаявкиНаВозврат(Запрос,СтруктураФормированияОтчета)

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗаявкаНаВозвратТоваровОтКлиента.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Ссылка КАК Предмет,
	|	&СогласованиеЗаявкиНаВозврат КАК ТипСобытия,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Дата КАК ДатаОбъектаСобытия,
	|	ВЫБОР
	|		КОГДА ЗаявкаНаВозвратТоваровОтКлиента.ДатаСогласования = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(ЗаявкаНаВозвратТоваровОтКлиента.ДатаСогласования,ДЕНЬ)
	|	КОНЕЦ КАК ДатаСобытия,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Представление КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА ЗаявкаНаВозвратТоваровОтКлиента.ДатаСогласования = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &Текущее
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЗаявкаНаВозвратТоваровОтКлиента.ДатаСогласования > НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|					ТОГДА &Предстоящее
	|				КОГДА ЗаявкаНаВозвратТоваровОтКлиента.ДатаСогласования = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|					ТОГДА &Текущее
	|				ИНАЧЕ &Просроченное
	|			КОНЕЦ
	|	КОНЕЦ КАК Статус,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Партнер КАК Партнер,
	|	ЗаявкаНаВозвратТоваровОтКлиента.Менеджер КАК Ответственный
	|%ТекстПоместить%
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозвратТоваровОтКлиента
	|ГДЕ
	|	ЗаявкаНаВозвратТоваровОтКлиента.Проведен
	|	И ЗаявкаНаВозвратТоваровОтКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.НеСогласована)
	|	И ВЫБОР
	|			КОГДА ЗаявкаНаВозвратТоваровОтКлиента.ДатаСогласования = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЗаявкаНаВозвратТоваровОтКлиента.ДатаСогласования < &ДатаОкончания
	|		КОНЕЦ %ТекстУсловияОтбор%
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Ссылка КАК Предмет,
	|	&ОформлениеЗаявкиНаВозврат КАК ТипСобытия,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Дата КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(ЗаявкаНаВозвратТоваровОтКлиентаВозвращаемыеТовары.ДатаПоступления, ДЕНЬ) КАК ДатаСобытия,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Представление КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА ЗаявкаНаВозвратТоваровОтКлиентаВозвращаемыеТовары.ДатаПоступления > НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Предстоящее
	|		КОГДА ДокументЗаявкаНаВозвратТоваровОтКлиента.ДатаСогласования = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Текущее
	|		ИНАЧЕ &Просроченное
	|	КОНЕЦ КАК Статус,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Партнер КАК Партнер,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Менеджер КАК Ответственный
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента.ВозвращаемыеТовары КАК ЗаявкаНаВозвратТоваровОтКлиентаВозвращаемыеТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ДокументЗаявкаНаВозвратТоваровОтКлиента
	|		ПО ЗаявкаНаВозвратТоваровОтКлиентаВозвращаемыеТовары.Ссылка = ДокументЗаявкаНаВозвратТоваровОтКлиента.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаявкиНаВозвратТоваровОтКлиентов.Остатки(
	|				,
	|				ЗаявкаНаВозвратТоваровОтКлиента.ВозвращаемыеТовары.ДатаПоступления < &ДатаОкончания
	|						И ЗаявкаНаВозвратТоваровОтКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.Квозврату)
	|					ИЛИ ЗаявкаНаВозвратТоваровОтКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.Кобеспечению)
	|					ИЛИ ЗаявкаНаВозвратТоваровОтКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОтгрузке) %ТекстУсловияОтбор%) КАК ЗаявкиНаВозвратТоваровОтКлиентовОстатки
	|		ПО ЗаявкаНаВозвратТоваровОтКлиентаВозвращаемыеТовары.Ссылка = ЗаявкиНаВозвратТоваровОтКлиентовОстатки.ЗаявкаНаВозвратТоваровОтКлиента
	|			И ЗаявкаНаВозвратТоваровОтКлиентаВозвращаемыеТовары.КодСтроки = ЗаявкиНаВозвратТоваровОтКлиентовОстатки.КодСтроки
	|ГДЕ
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Проведен
	|	И (ДокументЗаявкаНаВозвратТоваровОтКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.Квозврату)
	|			ИЛИ ДокументЗаявкаНаВозвратТоваровОтКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.Кобеспечению)
	|			ИЛИ ДокументЗаявкаНаВозвратТоваровОтКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОтгрузке))
	|	И ЗаявкиНаВозвратТоваровОтКлиентовОстатки.КОформлениюОстаток > 0 %ТекстУсловияОтборДокумент%
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.Ссылка,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Ссылка КАК Предмет,
	|	&ОжиданиеОплатыДоОбеспеченияЗаявкаНаВозврат,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Дата,
	|	КОНЕЦПЕРИОДА(ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.ДатаПлатежа,ДЕНЬ),
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Представление,
	|	NULL КАК Поле1,
	|	NULL КАК Поле2,
	|	ВЫБОР
	|		КОГДА ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.ДатаПлатежа < НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Просроченное
	|		КОГДА ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.ДатаПлатежа = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Текущее
	|		ИНАЧЕ &Предстоящее
	|	КОНЕЦ КАК Поле3,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Партнер КАК Партнер,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Менеджер
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента.ЭтапыГрафикаОплаты КАК ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ДокументЗаявкаНаВозвратТоваровОтКлиента
	|		ПО ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.Ссылка = ДокументЗаявкаНаВозвратТоваровОтКлиента.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатковКлиентовКОплате КАК РасчетыСКлиентамиОстатки
	|		ПО ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.Ссылка = РасчетыСКлиентамиОстатки.ЗаказКлиента
	|			И ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.ДатаПлатежа = РасчетыСКлиентамиОстатки.ДатаПлатежа
	|			И РасчетыСКлиентамиОстатки.ДатаПлатежа < &ДатаОкончания
	|			И РасчетыСКлиентамиОстатки.ЗаказКлиента ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента 
	|ГДЕ
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Проведен
	|	И (ДокументЗаявкаНаВозвратТоваровОтКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОбеспечению)
	|			ИЛИ ДокументЗаявкаНаВозвратТоваровОтКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КВозврату))
	|	И ДокументЗаявкаНаВозвратТоваровОтКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)
	|	И ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.ВариантОплаты = ЗНАЧЕНИЕ(Перечисление.ВариантыОплатыКлиентом.АвансДоОбеспечения)
	|	И ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.ДатаПлатежа < &ДатаОкончания %ТекстУсловияОтборДокумент%
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.Ссылка,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Ссылка,
	|	ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.ДатаПлатежа,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Дата,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Представление,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Партнер,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Менеджер
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.СуммаПлатежа) > 0 И
	|	ЕСТЬNULL(СУММА(РасчетыСКлиентамиОстатки.КОплатеОстаток), 0) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Ссылка КАК Предмет,
	|	&ТребуетОбеспечения КАК ТипСобытия,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Дата КАК ДатаОбъектаСобытия,
	|	ВЫБОР
	|		КОГДА ДокументЗаявкаНаВозвратТоваровОтКлиента.ДатаОтгрузки <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА КОНЕЦПЕРИОДА(ДокументЗаявкаНаВозвратТоваровОтКлиента.ДатаОтгрузки,ДЕНЬ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(&ТекущаяДата,ДЕНЬ)
	|	КОНЕЦ КАК ДатаСобытия,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Представление КАК Описание,
	|	NULL КАК Поле1,
	|	NULL КАК Поле2,
	|	ВЫБОР
	|		КОГДА ЗаявкаНаВозвратТовары.ДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &Текущее
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЗаявкаНаВозвратТовары.ДатаОтгрузки = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|					ТОГДА &Текущее
	|				КОГДА ЗаявкаНаВозвратТовары.ДатаОтгрузки > НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|					ТОГДА &Предстоящее
	|				ИНАЧЕ &Просроченное
	|			КОНЕЦ
	|	КОНЕЦ КАК Статус,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Партнер КАК Партнер,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Менеджер КАК Ответственный
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ДокументЗаявкаНаВозвратТоваровОтКлиента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВозвратТоваровОтКлиента.ЗаменяющиеТовары КАК ЗаявкаНаВозвратТовары
	|		ПО ДокументЗаявкаНаВозвратТоваровОтКлиента.Ссылка = ЗаявкаНаВозвратТовары.Ссылка
	|ГДЕ
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Проведен
	|	И (ДокументЗаявкаНаВозвратТоваровОтКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОтгрузке)
	|		ИЛИ ДокументЗаявкаНаВозвратТоваровОтКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОбеспечению))
	|	И ЗаявкаНаВозвратТовары.ВариантОбеспечения В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Требуется), ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется))
	|	И НЕ ЗаявкаНаВозвратТовары.Отменено
	|	И ВЫБОР
	|		КОГДА ДокументЗаявкаНаВозвратТоваровОтКлиента.ДатаОтгрузки <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДокументЗаявкаНаВозвратТоваровОтКлиента.ДатаОтгрузки < &ДатаОкончания
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ %ТекстУсловияОтборДокумент%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Ссылка КАК Предмет,
	|	&ОжиданиеПредоплатыДоОтгрузкиЗаявкаНаВозврат КАК ТипСобытия,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Дата КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.ДатаПлатежа,ДЕНЬ) КАК ДатаСобытия,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Представление КАК Описание,
	|	NULL КАК Поле1,
	|	NULL КАК Поле2,
	|	ВЫБОР
	|		КОГДА ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.ДатаПлатежа < НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Просроченное
	|		КОГДА ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.ДатаПлатежа = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Текущее
	|		ИНАЧЕ &Предстоящее
	|	КОНЕЦ КАК Статус,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Партнер КАК Партнер,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Менеджер КАК Ответственный
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента.ЭтапыГрафикаОплаты КАК ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ДокументЗаявкаНаВозвратТоваровОтКлиента
	|		ПО ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.Ссылка = ДокументЗаявкаНаВозвратТоваровОтКлиента.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатковКлиентовКОплате КАК РасчетыСКлиентамиОстатки
	|		ПО ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.Ссылка = РасчетыСКлиентамиОстатки.ЗаказКлиента
	|			И ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.ДатаПлатежа = РасчетыСКлиентамиОстатки.ДатаПлатежа
	|			И РасчетыСКлиентамиОстатки.ДатаПлатежа < &ДатаОкончания
	|			И РасчетыСКлиентамиОстатки.ЗаказКлиента ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента 
	|ГДЕ
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Проведен
	|	И (ДокументЗаявкаНаВозвратТоваровОтКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КВозврату)  ИЛИ
	|		ДокументЗаявкаНаВозвратТоваровОтКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОбеспечению))
	|	И ДокументЗаявкаНаВозвратТоваровОтКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)
	|	И ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.ВариантОплаты = ЗНАЧЕНИЕ(Перечисление.ВариантыОплатыКлиентом.ПредоплатаДоОтгрузки)
	|	И ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.ДатаПлатежа < &ДатаОкончания %ТекстУсловияОтборДокумент%
	|	
	|СГРУППИРОВАТЬ ПО
	|	ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.Ссылка,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Ссылка,
	|	ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.ДатаПлатежа,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Дата,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Представление,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Партнер,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Менеджер
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.СуммаПлатежа) > 0 И
	|	ЕСТЬNULL(СУММА(РасчетыСКлиентамиОстатки.КОплатеОстаток), 0) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Ссылка КАК Предмет,
	|	&ПодготовкаКОтгрузкеЗаявкаНаВозврат КАК ТипСобытия,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Дата КАК ДатаОбъектаСобытия,
	|	ВЫБОР
	|		КОГДА ДокументЗаявкаНаВозвратТоваровОтКлиента.ДатаОтгрузки <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА КОНЕЦПЕРИОДА(ДокументЗаявкаНаВозвратТоваровОтКлиента.ДатаОтгрузки,ДЕНЬ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(&ТекущаяДата,ДЕНЬ)
	|	КОНЕЦ КАК ДатаСобытия,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Представление КАК Описание,
	|	NULL КАК Поле1,
	|	NULL КАК Поле2,
	|	ВЫБОР
	|		КОГДА ЗаявкаНаВозвратТовары.ДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &Текущее
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЗаявкаНаВозвратТовары.ДатаОтгрузки = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|					ТОГДА &Текущее
	|				КОГДА ЗаявкаНаВозвратТовары.ДатаОтгрузки > НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|					ТОГДА &Предстоящее
	|				ИНАЧЕ &Просроченное
	|			КОНЕЦ
	|	КОНЕЦ КАК Статус,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Партнер КАК Партнер,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Менеджер КАК Ответственный
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ДокументЗаявкаНаВозвратТоваровОтКлиента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВозвратТоваровОтКлиента.ЗаменяющиеТовары КАК ЗаявкаНаВозвратТовары
	|		ПО ДокументЗаявкаНаВозвратТоваровОтКлиента.Ссылка = ЗаявкаНаВозвратТовары.Ссылка
	|ГДЕ
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Проведен
	|	И (ДокументЗаявкаНаВозвратТоваровОтКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОтгрузке)
	|		ИЛИ ДокументЗаявкаНаВозвратТоваровОтКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОбеспечению))
	|	И НЕ ЗаявкаНаВозвратТовары.ВариантОбеспечения В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить), ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|	И НЕ ЗаявкаНаВозвратТовары.Отменено
	|	И ВЫБОР
	|		КОГДА ДокументЗаявкаНаВозвратТоваровОтКлиента.ДатаОтгрузки <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДокументЗаявкаНаВозвратТоваровОтКлиента.ДатаОтгрузки < &ДатаОкончания
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ %ТекстУсловияОтборДокумент%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаявкаНаВозвратТоваровОтКлиентаТовары.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ЗаявкаНаВозвратТоваровОтКлиентаТовары.Ссылка КАК Предмет,
	|	&ОтгрузкаЗаявкаНаВозврат КАК ТипСобытия,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Дата КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(ЗаявкаНаВозвратТоваровОтКлиентаТовары.ДатаОтгрузки,ДЕНЬ) КАК ДатаСобытия,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Представление КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА ЗаявкаНаВозвратТоваровОтКлиентаТовары.ДатаОтгрузки > НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Предстоящее
	|		КОГДА ЗаявкаНаВозвратТоваровОтКлиентаТовары.ДатаОтгрузки = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Текущее
	|		ИНАЧЕ &Просроченное
	|	КОНЕЦ КАК Статус,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Партнер КАК Партнер,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Менеджер КАК Ответственный
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ДокументЗаявкаНаВозвратТоваровОтКлиента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВозвратТоваровОтКлиента.ЗаменяющиеТовары КАК ЗаявкаНаВозвратТоваровОтКлиентаТовары
	|			ПО ДокументЗаявкаНаВозвратТоваровОтКлиента.Ссылка = ЗаявкаНаВозвратТоваровОтКлиентаТовары.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыКлиентов.Остатки(
	|			,
	|			ЗаказКлиента ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
	|				И ЗаказКлиента.ЗаменяющиеТовары.ДатаОтгрузки < &ДатаОкончания
	|				И (ЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОтгрузке)
	|					ИЛИ ЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОбеспечению)) %ТекстУсловияЗаказ%) КАК ЗаказыКлиентовОстатки
	|	ПО
	|		ДокументЗаявкаНаВозвратТоваровОтКлиента.Ссылка = ЗаказыКлиентовОстатки.ЗаказКлиента
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке.Остатки(
	|		,
	|		ДокументОтгрузки ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
	|			И ВЫРАЗИТЬ(ДокументОтгрузки КАК Документ.ЗаявкаНаВозвратТоваровОтКлиента).ЗаменяющиеТовары.ДатаОтгрузки < &ДатаОкончания
	|			И (ДокументОтгрузки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОтгрузке)
	|			ИЛИ ДокументОтгрузки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОбеспечению)) %ТекстУсловияДокументОтгрузки%) КАК ТоварыКОтгрузкеОстатки
	|	ПО
	|		ДокументЗаявкаНаВозвратТоваровОтКлиента.Ссылка = ТоварыКОтгрузкеОстатки.ДокументОтгрузки
	|ГДЕ
	|	ЕСТЬNULL(ЗаказыКлиентовОстатки.КОформлениюОстаток,0) <> ЕСТЬNULL(ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток, 0) %ТекстУсловияОтборДокумент%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Ссылка КАК Предмет,
	|	&ОжиданиеОплатыПослеОтгрузкиЗаявкаНаВозврат КАК ТипСобытия,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Дата КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.ДатаПлатежа,ДЕНЬ) КАК ДатаСобытия,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Представление КАК Описание,
	|	NULL КАК Поле1,
	|	NULL КАК Поле2,
	|	ВЫБОР
	|		КОГДА ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.ДатаПлатежа < НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Просроченное
	|		КОГДА ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.ДатаПлатежа = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Текущее
	|		ИНАЧЕ &Предстоящее
	|	КОНЕЦ КАК Статус,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Партнер КАК Партнер,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Менеджер КАК Ответственный
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента.ЭтапыГрафикаОплаты КАК ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ДокументЗаявкаНаВозвратТоваровОтКлиента
	|		ПО ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.Ссылка = ДокументЗаявкаНаВозвратТоваровОтКлиента.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатковКлиентовКОплате КАК РасчетыСКлиентамиОстатки
	|		ПО ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.Ссылка = РасчетыСКлиентамиОстатки.ЗаказКлиента
	|			И ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.ДатаПлатежа = РасчетыСКлиентамиОстатки.ДатаПлатежа
	|			И РасчетыСКлиентамиОстатки.ДатаПлатежа < &ДатаОкончания
	|			И РасчетыСКлиентамиОстатки.ЗаказКлиента ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента 
	|ГДЕ
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Проведен
	|	И (ДокументЗаявкаНаВозвратТоваровОтКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОтгрузке)
	|		ИЛИ ДокументЗаявкаНаВозвратТоваровОтКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОбеспечению))
	|	И ДокументЗаявкаНаВозвратТоваровОтКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)
	|	И ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.ВариантОплаты = ЗНАЧЕНИЕ(Перечисление.ВариантыОплатыКлиентом.КредитПослеОтгрузки)
	|	И ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.ДатаПлатежа < &ДатаОкончания %ТекстУсловияОтборДокумент%
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.Ссылка,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Ссылка,
	|	ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.ДатаПлатежа,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Дата,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Представление,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Партнер,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Менеджер
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЗаявкаНаВозвратТоваровОтКлиентаЭтапыГрафикаОплаты.СуммаПлатежа) > 0 И
	|	ЕСТЬNULL(СУММА(РасчетыСКлиентамиОстатки.КОплатеОстаток), 0) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Ссылка КАК Предмет,
	|	&ОтметкаВыполненияЗаявкиНаВозврат КАК ТипСобытия,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Дата КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(&ТекущаяДата,ДЕНЬ) КАК ДатаСобытия,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Представление КАК Описание,
	|	NULL,
	|	NULL,
	|	&Текущее КАК Статус,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Партнер КАК Партнер,
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Менеджер КАК Ответственный
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ДокументЗаявкаНаВозвратТоваровОтКлиента
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатковКлиентовКОплате КАК РасчетыСКлиентамиОстатки
	|	ПО РасчетыСКлиентамиОстатки.ЗаказКлиента ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
	|		И ДокументЗаявкаНаВозвратТоваровОтКлиента.Ссылка = РасчетыСКлиентамиОстатки.ЗаказКлиента
	|		И РасчетыСКлиентамиОстатки.ЗаказКлиента.Статус В (
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОтгрузке),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОбеспечению)
	|		) 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатковКлиентовКОтгрузке КАК РасчетыСКлиентамиОстаткиКОтгрузке
	|	ПО РасчетыСКлиентамиОстаткиКОтгрузке.ЗаказКлиента ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
	|		И ДокументЗаявкаНаВозвратТоваровОтКлиента.Ссылка = РасчетыСКлиентамиОстаткиКОтгрузке.ЗаказКлиента
	|		И РасчетыСКлиентамиОстаткиКОтгрузке.ЗаказКлиента.Статус В (
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОтгрузке),
	|			ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОбеспечению)
	|		) 
	|ГДЕ
	|	ДокументЗаявкаНаВозвратТоваровОтКлиента.Проведен
	|	И &КонтролироватьЗакрытиеЗаказа
	|	И (ДокументЗаявкаНаВозвратТоваровОтКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОтгрузке)
	|		ИЛИ ДокументЗаявкаНаВозвратТоваровОтКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.КОбеспечению))
	|	И ДокументЗаявкаНаВозвратТоваровОтКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)
	|	И ЕСТЬNULL(РасчетыСКлиентамиОстаткиКОтгрузке.КОтгрузкеОстаток, 0) = 0
	|	И ЕСТЬNULL(РасчетыСКлиентамиОстатки.КОплатеОстаток, 0) = 0 %ТекстУсловияОтборДокумент%";
	
	ДобавитьЗапросПоЗадачам(ТекстЗапроса,"Документ.ЗаявкаНаВозвратТоваровОтКлиента",СтруктураФормированияОтчета);
	СтруктураФормированияОтчета.ЕстьОбращенияКРегистрамРасчетыПоДокументамКлиенты = Истина;
	
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияОтбор ="
		|И ЗаявкаНаВозвратТоваровОтКлиента.Менеджер" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		ТекстУсловияЗаказ ="
		|И ЗаказКлиента.Менеджер" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		ТекстУсловияДокументОтгрузки ="
		|И ДокументОтгрузки.Менеджер" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		ТекстУсловияОтборДокумент ="
		|И ДокументЗаявкаНаВозвратТоваровОтКлиента.Менеджер" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
	Иначе
		
		ТекстУсловияОтбор = "";
		ТекстУсловияЗаказ ="";
		ТекстУсловияОтборДокумент ="";
		
	КонецЕсли;;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтбор%",ТекстУсловияОтбор);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияЗаказ%",ТекстУсловияЗаказ);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияДокументОтгрузки%",ТекстУсловияДокументОтгрузки);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтборДокумент%",ТекстУсловияОтборДокумент);
	ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса,СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий);
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Документ.ЗаявкаНаВозвратТоваровОтКлиента");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаЗаказыПоставщикам(Запрос,СтруктураФормированияОтчета)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗаказПоставщику.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ЗаказПоставщику.Ссылка КАК Предмет,
	|	&СогласованиеЗаказаПоставщика КАК ТипСобытия,
	|	ЗаказПоставщику.Дата КАК ДатаОбъектаСобытия,
	|	ВЫБОР
	|		КОГДА ЗаказПоставщику.ДатаСогласования = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(ЗаказПоставщику.ДатаСогласования,ДЕНЬ)
	|	КОНЕЦ КАК ДатаСобытия,
	|	ЗаказПоставщику.Представление КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА ЗаказПоставщику.ДатаСогласования = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &Текущее
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) < ЗаказПоставщику.ДатаСогласования
	|					ТОГДА &Предстоящее
	|				КОГДА НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) = ЗаказПоставщику.ДатаСогласования
	|					ТОГДА &Текущее
	|				ИНАЧЕ &Просроченное
	|			КОНЕЦ
	|	КОНЕЦ КАК Статус,
	|	ЗаказПоставщику.Партнер КАК Партнер,
	|	ЗаказПоставщику.Менеджер КАК Ответственный
	|%ТекстПоместить%
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|ГДЕ
	|	ЗаказПоставщику.Проведен
	|	И ЗаказПоставщику.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.НеСогласован)
	|	И ВЫБОР
	|			КОГДА ЗаказПоставщику.ДатаСогласования = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЗаказПоставщику.ДатаСогласования < &ДатаОкончания
	|		КОНЕЦ %ТекстУсловияОтбор%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка,
	|	ДокументЗаказПоставщику.Ссылка КАК Предмет,
	|	&ВнестиАвансДоПодтверждения,
	|	ДокументЗаказПоставщику.Дата,
	|	КОНЕЦПЕРИОДА(ЗаказПоставщикуЭтапыГрафикаОплаты.ДатаПлатежа,ДЕНЬ),
	|	ДокументЗаказПоставщику.Представление,
	|	NULL,
	|	NULL,
	|	ВЫБОР
	|		КОГДА ЗаказПоставщикуЭтапыГрафикаОплаты.ДатаПлатежа < НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Просроченное
	|		КОГДА ЗаказПоставщикуЭтапыГрафикаОплаты.ДатаПлатежа = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Текущее
	|		ИНАЧЕ &Предстоящее
	|	КОНЕЦ,
	|	ДокументЗаказПоставщику.Партнер КАК Партнер,
	|	ДокументЗаказПоставщику.Менеджер
	|ИЗ
	|	Документ.ЗаказПоставщику.ЭтапыГрафикаОплаты КАК ЗаказПоставщикуЭтапыГрафикаОплаты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику КАК ДокументЗаказПоставщику
	|		ПО ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка = ДокументЗаказПоставщику.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатковПоставщиковКОплате КАК ТаблицаОстатковПоставщиков
	|		ПО ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка = ТаблицаОстатковПоставщиков.ЗаказПоставщику
	|			И ЗаказПоставщикуЭтапыГрафикаОплаты.ДатаПлатежа = ТаблицаОстатковПоставщиков.ДатаПлатежа
	|			И ТаблицаОстатковПоставщиков.ДатаПлатежа < &ДатаОкончания 
	|ГДЕ
	|	ДокументЗаказПоставщику.Проведен
	|	И ДокументЗаказПоставщику.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.Согласован)
	|	И ДокументЗаказПоставщику.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)
	|	И ЗаказПоставщикуЭтапыГрафикаОплаты.ВариантОплаты = ЗНАЧЕНИЕ(Перечисление.ВариантыОплатыПоставщику.АвансДоПодтверждения)
	|	И ЗаказПоставщикуЭтапыГрафикаОплаты.ДатаПлатежа < &ДатаОкончания %ТекстУсловияОтборДокумент%
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка,
	|	ДокументЗаказПоставщику.Ссылка,
	|	ЗаказПоставщикуЭтапыГрафикаОплаты.ДатаПлатежа,
	|	ДокументЗаказПоставщику.Дата,
	|	ДокументЗаказПоставщику.Представление,
	|	ДокументЗаказПоставщику.Партнер,
	|	ДокументЗаказПоставщику.Менеджер
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЗаказПоставщикуЭтапыГрафикаОплаты.СуммаПлатежа) > 0 И
	|	ЕСТЬNULL(СУММА(ТаблицаОстатковПоставщиков.КОплатеОстаток), 0) < 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументЗаказПоставщику.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ДокументЗаказПоставщику.Ссылка КАК Предмет,
	|	&ПодтверждениеЗаказа КАК ТипСобытия,
	|	ДокументЗаказПоставщику.Дата КАК ДатаОбъектаСобытия,
	|	ВЫБОР
	|		КОГДА ДокументЗаказПоставщику.ДатаПервогоПоступления <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА КОНЕЦПЕРИОДА(ДокументЗаказПоставщику.ДатаПервогоПоступления,ДЕНЬ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(&ТекущаяДата,ДЕНЬ)
	|	КОНЕЦ КАК ДатаСобытия,
	|	ДокументЗаказПоставщику.Представление КАК Описание,
	|	NULL,
	|	NULL,
	|	ВЫБОР
	|		КОГДА ДокументЗаказПоставщику.ДатаПервогоПоступления = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &Текущее
	|		ИНАЧЕ ВЫБОР
	|			КОГДА ДокументЗаказПоставщику.ДатаПервогоПоступления = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|				ТОГДА &Текущее
	|			КОГДА ДокументЗаказПоставщику.ДатаПервогоПоступления > НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|				ТОГДА &Предстоящее
	|			ИНАЧЕ &Просроченное
	|		КОНЕЦ
	|	КОНЕЦ КАК Статус,
	|	ДокументЗаказПоставщику.Партнер КАК Партнер,
	|	ДокументЗаказПоставщику.Менеджер КАК Ответственный
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ДокументЗаказПоставщику
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатковПоставщиковКОплате КАК ТаблицаОстатковПоставщиков
	|	ПО ДокументЗаказПоставщику.Ссылка = ТаблицаОстатковПоставщиков.ЗаказПоставщику
	|		И ТаблицаОстатковПоставщиков.ЗаказПоставщику ССЫЛКА Документ.ЗаказПоставщику
	|		И ВЫБОР
	|			КОГДА ДокументЗаказПоставщику.ДатаПервогоПоступления <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДокументЗаказПоставщику.ДатаПервогоПоступления < &ДатаОкончания
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ 
	|ГДЕ
	|	ДокументЗаказПоставщику.Проведен
	|	И ДокументЗаказПоставщику.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.Согласован)
	|	И ДокументЗаказПоставщику.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)
	|	И ДокументЗаказПоставщику.СуммаАвансаДоПодтверждения > 0
	|	И ДокументЗаказПоставщику.СуммаДокумента + ЕСТЬNULL(ТаблицаОстатковПоставщиков.КОплатеОстаток, 0) >= ДокументЗаказПоставщику.СуммаАвансаДоПодтверждения
	|	И ВЫБОР
	|		КОГДА ДокументЗаказПоставщику.ДатаПервогоПоступления <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДокументЗаказПоставщику.ДатаПервогоПоступления < &ДатаОкончания
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ %ТекстУсловияОтборДокумент%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ДокументЗаказПоставщику.Ссылка КАК Предмет,
	|	&ВнесениеПредоплатыДоОтгрузки КАК ТипСобытия,
	|	ДокументЗаказПоставщику.Дата КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(ЗаказПоставщикуЭтапыГрафикаОплаты.ДатаПлатежа,ДЕНЬ) КАК ДатаСобытия,
	|	ДокументЗаказПоставщику.Представление КАК Описание,
	|	NULL,
	|	NULL,
	|	ВЫБОР
	|		КОГДА ЗаказПоставщикуЭтапыГрафикаОплаты.ДатаПлатежа < НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Просроченное
	|		КОГДА ЗаказПоставщикуЭтапыГрафикаОплаты.ДатаПлатежа = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Текущее
	|		ИНАЧЕ  &Предстоящее
	|	КОНЕЦ КАК Статус,
	|	ДокументЗаказПоставщику.Партнер КАК Партнер,
	|	ДокументЗаказПоставщику.Менеджер КАК Ответственный
	|ИЗ
	|	Документ.ЗаказПоставщику.ЭтапыГрафикаОплаты КАК ЗаказПоставщикуЭтапыГрафикаОплаты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику КАК ДокументЗаказПоставщику
	|		ПО ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка = ДокументЗаказПоставщику.Ссылка
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатковПоставщиковКОплате КАК ТаблицаОстатковПоставщиков
	|		ПО ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка = ТаблицаОстатковПоставщиков.ЗаказПоставщику
	|			И ЗаказПоставщикуЭтапыГрафикаОплаты.ДатаПлатежа = ТаблицаОстатковПоставщиков.ДатаПлатежа
	|			И ТаблицаОстатковПоставщиков.ДатаПлатежа < &ДатаОкончания 
	|ГДЕ
	|	ДокументЗаказПоставщику.Проведен
	|	И ( ДокументЗаказПоставщику.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.Согласован) 
	|		ИЛИ ДокументЗаказПоставщику.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.Подтвержден)
	|		ИЛИ ДокументЗаказПоставщику.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.КПоступлению)
	|		ИЛИ &НеИспользоватьСтатусыЗаказовПоставщикам)
	|	И ДокументЗаказПоставщику.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)
	|	И ЗаказПоставщикуЭтапыГрафикаОплаты.ВариантОплаты = ЗНАЧЕНИЕ(Перечисление.ВариантыОплатыПоставщику.ПредоплатаДоПоступления)
	|	И ЗаказПоставщикуЭтапыГрафикаОплаты.ДатаПлатежа < &ДатаОкончания %ТекстУсловияОтборДокумент%
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка,
	|	ДокументЗаказПоставщику.Ссылка,
	|	ЗаказПоставщикуЭтапыГрафикаОплаты.ДатаПлатежа,
	|	ДокументЗаказПоставщику.Дата,
	|	ДокументЗаказПоставщику.Представление,
	|	ДокументЗаказПоставщику.Партнер,
	|	ДокументЗаказПоставщику.Менеджер
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЗаказПоставщикуЭтапыГрафикаОплаты.СуммаПлатежа) > 0 И
	|	ЕСТЬNULL(СУММА(ТаблицаОстатковПоставщиков.КОплатеОстаток), 0) < 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументЗаказПоставщику.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ДокументЗаказПоставщику.Ссылка КАК Предмет,
	|	&ПодготовкаКПоступлению КАК ТипСобытия,
	|	ДокументЗаказПоставщику.Дата КАК ДатаОбъектаСобытия,
	|	ВЫБОР
	|		КОГДА ДокументЗаказПоставщику.ДатаПервогоПоступления <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА КОНЕЦПЕРИОДА(ДокументЗаказПоставщику.ДатаПервогоПоступления, ДЕНЬ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(&ТекущаяДата,ДЕНЬ)
	|	КОНЕЦ КАК ДатаСобытия,
	|	ДокументЗаказПоставщику.Представление КАК Описание,
	|	NULL,
	|	NULL,
	|	ВЫБОР
	|	КОГДА ДокументЗаказПоставщику.ДатаПервогоПоступления = ДАТАВРЕМЯ(1, 1, 1)
	|		ТОГДА &Текущее
	|	ИНАЧЕ ВЫБОР
	|			КОГДА ДокументЗаказПоставщику.ДатаПервогоПоступления = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|				ТОГДА &Текущее
	|			КОГДА ДокументЗаказПоставщику.ДатаПервогоПоступления > НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|				ТОГДА &Предстоящее
	|			ИНАЧЕ &Просроченное
	|		КОНЕЦ
	|	КОНЕЦ КАК Статус,
	|	ДокументЗаказПоставщику.Партнер КАК Партнер,
	|	ДокументЗаказПоставщику.Менеджер КАК Ответственный
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ДокументЗаказПоставщику
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатковПоставщиковКОплате КАК ТаблицаОстатковПоставщиков
	|	ПО ДокументЗаказПоставщику.Ссылка = ТаблицаОстатковПоставщиков.ЗаказПоставщику
	|		И ТаблицаОстатковПоставщиков.ЗаказПоставщику ССЫЛКА Документ.ЗаказПоставщику
	|		И ВЫБОР
	|			КОГДА ТаблицаОстатковПоставщиков.ЗаказПоставщику.ДатаПервогоПоступления <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ТаблицаОстатковПоставщиков.ЗаказПоставщику.ДатаПервогоПоступления < &ДатаОкончания
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ 
	|ГДЕ
	|	ДокументЗаказПоставщику.Проведен
	|	И ДокументЗаказПоставщику.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.Подтвержден)
	|	И ДокументЗаказПоставщику.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)
	|	И (ДокументЗаказПоставщику.СуммаАвансаДоПодтверждения + ДокументЗаказПоставщику.СуммаПредоплатыДоПоступления) > 0
	|	И ДокументЗаказПоставщику.СуммаДокумента + ЕСТЬNULL(ТаблицаОстатковПоставщиков.КОплатеОстаток, 0) >= (ДокументЗаказПоставщику.СуммаАвансаДоПодтверждения + ДокументЗаказПоставщику.СуммаПредоплатыДоПоступления)
	|	И ВЫБОР
	|		КОГДА ДокументЗаказПоставщику.ДатаПервогоПоступления <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДокументЗаказПоставщику.ДатаПервогоПоступления < &ДатаОкончания
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ %ТекстУсловияОтборДокумент%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаказПоставщикуТовары.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ЗаказПоставщикуТовары.Ссылка КАК Предмет,
	|	&ПолучениеЗаказа КАК ТипСобытия,
	|	ДокументЗаказПоставщику.Дата КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(ЗаказПоставщикуТовары.ДатаПоступления, ДЕНЬ) КАК ДатаСобытия,
	|	ДокументЗаказПоставщику.Представление КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА ЗаказПоставщикуТовары.ДатаПоступления > НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Предстоящее
	|		КОГДА ЗаказПоставщикуТовары.ДатаПоступления = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Текущее
	|	ИНАЧЕ &Просроченное
	|	КОНЕЦ КАК Статус,
	|	ДокументЗаказПоставщику.Партнер КАК Партнер,
	|	ДокументЗаказПоставщику.Менеджер КАК Ответственный
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(
	|		,
	|		ЗаказПоставщику ССЫЛКА Документ.ЗаказПоставщику
	|			И ЗаказПоставщику.Товары.ДатаПоступления < &ДатаОкончания
	|			И (ЗаказПоставщику.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.КПоступлению) ИЛИ &НеИспользоватьСтатусыЗаказовПоставщикам) %ТекстУсловияОтбор%) КАК ЗаказыПоставщикамОстатки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику КАК ДокументЗаказПоставщику
	|		ПО ЗаказыПоставщикамОстатки.ЗаказПоставщику = ДокументЗаказПоставщику.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
	|		ПО ЗаказыПоставщикамОстатки.КодСтроки = ЗаказПоставщикуТовары.КодСтроки
	|			И ЗаказыПоставщикамОстатки.ЗаказПоставщику = ЗаказПоставщикуТовары.Ссылка
	|ГДЕ
	|	ЗаказыПоставщикамОстатки.КОформлениюОстаток > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ДокументЗаказПоставщику.Ссылка КАК Предмет,
	|	&ОплатаПослеПоступления КАК ТипСобытия,
	|	ДокументЗаказПоставщику.Дата КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(ЗаказПоставщикуЭтапыГрафикаОплаты.ДатаПлатежа,ДЕНЬ) КАК ДатаСобытия,
	|	ДокументЗаказПоставщику.Представление КАК Описание,
	|	NULL,
	|	NULL,
	|	ВЫБОР
	|		КОГДА ЗаказПоставщикуЭтапыГрафикаОплаты.ДатаПлатежа < НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Просроченное
	|		КОГДА ЗаказПоставщикуЭтапыГрафикаОплаты.ДатаПлатежа = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Текущее
	|		ИНАЧЕ  &Предстоящее
	|	КОНЕЦ КАК Статус,
	|	ДокументЗаказПоставщику.Партнер КАК Партнер,
	|	ДокументЗаказПоставщику.Менеджер КАК Ответственный
	|ИЗ
	|	Документ.ЗаказПоставщику.ЭтапыГрафикаОплаты КАК ЗаказПоставщикуЭтапыГрафикаОплаты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказПоставщику КАК ДокументЗаказПоставщику
	|		ПО ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка = ДокументЗаказПоставщику.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатковПоставщиковКОплате КАК ТаблицаОстатковПоставщиков
	|		ПО ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка = ТаблицаОстатковПоставщиков.ЗаказПоставщику
	|			И ЗаказПоставщикуЭтапыГрафикаОплаты.ДатаПлатежа = ТаблицаОстатковПоставщиков.ДатаПлатежа
	|			И ТаблицаОстатковПоставщиков.ДатаПлатежа < &ДатаОкончания 
	|ГДЕ
	|	ДокументЗаказПоставщику.Проведен
	|	И (ДокументЗаказПоставщику.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.КПоступлению)
	|		ИЛИ &НеИспользоватьСтатусыЗаказовПоставщикам)
	|	И ДокументЗаказПоставщику.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)
	|	И ЗаказПоставщикуЭтапыГрафикаОплаты.ВариантОплаты = ЗНАЧЕНИЕ(Перечисление.ВариантыОплатыПоставщику.КредитПослеПоступления)
	|	И ЗаказПоставщикуЭтапыГрафикаОплаты.ДатаПлатежа < &ДатаОкончания %ТекстУсловияОтборДокумент%
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказПоставщикуЭтапыГрафикаОплаты.Ссылка,
	|	ДокументЗаказПоставщику.Ссылка,
	|	ЗаказПоставщикуЭтапыГрафикаОплаты.ДатаПлатежа,
	|	ДокументЗаказПоставщику.Дата,
	|	ДокументЗаказПоставщику.Представление,
	|	ДокументЗаказПоставщику.Партнер,
	|	ДокументЗаказПоставщику.Менеджер
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЗаказПоставщикуЭтапыГрафикаОплаты.СуммаПлатежа) > 0 И
	|	ЕСТЬNULL(СУММА(ТаблицаОстатковПоставщиков.КОплатеОстаток), 0) < 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументЗаказПоставщику.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ДокументЗаказПоставщику.Ссылка КАК Предмет,
	|	&ЗакрытиеЗаказаПоставщику КАК ТипСобытия,
	|	ДокументЗаказПоставщику.Дата КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(&ТекущаяДата,ДЕНЬ) КАК ДатаСобытия,
	|	ДокументЗаказПоставщику.Представление КАК Описание,
	|	NULL,
	|	NULL,
	|	&Текущее КАК Статус,
	|	ДокументЗаказПоставщику.Партнер КАК Партнер,
	|	ДокументЗаказПоставщику.Менеджер КАК Ответственный
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ДокументЗаказПоставщику
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатковПоставщиковКОплате КАК ТаблицаОстатковПоставщиков
	|	ПО ДокументЗаказПоставщику.Ссылка = ТаблицаОстатковПоставщиков.ЗаказПоставщику
	|		И ТаблицаОстатковПоставщиков.ЗаказПоставщику ССЫЛКА Документ.ЗаказПоставщику
	|		И ТаблицаОстатковПоставщиков.ЗаказПоставщику.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.КПоступлению)
	|		%ТекстУсловияОтбор%
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатковПоставщиковКПоступлению КАК ТаблицаОстатковПоставщиковКПоступлению
	|	ПО ДокументЗаказПоставщику.Ссылка = ТаблицаОстатковПоставщиковКПоступлению.ЗаказПоставщику
	|		И ТаблицаОстатковПоставщиковКПоступлению.ЗаказПоставщику ССЫЛКА Документ.ЗаказПоставщику
	|		И ТаблицаОстатковПоставщиковКПоступлению.ЗаказПоставщику.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.КПоступлению)
	|ГДЕ
	|	ДокументЗаказПоставщику.Проведен
	|	И ДокументЗаказПоставщику.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовПоставщикам.КПоступлению)
	|	И ДокументЗаказПоставщику.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)
	|	И ДокументЗаказПоставщику.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию)
	|	И ЕСТЬNULL(ТаблицаОстатковПоставщиковКПоступлению.КПоступлениюОстаток, 0) = 0
	|	И ЕСТЬNULL(ТаблицаОстатковПоставщиков.КОплатеОстаток, 0) = 0 %ТекстУсловияОтборДокумент%";
	
	СтруктураФормированияОтчета.ЕстьОбращенияКРегистрамРасчетыПоДокументамПоставщики = Истина;
	
	ДобавитьЗапросПоЗадачам(ТекстЗапроса,"Документ.ЗаказПоставщику",СтруктураФормированияОтчета);
		
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияОтбор ="
		|И ЗаказПоставщику.Менеджер" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		ТекстУсловияОтборДокумент ="
		|И ДокументЗаказПоставщику.Менеджер" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
	Иначе
		
		ТекстУсловияОтбор = "";
		ТекстУсловияОтборДокумент ="";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтбор%",ТекстУсловияОтбор);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтборДокумент%",ТекстУсловияОтборДокумент);
	ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса,СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий);
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Документ.ЗаказПоставщику");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаЗаказыКлиентов(Запрос,СтруктураФормированияОтчета)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗаказКлиента.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ЗаказКлиента.Ссылка КАК Предмет,
	|	&СогласованиеЗаказаКлиента КАК ТипСобытия,
	|	ЗаказКлиента.Дата КАК ДатаОбъектаСобытия,
	|	ВЫБОР
	|		КОГДА ЗаказКлиента.ДатаСогласования = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(ЗаказКлиента.ДатаСогласования,ДЕНЬ)
	|	КОНЕЦ КАК ДатаСобытия,
	|	ЗаказКлиента.Представление КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА ЗаказКлиента.ДатаСогласования = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &Текущее
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) < ЗаказКлиента.ДатаСогласования
	|					ТОГДА &Предстоящее
	|				КОГДА НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) = ЗаказКлиента.ДатаСогласования
	|					ТОГДА &Текущее
	|				ИНАЧЕ &Просроченное
	|			КОНЕЦ
	|	КОНЕЦ КАК Статус,
	|	ЗаказКлиента.Партнер КАК Партнер,
	|	ЗаказКлиента.Менеджер КАК Ответственный
	|%ТекстПоместить%
	|ИЗ
	|	Документ.ЗаказКлиента КАК ЗаказКлиента
	|ГДЕ
	|	ЗаказКлиента.Проведен
	|	И ЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.НеСогласован)
	|	И ВЫБОР
	|			КОГДА ЗаказКлиента.ДатаСогласования = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЗаказКлиента.ДатаСогласования < &ДатаОкончания
	|		КОНЕЦ %ТекстУсловияОтбор%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаказКлиентаЭтапыГрафикаОплаты.Ссылка,
	|	ДокументЗаказКлиента.Ссылка КАК Предмет,
	|	&ОжиданиеОплатыДоОбеспечения,
	|	ДокументЗаказКлиента.Дата,
	|	КОНЕЦПЕРИОДА(ЗаказКлиентаЭтапыГрафикаОплаты.ДатаПлатежа,ДЕНЬ),
	|	ДокументЗаказКлиента.Представление,
	|	NULL,
	|	NULL,
	|	ВЫБОР
	|		КОГДА ЗаказКлиентаЭтапыГрафикаОплаты.ДатаПлатежа < НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Просроченное
	|		КОГДА ЗаказКлиентаЭтапыГрафикаОплаты.ДатаПлатежа = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Текущее
	|		ИНАЧЕ &Предстоящее
	|	КОНЕЦ,
	|	ДокументЗаказКлиента.Партнер КАК Партнер,
	|	ДокументЗаказКлиента.Менеджер
	|ИЗ
	|	Документ.ЗаказКлиента.ЭтапыГрафикаОплаты КАК ЗаказКлиентаЭтапыГрафикаОплаты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК ДокументЗаказКлиента
	|		ПО ЗаказКлиентаЭтапыГрафикаОплаты.Ссылка = ДокументЗаказКлиента.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатковКлиентовКОплате КАК ТаблицаОстатковКлиентов
	|		ПО ЗаказКлиентаЭтапыГрафикаОплаты.Ссылка = ТаблицаОстатковКлиентов.ЗаказКлиента
	|			И ЗаказКлиентаЭтапыГрафикаОплаты.ДатаПлатежа = ТаблицаОстатковКлиентов.ДатаПлатежа
	|			И ТаблицаОстатковКлиентов.ДатаПлатежа < &ДатаОкончания 
	|ГДЕ
	|	ДокументЗаказКлиента.Проведен
	|	И ДокументЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОбеспечению)
	|	И ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)
	|	И ЗаказКлиентаЭтапыГрафикаОплаты.ВариантОплаты = ЗНАЧЕНИЕ(Перечисление.ВариантыОплатыКлиентом.АвансДоОбеспечения)
	|	И ЗаказКлиентаЭтапыГрафикаОплаты.ДатаПлатежа < &ДатаОкончания %ТекстУсловияОтборДокумент%
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказКлиентаЭтапыГрафикаОплаты.Ссылка,
	|	ДокументЗаказКлиента.Ссылка,
	|	ЗаказКлиентаЭтапыГрафикаОплаты.ДатаПлатежа,
	|	ДокументЗаказКлиента.Дата,
	|	ДокументЗаказКлиента.Представление,
	|	ДокументЗаказКлиента.Партнер,
	|	ДокументЗаказКлиента.Менеджер
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЗаказКлиентаЭтапыГрафикаОплаты.СуммаПлатежа) > 0 И
	|	ЕСТЬNULL(СУММА(ТаблицаОстатковКлиентов.КОплатеОстаток), 0) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументЗаказКлиента.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ДокументЗаказКлиента.Ссылка КАК Предмет,
	|	&ТребуетОбеспечения КАК ТипСобытия,
	|	ДокументЗаказКлиента.Дата КАК ДатаОбъектаСобытия,
	|	ВЫБОР
	|		КОГДА ДокументЗаказКлиента.ДатаОтгрузки <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА КОНЕЦПЕРИОДА(ДокументЗаказКлиента.ДатаОтгрузки,ДЕНЬ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(&ТекущаяДата,ДЕНЬ)
	|	КОНЕЦ КАК ДатаСобытия,
	|	ДокументЗаказКлиента.Представление КАК Описание,
	|	NULL,
	|	NULL,
	|	ВЫБОР
	|	КОГДА ЗаказКлиентаТовары.ДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1)
	|		ТОГДА &Текущее
	|	ИНАЧЕ ВЫБОР
	|			КОГДА ЗаказКлиентаТовары.ДатаОтгрузки = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|				ТОГДА &Текущее
	|			КОГДА ЗаказКлиентаТовары.ДатаОтгрузки > НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|				ТОГДА &Предстоящее
	|			ИНАЧЕ &Просроченное
	|		КОНЕЦ
	|	КОНЕЦ КАК Статус,
	|	ДокументЗаказКлиента.Партнер КАК Партнер,
	|	ДокументЗаказКлиента.Менеджер КАК Ответственный
	|ИЗ
	|	Документ.ЗаказКлиента КАК ДокументЗаказКлиента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|		ПО ДокументЗаказКлиента.Ссылка = ЗаказКлиентаТовары.Ссылка
	|ГДЕ
	|	ДокументЗаказКлиента.Проведен
	|	И (ДокументЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОтгрузке)
	|		ИЛИ ДокументЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОбеспечению))
	|	И ЗаказКлиентаТовары.ВариантОбеспечения В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Требуется), ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется))
	|	И НЕ ЗаказКлиентаТовары.Отменено
	|	И ВЫБОР
	|		КОГДА ДокументЗаказКлиента.ДатаОтгрузки <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДокументЗаказКлиента.ДатаОтгрузки < &ДатаОкончания
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ %ТекстУсловияОтборДокумент%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаказКлиентаЭтапыГрафикаОплаты.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ДокументЗаказКлиента.Ссылка КАК Предмет,
	|	&ОжиданиеПредоплатыДоОтгрузки КАК ТипСобытия,
	|	ДокументЗаказКлиента.Дата КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(ЗаказКлиентаЭтапыГрафикаОплаты.ДатаПлатежа,ДЕНЬ) КАК ДатаСобытия,
	|	ДокументЗаказКлиента.Представление КАК Описание,
	|	NULL,
	|	NULL,
	|	ВЫБОР
	|		КОГДА ЗаказКлиентаЭтапыГрафикаОплаты.ДатаПлатежа < НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Просроченное
	|		КОГДА ЗаказКлиентаЭтапыГрафикаОплаты.ДатаПлатежа = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Текущее
	|		ИНАЧЕ  &Предстоящее
	|	КОНЕЦ КАК Статус,
	|	ДокументЗаказКлиента.Партнер КАК Партнер,
	|	ДокументЗаказКлиента.Менеджер КАК Ответственный
	|ИЗ
	|	Документ.ЗаказКлиента.ЭтапыГрафикаОплаты КАК ЗаказКлиентаЭтапыГрафикаОплаты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК ДокументЗаказКлиента
	|		ПО ЗаказКлиентаЭтапыГрафикаОплаты.Ссылка = ДокументЗаказКлиента.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатковКлиентовКОплате КАК ТаблицаОстатковКлиентов
	|		ПО ЗаказКлиентаЭтапыГрафикаОплаты.Ссылка = ТаблицаОстатковКлиентов.ЗаказКлиента
	|			И ЗаказКлиентаЭтапыГрафикаОплаты.ДатаПлатежа = ТаблицаОстатковКлиентов.ДатаПлатежа
	|			И ТаблицаОстатковКлиентов.ДатаПлатежа < &ДатаОкончания 
	|ГДЕ
	|	ДокументЗаказКлиента.Проведен
	|	И ДокументЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОбеспечению)
	|	И ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)
	|	И ЗаказКлиентаЭтапыГрафикаОплаты.ВариантОплаты = ЗНАЧЕНИЕ(Перечисление.ВариантыОплатыКлиентом.ПредоплатаДоОтгрузки)
	|	И ЗаказКлиентаЭтапыГрафикаОплаты.ДатаПлатежа < &ДатаОкончания %ТекстУсловияОтборДокумент%
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказКлиентаЭтапыГрафикаОплаты.Ссылка,
	|	ДокументЗаказКлиента.Ссылка,
	|	ЗаказКлиентаЭтапыГрафикаОплаты.ДатаПлатежа,
	|	ДокументЗаказКлиента.Дата,
	|	ДокументЗаказКлиента.Представление,
	|	ДокументЗаказКлиента.Партнер,
	|	ДокументЗаказКлиента.Менеджер
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЗаказКлиентаЭтапыГрафикаОплаты.СуммаПлатежа) > 0 И
	|	ЕСТЬNULL(СУММА(ТаблицаОстатковКлиентов.КОплатеОстаток), 0) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументЗаказКлиента.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ДокументЗаказКлиента.Ссылка КАК Предмет,
	|	&ПодготовкаКОтгрузке КАК ТипСобытия,
	|	ДокументЗаказКлиента.Дата КАК ДатаОбъектаСобытия,
	|	ВЫБОР
	|		КОГДА ДокументЗаказКлиента.ДатаОтгрузки <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА КОНЕЦПЕРИОДА(ДокументЗаказКлиента.ДатаОтгрузки,ДЕНЬ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(&ТекущаяДата,ДЕНЬ)
	|	КОНЕЦ КАК ДатаСобытия,
	|	ДокументЗаказКлиента.Представление КАК Описание,
	|	NULL,
	|	NULL,
	|	ВЫБОР
	|	КОГДА ЗаказКлиентаТовары.ДатаОтгрузки = ДАТАВРЕМЯ(1, 1, 1)
	|		ТОГДА &Текущее
	|	ИНАЧЕ ВЫБОР
	|			КОГДА ЗаказКлиентаТовары.ДатаОтгрузки = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|				ТОГДА &Текущее
	|			КОГДА ЗаказКлиентаТовары.ДатаОтгрузки > НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|				ТОГДА &Предстоящее
	|			ИНАЧЕ &Просроченное
	|		КОНЕЦ
	|	КОНЕЦ КАК Статус,
	|	ДокументЗаказКлиента.Партнер КАК Партнер,
	|	ДокументЗаказКлиента.Менеджер КАК Ответственный
	|ИЗ
	|	Документ.ЗаказКлиента КАК ДокументЗаказКлиента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|		ПО ДокументЗаказКлиента.Ссылка = ЗаказКлиентаТовары.Ссылка
	|ГДЕ
	|	ДокументЗаказКлиента.Проведен
	|	И (ДокументЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОтгрузке)
	|		ИЛИ ДокументЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОбеспечению))
	|	И НЕ ЗаказКлиентаТовары.ВариантОбеспечения В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить), ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
	|	И НЕ ЗаказКлиентаТовары.Отменено
	|	И ВЫБОР
	|		КОГДА ДокументЗаказКлиента.ДатаОтгрузки <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДокументЗаказКлиента.ДатаОтгрузки < &ДатаОкончания
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ %ТекстУсловияОтборДокумент%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаказКлиентаТовары.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ЗаказКлиентаТовары.Ссылка КАК Предмет,
	|	&Отгрузка КАК ТипСобытия,
	|	ДокументЗаказКлиента.Дата КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(ЗаказКлиентаТовары.ДатаОтгрузки,ДЕНЬ) КАК ДатаСобытия,
	|	ДокументЗаказКлиента.Представление КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА ЗаказКлиентаТовары.ДатаОтгрузки > НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Предстоящее
	|		КОГДА ЗаказКлиентаТовары.ДатаОтгрузки = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Текущее
	|	ИНАЧЕ &Просроченное
	|	КОНЕЦ КАК Статус,
	|	ДокументЗаказКлиента.Партнер КАК Партнер,
	|	ДокументЗаказКлиента.Менеджер КАК Ответственный
	|ИЗ
	|	Документ.ЗаказКлиента КАК ДокументЗаказКлиента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
	|		ПО ДокументЗаказКлиента.Ссылка = ЗаказКлиентаТовары.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыКлиентов.Остатки(
	|		&ДатаОкончания,
	|		ЗаказКлиента ССЫЛКА Документ.ЗаказКлиента
	|			И (ЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОтгрузке)
	|			ИЛИ ЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОбеспечению)) %ТекстУсловияОтбор%) КАК ЗаказыКлиентовОстатки
	|	ПО
	|		ДокументЗаказКлиента.Ссылка = ЗаказыКлиентовОстатки.ЗаказКлиента
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке.Остатки(
	|		,
	|		ДокументОтгрузки ССЫЛКА Документ.ЗаказКлиента
	|			И ВЫРАЗИТЬ(ДокументОтгрузки КАК Документ.ЗаказКлиента).Товары.ДатаОтгрузки < &ДатаОкончания
	|			И (ДокументОтгрузки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОтгрузке)
	|			ИЛИ ДокументОтгрузки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОбеспечению)) %ТекстУсловияОтборДокументОтгрузки%) КАК ТоварыКОтгрузкеОстатки
	|	ПО
	|		ДокументЗаказКлиента.Ссылка = ТоварыКОтгрузкеОстатки.ДокументОтгрузки
	|ГДЕ
	|	ЕСТЬNULL(ЗаказыКлиентовОстатки.КОформлениюОстаток,0) > 0 
	|	И ЕСТЬNULL(ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток, 0) > 0 
	|	И ЕСТЬNULL(ЗаказыКлиентовОстатки.КОформлениюОстаток,0) <> ЕСТЬNULL(ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток, 0) %ТекстУсловияОтборДокумент%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаказКлиентаЭтапыГрафикаОплаты.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ДокументЗаказКлиента.Ссылка КАК Предмет,
	|	&ОжиданиеОплатыПослеОтгрузки КАК ТипСобытия,
	|	ДокументЗаказКлиента.Дата КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(ЗаказКлиентаЭтапыГрафикаОплаты.ДатаПлатежа,ДЕНЬ) КАК ДатаСобытия,
	|	ДокументЗаказКлиента.Представление КАК Описание,
	|	NULL,
	|	NULL,
	|	ВЫБОР
	|		КОГДА ЗаказКлиентаЭтапыГрафикаОплаты.ДатаПлатежа < НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Просроченное
	|		КОГДА ЗаказКлиентаЭтапыГрафикаОплаты.ДатаПлатежа = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Текущее
	|		ИНАЧЕ  &Предстоящее
	|	КОНЕЦ КАК Статус,
	|	ДокументЗаказКлиента.Партнер КАК Партнер,
	|	ДокументЗаказКлиента.Менеджер КАК Ответственный
	|ИЗ
	|	Документ.ЗаказКлиента.ЭтапыГрафикаОплаты КАК ЗаказКлиентаЭтапыГрафикаОплаты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК ДокументЗаказКлиента
	|		ПО ЗаказКлиентаЭтапыГрафикаОплаты.Ссылка = ДокументЗаказКлиента.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатковКлиентовКОплате КАК ТаблицаОстатковКлиентов
	|		ПО ЗаказКлиентаЭтапыГрафикаОплаты.Ссылка = ТаблицаОстатковКлиентов.ЗаказКлиента
	|			И ЗаказКлиентаЭтапыГрафикаОплаты.ДатаПлатежа = ТаблицаОстатковКлиентов.ДатаПлатежа
	|			И ТаблицаОстатковКлиентов.ДатаПлатежа < &ДатаОкончания
	|			И ТаблицаОстатковКлиентов.ЗаказКлиента Ссылка Документ.ЗаказКлиента
	|ГДЕ
	|	ДокументЗаказКлиента.Проведен
	|	И (ДокументЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОтгрузке)
	|		ИЛИ ДокументЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОбеспечению))
	|	И ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)
	|	И ЗаказКлиентаЭтапыГрафикаОплаты.ВариантОплаты = ЗНАЧЕНИЕ(Перечисление.ВариантыОплатыКлиентом.КредитПослеОтгрузки)
	|	И ЗаказКлиентаЭтапыГрафикаОплаты.ДатаПлатежа < &ДатаОкончания %ТекстУсловияОтборДокумент%
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказКлиентаЭтапыГрафикаОплаты.Ссылка,
	|	ДокументЗаказКлиента.Ссылка,
	|	ЗаказКлиентаЭтапыГрафикаОплаты.ДатаПлатежа,
	|	ДокументЗаказКлиента.Дата,
	|	ДокументЗаказКлиента.Представление,
	|	ДокументЗаказКлиента.Партнер,
	|	ДокументЗаказКлиента.Менеджер
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЗаказКлиентаЭтапыГрафикаОплаты.СуммаПлатежа) > 0 И
	|	ЕСТЬNULL(СУММА(ТаблицаОстатковКлиентов.КОплатеОстаток), 0) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументЗаказКлиента.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ДокументЗаказКлиента.Ссылка КАК Предмет,
	|	&ЗакрытиеЗаказа КАК ТипСобытия,
	|	ДокументЗаказКлиента.Дата КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(&ТекущаяДата,ДЕНЬ) КАК ДатаСобытия,
	|	ДокументЗаказКлиента.Представление КАК Описание,
	|	NULL,
	|	NULL,
	|	&Текущее КАК Статус,
	|	ДокументЗаказКлиента.Партнер КАК Партнер,
	|	ДокументЗаказКлиента.Менеджер КАК Ответственный
	|ИЗ
	|	Документ.ЗаказКлиента КАК ДокументЗаказКлиента
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыСКлиентами.Остатки(
	|			,
	|			ЗаказКлиента ССЫЛКА Документ.ЗаказКлиента
	|				И ЗаказКлиента.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОбеспечению),
	|					ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОтгрузке)) %ТекстУсловияОтбор%) КАК РасчетыСКлиентами
	|	ПО ДокументЗаказКлиента.Ссылка = РасчетыСКлиентами.ЗаказКлиента
	|ГДЕ
	|	ДокументЗаказКлиента.Проведен 
	|	И &КонтролироватьЗакрытиеЗаказа
	|	И (ДокументЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОтгрузке)
	|		ИЛИ ДокументЗаказКлиента.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.КОбеспечению))
	|	И ДокументЗаказКлиента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоЗаказамНакладным)
	|	И ДокументЗаказКлиента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссию)
	|	И ЕСТЬNULL(РасчетыСКлиентами.КОтгрузкеОстаток, 0) = 0
	|	И ЕСТЬNULL(РасчетыСКлиентами.КОплатеОстаток, 0) = 0 %ТекстУсловияОтборДокумент% ";
	
	ДобавитьЗапросПоЗадачам(ТекстЗапроса,"Документ.ЗаказКлиента",СтруктураФормированияОтчета);
	СтруктураФормированияОтчета.ЕстьОбращенияКРегистрамРасчетыПоДокументамКлиенты = Истина;
	
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияОтбор ="
		|И ЗаказКлиента.Менеджер" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		ТекстУсловияОтборДокумент ="
		|И ДокументЗаказКлиента.Менеджер" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		ТекстУсловияОтборДокументОтгрузки ="
		|И ДокументОтгрузки.Менеджер" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
	Иначе
		
		ТекстУсловияОтбор = "";
		ТекстУсловияОтборДокумент ="";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтбор%",ТекстУсловияОтбор);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтборДокумент%",ТекстУсловияОтборДокумент);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтборДокументОтгрузки%",ТекстУсловияОтборДокументОтгрузки);
	ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса,СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий);
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Документ.ЗаказКлиента");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаУстановкаЦен(Запрос,СтруктураФормированияОтчета)

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	УстановкаЦенНоменклатуры.Ссылка КАК СсылкаНаОбъектСобытия,
	|	УстановкаЦенНоменклатуры.Ссылка КАК Предмет,
	|	&СогласованиеЦенНоменклатуры КАК ТипСобытия,
	|	УстановкаЦенНоменклатуры.Дата КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(&ТекущаяДата,ДЕНЬ) КАК ДатаСобытия,
	|	УстановкаЦенНоменклатуры.Представление КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	&Текущее КАК Статус,
	|	NULL КАК Партнер,
	|	УстановкаЦенНоменклатуры.Ответственный КАК Ответственный
	|%ТекстПоместить%
	|ИЗ
	|	Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
	|ГДЕ
	|	УстановкаЦенНоменклатуры.Проведен
	|	И УстановкаЦенНоменклатуры.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыУстановокЦенНоменклатуры.НеСогласован) 
	|	%ТекстУсловияОтбор%";
	
	Запрос.УстановитьПараметр("СогласованиеЦенНоменклатуры",НСтр("ru='Согласовать цены номенклатуры';uk='Погодити ціни номенклатури'"));
	
	ДобавитьЗапросПоЗадачам(ТекстЗапроса,"Документ.УстановкаЦенНоменклатуры",СтруктураФормированияОтчета);
	
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияОтбор ="
		|И УстановкаЦенНоменклатуры.Ответственный" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
	Иначе
		
		ТекстУсловияОтбор = "";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтбор%",ТекстУсловияОтбор);
	ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса,СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий);
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Документ.УстановкаЦенНоменклатуры");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаКоммерческиеПредложения(Запрос,СтруктураФормированияОтчета)

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	КоммерческоеПредложениеКлиенту.Ссылка КАК СсылкаНаОбъектСобытия,
	|	КоммерческоеПредложениеКлиенту.Ссылка КАК Предмет,
	|	&СогласованиеКП КАК ТипСобытия,
	|	КоммерческоеПредложениеКлиенту.Дата КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ) КАК ДатаСобытия,
	|	КоммерческоеПредложениеКлиенту.Представление КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	&Текущее КАК Статус,
	|	КоммерческоеПредложениеКлиенту.Партнер КАК Партнер,
	|	КоммерческоеПредложениеКлиенту.Менеджер КАК Ответственный
	|%ТекстПоместить%
	|ИЗ
	|	Документ.КоммерческоеПредложениеКлиенту КАК КоммерческоеПредложениеКлиенту
	|ГДЕ
	|	КоммерческоеПредложениеКлиенту.Проведен
	|	И КоммерческоеПредложениеКлиенту.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКоммерческихПредложенийКлиентам.НеСогласовано)
	|	И ВЫБОР
	|			КОГДА КоммерческоеПредложениеКлиенту.СрокДействия = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ КоммерческоеПредложениеКлиенту.СрокДействия >= НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|		КОНЕЦ 
	|	%ТекстУсловияОтбор%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КоммерческоеПредложениеКлиенту.Ссылка,
	|	КоммерческоеПредложениеКлиенту.Ссылка КАК Предмет,
	|	&ОкончаниеСрокаДействияКП,
	|	КоммерческоеПредложениеКлиенту.Дата,
	|	ВЫБОР
	|		КОГДА КоммерческоеПредложениеКлиенту.СрокДействия = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(КоммерческоеПредложениеКлиенту.СрокДействия,ДЕНЬ)
	|	КОНЕЦ,
	|	КоммерческоеПредложениеКлиенту.Представление,
	|	NULL,
	|	NULL,
	|	ВЫБОР
	|		КОГДА КоммерческоеПредложениеКлиенту.СрокДействия = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &Текущее
	|		ИНАЧЕ ВЫБОР
	|				КОГДА КоммерческоеПредложениеКлиенту.СрокДействия = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|					ТОГДА &Текущее
	|				ИНАЧЕ &Предстоящее
	|			КОНЕЦ
	|	КОНЕЦ,
	|	КоммерческоеПредложениеКлиенту.Партнер КАК Партнер,
	|	КоммерческоеПредложениеКлиенту.Менеджер
	|ИЗ
	|	Документ.КоммерческоеПредложениеКлиенту КАК КоммерческоеПредложениеКлиенту
	|ГДЕ
	|	КоммерческоеПредложениеКлиенту.Проведен
	|	И КоммерческоеПредложениеКлиенту.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыКоммерческихПредложенийКлиентам.Действует)
	|	И КоммерческоеПредложениеКлиенту.СрокДействия <> ДАТАВРЕМЯ(1, 1, 1)
	|	И КоммерческоеПредложениеКлиенту.СрокДействия < &ДатаОкончания
	|	И КоммерческоеПредложениеКлиенту.СрокДействия >= НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) 
	|	%ТекстУсловияОтбор%";
	
	Запрос.УстановитьПараметр("ОкончаниеСрокаДействияКП",НСтр("ru='Окончание срока действия коммерческого предложения';uk='Закінчення строку дії комерційної пропозиції'"));
	Запрос.УстановитьПараметр("СогласованиеКП",НСтр("ru='Согласовать коммерческое предложения';uk='Погодити комерційні пропозиції'"));
	
	ДобавитьЗапросПоЗадачам(ТекстЗапроса,"Документ.КоммерческоеПредложениеКлиенту",СтруктураФормированияОтчета);
	
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияОтбор ="
		|И КоммерческоеПредложениеКлиенту.Менеджер" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
	Иначе
		
		ТекстУсловияОтбор = "";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтбор%",ТекстУсловияОтбор);
	ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса,СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий);
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Документ.КоммерческоеПредложениеКлиенту");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаСоглашенияСПоставщиками(Запрос,СтруктураФормированияОтчета)

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	СоглашенияСПоставщиками.Ссылка КАК СсылкаНаОбъектСобытия,
	|	СоглашенияСПоставщиками.Ссылка КАК Предмет,
	|	&СогласованиеСоглашенияСПоставщиком КАК ТипСобытия,
	|	СоглашенияСПоставщиками.Дата КАК ДатаОбъектаСобытия,
	|	ВЫБОР
	|		КОГДА СоглашенияСПоставщиками.ДатаНачалаДействия = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(СоглашенияСПоставщиками.ДатаНачалаДействия, ДЕНЬ)
	|	КОНЕЦ КАК ДатаСобытия,
	|	СоглашенияСПоставщиками.Наименование КАК Описание,
	|	СоглашенияСПоставщиками.Номер КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА СоглашенияСПоставщиками.ДатаНачалаДействия = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &Текущее
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &ТекущаяДата > СоглашенияСПоставщиками.ДатаНачалаДействия
	|					ТОГДА &Просроченное
	|				КОГДА НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) = ДОБАВИТЬКДАТЕ(СоглашенияСПоставщиками.ДатаНачалаДействия, ДЕНЬ, -1)
	|					ТОГДА &Текущее
	|				ИНАЧЕ &Предстоящее
	|			КОНЕЦ
	|	КОНЕЦ КАК Статус,
	|	СоглашенияСПоставщиками.Партнер КАК Партнер,
	|	СоглашенияСПоставщиками.Менеджер КАК Ответственный
	|%ТекстПоместить%
	|ИЗ
	|	Справочник.СоглашенияСПоставщиками КАК СоглашенияСПоставщиками
	|ГДЕ
	|	НЕ СоглашенияСПоставщиками.ПометкаУдаления
	|	И СоглашенияСПоставщиками.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСПоставщиками.НеСогласовано)
	|	И ВЫБОР
	|			КОГДА СоглашенияСПоставщиками.ДатаОкончанияДействия = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСПоставщиками.ДатаОкончанияДействия > &ТекущаяДата
	|		КОНЕЦ 
	|	И ВЫБОР
	|		КОГДА СоглашенияСПоставщиками.ДатаНачалаДействия = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ СоглашенияСПоставщиками.ДатаНачалаДействия < &ДатаОкончания
	|	КОНЕЦ 
	|	%ТекстУсловияОтбор%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СоглашенияСПоставщиками.Ссылка,
	|	СоглашенияСПоставщиками.Ссылка,
	|	&ОкончаниеДействияСоглашенияСПоставщиком,
	|	СоглашенияСПоставщиками.Дата,
	|	КОНЕЦПЕРИОДА(СоглашенияСПоставщиками.ДатаОкончанияДействия,ДЕНЬ),
	|	СоглашенияСПоставщиками.Наименование,
	|	СоглашенияСПоставщиками.Номер КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА &ТекущаяДата < СоглашенияСПоставщиками.ДатаОкончанияДействия
	|			ТОГДА &Предстоящее
	|		КОГДА НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) = СоглашенияСПоставщиками.ДатаОкончанияДействия
	|			ТОГДА &Текущее
	|		ИНАЧЕ &Просроченное
	|	КОНЕЦ,
	|	СоглашенияСПоставщиками.Партнер КАК Партнер,
	|	СоглашенияСПоставщиками.Менеджер
	|ИЗ
	|	Справочник.СоглашенияСПоставщиками КАК СоглашенияСПоставщиками
	|ГДЕ
	|	НЕ СоглашенияСПоставщиками.ПометкаУдаления
	|	И СоглашенияСПоставщиками.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСПоставщиками.Действует)
	|	И НЕ СоглашенияСПоставщиками.ДатаОкончанияДействия = ДАТАВРЕМЯ(1, 1, 1)
	|	И СоглашенияСПоставщиками.ДатаНачалаДействия < &ТекущаяДата
	|	И СоглашенияСПоставщиками.ДатаОкончанияДействия < &ДатаОкончания 
	|	%ТекстУсловияОтбор%";
	
	Запрос.УстановитьПараметр("ОкончаниеДействияСоглашенияСПоставщиком",НСтр("ru='Отработать окончание срока действия соглашения с поставщиком';uk='Відпрацювати закінчення терміну дії оферти постачальника'"));
	Запрос.УстановитьПараметр("СогласованиеСоглашенияСПоставщиком",НСтр("ru='Согласовать соглашение с поставщиком';uk='Погодити оферту з постачальником'"));
	
	ДобавитьЗапросПоЗадачам(ТекстЗапроса,"Справочник.СоглашенияСПоставщиками",СтруктураФормированияОтчета);
	
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияОтбор ="
		|И СоглашенияСПоставщиками.Менеджер" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
	Иначе
		
		ТекстУсловияОтбор = "";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтбор%",ТекстУсловияОтбор);
	ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса,СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий);
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Справочник.СоглашенияСПоставщиками");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаСоглашенияСКлиентами(Запрос,СтруктураФормированияОтчета)

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	СоглашенияСКлиентами.Ссылка КАК СсылкаНаОбъектСобытия,
	|	СоглашенияСКлиентами.Ссылка КАК Предмет,
	|	&СогласованиеСоглашенияСКлиентом КАК ТипСобытия,
	|	СоглашенияСКлиентами.Дата КАК ДатаОбъектаСобытия,
	|	ВЫБОР
	|		КОГДА СоглашенияСКлиентами.ДатаНачалаДействия = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(СоглашенияСКлиентами.ДатаНачалаДействия,ДЕНЬ)
	|	КОНЕЦ КАК ДатаСобытия,
	|	СоглашенияСКлиентами.Наименование КАК Описание,
	|	СоглашенияСКлиентами.Номер КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА СоглашенияСКлиентами.ДатаНачалаДействия = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &Текущее
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &ТекущаяДата > СоглашенияСКлиентами.ДатаНачалаДействия
	|					ТОГДА &Просроченное
	|				КОГДА НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) = ДОБАВИТЬКДАТЕ(СоглашенияСКлиентами.ДатаНачалаДействия, ДЕНЬ, -1)
	|					ТОГДА &Текущее
	|				ИНАЧЕ &Предстоящее
	|			КОНЕЦ
	|	КОНЕЦ КАК Статус,
	|	СоглашенияСКлиентами.Партнер КАК Партнер,
	|	СоглашенияСКлиентами.Менеджер КАК Ответственный
	|%ТекстПоместить%
	|ИЗ
	|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	|ГДЕ
	|	НЕ СоглашенияСКлиентами.ПометкаУдаления
	|	И СоглашенияСКлиентами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.НеСогласовано)
	|	И ВЫБОР
	|			КОГДА СоглашенияСКлиентами.ДатаОкончанияДействия = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСКлиентами.ДатаОкончанияДействия > &ТекущаяДата
	|		КОНЕЦ
	|	И ВЫБОР
	|		КОГДА СоглашенияСКлиентами.ДатаНачалаДействия = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ СоглашенияСКлиентами.ДатаНачалаДействия < &ДатаОкончания
	|	КОНЕЦ 
	|	%ТекстУсловияОтбор%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СоглашенияСКлиентами.Ссылка,
	|	СоглашенияСКлиентами.Ссылка,
	|	&ОкончаниеДействияСоглашенияСКлиентом,
	|	СоглашенияСКлиентами.Дата,
	|	КОНЕЦПЕРИОДА(СоглашенияСКлиентами.ДатаОкончанияДействия,ДЕНЬ),
	|	СоглашенияСКлиентами.Наименование,
	|	СоглашенияСКлиентами.Номер КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА &ТекущаяДата < СоглашенияСКлиентами.ДатаОкончанияДействия
	|			ТОГДА &Предстоящее
	|		КОГДА НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) = СоглашенияСКлиентами.ДатаОкончанияДействия
	|			ТОГДА &Текущее
	|		ИНАЧЕ &Просроченное
	|	КОНЕЦ,
	|	СоглашенияСКлиентами.Партнер,
	|	СоглашенияСКлиентами.Менеджер
	|ИЗ
	|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	|ГДЕ
	|	НЕ СоглашенияСКлиентами.ПометкаУдаления
	|	И СоглашенияСКлиентами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Действует)
	|	И НЕ СоглашенияСКлиентами.ДатаОкончанияДействия = ДАТАВРЕМЯ(1, 1, 1)
	|	И СоглашенияСКлиентами.ДатаНачалаДействия < &ТекущаяДата 
	|	И СоглашенияСКлиентами.ДатаОкончанияДействия < &ДатаОкончания 
	|	%ТекстУсловияОтбор%";
	
	Запрос.УстановитьПараметр("ОкончаниеДействияСоглашенияСКлиентом",НСтр("ru='Отработать окончание срока действия соглашения с клиентом';uk='Відпрацювати закінчення терміну дії оферти клієнту'"));
	Запрос.УстановитьПараметр("СогласованиеСоглашенияСКлиентом",НСтр("ru='Согласовать соглашения с клиентом';uk='Погодити оферти з клієнтом'"));
	
	ДобавитьЗапросПоЗадачам(ТекстЗапроса,"Справочник.СоглашенияСКлиентами",СтруктураФормированияОтчета);
	
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияОтбор ="
		|И СоглашенияСКлиентами.Менеджер" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
	Иначе
		
		ТекстУсловияОтбор = "";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтбор%",ТекстУсловияОтбор);
	ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса,СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий);
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Справочник.СоглашенияСКлиентами");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаСделки(Запрос,СтруктураФормированияОтчета)

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	СделкиСКлиентами.Ссылка КАК СсылкаНаОбъектСобытия,
	|	СделкиСКлиентами.Ссылка КАК Предмет,
	|	СтатистикаСделокСКлиентами.ЭтапПроцесса КАК ТипСобытия,
	|	СделкиСКлиентами.ДатаНачала КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(&ТекущаяДата,ДЕНЬ) КАК ДатаСобытия,
	|	СделкиСКлиентами.Наименование КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	&Текущее КАК Статус,
	|	СделкиСКлиентами.Партнер КАК Партнер,
	|	СделкиСКлиентами.Ответственный КАК Ответственный
	|%ТекстПоместить%
	|ИЗ
	|	РегистрСведений.СтатистикаСделокСКлиентами КАК СтатистикаСделокСКлиентами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СделкиСКлиентами КАК СделкиСКлиентами
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыСделокСКлиентами КАК ВидыСделокСКлиентами
	|			ПО СделкиСКлиентами.ВидСделки = ВидыСделокСКлиентами.Ссылка
	|		ПО СтатистикаСделокСКлиентами.Сделка = СделкиСКлиентами.Ссылка
	|			И (СтатистикаСделокСКлиентами.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1))
	|ГДЕ
	|	НЕ СделкиСКлиентами.ПометкаУдаления
	|	И НЕ СделкиСКлиентами.Закрыта
	|	И (ВидыСделокСКлиентами.ТипСделки = ЗНАЧЕНИЕ(Перечисление.ТипыСделокСКлиентами.СделкиСРучнымПереходомПоЭтапам)
	|			ИЛИ ВидыСделокСКлиентами.ТипСделки = ЗНАЧЕНИЕ(Перечисление.ТипыСделокСКлиентами.ТиповаяПродажа)
	|				И СделкиСКлиентами.ПереведенаНаУправлениеВРучную) 
	|	%ТекстУсловияОтбор%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СделкиСКлиентами.Ссылка,
	|	СделкиСКлиентами.Ссылка,
	|	&ЗакрытиеСделки,
	|	СделкиСКлиентами.ДатаНачала,
	|	КОНЕЦПЕРИОДА(&ТекущаяДата,ДЕНЬ),
	|	СделкиСКлиентами.Наименование,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	&Текущее,
	|	СделкиСКлиентами.Партнер КАК Партнер,
	|	СделкиСКлиентами.Ответственный
	|ИЗ
	|	Справочник.СделкиСКлиентами КАК СделкиСКлиентами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыСделокСКлиентами КАК ВидыСделокСКлиентами
	|		ПО СделкиСКлиентами.ВидСделки = ВидыСделокСКлиентами.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатистикаСделокСКлиентами КАК СтатистикаСделокСКлиентами
	|		ПО (СтатистикаСделокСКлиентами.Сделка = СделкиСКлиентами.Ссылка)
	|			И (СтатистикаСделокСКлиентами.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1))
	|ГДЕ
	|	НЕ СделкиСКлиентами.ПометкаУдаления
	|	И НЕ СделкиСКлиентами.Закрыта
	|	И (ВидыСделокСКлиентами.ТипСделки = ЗНАЧЕНИЕ(Перечисление.ТипыСделокСКлиентами.СделкиСРучнымПереходомПоЭтапам)
	|			ИЛИ ВидыСделокСКлиентами.ТипСделки = ЗНАЧЕНИЕ(Перечисление.ТипыСделокСКлиентами.ТиповаяПродажа)
	|				И СделкиСКлиентами.ПереведенаНаУправлениеВРучную)
	|	И СтатистикаСделокСКлиентами.Сделка ЕСТЬ NULL 
	|	%ТекстУсловияОтбор%";
	
	Запрос.УстановитьПараметр("ЗакрытиеСделки",НСтр("ru='Закрыть сделку';uk='Закрити угоду'"));
	
	ДобавитьЗапросПоЗадачам(ТекстЗапроса,"Справочник.СделкиСКлиентами",СтруктураФормированияОтчета);
	
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияОтбор ="
		|И  СделкиСКлиентами.Ответственный" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
	Иначе
		
		ТекстУсловияОтбор = "";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтбор%",ТекстУсловияОтбор);
	
	Если СтруктураФормированияОтчета.ЕстьПравоЗадачиПроектов Тогда
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаЗадачиПоПланамПроектов(Запрос,СтруктураФормированияОтчета,"СделкиСКлиентами");
	КонецЕсли;
	
	ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса,СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий);
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Справочник.СделкиСКлиентами");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаПроекты(Запрос,СтруктураФормированияОтчета)

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Проекты.Ссылка КАК СсылкаНаОбъектСобытия,
	|	Проекты.Ссылка КАК Предмет,
	|	&НачалоПроекта КАК ТипСобытия,
	|	ВЫБОР
	|		КОГДА Проекты.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Проекты.ПлановаяДатаНачала
	|		ИНАЧЕ Проекты.ДатаНачала
	|	КОНЕЦ КАК ДатаОбъектаСобытия,
	|	ВЫБОР
	|		КОГДА Проекты.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА КОНЕЦПЕРИОДА(Проекты.ПлановаяДатаНачала,ДЕНЬ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(Проекты.ДатаНачала,ДЕНЬ)
	|	КОНЕЦ КАК ДатаСобытия,
	|	Проекты.Наименование КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА Проекты.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВЫБОР
	|					КОГДА Проекты.ПлановаяДатаНачала > НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|						ТОГДА &Предстоящее
	|					КОГДА Проекты.ПлановаяДатаНачала = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|						ТОГДА &Текущее
	|					ИНАЧЕ &Просроченное
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Проекты.ДатаНачала > НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|					ТОГДА &Предстоящее
	|				ИНАЧЕ &Текущее
	|			КОНЕЦ
	|	КОНЕЦ КАК Статус,
	|	NULL КАК Партнер,
	|	Проекты.Ответственный КАК Ответственный
	|%ТекстПоместить%
	|ИЗ
	|	Справочник.Проекты КАК Проекты
	|ГДЕ
	|	НЕ Проекты.ПометкаУдаления
	|	И НЕ Проекты.Завершен
	|	И (Проекты.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ Проекты.ДатаНачала >= НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ))
	|	И ВЫБОР
	|		КОГДА Проекты.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Проекты.ПлановаяДатаНачала < &ДатаОкончания
	|		ИНАЧЕ Проекты.ДатаНачала < &ДатаОкончания
	|	КОНЕЦ 
	|	%ТекстУсловияОтбор%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Проекты.Ссылка,
	|	Проекты.Ссылка,
	|	&ОкончаниеПроекта,
	|	ВЫБОР
	|		КОГДА Проекты.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Проекты.ПлановаяДатаОкончания
	|		ИНАЧЕ Проекты.ДатаОкончания
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Проекты.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА КОНЕЦПЕРИОДА(Проекты.ПлановаяДатаОкончания,ДЕНЬ)
	|		ИНАЧЕ КонецПериода(Проекты.ДатаОкончания,ДЕНЬ)
	|	КОНЕЦ,
	|	Проекты.Наименование,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА Проекты.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВЫБОР
	|					КОГДА Проекты.ПлановаяДатаОкончания > НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|						ТОГДА &Предстоящее
	|					КОГДА Проекты.ПлановаяДатаОкончания = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|						ТОГДА &Текущее
	|					ИНАЧЕ &Просроченное
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Проекты.ДатаОкончания > НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|					ТОГДА &Предстоящее
	|				ИНАЧЕ &Текущее
	|			КОНЕЦ
	|	КОНЕЦ,
	|	NULL КАК Партнер,
	|	Проекты.Ответственный
	|ИЗ
	|	Справочник.Проекты КАК Проекты
	|ГДЕ
	|	НЕ Проекты.ПометкаУдаления
	|	И НЕ Проекты.Завершен
	|	И Проекты.ДатаНачала <> ДАТАВРЕМЯ(1, 1, 1)
	|	И Проекты.ДатаНачала < НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) 
	|И ВЫБОР
	|		КОГДА Проекты.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Проекты.ПлановаяДатаОкончания < &ДатаОкончания
	|		ИНАЧЕ Проекты.ДатаОкончания < &ДатаОкончания
	|	КОНЕЦ 
	|	%ТекстУсловияОтбор%";
	
	Запрос.УстановитьПараметр("НачалоПроекта",НСтр("ru='Начать проект';uk='Почати проект'"));
	Запрос.УстановитьПараметр("ОкончаниеПроекта",НСтр("ru='Завершить проект';uk='Завершити проект'"));
	
	ДобавитьЗапросПоЗадачам(ТекстЗапроса,"Справочник.Проекты",СтруктураФормированияОтчета);
	
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияОтбор ="
		|И  Проекты.Ответственный" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
	Иначе
		
		ТекстУсловияОтбор = "";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтбор%",ТекстУсловияОтбор);
	
	Если СтруктураФормированияОтчета.ЕстьПравоЗадачиПроектов Тогда
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаЗадачиПоПланамПроектов(Запрос,СтруктураФормированияОтчета,"Проекты");
	КонецЕсли;
	
	ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса,СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий);
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Справочник.Проекты");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаМаркетинговыеМероприятия(Запрос,СтруктураФормированияОтчета)

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	МаркетинговыеМероприятия.Ссылка КАК СсылкаНаОбъектСобытия,
	|	МаркетинговыеМероприятия.Ссылка КАК Предмет,
	|	&НачалоМаркетинговогоМероприятия КАК ТипСобытия,
	|	ВЫБОР
	|		КОГДА МаркетинговыеМероприятия.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА МаркетинговыеМероприятия.ПлановаяДатаНачала
	|		ИНАЧЕ МаркетинговыеМероприятия.ДатаНачала
	|	КОНЕЦ КАК ДатаОбъектаСобытия,
	|	ВЫБОР
	|		КОГДА МаркетинговыеМероприятия.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА КОНЕЦПЕРИОДА(МаркетинговыеМероприятия.ПлановаяДатаНачала,ДЕНЬ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(МаркетинговыеМероприятия.ДатаНачала,ДЕНЬ)
	|	КОНЕЦ КАК ДатаСобытия,
	|	МаркетинговыеМероприятия.Наименование КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА МаркетинговыеМероприятия.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВЫБОР
	|					КОГДА МаркетинговыеМероприятия.ПлановаяДатаНачала > НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|						ТОГДА &Предстоящее
	|					КОГДА МаркетинговыеМероприятия.ПлановаяДатаНачала = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|						ТОГДА &Текущее
	|					ИНАЧЕ &Просроченное
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА МаркетинговыеМероприятия.ДатаНачала > НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|					ТОГДА &Предстоящее
	|				ИНАЧЕ &Текущее
	|			КОНЕЦ
	|	КОНЕЦ КАК Статус,
	|	NULL КАК Партнер,
	|	МаркетинговыеМероприятия.Ответственный КАК Ответственный
	|%ТекстПоместить%
	|ИЗ
	|	Справочник.МаркетинговыеМероприятия КАК МаркетинговыеМероприятия
	|ГДЕ
	|	НЕ МаркетинговыеМероприятия.ПометкаУдаления
	|	И НЕ МаркетинговыеМероприятия.Завершено
	|	И (МаркетинговыеМероприятия.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ МаркетинговыеМероприятия.ДатаНачала >= НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ))
	|	И ВЫБОР
	|		КОГДА МаркетинговыеМероприятия.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА МаркетинговыеМероприятия.ПлановаяДатаНачала < &ДатаОкончания
	|		ИНАЧЕ МаркетинговыеМероприятия.ДатаНачала < &ДатаОкончания
	|	КОНЕЦ 
	|	%ТекстУсловияОтбор%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МаркетинговыеМероприятия.Ссылка,
	|	МаркетинговыеМероприятия.Ссылка,
	|	&ОкончаниеМаркетинговогоМероприятия,
	|	ВЫБОР
	|		КОГДА МаркетинговыеМероприятия.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА МаркетинговыеМероприятия.ПлановаяДатаОкончания
	|		ИНАЧЕ МаркетинговыеМероприятия.ДатаОкончания
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА МаркетинговыеМероприятия.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА КОНЕЦПЕРИОДА(МаркетинговыеМероприятия.ПлановаяДатаОкончания, ДЕНЬ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(МаркетинговыеМероприятия.ДатаОкончания,ДЕНЬ)
	|	КОНЕЦ,
	|	МаркетинговыеМероприятия.Наименование,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА МаркетинговыеМероприятия.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВЫБОР
	|					КОГДА МаркетинговыеМероприятия.ПлановаяДатаОкончания > НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|						ТОГДА &Предстоящее
	|					КОГДА МаркетинговыеМероприятия.ПлановаяДатаОкончания = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|						ТОГДА &Текущее
	|					ИНАЧЕ &Просроченное
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА МаркетинговыеМероприятия.ДатаОкончания > НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|					ТОГДА &Предстоящее
	|				ИНАЧЕ &Текущее
	|			КОНЕЦ
	|	КОНЕЦ,
	|	NULL КАК Партнер,
	|	МаркетинговыеМероприятия.Ответственный
	|ИЗ
	|	Справочник.МаркетинговыеМероприятия КАК МаркетинговыеМероприятия
	|ГДЕ
	|	НЕ МаркетинговыеМероприятия.ПометкаУдаления
	|	И НЕ МаркетинговыеМероприятия.Завершено
	|	И МаркетинговыеМероприятия.ДатаНачала <> ДАТАВРЕМЯ(1, 1, 1)
	|	И МаркетинговыеМероприятия.ДатаНачала < НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) 
	|И ВЫБОР
	|		КОГДА МаркетинговыеМероприятия.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА МаркетинговыеМероприятия.ПлановаяДатаОкончания < &ДатаОкончания
	|		ИНАЧЕ МаркетинговыеМероприятия.ДатаОкончания < &ДатаОкончания
	|	КОНЕЦ 
	|	%ТекстУсловияОтбор%";
	
	Запрос.УстановитьПараметр("НачалоМаркетинговогоМероприятия",НСтр("ru='Начать маркетинговое мероприятие';uk='Почати маркетинговий захід'"));
	Запрос.УстановитьПараметр("ОкончаниеМаркетинговогоМероприятия",НСтр("ru='Завершить маркетинговое мероприятие';uk='Завершити маркетинговий захід'"));
	
	ДобавитьЗапросПоЗадачам(ТекстЗапроса,"Справочник.МаркетинговыеМероприятия",СтруктураФормированияОтчета);
	
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияОтбор ="
		|И  МаркетинговыеМероприятия.Ответственный" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
	Иначе
		
		ТекстУсловияОтбор = "";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтбор%",ТекстУсловияОтбор);
	
	Если СтруктураФормированияОтчета.ЕстьПравоЗадачиПроектов Тогда
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаЗадачиПоПланамПроектов(Запрос,СтруктураФормированияОтчета,"МаркетинговыеМероприятия");
	КонецЕсли;
	
	ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса,СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий);
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Справочник.МаркетинговыеМероприятия");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаДоговораКонтрагентов(Запрос,СтруктураФормированияОтчета)

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ДоговорыКонтрагентов.Ссылка КАК Предмет,
	|	&ЗаканчиваетсяСрокДействияДоговора КАК ТипСобытия,
	|	ДоговорыКонтрагентов.Дата КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(ДоговорыКонтрагентов.ДатаОкончанияДействия,ДЕНЬ) КАК ДатаСобытия,
	|	ДоговорыКонтрагентов.Наименование КАК Описание,
	|	ДоговорыКонтрагентов.ХозяйственнаяОперация КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА &ТекущаяДата < ДоговорыКонтрагентов.ДатаОкончанияДействия
	|			ТОГДА &Предстоящее
	|		ИНАЧЕ &Текущее
	|	КОНЕЦ КАК Статус,
	|	ДоговорыКонтрагентов.Партнер КАК Партнер,
	|	ДоговорыКонтрагентов.Менеджер КАК Ответственный
	|%ТекстПоместить%
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	НЕ ДоговорыКонтрагентов.ПометкаУдаления
	|	И ДоговорыКонтрагентов.ДатаОкончанияДействия <> ДАТАВРЕМЯ(1, 1, 1)
	|	И ДоговорыКонтрагентов.ДатаОкончанияДействия < &ДатаОкончания
	|	И ДоговорыКонтрагентов.ДатаОкончанияДействия >= НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|	И ДоговорыКонтрагентов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Действует)
	|	%ТекстУсловияОтбор%";
	
	Запрос.УстановитьПараметр("ЗаканчиваетсяСрокДействияДоговора",НСтр("ru='Отработать окончание срока действия договора с контрагентом';uk='Відпрацювати закінчення терміну дії договору з контрагентом'"));
	
	ДобавитьЗапросПоЗадачам(ТекстЗапроса,"Справочник.ДоговорыКонтрагентов",СтруктураФормированияОтчета);
	
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияОтбор ="
		|И  ДоговорыКонтрагентов.Менеджер" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
	Иначе
		
		ТекстУсловияОтбор = "";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтбор%",ТекстУсловияОтбор);
	ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса,СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий);
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Справочник.ДоговорыКонтрагентов");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаЗадачиПоПланамПроектов(Запрос,СтруктураФормированияОтчета,СправочникВладелец)

	ТекстЗапроса = "
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ 
	|	ЗадачиПроектов.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ЗадачиПроектов.Ссылка КАК Предмет,
	|	&ЗапланироватьЗадачуПоПроекту КАК ТипСобытия,
	|	ЗадачиПроектов.Владелец.ДатаНачала КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ) КАК ДатаСобытия,
	|	ЗадачиПроектов.Наименование КАК Описание,
	|	ЗадачиПроектов.Владелец КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	&Текущее КАК Статус,
	|	NULL КАК Партнер,
	|	ЗадачиПроектов.Исполнитель КАК Ответственный
	|ИЗ
	|	Справочник.ЗадачиПроектов КАК ЗадачиПроектов
	|ГДЕ
	|	НЕ ЗадачиПроектов.ПометкаУдаления
	|	И НЕ ЗадачиПроектов.Закрыта
	|	И ЗадачиПроектов.Стадия = ЗНАЧЕНИЕ(Перечисление.СтадииЗадач.НеЗапланирована) 
	|	%ТекстУсловияОтборИсполнитель% 
	|	%ТекстУсловияВладелец%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗадачиПроектов.Ссылка,
	|	ЗадачиПроектов.Ссылка,
	|	&ПриступитьКВыполнениюЗадачиПоПроекту,
	|	ЗадачиПроектов.Владелец.ДатаНачала,
	|	ВЫБОР
	|		КОГДА ЗадачиПроектов.ПлановаяДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|		ИНАЧЕ КОНЕЦПЕРИОДА(ЗадачиПроектов.ПлановаяДатаНачала, ДЕНЬ)
	|	КОНЕЦ,
	|	ЗадачиПроектов.Наименование,
	|	ЗадачиПроектов.Владелец КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА ЗадачиПроектов.ПлановаяДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &Текущее
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЗадачиПроектов.ПлановаяДатаНачала > НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|					ТОГДА &Предстоящее
	|				КОГДА ЗадачиПроектов.ПлановаяДатаНачала = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|					ТОГДА &Текущее
	|				ИНАЧЕ &Просроченное
	|			КОНЕЦ
	|	КОНЕЦ,
	|	NULL КАК Партнер,
	|	ЗадачиПроектов.Исполнитель КАК Ответственный
	|ИЗ
	|	Справочник.ЗадачиПроектов КАК ЗадачиПроектов
	|ГДЕ
	|	НЕ ЗадачиПроектов.ПометкаУдаления
	|	И НЕ ЗадачиПроектов.Закрыта
	|	И ЗадачиПроектов.Стадия = ЗНАЧЕНИЕ(Перечисление.СтадииЗадач.Запланирована)
	|	И ВЫБОР
	|			КОГДА ЗадачиПроектов.ПлановаяДатаНачала <> ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ЗадачиПроектов.ПлановаяДатаНачала < &ДатаОкончания
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ 
	|	%ТекстУсловияОтборИсполнитель% 
	|	%ТекстУсловияВладелец%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗадачиПроектов.Ссылка,
	|	ЗадачиПроектов.Ссылка,
	|	&ВыполнениеЗадачиПоПроекту,
	|	ЗадачиПроектов.Владелец.ДатаНачала,
	|	ВЫБОР
	|		КОГДА ЗадачиПроектов.ПлановаяДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) < ДОБАВИТЬКДАТЕ(ЗадачиПроектов.ПлановаяДатаНачала, ДЕНЬ, ЗадачиПроектов.ПлановаяПродолжительность)
	|					ТОГДА КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|				ИНАЧЕ КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(ЗадачиПроектов.ПлановаяДатаНачала, ДЕНЬ, ЗадачиПроектов.ПлановаяПродолжительность),ДЕНЬ)
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ЗадачиПроектов.Наименование,
	|	ЗадачиПроектов.Владелец КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА ЗадачиПроектов.ПлановаяДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА &Текущее
	|		ИНАЧЕ ВЫБОР
	|				КОГДА НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) <= ДОБАВИТЬКДАТЕ(ЗадачиПроектов.ПлановаяДатаНачала, ДЕНЬ, ЗадачиПроектов.ПлановаяПродолжительность)
	|					ТОГДА &Текущее
	|				ИНАЧЕ &Просроченное
	|			КОНЕЦ
	|	КОНЕЦ,
	|	NULL КАК Партнер,
	|	ЗадачиПроектов.Исполнитель КАК Ответственный
	|ИЗ
	|	Справочник.ЗадачиПроектов КАК ЗадачиПроектов
	|ГДЕ
	|	НЕ ЗадачиПроектов.ПометкаУдаления
	|	И НЕ ЗадачиПроектов.Закрыта
	|	И ЗадачиПроектов.Стадия = ЗНАЧЕНИЕ(Перечисление.СтадииЗадач.Выполняется)
	|	%ТекстУсловияОтборИсполнитель% 
	|	%ТекстУсловияВладелец%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗадачиПроектов.Ссылка,
	|	ЗадачиПроектов.Ссылка,
	|	&ПроверитьВыполнениеЗадачиПоПроекту,
	|	ЗадачиПроектов.Владелец.ДатаНачала,
	|	КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ),
	|	ЗадачиПроектов.Наименование,
	|	ЗадачиПроектов.Владелец КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	&Текущее,
	|	NULL КАК Партнер,
	|	ЗадачиПроектов.Куратор КАК Ответственный
	|ИЗ
	|	Справочник.ЗадачиПроектов КАК ЗадачиПроектов
	|ГДЕ
	|	НЕ ЗадачиПроектов.ПометкаУдаления
	|	И НЕ ЗадачиПроектов.Закрыта
	|	И ЗадачиПроектов.Стадия = ЗНАЧЕНИЕ(Перечисление.СтадииЗадач.Выполнена) 
	|	%ТекстУсловияОтборКуратор% 
	|	%ТекстУсловияВладелец%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗадачиПроектов.Ссылка,
	|	ЗадачиПроектов.Ссылка,
	|	&ЗакрытиеЗадачиПоПроекту,
	|	НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ),
	|	КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ),
	|	ЗадачиПроектов.Наименование,
	|	ЗадачиПроектов.Владелец КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	&Текущее,
	|	NULL КАК Партнер,
	|	ЗадачиПроектов.Куратор КАК Ответственный
	|ИЗ
	|	Справочник.ЗадачиПроектов КАК ЗадачиПроектов
	|ГДЕ
	|	НЕ ЗадачиПроектов.ПометкаУдаления
	|	И НЕ ЗадачиПроектов.Закрыта
	|	И ЗадачиПроектов.Стадия = ЗНАЧЕНИЕ(Перечисление.СтадииЗадач.Проверена)
	|	%ТекстУсловияОтборКуратор%
	|	%ТекстУсловияВладелец%";
	
	Запрос.УстановитьПараметр("ЗапланироватьЗадачуПоПроекту",НСтр("ru='Запланировать задачу проекта';uk='Запланувати задачу проекту'"));
	Запрос.УстановитьПараметр("ПриступитьКВыполнениюЗадачиПоПроекту",НСтр("ru='Начать выполнение задачи проекта';uk='Почати виконання задачі проекту'"));
	Запрос.УстановитьПараметр("ВыполнениеЗадачиПоПроекту",НСтр("ru='Выполнить задачу проекта';uk='Виконати задачу проекту'"));
	Запрос.УстановитьПараметр("ПроверитьВыполнениеЗадачиПоПроекту",НСтр("ru='Проверить выполнение задачи проекта';uk='Перевірити виконання задачі проекту'"));
	Запрос.УстановитьПараметр("ЗакрытиеЗадачиПоПроекту",НСтр("ru='Закрыть задачу проекта';uk='Закрити задачу проекту'"));
	
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияОтборИсполнитель ="
		|И  ЗадачиПроектов.Исполнитель" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		ТекстУсловияОтборКуратор ="
		|И  ЗадачиПроектов.Куратор" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
	Иначе
		
		ТекстУсловияОтборИсполнитель = "";
		ТекстУсловияОтборКуратор = "";
		
	КонецЕсли;
	
	ТекстУсловияВладелец = "
	|И  ЗадачиПроектов.Владелец ССЫЛКА Справочник." + СправочникВладелец;
	
	Если СправочникВладелец = "ПретензииКлиентов" ИЛИ СправочникВладелец = "Сделки" Тогда
		ТекстВыбранноеПолеПартнер = "
		|	ЗадачиПроектов.Владелец.Партнер КАК Партнер,";
	Иначе
		ТекстВыбранноеПолеПартнер = "
		|	NULL КАК Партнер,";
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтборИсполнитель%",ТекстУсловияОтборИсполнитель);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтборКуратор%",ТекстУсловияОтборКуратор);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияВладелец%",ТекстУсловияВладелец);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстВыбранноеПолеПартнер%",ТекстВыбранноеПолеПартнер);
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Справочник.ЗадачиПроектов");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаВходящиеПисьма(Запрос, СтруктураФормированияОтчета)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЭлектронноеПисьмоВходящее.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ЭлектронноеПисьмоВходящее.Ссылка КАК Предмет,
	|	&РассмотретьВходящееПисьмо КАК ТипСобытия,
	|	ЭлектронноеПисьмоВходящее.Дата КАК ДатаОбъектаСобытия,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)) = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЭлектронноеПисьмоВходящее.Дата
	|		ИНАЧЕ ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1))
	|	КОНЕЦ КАК ДатаСобытия,
	|	ЭлектронноеПисьмоВходящее.Тема КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)) = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВЫБОР
	|					КОГДА ДОБАВИТЬКДАТЕ(ЭлектронноеПисьмоВходящее.Дата, ЧАС, 1) < &ТекущаяДата
	|						ТОГДА &Просроченное
	|					ИНАЧЕ &Текущее
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)) > &ТекущаяДата
	|					ТОГДА &Предстоящее
	|				КОГДА ДОБАВИТЬКДАТЕ(ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)), ЧАС, 1) < &ТекущаяДата
	|					ТОГДА &Просроченное
	|				ИНАЧЕ &Текущее
	|			КОНЕЦ
	|	КОНЕЦ КАК Статус,
	|	ВЫБОР
	|		КОГДА ЭлектронноеПисьмоВходящее.ОтправительКонтакт ССЫЛКА Справочник.Партнеры ТОГДА ЭлектронноеПисьмоВходящее.ОтправительКонтакт
	|		КОГДА ЭлектронноеПисьмоВходящее.ОтправительКонтакт ССЫЛКА Справочник.КонтактныеЛицаПартнеров ТОГДА ЭлектронноеПисьмоВходящее.ОтправительКонтакт.Владелец
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК Партнер,
	|	ЭлектронноеПисьмоВходящее.Ответственный КАК Ответственный
	|%ТекстПоместить%
	|ИЗ
	|	Документ.ЭлектронноеПисьмоВходящее КАК ЭлектронноеПисьмоВходящее
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий
	|		ПО ЭлектронноеПисьмоВходящее.Ссылка = ПредметыПапкиВзаимодействий.Взаимодействие
	|ГДЕ
	|	НЕ ЭлектронноеПисьмоВходящее.ПометкаУдаления
	|	И (НЕ ЕСТЬNULL(ПредметыПапкиВзаимодействий.Рассмотрено, Ложь))
	|	И ВЫБОР
	|		КОГДА ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)) = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЭлектронноеПисьмоВходящее.Дата < &ДатаОкончания
	|		ИНАЧЕ ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)) < &ДатаОкончания
	|	КОНЕЦ
	|	%ТекстУсловияОтбор%";
	
	Запрос.УстановитьПараметр("РассмотретьВходящееПисьмо",НСтр("ru='Отработать входящее письмо';uk='Відпрацювати вхідний лист'"));
	
	ДобавитьЗапросПоЗадачам(ТекстЗапроса,"Документ.ЭлектронноеПисьмоВходящее",СтруктураФормированияОтчета);
	
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияОтбор ="
		|	И ЭлектронноеПисьмоВходящее.Ответственный" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
	Иначе
		
		ТекстУсловияОтбор = "";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтбор%",ТекстУсловияОтбор);
	ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса,СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий);
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Документ.ЭлектронноеПисьмоВходящее");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаИсходящиеПисьма(Запрос, СтруктураФормированияОтчета)

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЭлектронноеПисьмоИсходящее.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ЭлектронноеПисьмоИсходящее.Ссылка КАК Предмет,
	|	&ПроконтролироватьИсходящееПисьмо КАК ТипСобытия,
	|	ЭлектронноеПисьмоИсходящее.ДатаОтправления КАК ДатаОбъектаСобытия,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)) = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЭлектронноеПисьмоИсходящее.Дата
	|		ИНАЧЕ ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1))
	|	КОНЕЦ КАК ДатаСобытия,
	|	ЭлектронноеПисьмоИсходящее.Тема КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)) = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВЫБОР
	|					КОГДА ДОБАВИТЬКДАТЕ(ЭлектронноеПисьмоИсходящее.Дата, ЧАС, 1) < &ТекущаяДата
	|						ТОГДА &Просроченное
	|					ИНАЧЕ &Текущее
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)) > &ТекущаяДата
	|					ТОГДА &Предстоящее
	|				КОГДА ДОБАВИТЬКДАТЕ(ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)), ЧАС, 1) < &ТекущаяДата
	|					ТОГДА &Просроченное
	|				ИНАЧЕ &Текущее
	|			КОНЕЦ
	|	КОНЕЦ КАК Статус,
	|	NULL КАК Партнер,
	|	ЭлектронноеПисьмоИсходящее.Ответственный КАК Ответственный
	|%ТекстПоместить%
	|ИЗ
	|	Документ.ЭлектронноеПисьмоИсходящее КАК ЭлектронноеПисьмоИсходящее
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий
	|		ПО ЭлектронноеПисьмоИсходящее.Ссылка = ПредметыПапкиВзаимодействий.Взаимодействие
	|ГДЕ
	|	НЕ ЭлектронноеПисьмоИсходящее.ПометкаУдаления
	|	И НЕ ЕСТЬNULL(ПредметыПапкиВзаимодействий.Рассмотрено, Ложь)
	|	И ЭлектронноеПисьмоИсходящее.СтатусПисьма = ЗНАЧЕНИЕ(Перечисление.СтатусыИсходящегоЭлектронногоПисьма.Отправлено)
	|	И ВЫБОР
	|			КОГДА ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)) = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ЭлектронноеПисьмоИсходящее.Дата < &ДатаОкончания
	|			ИНАЧЕ ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)) < &ДатаОкончания
	|	КОНЕЦ
	|	%ТекстУсловияОтбор%";
	
	Запрос.УстановитьПараметр("ПроконтролироватьИсходящееПисьмо",НСтр("ru='Проконтролировать исходящее письмо';uk='Проконтролювати вихідний лист'"));
	
	ДобавитьЗапросПоЗадачам(ТекстЗапроса,"Документ.ЭлектронноеПисьмоИсходящее",СтруктураФормированияОтчета);
	
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияОтбор ="
		|И ЭлектронноеПисьмоИсходящее.Ответственный" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
	Иначе
		
		ТекстУсловияОтбор = "";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтбор%",ТекстУсловияОтбор);
	ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса,СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий);
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Документ.ЭлектронноеПисьмоИсходящее");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаВстречи(Запрос, СтруктураФормированияОтчета)

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Встреча.Ссылка КАК СсылкаНаОбъектСобытия,
	|	Встреча.Ссылка КАК Предмет,
	|	&РассмотретьВcтречу КАК ТипСобытия,
	|	Встреча.Дата КАК ДатаОбъектаСобытия,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)) = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Встреча.ДатаОкончания
	|		ИНАЧЕ ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1))
	|	КОНЕЦ КАК ДатаСобытия,
	|	Встреча.Тема КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)) = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВЫБОР
	|					КОГДА ДОБАВИТЬКДАТЕ(Встреча.ДатаОкончания, ЧАС, 1) < &ТекущаяДата
	|						ТОГДА &Просроченное
	|					ИНАЧЕ &Текущее
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)) > &ТекущаяДата
	|					ТОГДА &Предстоящее
	|				КОГДА ДОБАВИТЬКДАТЕ(ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)), ЧАС, 1) < &ТекущаяДата
	|					ТОГДА &Просроченное
	|				ИНАЧЕ &Текущее
	|			КОНЕЦ
	|	КОНЕЦ КАК Статус,
	|	NULL КАК Партнер,
	|	Встреча.Ответственный КАК Ответственный
	|%ТекстПоместить%
	|ИЗ
	|	Документ.Встреча КАК Встреча
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий
	|		ПО Встреча.Ссылка = ПредметыПапкиВзаимодействий.Взаимодействие
	|ГДЕ
	|	НЕ Встреча.ПометкаУдаления
	|	И НЕ ЕСТЬNULL(ПредметыПапкиВзаимодействий.Рассмотрено, Ложь)
	|	И Встреча.ДатаОкончания < &ТекущаяДата 
	|	И ВЫБОР
	|			КОГДА ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)) = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)) < &ДатаОкончания
	|	КОНЕЦ
	|	%ТекстУсловияОтбор%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Встреча.Ссылка,
	|	Встреча.Ссылка,
	|	&НазначеннаяВстреча,
	|	Встреча.Дата,
	|	Встреча.ДатаНачала,
	|	Встреча.Тема,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА Встреча.ДатаНачала > &ТекущаяДата
	|			ТОГДА &Предстоящее
	|		ИНАЧЕ &Текущее
	|	КОНЕЦ,
	|	NULL КАК Партнер,
	|	Встреча.Ответственный КАК Ответственный
	|ИЗ
	|	Документ.Встреча КАК Встреча
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий
	|		ПО Встреча.Ссылка = ПредметыПапкиВзаимодействий.Взаимодействие
	|ГДЕ
	|	НЕ Встреча.ПометкаУдаления
	|	И &ТекущаяДата < Встреча.ДатаОкончания 
	|	И Встреча.ДатаНачала < &ДатаОкончания 
	|	%ТекстУсловияОтборСУчастниками%";
	
	Запрос.УстановитьПараметр("РассмотретьВcтречу",НСтр("ru='Отработать результаты встречи';uk='Відпрацювати результати зустрічі'"));
	Запрос.УстановитьПараметр("НазначеннаяВстреча",НСтр("ru='Прийти на встречу';uk='Прийти на зустріч'"));
	
	ДобавитьЗапросПоЗадачам(ТекстЗапроса,"Документ.Встреча",СтруктураФормированияОтчета);
	
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияОтбор ="
		|И  Встреча.Ответственный " + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
		ТекстУсловияОтборСУчастниками ="
		|И Встреча.Ответственный " + СтруктураФормированияОтчета.ТекстУсловияПоПользователям + "
		|ИЛИ Встреча.Ссылка В
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ВстречаУчастники.Ссылка
		|	ИЗ
		|		Документ.Встреча.Участники КАК ВстречаУчастники
		|	ГДЕ
		|		ВстречаУчастники.Контакт " +СтруктураФормированияОтчета.ТекстУсловияПоПользователям + ")"
		
	Иначе
		
		ТекстУсловияОтбор = "";
		ТекстУсловияОтборСУчастниками = "";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтбор%",ТекстУсловияОтбор);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтборСУчастниками%",ТекстУсловияОтборСУчастниками);
	ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса,СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий);
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Документ.Встреча");
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТелефонныеЗвонки(Запрос, СтруктураФормированияОтчета)

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТелефонныйЗвонок.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ТелефонныйЗвонок.Ссылка КАК Предмет,
	|	&РассмотретьТелефонныйЗвонок КАК ТипСобытия,
	|	ТелефонныйЗвонок.Дата КАК ДатаОбъектаСобытия,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)) = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ТелефонныйЗвонок.Дата
	|		ИНАЧЕ ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1))
	|	КОНЕЦ КАК ДатаСобытия,
	|	ТелефонныйЗвонок.Тема КАК Описание,
	|	ВЫБОР 
	|		КОГДА ТелефонныйЗвонок.Входящий
	|			ТОГДА &Входящий
	|		ИНАЧЕ &Исходящий
	|	КОНЕЦ КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)) = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВЫБОР
	|					КОГДА ДОБАВИТЬКДАТЕ(ТелефонныйЗвонок.Дата, ЧАС, 1) < &ТекущаяДата
	|						ТОГДА &Просроченное
	|					ИНАЧЕ &Текущее
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)) > &ТекущаяДата
	|					ТОГДА &Предстоящее
	|				КОГДА ДОБАВИТЬКДАТЕ(ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)), ЧАС, 1) < &ТекущаяДата
	|					ТОГДА &Просроченное
	|				ИНАЧЕ &Текущее
	|			КОНЕЦ
	|	КОНЕЦ КАК Статус,
	|	ТелефонныйЗвонок.АбонентКонтакт КАК Партнер,
	|	ТелефонныйЗвонок.Ответственный КАК Ответственный
	|%ТекстПоместить%
	|ИЗ
	|	Документ.ТелефонныйЗвонок КАК ТелефонныйЗвонок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий
	|		ПО ТелефонныйЗвонок.Ссылка = ПредметыПапкиВзаимодействий.Взаимодействие
	|ГДЕ
	|	НЕ ТелефонныйЗвонок.ПометкаУдаления
	|	И (НЕ ЕСТЬNULL(ПредметыПапкиВзаимодействий.Рассмотрено, Ложь))
	|	И ВЫБОР
	|			КОГДА ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)) = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ТелефонныйЗвонок.Дата < &ДатаОкончания
	|			ИНАЧЕ ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)) < &ДатаОкончания
	|	КОНЕЦ 
	|	%ТекстУсловияОтбор%";
	
	Запрос.УстановитьПараметр("РассмотретьТелефонныйЗвонок",НСтр("ru='Отработать телефонный звонок';uk='Відпрацювати телефонний дзвінок'"));
	Запрос.УстановитьПараметр("Входящий",НСтр("ru='Входящий';uk='Вхідний'"));
	Запрос.УстановитьПараметр("Исходящий",НСтр("ru='Исходящий';uk='Вихідний'"));
	
	ДобавитьЗапросПоЗадачам(ТекстЗапроса,"Документ.ТелефонныйЗвонок",СтруктураФормированияОтчета);
	
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияОтбор ="
		|И ТелефонныйЗвонок.Ответственный" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
	Иначе
		
		ТекстУсловияОтбор = "";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтбор%",ТекстУсловияОтбор);
	ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса,СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий);
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Документ.ТелефонныйЗвонок");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаЗапланированныеВзаимодействия(Запрос, СтруктураФормированияОтчета)

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗапланированноеВзаимодействие.Ссылка КАК СсылкаНаОбъектСобытия,
	|	ЗапланированноеВзаимодействие.Ссылка КАК Предмет,
	|	&РассмотретьЗапланированноеВзаимодействие КАК ТипСобытия,
	|	ЗапланированноеВзаимодействие.Дата КАК ДатаОбъектаСобытия,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)) = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ЗапланированноеВзаимодействие.Дата
	|		ИНАЧЕ ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1))
	|	КОНЕЦ КАК ДатаСобытия,
	|	ЗапланированноеВзаимодействие.Тема КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)) = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВЫБОР
	|					КОГДА ДОБАВИТЬКДАТЕ(ЗапланированноеВзаимодействие.Дата, ЧАС, 1) < &ТекущаяДата
	|						ТОГДА &Просроченное
	|					ИНАЧЕ &Текущее
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)) > &ТекущаяДата
	|					ТОГДА &Предстоящее
	|				КОГДА ДОБАВИТЬКДАТЕ(ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)), ЧАС, 1) < &ТекущаяДата
	|					ТОГДА &Просроченное
	|				ИНАЧЕ &Текущее
	|			КОНЕЦ
	|	КОНЕЦ КАК Статус,
	|	NULL КАК Партнер,
	|	ЗапланированноеВзаимодействие.Ответственный КАК Ответственный
	|%ТекстПоместить%
	|ИЗ
	|	Документ.ЗапланированноеВзаимодействие КАК ЗапланированноеВзаимодействие
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредметыПапкиВзаимодействий КАК ПредметыПапкиВзаимодействий
	|		ПО ЗапланированноеВзаимодействие.Ссылка = ПредметыПапкиВзаимодействий.Взаимодействие
	|ГДЕ
	|	НЕ ЗапланированноеВзаимодействие.ПометкаУдаления
	|	И (НЕ ЕСТЬNULL(ПредметыПапкиВзаимодействий.Рассмотрено, Ложь)) 
	|	И ВЫБОР
	|			КОГДА ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)) = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ЗапланированноеВзаимодействие.Дата < &ДатаОкончания
	|			ИНАЧЕ ЕСТЬNULL(ПредметыПапкиВзаимодействий.РассмотретьПосле, ДатаВремя(1,1,1)) < &ДатаОкончания
	|	КОНЕЦ 
	|	%ТекстУсловияОтбор%";
	
	Запрос.УстановитьПараметр("РассмотретьЗапланированноеВзаимодействие",НСтр("ru='Отработать запланированное взаимодействие';uk='Відпрацювати заплановану взаємодію'"));
	
	ДобавитьЗапросПоЗадачам(ТекстЗапроса,"Документ.ЗапланированноеВзаимодействие",СтруктураФормированияОтчета);
	
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияОтбор ="
		|И ЗапланированноеВзаимодействие.Ответственный" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
	Иначе
		
		ТекстУсловияОтбор = "";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтбор%",ТекстУсловияОтбор);
	ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса,СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий);
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Документ.ЗапланированноеВзаимодействие");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаДниРожденияКонтактныхЛиц(Запрос,СтруктураФормированияОтчета)

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	КонтактныеЛицаПартнеров.Ссылка КАК СсылкаНаОбъектСобытия,
	|	КонтактныеЛицаПартнеров.Ссылка КАК Предмет,
	|	&ДеньРожденияКонтактногоЛица КАК ТипСобытия,
	|	КонтактныеЛицаПартнеров.ДатаРождения КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(КонтактныеЛицаПартнеров.ДатаРождения, ГОД, ГОД(&ТекущаяДата) - ГОД(КонтактныеЛицаПартнеров.ДатаРождения)),ДЕНЬ) КАК ДатаСобытия,
	|	КонтактныеЛицаПартнеров.Наименование КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(КонтактныеЛицаПартнеров.ДатаРождения, ГОД, ГОД(&ТекущаяДата) - ГОД(КонтактныеЛицаПартнеров.ДатаРождения)), ДЕНЬ) = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Текущее
	|		ИНАЧЕ &Предстоящее
	|	КОНЕЦ КАК Статус,
	|	Партнеры.Ссылка КАК Партнер,
	|	Партнеры.ОсновнойМенеджер КАК Ответственный
	|%ТекстПоместить%
	|ИЗ
	|	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Партнеры КАК Партнеры
	|		ПО КонтактныеЛицаПартнеров.Владелец = Партнеры.Ссылка
	|ГДЕ
	|	(КонтактныеЛицаПартнеров.ДатаПрекращенияСвязи = ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ КонтактныеЛицаПартнеров.ДатаПрекращенияСвязи > &ТекущаяДата)
	|	И НЕ КонтактныеЛицаПартнеров.ПометкаУдаления
	|	И КонтактныеЛицаПартнеров.ДатаРождения <> ДАТАВРЕМЯ(1, 1, 1)
	|	И НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(КонтактныеЛицаПартнеров.ДатаРождения, ГОД, ГОД(&ТекущаяДата) - ГОД(КонтактныеЛицаПартнеров.ДатаРождения)), ДЕНЬ) >= НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|	И ДОБАВИТЬКДАТЕ(КонтактныеЛицаПартнеров.ДатаРождения, ГОД, ГОД(&ТекущаяДата) - ГОД(КонтактныеЛицаПартнеров.ДатаРождения)) < &ДатаОкончания
	|	%ТекстУсловияОтбор%
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	Партнеры.Ссылка КАК СсылкаНаОбъектСобытия,
	|	Партнеры.Ссылка КАК Предмет,
	|	&ДеньРожденияПартнера КАК ТипСобытия,
	|	Партнеры.ДатаРождения КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(Партнеры.ДатаРождения, ГОД, ГОД(&ТекущаяДата) - ГОД(Партнеры.ДатаРождения)),ДЕНЬ) КАК ДатаСобытия,
	|	Партнеры.Наименование КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Партнеры.ДатаРождения, ГОД, ГОД(&ТекущаяДата) - ГОД(Партнеры.ДатаРождения)), ДЕНЬ) = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|			ТОГДА &Текущее
	|		ИНАЧЕ &Предстоящее
	|	КОНЕЦ КАК Статус,
	|	Партнеры.Ссылка КАК Партнер,
	|	Партнеры.ОсновнойМенеджер КАК Ответственный
	|ИЗ
	|	Справочник.Партнеры КАК Партнеры
	|ГДЕ
	|	НЕ Партнеры.ПометкаУдаления
	|	И Партнеры.ДатаРождения <> ДАТАВРЕМЯ(1, 1, 1)
	|	И НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(Партнеры.ДатаРождения, ГОД, ГОД(&ТекущаяДата) - ГОД(Партнеры.ДатаРождения)), ДЕНЬ) >= НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|	И ДОБАВИТЬКДАТЕ(Партнеры.ДатаРождения, ГОД, ГОД(&ТекущаяДата) - ГОД(Партнеры.ДатаРождения)) < &ДатаОкончания 
	|	%ТекстУсловияОтбор%";
	
	Запрос.УстановитьПараметр("ДеньРожденияКонтактногоЛица",НСтр("ru='Поздравить с днем рождения контактное лицо партнера';uk='Привітати з днем народження контактну особу партнера'"));
	Запрос.УстановитьПараметр("ДеньРожденияПартнера",НСтр("ru='Поздравить с днем рождения партнера';uk='Привітати з днем народження партнера'"));
	
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияОтбор ="
		|И  Партнеры.ОсновнойМенеджер" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
	Иначе
		
		ТекстУсловияОтбор = "";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтбор%",ТекстУсловияОтбор);
	ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса,СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий);
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Справочник.КонтактныеЛицаПартнеров");
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Справочник.Партнеры");
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаАктыПриемкиКлиента(Запрос,СтруктураФормированияОтчета)

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	АктОРасхожденияхПослеОтгрузки.Ссылка КАК СсылкаНаОбъектСобытия,
	|	АктОРасхожденияхПослеОтгрузки.Ссылка КАК Предмет,
	|	&СогласованиеАктаОРасхожденияхПослеОтгрузки КАК ТипСобытия,
	|	АктОРасхожденияхПослеОтгрузки.Дата КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ) КАК ДатаСобытия,
	|	АктОРасхожденияхПослеОтгрузки.Представление КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	&Текущее КАК Статус,
	|	АктОРасхожденияхПослеОтгрузки.Партнер КАК Партнер,
	|	АктОРасхожденияхПослеОтгрузки.Менеджер КАК Ответственный
	|%ТекстПоместить%
	|ИЗ
	|	Документ.АктОРасхожденияхПослеОтгрузки КАК АктОРасхожденияхПослеОтгрузки
	|ГДЕ
	|	АктОРасхожденияхПослеОтгрузки.Проведен
	|	И АктОРасхожденияхПослеОтгрузки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.НеСогласовано)
	|	%ТекстУсловияОтбор%
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АктОРасхожденияхПослеОтгрузки.Ссылка КАК СсылкаНаОбъектСобытия,
	|	АктОРасхожденияхПослеОтгрузки.Ссылка КАК Предмет,
	|	&ОтработкаАктаРасхожденийПослеОтгрузки КАК ТипСобытия,
	|	АктОРасхожденияхПослеОтгрузки.Дата КАК ДатаОбъектаСобытия,
	|	КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ) КАК ДатаСобытия,
	|	АктОРасхожденияхПослеОтгрузки.Представление КАК Описание,
	|	NULL КАК ДопРеквизитОписание1,
	|	NULL КАК ДопРеквизитОписание2,
	|	&Текущее КАК Статус,
	|	АктОРасхожденияхПослеОтгрузки.Партнер КАК Партнер,
	|	АктОРасхожденияхПослеОтгрузки.Менеджер КАК Ответственный
	|ИЗ
	|	Документ.АктОРасхожденияхПослеОтгрузки КАК АктОРасхожденияхПослеОтгрузки
	|ГДЕ
	|	АктОРасхожденияхПослеОтгрузки.Проведен
	|	И АктОРасхожденияхПослеОтгрузки.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Согласовано)
	|	%ТекстУсловияОтбор%
	|
	|	%ТекстУсловияОтбор%";
	
	Запрос.УстановитьПараметр("СогласованиеАктаОРасхожденияхПослеОтгрузки",НСтр("ru='Согласовать акт расхождений после отгрузки';uk='Погодити акт розбіжностей після відвантаження'"));
	Запрос.УстановитьПараметр("ОтработкаАктаРасхожденийПослеОтгрузки",НСтр("ru='Отработать акт расхождений после отгрузки';uk='Відпрацювати акт розбіжностей після відвантаження'"));
	
	ДобавитьЗапросПоЗадачам(ТекстЗапроса,"Документ.КоммерческоеПредложениеКлиенту",СтруктураФормированияОтчета);
	
	Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
		
		ТекстУсловияОтбор ="
		|И АктОРасхожденияхПослеОтгрузки.Менеджер" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
		
	Иначе
		
		ТекстУсловияОтбор = "";
		
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияОтбор%",ТекстУсловияОтбор);
	ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса,СтруктураФормированияОтчета.ТекущийНомерПодзапросаПоВидамСобытий);
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Документ.АктОРасхожденияхПослеОтгрузки");
	
	Возврат ТекстЗапроса;

КонецФункции

Процедура ОбработатьТекстПодзапросаПоВидуСобытия(ТекстЗапроса,ТекущийНомерПодзапросаПоВидамСобытий);
	
	Если ТекущийНомерПодзапросаПоВидамСобытий <> 1 Тогда
		
		ТекстЗапроса = "
		|;
		|
		|/////////////////////////////////////////////////////////
		|
		|" + ТекстЗапроса;
	
	КонецЕсли;
	
	ТекстПоместить = " ПОМЕСТИТЬ ДанныеПоВидуСобытия" + Строка(ТекущийНомерПодзапросаПоВидамСобытий);
	ТекстЗапроса   = СтрЗаменить(ТекстЗапроса,"%ТекстПоместить%",ТекстПоместить);

КонецПроцедуры

Процедура ДобавитьЗапросПоЗадачам(ТекстЗапроса,ИмяОбъектаМетаданных,СтруктураФормированияОтчета)
	
	Если СтруктураФормированияОтчета.ЕстьПравоЗадачаИсполнителя И СтруктураФормированияОтчета.ИспользоватьБизнесПроцессыИЗадачи Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗадачаИсполнителя.Ссылка КАК СсылкаНаОбъектСобытия,
		|	ЗадачаИсполнителя.Предмет КАК Предмет,
		|	ЗадачаИсполнителя.Наименование КАК ТипСобытия,
		|	ЗадачаИсполнителя.Дата КАК ДатаОбъектаСобытия,
		|	ВЫБОР
		|	КОГДА ЗадачаИсполнителя.СрокИсполнения = ДАТАВРЕМЯ(1, 1, 1)
		|		ТОГДА КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ)
		|		ИНАЧЕ ЗадачаИсполнителя.СрокИсполнения
		|	КОНЕЦ КАК ДатаСобытия,
		|	ПРЕДСТАВЛЕНИЕ(ЗадачаИсполнителя.Предмет) КАК Описание,
		|	%ТекстДопРеквизит1% КАК ДопРеквизитОписание1,
		|	%ТекстДопРеквизит2% КАК ДопРеквизитОписание2,
		|	ВЫБОР
		|		КОГДА ЗадачаИсполнителя.СрокИсполнения = ДАТАВРЕМЯ(1, 1, 1)
		|		ТОГДА &Текущее
		|		ИНАЧЕ ВЫБОР
		|			КОГДА ЗадачаИсполнителя.СрокИсполнения < &ТекущаяДата
		|				ТОГДА &Просроченное
		|			КОГДА НАЧАЛОПЕРИОДА(ЗадачаИсполнителя.СрокИсполнения, ДЕНЬ) = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
		|				ТОГДА &Текущее
		|			ИНАЧЕ &Предстоящее
		|		КОНЕЦ
		|	КОНЕЦ КАК Статус,
		|	ЗадачаИсполнителя.Предмет.Партнер КАК Партнер,
		|	ЗадачаИсполнителя.Исполнитель КАК Ответственный
		|ИЗ
		|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
		|ГДЕ
		|	ЗадачаИсполнителя.СостояниеБизнесПроцесса = ЗНАЧЕНИЕ(Перечисление.СостоянияБизнесПроцессов.Активен)
		|		И НЕ ЗадачаИсполнителя.Выполнена
		|		И ЗадачаИсполнителя.Предмет ССЫЛКА %ИмяОбъектаМетаданных%
		|		И ВЫБОР
		|			КОГДА ЗадачаИсполнителя.СрокИсполнения = ДАТАВРЕМЯ(1, 1, 1)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЗадачаИсполнителя.СрокИсполнения < &ДатаОкончания
		|		КОНЕЦ 
		|	%ТекстУсловияЗадачаОтбор%";
		
		Если НЕ ПустаяСтрока(СтруктураФормированияОтчета.ТекстУсловияПоПользователям) Тогда
			
			ТекстУсловияЗадачаОтбор ="
			|И  ЗадачаИсполнителя.Исполнитель" + СтруктураФормированияОтчета.ТекстУсловияПоПользователям;
			
			Если  СтруктураФормированияОтчета.ЕстьПравоРолиИсполнителей Тогда
			
			ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ЗадачаИсполнителя.Ссылка,
			|	ЗадачаИсполнителя.Предмет,
			|	ЗадачаИсполнителя.Наименование,
			|	ЗадачаИсполнителя.Дата,
			|	ВЫБОР
			|		КОГДА ЗадачаИсполнителя.СрокИсполнения = ДАТАВРЕМЯ(1, 1, 1)
			|		ТОГДА НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
			|		ИНАЧЕ ЗадачаИсполнителя.СрокИсполнения
			|	КОНЕЦ,
			|	ЗадачаИсполнителя.Предмет КАК Описание,
			|	%ТекстДопРеквизит1%,
			|	%ТекстДопРеквизит2%,
			|	ВЫБОР
			|		КОГДА ЗадачаИсполнителя.СрокИсполнения = ДАТАВРЕМЯ(1, 1, 1)
			|			ТОГДА &Текущее
			|		ИНАЧЕ ВЫБОР
			|		КОГДА ЗадачаИсполнителя.СрокИсполнения < &ТекущаяДата
			|			ТОГДА &Просроченное
			|		КОГДА НАЧАЛОПЕРИОДА(ЗадачаИсполнителя.СрокИсполнения, ДЕНЬ) = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
			|				ТОГДА &Текущее
			|			ИНАЧЕ &Предстоящее
			|		КОНЕЦ
			|	КОНЕЦ,
			|	ЗадачаИсполнителя.Предмет.Партнер,
			|	ВЫБОР
			|		КОГДА ЗадачаИсполнителя.Исполнитель = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
			|			ТОГДА ЗадачаИсполнителя.РольИсполнителя
			|		ИНАЧЕ ЗадачаИсполнителя.Исполнитель
			|	КОНЕЦ 
			|ИЗ
			|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборПоПользователям КАК ОтборПоПользователям
			|	ПО (ЗадачаИсполнителя.РольИсполнителя = ОтборПоПользователям.РольИсполнителя
			|			И ЗадачаИсполнителя.ОсновнойОбъектАдресации = ОтборПоПользователям.ОсновнойОбъектАдресации
			|			И ЗадачаИсполнителя.ДополнительныйОбъектАдресации = ОтборПоПользователям.ДополнительныйОбъектАдресации)
			|ГДЕ
			|	ЗадачаИсполнителя.СостояниеБизнесПроцесса = ЗНАЧЕНИЕ(перечисление.СостоянияБизнесПроцессов.Активен)
			|	И НЕ ЗадачаИсполнителя.Выполнена
			|	И ЗадачаИсполнителя.Предмет ССЫЛКА %ИмяОбъектаМетаданных%
			|	И ВЫБОР
			|		КОГДА ЗадачаИсполнителя.СрокИсполнения = ДАТАВРЕМЯ(1, 1, 1)
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЗадачаИсполнителя.СрокИсполнения < &ДатаОкончания
			|	КОНЕЦ";
			
			КонецЕсли;
			
		Иначе
			
			ТекстУсловияЗадачаОтбор = "";
			
		КонецЕсли;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстУсловияЗадачаОтбор%",ТекстУсловияЗадачаОтбор);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ИмяОбъектаМетаданных%",ИмяОбъектаМетаданных);
		
		Если ИмяОбъектаМетаданных = "Справочник.СоглашенияСКлиентами" ИЛИ ИмяОбъектаМетаданных = "Справочник.СоглашенияСПоставщиками" Тогда
			
			ТекстДопРеквизит1 = "ЗадачаИсполнителя.Предмет.Номер";
			ТекстДопРеквизит2 = "NULL";
			
		ИначеЕсли ИмяОбъектаМетаданных = "Справочник.ДоговорыКонтрагентов" Тогда
			
			ТекстДопРеквизит1 = "ПРЕДСТАВЛЕНИЕ(ЗадачаИсполнителя.Предмет.ХозяйственнаяОперация)";
			ТекстДопРеквизит2 = "NULL";
			
		ИначеЕсли ИмяОбъектаМетаданных = "Документ.ЭлектронноеПисьмоВходящее" Тогда
			
			ТекстДопРеквизит1 = "ВЫРАЗИТЬ(ЗадачаИсполнителя.Предмет.Тема КАК СТРОКА(1024))";
			ТекстДопРеквизит2 = "ЗадачаИсполнителя.Предмет.Дата";
			
		ИначеЕсли ИмяОбъектаМетаданных = "Документ.ЭлектронноеПисьмоИсходящее" Тогда
			
			ТекстДопРеквизит1 = "ВЫРАЗИТЬ(ЗадачаИсполнителя.Предмет.Тема КАК СТРОКА(1024))";
			ТекстДопРеквизит2 = "ЗадачаИсполнителя.Предмет.ДатаОтправления";
			
		ИначеЕсли ИмяОбъектаМетаданных = "Документ.Встреча" Тогда
			
			ТекстДопРеквизит1 = "ВЫРАЗИТЬ(ЗадачаИсполнителя.Предмет.Тема КАК СТРОКА(1024))";
			ТекстДопРеквизит2 = "ЗадачаИсполнителя.Предмет.Дата";
			
		ИначеЕсли ИмяОбъектаМетаданных = "Документ.ТелефонныйЗвонок" Тогда
			
			ТекстДопРеквизит1 = "ВЫРАЗИТЬ(ЗадачаИсполнителя.Предмет.Тема КАК СТРОКА(1024))";
			ТекстДопРеквизит2 = "ЗадачаИсполнителя.Предмет.Дата";
			
		ИначеЕсли ИмяОбъектаМетаданных = "Документ.ЗапланированноеВзаимодействие" Тогда
			
			ТекстДопРеквизит1 = "ВЫРАЗИТЬ(ЗадачаИсполнителя.Предмет.Тема КАК СТРОКА(1024))";
			ТекстДопРеквизит2 = "ЗадачаИсполнителя.Предмет.Дата";
			
		Иначе
			
			ТекстДопРеквизит1 = "NULL";
			ТекстДопРеквизит2 = "NULL";
			
		КонецЕсли;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстДопРеквизит1%",ТекстДопРеквизит1);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ТекстДопРеквизит2%",ТекстДопРеквизит2);
		
	КонецЕсли;
	
	ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета,"Задача.ЗадачаИсполнителя");
	
КонецПроцедуры

Процедура ДобавитьВМассивПроверяемыхНаПредметДоступаТипов(СтруктураФормированияОтчета, ИмяМетаданных)
	
	Если СтруктураФормированияОтчета.ТипыОбъектовДляПроверкиДоступа.Найти(ИмяМетаданных) = Неопределено Тогда
		
		СтруктураФормированияОтчета.ТипыОбъектовДляПроверкиДоступа.Добавить(ИмяМетаданных);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ВыводДанных

Процедура ВывестиДанныеВТаблицу(Результат, СтруктураФормированияОтчета, ТаблицаОтчета)
	
	ПартнерыНеактуальныеРасчеты.Очистить();
	
	ТаблицаОтчета.Очистить();
	Макет = ПолучитьМакет("ВыводДанных");
	
	ОбластьПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
	ОбластьЗаголовок    = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка        = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока       = Макет.ПолучитьОбласть("Строка");
	ОбластьГруппировка  = Макет.ПолучитьОбласть("СтрокаГруппировка");
	
	ТаблицаОтчета.Вывести(ОбластьПустаяСтрока);
	ОбластьЗаголовок.Параметры.ТекстЗаголовка = НСтр("ru='Календарь событий';uk='Календар подій'");
	ТаблицаОтчета.Вывести(ОбластьЗаголовок);
	ТаблицаОтчета.Вывести(ОбластьПустаяСтрока);

	ТаблицаОтчета.Вывести(ОбластьШапка);
	
	ТекущаяДатаПредстоящее = Дата(1,1,1);
	ЕстьГруппировкаПредстоящее = ЛОЖЬ;
	ЕстьГруппировкаДалее       = ЛОЖЬ;
	
	ВыборкаСтатус = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСтатус.Следующий() Цикл
		
		Если ВыборкаСтатус.Статус = "Предстоящее" Тогда
			
			ОбластьСтрока.Области.СтрокаСобытие.ЦветТекста = ЦветаСтиля.ЦветТекстаОтмененнойСтрокиДокумента;
			ОбластьГруппировка.Области.ГруппировкаЗначение.ЦветТекста = ЦветаСтиля.ЦветТекстаОтмененнойСтрокиДокумента;
			
		Иначе
			Если ВыборкаСтатус.Статус = "Текущее" Тогда
				
				ОбластьСтрока.Области.СтрокаСобытие.ЦветТекста = ЦветаСтиля.ЦветТекстаПоля;
				ОбластьГруппировка.Области.ГруппировкаЗначение.ЦветТекста = ЦветаСтиля.ЦветТекстаПоля;
				ОбластьГруппировка.Параметры.Значение = НСтр("ru='Сегодня';uk='Сьогодні'") + " ( " + Формат(ТекущаяДата(),"ДЛФ=DD") + " ) - " + ВыборкаСтатус.ДатаОбъектаСобытия;
				
			ИначеЕсли ВыборкаСтатус.Статус = "Просроченное" Тогда
				
				ОбластьСтрока.Области.СтрокаСобытие.ЦветТекста = ЦветаСтиля.ПросроченныеДанныеЦвет;
				ОбластьГруппировка.Области.ГруппировкаЗначение.ЦветТекста = ЦветаСтиля.ПросроченныеДанныеЦвет;
				ОбластьГруппировка.Параметры.Значение = НСтр("ru='Просроченные';uk='Прострочені'") + " - " + ВыборкаСтатус.ДатаОбъектаСобытия;
				
			КонецЕсли;
			
			ТаблицаОтчета.Вывести(ОбластьГруппировка);
			ТаблицаОтчета.НачатьГруппуСтрок("Группировка");
			
		КонецЕсли;
		
		ВыборкаДата = ВыборкаСтатус.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДата.Следующий() Цикл
			
			Если (ВыборкаСтатус.Статус = "Предстоящее" И
				ТекущаяДатаПредстоящее - (24*60*60*7) < НачалоДня(ТекущаяДата()) И
				НачалоДня(ВыборкаДата.ДатаСобытия) <> ТекущаяДатаПредстоящее) Тогда
				
				ТекущаяДатаПредстоящее = НачалоДня(ВыборкаДата.ДатаСобытия);
				ТекстГруппировкиПредстоящее = "";
				
				Если НачалоДня(ВыборкаДата.ДатаСобытия) - НачалоДня(ТекущаяДата()) > (24*60*60*7) Тогда
					ТекстГруппировкиПредстоящее = НСтр("ru='Далее...';uk='Далі...'") ;
					ЕстьГруппировкаДалее = Истина;
					
				ИначеЕсли  НачалоДня(ВыборкаДата.ДатаСобытия) - НачалоДня(ТекущаяДата()) = 1 Тогда
					ТекстГруппировкиПредстоящее = НСтр("ru='Завтра';uk='Завтра'") + " ( " + Формат(ВыборкаДата.ДатаСобытия,"ДЛФ=DD") + " ) - " + ВыборкаДата.ДатаОбъектаСобытия;
				Иначе
					ТекстГруппировкиПредстоящее = Строка(Перечисления.ДниНедели.Получить(ДеньНедели(ВыборкаДата.ДатаСобытия) -1)) + " ( " + Формат(ВыборкаДата.ДатаСобытия,"ДЛФ=DD") + " ) - " + ВыборкаДата.ДатаОбъектаСобытия;
				КонецЕсли;
				
				ОбластьГруппировка.Параметры.Значение = ТекстГруппировкиПредстоящее;
				
				Если НЕ ЕстьГруппировкаДалее Тогда
					ЕстьГруппировкаПредстоящее = Истина;
				КонецЕсли;
				ТаблицаОтчета.Вывести(ОбластьГруппировка);
				ТаблицаОтчета.НачатьГруппуСтрок("Группировка");
				
			КонецЕсли;
			
			Выборка = ВыборкаДата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока Выборка.Следующий() Цикл
				
				ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры,Выборка);
				ПреобразоватьПредставлениеПредмета(ОбластьСтрока.Параметры.Описание,Выборка);
				ПреобразоватьЧтоСделать(ОбластьСтрока.Параметры.ТипСобытия, Выборка);
				ОтработатьАктуальностьРасчетов(ОбластьСтрока,Выборка);
				
				ТаблицаОтчета.Вывести(ОбластьСтрока,2);
				
			КонецЦикла;
			
			Если ЕстьГруппировкаПредстоящее Тогда
				ТаблицаОтчета.ЗакончитьГруппуСтрок();
				ЕстьГруппировкаПредстоящее = Ложь;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ВыборкаСтатус.Статус <> "Предстоящее" ИЛИ ЕстьГруппировкаДалее Тогда
			ТаблицаОтчета.ЗакончитьГруппуСтрок();
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаОтчета.ФиксацияСверху = 4;
	
КонецПроцедуры

Процедура ОтработатьАктуальностьРасчетов(ОбластьСтрока,Выборка)
	
	Если Выборка.РасчетыНеактуальныСКлиентом ИЛИ Выборка.РасчетыНеактуальныСПоставщиком Тогда
		
		Если ПартнерыНеактуальныеРасчеты.НайтиПоЗначению(Выборка.Партнер) = Неопределено Тогда
			ПартнерыНеактуальныеРасчеты.Добавить(Выборка.Партнер);
		КонецЕсли;
		
		Если Выборка.РасчетыНеактуальныСКлиентом Тогда
			ЕстьНеактуальныеРасчетыСКлиентами = Истина;
		КонецЕсли;
		
		Если Выборка.РасчетыНеактуальныСПоставщиком Тогда
			ЕстьНеактуальныеРасчетыСПоставщиками = Истина;
		КонецЕсли;
		
		ОбластьСтрока.Области.СтрокаСобытияБезДаты.ЦветТекста = ЦветаСтиля.ЦветТекстаОтмененнойСтрокиДокумента;
		ОбластьСтрока.Параметры.ТипСобытия = НСтр("ru='[Расчет не актуален]';uk='[Розрахунок не актуальний]'") + Символы.ПС + ОбластьСтрока.Параметры.ТипСобытия;
		
	Иначе
		
		ОбластьСтрока.Области.СтрокаСобытияБезДаты.ЦветТекста = ЦветаСтиля.ЦветТекстаПоля;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПреобразоватьПредставлениеПредмета(Описание,Выборка)
	
	Если ТипЗнч(Выборка.Предмет) = Тип("СправочникСсылка.СоглашенияСПоставщиками") ИЛИ
		ТипЗнч(Выборка.Предмет) = Тип("СправочникСсылка.СоглашенияСКлиентами") Тогда
		
		Описание = НСтр("ru='Соглашение с поставщиком';uk='Оферта постачальника'") + " '" + Описание + "'";
		Если НЕ ПустаяСтрока(Выборка.ДопРеквизитОписание1) Тогда
			Описание = Описание + " № " + Выборка.ДопРеквизитОписание1;
		КонецЕсли;
		
		Если Дата(Выборка.ДатаОбъектаСобытия) <> Дата(1,1,1) Тогда
			Описание = Описание + " " + НСтр("ru='от';uk='від'") +" " + Формат(Выборка.ДатаОбъектаСобытия,"ДЛФ=D");
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Выборка.Предмет) = Тип("СправочникСсылка.СделкиСКлиентами") Тогда
		
		Описание = НСтр("ru='Сделка';uk='Угода'") + " '" + Описание + "' " + НСтр("ru='от';uk='від'") + " " + Формат(Выборка.ДатаОбъектаСобытия,"ДЛФ=D");
		
	ИначеЕсли ТипЗнч(Выборка.Предмет) = Тип("СправочникСсылка.Проекты") Тогда
		
		Описание = НСтр("ru='Проект';uk='Проект'") + " '" + Описание + "'";
		
	ИначеЕсли ТипЗнч(Выборка.Предмет) = Тип("СправочникСсылка.МаркетинговыеМероприятия") Тогда
		
		Описание = НСтр("ru='Маркетинговое мероприятие';uk='Маркетинговий захід'") + " '" + Описание + "'";
		
	ИначеЕсли ТипЗнч(Выборка.Предмет) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		
		Описание = НСтр("ru='Договор';uk='Договір'") + " " + ПредставлениеТипаДоговораПоОперации(Выборка.ДопРеквизитОписание1) + " '" + Описание + "'";
		
	ИначеЕсли ТипЗнч(Выборка.Предмет) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
		
		Если ТипЗнч(Выборка.СсылкаНаОбъектСобытия) = Тип("ДокументСсылка.ЭлектронноеПисьмоВходящее") Тогда
			Описание = НСтр("ru='Входящее письмо';uk='Вхідний лист'") + " '" + ?(ПустаяСтрока(Выборка.Описание),НСтр("ru='Тема не указана';uk='Тема не вказана'") + " ",Выборка.Описание) + "' " +
			           НСтр("ru='от';uk='від'") + " " + Выборка.ДатаОбъектаСобытия;
		Иначе
			Описание = НСтр("ru='Входящее письмо';uk='Вхідний лист'") + " '" + ?(ПустаяСтрока(Выборка.ДопРеквизитОписание1),НСтр("ru='Тема не указана';uk='Тема не вказана'") + " ",Выборка.ДопРеквизитОписание1) +
			           "' " + НСтр("ru='от';uk='від'") + " " + Выборка.ДопРеквизитОписание2;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Выборка.Предмет) = Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее") Тогда
		
		Если ТипЗнч(Выборка.СсылкаНаОбъектСобытия) = Тип("ДокументСсылка.ЭлектронноеПисьмоИсходящее") Тогда
			Описание = НСтр("ru='Исходящее письмо';uk='Вихідний лист'") + " '" + 
			           ?(ПустаяСтрока(Выборка.Описание),НСтр("ru='Тема не указана';uk='Тема не вказана'") + " ",Выборка.Описание) + "' " + НСтр("ru='от';uk='від'") + " " + Выборка.ДатаОбъектаСобытия;
		Иначе
			Описание = НСтр("ru='Исходящее письмо';uk='Вихідний лист'") + " '" + 
			           ?(ПустаяСтрока(Выборка.ДопРеквизитОписание1),НСтр("ru='Тема не указана';uk='Тема не вказана'") +" ",Выборка.ДопРеквизитОписание1) + "' " + НСтр("ru='от';uk='від'") +" " + Выборка.ДопРеквизитОписание2;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Выборка.Предмет) = Тип("ДокументСсылка.Встреча") Тогда
		
		Если ТипЗнч(Выборка.СсылкаНаОбъектСобытия) = Тип("ДокументСсылка.Встреча") Тогда
			Описание = НСтр("ru='Встреча';uk='Зустріч'") + " '" + ?(ПустаяСтрока(Выборка.Описание),НСтр("ru='Тема не указана';uk='Тема не вказана'") + " ",Выборка.Описание) + "' " +
			НСтр("ru='от';uk='від'") + " " + Выборка.ДатаОбъектаСобытия;
		Иначе
			Описание = НСтр("ru='Встреча';uk='Зустріч'") + " '" + ?(ПустаяСтрока(Выборка.ДопРеквизитОписание1),НСтр("ru='Тема не указана';uk='Тема не вказана'") + " ",Выборка.ДопРеквизитОписание1) +
			           "' " + НСтр("ru='от';uk='від'") + " " + Выборка.ДопРеквизитОписание2;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Выборка.Предмет) = Тип("ДокументСсылка.ЗапланированноеВзаимодействие") Тогда
		
		Если ТипЗнч(Выборка.СсылкаНаОбъектСобытия) = Тип("ДокументСсылка.ЗапланированноеВзаимодействие") Тогда
			Описание = НСтр("ru='Запланированное взаимодействие';uk='Запланована взаємодія'") + " '" +
			           ?(ПустаяСтрока(Выборка.Описание),НСтр("ru='Тема не указана';uk='Тема не вказана'") + " ",Выборка.Описание) + "' " + НСтр("ru='от';uk='від'") + " " + Выборка.ДатаОбъектаСобытия;
		Иначе
			Описание = НСтр("ru='Запланированное взаимодействие';uk='Запланована взаємодія'") + " '" +
			           ?(ПустаяСтрока(Выборка.ДопРеквизитОписание1),НСтр("ru='Тема не указана';uk='Тема не вказана'") + " ",Выборка.ДопРеквизитОписание1) + "' " + НСтр("ru='от';uk='від'") + " " + Выборка.ДопРеквизитОписание2;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Выборка.Предмет) = Тип("ДокументСсылка.ТелефонныйЗвонок") Тогда
		
		Если ТипЗнч(Выборка.СсылкаНаОбъектСобытия) = Тип("ДокументСсылка.ТелефонныйЗвонок") Тогда
		
			Описание = Выборка.ДопРеквизитОписание1 + НСтр("ru=' тел. звонок';uk=' тел. дзвінок'") + " '" +
			           ?(ПустаяСтрока(Выборка.Описание),НСтр("ru='Тема не указана';uk='Тема не вказана'") + " ",Выборка.Описание) + "' " + НСтр("ru='от';uk='від'") + " " + Выборка.ДатаОбъектаСобытия;
		
		Иначе
		
			Описание = НСтр("ru='Телефонный звонок';uk='Телефонний дзвінок'") + " '" + ?(ПустаяСтрока(Выборка.ДопРеквизитОписание1),НСтр("ru='Тема не указана';uk='Тема не вказана'") + " ",Выборка.ДопРеквизитОписание1) +
			           "' " + НСтр("ru='от';uk='від'") + " " + Выборка.ДопРеквизитОписание2;
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Выборка.Предмет) = Тип("СправочникСсылка.ЗадачиПроектов") Тогда
		
		Если ТипЗнч(Выборка.ДопРеквизитОписание1) = Тип("СправочникСсылка.ПретензииКлиентов") Тогда
			Описание = НСтр("ru='Задача проекта по претензии клиента';uk='Задача проекту по претензії клієнта'") + " '" + Описание + "'";
		ИначеЕсли ТипЗнч(Выборка.ДопРеквизитОписание1) = Тип("СправочникСсылка.СделкиСКлиентами") Тогда
			Описание = НСтр("ru='Задача проекта по сделке';uk='Задача проекту з угоди'")  + " '" + Описание + "'";
		ИначеЕсли ТипЗнч(Выборка.ДопРеквизитОписание1) = Тип("СправочникСсылка.МаркетинговыеМероприятия") Тогда
			Описание = НСтр("ru='Задача проекта по маркетинговому мероприятию';uk='Задача проекту з маркетингового заходу'")  + " '" + Описание + "'";
		Иначе
			Описание = НСтр("ru='Задача проекта';uk='Задача проекту'") + " '" + Описание + "'";
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПреобразоватьЧтоСделать(ТипСобытия, Выборка)
	
	Если ТипЗнч(Выборка.Предмет) = Тип("СправочникСсылка.ЗадачиПроектов") Тогда
		Если ТипЗнч(Выборка.ДопРеквизитОписание1) = Тип("СправочникСсылка.ПретензииКлиентов") Тогда
			ТипСобытия = ТипСобытия + НСтр("ru='по претензии клиента';uk='за претензією клієнта'");
		ИначеЕсли ТипЗнч(Выборка.ДопРеквизитОписание1) = Тип("СправочникСсылка.СделкиСКлиентами") Тогда
			ТипСобытия = ТипСобытия + НСтр("ru='по сделке';uk='за угодою'");
		ИначеЕсли ТипЗнч(Выборка.ДопРеквизитОписание1) = Тип("СправочникСсылка.МаркетинговыеМероприятия") Тогда
			ТипСобытия = ТипСобытия + НСтр("ru=' по маркетинговому мероприятию';uk=' за маркетинговим заходом'");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ПредставлениеТипаДоговораПоОперации(Операция)
	
	Если Операция = Перечисления.ХозяйственныеОперации.РеализацияКлиенту Тогда
		Возврат НСтр("ru='с покупателем';uk='з покупцем'");
	ИначеЕсли Операция = Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию Тогда
		Возврат НСтр("ru='с комиссионером';uk='з комісіонером'");
	ИначеЕсли Операция = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика Тогда
		Возврат НСтр("ru='с поставщиком';uk='з постачальником'");
	ИначеЕсли Операция = Перечисления.ХозяйственныеОперации.ПриемНаКомиссию Тогда
		Возврат НСтр("ru='с комитентом';uk='з комітентом'");
	ИначеЕсли Операция = Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту Тогда
		Возврат НСтр("ru='импорта';uk='імпорту'");
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область Прочее

Процедура СформироватьОтчет(ТаблицаОтчета, СтруктураФормированияОтчета)  Экспорт
	
	Результат = РезультатЗапросаПоДаннымОтчета(СтруктураФормированияОтчета);
	ВывестиДанныеВТаблицу(Результат, СтруктураФормированияОтчета, ТаблицаОтчета);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли