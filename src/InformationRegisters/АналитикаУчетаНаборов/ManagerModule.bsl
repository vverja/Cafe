#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция получает элемент справочника - ключ аналитики учета номенклатураы.
//
// Параметры:
//	ПараметрыАналитики - Выборка или Структура с полями "Номенклатура, Характеристика".
//
// Возвращаемое значение:
//	СправочникСсылка.КлючиАналитикиУчетаНоменклатуры - Созданный элемент справочника
//
Функция ЗначениеКлючаАналитики(ПараметрыАналитики) Экспорт

	МенеджерЗаписи = ПолучитьМенеджерЗаписи(ПараметрыАналитики);
	
	Если МенеджерЗаписи <> Неопределено Тогда
		МенеджерЗаписи.Прочитать();

		Если МенеджерЗаписи.Выбран() Тогда
			Результат = МенеджерЗаписи.КлючАналитики;
		Иначе
			Результат = СоздатьКлючАналитики(ПараметрыАналитики);
		КонецЕсли;

		Возврат Результат;
	КонецЕсли;

КонецФункции

// Функция получает элемент справочника - ключ аналитики учета.
//
// Параметры:
//	ПараметрыАналитики - Выборка или Структура  с полями "Номенклатура, Характеристика, Склад".
//
// Возвращаемое значение:
//	СправочникСсылка.КлючиАналитикиУчетаНоменклатуры - Созданный элемент справочника
//
Функция СоздатьКлючАналитики(ПараметрыАналитики) Экспорт
	
	Если ЗначениеЗаполнено(ПараметрыАналитики.НоменклатураНабора) Тогда
		МенеджерЗаписи = ПолучитьМенеджерЗаписи(ПараметрыАналитики);
		
		Если МенеджерЗаписи <> Неопределено Тогда

			// Создание нового ключа аналитики.
			СправочникОбъект = Справочники.КлючиАналитикиУчетаНаборов.СоздатьЭлемент();
			СправочникОбъект.Наименование = ПолучитьПолноеНаименованиеКлючаАналитики(МенеджерЗаписи);
			ЗаполнитьЗначенияСвойств(СправочникОбъект, ПараметрыАналитики, "НоменклатураНабора, ХарактеристикаНабора");
			СправочникОбъект.Записать();

			Результат = СправочникОбъект.Ссылка;

			МенеджерЗаписи.КлючАналитики = Результат;
			МенеджерЗаписи.Записать(Ложь);

			Возврат Результат;
			
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

// Заполняет поле АналитикаУчетаНаборов в коллекции, содержащей номенклатуру, характеристику.
//
// Параметры:
//
//	Коллекция - Коллекция типа ТабличнаяЧасть
//
Процедура ЗаполнитьВКоллекции(Коллекция) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИменаПолей = ИменаПолейКоллекцииПоУмолчанию();
	Если Истина Тогда ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Коллекция.НомерСтроки - 1 КАК Индекс,
		|	&ПолеАналитика КАК АналитикаУчетаНаборов,
		|	&ПолеНоменклатура КАК НоменклатураНабора,
		|	&ПолеХарактеристика КАК ХарактеристикаНабора
		|
		|ПОМЕСТИТЬ Коллекция
		|ИЗ &Коллекция КАК Коллекция;
		|
		|ВЫБРАТЬ
		|	Коллекция.Индекс,
		|	Аналитика.КлючАналитики КАК АналитикаУчетаНаборов,
		|	Коллекция.НоменклатураНабора,
		|	Коллекция.ХарактеристикаНабора
		|ИЗ
		|	Коллекция КАК Коллекция
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СН
		|		ПО СН.Ссылка = Коллекция.НоменклатураНабора
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНаборов КАК Аналитика
		|		ПО Аналитика.НоменклатураНабора = Коллекция.НоменклатураНабора И Аналитика.ХарактеристикаНабора = Коллекция.ХарактеристикаНабора
		|ГДЕ
		|	Аналитика.КлючАналитики ЕСТЬ NULL ИЛИ Аналитика.КлючАналитики <> Коллекция.АналитикаУчетаНаборов
		|";
	КонецЕсли;
	
	// заменим в тексте запроса подставляемые поля из структуры ИменаПолей
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПолеАналитика", "Коллекция." + ИменаПолей.АналитикаУчетаНаборов);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПолеНоменклатура", "Коллекция." + ИменаПолей.НоменклатураНабора);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПолеХарактеристика", "Коллекция." + ИменаПолей.ХарактеристикаНабора);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Коллекция", Коллекция);

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Не ЗначениеЗаполнено(Выборка.АналитикаУчетаНаборов) Тогда
			КлючАналитики = ЗначениеКлючаАналитики(Выборка)
		Иначе
			КлючАналитики = Выборка.АналитикаУчетаНаборов;
		КонецЕсли;
		Коллекция[Выборка.Индекс][ИменаПолей.АналитикаУчетаНаборов] = КлючАналитики;
	КонецЦикла;
КонецПроцедуры

// Возвращает структуру полей выбора информации из коллекции для формирования аналитики учета номенклатуры.
//
// Возвращаемое значение:
//	Структура - содержит реальные имена полей коллекции для получения и формирования аналитики.
//		содержит две секции, если значение ключа Неопределено, то имя поля должно браться из имени ключа.
//		секция идентификации {Номенклатура, Характеристика, АналитикаУчетаНоменклатуры, СтатусУказанияСерий, Серия},
//			все ключи заданы.
//		секция места учета {Произвольный, [Товар, ВозвратнаяТара, Услуга, ] Работа}, ключи Произвольный и Работа заданы.
//			реквизиты этой секции должны содержать имена колонок коллекции, откуда надо брать значения для одноименных
//			типов номенклатуры.
//
Функция ИменаПолейКоллекцииПоУмолчанию() Экспорт
	Возврат Новый Структура(
		"НоменклатураНабора, ХарактеристикаНабора, АналитикаУчетаНаборов",
		"НоменклатураНабора", "ХарактеристикаНабора", "АналитикаУчетаНаборов");
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

Функция ПолучитьМенеджерЗаписи(ПараметрыАналитики)
	
	// В параметрах аналитики могут быть не все свойства
	СтруктураАналитики = Новый Структура("НоменклатураНабора, ХарактеристикаНабора");
	ЗаполнитьЗначенияСвойств(СтруктураАналитики, ПараметрыАналитики);
	Если НЕ ЗначениеЗаполнено(СтруктураАналитики.НоменклатураНабора)
	 И НЕ ЗначениеЗаполнено(СтруктураАналитики.ХарактеристикаНабора) Тогда
		Возврат Неопределено
	Иначе 
		МенеджерЗаписи = РегистрыСведений.АналитикаУчетаНаборов.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ПараметрыАналитики, "НоменклатураНабора, ХарактеристикаНабора");
		Возврат МенеджерЗаписи;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьПолноеНаименованиеКлючаАналитики(МенеджерЗаписи)

	Возврат СокрЛП(МенеджерЗаписи.НоменклатураНабора) + "; " 
		+ ?(ЗначениеЗаполнено(МенеджерЗаписи.ХарактеристикаНабора), СокрЛП(МенеджерЗаписи.ХарактеристикаНабора), "");

КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли