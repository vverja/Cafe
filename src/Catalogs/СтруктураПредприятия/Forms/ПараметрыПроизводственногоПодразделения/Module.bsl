
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ЭтоКА = ПолучитьФункциональнуюОпцию("КомплекснаяАвтоматизация");
	Элементы.ГруппаТипПодразделения.Видимость = Не ЭтоКА;
	Элементы.ГруппаПроизводствоПоЗаказам.Видимость = Не ЭтоКА;
	Элементы.ГруппаТипПодразделенияКА.Видимость = ЭтоКА;
	
	Если ЭтоКА Тогда
		Элементы.ГруппаПроизводствоБезЗаказов.Заголовок = НСтр("ru='Параметры';uk='Параметри'");
	КонецЕсли;
	
	СкладМатериалов = Параметры.ПараметрыПроизводства.СкладМатериалов;
	
	Если ЗначениеЗаполнено(Параметры.Ссылка) Тогда
		ЗначениеВРеквизитФормы(Параметры.Ссылка.ПолучитьОбъект(), "Объект");
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(Объект, Параметры.ПараметрыПроизводства);
	
	
	Элементы.ПояснениеОтдельнымДокументомУП.Видимость = ПолучитьФункциональнуюОпцию("УправлениеПредприятием");
	Элементы.ПояснениеПоПравиламУП.Видимость = ПолучитьФункциональнуюОпцию("УправлениеПредприятием");
	
	Элементы.ПояснениеОтдельнымДокументомКА.Видимость = ПолучитьФункциональнуюОпцию("КомплекснаяАвтоматизация");
	Элементы.ПояснениеПоПравиламКА.Видимость = ПолучитьФункциональнуюОпцию("КомплекснаяАвтоматизация");
	
	Если НЕ Объект.ГрафикРаботы.Пустая() Тогда
		ИспользованиеГрафикаРаботы = 1;
	Иначе
		ИспользованиеГрафикаРаботы = 0;
	КонецЕсли; 
	
	Если Объект.ИспользуетсяСписаниеЗатратНаВыпуск Тогда
		ИспользованиеСписанияЗатратНаВыпуск = 1;
	Иначе
		ИспользованиеСписанияЗатратНаВыпуск = 2;
	КонецЕсли;
	
	// подсистема запрета редактирования ключевых реквизитов объектов	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
	УправлениеДоступностью();
	
	КалендарьПредприятия = Константы.ОсновнойКалендарьПредприятия.Получить();
	Если НЕ КалендарьПредприятия.Пустая() Тогда
		Элементы.СтраницыКалендарьПредприятия.ТекущаяСтраница = Элементы.СтраницаКалендарьЗадан;
	Иначе
		Элементы.СтраницыКалендарьПредприятия.ТекущаяСтраница = Элементы.СтраницаКалендарьНеЗадан;
	КонецЕсли; 
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ИспользованиеГрафикаРаботы = 1 И Объект.ГрафикРаботы.Пустая() Тогда
		ТекстСообщения = НСтр("ru='Поле ""График работы"" не заполнено';uk='Поле ""Графік роботи"" не заповнено'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "ГрафикРаботы", "Объект", Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("ЗавершитьРедактированиеИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьГрафикПредприятияПриИзменении(Элемент)

	Если ИспользованиеГрафикаРаботы = 0 И НЕ Объект.ГрафикРаботы.Пустая() Тогда
		Объект.ГрафикРаботы = ПредопределенноеЗначение("Справочник.Календари.ПустаяСсылка");
	КонецЕсли;
	
	УправлениеДоступностью();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьИндивидуальныйГрафикПриИзменении(Элемент)
	
	УправлениеДоступностью();
	
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалПланированияПриИзменении(Элемент)
	
	Возврат; // пустой обработчик
	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеМаршрутнымиЛистамиПриИзменении(Элемент)
	
	УправлениеДоступностью();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнениеДоступностиДляГрафикаПроизводстваКоличествоИнтерваловПриИзменении(Элемент)
	
	УстановитьТекстЧасовДнейМесяцевНедель();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнениеДоступностиДляРасписанияРЦКоличествоИнтерваловПриИзменении(Элемент)
	
	УстановитьТекстЧасовДнейМесяцевНедель();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектПроизводствоПоЗаказамПриИзменении(Элемент)
	
	Объект.ПроизводственноеПодразделение = Объект.ПроизводствоБезЗаказов Или Объект.ПроизводствоПоЗаказам;
	ОбъектПроизводствоПоЗаказамПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектПроизводствоБезЗаказовПриИзменении(Элемент)
	
	Объект.ПроизводственноеПодразделение = Объект.ПроизводствоБезЗаказов Или Объект.ПроизводствоПоЗаказам;
	
	УправлениеДоступностью();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъектПроизводствоБезЗаказов1ПриИзменении(Элемент)
	
	Объект.ПроизводственноеПодразделение = Объект.ПроизводствоБезЗаказов Или Объект.ПроизводствоПоЗаказам;
	
	УправлениеДоступностью();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗавершитьРедактирование(Команда)
	
	ЗавершитьРедактированиеИЗакрыть(Неопределено, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	ИмяФормыРазблокировки = "Справочник.СтруктураПредприятия.Форма.РазблокированиеПараметровПроизводства";
	Оповещение = Новый ОписаниеОповещения("Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение", ЭтотОбъект);
	ОбщегоНазначенияУТКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтаФорма, ИмяФормыРазблокировки, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеДоступностью()
	
	ЗапретРедактированияРеквизитов = ИспользуетсяЗапретРедактированияРеквизитов();
	
	
	Если РеквизитДоступенДляРедактирования("ГрафикРаботы", ЗапретРедактированияРеквизитов) Тогда
		ЭтотОбъект.Элементы.ГрафикРаботы.Доступность = (ИспользованиеГрафикаРаботы = 1);
	КонецЕсли;
	
	Элементы.ГруппаПроизводствоПоЗаказам.Доступность = Объект.ПроизводствоПоЗаказам;
	Элементы.ГруппаПроизводствоБезЗаказов.Доступность = Объект.ПроизводствоБезЗаказов;
	
	Элементы.ГруппаКалендарьПроизводства.Доступность = ЭтоКА И Объект.ПроизводствоБезЗаказов Или Не ЭтоКА;
	Элементы.ГруппаСкладМатериалов.Доступность = ЭтоКА И Объект.ПроизводствоБезЗаказов Или Не ЭтоКА;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекстЧасовДнейМесяцевНедель()
	
	
	Возврат; // пустой обработчик
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРедактированиеИЗакрыть(Результат, ДополнительныеПараметры) Экспорт

	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат
	КонецЕсли; 
		
	Если ИспользованиеГрафикаРаботы = 0 И НЕ Объект.ГрафикРаботы.Пустая() Тогда
		Объект.ГрафикРаботы = ПредопределенноеЗначение("Справочник.Календари.ПустаяСсылка");
	КонецЕсли;
	
	Объект.ИспользуетсяСписаниеЗатратНаВыпуск = ИспользованиеСписанияЗатратНаВыпуск = 1 И Объект.ПроизводствоБезЗаказов;
	
	
	ПараметрыПроизводства = Новый Структура("ГрафикРаботы,
											|ИнтервалПланирования,НачалоИнтервалаПланирования,ОкончаниеИнтервалаПланирования,
											|УправлениеМаршрутнымиЛистами,СпособПооперационногоУправления,
											|ЗаполнениеДоступностиДляРасписанияРЦКоличествоИнтервалов,
											|ЗаполнениеДоступностиДляРасписанияРЦЕдиницаВремени,
											|ЗаполнениеДоступностиДляРасписанияРЦНапоминаниеДней,
											|ЗаполнениеДоступностиДляГрафикаПроизводстваКоличествоИнтервалов,
											|ЗаполнениеДоступностиДляГрафикаПроизводстваЕдиницаВремени,
											|ЗаполнениеДоступностиДляГрафикаПроизводстваНапоминаниеДней,
											|ВремяНаРегистрациюВыполнения, ВремяНаРегистрациюВыполненияЕдИзм,
											|ПроизводственноеПодразделение, ПроизводствоПоЗаказам, ПроизводствоБезЗаказов,
											|ИспользуетсяСписаниеЗатратНаВыпуск, ПодразделениеДиспетчер,
											|СпособПолученияПолуфабрикатов");
											
	ЗаполнитьЗначенияСвойств(ПараметрыПроизводства, Объект);
	
	ПараметрыПроизводства.Вставить("СкладМатериалов", СкладМатериалов);
	
	Модифицированность = Ложь;
	
	Закрыть(ПараметрыПроизводства);

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда
		
		ЗапретРедактированияРеквизитовОбъектовКлиент.УстановитьДоступностьЭлементовФормы(ЭтаФорма, Результат);
		УправлениеДоступностью();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбъектПроизводствоПоЗаказамПриИзмененииНаСервере()
	
	УправлениеДоступностью();
	
КонецПроцедуры

&НаСервере
Функция ИспользуетсяЗапретРедактированияРеквизитов()
	
	Результат = Ложь;
	
	РеквизитыФормы = ЭтотОбъект.ПолучитьРеквизиты();
	Для Каждого РеквизитФормы Из РеквизитыФормы Цикл
		Если РеквизитФормы.Имя = "ПараметрыЗапретаРедактированияРеквизитов" Тогда
			Результат = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция РеквизитДоступенДляРедактирования(ИмяРеквизита, ЗапретРедактированияРеквизитов)
	
	Если НЕ ЗапретРедактированияРеквизитов Тогда
		Результат = Истина;
	Иначе
		
		СтруктураПоиска = Новый Структура("ИмяРеквизита", ИмяРеквизита);
		НайденныеСтроки = ЭтотОбъект.ПараметрыЗапретаРедактированияРеквизитов.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() = 0 Тогда
			Результат = Истина;
		Иначе
			Результат = НайденныеСтроки[0].РедактированиеРазрешено;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции


#КонецОбласти
