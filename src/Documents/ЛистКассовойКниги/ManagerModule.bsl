

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


#Область СлужебныеПроцедурыИФункции

// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт


	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);


КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.ЛистКассовойКниги) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ЛистКассовойКниги.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.ЛистКассовойКниги);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	Возврат; //В дальнейшем будет добавлен код команд

КонецПроцедуры

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Лист кассовой книги
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЛистКассовойКниги";
	КомандаПечати.Представление = НСтр("ru='Лист кассовой книги';uk='Сторінка касової книги'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 1;


	// Титульный лист кассовой книги
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Титул";
	КомандаПечати.Представление = НСтр("ru='Титульный лист кассовой книги';uk='Титульна сторінка касової книги'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 2;
	
	// Журнал регистрации приходных ордеров (КО-3)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЖурналРегистрацииПриходныхОрдеров";
	КомандаПечати.Представление = НСтр("ru='Журнал регистрации приходных ордеров (КО-3)';uk='Журнал реєстрації прибуткових ордерів (КО-3)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 3;
	
	// Журнал регистрации расходных ордеров (КО-3)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЖурналРегистрацииРасходныхОрдеров";
	КомандаПечати.Представление = НСтр("ru='Журнал регистрации расходных ордеров (КО-3)';uk='Журнал реєстрації видаткових ордерів (КО-3)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 4;
	
	// Титульный лист журнала регистрации приходных и расходных ордеров (КО-3)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТитулЖурналРегистрацииПриходныхИРасходныхОрдеров";
	КомандаПечати.Представление = НСтр("ru='Титульный лист журнала регистрации приходных и расходных ордеров (КО-3)';uk='Титульна сторінка журналу реєстрації прибуткових і видаткових ордерів (КО-3)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 5;
	
	// Журнал регистрации приходных и расходных ордеров (КО-3а)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЖурналРегистрацииПриходныхИРасходныхОрдеров3а";
	КомандаПечати.Представление = НСтр("ru='Журнал регистрации приходных и расходных ордеров (КО-3а)';uk='Журнал реєстрації прибуткових і видаткових ордерів (КО-3а)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 6;
	
	// Титульный лист журнала регистрации приходных и расходных ордеров (КО-3а)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТитулЖурналРегистрацииПриходныхИРасходныхОрдеров3а";
	КомандаПечати.Представление = НСтр("ru='Титульный лист журнала регистрации приходных и расходных ордеров (КО-3а)';uk='Титульна сторінка журналу реєстрації прибуткових і видаткових ордерів (КО-3а)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Порядок = 7;

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЛистКассовойКниги") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ЛистКассовойКниги",
			НСтр("ru='Лист кассовой книги';uk='Сторінка касової книги'"),
			СформироватьПечатнуюФормуЛистаКассовойКнигиУКР(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Титул") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"Титул",
			НСтр("ru='Титульный лист кассовой книги';uk='Титульна сторінка касової книги'"),
			СформироватьПечатнуюФормуТитул(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЖурналРегистрацииПриходныхОрдеров") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ЖурналРегистрацииПриходныхОрдеров",
			НСтр("ru='Журнал регистрации приходных ордеров (КО-3)';uk='Журнал реєстрації прибуткових ордерів (КО-3)'"),
			СформироватьПечатнуюФормуЖурналРегистрации(МассивОбъектов, ОбъектыПечати, "Приход"));
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЖурналРегистрацииРасходныхОрдеров") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ЖурналРегистрацииРасходныхОрдеров",
			НСтр("ru='Журнал регистрации расходных ордеров (КО-3)';uk='Журнал реєстрації видаткових ордерів (КО-3)'"),
			СформироватьПечатнуюФормуЖурналРегистрации(МассивОбъектов, ОбъектыПечати, "Расход"));
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТитулЖурналРегистрацииПриходныхИРасходныхОрдеров") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ТитулЖурналРегистрацииПриходныхИРасходныхОрдеров",
			НСтр("ru='Титульный лист журнала регистрации приходных и расходных ордеров (КО-3)';uk='Титульна сторінка журналу реєстрації прибуткових і видаткових ордерів (КО-3)'"),
			СформироватьПечатнуюФормуТитулЖурналРегистрации(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЖурналРегистрацииПриходныхИРасходныхОрдеров3а") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ЖурналРегистрацииПриходныхИРасходныхОрдеров3а",
			НСтр("ru='Журнал регистрации приходных и расходных ордеров (КО-3а)';uk='Журнал реєстрації прибуткових і видаткових ордерів (КО-3а)'"),
			СформироватьПечатнуюФормуЖурналРегистрацииРасходныхИПриходных(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
		
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТитулЖурналРегистрацииПриходныхИРасходныхОрдеров3а") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ТитулЖурналРегистрацииПриходныхИРасходныхОрдеров3а",
			НСтр("ru='Титульный лист журнала регистрации приходных и расходных ордеров (КО-3а)';uk='Титульна сторінка журналу реєстрації прибуткових і видаткових ордерів (КО-3а)'"),
			СформироватьПечатнуюФормуТитулЖурналРегистрации3а(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьКоличествоЛистовКассовойКнигиЗаПериодПоОрганизации(Организация, ОбособленноеПодразделениеОрганизации, ДатаНач, ДатаКон)	
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ КассоваяКнигаДокументы.НомерЛиста) КАК КоличествоЛистов
	|ИЗ
	|	Документ.ЛистКассовойКниги КАК ДанныеДокумента
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.ЛистКассовойКниги.КассовыеОрдера КАК КассоваяКнигаДокументы
	|	ПО	
	|		ДанныеДокумента.Ссылка = КассоваяКнигаДокументы.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ДанныеДокумента.Организация = &Организация
	|	И ДанныеДокумента.ОбособленноеПодразделениеОрганизации = &ОбособленноеПодразделениеОрганизации
	|	И ДанныеДокумента.Проведен
	|");
	
	Запрос.УстановитьПараметр("ДатаНач",       ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон",       ДатаКон);
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", ОбособленноеПодразделениеОрганизации);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.КоличествоЛистов;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

Процедура ДобавитьОбороты(РабочаяТаблица, Валюта, Приход, Расход, ПриходВалюта, РасходВалюта)
	

	СтрокаТаблицы = РабочаяТаблица.Найти(Валюта, "Валюта");
	
	Если СтрокаТаблицы = Неопределено Тогда
		
		НоваяСтрока = РабочаяТаблица.Добавить();
		
		НоваяСтрока.Валюта     = Валюта;

		НоваяСтрока.Остаток    = 0;
		НоваяСтрока.Приход     = Приход;
		НоваяСтрока.Расход     = Расход;
		
		НоваяСтрока.ВалОстаток   = 0;
		НоваяСтрока.ПриходВалюта = ПриходВалюта;
		НоваяСтрока.РасходВалюта = РасходВалюта;
		
	Иначе
		
		СтрокаТаблицы.Приход    = СтрокаТаблицы.Приход    + ?(Приход=null,0,Приход);
		СтрокаТаблицы.Расход    = СтрокаТаблицы.Расход    + ?(Расход=null,0,Расход);
		
		СтрокаТаблицы.ПриходВалюта = СтрокаТаблицы.ПриходВалюта + ?(ПриходВалюта=null,0,ПриходВалюта);
		СтрокаТаблицы.РасходВалюта = СтрокаТаблицы.РасходВалюта + ?(РасходВалюта=null,0,РасходВалюта);
		
	КонецЕсли;
	
КонецПроцедуры


Функция СформироватьПечатнуюФормуТитул(МассивОбъектов, ОбъектыПечати)
	
	// Печать обложки и титульного листа
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОбложкаКассовойКниги";
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументКассоваяКнига.Дата КАК Дата,
	|	ДокументКассоваяКнига.Организация КАК Организация,
	|	ЕСТЬNULL(ДокументКассоваяКнига.ПоОбособленномуПодразделению, ЛОЖЬ) КАК ПоОбособленномуПодразделению,
    |	ДокументКассоваяКнига.ОбособленноеПодразделениеОрганизации КАК ОбособленноеПодразделениеОрганизации,	
	|	ВЫРАЗИТЬ(ДокументКассоваяКнига.ОбособленноеПодразделениеОрганизации.Наименование КАК СТРОКА(1000))       КАК ОбособленноеПодразделениеПредставление,
	|	ВЫРАЗИТЬ(ДокументКассоваяКнига.ОбособленноеПодразделениеОрганизации.НаименованиеПолное КАК СТРОКА(1000)) КАК ОбособленноеПодразделениеНаименованиеПолное
	|ПОМЕСТИТЬ КассовыеКниги
	|ИЗ
	|	Документ.ЛистКассовойКниги КАК ДокументКассоваяКнига
	|ГДЕ
	|	ДокументКассоваяКнига.Ссылка В(&МассивОбъектов)
	|	И ДокументКассоваяКнига.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(КассовыеКниги.Дата, ГОД) КАК Дата,
	|	КассовыеКниги.Организация,
	|	КассовыеКниги.ПоОбособленномуПодразделению,
	|	КассовыеКниги.ОбособленноеПодразделениеОрганизации,
	|	КассовыеКниги.ОбособленноеПодразделениеПредставление,
	|	КассовыеКниги.ОбособленноеПодразделениеНаименованиеПолное
	|ИЗ
	|	КассовыеКниги КАК КассовыеКниги
	|
	|СГРУППИРОВАТЬ ПО
	|	КассовыеКниги.ОбособленноеПодразделениеНаименованиеПолное,
	|	НАЧАЛОПЕРИОДА(КассовыеКниги.Дата, ГОД),
	|	КассовыеКниги.Организация,
	|	КассовыеКниги.ОбособленноеПодразделениеОрганизации,
	|	КассовыеКниги.ПоОбособленномуПодразделению,
	|	КассовыеКниги.ОбособленноеПодразделениеПредставление
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА КассовыеКниги.Дата >= ДАТАВРЕМЯ(2018, 1, 5)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК Вариант2018
	|ИЗ
	|	КассовыеКниги КАК КассовыеКниги";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ВыборкаПоДокументамКассоваяКнига = МассивРезультатов[1].Выбрать();
	ВыборкаВарианта = МассивРезультатов[2].Выбрать();
	
	ВыборкаВарианта.Следующий();
	Вариант2018 = ?(ВыборкаВарианта.Вариант2018 = Истина, Истина, Ложь);
	
	ИмяМакета 	= ?(Вариант2018, "ПФ_MXL_UK_Титул2018", "ПФ_MXL_UK_Титул");
	МакетОбложка = УправлениеПечатью.МакетПечатнойФормы("Документ.ЛистКассовойКниги." + ИмяМакета);
	
	Пока ВыборкаПоДокументамКассоваяКнига.Следующий() Цикл 
		
		ОбластьТитулОтчет = МакетОбложка.ПолучитьОбласть("Титул");
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ВыборкаПоДокументамКассоваяКнига.Организация, КонецДня(ВыборкаПоДокументамКассоваяКнига.Дата));
		
		ОбластьТитулОтчет.Параметры.Год				 		= Формат(Год(ВыборкаПоДокументамКассоваяКнига.Дата), "ЧЦ=4;ЧГ=0");
		ОбластьТитулОтчет.Параметры.КодЕДРПОУ 				= ФормированиеПечатныхФорм.ПолучитьКодОрганизации(СведенияОбОрганизации);
		Если ВыборкаПоДокументамКассоваяКнига.ПоОбособленномуПодразделению Тогда
			Если ЗначениеЗаполнено(ВыборкаПоДокументамКассоваяКнига.ОбособленноеПодразделениеНаименованиеПолное) Тогда
				ОбластьТитулОтчет.Параметры.НаименованиеОрганизации = ВыборкаПоДокументамКассоваяКнига.ОбособленноеПодразделениеНаименованиеПолное;
			Иначе
				ОбластьТитулОтчет.Параметры.НаименованиеОрганизации = ВыборкаПоДокументамКассоваяКнига.ОбособленноеПодразделениеПредставление;
			КонецЕсли;
		Иначе
			ОбластьТитулОтчет.Параметры.НаименованиеОрганизации = СведенияОбОрганизации.ПолноеНаименование;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьТитулОтчет);
				
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент,
			НомерСтрокиНачало,
			ОбъектыПечати,
			Неопределено); // Ссылка
			
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЦикла;
		
	ТабличныйДокумент.ОтображатьСетку     = Ложь;
	ТабличныйДокумент.ОтображатьЗаголовки = Ложь;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуЛистаКассовойКнигиУКР(МассивОбъектов, ОбъектыПечати, ПараметрыПечати = Неопределено)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЛистКассовойКниги";
	ВыводитьОснования = Ложь;                 	
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц,,Новый Структура("ГлавныйБухгалтер", Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер));
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДокументКассоваяКнига.Ссылка КАК Ссылка,
	|	ДокументКассоваяКнига.ТипЛиста КАК ТипЛиста,
	|	ДокументКассоваяКнига.КоличествоДокументовНаЛисте КАК КоличествоДокументовНаЛисте,
	|	ДокументКассоваяКнига.Дата КАК Дата,
	|	ДокументКассоваяКнига.Организация КАК Организация,
	|	ДокументКассоваяКнига.Ответственный.ФизическоеЛицо КАК Ответственный,
	|	ТаблицаОтветственныеЛица.ГлавныйБухгалтерНаименование КАК ГлавныйБухгалтер,
	|	ДокументКассоваяКнига.ВалютаДенежныхСредств,
	|	ДокументКассоваяКнига.ПоОбособленномуПодразделению,
	|	ДокументКассоваяКнига.ОбособленноеПодразделениеОрганизации
	|ПОМЕСТИТЬ КассовыеКниги
	|ИЗ
	|	Документ.ЛистКассовойКниги КАК ДокументКассоваяКнига
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ДокументКассоваяКнига.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	ДокументКассоваяКнига.Ссылка В(&МассивДокументов)
	|	И ДокументКассоваяКнига.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КассовыеКниги.Ссылка,
	|	КассовыеКниги.ТипЛиста,
	|	КассовыеКниги.КоличествоДокументовНаЛисте,
	|	КассовыеКниги.Дата,
	|	КассовыеКниги.Организация,
	|	КассовыеКниги.Ответственный,
	|	КассовыеКниги.ГлавныйБухгалтер,
	|	КассовыеКниги.ВалютаДенежныхСредств,
	|	КассовыеКниги.ПоОбособленномуПодразделению,
	|	КассовыеКниги.ОбособленноеПодразделениеОрганизации
	|ИЗ
	|	КассовыеКниги КАК КассовыеКниги
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА КассовыеКниги.Дата >= ДАТАВРЕМЯ(2018, 1, 5)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК Вариант2018
	|ИЗ
	|	КассовыеКниги КАК КассовыеКниги";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ВыборкаПоДокументамКассоваяКнига = МассивРезультатов[1].Выбрать();
	ВыборкаВарианта = МассивРезультатов[2].Выбрать();
	
	ВыборкаВарианта.Следующий();
	Вариант2018 = ?(ВыборкаВарианта.Вариант2018 = Истина, Истина, Ложь);
	
	ИмяМакета 	= ?(Вариант2018, "ПФ_MXL_UK_ЛистКассовойКниги2018", "ПФ_MXL_UK_ЛистКассовойКниги");
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ЛистКассовойКниги." + ИмяМакета);
	
	Пока ВыборкаПоДокументамКассоваяКнига.Следующий() Цикл
		
		ЛистКассовойКниги = ВыборкаПоДокументамКассоваяКнига.Ссылка;
		
		ДатаНач = НачалоДня(ВыборкаПоДокументамКассоваяКнига.Дата); 
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Организация = ВыборкаПоДокументамКассоваяКнига.Организация;
		
		Валюта = ВыборкаПоДокументамКассоваяКнига.ВалютаДенежныхСредств;
		
		ИспользованиеОбособленногоПодразделения = ПараметрыОбособленногоПодразделения(ВыборкаПоДокументамКассоваяКнига.Ссылка).ИспользованиеОбособленногоПодразделения;
		ПоОбособленномуПодразделению            = ВыборкаПоДокументамКассоваяКнига.ПоОбособленномуПодразделению;
		ОбособленноеПодразделениеОрганизации    = ВыборкаПоДокументамКассоваяКнига.ОбособленноеПодразделениеОрганизации;
		
		ФильтрПоОбособленномуПодразделению = ?(ИспользованиеОбособленногоПодразделения, "И Кассы.ОбособленноеПодразделениеОрганизации = &ОбособленноеПодразделениеОрганизации", "");
		
		ОбластьШапкаОтчет                   = Макет.ПолучитьОбласть("Шапка");
		ОбластьНачальныйОстатокОтчет        = Макет.ПолучитьОбласть("ОстатокНачало");
		ОбластьСтрокаОтчет                  = Макет.ПолучитьОбласть("Строка");
		ОбластьКонечныйОстатокОтчет         = Макет.ПолучитьОбласть("ОстатокКонец");
		
		ЗапросПоИтогам = Новый Запрос;
		ЗапросПоИтогам.Текст =
		"ВЫБРАТЬ
		|	Кассы.Ссылка КАК Касса
		|ПОМЕСТИТЬ ТаблицаКассы
		|ИЗ
		|	Справочник.Кассы КАК Кассы
		|ГДЕ
		|	Кассы.Владелец = &Организация
		|   И Кассы.ОбособленноеПодразделениеОрганизации = &ОбособленноеПодразделениеОрганизации
		|	И Кассы.ВалютаДенежныхСредств = &Валюта
		|	И Кассы.ИспользоватьВКассовойКниге
		|
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	ДенежныеСредстваНаличныеОстаткиИОбороты.Период                КАК Период,
		|	ТаблицаКассы.Касса.ВалютаДенежныхСредств КАК Валюта,
		|	ДенежныеСредстваНаличныеОстаткиИОбороты.СуммаНачальныйОстаток 		КАК ВалютнаяСуммаНачальныйОстатокДт,
		|	ДенежныеСредстваНаличныеОстаткиИОбороты.СуммаРеглНачальныйОстаток 	КАК СуммаНачальныйОстатокДт,
		|	ДенежныеСредстваНаличныеОстаткиИОбороты.СуммаРеглКонечныйОстаток 	КАК СуммаКонечныйОстатокДт,
		|	0													          КАК СуммаОборотДт,
		|	0													          КАК СуммаОборотКт,
		|	0													          КАК СуммаОборот
		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваНаличные.ОстаткиИОбороты(
		|			&НачИтоги,
		|			&ДатаКон,
		|			ДЕНЬ,
		|			ДвиженияИГраницыПериода,
		|			Организация = &Организация
		|				И Касса В
		|					(ВЫБРАТЬ
		|						ТаблицаКассы.Касса
		|					ИЗ
		|						ТаблицаКассы КАК ТаблицаКассы)) КАК ДенежныеСредстваНаличныеОстаткиИОбороты
        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаКассы КАК ТаблицаКассы
		|		ПО ДенежныеСредстваНаличныеОстаткиИОбороты.Касса = ТаблицаКассы.Касса
		|ГДЕ
		|	ДенежныеСредстваНаличныеОстаткиИОбороты.Касса.ИспользоватьВКассовойКниге
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ДенежныеСредства.Период, ДЕНЬ)				  КАК Период,
		|	ТаблицаКассы.Касса.ВалютаДенежныхСредств КАК Валюта,
		|	0                                                             КАК СуммаНачальныйОстатокДт,
		|	0                                                             КАК ВалютнаяСуммаНачальныйОстатокДт,
		|	0                                                             КАК ВалютнаяСуммаКонечныйОстатокДт,
		|	ВЫБОР КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|		ДенежныеСредства.Сумма
		|	ИНАЧЕ
		|		0
		|	КОНЕЦ КАК СуммаОборотДт,
		|	ВЫБОР КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|		- ДенежныеСредства.Сумма
		|	ИНАЧЕ
		|		0
		|	КОНЕЦ КАК СуммаОборотКт,
		|	ВЫБОР КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|		- ДенежныеСредства.Сумма
		|	ИНАЧЕ
		|		ДенежныеСредства.Сумма
		|	КОНЕЦ КАК СуммаОборот
		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваНаличные КАК ДенежныеСредства
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаКассы КАК ТаблицаКассы
		|		ПО ДенежныеСредства.Касса = ТаблицаКассы.Касса
		|
		|ГДЕ
		|	ДенежныеСредства.Период МЕЖДУ &НачИтоги И &ДатаКон
		|	И ДенежныеСредства.Организация = &Организация
		|	И ДенежныеСредства.Касса В
		|			(ВЫБРАТЬ
		|				ТаблицаКассы.Касса
		|			ИЗ
		|				ТаблицаКассы КАК ТаблицаКассы)
		|	И Не ДенежныеСредства.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойКассы),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВКассуККМ)
		|	)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период
		|ИТОГИ
		|	СУММА(СуммаНачальныйОстатокДт),
		|	СУММА(ВалютнаяСуммаНачальныйОстатокДт),
		|	СУММА(СуммаКонечныйОстатокДт),
		|	СУММА(СуммаОборотДт),
		|	СУММА(СуммаОборотКт),
		|	СУММА(СуммаОборот)
		|ПО
		|	ОБЩИЕ,
		|	Период ПЕРИОДАМИ(ДЕНЬ, , ),
		|	Валюта";
		
		
		ЗапросПоИтогам.УстановитьПараметр("НачИтоги",НачалоДня(ДатаНач));
		ЗапросПоИтогам.УстановитьПараметр("ДатаКон", КонецДня(ДатаНач));
		ЗапросПоИтогам.УстановитьПараметр("Организация",Организация);
		ЗапросПоИтогам.УстановитьПараметр("Валюта",Валюта);
		Если ПоОбособленномуПодразделению Тогда 
			ЗапросПоИтогам.УстановитьПараметр("ОбособленноеПодразделениеОрганизации",ОбособленноеПодразделениеОрганизации);
		Иначе
			ЗапросПоИтогам.УстановитьПараметр("ОбособленноеПодразделениеОрганизации",Справочники.ОбособленныеПодразделенияОрганизаций.ПустаяСсылка());
		КонецЕсли;
		
		РезультатЗапросаПоИтогам = ЗапросПоИтогам.Выполнить();
		
		Если РезультатЗапросаПоИтогам.Пустой() Тогда
			Продолжить;
		КонецЕсли;
		
		ФильтрПоОбособленномуПодразделению = ?(ИспользованиеОбособленногоПодразделения, "	И ДанныеДокумента.ОбособленноеПодразделениеОрганизации = &ОбособленноеПодразделениеОрганизации", "");
		
		ЗапросПоДокументам = Новый Запрос("
		|ВЫБРАТЬ
		|	КассоваяКнигаДокументы.Документ КАК Документ,
		|	НАЧАЛОПЕРИОДА(КассоваяКнигаДокументы.Документ.Дата, ДЕНЬ) КАК День,
		|	КассоваяКнигаДокументы.Документ.Дата КАК ДатаДок,
		|	КассоваяКнигаДокументы.Документ.Номер КАК НомерДок,
		|	КассоваяКнигаДокументы.Документ.Валюта КАК Валюта,
		|	КассоваяКнигаДокументы.НомерОрдера КАК НомерОрдера,
		|	КассоваяКнигаДокументы.Документ.Контрагент КАК Контрагент,
		|	ПОДСТРОКА(КассоваяКнигаДокументы.Документ.Основание, 1, 200) КАК Основание,
		|	ВЫБОР
		|		КОГДА КассоваяКнигаДокументы.Документ ССЫЛКА Документ.ПриходныйКассовыйОрдер
		|			ТОГДА КассоваяКнигаДокументы.Документ.ПринятоОт
		|		ИНАЧЕ КассоваяКнигаДокументы.Документ.Выдать
		|	КОНЕЦ КАК ТекстДок,
		|	ЕСТЬNULL(КассоваяКнигаДокументы.Приход, 0) КАК ПриходВалюта,
		|	ЕСТЬNULL(КассоваяКнигаДокументы.Расход, 0) КАК РасходВалюта,
		|	КассоваяКнигаДокументы.КорреспондирующийСчет КАК КоррСчет,
		|	КассоваяКнигаДокументы.НомерЛиста КАК НомерЛиста,
		|	КассоваяКнигаДокументы.НомерСтроки КАК НомерСтроки,
		|	ДанныеДокумента.ТипЛиста КАК ТипЛиста
		|,
		|	ЕСТЬNULL(ВложенныйЗапрос.Расход, 0) КАК Расход,
		|	ЕСТЬNULL(ВложенныйЗапрос.Приход, 0) КАК Приход
		|ИЗ
		|	Документ.ЛистКассовойКниги КАК ДанныеДокумента
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		Документ.ЛистКассовойКниги.КассовыеОрдера КАК КассоваяКнигаДокументы
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ДенежныеСредстваНаличные.Регистратор КАК Документ,
		|				СУММА(ВЫБОР
		|						КОГДА ДенежныеСредстваНаличные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|							ТОГДА ДенежныеСредстваНаличные.СуммаРегл
		|						ИНАЧЕ 0
		|					КОНЕЦ) КАК Расход,
		|				СУММА(ВЫБОР
		|						КОГДА ДенежныеСредстваНаличные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|							ТОГДА 0
		|						ИНАЧЕ ДенежныеСредстваНаличные.СуммаРегл
		|					КОНЕЦ) КАК Приход
		|			ИЗ
		|				РегистрНакопления.ДенежныеСредстваНаличные КАК ДенежныеСредстваНаличные
		|			ГДЕ
		|				ДенежныеСредстваНаличные.Период МЕЖДУ &НачИтоги И &ДатаКон
		|				И ДенежныеСредстваНаличные.Организация = &Организация
		|				И ДенежныеСредстваНаличные.Касса.ВалютаДенежныхСредств = &Валюта
		|				И ДенежныеСредстваНаличные.Касса.ОбособленноеПодразделениеОрганизации = &ОбособленноеПодразделениеОрганизации
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ДенежныеСредстваНаличные.Регистратор) КАК ВложенныйЗапрос
		|			ПО КассоваяКнигаДокументы.Документ = ВложенныйЗапрос.Документ
		|	ПО
		|		ДанныеДокумента.Ссылка = КассоваяКнигаДокументы.Ссылка
		|ГДЕ
		|	ДанныеДокумента.Дата МЕЖДУ &НачИтоги И &ДатаКон
		|	И ДанныеДокумента.Организация = &Организация
		|	И ДанныеДокумента.Проведен
		|	И ДанныеДокумента.ВалютаДенежныхСредств = &Валюта
		|   И ДанныеДокумента.ОбособленноеПодразделениеОрганизации = &ОбособленноеПодразделениеОрганизации
		|
		|УПОРЯДОЧИТЬ ПО
		|	День,
		|	НомерЛиста,
		|	НомерСтроки
		|ИТОГИ
		|	СУММА(Приход),
		|	СУММА(Расход),
		|	СУММА(ПриходВалюта),
		|	СУММА(РасходВалюта),
		|	МИНИМУМ(НомерЛиста),
		|	МИНИМУМ(НомерОрдера)
		|ПО
		|	День,
		|	Документ,
		|	КоррСчет
		|");
		
		ЗапросПоДокументам.УстановитьПараметр("НачИтоги",НачалоДня(ДатаНач));
		ЗапросПоДокументам.УстановитьПараметр("ДатаКон",КонецДня(ДатаНач));
		ЗапросПоДокументам.УстановитьПараметр("Организация",Организация);
		ЗапросПоДокументам.УстановитьПараметр("Валюта",Валюта);
		Если ПоОбособленномуПодразделению Тогда 
			ЗапросПоДокументам.УстановитьПараметр("ОбособленноеПодразделениеОрганизации",ОбособленноеПодразделениеОрганизации);
		Иначе
			ЗапросПоДокументам.УстановитьПараметр("ОбособленноеПодразделениеОрганизации",Справочники.ОбособленныеПодразделенияОрганизаций.ПустаяСсылка());
		КонецЕсли;
		РезультатЗапросаПоДокументам = ЗапросПоДокументам.Выполнить();
		
		
		ТаблицаДокументы = РезультатЗапросаПоДокументам.Выгрузить();
		ТаблицаДокументы.Очистить();
		ТаблицаДокументы.Колонки.Добавить("СтрокаСчет");
		ТаблицаДокументы.Колонки.Добавить("Валютный");
		ТаблицаДокументы.Колонки.Добавить("ВидДокумента");
		
		ТипЧисло = ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(15,2);
		
		РабочаяТаблица = Новый ТаблицаЗначений;
		РабочаяТаблица.Колонки.Добавить("Валюта",Новый ОписаниеТипов("СправочникСсылка.Валюты"));
		РабочаяТаблица.Колонки.Добавить("ВалОстаток",ТипЧисло);
		РабочаяТаблица.Колонки.Добавить("Остаток",   ТипЧисло);
		РабочаяТаблица.Колонки.Добавить("Приход",    ТипЧисло);
		РабочаяТаблица.Колонки.Добавить("Расход",    ТипЧисло);
		РабочаяТаблица.Колонки.Добавить("ПриходВалюта",    ТипЧисло);
		РабочаяТаблица.Колонки.Добавить("РасходВалюта",    ТипЧисло);
		РабочаяТаблица.Индексы.Добавить("Валюта");
		
		ВыборкаПоВалюте = РезультатЗапросаПоИтогам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Валюта");
		
		Пока ВыборкаПоВалюте.Следующий() Цикл
			Если НЕ ВыборкаПоВалюте.Валюта = Справочники.Валюты.ПустаяСсылка() Тогда
				Строка            = РабочаяТаблица.Добавить();
				Строка.Валюта     = ВыборкаПоВалюте.Валюта;
				Строка.Остаток    = ВыборкаПоВалюте.СуммаНачальныйОстатокДт;
				Строка.ВалОстаток = ВыборкаПоВалюте.ВалютнаяСуммаНачальныйОстатокДт;
			КонецЕсли;
		КонецЦикла;
		
		ВыборкаОбщихИтогов = РезультатЗапросаПоИтогам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Общие");
		
		Строка        = РабочаяТаблица.Добавить();
		Строка.Валюта = Справочники.Валюты.ПустаяСсылка();
		
		Если ВыборкаОбщихИтогов.Следующий() Тогда
			
			Строка.Остаток    = ВыборкаОбщихИтогов["СуммаНачальныйОстатокДт"]-РабочаяТаблица.Итог("Остаток");
			Строка.ВалОстаток = ВыборкаОбщихИтогов["ВалютнаяСуммаНачальныйОстатокДт"]-РабочаяТаблица.Итог("ВалОстаток");
			
		Иначе
			
			Строка.Остаток    = 0;
			Строка.ВалОстаток = 0;
			
		КонецЕсли;
		
		РабочаяТаблица.Сортировать("Валюта");
		
		ВыборкаИтоговПоДням     = РезультатЗапросаПоИтогам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Период");
		ВыборкаДокументовПоДням = РезультатЗапросаПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"День");
		
		ПоПроводкам  = ВыборкаИтоговПоДням.Следующий();
		ПоДокументам = ВыборкаДокументовПоДням.Следующий();
		
		БылиОшибки    = Ложь;
		ВывестиПодвал = Ложь;
		
		ТипПКО = Тип("ДокументСсылка.ПриходныйКассовыйОрдер");
		ТипРКО = Тип("ДокументСсылка.РасходныйКассовыйОрдер");
		
		Пока ПоПроводкам Или ПоДокументам  Цикл
			
			Если НЕ ПоПроводкам  Тогда
				ДатаЛиста = ВыборкаДокументовПоДням.День;
			ИначеЕсли НЕ ПоДокументам Тогда
				ДатаЛиста = ВыборкаИтоговПоДням.Период;
			Иначе
				ДатаЛиста = Мин(ВыборкаДокументовПоДням.День, ВыборкаИтоговПоДням.Период);
			КонецЕсли;
			
			Если ВыборкаИтоговПоДням.СуммаОборотДт = 0 И ВыборкаИтоговПоДням.СуммаОборотКт = 0 Тогда
				Если НЕ ПоДокументам ИЛИ ДатаЛиста <> ВыборкаДокументовПоДням.День Тогда
					ПоПроводкам = ВыборкаИтоговПоДням.Следующий();
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			КоличествоПриходныхДокументов = 0;
			КоличествоРасходныхДокументов = 0;
			
			
			Остаток = РабочаяТаблица.Итог("Остаток");
			ОстатокВалюта = РабочаяТаблица.Итог("ВалОстаток");
			Если ДатаЛиста >= ДатаНач Тогда
				
				
				ЧислоДокумента                          	= Формат(ВыборкаДокументовПоДням.День, "ДФ='дд';Л=uk_UA");
				ДатаДокумента                           	= Формат(ВыборкаДокументовПоДням.День, "ДФ='дд ММММ ггггр.';Л=uk_UA");
				ДатаДокументаБезЧисла                   	= Прав(ДатаДокумента, СтрДлина(ДатаДокумента) - 2);
				ОбластьШапкаОтчет.Параметры.ДатаПрописью   	= """" + ЧислоДокумента + """" + ДатаДокументаБезЧисла;
				ОбластьШапкаОтчет.Параметры.НомерЛиста = ВыборкаДокументовПоДням.НомерЛиста;
				
				
				ТабличныйДокумент.Вывести(ОбластьШапкаОтчет);
				
				ОбластьНачальныйОстатокОтчет.Параметры.ОстатокНачало = Формат(Остаток, "ЧЦ=15; ЧДЦ=2; ЧН=0,00");
				Если НЕ Валюта = ВалютаРегламентированногоУчета Тогда
					ОбластьНачальныйОстатокОтчет.Параметры.Валюта   = Валюта;
					ОбластьНачальныйОстатокОтчет.Параметры.ОстатокНачалоВалюта = Формат(ОстатокВалюта, "ЧЦ=15; ЧДЦ=2; ЧН=0,00");
				КонецЕсли;
				ТабличныйДокумент.Вывести(ОбластьНачальныйОстатокОтчет);
				
			КонецЕсли;
			
			ТаблицаДокументы.Очистить();
			
			Если ПоДокументам И ВыборкаДокументовПоДням.День = ДатаЛиста Тогда
				
				ВыборкаДокументов = ВыборкаДокументовПоДням.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Документ");
				
				Пока ВыборкаДокументов.Следующий() Цикл
					
					НоваяСтрока = ТаблицаДокументы.Добавить();
					НоваяСтрока.ВидДокумента = ?(ТипЗнч(ВыборкаДокументов.Документ) = ТипПКО, "ПриходныйОрдер", "РасходныйОрдер");
					НоваяСтрока.Документ     = ВыборкаДокументов.Документ;
					НоваяСтрока.ДатаДок      = ВыборкаДокументов.ДатаДок;
					НоваяСтрока.День         = ВыборкаДокументов.День;
					НоваяСтрока.НомерДок     = ВыборкаДокументов.НомерДок;
					НоваяСтрока.Валюта       = ВыборкаДокументов.Валюта;
					НоваяСтрока.Приход       = ВыборкаДокументов.Приход;
					НоваяСтрока.ПриходВалюта = ВыборкаДокументов.ПриходВалюта;
					НоваяСтрока.РасходВалюта = ВыборкаДокументов.РасходВалюта;
					НоваяСтрока.Расход       = ВыборкаДокументов.Расход;
					НоваяСтрока.Основание    = ВыборкаДокументов.Основание;
					НоваяСтрока.ТекстДок     = ВыборкаДокументов.ТекстДок;
					НоваяСтрока.НомерЛиста   = ВыборкаДокументов.НомерЛиста;
					НоваяСтрока.НомерОрдера  = ВыборкаДокументов.НомерОрдера;
					
					НоваяСтрока.Валютный = ВыборкаДокументов.Валюта <> ВалютаРегламентированногоУчета;
					
					ВыборкаСчетов = ВыборкаДокументов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"КоррСчет");
					СписокСчетов  = Новый ТаблицаЗначений;
					СписокСчетов.Колонки.Добавить("КоррСчет");
					Пока ВыборкаСчетов.Следующий() Цикл
						
						СтрокаТаблицыСчетов      = СписокСчетов.Добавить();
						СтрокаТаблицыСчетов.КоррСчет = ВыборкаСчетов.КоррСчет;
						
					КонецЦикла;
					
					СписокСчетов.Свернуть("КоррСчет");
					
					СтрокаСчет = "";
					Для Каждого СтрокаТаблицыСчетов Из СписокСчетов Цикл
						СтрокаСчет = СтрокаСчет + СтрокаТаблицыСчетов.КоррСчет + Символы.ПС;
					КонецЦикла;
					
					
					НоваяСтрока.СтрокаСчет = СтрокаСчет;
					
				КонецЦикла;
				
			КонецЕсли;
			
			СумПриход    = 0;
			СумРасход    = 0;
			ПерваяСтрока = 1;
			
			
			ПредыдущийНомерЛиста = ВыборкаДокументовПоДням.НомерЛиста;
			
			Для Каждого Документ Из ТаблицаДокументы Цикл
				
				ЕстьВалюта = Документ.Валютный;
				
				Если ЕстьВалюта Тогда
					Валюта          = Документ.Валюта;
				Иначе
					Валюта    = ВалютаРегламентированногоУчета;
				КонецЕсли;
				
				Если Документ.ВидДокумента = "РасходныйОрдер" Тогда
					Клиент = "Видано " + СокрЛП(Документ.ТекстДок) + ?(ВыводитьОснования = 1, " " + СокрЛП(Документ.Основание), "");
					КоличествоРасходныхДокументов = КоличествоРасходныхДокументов + 1;
					Расход    = Документ.Расход;
					Приход    = 0;
					РасходВалюта = Документ.РасходВалюта;
					ПриходВалюта = 0;
					
				Иначе
					Клиент = "Отримано від " + СокрЛП(Документ.ТекстДок) + ?(ВыводитьОснования = 1, " " + СокрЛП(Документ.Основание), "");
					КоличествоПриходныхДокументов = КоличествоПриходныхДокументов + 1;
					Приход    = Документ.Приход;
					Расход    = 0;
					ПриходВалюта = Документ.ПриходВалюта;
					РасходВалюта = 0;
					
				КонецЕсли;
				
				
				НомерОрдера = Документ.НомерОрдера;
				КоррСчет = Документ.СтрокаСчет;
				
				// Начинаем новую страницу
				Если ПредыдущийНомерЛиста <> Документ.НомерЛиста Тогда
					
					ПриходЗаДень = РабочаяТаблица.Итог("Приход");
					РасходЗаДень = РабочаяТаблица.Итог("Расход");
					
					Если ДатаЛиста >= ДатаНач Тогда
						
						ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
						ОбластьШапкаОтчет.Параметры.НомерЛиста = Документ.НомерЛиста;
						ЧислоДокумента                          	= Формат(Документ.День, "ДФ='дд';Л=uk_UA");
						ДатаДокумента                           	= Формат(Документ.День, "ДФ='дд ММММ ггггр.';Л=uk_UA");
						ДатаДокументаБезЧисла                   	= Прав(ДатаДокумента, СтрДлина(ДатаДокумента) - 2);
						ОбластьШапкаОтчет.Параметры.ДатаПрописью   	= """" + ЧислоДокумента + """" + ДатаДокументаБезЧисла;
						ТабличныйДокумент.Вывести(ОбластьШапкаОтчет);
						
					КонецЕсли;
					
					ПредыдущийНомерЛиста = Документ.НомерЛиста;
					
				КонецЕсли;
				
				Если ДатаЛиста >= ДатаНач Тогда
					
					ОбластьСтрокаОтчет.Параметры.НомерОрдера = НомерОрдера;
					ОбластьСтрокаОтчет.Параметры.Контрагент = Клиент;
					ОбластьСтрокаОтчет.Параметры.КоррСчет   = КоррСчет;
					ОбластьСтрокаОтчет.Параметры.Приход     = Формат(Приход, "ЧЦ=15; ЧДЦ=2; ЧН=-");
					ОбластьСтрокаОтчет.Параметры.Расход     = Формат(Расход, "ЧЦ=15; ЧДЦ=2; ЧН=-");
					ОбластьСтрокаОтчет.Параметры.Ордер   = Документ.Документ;
					Если НЕ Валюта = ВалютаРегламентированногоУчета Тогда
						ОбластьСтрокаОтчет.Параметры.Валюта   = Валюта;
						ОбластьСтрокаОтчет.Параметры.ПриходВалюта     = Формат(ПриходВалюта, "ЧЦ=15; ЧДЦ=2; ЧН=-");
						ОбластьСтрокаОтчет.Параметры.РасходВалюта     = Формат(РасходВалюта, "ЧЦ=15; ЧДЦ=2; ЧН=-");
					КонецЕсли;
					ТабличныйДокумент.Вывести(ОбластьСтрокаОтчет);
				КонецЕсли;
				
				ДобавитьОбороты(РабочаяТаблица, Валюта, Приход, Расход, ПриходВалюта, РасходВалюта);
				
			КонецЦикла;
			
			ПриходЗаДень = РабочаяТаблица.Итог("Приход");
			РасходЗаДень = РабочаяТаблица.Итог("Расход");
			ПриходЗаДеньВал = РабочаяТаблица.Итог("ПриходВалюта");
			РасходЗаДеньВал = РабочаяТаблица.Итог("РасходВалюта");
			Если ДатаЛиста >= ДатаНач Тогда
				
				//ОбластьКонечныйОстатокОтчет.Параметры.Приход = Формат(ПриходЗаДень, "ЧЦ=15; ЧДЦ=2; ЧН=0,00");
				//ОбластьКонечныйОстатокОтчет.Параметры.Расход = Формат(РасходЗаДень, "ЧЦ=15; ЧДЦ=2; ЧН=0,00");
				ОбластьКонечныйОстатокОтчет.Параметры.Приход = Формат(ПриходЗаДень, "ЧЦ=15; ЧДЦ=2; ЧН=-");
				ОбластьКонечныйОстатокОтчет.Параметры.Расход = Формат(РасходЗаДень, "ЧЦ=15; ЧДЦ=2; ЧН=-");
				Если НЕ Валюта = ВалютаРегламентированногоУчета Тогда
					ОбластьКонечныйОстатокОтчет.Параметры.ПриходВалюта = Формат(ПриходЗаДеньВал, "ЧЦ=15; ЧДЦ=2; ЧН=0,00");
					ОбластьКонечныйОстатокОтчет.Параметры.РасходВалюта = Формат(РасходЗаДеньВал, "ЧЦ=15; ЧДЦ=2; ЧН=0,00");
				КонецЕсли;
				
				ПерваяСтрока = Истина;
				Остаток      = Остаток + ПриходЗаДень - РасходЗаДень;
				ОстатокВалюта = ОстатокВалюта + ПриходЗаДеньВал - РасходЗаДеньВал;
				
				ОбластьКонечныйОстатокОтчет.Параметры.ОстатокКонец = Формат(Остаток, "ЧЦ=15; ЧДЦ=2; ЧН=0,00");
				
				
				Если НЕ Валюта = ВалютаРегламентированногоУчета Тогда
					ОбластьКонечныйОстатокОтчет.Параметры.Валюта   = Валюта;
					ОбластьКонечныйОстатокОтчет.Параметры.ОстатокКонецВалюта = Формат(ОстатокВалюта, "ЧЦ=15; ЧДЦ=2; ЧН=0,00");
				КонецЕсли;
				
				ФорматнаяСтрока = "Л = uk_UA";    
				КоличествоПриходныхДокументов = ?(КоличествоПриходныхДокументов = 0, "-   ", ЧислоПрописью(КоличествоПриходныхДокументов, ФорматнаяСтрока));
				КоличествоРасходныхДокументов = ?(КоличествоРасходныхДокументов = 0, "-   ", ЧислоПрописью(КоличествоРасходныхДокументов, ФорматнаяСтрока));
				КоличествоПриходныхДокументов = СокрЛП(Лев(КоличествоПриходныхДокументов, СтрДлина(КоличествоПриходныхДокументов) - 3 ));
				КоличествоРасходныхДокументов = СокрЛП(Лев(КоличествоРасходныхДокументов, СтрДлина(КоличествоРасходныхДокументов) - 3 ));
				ОбластьКонечныйОстатокОтчет.Параметры.КоличествоПКО = КоличествоПриходныхДокументов;
				ОбластьКонечныйОстатокОтчет.Параметры.КоличествоРКО = КоличествоРасходныхДокументов;
				
				ОбластьКонечныйОстатокОтчет.Параметры.Бухгалтер = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ВыборкаПоДокументамКассоваяКнига.ГлавныйБухгалтер);
				ОбластьКонечныйОстатокОтчет.Параметры.Кассир    = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ВыборкаПоДокументамКассоваяКнига.Ответственный);
				
			КонецЕсли;
			
			Сортировать = Ложь;
			ВыборкаПоВалюте = ВыборкаИтоговПоДням.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Валюта");
			
			Если (ДатаЛиста = ВыборкаИтоговПоДням.Период) Тогда
				СуммаКонечныйОстатокДт = ВыборкаИтоговПоДням.СуммаНачальныйОстатокДт + ВыборкаИтоговПоДням.СуммаОборот;
				Строка.Остаток = СуммаКонечныйОстатокДт - РабочаяТаблица.Итог("Остаток");
			Иначе
				Если ПоПроводкам Тогда
					Строка.Остаток = ВыборкаИтоговПоДням.СуммаНачальныйОстатокДт - РабочаяТаблица.Итог("Остаток");
				Иначе
					Строка.Остаток = -РабочаяТаблица.Итог("Остаток");
				КонецЕсли;
			КонецЕсли;
			
			Если Сортировать Тогда
				РабочаяТаблица.Сортировать("Валюта");
			КонецЕсли;
			РабочаяТаблица.ЗаполнитьЗначения(0,"Приход, Расход");
			
			Если ПоПроводкам И ДатаЛиста = ВыборкаИтоговПоДням.Период Тогда
				ПоПроводкам = ВыборкаИтоговПоДням.Следующий();
			КонецЕсли;
			Если ПоДокументам И ДатаЛиста = ВыборкаДокументовПоДням.День Тогда
				ПоДокументам = ВыборкаДокументовПоДням.Следующий();
			КонецЕсли;
			
			ВывестиПодвал = Истина;
			
		КонецЦикла;
		
		Если ВывестиПодвал Тогда
			
			Если ВыборкаПоДокументамКассоваяКнига.ТипЛиста = Перечисления.ТипыЛистовКассовойКниги.ПоследнийВМесяце Тогда
				
				КоличествоЛистов = ПолучитьКоличествоЛистовКассовойКнигиЗаПериодПоОрганизации(
					ВыборкаПоДокументамКассоваяКнига.Организация,
					?(ПоОбособленномуПодразделению, ОбособленноеПодразделениеОрганизации, Справочники.ОбособленныеПодразделенияОрганизаций.ПустаяСсылка()),
					НачалоМесяца(ВыборкаПоДокументамКассоваяКнига.Дата),
					КонецМесяца(ВыборкаПоДокументамКассоваяКнига.Дата)
				);
				
				ОбластьКонечныйОстатокОтчет.Параметры.КоличествоЛистовМесяц = "Листів з початку місяця: " + КоличествоЛистов;
				
			КонецЕсли;
			
			Если ВыборкаПоДокументамКассоваяКнига.ТипЛиста = Перечисления.ТипыЛистовКассовойКниги.ПоследнийВГоду Тогда
				
				КоличествоЛистов = ПолучитьКоличествоЛистовКассовойКнигиЗаПериодПоОрганизации(
					ВыборкаПоДокументамКассоваяКнига.Организация,
					?(ПоОбособленномуПодразделению, ОбособленноеПодразделениеОрганизации, Справочники.ОбособленныеПодразделенияОрганизаций.ПустаяСсылка()),
					НачалоГода(ВыборкаПоДокументамКассоваяКнига.Дата),
					КонецГода(ВыборкаПоДокументамКассоваяКнига.Дата)
				);
				
				ОбластьКонечныйОстатокОтчет.Параметры.КоличествоЛистовМесяц = "Листів з початку місяця: " +КоличествоЛистов;
				ОбластьКонечныйОстатокОтчет.Параметры.КоличествоЛистовГод   = "Листів з початку року " + КоличествоЛистов;
				
			КонецЕсли;
			
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьКонечныйОстатокОтчет);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент,
			НомерСтрокиНачало,
			ОбъектыПечати,
			ВыборкаПоДокументамКассоваяКнига.Ссылка
		);
		
	КонецЦикла; // Цикл по выделенным документам
	
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуТитулЖурналРегистрации(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументКассоваяКнига.Дата КАК Дата,
	|	ДокументКассоваяКнига.Организация КАК Организация,
	|	ЕСТЬNULL(ДокументКассоваяКнига.ПоОбособленномуПодразделению, ЛОЖЬ) КАК ПоОбособленномуПодразделению,
    |	ДокументКассоваяКнига.ОбособленноеПодразделениеОрганизации КАК ОбособленноеПодразделениеОрганизации,	
	|	ВЫРАЗИТЬ(ДокументКассоваяКнига.ОбособленноеПодразделениеОрганизации.Наименование КАК СТРОКА(1000))       КАК ОбособленноеПодразделениеПредставление,
	|	ВЫРАЗИТЬ(ДокументКассоваяКнига.ОбособленноеПодразделениеОрганизации.НаименованиеПолное КАК СТРОКА(1000)) КАК ОбособленноеПодразделениеНаименованиеПолное
	|ПОМЕСТИТЬ КассовыеКниги
	|ИЗ
	|	Документ.ЛистКассовойКниги КАК ДокументКассоваяКнига 
	|ГДЕ
	|	ДокументКассоваяКнига.Ссылка В(&МассивОбъектов)
	|	И ДокументКассоваяКнига.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(КассовыеКниги.Дата, ГОД) КАК Дата,
	|	КассовыеКниги.Организация,
	|	КассовыеКниги.ПоОбособленномуПодразделению,
	|	КассовыеКниги.ОбособленноеПодразделениеОрганизации,
	|	КассовыеКниги.ОбособленноеПодразделениеПредставление,
	|	КассовыеКниги.ОбособленноеПодразделениеНаименованиеПолное
	|ИЗ
	|	КассовыеКниги КАК КассовыеКниги
	|
	|СГРУППИРОВАТЬ ПО
	|	КассовыеКниги.ОбособленноеПодразделениеНаименованиеПолное,
	|	НАЧАЛОПЕРИОДА(КассовыеКниги.Дата, ГОД),
	|	КассовыеКниги.Организация,
	|	КассовыеКниги.ОбособленноеПодразделениеОрганизации,
	|	КассовыеКниги.ПоОбособленномуПодразделению,
	|	КассовыеКниги.ОбособленноеПодразделениеПредставление
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА КассовыеКниги.Дата >= ДАТАВРЕМЯ(2018, 1, 5)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК Вариант2018
	|ИЗ
	|	КассовыеКниги КАК КассовыеКниги";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ВыборкаПоДокументамКассоваяКнига = МассивРезультатов[1].Выбрать();
	ВыборкаВарианта = МассивРезультатов[2].Выбрать();
	
	ВыборкаВарианта.Следующий();
	Вариант2018 = ?(ВыборкаВарианта.Вариант2018 = Истина, Истина, Ложь);
	
	Если Не Вариант2018 Тогда
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТитулЖурналРегистрации"+ ?(Вариант2018, "_2018", "");
	
	ИмяМакета 	= ?(Вариант2018, "ПФ_MXL_UK_ТитулЖурналРегистрации2018", "ПФ_MXL_UK_ТитулЖурналРегистрации");
	МакетОбложка = УправлениеПечатью.МакетПечатнойФормы("Документ.ЛистКассовойКниги." + ИмяМакета);
	
	Пока ВыборкаПоДокументамКассоваяКнига.Следующий() Цикл
		
		ОбластьТитулОтчет = МакетОбложка.ПолучитьОбласть("Обложка");
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ВыборкаПоДокументамКассоваяКнига.Организация, КонецДня(ВыборкаПоДокументамКассоваяКнига.Дата));
		
		ОбластьТитулОтчет.Параметры.Год				 		= Формат(Год(ВыборкаПоДокументамКассоваяКнига.Дата), "ЧЦ=4;ЧГ=0");
		ОбластьТитулОтчет.Параметры.КодЕДРПОУ 				= ФормированиеПечатныхФорм.ПолучитьКодОрганизации(СведенияОбОрганизации);
		Если ВыборкаПоДокументамКассоваяКнига.ПоОбособленномуПодразделению Тогда
			Если ЗначениеЗаполнено(ВыборкаПоДокументамКассоваяКнига.ОбособленноеПодразделениеНаименованиеПолное) Тогда
				ОбластьТитулОтчет.Параметры.НаименованиеОрганизации = ВыборкаПоДокументамКассоваяКнига.ОбособленноеПодразделениеНаименованиеПолное;
			Иначе
				ОбластьТитулОтчет.Параметры.НаименованиеОрганизации = ВыборкаПоДокументамКассоваяКнига.ОбособленноеПодразделениеПредставление;
			КонецЕсли;
		Иначе
			ОбластьТитулОтчет.Параметры.НаименованиеОрганизации = СведенияОбОрганизации.ПолноеНаименование;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьТитулОтчет);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент,
			НомерСтрокиНачало,
			ОбъектыПечати,
			Неопределено); // Ссылка
			
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЦикла; 
	
	ТабличныйДокумент.ОтображатьСетку     = Ложь;
	ТабличныйДокумент.ОтображатьЗаголовки = Ложь;
	
	Возврат ТабличныйДокумент;
		
КонецФункции

Функция СформироватьПечатнуюФормуТитулЖурналРегистрации3а(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТитулЖурналРегистрации3а";
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументКассоваяКнига.Дата КАК Дата,
	|	ДокументКассоваяКнига.Организация КАК Организация,
	|	ЕСТЬNULL(ДокументКассоваяКнига.ПоОбособленномуПодразделению, ЛОЖЬ) КАК ПоОбособленномуПодразделению,
    |	ДокументКассоваяКнига.ОбособленноеПодразделениеОрганизации КАК ОбособленноеПодразделениеОрганизации,	
	|	ВЫРАЗИТЬ(ДокументКассоваяКнига.ОбособленноеПодразделениеОрганизации.Наименование КАК СТРОКА(1000))       КАК ОбособленноеПодразделениеПредставление,
	|	ВЫРАЗИТЬ(ДокументКассоваяКнига.ОбособленноеПодразделениеОрганизации.НаименованиеПолное КАК СТРОКА(1000)) КАК ОбособленноеПодразделениеНаименованиеПолное
	|ПОМЕСТИТЬ КассовыеКниги
	|ИЗ
	|	Документ.ЛистКассовойКниги КАК ДокументКассоваяКнига
	|ГДЕ
	|	ДокументКассоваяКнига.Ссылка В(&МассивОбъектов)
	|	И ДокументКассоваяКнига.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(КассовыеКниги.Дата, ГОД) КАК Дата,
	|	КассовыеКниги.Организация,
	|	КассовыеКниги.ПоОбособленномуПодразделению,
	|	КассовыеКниги.ОбособленноеПодразделениеОрганизации,
	|	КассовыеКниги.ОбособленноеПодразделениеПредставление,
	|	КассовыеКниги.ОбособленноеПодразделениеНаименованиеПолное
	|ИЗ
	|	КассовыеКниги КАК КассовыеКниги
	|
	|СГРУППИРОВАТЬ ПО
	|	КассовыеКниги.ОбособленноеПодразделениеНаименованиеПолное,
	|	НАЧАЛОПЕРИОДА(КассовыеКниги.Дата, ГОД),
	|	КассовыеКниги.Организация,
	|	КассовыеКниги.ОбособленноеПодразделениеОрганизации,
	|	КассовыеКниги.ПоОбособленномуПодразделению,
	|	КассовыеКниги.ОбособленноеПодразделениеПредставление
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА КассовыеКниги.Дата >= ДАТАВРЕМЯ(2018, 1, 5)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК Вариант2018
	|ИЗ
	|	КассовыеКниги КАК КассовыеКниги";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ВыборкаПоДокументамКассоваяКнига = МассивРезультатов[1].Выбрать();
	ВыборкаВарианта = МассивРезультатов[2].Выбрать();
	
	ВыборкаВарианта.Следующий();
	Вариант2018 = ?(ВыборкаВарианта.Вариант2018 = Истина, Истина, Ложь);
	
	ИмяМакета 	= ?(Вариант2018, "ПФ_MXL_UK_ТитулЖурналРегистрации3а2018", "ПФ_MXL_UK_ТитулЖурналРегистрации3а");
	МакетОбложка = УправлениеПечатью.МакетПечатнойФормы("Документ.ЛистКассовойКниги." + ИмяМакета);
	
	Пока ВыборкаПоДокументамКассоваяКнига.Следующий() Цикл
		
		ОбластьТитулОтчет = МакетОбложка.ПолучитьОбласть("Обложка");
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ВыборкаПоДокументамКассоваяКнига.Организация, КонецДня(ВыборкаПоДокументамКассоваяКнига.Дата));
		
		ОбластьТитулОтчет.Параметры.Год				 		= Формат(Год(ВыборкаПоДокументамКассоваяКнига.Дата), "ЧЦ=4;ЧГ=0");
		ОбластьТитулОтчет.Параметры.КодЕДРПОУ 				= ФормированиеПечатныхФорм.ПолучитьКодОрганизации(СведенияОбОрганизации);
		Если ВыборкаПоДокументамКассоваяКнига.ПоОбособленномуПодразделению Тогда
			Если ЗначениеЗаполнено(ВыборкаПоДокументамКассоваяКнига.ОбособленноеПодразделениеНаименованиеПолное) Тогда
				ОбластьТитулОтчет.Параметры.НаименованиеОрганизации = ВыборкаПоДокументамКассоваяКнига.ОбособленноеПодразделениеНаименованиеПолное;
			Иначе
				ОбластьТитулОтчет.Параметры.НаименованиеОрганизации = ВыборкаПоДокументамКассоваяКнига.ОбособленноеПодразделениеПредставление;
			КонецЕсли;
		Иначе
			ОбластьТитулОтчет.Параметры.НаименованиеОрганизации = СведенияОбОрганизации.ПолноеНаименование;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(ОбластьТитулОтчет);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
			ТабличныйДокумент,
			НомерСтрокиНачало,
			ОбъектыПечати,
			Неопределено); // Ссылка
			
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();	
			
	КонецЦикла;
	
	ТабличныйДокумент.ОтображатьСетку     = Ложь;
	ТабличныйДокумент.ОтображатьЗаголовки = Ложь;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуЖурналРегистрацииРасходныхИПриходных(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
 	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЖурналРегистрацииРасходныхИПриходных";
	ТабличныйДокумент.ТолькоПросмотр = Истина;
		
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДокументКассоваяКнига.Дата,	
	|	ДокументКассоваяКнига.Организация КАК Организация,
	|	ДокументКассоваяКнига.ВалютаДенежныхСредств,
	|	ДокументКассоваяКнига.ОбособленноеПодразделениеОрганизации,
	|	ДокументКассоваяКнига.ВыводитьКаждыйДокументВОтдельнойСтроке,
	|	ОрдераКассовойКниги.Документ
	|ПОМЕСТИТЬ Ордера
	|ИЗ
	|	Документ.ЛистКассовойКниги КАК ДокументКассоваяКнига
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЛистКассовойКниги.КассовыеОрдера КАК ОрдераКассовойКниги
	|		ПО ДокументКассоваяКнига.Ссылка = ОрдераКассовойКниги.Ссылка
	|ГДЕ
	|	ДокументКассоваяКнига.Ссылка В(&МассивДокументов)
	|	И ДокументКассоваяКнига.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Ордера.Организация КАК Организация,
	|	Ордера.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	Ордера.ОбособленноеПодразделениеОрганизации 
	|ИЗ
	|	Ордера КАК Ордера
	|
	|СГРУППИРОВАТЬ ПО
	|	Ордера.Организация,
	|	Ордера.ВалютаДенежныхСредств,
	|	Ордера.ОбособленноеПодразделениеОрганизации
	|ИТОГИ ПО
	|	Организация,
	|	ВалютаДенежныхСредств
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Ордера.Организация КАК Организация,
	|	Ордера.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	Ордера.ОбособленноеПодразделениеОрганизации КАК ОбособленноеПодразделениеОрганизации,
	|	НАЧАЛОПЕРИОДА(ПриходныйКассовыйОрдер.Дата, ДЕНЬ) КАК ДеньПриход,
	|	0 КАК ТипДокумента,
	|	ПриходныйКассовыйОрдер.Ссылка КАК ОрдерПриход,
	|	ПриходныйКассовыйОрдер.НомерОрдера КАК НомерОрдераПриход,
	|	ВЫБОР
	|		КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 2, 1) = """"
	|			ТОГДА ""000000000"" + ПриходныйКассовыйОрдер.НомерОрдера
	|		КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 3, 1) = """"
	|			ТОГДА ""00000000"" + ПриходныйКассовыйОрдер.НомерОрдера
	|		КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 4, 1) = """"
	|			ТОГДА ""0000000"" + ПриходныйКассовыйОрдер.НомерОрдера
	|		КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 5, 1) = """"
	|			ТОГДА ""000000"" + ПриходныйКассовыйОрдер.НомерОрдера
	|		КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 6, 1) = """"
	|			ТОГДА ""00000"" + ПриходныйКассовыйОрдер.НомерОрдера
	|		КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 7, 1) = """"
	|			ТОГДА ""0000"" + ПриходныйКассовыйОрдер.НомерОрдера
	|		КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 8, 1) = """"
	|			ТОГДА ""000"" + ПриходныйКассовыйОрдер.НомерОрдера
	|		КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 9, 1) = """"
	|			ТОГДА ""00"" + ПриходныйКассовыйОрдер.НомерОрдера
	|		КОГДА ПОДСТРОКА(ПриходныйКассовыйОрдер.НомерОрдера, 10, 1) = """"
	|			ТОГДА ""0"" + ПриходныйКассовыйОрдер.НомерОрдера
	|		ИНАЧЕ ПриходныйКассовыйОрдер.НомерОрдера
	|	КОНЕЦ КАК НомерОрдераПриходПорядок,
	|	ПриходныйКассовыйОрдер.СуммаДокумента КАК СуммаПриход,
	|	ПриходныйКассовыйОрдер.Комментарий КАК КомментарийПриход
	|ИЗ
	|	Ордера КАК Ордера
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
	|		ПО Ордера.Документ = ПриходныйКассовыйОрдер.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Ордера.Организация КАК Организация,
	|	Ордера.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	Ордера.ОбособленноеПодразделениеОрганизации КАК ОбособленноеПодразделениеОрганизации,
	|	НАЧАЛОПЕРИОДА(РасходныйКассовыйОрдер.Дата, ДЕНЬ) КАК ДеньРасход,
	|	1 КАК ТипДокумента,
	|	РасходныйКассовыйОрдер.Ссылка КАК ОрдерРасход,
	|	РасходныйКассовыйОрдер.НомерОрдера КАК НомерОрдераРасход,
	|	ВЫБОР
	|		КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 2, 1) = """"
	|			ТОГДА ""000000000"" + РасходныйКассовыйОрдер.НомерОрдера
	|		КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 3, 1) = """"
	|			ТОГДА ""00000000"" + РасходныйКассовыйОрдер.НомерОрдера
	|		КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 4, 1) = """"
	|			ТОГДА ""0000000"" + РасходныйКассовыйОрдер.НомерОрдера
	|		КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 5, 1) = """"
	|			ТОГДА ""000000"" + РасходныйКассовыйОрдер.НомерОрдера
	|		КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 6, 1) = """"
	|			ТОГДА ""00000"" + РасходныйКассовыйОрдер.НомерОрдера
	|		КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 7, 1) = """"
	|			ТОГДА ""0000"" + РасходныйКассовыйОрдер.НомерОрдера
	|		КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 8, 1) = """"
	|			ТОГДА ""000"" + РасходныйКассовыйОрдер.НомерОрдера
	|		КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 9, 1) = """"
	|			ТОГДА ""00"" + РасходныйКассовыйОрдер.НомерОрдера
	|		КОГДА ПОДСТРОКА(РасходныйКассовыйОрдер.НомерОрдера, 10, 1) = """"
	|			ТОГДА ""0"" + РасходныйКассовыйОрдер.НомерОрдера
	|		ИНАЧЕ РасходныйКассовыйОрдер.НомерОрдера
	|	КОНЕЦ КАК НомерОрдераРасходПорядок,
	|	РасходныйКассовыйОрдер.СуммаДокумента КАК СуммаРасход,
	|	РасходныйКассовыйОрдер.Комментарий КАК КомментарийРасход
	|ИЗ
	|	Ордера КАК Ордера
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|		ПО Ордера.Документ = РасходныйКассовыйОрдер.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ВалютаДенежныхСредств,
	|	ОбособленноеПодразделениеОрганизации,
	|	ДеньПриход,
	|	ТипДокумента,
	|	НомерОрдераПриходПорядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(Ордера.ВыводитьКаждыйДокументВОтдельнойСтроке) КАК ВыводитьКаждыйДокументВОтдельнойСтроке,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Ордера.Дата >= ДАТАВРЕМЯ(2018, 1, 5)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК Вариант2018
	|ИЗ
	|	Ордера КАК Ордера";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ВыборкаПоОрганизациям   = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 
	ВыборкаПриходныхОрдеров = МассивРезультатов[2].Выбрать();
	ВыборкаВарианта  		= МассивРезультатов[3].Выбрать();
	
	ВыборкаВарианта.Следующий();
	Вариант2018 = ?(ВыборкаВарианта.Вариант2018 = Истина, Истина, Ложь);
	ВыводитьКаждыйДокументВОтдельнойСтроке = ?(ВыборкаВарианта.ВыводитьКаждыйДокументВОтдельнойСтроке = Истина, Истина, Ложь);
	
	// Если ВыводитьКаждыйДокументВОтдельнойСтроке = Истина, то ВыборкаПриходныхОрдеров используется, как общая выборка приходных и расходных
	// Если ВыводитьКаждыйДокументВОтдельнойСтроке = Ложь,   то ВыборкаПриходныхОрдеров используется, как выборка приходных, 
	//														  а ВыборкаРасходныхОрдеров используется, как выборка расходных
	Если Не ВыводитьКаждыйДокументВОтдельнойСтроке Тогда
		ВыборкаРасходныхОрдеров = МассивРезультатов[2].Выбрать();
	КонецЕсли; 
	
	ИмяМакета 	= ?(Вариант2018, "ПФ_MXL_UK_ЖурналРегистрации3а2018", "ПФ_MXL_UK_ЖурналРегистрации3а");
	Макет 		= УправлениеПечатью.МакетПечатнойФормы("Документ.ЛистКассовойКниги." + ИмяМакета);
	
	Если ВыводитьКаждыйДокументВОтдельнойСтроке Тогда 
		КлючиПоиска = "Организация,ВалютаДенежныхСредств,ОбособленноеПодразделениеОрганизации";
		СтруктураПоиска = Новый Структура(КлючиПоиска);
	Иначе
		КлючиПоиска = "Организация,ВалютаДенежныхСредств,ОбособленноеПодразделениеОрганизации,ТипДокумента";
					
		СтруктураПоискаПриходных = Новый Структура(КлючиПоиска);
		СтруктураПоискаПриходных.ТипДокумента = 0;
		
		СтруктураПоискаРасходных = Новый Структура(КлючиПоиска);
		СтруктураПоискаРасходных.ТипДокумента = 1;
	КонецЕсли;
	
	Пока ВыборкаПоОрганизациям.Следующий() Цикл
		
		ВыборкаПоВалютам = ВыборкаПоОрганизациям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);		
		Пока ВыборкаПоВалютам.Следующий() Цикл
			
			ВыборкаПоОбособленнымПодразделениям = ВыборкаПоВалютам.Выбрать();
			Пока ВыборкаПоОбособленнымПодразделениям.Следующий() Цикл
				
				Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();	
				КонецЕсли; 
				
				//Вывод шапки
				ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				ВыборкаПриходныхОрдеров.Сбросить();
				
				Если ВыводитьКаждыйДокументВОтдельнойСтроке Тогда
					ЗаполнитьЗначенияСвойств(СтруктураПоиска, ВыборкаПоОбособленнымПодразделениям);	
				Иначе
					ВыборкаРасходныхОрдеров.Сбросить();
					
					ЗаполнитьЗначенияСвойств(СтруктураПоискаПриходных, ВыборкаПоОбособленнымПодразделениям);
					ЗаполнитьЗначенияСвойств(СтруктураПоискаРасходных, ВыборкаПоОбособленнымПодразделениям);
				КонецЕсли;
					
				НомерСтроки = 1;
					
				Пока 1=1 Цикл
		
					ЕстьЗапись = Ложь;
					
					Если ВыводитьКаждыйДокументВОтдельнойСтроке Тогда
			
						Если ВыборкаПриходныхОрдеров.НайтиСледующий(СтруктураПоиска) Тогда
						
							ЕстьЗапись = Истина;
							
							ОбластьМакета = Макет.ПолучитьОбласть("Строка");
							
							Если ВыборкаПриходныхОрдеров.ТипДокумента = 0 Тогда
							
								ОбластьМакета.Параметры.ДатаПриход  		= ВыборкаПриходныхОрдеров.ДеньПриход;
								ОбластьМакета.Параметры.НомерПриход 		= ВыборкаПриходныхОрдеров.НомерОрдераПриход;
								ОбластьМакета.Параметры.ОрдерПриход			= ВыборкаПриходныхОрдеров.ОрдерПриход;
								ОбластьМакета.Параметры.СуммаПриход 		= ВыборкаПриходныхОрдеров.СуммаПриход;
								ОбластьМакета.Параметры.КомментарийПриход 	= ВыборкаПриходныхОрдеров.КомментарийПриход;
								
							Иначе
								
								ОбластьМакета.Параметры.ДатаРасход  		= ВыборкаПриходныхОрдеров.ДеньПриход;
								ОбластьМакета.Параметры.НомерРасход 		= ВыборкаПриходныхОрдеров.НомерОрдераПриход;
								ОбластьМакета.Параметры.ОрдерРасход 		= ВыборкаПриходныхОрдеров.ОрдерПриход;
								ОбластьМакета.Параметры.СуммаРасход 	 	= ВыборкаПриходныхОрдеров.СуммаПриход;
								ОбластьМакета.Параметры.КомментарийРасход 	= ВыборкаПриходныхОрдеров.КомментарийПриход;
							
							КонецЕсли; 	
						КонецЕсли;
						
					Иначе
					
						Если ВыборкаПриходныхОрдеров.НайтиСледующий(СтруктураПоискаПриходных) Тогда
							
							ЕстьЗапись = Истина;
							
							ОбластьМакета = Макет.ПолучитьОбласть("Строка");
							ОбластьМакета.Параметры.ДатаПриход  		= ВыборкаПриходныхОрдеров.ДеньПриход;
							ОбластьМакета.Параметры.НомерПриход 		= ВыборкаПриходныхОрдеров.НомерОрдераПриход;
							ОбластьМакета.Параметры.ОрдерПриход			= ВыборкаПриходныхОрдеров.ОрдерПриход;
							ОбластьМакета.Параметры.СуммаПриход 		= ВыборкаПриходныхОрдеров.СуммаПриход;
							ОбластьМакета.Параметры.КомментарийПриход 	= ВыборкаПриходныхОрдеров.КомментарийПриход;
							
						КонецЕсли;	
						
						Если ВыборкаРасходныхОрдеров.НайтиСледующий(СтруктураПоискаРасходных) Тогда	
							
							Если Не ЕстьЗапись Тогда
								ОбластьМакета = Макет.ПолучитьОбласть("Строка");	
							КонецЕсли;
							
							ЕстьЗапись = Истина;
							
							ОбластьМакета.Параметры.ДатаРасход  		= ВыборкаРасходныхОрдеров.ДеньПриход;
							ОбластьМакета.Параметры.НомерРасход 		= ВыборкаРасходныхОрдеров.НомерОрдераПриход;
							ОбластьМакета.Параметры.ОрдерРасход 		= ВыборкаРасходныхОрдеров.ОрдерПриход;
							ОбластьМакета.Параметры.СуммаРасход 	 	= ВыборкаРасходныхОрдеров.СуммаПриход;
							ОбластьМакета.Параметры.КомментарийРасход 	= ВыборкаРасходныхОрдеров.КомментарийПриход;
							
						КонецЕсли;
					КонецЕсли;
					
					Если ЕстьЗапись Тогда
						Если НЕ ТабличныйДокумент.ПроверитьВывод(ОбластьМакета) Тогда
							// Выведем разрыв страницы
							ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
						КонецЕсли;
						
						Если Вариант2018 Тогда
							ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
							НомерСтроки = НомерСтроки + 1;
						КонецЕсли;
						
						ТабличныйДокумент.Вывести(ОбластьМакета);
					Иначе
						Прервать;	
					КонецЕсли; 
				
				КонецЦикла;	
			КонецЦикла; 
		КонецЦикла; 	
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СформироватьПечатнуюФормуЖурналРегистрации(МассивОбъектов, ОбъектыПечати, ПриходРасход)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	
	//Вариант макета будем определять по максимальной дате из документов кассовых книг, полученных для печати 
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДокументКассоваяКнига.Дата,
	|	ДокументКассоваяКнига.Организация КАК Организация,
	|	ДокументКассоваяКнига.ВалютаДенежныхСредств,
	|	ДокументКассоваяКнига.ОбособленноеПодразделениеОрганизации,
	|	ОрдераКассовойКниги.Документ
	|ПОМЕСТИТЬ Ордера
	|ИЗ
	|	Документ.ЛистКассовойКниги КАК ДокументКассоваяКнига
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЛистКассовойКниги.КассовыеОрдера КАК ОрдераКассовойКниги
	|		ПО ДокументКассоваяКнига.Ссылка = ОрдераКассовойКниги.Ссылка
	|ГДЕ
	|	ДокументКассоваяКнига.Ссылка В(&МассивДокументов)
	|	И ДокументКассоваяКнига.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА Ордера.Дата >= ДАТАВРЕМЯ(2018, 1, 5)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК Вариант2018
	|ИЗ
	|	Ордера КАК Ордера";
	
	ВыборкаВарианта = Запрос.Выполнить().Выбрать();
	ВыборкаВарианта.Следующий();
	
	Вариант2018 = ?(ВыборкаВарианта.Вариант2018 = Истина, Истина, Ложь); 
	
	Если Не Вариант2018 Тогда
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	КонецЕсли;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЖурналРегистрации" + ПриходРасход + ?(Вариант2018, "_2018", "");
	
	ИмяМакета 	= ?(Вариант2018, "ПФ_MXL_UK_ЖурналРегистрации2018", "ПФ_MXL_UK_ЖурналРегистрации");
	Макет 		= УправлениеПечатью.МакетПечатнойФормы("Документ.ЛистКассовойКниги." + ИмяМакета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Ордера.Организация КАК Организация,
	|	Ордера.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	Ордера.ОбособленноеПодразделениеОрганизации
	|ИЗ
	|	Ордера КАК Ордера
	|
	|СГРУППИРОВАТЬ ПО
	|	Ордера.Организация,
	|	Ордера.ВалютаДенежныхСредств,
	|	Ордера.ОбособленноеПодразделениеОрганизации
	|ИТОГИ ПО
	|	Организация,
	|	ВалютаДенежныхСредств
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Ордера.Организация КАК Организация,
	|	Ордера.ВалютаДенежныхСредств КАК ВалютаДенежныхСредств,
	|	Ордера.ОбособленноеПодразделениеОрганизации КАК ОбособленноеПодразделениеОрганизации,
	|	НАЧАЛОПЕРИОДА(КассовыйОрдер.Дата, ДЕНЬ) КАК День,
	|	КассовыйОрдер.Ссылка КАК Ордер,
	|	КассовыйОрдер.НомерОрдера КАК НомерОрдера,
	|	ВЫБОР
	|		КОГДА ПОДСТРОКА(КассовыйОрдер.НомерОрдера, 2, 1) = """"
	|			ТОГДА ""000000000"" + КассовыйОрдер.НомерОрдера
	|		КОГДА ПОДСТРОКА(КассовыйОрдер.НомерОрдера, 3, 1) = """"
	|			ТОГДА ""00000000"" + КассовыйОрдер.НомерОрдера
	|		КОГДА ПОДСТРОКА(КассовыйОрдер.НомерОрдера, 4, 1) = """"
	|			ТОГДА ""0000000"" + КассовыйОрдер.НомерОрдера
	|		КОГДА ПОДСТРОКА(КассовыйОрдер.НомерОрдера, 5, 1) = """"
	|			ТОГДА ""000000"" + КассовыйОрдер.НомерОрдера
	|		КОГДА ПОДСТРОКА(КассовыйОрдер.НомерОрдера, 6, 1) = """"
	|			ТОГДА ""00000"" + КассовыйОрдер.НомерОрдера
	|		КОГДА ПОДСТРОКА(КассовыйОрдер.НомерОрдера, 7, 1) = """"
	|			ТОГДА ""0000"" + КассовыйОрдер.НомерОрдера
	|		КОГДА ПОДСТРОКА(КассовыйОрдер.НомерОрдера, 8, 1) = """"
	|			ТОГДА ""000"" + КассовыйОрдер.НомерОрдера
	|		КОГДА ПОДСТРОКА(КассовыйОрдер.НомерОрдера, 9, 1) = """"
	|			ТОГДА ""00"" + КассовыйОрдер.НомерОрдера
	|		КОГДА ПОДСТРОКА(КассовыйОрдер.НомерОрдера, 10, 1) = """"
	|			ТОГДА ""0"" + КассовыйОрдер.НомерОрдера
	|		ИНАЧЕ КассовыйОрдер.НомерОрдера
	|	КОНЕЦ КАК НомерОрдераПорядок,
	|	КассовыйОрдер.СуммаДокумента КАК СуммаДокумента,
	|	ВЫБОР
	|		КОГДА &Вариант2018
	|			ТОГДА ВЫБОР
	|					КОГДА КассовыйОрдер.НазначениеДенежныхСредств = ЗНАЧЕНИЕ(Справочник.НазначенияНаличныхДенежныхСредств.ОплатаТруда)
	|						ТОГДА ЗНАЧЕНИЕ(Справочник.НазначенияНаличныхДенежныхСредств.ОплатаТруда)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НазначенияНаличныхДенежныхСредств.Командировка)
	|				КОНЕЦ
	|		ИНАЧЕ КассовыйОрдер.НазначениеДенежныхСредств
	|	КОНЕЦ КАК Назначение,
	|	ВЫБОР
	|		КОГДА &Вариант2018
	|			ТОГДА """"
	|		ИНАЧЕ КассовыйОрдер.НазначениеДенежныхСредств.Наименование
	|	КОНЕЦ КАК НаименованиеНазначения,
	|	КассовыйОрдер.Комментарий КАК Комментарий
	|ИЗ
	|	Ордера КАК Ордера
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйКассовыйОрдер КАК КассовыйОрдер
	|		ПО Ордера.Документ = КассовыйОрдер.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ВалютаДенежныхСредств,
	|	ОбособленноеПодразделениеОрганизации,
	|	День,
	|	НомерОрдераПорядок";
	
	Если ПриходРасход = "Расход" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "Документ.ПриходныйКассовыйОрдер", "Документ.РасходныйКассовыйОрдер"); 	
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("Вариант2018", Вариант2018);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ВыборкаПоОрганизациям = МассивРезультатов[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 
	ВыборкаОрдеров = МассивРезультатов[1].Выбрать();
	
	ТаблицаНазначения = Новый ТаблицаЗначений;
	ТаблицаНазначения.Колонки.Добавить("Назначение");
	ТаблицаНазначения.Колонки.Добавить("НаименованиеНазначения");
	ТаблицаНазначения.Колонки.Добавить("СуммаДокумента");
	ТаблицаНазначения.Колонки.Добавить("НомерКолонки");
	
	Пока ВыборкаПоОрганизациям.Следующий() Цикл
		
		ВыборкаПоВалютам = ВыборкаПоОрганизациям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);		
		Пока ВыборкаПоВалютам.Следующий() Цикл
			
			ВыборкаПоОбособленнымПодразделениям = ВыборкаПоВалютам.Выбрать();
			Пока ВыборкаПоОбособленнымПодразделениям.Следующий() Цикл
				
				Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();	
				КонецЕсли;
				
				ВыборкаОрдеров.Сбросить();
				ТаблицаНазначения.Очистить();
				
				СтруктураПоиска = Новый Структура(
					"Организация, 
					|ВалютаДенежныхСредств, 
					|ОбособленноеПодразделениеОрганизации",
					ВыборкаПоОбособленнымПодразделениям.Организация, 
					ВыборкаПоОбособленнымПодразделениям.ВалютаДенежныхСредств,	
					ВыборкаПоОбособленнымПодразделениям.ОбособленноеПодразделениеОрганизации);	
				
				Пока ВыборкаОрдеров.НайтиСледующий(СтруктураПоиска) Цикл
					СтрокаНазначения = ТаблицаНазначения.Найти(ВыборкаОрдеров.Назначение, "Назначение");
					Если СтрокаНазначения = Неопределено Тогда
						ЗаполнитьЗначенияСвойств(ТаблицаНазначения.Добавить(), ВыборкаОрдеров);
					Иначе
						СтрокаНазначения.СуммаДокумента = СтрокаНазначения.СуммаДокумента + ВыборкаОрдеров.СуммаДокумента;
					КонецЕсли; 				
				КонецЦикла; 
				
				//Эти два назначения должны присутствовать в шапке обязательно, в не зависимости от наличия движения по этим назначениям
				МассивОбязательныхНазначений = Новый Массив;
				МассивОбязательныхНазначений.Добавить(Справочники.НазначенияНаличныхДенежныхСредств.ОплатаТруда);
				МассивОбязательныхНазначений.Добавить(Справочники.НазначенияНаличныхДенежныхСредств.Командировка);
				
				Для каждого Назначение Из МассивОбязательныхНазначений Цикл
					СтрокаНазначения = ТаблицаНазначения.Найти(Назначение, "Назначение");
					Если СтрокаНазначения = Неопределено Тогда
						СтрокаНазначения = ТаблицаНазначения.Добавить();
						СтрокаНазначения.Назначение = Назначение;
						СтрокаНазначения.СуммаДокумента = 0;
					КонецЕсли;
					СтрокаНазначения.НомерКолонки 			= ?(СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ОплатаТруда, 3, 4);
					СтрокаНазначения.НаименованиеНазначения = ?(СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ОплатаТруда,
						"На заробітну плату, премії, стипендії", "На відрядження та інші цілі"); 
				КонецЦикла; 
				
				Если Вариант2018 Тогда
					ТаблицаНазначения.Сортировать("НомерКолонки");
				Иначе
				
					//Проставим номера для оставшихся назначений
					НомерКолонки = 5;
					СтрокиНазначенияКВыводу = ТаблицаНазначения.НайтиСтроки(Новый Структура("НомерКолонки", Неопределено));
					КоличествоСтрок = СтрокиНазначенияКВыводу.Количество();
					Если КоличествоСтрок = 0 Тогда
						//Также если нет движения по другим назначениям, кроме обязательных - необходимо добавить колонку без наименования (колонка 5)
						СтрокаНазначения = ТаблицаНазначения.Добавить();
						СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ПустаяСсылка();
						СтрокаНазначения.СуммаДокумента = 0;
						СтрокаНазначения.НаименованиеНазначения = "";
						СтрокаНазначения.НомерКолонки = НомерКолонки;
					Иначе
						Для каждого СтрокаНазначения Из СтрокиНазначенияКВыводу Цикл
							//Пустая должна быть последней колонкой из назначений
							Если СтрокаНазначения.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ПустаяСсылка() Тогда
								СтрокаНазначения.НомерКолонки = КоличествоСтрок + 4;
								СтрокаНазначения.НаименованиеНазначения = "";
							Иначе
								СтрокаНазначения.НомерКолонки = НомерКолонки;
								НомерКолонки = НомерКолонки + 1;
							КонецЕсли; 		
						КонецЦикла;
					КонецЕсли;
					
					ТаблицаНазначения.Сортировать("НомерКолонки");
					
					КоличествоНазначенийКВыводу = ТаблицаНазначения.Количество();
					ЦентральнаяКолонка = Окр(КоличествоНазначенийКВыводу / 2) + 2;
					
				КонецЕсли;
				
				ОбластьМакета = Макет.ПолучитьОбласть("Шапка|ДатаНомер");
				ОбластьМакета.Параметры.ВидДокумента = ?(ПриходРасход = "Приход", "Прибутковий документ", "Видатковий документ");
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				Если Вариант2018 Тогда
					ОбластьМакета = Макет.ПолучитьОбласть("Шапка|Назначение");
					ОбластьМакета.Параметры.ТекстШапки = ?(ПриходРасход = "Приход", "Надійшло грошей", "Витрачено грошей");
					ТабличныйДокумент.Присоединить(ОбластьМакета);
				Иначе
					Для Каждого Назначение из ТаблицаНазначения Цикл
						ОбластьМакета = Макет.ПолучитьОбласть("Шапка|Назначение");
						ОбластьМакета.Параметры.Назначение   = Назначение.НаименованиеНазначения; 
						ОбластьМакета.Параметры.НомерКолонки = Назначение.НомерКолонки;
						Если Назначение.НомерКолонки = ЦентральнаяКолонка Тогда
							ОбластьМакета.Параметры.ТекстШапки = ?(ПриходРасход = "Приход", "Надійшло грошей", "Витрачено грошей");
						КонецЕсли;
						ТабличныйДокумент.Присоединить(ОбластьМакета);
					КонецЦикла;
				КонецЕсли;
				
				ОбластьМакета = Макет.ПолучитьОбласть("Шапка|Комментарий");
				Если Не Вариант2018 Тогда
					ОбластьМакета.Параметры.НомерКолонки = КоличествоНазначенийКВыводу + 3;
				КонецЕсли;
				ТабличныйДокумент.Присоединить(ОбластьМакета);
				
				НомерСтроки = 1;
				
				//Вывод таблицы
				ВыборкаОрдеров.Сбросить();
				Пока ВыборкаОрдеров.НайтиСледующий(СтруктураПоиска) Цикл
					
					ОбластьМакета = Макет.ПолучитьОбласть("Строка|ДатаНомер");
					Если Вариант2018 Тогда
						ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
						НомерСтроки = НомерСтроки + 1;
					КонецЕсли;
					ОбластьМакета.Параметры.Дата = ВыборкаОрдеров.День;
					ОбластьМакета.Параметры.Номер = ВыборкаОрдеров.НомерОрдера;
					ОбластьМакета.Параметры.Ордер = ВыборкаОрдеров.Ордер;
					ТабличныйДокумент.Вывести(ОбластьМакета);
					
					ОбластьМакета = Макет.ПолучитьОбласть("Строка|Назначение");
					Если Вариант2018 Тогда
						ИмяПараметра = ?(ВыборкаОрдеров.Назначение = Справочники.НазначенияНаличныхДенежныхСредств.ОплатаТруда, 
							"СуммаДокументаЗарплата", "СуммаДокументаКомандировка"); 
						ОбластьМакета.Параметры[ИмяПараметра] = ВыборкаОрдеров.СуммаДокумента;
						ОбластьМакета.Параметры.Ордер = ВыборкаОрдеров.Ордер;
						ТабличныйДокумент.Присоединить(ОбластьМакета);
					Иначе
						Для Каждого СтрокаНазначения из ТаблицаНазначения Цикл
							ОбластьМакета.Параметры.СуммаДокумента = ?(ВыборкаОрдеров.Назначение = СтрокаНазначения.Назначение, ВыборкаОрдеров.СуммаДокумента, 0);	
							ОбластьМакета.Параметры.Ордер = ВыборкаОрдеров.Ордер;
							ТабличныйДокумент.Присоединить(ОбластьМакета);
						КонецЦикла;
					КонецЕсли;
					
					ОбластьМакета = Макет.ПолучитьОбласть("Строка|Комментарий");
					ОбластьМакета.Параметры.Комментарий = ВыборкаОрдеров.Комментарий;
					ОбластьМакета.Параметры.Ордер = ВыборкаОрдеров.Ордер;
					ТабличныйДокумент.Присоединить(ОбластьМакета);
					
				КонецЦикла;
				
				//Вывод всего
				ОбластьМакета = Макет.ПолучитьОбласть("Всего|ДатаНомер");
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				ОбластьМакета = Макет.ПолучитьОбласть("Всего|Назначение");
				Если Вариант2018 Тогда
					ОбластьМакета.Параметры.СуммаВсегоЗарплата = ТаблицаНазначения[0].СуммаДокумента;
					ОбластьМакета.Параметры.СуммаВсегоКомандировка = ТаблицаНазначения[1].СуммаДокумента;
					ТабличныйДокумент.Присоединить(ОбластьМакета);
				Иначе
					Для Каждого Назначение из ТаблицаНазначения Цикл
						ОбластьМакета.Параметры.СуммаВсего = Назначение.СуммаДокумента; 
						ТабличныйДокумент.Присоединить(ОбластьМакета);
					КонецЦикла;
				КонецЕсли;
				
				ОбластьМакета = Макет.ПолучитьОбласть("Всего|Комментарий");

				ТабличныйДокумент.Присоединить(ОбластьМакета);
				
			КонецЦикла; 
		КонецЦикла; 	
	КонецЦикла;  
	
	Возврат ТабличныйДокумент;
	
КонецФункции	

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

#Область Прочее

Функция ПараметрыОбособленногоПодразделения(Объект) Экспорт
	
	ИспользованиеОбособленногоПодразделения = Ложь;
	УстановитьПривилегированныйРежим(Истина);
	
	ПараметрыОбособленногоПодразделения = Новый Структура;
	ИспользованиеОбособленногоПодразделения = ПолучитьФункциональнуюОпцию("ИспользоватьУчетДенежныхСредствПоОбособленнымПодразделениямОрганизация", Новый Структура("Организация", Объект.Организация));
	
	ПараметрыОбособленногоПодразделения.Вставить("ИспользованиеОбособленногоПодразделения", ИспользованиеОбособленногоПодразделения);
	
	Возврат ПараметрыОбособленногоПодразделения;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли
