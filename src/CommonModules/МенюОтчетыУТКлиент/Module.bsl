
#Область ПрограммныйИнтерфейс

#Область СверкаРасчетовСПартнерами

Функция СверкаРасчетовСПартнерами(ОписаниеКоманды) Экспорт
	
	ПараметрыВыполненияКоманды = Новый Структура("Источник,Уникальность,Окно,НавигационнаяСсылка");
	ЗаполнитьЗначенияСвойств(ПараметрыВыполненияКоманды, ОписаниеКоманды.ДополнительныеПараметры);
	
	ПараметрКоманды = ОписаниеКоманды.ПараметрКоманды;
	
	Если ТипЗнч(ПараметрКоманды) <> Тип("Массив") Тогда
		МассивДокументов = Новый Массив();
		МассивДокументов.Добавить(ПараметрКоманды);
	Иначе
		МассивДокументов = ПараметрКоманды;
	КонецЕсли; 
	
	ДополнительныеПараметры = Новый Структура("Источник, Уникальность, Окно");
	ЗаполнитьЗначенияСвойств(ДополнительныеПараметры, ПараметрыВыполненияКоманды);
	
	ОписаниеОповещения = 
		Новый ОписаниеОповещения("СверкаРасчетовСПартнерамиЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	УправлениеПечатьюКлиент.ПроверитьПроведенностьДокументов(ОписаниеОповещения, МассивДокументов);
	
КонецФункции

#КонецОбласти

#Область СостояниеВыполненияДокументов

Функция СостояниеВыполненияРеализацииАкта(ОписаниеКоманды) Экспорт
	
	ПараметрыВыполненияКоманды = Новый Структура("Источник,Уникальность,Окно,НавигационнаяСсылка");
	ЗаполнитьЗначенияСвойств(ПараметрыВыполненияКоманды, ОписаниеКоманды.ДополнительныеПараметры);
	
	ПараметрКоманды = ОписаниеКоманды.ПараметрКоманды;
	
	Если НЕ МенюОтчетыУТВызовСервера.ПроверитьСписокДокументов(ПараметрКоманды) Тогда
		ПоказатьПредупреждение(,НСтр("ru='Команда не может быть выполнена для документов разного вида.';uk='Команда не може бути виконана для документів різного виду.'"));
		Возврат Неопределено;
	КонецЕсли;
	
	ВходящиеДокументы = Новый СписокЗначений;
	ВходящиеДокументы.ЗагрузитьЗначения(ПараметрКоманды);
	
	ПараметрыФормы = Новый Структура("ВходящиеДокументы", ВходящиеДокументы);
	
	ОткрытьФорму("Отчет.СостояниеВыполненияДокументов.Форма.ФормаОтчета", 
		ПараметрыФормы, 
		ПараметрыВыполненияКоманды.Источник,
		ПараметрыВыполненияКоманды.Уникальность,
		ПараметрыВыполненияКоманды.Окно, 
		ПараметрыВыполненияКоманды.НавигационнаяСсылка);
	
КонецФункции

#КонецОбласти

#Область СравнениеГрафиковКредитовИДепозитов

Функция СравнениеПроизвольныхГрафиков(ОписаниеКоманды) Экспорт
	
	ПараметрыВыполненияКоманды = Новый Структура("Источник,Уникальность,Окно,НавигационнаяСсылка");
	ЗаполнитьЗначенияСвойств(ПараметрыВыполненияКоманды, ОписаниеКоманды.ДополнительныеПараметры);
	
	ПараметрКоманды = ОписаниеКоманды.ПараметрКоманды;
	
	Если ПараметрКоманды.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ОписаниеКоманды.Свойство("Форма") Тогда
		ПараметрыВыполненияКоманды.Источник = ОписаниеКоманды.Форма;
	КонецЕсли;
	
	Отбор = Новый Структура("ВариантГрафика1, Договор", ПараметрКоманды[0], МенюОтчетыУТВызовСервера.ВладелецГрафика(ПараметрКоманды[0]));
	ЭтоСписок = СтрНайти(ПараметрыВыполненияКоманды.Источник.ИмяФормы,"ФормаЭлемента") = 0;
	Если ЭтоСписок Тогда
		Если ПараметрКоманды.Количество() <= 1 Тогда
			Текст = НСтр("ru='Для сравнения необходимо выбрать два графика!';uk='Для порівняння необхідно вибрати два графіка!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст);
			Возврат Неопределено;
		КонецЕсли;
		Отбор.Вставить("ВариантГрафика2", ПараметрКоманды[1]);
	Иначе
		Отбор.Вставить("ВариантГрафика2", Неопределено);
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("КлючВарианта, Отбор, СформироватьПриОткрытии, ВидимостьКомандВариантовОтчетов",
		"СравнениеВариантовГрафиковКонтекст",
		Отбор,
		Истина,
		Ложь);
	
	ОткрытьФорму("Отчет.СравнениеГрафиковКредитовИДепозитов.Форма", 
			ПараметрыФормы, 
			ПараметрыВыполненияКоманды.Источник, 
			ПараметрыВыполненияКоманды.Уникальность, 
			ПараметрыВыполненияКоманды.Окно);
			
КонецФункции

#КонецОбласти

#Область ЭлектронныеДокументы

Функция АктуальныйЭД(ОписаниеКоманды) Экспорт
	
	ПараметрыВыполненияКоманды = Новый Структура("Источник,Уникальность,Окно,НавигационнаяСсылка");
	ЗаполнитьЗначенияСвойств(ПараметрыВыполненияКоманды, ОписаниеКоманды.ДополнительныеПараметры);
	
	ПараметрКоманды = ОписаниеКоманды.ПараметрКоманды;
	
	ОбменСКонтрагентамиКлиент.ОткрытьАктуальныйЭД(ПараметрКоманды, ПараметрыВыполненияКоманды.Источник, ПараметрыВыполненияКоманды);
	
КонецФункции

Функция ДеревоЭД(ОписаниеКоманды) Экспорт
	
	ПараметрыВыполненияКоманды = Новый Структура("Источник,Уникальность,Окно,НавигационнаяСсылка");
	ЗаполнитьЗначенияСвойств(ПараметрыВыполненияКоманды, ОписаниеКоманды.ДополнительныеПараметры);
	
	ПараметрКоманды = ОписаниеКоманды.ПараметрКоманды;
	
	ОбменСКонтрагентамиКлиент.ОткрытьДеревоЭД(ПараметрКоманды, ПараметрыВыполненияКоманды, Ложь);
	
КонецФункции

Функция ИнтеркампаниСписокЭД(ОписаниеКоманды) Экспорт
	
	ПараметрыВыполненияКоманды = Новый Структура("Источник,Уникальность,Окно,НавигационнаяСсылка");
	ЗаполнитьЗначенияСвойств(ПараметрыВыполненияКоманды, ОписаниеКоманды.ДополнительныеПараметры);
	
	ПараметрКоманды = ОписаниеКоманды.ПараметрКоманды;
	
	ОбменСКонтрагентамиКлиент.ОткрытьДеревоЭД(ПараметрКоманды, ПараметрыВыполненияКоманды);
	
КонецФункции

Функция СписокЭД(ОписаниеКоманды) Экспорт
	
	ПараметрыВыполненияКоманды = Новый Структура("Источник,Уникальность,Окно,НавигационнаяСсылка");
	ЗаполнитьЗначенияСвойств(ПараметрыВыполненияКоманды, ОписаниеКоманды.ДополнительныеПараметры);
	
	ПараметрКоманды = ОписаниеКоманды.ПараметрКоманды;
	
	ОбменСКонтрагентамиКлиент.ОткрытьДеревоЭД(ПараметрКоманды, ПараметрыВыполненияКоманды);
	
КонецФункции

#КонецОбласти

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Функция ABCXYZАнализНоменклатуры(ОписаниеКоманды) Экспорт
	
	ПараметрКоманды = ОписаниеКоманды.ПараметрКоманды;
	ПараметрыФормы  = ОписаниеКоманды.ПараметрыФормы;
	
	Отбор    = Новый Структура("Номенклатура", ПараметрКоманды);
	ЭтаФорма = Новый Структура("Источник, Уникальность, Окно, НавигационнаяСсылка");
	
	ПараметрыФормы.Вставить("Отбор", Отбор);
	
	Если ЗначениеЗаполнено(ПараметрКоманды) Тогда
		ОткрытьФорму("Отчет.ABCXYZАнализНоменклатуры.Форма", ПараметрыФормы, ЭтаФорма, ПараметрКоманды);
	КонецЕсли;
	
КонецФункции

Функция ВедомостьПоСериямТовара(ОписаниеКоманды) Экспорт
	
	ПараметрКоманды = ОписаниеКоманды.ПараметрКоманды;
	ПараметрыФормы = ОписаниеКоманды.ПараметрыФормы;
	
	Отбор = Новый Структура("Номенклатура", ПараметрКоманды);
	ЭтаФорма = Новый Структура("Источник, Уникальность, Окно, НавигационнаяСсылка");
	
	ПараметрыФормы.Вставить("Отбор", Отбор);
	
	Если ЗначениеЗаполнено(ПараметрКоманды) Тогда
		
		ОткрытьФорму("Отчет.ВедомостьПоСериямНоменклатуры.Форма",
			ПараметрыФормы,
			ЭтаФорма,
			ПараметрКоманды);
		
	КонецЕсли;
	
КонецФункции

Функция СтруктураПодчиненности(ОписаниеКоманды) Экспорт
	
	ПараметрыВыполненияКоманды = Новый Структура("Источник,Уникальность,Окно,НавигационнаяСсылка");
	ЗаполнитьЗначенияСвойств(ПараметрыВыполненияКоманды, ОписаниеКоманды.ДополнительныеПараметры);
	
	ПараметрКоманды = ОписаниеКоманды.ПараметрКоманды;
	
	Если ЗначениеЗаполнено(ПараметрКоманды) Тогда

		ОткрытьФорму("ОбщаяФорма.СтруктураПодчиненности",Новый Структура("ОбъектОтбора", ПараметрКоманды),
				ПараметрыВыполненияКоманды.Источник,
				ПараметрКоманды,
				ПараметрыВыполненияКоманды.Окно);

	КонецЕсли;

КонецФункции

#Область СверкаРасчетовСПартнерами

Процедура СверкаРасчетовСПартнерамиЗавершение(МассивДокументов, ДополнительныеПараметры) Экспорт
	
	ПараметрыФормы =
		Новый Структура("Отбор, КлючНазначенияИспользования, СформироватьПриОткрытии, ВидимостьКомандВариантовОтчетов",
			Новый Структура("СверкаВзаиморасчетов", МассивДокументов),
			"СверкаВзаиморасчетов",
			Истина,
			Ложь);
		
	ОткрытьФорму("Отчет.СверкаРасчетовСПартнерами.Форма",
		ПараметрыФормы,
		ДополнительныеПараметры.Источник,
		ДополнительныеПараметры.Уникальность,
		ДополнительныеПараметры.Окно);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
