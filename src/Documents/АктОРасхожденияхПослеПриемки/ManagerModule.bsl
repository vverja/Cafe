#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	
	ИменаРеквизитов = "ТипОснованияАктаОРасхождении,Дата";
	
	Возврат ИменаРеквизитов;
	
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение
//			Тип Структура
//				Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.АктОРасхожденияхПослеПриемки";
	
	ПараметрыСерийСклада = Новый Структура;
	ПараметрыСерийСклада.Вставить("ИспользоватьСерииНоменклатуры", ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры"));
	ПараметрыСерийСклада.Вставить("УчитыватьСебестоимостьПоСериям",ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьПоСериямСклад"));
	
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры;
	
	Если Объект.ТипОснованияАктаОРасхождении = Перечисления.ТипыОснованияАктаОРасхождении.ВозвратТоваровОтКлиента Тогда
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаПоВозвратуОтКлиента);
	ИначеЕсли Объект.ТипОснованияАктаОРасхождении = Перечисления.ТипыОснованияАктаОРасхождении.ПоступлениеТоваровУслуг Тогда
		ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаОтПоставщика);
	Иначе
		ТекстИслючения = НСтр("ru='Не поддерживается получение параметров серий для акта с типом основания %ТипАкта%.';uk='Не підтримується отримання параметрів серій для акту з типом підстави %ТипАкта%.'");
		ТекстИслючения = СтрЗаменить(ТекстИслючения, "%ТипАкта%", Объект.ТипОснованияАктаОРасхождении);
		ВызватьИсключение ТекстИслючения;
	КонецЕсли;
		
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("ЗаполненоПоОснованию");
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("ДокументОснование");
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Склад");
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Действие");
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Назначение");
	
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;
	
	ПараметрыУказанияСерий.ТолькоСерииДляСебестоимости  = Ложь;
	ПараметрыУказанияСерий.Дата                         = Объект.Дата;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Склад,
	|	Товары.ЗаполненоПоОснованию,
	|	Товары.ДокументОснование,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Серия,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.Действие,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Склад,
	|	Товары.ЗаполненоПоОснованию,
	|	Товары.ДокументОснование,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Действие,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Склад,
	|	Товары.ЗаполненоПоОснованию,
	|	Товары.ДокументОснование,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Действие,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Склад,
	|	Серии.ЗаполненоПоОснованию,
	|	Серии.ДокументОснование,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Действие,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Склад,
	|	Серии.ЗаполненоПоОснованию,
	|	Серии.ДокументОснование,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Действие,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Склад,
	|	Серии.ЗаполненоПоОснованию,
	|	Серии.ДокументОснование,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Действие
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА Склады.ИспользоватьОрдернуюСхемуПриОтгрузке
	|				И &Дата >= Склады.ДатаНачалаОрдернойСхемыПриПоступлении
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И (ТоварыДляЗапроса.Количество > 0
	|								ИЛИ ТоварыДляЗапроса.ЗаполненоПоОснованию)
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И (ТоварыДляЗапроса.Количество > 0
	|								ИЛИ ТоварыДляЗапроса.ЗаполненоПоОснованию)
	|						ТОГДА 8
	|					ИНАЧЕ 7
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке
	|				И (НЕ Склады.ИспользоватьОрдернуюСхемуПриПоступлении
	|					ИЛИ &Дата < Склады.ДатаНачалаОрдернойСхемыПриПоступлении)
	|				И (ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеПоВозвратуОтКлиента
	|						И &ПриемкаПоВозвратуОтКлиента
	|					ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеОтПоставщика
	|						И &ПриемкаОтПоставщика)
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И (ТоварыДляЗапроса.Количество > 0
	|											ИЛИ ТоварыДляЗапроса.ЗаполненоПоОснованию)
	|									ТОГДА 4
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И (ТоварыДляЗапроса.Количество > 0
	|										ИЛИ ТоварыДляЗапроса.ЗаполненоПоОснованию)
	|								ТОГДА 2
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|				И ТоварыДляЗапроса.Склад = СерииДляЗапроса.Склад
	|				И ТоварыДляЗапроса.ДокументОснование = СерииДляЗапроса.ДокументОснование
	|				И ТоварыДляЗапроса.ЗаполненоПоОснованию = СерииДляЗапроса.ЗаполненоПоОснованию
	|				И ТоварыДляЗапроса.Действие = СерииДляЗапроса.Действие
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|				ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|			ПО (ПолитикиУчетаСерий.Склад = ТоварыДляЗапроса.Склад)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|			И Товары.Склад = ТоварыДляЗапроса.Склад
	|			И Товары.ДокументОснование = ТоварыДляЗапроса.ДокументОснование
	|			И Товары.ЗаполненоПоОснованию = ТоварыДляЗапроса.ЗаполненоПоОснованию
	|			И Товары.Действие = ТоварыДляЗапроса.Действие
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	ВводНаОснованииПереопределяемый.ДобавитьКомандыСоздатьНаОснованииПисмаПоШаблону(КомандыСоздатьНаОсновании);
	
	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);
	
	Документы.РасходныйОрдерНаТовары.ДобавитьКомандуСоздатьНаОснованииРасходныйОрдерНаТовары(КомандыСоздатьНаОсновании);
	
	Документы.ПоручениеЭкспедитору.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);

КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.АктОРасхожденияхПослеПриемки) Тогда
		
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.АктОРасхожденияхПослеПриемки.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.АктОРасхожденияхПослеПриемки);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьАктыРасхожденийПослеПриемкиПоВозвратам,ИспользоватьАктыРасхожденийПослеПриемкиПоПоступлениям";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

КонецПроцедуры

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Поля.Добавить("ТипОснованияАктаОРасхождении");
	Поля.Добавить("Дата");
	Поля.Добавить("Номер");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПостфиксИмениДокумента = ?(Данные.ТипОснованияАктаОРасхождении = Перечисления.ТипыОснованияАктаОРасхождении.ПоступлениеТоваровУслуг,
	                           НСтр("ru='после поступления';uk='після надходження'"),
	                           НСтр("ru='после возврата от клиента';uk='після повернення від клієнта'"));
	
	Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Акт о расхождениях %1 %2 от %3';uk='Акт про розбіжності %1 %2 від %3'"),
	                                                                        ПостфиксИмениДокумента,
	                                                                        Данные.Номер,
	                                                                        Данные.Дата);
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт

	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаТоварыКПоступлению(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОформлениюПоступления(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОтгрузке(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвижениеТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОформлениюИзлишковНедостач(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры);	
	ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);

КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеШапки.Дата                         КАК Период,
	|	ДанныеШапки.Партнер                      КАК Партнер,
	|	ДанныеШапки.Контрагент                   КАК Контрагент,
	|	ДанныеШапки.Организация                  КАК Организация,
	|	ДанныеШапки.Валюта                       КАК Валюта,
	|	ДанныеШапки.Статус                       КАК Статус,
	|	ДанныеШапки.ЦенаВключаетНДС              КАК ЦенаВключаетНДС,
	|	ДанныеШапки.ХозяйственнаяОперация        КАК ХозяйственнаяОперация,
	|	ДанныеШапки.Договор                      КАК Договор,
	|	ДанныеШапки.СпособОтраженияРасхождений   КАК СпособОтраженияРасхождений,
	|	ДанныеШапки.ТипОснованияАктаОРасхождении КАК ТипОснованияАктаОРасхождении
	|
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки КАК ДанныеШапки
	|ГДЕ
	|	ДанныеШапки.Ссылка = &Ссылка";
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",                        Реквизиты.Период);
	Запрос.УстановитьПараметр("Период",                        Реквизиты.Период);
	Запрос.УстановитьПараметр("Партнер",                       Реквизиты.Партнер);
	Запрос.УстановитьПараметр("Контрагент",                    Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("Валюта",                        Реквизиты.Валюта);
	Запрос.УстановитьПараметр("Статус",                        Реквизиты.Статус);
	Запрос.УстановитьПараметр("Организация",                   Реквизиты.Организация);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС",               Реквизиты.ЦенаВключаетНДС);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",         Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("Договор",                       Реквизиты.Договор);
	Запрос.УстановитьПараметр("СпособОтраженияРасхождений",    Реквизиты.СпособОтраженияРасхождений);
	Запрос.УстановитьПараметр("СкладскаяОперация",   СкладскаяОперацияПоТипуОснования(Реквизиты.ТипОснованияАктаОРасхождении));
	
КонецПроцедуры

Функция ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса)

	ИмяРегистра = "ВтТовары";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура                                    КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                                  КАК Характеристика,
	|	ТаблицаТовары.Склад                                           КАК Склад,
	|	ТаблицаТовары.Назначение                                      КАК Назначение,
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|				ТаблицаТовары.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                                      КАК НазначениеСкладское,
	|	ТаблицаТовары.Количество - ТаблицаТовары.КоличествоПоДокументу КАК Расхождения,
	|	ТаблицаТовары.СтатусУказанияСерий                              КАК СтатусУказанияСерий,
	|	ТаблицаТовары.Серия                                            КАК Серия,
	|	ТаблицаТовары.НомерСтроки                                      КАК НомерСтроки,
	|	ТаблицаТовары.ДокументОснование                                КАК ДокументОснование,
	|	ТаблицаТовары.ДокументОснование.Соглашение                     КАК СоглашениеДокументаОснования,
	|	ТаблицаТовары.ЗаказПоставщику                                  КАК ЗаказПоставщику,
	|	0                                                              КАК Порядок,
	|	ТаблицаТовары.Действие                                         КАК Действие,
	|	
	|	ВЫБОР 
	|		КОГДА ТаблицаТовары.ЗаказПоставщику В(НЕОПРЕДЕЛЕНО, 
	|												ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка),
	|                                                ЗНАЧЕНИЕ(Документ.ЗаявкаНаВозвратТоваровОтКлиента.ПустаяСсылка)) 
	|			ТОГДА
	|				ТаблицаТовары.ДокументОснование
	|			ИНАЧЕ
	|				ТаблицаТовары.ЗаказПоставщику
	|	КОНЕЦ                                                      КАК Распоряжение,
	|	
	|	ВЫБОР 
	|		КОГДА СпрСклад.ИспользоватьОрдернуюСхемуПриПоступлении И СпрСклад.ДатаНачалаОрдернойСхемыПриПоступлении <= &Период 
	|			ТОГДА
	|				ИСТИНА
	|			ИНАЧЕ
	|				ЛОЖЬ
	|	КОНЕЦ         КАК ОрдернаяСхемаПриПриемке,
	|
	|	ВЫБОР 
	|		КОГДА СпрСклад.ИспользоватьОрдернуюСхемуПриОтгрузке И СпрСклад.ДатаНачалаОрдернойСхемыПриОтгрузке <= &Период 
	|			ТОГДА
	|				ИСТИНА
	|			ИНАЧЕ
	|				ЛОЖЬ
	|	КОНЕЦ         КАК ОрдернаяСхемаПриОтгрузке,
	|	
	|	ВЫБОР 
	|		КОГДА СпрСклад.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач И СпрСклад.ДатаНачалаОрдернойСхемыПриОтраженииИзлишковНедостач <= &Период 
	|			ТОГДА
	|				ИСТИНА
	|			ИНАЧЕ
	|				ЛОЖЬ
	|	КОНЕЦ         КАК ОрдернаяСхемаПриОтраженииИзлишковНедостач,
	|	ВЫБОР 
	|		КОГДА
	|			НЕ ТаблицаТовары.ЗаказПоставщику В(НЕОПРЕДЕЛЕНО, 
	|												ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка),
	|                                                ЗНАЧЕНИЕ(Документ.ЗаявкаНаВозвратТоваровОтКлиента.ПустаяСсылка))
	|		ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ПоступлениеПоЗаказу,
	|	ВЫБОР 
	|		КОГДА
	|			ТаблицаТовары.ДокументОснование.Соглашение.ВариантПриемкиТоваров
	|				В (Значение(Перечисление.ВариантыПриемкиТоваров.НеРазделенаПоЗаказамИНакладным),
	|								Значение(Перечисление.ВариантыПриемкиТоваров.МожетПроисходитьБезЗаказовИНакладных))
	|					ТОГДА 
	|						ИСТИНА
	|					ИНАЧЕ
	|						ЛОЖЬ
	|	КОНЕЦ КАК РаспоряжениемЯвляетсяСоглашение
	|	
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТаблицаТовары.Склад
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.КоличествоПоДокументу <> ТаблицаТовары.Количество
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаВтТаблицаТоварыИСерии(Запрос, ТекстыЗапроса)

	ИмяРегистра = "ВтТаблицаТоварыИСерии";

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура                                     КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                                   КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                                          КАК Назначение,
	|	ТаблицаТовары.Склад                                            КАК Склад,
	|	ТаблицаТовары.Количество - ТаблицаТовары.КоличествоПоДокументу КАК Расхождения,
	|	ТаблицаТовары.СтатусУказанияСерий                              КАК СтатусУказанияСерий,
	|	ТаблицаТовары.Серия                                            КАК Серия,
	|	ТаблицаТовары.НомерСтроки                                      КАК НомерСтроки,
	|	ТаблицаТовары.Действие                                         КАК Действие,
	|	ВЫБОР 
	|		КОГДА СпрСклад.ИспользоватьОрдернуюСхемуПриПоступлении И СпрСклад.ДатаНачалаОрдернойСхемыПриПоступлении  <= &Период 
	|			ТОГДА
	|				ИСТИНА
	|			ИНАЧЕ
	|				ЛОЖЬ
	|	КОНЕЦ                                                          КАК ОрдернаяСхемаПриПриемке,
	|
	|	ВЫБОР 
	|		КОГДА СпрСклад.ИспользоватьОрдернуюСхемуПриОтгрузке И СпрСклад.ДатаНачалаОрдернойСхемыПриОтгрузке <= &Период 
	|			ТОГДА
	|				ИСТИНА
	|			ИНАЧЕ
	|				ЛОЖЬ
	|	КОНЕЦ         												   КАК ОрдернаяСхемаПриОтгрузке,
	|	
	|	ВЫБОР 
	|		КОГДА СпрСклад.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач 
	|			И СпрСклад.ДатаНачалаОрдернойСхемыПриОтраженииИзлишковНедостач < &Период 
	|			ТОГДА
	|				ИСТИНА
	|			ИНАЧЕ
	|				ЛОЖЬ
	|	КОНЕЦ                                                      	   КАК ОрдернаяСхемаПриОтраженииИзлишковНедостач
	|	
	|ПОМЕСТИТЬ ВтТаблицаТоварыИСерии
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТаблицаТовары.Склад
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.КоличествоПоДокументу <> ТаблицаТовары.Количество
	|	И (НЕ ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8))
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура                                    КАК Номенклатура,
	|	ТаблицаСерии.Характеристика                                  КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                                        КАК Назначение,
	|	ТаблицаСерии.Склад                                           КАК Склад,
	|	МАКСИМУМ(ТаблицаСерии.Количество - ТаблицаСерии.КоличествоПоДокументу)
	|	                                                             КАК Расхождения,
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий)                  КАК СтатусУказанияСерий,
	|	ТаблицаСерии.Серия                                           КАК Серия,
	|	ТаблицаСерии.НомерСтроки                                     КАК НомерСтроки,
	|	ТаблицаСерии.Действие                                        КАК Действие,
	|	ВЫБОР 
	|		КОГДА МАКСИМУМ(СпрСклад.ИспользоватьОрдернуюСхемуПриПоступлении ) = ИСТИНА 
	|				И МАКСИМУМ(СпрСклад.ДатаНачалаОрдернойСхемыПриПоступлении ) <= &Период 
	|			ТОГДА
	|				ИСТИНА
	|			ИНАЧЕ
	|				ЛОЖЬ
	|	КОНЕЦ                                                    КАК ОрдернаяСхемаПриПриемке,
	|
	|	ВЫБОР 
	|		КОГДА МАКСИМУМ(СпрСклад.ИспользоватьОрдернуюСхемуПриОтгрузке ) = ИСТИНА 
	|				И МАКСИМУМ(СпрСклад.ДатаНачалаОрдернойСхемыПриОтгрузке) <= &Период 
	|			ТОГДА
	|				ИСТИНА   
	|			ИНАЧЕ
	|				ЛОЖЬ
	|	КОНЕЦ         												   КАК ОрдернаяСхемаПриОтгрузке,
	|	
	|	ВЫБОР 
	|		КОГДА МАКСИМУМ(СпрСклад.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач)  = ИСТИНА 
	|			И МАКСИМУМ(СпрСклад.ДатаНачалаОрдернойСхемыПриОтраженииИзлишковНедостач) <= &Период 
	|			ТОГДА
	|				ИСТИНА
	|			ИНАЧЕ
	|				ЛОЖЬ
	|	КОНЕЦ                                                    КАК ОрдернаяСхемаПриОтраженииИзлишковНедостач
	|	
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО СпрСклад.Ссылка = ТаблицаСерии.Склад
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктОРасхожденияхПослеПриемки.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение
	|			И ТаблицаСерии.Склад = ТаблицаТовары.Склад
	|			И ТаблицаСерии.ДокументОснование = ТаблицаТовары.ДокументОснование
	|			И ТаблицаСерии.ЗаполненоПоОснованию = ТаблицаТовары.ЗаполненоПоОснованию
	|			И ТаблицаСерии.Действие = ТаблицаТовары.Действие
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.КоличествоПоДокументу <> ТаблицаСерии.Количество
	|	И ТаблицаСерии.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Склад,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.НомерСтроки,
	|	ТаблицаСерии.ДокументОснование,
	|	ТаблицаСерии.ЗаполненоПоОснованию,
	|	ТаблицаСерии.Действие
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (4, 6, 8)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаТоварыКПоступлению(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКПоступлению";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса)
	КонецЕсли;
	
	ТекстЗапроса =
		/////////////////////////////////////////
		// Недостача при приемке (Расхождения < 0).
		// 
		// Для ордерной схемы при приемке
		// Компенсация Приходного ордера (оптимистично считая, что товар недоприняли)
		// при корректировке.
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
		|	&Период                                КАК Период,
		|	
		|	ТаблицаТовары.Распоряжение             КАК ДокументПоступления,
		|	
		|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		|	ТаблицаТовары.Характеристика           КАК Характеристика,
		|	ТаблицаТовары.Склад                    КАК Склад,
		|	
		|	ТаблицаТовары.НазначениеСкладское      КАК Назначение,
		|	
		|	ТаблицаТовары.Расхождения              КАК КПоступлению      
		|ИЗ
		|	ВтТовары КАК ТаблицаТовары
		|ГДЕ
		|	&Статус В(
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
		|	  		
		//7C
		|	И ((ТаблицаТовары.Действие =  ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиНедостачуНаПрочиеРасходы)
		|			И ТаблицаТовары.ОрдернаяСхемаПриПриемке)
		|		ИЛИ
		//3К 
		|	    (ТаблицаТовары.ОрдернаяСхемаПриПриемке 
		|   		И  &СпособОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияАктовОРасхожденияПослеПоступления.ОформлениеКорректировокПоступления)
		|			И  ТаблицаТовары.Действие В(
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку),
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачу))))
		|		
		|ОБЪЕДИНИТЬ ВСЕ
		|
		/////////////////////////////////////////
		// Излишек при приемке (Расхождения > 0).
		//
		// Компенсация заказа/накладной на ордерном складе (оптимистично считая, что приняли лишнее).
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
		|	&Период                                КАК Период,
		|	
		|	ТаблицаТовары.Распоряжение             КАК ДокументПоступления,
		|	
		|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		|	ТаблицаТовары.Характеристика           КАК Характеристика,
		|	ТаблицаТовары.Склад                    КАК Склад,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	
		|	ТаблицаТовары.Расхождения              КАК КПоступлению
		|ИЗ
		|	ВтТовары КАК ТаблицаТовары
		|ГДЕ
		|	&Статус В(
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
		|	
		|	И 
		//4T
		| 		(ТаблицаТовары.ОрдернаяСхемаПриПриемке
		|			И ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ВернутьПерепоставленноеБезОформления))
		|		
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// Компенсация заказа/накладной (оптимистично считая, что приняли лишнее).
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
		|	&Период                                КАК Период,
		|	
		|	ТаблицаТовары.Распоряжение             КАК ДокументПоступления,
		|	
		|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		|	ТаблицаТовары.Характеристика           КАК Характеристика,
		|	ТаблицаТовары.Склад                    КАК Склад,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	
		|	ТаблицаТовары.Расхождения              КАК КПоступлению
		|ИЗ
		|	ВтТовары КАК ТаблицаТовары
		|ГДЕ
		|	&Статус В(
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
		|	
		|	И  ТаблицаТовары.ОрдернаяСхемаПриПриемке
		|
		//8O
		|	И  
		|		(ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиПерепоставленноеНаПрочиеДоходы)
		//6K
		|        ИЛИ
		|		 ((ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленное)
		|		 	ИЛИ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленноеИВернуть))
		|		  И &СпособОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияАктовОРасхожденияПослеПоступления.ОформлениеКорректировокПоступления)))
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры);
	
	ИмяРегистра = "ТоварыНаСкладах";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТоварыИСерии", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТоварыИСерии(Запрос, ТекстыЗапроса)
	КонецЕсли;

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|
	|	ТаблицаТовары.Расхождения              КАК ВНаличии,
	|	ЛОЖЬ                                   КАК КонтролироватьОстатки
	|ИЗ
	|	ВтТаблицаТоварыИСерии КАК ТаблицаТовары
	|ГДЕ
	|	&Статус В(
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
	|	
	//7С
	|	И ТаблицаТовары.ОрдернаяСхемаПриПриемке
	|	И НЕ ТаблицаТовары.ОрдернаяСхемаПриОтраженииИзлишковНедостач
	|	И ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиНедостачуНаПрочиеРасходы)       
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	//Уменьшение остатков по складу при неордерной схеме приемки
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|
	|	ТаблицаТовары.Расхождения              КАК ВНаличии,
	|	ЛОЖЬ                                   КАК КонтролироватьОстатки
	|ИЗ
	|	ВтТаблицаТоварыИСерии КАК ТаблицаТовары
	|ГДЕ
	|	&Статус В(
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
	|	
	//3К
	|	   И НЕ ТаблицаТовары.ОрдернаяСхемаПриПриемке 
	|	   И ТаблицаТовары.ОрдернаяСхемаПриОтраженииИзлишковНедостач 
	|	   И &СпособОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияАктовОРасхожденияПослеПоступления.ОформлениеКорректировокПоступления)
	|	   И (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачу)
	|				ИЛИ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	//Компенсация корректирвоки поступления по складу при ордерной схеме приемки
	//Оптимистично считая, что в приходном ордере уже отражена недостача
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|
	|	-ТаблицаТовары.Расхождения              КАК ВНаличии,
	|	ЛОЖЬ                                   КАК КонтролироватьОстатки
	|ИЗ
	|	ВтТаблицаТоварыИСерии КАК ТаблицаТовары
	|ГДЕ
	|	&Статус В(
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
	|	
	//3К
	|	   И ТаблицаТовары.ОрдернаяСхемаПриПриемке 
	|	   И НЕ ТаблицаТовары.ОрдернаяСхемаПриОтраженииИзлишковНедостач 
	|	   И &СпособОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияАктовОРасхожденияПослеПоступления.ОформлениеКорректировокПоступления)
	|	   И (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачу)
	|				ИЛИ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	/////////////////////////////////////////
	// Излишек при приемке (Расхождения > 0).
	//
	//Компенсация корректирвоки поступления по складу при ордерной схеме приемки
	//Оптимистично считаем, что приходным ордером уже отражен факт излишка
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	
	|	-ТаблицаТовары.Расхождения              КАК ВНаличии,
	|	ЛОЖЬ                                   КАК КонтролироватьОстатки
	|ИЗ
	|	ВтТаблицаТоварыИСерии КАК ТаблицаТовары
	|ГДЕ
	|	&Статус В(
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
	|	
	|	И ТаблицаТовары.ОрдернаяСхемаПриПриемке 
	|	И НЕ ТаблицаТовары.ОрдернаяСхемаПриОтраженииИзлишковНедостач
	//8O
	|	И (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиПерепоставленноеНаПрочиеДоходы)
	|		
	//6K
	|		ИЛИ (&СпособОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияАктовОРасхожденияПослеПоступления.ОформлениеКорректировокПоступления)
	|	   		  И (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленное)
	|				  ИЛИ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленноеИВернуть))))
	|	
	|
	|ОБЪЕДИНИТЬ ВСЕ
	//Увеличение остатков по складу при неордерной схеме приемки
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Склад                    КАК Склад,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|
	|	ТаблицаТовары.Расхождения              КАК ВНаличии,
	|	ЛОЖЬ                                   КАК КонтролироватьОстатки
	|ИЗ
	|	ВтТаблицаТоварыИСерии КАК ТаблицаТовары
	|ГДЕ
	|	&Статус В(
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
	|	
	//6К
	|	   И НЕ ТаблицаТовары.ОрдернаяСхемаПриПриемке 
	|	   И ТаблицаТовары.ОрдернаяСхемаПриОтраженииИзлишковНедостач 
	|	   И &СпособОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияАктовОРасхожденияПослеПоступления.ОформлениеКорректировокПоступления)
	|	   И (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленное)
	|				ИЛИ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленноеИВернуть))
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
		
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры);
	
	ИмяРегистра = "СвободныеОстатки";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса)
	КонецЕсли;
	
	ТекстЗапроса =
		/////////////////////////////////////////
		// Недостача при приемке (Расхождения < 0).
		//
		//Компенсация корректирвоки поступления по складу при ордерной схеме приемки
		//Оптимистично считаем, что приходным ордером отразили факт недостачи на складе
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
		|	&Период                                КАК Период,
		|	
		|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		|	ТаблицаТовары.Характеристика           КАК Характеристика,
		|	ТаблицаТовары.Склад                    КАК Склад,
		|	
		|	ТаблицаТовары.Расхождения             КАК ВНаличии,
		|	ВЫБОР 
		|		КОГДА ТаблицаТовары.НазначениеСкладское <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) 
		|			ТОГДА
		|				ТаблицаТовары.Расхождения
		|			ИНАЧЕ
		|				0
		|	КОНЕЦ                              	   КАК ВРезервеПодЗаказ
		|ИЗ
		|	ВтТовары КАК ТаблицаТовары
		|ГДЕ
		|	&Статус В(
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
		|	
		//7C
		|	И ТаблицаТовары.ОрдернаяСхемаПриПриемке
		|	И НЕ ТаблицаТовары.ОрдернаяСхемаПриОтраженииИзлишковНедостач
		|	И ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиНедостачуНаПрочиеРасходы)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
		|	&Период                                КАК Период,
		|	
		|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		|	ТаблицаТовары.Характеристика           КАК Характеристика,
		|	ТаблицаТовары.Склад                    КАК Склад,
		|	
		|	ТаблицаТовары.Расхождения             КАК ВНаличии,
		|	ВЫБОР 
		|		КОГДА ТаблицаТовары.НазначениеСкладское <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) 
		|			ТОГДА
		|				ТаблицаТовары.Расхождения
		|			ИНАЧЕ
		|				0
		|	КОНЕЦ                              	   КАК ВРезервеПодЗаказ
		|ИЗ
		|	ВтТовары КАК ТаблицаТовары
		|ГДЕ
		|	&Статус В(
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
		|	
		//3К
		|	   И НЕ ТаблицаТовары.ОрдернаяСхемаПриПриемке 
		|	   И ТаблицаТовары.ОрдернаяСхемаПриОтраженииИзлишковНедостач 
		|	   И &СпособОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияАктовОРасхожденияПослеПоступления.ОформлениеКорректировокПоступления)
		|	   И (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачу)
		|				ИЛИ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
		|	&Период                                КАК Период,
		|	
		|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		|	ТаблицаТовары.Характеристика           КАК Характеристика,
		|	ТаблицаТовары.Склад                    КАК Склад,
		|	
		|	-ТаблицаТовары.Расхождения             КАК ВНаличии,
		|	ВЫБОР 
		|		КОГДА ТаблицаТовары.НазначениеСкладское <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) 
		|			ТОГДА
		|				ТаблицаТовары.Расхождения
		|			ИНАЧЕ
		|				0
		|	КОНЕЦ                              	   КАК ВРезервеПодЗаказ
		|ИЗ
		|	ВтТовары КАК ТаблицаТовары
		|ГДЕ
		|	&Статус В(
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
		|	
		//3К
		|	   И ТаблицаТовары.ОрдернаяСхемаПриПриемке 
		|	   И НЕ ТаблицаТовары.ОрдернаяСхемаПриОтраженииИзлишковНедостач
		|	   И &СпособОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияАктовОРасхожденияПослеПоступления.ОформлениеКорректировокПоступления)
		|	   И (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачу)
		|				ИЛИ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		// Излишек при приемке (Расхождения > 0).
		//
		// Закрытие свободных остатков при возврате перепоставленного товара
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
		|	&Период                                КАК Период,
		|	
		|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		|	ТаблицаТовары.Характеристика           КАК Характеристика,
		|	ТаблицаТовары.Склад                    КАК Склад,
		|	
		|	-ТаблицаТовары.Расхождения             КАК ВНаличии,
		|	ВЫБОР 
		|		КОГДА ТаблицаТовары.НазначениеСкладское <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) 
		|			ТОГДА
		|			-ТаблицаТовары.Расхождения
		|			ИНАЧЕ
		|				0
		|	КОНЕЦ                              	   КАК ВРезервеПодЗаказ
		|ИЗ
		|	ВтТовары КАК ТаблицаТовары
		|ГДЕ
		|	&Статус В(
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
		|	
		|	И ТаблицаТовары.ОрдернаяСхемаПриПриемке
		//4Т
		|	И (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ВернутьПерепоставленноеБезОформления)
		//8О
		|     ИЛИ (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиПерепоставленноеНаПрочиеДоходы)
		|           И НЕ ТаблицаТовары.ОрдернаяСхемаПриОтраженииИзлишковНедостач)
		//6К
		//Компенсация корректирвоки поступления по складу при ордерной схеме приемки
		//Оптимистично считаем, что приходным ордером уже отражен факт излишка
		|	  ИЛИ (НЕ ТаблицаТовары.ОрдернаяСхемаПриОтраженииИзлишковНедостач
		|	   	   И &СпособОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияАктовОРасхожденияПослеПоступления.ОформлениеКорректировокПоступления)
		|	   	   И (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленное)
		|				ИЛИ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленноеИВернуть))))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		//Увеличение склада при неордерной схеме приемки
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
		|	&Период                                КАК Период,
		|	
		|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		|	ТаблицаТовары.Характеристика           КАК Характеристика,
		|	ТаблицаТовары.Склад                    КАК Склад,
		|	
		|	ТаблицаТовары.Расхождения              КАК ВНаличии,
		|	ВЫБОР 
		|		КОГДА ТаблицаТовары.НазначениеСкладское <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) 
		|			ТОГДА
		|				ТаблицаТовары.Расхождения
		|			ИНАЧЕ
		|				0
		|	КОНЕЦ                              	   КАК ВРезервеПодЗаказ
		|ИЗ
		|	ВтТовары КАК ТаблицаТовары
		|ГДЕ
		|	&Статус В(
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
		|	
		//3К
		|	   И НЕ ТаблицаТовары.ОрдернаяСхемаПриПриемке 
		|	   И ТаблицаТовары.ОрдернаяСхемаПриОтраженииИзлишковНедостач 
		|	   И &СпособОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияАктовОРасхожденияПослеПоступления.ОформлениеКорректировокПоступления)
		|	   И (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленное)
		|				ИЛИ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленноеИВернуть))
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюПоступления(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюПоступления";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса)
	КонецЕсли;

	ТекстЗапроса =
		/////////////////////////////////////////
		// Недостача при приемке (Расхождения < 0).
		//
		// Компенсация Приходного ордера (оптимистично считая, что товар недоприняли) при корректировке.
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
		|	&Период                                КАК Период,
		|	
		|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		|	ТаблицаТовары.Характеристика           КАК Характеристика,
		|	ТаблицаТовары.Склад                    КАК Склад,
		|	ТаблицаТовары.НазначениеСкладское      КАК Назначение,
		|	ТаблицаТовары.Распоряжение             КАК ДокументПоступления,
		|
		|	ТаблицаТовары.Серия					   КАК Серия,
		|	
		|	ТаблицаТовары.Расхождения              КАК КОформлению
		|ИЗ
		|	ВтТовары КАК ТаблицаТовары
		|ГДЕ
		|	&Статус В(
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
		|	
		|	И ТаблицаТовары.ОрдернаяСхемаПриПриемке
		|	
		//2Д
		|	И (&СпособОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияАктовОРасхожденияПослеПоступления.ОформлениеКорректировокПоступления)
		|
		|			И ТаблицаТовары.Действие В(
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачу),
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку))
		|		
		//7С
		|		ИЛИ 
		|			ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиНедостачуНаПрочиеРасходы))
		|
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		/////////////////////////////////////////
		// Излишек при приемке (Расхождения > 0).
		//
		// Закрытие свободных остатков при возврате перепоставленного товара
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
		|	&Период                                КАК Период,
		|	
		|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		|	ТаблицаТовары.Характеристика           КАК Характеристика,
		|	ТаблицаТовары.Склад                    КАК Склад,
		|	ТаблицаТовары.НазначениеСкладское      КАК Назначение,
		|	ТаблицаТовары.Распоряжение             КАК ДокументПоступления,
		|
		|	ТаблицаТовары.Серия 				   КАК Серия,
		|	
		|	-ТаблицаТовары.Расхождения             КАК КОформлению
		|ИЗ
		|	ВтТовары КАК ТаблицаТовары
		|ГДЕ
		|	&Статус В(
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
		|	
		//6K
		|	И ((ТаблицаТовары.ОрдернаяСхемаПриПриемке
		|	
		|			И &СпособОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияАктовОРасхожденияПослеПоступления.ОформлениеКорректировокПоступления)
		|		
		|			И ТаблицаТовары.Действие В(
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленноеИВернуть),
		|				ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленное)))
		|		ИЛИ
		|
		|       ( ТаблицаТовары.ОрдернаяСхемаПриПриемке 
		//4T
		|		  	И (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ВернутьПерепоставленноеБезОформления)
		//8О
		|				ИЛИ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиПерепоставленноеНаПрочиеДоходы))))
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюИзлишковНедостач(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТаблицаТоварыКОформлениюИзлишковНедостач";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса)
	КонецЕсли;

	ТекстЗапроса =
		/////////////////////////////////////////
		// Недостача при приемке (Расхождения < 0).
		//
		// Компесация списания недостачи, оптимистично считая, что недостача уже отражена в приходном ордере
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
		|	&Период                                КАК Период,
		|	
		|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		|	ТаблицаТовары.Характеристика           КАК Характеристика,
		|	ТаблицаТовары.Склад                    КАК Склад,
		|	ТаблицаТовары.НазначениеСкладское      КАК Назначение,
		|
		|	ВЫБОР 
		|		КОГДА ТаблицаТовары.СтатусУказанияСерий = 14 
		|			ТОГДА
		|				ТаблицаТовары.Серия
		|			ИНАЧЕ
		|				ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|	КОНЕЦ	                               КАК Серия,
		|	
		|	-ТаблицаТовары.Расхождения             КАК КОформлениюАктов
		|ИЗ
		|	ВтТовары КАК ТаблицаТовары
		|ГДЕ
		|	&Статус В(
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
		|	
		|	И ТаблицаТовары.ОрдернаяСхемаПриОтраженииИзлишковНедостач
		|	
		|	И (
		//3K
		|	 	((ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачу)
		|	  		ИЛИ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку)) 
		|		И &СпособОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияАктовОРасхожденияПослеПоступления.ОформлениеКорректировокПоступления))
		|		ИЛИ
		//7С
		|       (ТаблицаТовары.ОрдернаяСхемаПриПриемке
		|		 И ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиНедостачуНаПрочиеРасходы))
		|	   ) 
		|
		| ОБЪЕДИНИТЬ ВСЕ
		|
		/////////////////////////////////////////
		// Излишек при приемке (Расхождения > 0).
		//
		//Компенсация оприходования излишка, оптимистично считая, что излишек уже отражен в приходом ордере
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
		|	&Период                                КАК Период,
		|	
		|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		|	ТаблицаТовары.Характеристика           КАК Характеристика,
		|	ТаблицаТовары.Склад                    КАК Склад,
		|	ТаблицаТовары.НазначениеСкладское      КАК Назначение,
		|
		|	ВЫБОР 
		|		КОГДА ТаблицаТовары.СтатусУказанияСерий = 14 
		|			ТОГДА
		|				ТаблицаТовары.Серия
		|			ИНАЧЕ
		|				ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|	КОНЕЦ	                               КАК Серия,
		|	
		|	ТаблицаТовары.Расхождения             КАК КОформлениюАктов
		|ИЗ
		|	ВтТовары КАК ТаблицаТовары
		|ГДЕ
		|	&Статус В(
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
		|	
		|	И ТаблицаТовары.ОрдернаяСхемаПриОтраженииИзлишковНедостач
		|	
		|	И (
		//6K	
		|	   (&СпособОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияАктовОРасхожденияПослеПоступления.ОформлениеКорректировокПоступления) 
		|		 И (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленное)
		|			 ИЛИ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленноеИВернуть)))
		|	  ИЛИ		
		//8О
		|	   (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиПерепоставленноеНаПрочиеДоходы)
		|	        И ТаблицаТовары.ОрдернаяСхемаПриПриемке)
		|	  )
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОтгрузке(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОтгрузке";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса)
	КонецЕсли;
	
	ТекстЗапроса =
		/////////////////////////////////////////
		// Излишек при приемке (Расхождения > 0).
		//
		// Формируем задание на отгрузку
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
		|	&Период                                КАК Период,
		|	
		|	&Ссылка						           КАК ДокументОтгрузки,
		|	
		|	&Партнер                               КАК Получатель,
		|	
		|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		|	ТаблицаТовары.Характеристика           КАК Характеристика,
		|	ТаблицаТовары.Склад                    КАК Склад,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ТаблицаТовары.Серия                    КАК Серия,
		|	
		|	ТаблицаТовары.Расхождения              КАК КОтгрузке
		|ИЗ
		|	ВтТовары КАК ТаблицаТовары
		|ГДЕ
		|	&Статус В(
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
		|	
		|	И ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ВернутьПерепоставленноеБезОформления)
		|		
		|ОБЪЕДИНИТЬ ВСЕ
		|	
		// Закрываем к отгрузке если не ведутся ордера на отгрузку
		| ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
		|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
		|	&Период                                КАК Период,
		|	
		|	&Ссылка						           КАК ДокументОтгрузки,
		|	
		|	&Партнер                               КАК Получатель,
		|	
		|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		|	ТаблицаТовары.Характеристика           КАК Характеристика,
		|	ТаблицаТовары.Склад                    КАК Склад,
		|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
		|	ТаблицаТовары.Серия                    КАК Серия,
		|	
		|	ТаблицаТовары.Расхождения              КАК КОтгрузке
		|ИЗ
		|	ВтТовары КАК ТаблицаТовары
		|ГДЕ
		|	&Статус В(
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
		|
		|	И НЕ ТаблицаТовары.ОрдернаяСхемаПриОтгрузке
		|
		|	И ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ВернутьПерепоставленноеБезОформления)
		|		
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвижениеТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвижениеТоваров";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	/////////////////////////////////////////
	// Недостача при приемке (Расхождения < 0).
	//
	// Компенсация расходного ордера/накладной
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ВЫБОР
	|		КОГДА
	|			ТаблицаТовары.РаспоряжениемЯвляетсяСоглашение 
	|		ТОГДА
	|			ТаблицаТовары.СоглашениеДокументаОснования
	|		ИНАЧЕ
	|			ТаблицаТовары.ЗаказПоставщику
	|	КОНЕЦ  КАК Распоряжение,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Назначение КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Расхождения
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПланируемоеПоступление,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Расхождения
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПланируемоеПоступлениеПодЗаказ
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|ГДЕ
	|	&Статус В(
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
	|	И ТаблицаТовары.ПоступлениеПоЗаказу
	|	И ТаблицаТовары.ОрдернаяСхемаПриПриемке
	|	И (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиНедостачуНаПрочиеРасходы)
	|		ИЛИ (&СпособОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияАктовОРасхожденияПослеПоступления.ОформлениеКорректировокПоступления)
	|			 И (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачу)
	|			 	ИЛИ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку))))
	|			  
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОбеспечениеЗаказов";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса)
	КонецЕсли;
	
	ТекстЗапроса =
		/////////////////////////////////////////
		// Недостача при приемке (Расхождения < 0).
		//
		//Формирование потребности для до-отгрузки из свободного остатка
		//или для отмены заказа(если доспоставка не требуется) в предварительном статусе.
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	&Период                                КАК Период,
		|	
		|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		|	ТаблицаТовары.Характеристика           КАК Характеристика,
		|	ТаблицаТовары.Склад                    КАК Склад,
		|	
		|	ТаблицаТовары.НазначениеСкладское      КАК Назначение,
		|	0						               КАК Потребность,
		|	-ТаблицаТовары.Расхождения             КАК КЗаказу,
		|	-ТаблицаТовары.Расхождения             КАК НаличиеПодЗаказ
		|ИЗ
		|	ВтТовары КАК ТаблицаТовары
		|ГДЕ
		|	&Статус В(
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
		|
		|	И ТаблицаТовары.НазначениеСкладское <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|	
		|	И ТаблицаТовары.ОрдернаяСхемаПриПриемке
		|	И ТаблицаТовары.Действие В(
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачу),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку))
		|	И &СпособОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияАктовОРасхожденияПослеПоступления.ОформлениеКорректировокПоступления)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		// Компенсация обнаруженного пересчетом товаров на складе излишка (оптимистично считая, что товар недогрузили)
		// для до-отгрузки из свободного остатка или для отмены заказа(если доспоставка не требуется).
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
		|	&Период                                КАК Период,
		|	
		|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
		|	ТаблицаТовары.Характеристика           КАК Характеристика,
		|	ТаблицаТовары.Склад                    КАК Склад,
		|	
		|	ТаблицаТовары.НазначениеСкладское      КАК Назначение,
		|	0						               КАК Потребность,
		|	-ТаблицаТовары.Расхождения             КАК КЗаказу,
		|	0						               КАК НаличиеПодЗаказ
		|ИЗ
		|	ВтТовары КАК ТаблицаТовары
		|ГДЕ
		|	&Статус В(
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
		|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
		|
		|	И ТаблицаТовары.НазначениеСкладское <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|	
		|	И (
		|	  (ТаблицаТовары.ОрдернаяСхемаПриПриемке 
		|		И ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиНедостачуНаПрочиеРасходы))
		|      ИЛИ
		|	  (НЕ ТаблицаТовары.ОрдернаяСхемаПриПриемке
		|		И ТаблицаТовары.Действие В(
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачу),
		|			ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку))
		|		И &СпособОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияАктовОРасхожденияПослеПоступления.ОформлениеКорректировокПоступления)))
		|";
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВТСерии(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВТСерии";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Склад КАК Склад,
	|	ТаблицаСерии.Действие КАК Действие,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	&СкладскаяОперация КАК СкладскаяОперация,
	|	ВЫБОР
	|		КОГДА СпрСклад.ИспользоватьОрдернуюСхемуПриПоступлении
	|				И СпрСклад.ДатаНачалаОрдернойСхемыПриПоступлении <= &Период
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОрдернаяСхемаПриПриемке,
	|	ВЫБОР
	|		КОГДА СпрСклад.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|				И СпрСклад.ДатаНачалаОрдернойСхемыПриОтраженииИзлишковНедостач <= &Период
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОрдернаяСхемаПриОтраженииИзлишковНедостач,
	|	ВЫБОР
	|		КОГДА НЕ СпрСклад.ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ СпрСклад.ДатаНачалаОрдернойСхемыПриПоступлении > &Период
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоСкладскоеДвижение,
	|	ТаблицаСерии.Количество - ТаблицаСерии.КоличествоПоДокументу КАК Расхождения
	|ПОМЕСТИТЬ ВТСерии
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО (СпрСклад.Ссылка = ТаблицаСерии.Склад)
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> ТаблицаСерии.КоличествоПоДокументу
	|	И НЕ ТаблицаСерии.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ВернутьПерепоставленноеБезОформления)
	|	И НЕ ТаблицаСерии.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОжидатьДопоставкуБезОформления)
	|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению), ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Действие,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	&СкладскаяОперация,
	|	ВЫБОР
	|		КОГДА СпрСклад.ИспользоватьОрдернуюСхемуПриПоступлении
	|				И СпрСклад.ДатаНачалаОрдернойСхемыПриПоступлении <= &Период
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СпрСклад.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|				И СпрСклад.ДатаНачалаОрдернойСхемыПриОтраженииИзлишковНедостач <= &Период
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ СпрСклад.ИспользоватьОрдернуюСхемуПриПоступлении
	|				ИЛИ СпрСклад.ДатаНачалаОрдернойСхемыПриПоступлении > &Период
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ТаблицаТовары.Количество - ТаблицаТовары.КоличествоПоДокументу
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклад
	|		ПО (СпрСклад.Ссылка = ТаблицаТовары.Склад)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.КоличествоПоДокументу <> ТаблицаТовары.Количество
	|	И ТаблицаТовары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И НЕ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ВернутьПерепоставленноеБезОформления)
	|	И НЕ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОжидатьДопоставкуБезОформления)
	|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению), ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВТСерии", ТекстыЗапроса) Тогда
		ТекстЗапросаВТСерии(Запрос, ТекстыЗапроса)
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	&Ссылка                                КАК Документ,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Склад                    КАК Отправитель,
	|	НЕОПРЕДЕЛЕНО                           КАК Получатель,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ТаблицаТовары.ЭтоСкладскоеДвижение     КАК ЭтоСкладскоеДвижение,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтражениеНедостач) КАК СкладскаяОперация,
	|	ТаблицаТовары.Расхождения              КАК Количество
	|ИЗ
	|	ВтСерии КАК ТаблицаТовары
	|ГДЕ
	|	
	|	ТаблицаТовары.ОрдернаяСхемаПриПриемке
	|	И НЕ ТаблицаТовары.ОрдернаяСхемаПриОтраженииИзлишковНедостач
	|	И ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиНедостачуНаПрочиеРасходы)       
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	//Уменьшение остатков по складу при неордерной схеме приемки
	|ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	&Ссылка                                КАК Документ,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Склад                    КАК Отправитель,
	|	НЕОПРЕДЕЛЕНО                           КАК Получатель,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ТаблицаТовары.ЭтоСкладскоеДвижение     КАК ЭтоСкладскоеДвижение,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтражениеНедостач) КАК СкладскаяОперация,
	|	ТаблицаТовары.Расхождения              КАК Количество
	|ИЗ
	|	ВтСерии КАК ТаблицаТовары
	|ГДЕ
	//3К
	|	   НЕ ТаблицаТовары.ОрдернаяСхемаПриПриемке 
	|	   И ТаблицаТовары.ОрдернаяСхемаПриОтраженииИзлишковНедостач 
	|	   И &СпособОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияАктовОРасхожденияПослеПоступления.ОформлениеКорректировокПоступления)
	|	   И (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачу)
	|				ИЛИ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	//Компенсация корректирвоки поступления по складу при ордерной схеме приемки
	//Оптимистично считая, что в приходном ордере уже отражена недостача
	|ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	&Ссылка                                КАК Документ,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Склад                    КАК Отправитель,
	|	НЕОПРЕДЕЛЕНО                           КАК Получатель,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ТаблицаТовары.ЭтоСкладскоеДвижение     КАК ЭтоСкладскоеДвижение,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтражениеНедостач) КАК СкладскаяОперация,
	|	ТаблицаТовары.Расхождения              КАК Количество
	|ИЗ
	|	ВтСерии КАК ТаблицаТовары
	|ГДЕ
	//3К
	|	   ТаблицаТовары.ОрдернаяСхемаПриПриемке 
	|	   И НЕ ТаблицаТовары.ОрдернаяСхемаПриОтраженииИзлишковНедостач 
	|	   И &СпособОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияАктовОРасхожденияПослеПоступления.ОформлениеКорректировокПоступления)
	|	   И (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачу)
	|				ИЛИ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	/////////////////////////////////////////
	// Излишек при приемке (Расхождения > 0).
	//
	//Компенсация корректирвоки поступления по складу при ордерной схеме приемки
	//Оптимистично считаем, что приходным ордером уже отражен факт излишка
	|ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	&Ссылка                                КАК Документ,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Склад                    КАК Отправитель,
	|	&Партнер                           КАК Получатель,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ТаблицаТовары.ЭтоСкладскоеДвижение     КАК ЭтоСкладскоеДвижение,
	|	&СкладскаяОперация КАК СкладскаяОперация,
	|	ТаблицаТовары.Расхождения              КАК Количество
	|ИЗ
	|	ВтСерии КАК ТаблицаТовары
	|ГДЕ
	|	&Статус В(
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.КВыполнению),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыАктаОРасхождениях.Отработано))
	|	
	|	И ТаблицаТовары.ОрдернаяСхемаПриПриемке 
	|	И НЕ ТаблицаТовары.ОрдернаяСхемаПриОтраженииИзлишковНедостач
	//8O
	|	И (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиПерепоставленноеНаПрочиеДоходы)
	|		
	//6K
	|		ИЛИ (&СпособОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияАктовОРасхожденияПослеПоступления.ОформлениеКорректировокПоступления)
	|	   		  И (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленное)
	|				  ИЛИ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленноеИВернуть))))
	|	
	|
	|ОБЪЕДИНИТЬ ВСЕ
	//Увеличение остатков по складу при неордерной схеме приемки
	|ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	&Ссылка                                КАК Документ,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Склад                    КАК Отправитель,
	|	&Партнер                           КАК Получатель,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ТаблицаТовары.ЭтоСкладскоеДвижение     КАК ЭтоСкладскоеДвижение,
	|	&СкладскаяОперация КАК СкладскаяОперация,
	|	ТаблицаТовары.Расхождения              КАК Количество
	|ИЗ
	|	ВтСерии КАК ТаблицаТовары
	|ГДЕ
	//6К
	|	   НЕ ТаблицаТовары.ОрдернаяСхемаПриПриемке 
	|	   И ТаблицаТовары.ОрдернаяСхемаПриОтраженииИзлишковНедостач 
	|	   И &СпособОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияАктовОРасхожденияПослеПоступления.ОформлениеКорректировокПоступления)
	|	   И (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленное)
	|				ИЛИ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленноеИВернуть))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	/////////////////////////////////////////
	// Недостача при приемке (Расхождения < 0).
	//
	// Компесация списания недостачи, оптимистично считая, что недостача уже отражена в приходном ордере
	|ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	&Ссылка                                КАК Документ,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Склад                    КАК Отправитель,
	|	НЕОПРЕДЕЛЕНО                           КАК Получатель,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ТаблицаТовары.ЭтоСкладскоеДвижение     КАК ЭтоСкладскоеДвижение,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтражениеНедостач) КАК СкладскаяОперация,
	|	ТаблицаТовары.Расхождения              КАК Количество
	|ИЗ
	|	ВтСерии КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ОрдернаяСхемаПриОтраженииИзлишковНедостач
	|	И (
	//3K
	|	 	((ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачу)
	|	  		ИЛИ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку)) 
	|		И &СпособОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияАктовОРасхожденияПослеПоступления.ОформлениеКорректировокПоступления))
	|		ИЛИ
	//7С
	|       (ТаблицаТовары.ОрдернаяСхемаПриПриемке
	|		 И ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиНедостачуНаПрочиеРасходы))
	|	   ) 
	|
	| ОБЪЕДИНИТЬ ВСЕ
	|
	/////////////////////////////////////////
	// Излишек при приемке (Расхождения > 0).
	//
	//Компенсация оприходования излишка, оптимистично считая, что излишек уже отражен в приходом ордере
	|ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	&Ссылка                                КАК Документ,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Склад                    КАК Отправитель,
	|	&Партнер                           КАК Получатель,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ТаблицаТовары.ЭтоСкладскоеДвижение     КАК ЭтоСкладскоеДвижение,
	|	&СкладскаяОперация КАК СкладскаяОперация,
	|	ТаблицаТовары.Расхождения              КАК Количество
	|ИЗ
	|	ВтСерии КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ОрдернаяСхемаПриОтраженииИзлишковНедостач
	|	И (
	//6K	
	|	   (&СпособОтраженияРасхождений = ЗНАЧЕНИЕ(Перечисление.СпособыОтраженияАктовОРасхожденияПослеПоступления.ОформлениеКорректировокПоступления) 
	|		 И (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленное)
	|			 ИЛИ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленноеИВернуть)))
	|	  ИЛИ		
	//8О
	|	   (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОтнестиПерепоставленноеНаПрочиеДоходы)
	|	        И ТаблицаТовары.ОрдернаяСхемаПриПриемке)
	|	  )";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция СкладскаяОперацияПоТипуОснования(ТипОснованияАктаОРасхождении)
	
	Если  ТипОснованияАктаОРасхождении = Перечисления.ТипыОснованияАктаОРасхождении.ПоступлениеТоваровУслуг  Тогда
		СкладскаяОперация = Перечисления.СкладскиеОперации.ПриемкаОтПоставщика;
	ИначеЕсли ТипОснованияАктаОРасхождении = Перечисления.ТипыОснованияАктаОРасхождении.ВозвратТоваровОтКлиента Тогда
		СкладскаяОперация = Перечисления.СкладскиеОперации.ПриемкаПоВозвратуОтКлиента;
	Иначе
		СкладскаяОперация = Неопределено;
	КонецЕсли;
	
	Возврат СкладскаяОперация;
	
КонецФункции

#КонецОбласти

#Область Заполнение

// Возвращает структуру необходимую для дальнейшего использования при заполнении документа по заказу или ордерам
// 
// Возвращаемое значение:
//   - Структура
//
Функция ПараметрыЗаполненияДокумента() Экспорт
	
	ПараметрыЗаполнения = Новый Структура();
	ПараметрыЗаполнения.Вставить("Менеджер", Документы.АктОРасхожденияхПослеПриемки);
	ПараметрыЗаполнения.Вставить("ИмяРегистраЗаказ", "ЗаказыПоставщикам");
	ПараметрыЗаполнения.Вставить("МенеджерРегистраЗаказ", РегистрыНакопления.ЗаказыПоставщикам);
	ПараметрыЗаполнения.Вставить("ИмяПоляЗаказ", "ЗаказПоставщику");
	ПараметрыЗаполнения.Вставить("Дата", КонецДня(ТекущаяДатаСеанса()));
	ПараметрыЗаполнения.Вставить("КлючевыеПоля", "Распоряжение, Номенклатура, Характеристика, Серия, Склад, Назначение");
	ПараметрыЗаполнения.Вставить("ДополнительныеПоляТаблицыДокумента", "Упаковка, КодСтроки, СтатусУказанияСерий, ЗаказПоставщику");
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

// Возвращает таблицу Товары
//
// Параметры:
//  Накладная	 - Ссылка - Ссылка на накладную, табличную часть Товары которой необходимо вернуть
// 
// Возвращаемое значение:
//   - ТаблицаЗначений
//
Функция ДанныеТаблицыТоварыДокумента(Накладная) Экспорт
	
	Запрос = Новый Запрос();
	
	Если ТипЗнч(Накладная) = Тип("ДокументСсылка.АктОРасхожденияхПослеПриемки") Тогда
	
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	Таблица.Ссылка,
		|	ВЫБОР КОГДА (Склады.ИспользоватьОрдернуюСхемуПриПоступлении)
		|		И (Склады.ДатаНачалаОрдернойСхемыПриПоступлении <= Таблица.Ссылка.Дата) ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ ОрдернаяСхемаПриПриемке,
		|	Таблица.НомерСтроки,
		|	Таблица.НоменклатураПоставщика,
		|	Таблица.Номенклатура,
		|	Таблица.Характеристика,
		|	Таблица.Назначение,
		|	Таблица.Упаковка,
		|	Таблица.Количество,
		|	Таблица.ЗаказПоставщику,
		|	Таблица.КодСтроки,
		|	Таблица.Серия,
		|	Таблица.Склад,
		|	Таблица.СтатусУказанияСерий,
		|	Таблица.ДокументОснование,
		|	Таблица.ЗаполненоПоОснованию,
		|	Таблица.КоличествоПоДокументу,
		|	Таблица.Действие,
		|	Таблица.КомментарийПоставщика,
		|	Таблица.КомментарийМенеджера,
		|	ВЫБОР
		|		КОГДА Таблица.ЗаказПоставщику В (ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка), ЗНАЧЕНИЕ(Документ.ЗаявкаНаВозвратТоваровОтКлиента.ПустаяСсылка), НЕОПРЕДЕЛЕНО)
		|			ТОГДА Таблица.ДокументОснование
		|		ИНАЧЕ Таблица.ЗаказПоставщику
		|	КОНЕЦ КАК Распоряжение,
		|	ВЫБОР
		|		КОГДА (Склады.ИспользоватьОрдернуюСхемуПриПоступлении)
		|				И (Склады.ДатаНачалаОрдернойСхемыПриПоступлении <= Таблица.Ссылка.Дата)
		|				И Таблица.СтатусУказанияСерий В (0)
		|			ТОГДА ""А0""
		|		КОГДА (Склады.ИспользоватьОрдернуюСхемуПриПоступлении)
		|				И (Склады.ДатаНачалаОрдернойСхемыПриПоступлении <= Таблица.Ссылка.Дата)
		|				И Таблица.СтатусУказанияСерий В (14)
		|			ТОГДА ""А1""
		|		ИНАЧЕ ""А3""
		|	КОНЕЦ КАК СпособСоединения
		|ИЗ
		|	Документ.АктОРасхожденияхПослеПриемки.Товары КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|		ПО Таблица.Склад = Склады.Ссылка
		|ГДЕ
		|	Таблица.Ссылка = &Накладная
		|УПОРЯДОЧИТЬ ПО
		|	СпособСоединения
		|;
		|";
		
		Запрос.УстановитьПараметр("Накладная", Накладная);
	
	Иначе
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	Таблица.НомерСтроки,
		|	Таблица.НоменклатураПоставщика,
		|	Таблица.Номенклатура,
		|	Таблица.Характеристика,
		|	Таблица.Назначение,
		|	Таблица.Упаковка,
		|	Таблица.Количество,
		|	Таблица.ЗаказПоставщику,
		|	Таблица.КодСтроки,
		|	Таблица.Серия,
		|	Таблица.Склад,
		|	Таблица.СтатусУказанияСерий,
		|	Таблица.ДокументОснование,
		|	Таблица.ЗаполненоПоОснованию,
		|	Таблица.КоличествоПоДокументу,
		|	Таблица.Действие,
		|	Таблица.КомментарийПоставщика,
		|	Таблица.КомментарийМенеджера
		|ПОМЕСТИТЬ ВтДанныеДокумента
		|ИЗ
		|	&Товары КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	&Ссылка,
		|	ВЫБОР
		|		КОГДА Склады.ИспользоватьОрдернуюСхемуПриПоступлении
		|				И Склады.ДатаНачалаОрдернойСхемыПриПоступлении <= &ДатаДокумента
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОрдернаяСхемаПриПриемке,
		|	Таблица.НомерСтроки,
		|	Таблица.НоменклатураПоставщика,
		|	Таблица.Номенклатура,
		|	Таблица.Характеристика,
		|	Таблица.Назначение,
		|	Таблица.Упаковка,
		|	Таблица.Количество,
		|	Таблица.ЗаказПоставщику,
		|	Таблица.КодСтроки,
		|	Таблица.Серия,
		|	Таблица.Склад,
		|	Таблица.СтатусУказанияСерий,
		|	Таблица.ДокументОснование,
		|	Таблица.ЗаполненоПоОснованию,
		|	Таблица.КоличествоПоДокументу,
		|	Таблица.Действие,
		|	Таблица.КомментарийПоставщика,
		|	Таблица.КомментарийМенеджера,
		|	ВЫБОР
		|		КОГДА Таблица.ЗаказПоставщику В (ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка), ЗНАЧЕНИЕ(Документ.ЗаявкаНаВозвратТоваровОтКлиента.ПустаяСсылка), НЕОПРЕДЕЛЕНО)
		|			ТОГДА Таблица.ДокументОснование
		|		ИНАЧЕ Таблица.ЗаказПоставщику
		|	КОНЕЦ КАК Распоряжение,
		|	ВЫБОР
		|		КОГДА Склады.ИспользоватьОрдернуюСхемуПриПоступлении
		|				И Склады.ДатаНачалаОрдернойСхемыПриПоступлении <= &ДатаДокумента
		|				И Таблица.СтатусУказанияСерий В (0)
		|			ТОГДА ""А0""
		|		КОГДА Склады.ИспользоватьОрдернуюСхемуПриПоступлении
		|				И Склады.ДатаНачалаОрдернойСхемыПриПоступлении <= &ДатаДокумента
		|				И Таблица.СтатусУказанияСерий В (14)
		|			ТОГДА ""А1""
		|		ИНАЧЕ ""А3""
		|	КОНЕЦ КАК СпособСоединения
		|ИЗ
		|	ВтДанныеДокумента КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|		ПО Таблица.Склад = Склады.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	СпособСоединения";
		
		Запрос.УстановитьПараметр("Товары", Накладная.Товары.Выгрузить());
		Запрос.УстановитьПараметр("ДатаДокумента", ?(ЗначениеЗаполнено(Накладная.Дата), Накладная.Дата, ТекущаяДатаСеанса()));
		Запрос.УстановитьПараметр("Ссылка", Накладная.Ссылка);
		
	КонецЕсли;
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

Функция ДополнитьСтрокиТаблицыПерезаполненияПоЗаказу(ТаблицаНовыхСтрок) Экспорт
	
	// Заказ на перемещение
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НовыеСтроки.ЗаказПоставщику КАК Заказ,
	|	НовыеСтроки.ДокументОснование,
	|	НовыеСтроки.Распоряжение,
	|	НовыеСтроки.Номенклатура,
	|	НовыеСтроки.Характеристика,
	|	НовыеСтроки.Серия,
	|	НовыеСтроки.Назначение,
	|	НовыеСтроки.Количество,
	|	НовыеСтроки.КодСтроки
	|ПОМЕСТИТЬ втНовыеСтроки
	|ИЗ
	|	&ТаблицаНовыеСтроки КАК НовыеСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказПоставщикуТовары.НомерСтроки,
	|	ИСТИНА КАК ДанныеПоЗаказу,
	|	ЗаказПоставщикуТовары.Упаковка,
	|	НовыеСтроки.Серия,
	|	НовыеСтроки.Количество,
	|	НовыеСтроки.Номенклатура,
	|	НовыеСтроки.КодСтроки,
	|	НовыеСтроки.Характеристика,
	|	НовыеСтроки.Назначение,
	|	ЗаказПоставщикуТовары.Ссылка КАК Заказ,
	|	НовыеСтроки.ДокументОснование КАК ДокументОснование,
	|	НовыеСтроки.Распоряжение КАК Распоряжение
	|ПОМЕСТИТЬ ВтДанныеПоЗаказуНакладной
	|ИЗ
	|	Документ.ЗаказПоставщику.Товары КАК ЗаказПоставщикуТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втНовыеСтроки КАК НовыеСтроки
	|		ПО ЗаказПоставщикуТовары.Номенклатура = НовыеСтроки.Номенклатура
	|			И ЗаказПоставщикуТовары.Характеристика = НовыеСтроки.Характеристика
	|			И ЗаказПоставщикуТовары.Ссылка = НовыеСтроки.Заказ
	|			И ЗаказПоставщикуТовары.КодСтроки = НовыеСтроки.КодСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугТовары.НомерСтроки,
	|	ЛОЖЬ,
	|	ПоступлениеТоваровУслугТовары.Упаковка,
	|	НовыеСтроки.Серия,
	|	НовыеСтроки.Количество,
	|	НовыеСтроки.Номенклатура,
	|	НовыеСтроки.КодСтроки,
	|	НовыеСтроки.Характеристика,
	|	НовыеСтроки.Назначение,
	|	ПоступлениеТоваровУслугТовары.ЗаказПоставщику,
	|	НовыеСтроки.ДокументОснование,
	|	НовыеСтроки.Распоряжение
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втНовыеСтроки КАК НовыеСтроки
	|		ПО ПоступлениеТоваровУслугТовары.Номенклатура = НовыеСтроки.Номенклатура
	|			И ПоступлениеТоваровУслугТовары.Характеристика = НовыеСтроки.Характеристика
	|			И ПоступлениеТоваровУслугТовары.ЗаказПоставщику = НовыеСтроки.Заказ
	|			И (ПоступлениеТоваровУслугТовары.Ссылка.Проведен)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(
	|		ЕСТЬNULL(ТаблицаПоЗаказу.НомерСтроки, ТаблицаПоНакладной.НомерСтроки)
	|		, 0) КАК НомерСтроки,
	|	НовыеСтроки.Заказ,
	|	НовыеСтроки.ДокументОснование,
	|	НовыеСтроки.Распоряжение,
	|	НовыеСтроки.Номенклатура,
	|	НовыеСтроки.Характеристика,
	|	НовыеСтроки.Серия,
	|	НовыеСтроки.Назначение,
	|	НовыеСтроки.Количество,
	|	НовыеСтроки.КодСтроки,
	|	ЕСТЬNULL(ТаблицаПоЗаказу.Упаковка, ТаблицаПоНакладной.Упаковка) КАК Упаковка
	|ИЗ
	|	втНовыеСтроки КАК НовыеСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтДанныеПоЗаказуНакладной КАК ТаблицаПоЗаказу
	|		ПО (ТаблицаПоЗаказу.Заказ = НовыеСтроки.Заказ)
	|			И (ТаблицаПоЗаказу.Номенклатура = НовыеСтроки.Номенклатура)
	|			И (ТаблицаПоЗаказу.Характеристика = НовыеСтроки.Характеристика)
	|			И (ТаблицаПоЗаказу.КодСтроки = НовыеСтроки.КодСтроки)
	|			И (ТаблицаПоЗаказу.ДанныеПоЗаказу)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтДанныеПоЗаказуНакладной КАК ТаблицаПоНакладной
	|		ПО (ТаблицаПоНакладной.Заказ = НовыеСтроки.Заказ)
	|			И (ТаблицаПоНакладной.Номенклатура = НовыеСтроки.Номенклатура)
	|			И (ТаблицаПоНакладной.Характеристика = НовыеСтроки.Характеристика)
	|			И (ТаблицаПоНакладной.КодСтроки = НовыеСтроки.КодСтроки)
	|			И (НЕ ТаблицаПоНакладной.ДанныеПоЗаказу)";
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.УстановитьПараметр("ТаблицаНовыеСтроки", ТаблицаНовыхСтрок);
	
	ТаблицаНайденныеДопРеквизиты = Запрос.Выполнить().Выгрузить();
	
	ИтоговаяТаблица = ТаблицаНайденныеДопРеквизиты.СкопироватьКолонки();
	
	Отбор = Новый Структура("Распоряжение, КодСтроки, Номенклатура, Характеристика, Серия, Назначение");
	
	// Слияние доп. реквизитов и строк, для которых не были найдены данные
	Для Каждого Строка Из ТаблицаНовыхСтрок Цикл
		НоваяСтрока = ИтоговаяТаблица.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		ЗаполнитьЗначенияСвойств(Отбор, Строка);
		
		НайденныеСтроки = ТаблицаНайденныеДопРеквизиты.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденныеСтроки[0],, "Количество");
		КонецЕсли;
	КонецЦикла;
	
	ИтоговаяТаблица.Сортировать("НомерСтроки");
	
	Возврат ИтоговаяТаблица;
	
КонецФункции

Процедура ОбновитьЗависимыеРеквизитыПослеЗаполненияФактаПоПриемке(Объект) Экспорт

	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(Объект);
	
	СтруктураДействий = Новый Структура;
	Если Объект.ТипОснованияАктаОРасхождении = ПредопределенноеЗначение("Перечисление.ТипыОснованияАктаОРасхождении.ПоступлениеТоваровУслуг") Тогда
		СтруктураДействий.Вставить("ЗаполнитьНоменклатуруПоставщикаПоНоменклатуре", Объект.Партнер);
	КонецЕсли;
	НалогообложениеНДСПоУмолчанию = НДСОбщегоНазначенияСервер.ПолучитьНалогообложениеНДС(Объект.Организация, Объект.Контрагент, Объект.Дата, Ложь);
	СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС", НалогообложениеНДСПоУмолчанию);
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСумму");
	СтруктураДействий.Вставить("ПересчитатьКоличествоУпаковок");
	СтруктураДействий.Вставить("ПересчитатьРасхожденияПослеПриемки");
	СтруктураДействий.Вставить("ПризнакНаличиеКомментарияПриемка");
	
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Объект.Товары,СтруктураДействий, Неопределено);

КонецПроцедуры

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// М-7
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьАктыОРасхождениях";
	КомандаПечати.Идентификатор = "М7_Страница1,М7_Страница2,М7_Страница3,М7_Страница4";
	КомандаПечати.Представление = НСтр("ru='М-7';uk='М-7'");
	КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВНоменклатуреПоставщика", Ложь);

	Если ПолучитьФункциональнуюОпцию("ИспользоватьНоменклатуруПоставщиков") Тогда
		// М-7 (в номенклатуре поставщика)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьАктыОРасхождениях";
		КомандаПечати.Идентификатор = "М7_Страница1,М7_Страница2,М7_Страница3,М7_Страница4";
		КомандаПечати.Представление = НСтр("ru='М-7 (в номенклатуре поставщика)';uk='М-7 (у номенклатурі постачальника)'");
		КомандаПечати.ДополнительныеПараметры.Вставить("ПечатьВНоменклатуреПоставщика", Истина);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьДанныеДляПечатнойФормыМ7(ПараметрыПечати, МассивОбъектов) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст ="
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА АктОРасхожденияхПослеПриемкиТовары.Количество - АктОРасхожденияхПослеПриемкиТовары.КоличествоПоДокументу <> 0
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ)                                КАК ЕстьРасхождения,
	|	АктОРасхожденияхПослеПриемкиТовары.Ссылка КАК АктОРасхождениях
	|ПОМЕСТИТЬ ЕстьРасхожденияПоДокументам
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки.Товары КАК АктОРасхожденияхПослеПриемкиТовары
	|ГДЕ
	|	АктОРасхожденияхПослеПриемкиТовары.Ссылка В (&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	АктОРасхожденияхПослеПриемкиТовары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////2
	|ВЫБРАТЬ
	|	АктОРасхожденияхПослеПриемки.Ссылка                                                            КАК Ссылка,
	|	АктОРасхожденияхПослеПриемки.Номер                                                             КАК НомерДокумента,
	|	АктОРасхожденияхПослеПриемки.Дата                                                              КАК ДатаДокумента,
	|	АктОРасхожденияхПослеПриемки.Организация                                                       КАК Организация,
	|	АктОРасхожденияхПослеПриемки.Организация.Префикс                                               КАК Префикс,
	|	АктОРасхожденияхПослеПриемки.Руководитель                                                      КАК Руководитель,
	|	АктОРасхожденияхПослеПриемки.ГлавныйБухгалтер                                                  КАК ГлавныйБухгалтер,
	|	АктОРасхожденияхПослеПриемки.Валюта                                                            КАК Валюта,
	|	АктОРасхожденияхПослеПриемки.ДатаОтправленияТоваров                                            КАК ДатаОтправленияТоваров,
	|	АктОРасхожденияхПослеПриемки.НомерДокументаОВызовеПредставителяПартнера                        КАК НомерДокументаОВызовеПредставителяПартнера,
	|	АктОРасхожденияхПослеПриемки.ДатаДокументаОВызовеПредставителяПартнера                         КАК ДатаДокументаОВызовеПредставителяПартнера,
	|	АктОРасхожденияхПослеПриемки.Грузоотправитель                                                  КАК Грузоотправитель,
	|	АктОРасхожденияхПослеПриемки.Контрагент                                                        КАК Поставщик,
	|	АктОРасхожденияхПослеПриемки.НомерДоговораПоставки                                             КАК НомерДоговораПоставки,
	|	АктОРасхожденияхПослеПриемки.ДатаДоговораПоставки                                              КАК ДатаДоговораПоставки,
	|	АктОРасхожденияхПослеПриемки.НомерКоммерческогоАкта                                            КАК НомерКоммерческогоАкта,
	|	АктОРасхожденияхПослеПриемки.ДатаКоммерческогоАкта                                             КАК ДатаКоммерческогоАкта,
	|	АктОРасхожденияхПослеПриемки.НомерУдостоверенияОКачестве                                       КАК НомерУдостоверенияОКачестве,
	|	АктОРасхожденияхПослеПриемки.ДатаОтправленияТоваров                                            КАК ДатаОтправленияТовара,
	|	АктОРасхожденияхПослеПриемки.СведенияОСостоянииТранспортаПоФакту                               КАК СостояниеТранспортаПоФакту,
	|	АктОРасхожденияхПослеПриемки.УсловияХраненияТовараДоВскрытияНаСкладеПолучателя                 КАК УсловияХраненияТовараДоВскрытия,
	|	АктОРасхожденияхПослеПриемки.СостояниеТарыИУпаковки                                            КАК СостояниеТарыИУпаковки,
	|	АктОРасхожденияхПослеПриемки.ПрочиеДанные                                                      КАК ПрочиеДанные,
	|	АктОРасхожденияхПослеПриемки.ЗаключениеКомиссии                                                КАК ЗаключениеКомиссии,
	|	АктОРасхожденияхПослеПриемки.Приложение                                                        КАК Приложение,
	|	АктОРасхожденияхПослеПриемки.НомерСчетаВходящий                                                КАК НомерСчетаВходящий,
	|	АктОРасхожденияхПослеПриемки.ДатаСчетаВходящий                                                 КАК ДатаСчетаВходящий,
	|	АктОРасхожденияхПослеПриемки.ДатаСопроводительногоТранспортногоДокумента                       КАК ДатаСопроводительногоТранспортногоДокумента,
	|	АктОРасхожденияхПослеПриемки.УсловияХраненияТовараДоВскрытияНаСкладеПолучателя                 КАК УсловияХраненияТовараДоВскрытияНаСкладеПолучателя,
	|	АктОРасхожденияхПослеПриемки.СпособОпределенияИКоличествоТоваровКоторыхНедостаточно            КАК СпособОпределенияИКоличествоТоваровКоторыхНедостаточно,
	|	АктОРасхожденияхПослеПриемки.ДатаПриемкиТоваров КАК ДатаПриемкиТоваров,
	|	АктОРасхожденияхПослеПриемки.МестоСоставленияДокумента КАК МестоСоставленияДокумента,
	|	АктОРасхожденияхПослеПриемки.ВремяНачалоПриемки КАК ВремяНачалоПриемки,
	|	АктОРасхожденияхПослеПриемки.ВремяОкончанияПриемки КАК ВремяОкончанияПриемки,
	|	АктОРасхожденияхПослеПриемки.СтанцияПристаньУдостоверенияОКачестве КАК СтанцияПристаньУдостоверенияОКачестве,
	|	АктОРасхожденияхПослеПриемки.НомерСопроводительногоТранспортногоДокумента КАК НомерСопроводительногоТранспортногоДокумента,
	|	АктОРасхожденияхПослеПриемки.НомераВагоновСопроводительногоТранспортногоДокумента КАК НомераВагоновСопроводительногоТранспортногоДокумента,
	|	АктОРасхожденияхПослеПриемки.ДокументУдостоверяющийПолномочияЧленаКомиссии1 КАК ДокументУдостоверяющийПолномочияЧленаКомиссии1,
	|	АктОРасхожденияхПослеПриемки.ДокументУдостоверяющийПолномочияЧленаКомиссии2 КАК ДокументУдостоверяющийПолномочияЧленаКомиссии2,
	|	АктОРасхожденияхПослеПриемки.ДокументУдостоверяющийПолномочияЧленаКомиссии3 КАК ДокументУдостоверяющийПолномочияЧленаКомиссии3,
	|	АктОРасхожденияхПослеПриемки.КладовщикПринявшийТовар                                           КАК КладовщикПринявшийТовар,
	|	АктОРасхожденияхПослеПриемки.ЧленКомиссии1                                                     КАК ЧленКомиссии1,
	|	АктОРасхожденияхПослеПриемки.ДолжностьЧленаКомиссии1                                           КАК ДолжностьЧленаКомиссии1,
	|	АктОРасхожденияхПослеПриемки.ЧленКомиссии2                                                     КАК ЧленКомиссии2,
	|	АктОРасхожденияхПослеПриемки.ДолжностьЧленаКомиссии2                                           КАК ДолжностьЧленаКомиссии2,
	|	АктОРасхожденияхПослеПриемки.ЧленКомиссии3                                                     КАК ЧленКомиссии3,
	|	АктОРасхожденияхПослеПриемки.ДолжностьЧленаКомиссии3                                           КАК ДолжностьЧленаКомиссии3,
	|	АктОРасхожденияхПослеПриемки.ПриемкаТоваров.(
	|		НомерСтроки КАК НомерСтроки,
	|		ДатаПрибытияВПунктНазначения КАК ДатаПрибытияВПунктНазначения,
	|		ДатаВскрытия КАК ДатаВскрытия,
	|		ДатаВыдачиОрганизациейТранспорта КАК ДатаВыдачи,
	|		ДатаДоставкиНаСкладПолучателя КАК ДатаДоставкиНаСклад
	|	)                                                                                              КАК ТаблицаПриемкиТоваров,
	|	ЛОЖЬ                                                                                           КАК ОшибкаНетРасхождений,
	|	АктОРасхожденияхПослеПриемки.ЦенаВключаетНДС                                                   КАК ЦенаВключаетНДС,
	|	ЕстьРасхожденияПоДокументам.ЕстьРасхождения
	|ИЗ
	|	ЕстьРасхожденияПоДокументам КАК ЕстьРасхожденияПоДокументам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АктОРасхожденияхПослеПриемки КАК АктОРасхожденияхПослеПриемки
	|		ПО ЕстьРасхожденияПоДокументам.АктОРасхождениях = АктОРасхожденияхПослеПриемки.Ссылка
	|ГДЕ
	|	АктОРасхожденияхПослеПриемки.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////4
	|ВЫБРАТЬ
	|	АктОРасхожденияхПослеПриемкиТовары.Ссылка                            КАК Ссылка,
	|	АктОРасхожденияхПослеПриемкиТовары.Номенклатура                      КАК Номенклатура,
	|	АктОРасхожденияхПослеПриемкиТовары.НоменклатураПоставщика            КАК НоменклатураПоставщика,
	|	АктОРасхожденияхПослеПриемкиТовары.Характеристика                    КАК Характеристика,
	|	АктОРасхожденияхПослеПриемкиТовары.Упаковка                          КАК Упаковка,
	|	АктОРасхожденияхПослеПриемкиТовары.КоличествоПоДокументу             КАК КоличествоПоДокументам,
	|	АктОРасхожденияхПослеПриемкиТовары.Цена                              КАК ЦенаПоДокументам,
	|	АктОРасхожденияхПослеПриемкиТовары.СуммаПоДокументу                  КАК СуммаПоДокументам,
	|	АктОРасхожденияхПослеПриемкиТовары.СтавкаНДС                         КАК СтавкаНДСПоДокументам,
	|	АктОРасхожденияхПослеПриемкиТовары.СуммаНДСПоДокументу               КАК СуммаНДСПоДокументам,
	|	АктОРасхожденияхПослеПриемкиТовары.Количество                        КАК КоличествоПоФакту,
	|	АктОРасхожденияхПослеПриемкиТовары.Цена                              КАК ЦенаПоФакту,
	|	АктОРасхожденияхПослеПриемкиТовары.Сумма                             КАК СуммаПоФакту,
	|	АктОРасхожденияхПослеПриемкиТовары.СтавкаНДС                         КАК СтавкаНДСПоФакту,
	|	АктОРасхожденияхПослеПриемкиТовары.СуммаНДС                          КАК СуммаНДСПоФакту,
	|	АктОРасхожденияхПослеПриемкиТовары.Номенклатура.Код                  КАК Код,
	|	АктОРасхожденияхПослеПриемкиТовары.Номенклатура.Артикул              КАК Артикул,
	|	АктОРасхожденияхПослеПриемкиТовары.Номенклатура.ЕдиницаИзмерения     КАК ЕдиницаИзмерения,
 	|	АктОРасхожденияхПослеПриемкиТовары.Номенклатура.ЕдиницаИзмерения.Код КАК КодЕдиницыИзмерения,
	|	ВЫБОР
	|		КОГДА АктОРасхожденияхПослеПриемкиТовары.Количество - АктОРасхожденияхПослеПриемкиТовары.КоличествоПоДокументу > 0
	|			ТОГДА АктОРасхожденияхПослеПриемкиТовары.Количество - АктОРасхожденияхПослеПриемкиТовары.КоличествоПоДокументу
	|		ИНАЧЕ 0
	|	КОНЕЦ                                                                КАК КоличествоИзлишек,
	|	ВЫБОР
	|		КОГДА АктОРасхожденияхПослеПриемкиТовары.КоличествоПоДокументу - АктОРасхожденияхПослеПриемкиТовары.Количество > 0
	|			ТОГДА АктОРасхожденияхПослеПриемкиТовары.КоличествоПоДокументу - АктОРасхожденияхПослеПриемкиТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                                                                КАК КоличествоНедостача,
	|	ВЫБОР
	|		КОГДА АктОРасхожденияхПослеПриемкиТовары.Сумма - АктОРасхожденияхПослеПриемкиТовары.СуммаПоДокументу > 0
	|			ТОГДА АктОРасхожденияхПослеПриемкиТовары.Сумма - АктОРасхожденияхПослеПриемкиТовары.СуммаПоДокументу
	|		ИНАЧЕ 0
	|	КОНЕЦ                                                                КАК СуммаИзлишек,
	|	ВЫБОР
	|		КОГДА АктОРасхожденияхПослеПриемкиТовары.СуммаПоДокументу - АктОРасхожденияхПослеПриемкиТовары.Сумма > 0
	|			ТОГДА АктОРасхожденияхПослеПриемкиТовары.СуммаПоДокументу - АктОРасхожденияхПослеПриемкиТовары.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ                                                                КАК СуммаНедостача,
	|	АктОРасхожденияхПослеПриемкиТовары.Номенклатура.НаименованиеПолное   КАК НоменклатураНаименование,
	|	АктОРасхожденияхПослеПриемкиТовары.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименование,
	|	АктОРасхожденияхПослеПриемкиТовары.Ссылка.ЦенаВключаетНДС            КАК ЦенаВключаетНДСПоФакту,
	|	АктОРасхожденияхПослеПриемкиТовары.Ссылка.ЦенаВключаетНДС            КАК ЦенаВключаетНДСПоДокументам,
	|	АктОРасхожденияхПослеПриемкиТовары.НомерСтроки                       КАК НомерСтроки,
	|	АктОРасхожденияхПослеПриемкиТовары.НомерПаспорта                     КАК НомерПаспорта
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки.Товары КАК АктОРасхожденияхПослеПриемкиТовары
	|ГДЕ
	|	АктОРасхожденияхПослеПриемкиТовары.Ссылка В(&МассивОбъектов)
	|	И АктОРасхожденияхПослеПриемкиТовары.КоличествоУпаковок <> АктОРасхожденияхПослеПриемкиТовары.КоличествоУпаковокПоДокументу
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////5
	|ВЫБРАТЬ
	|	АктОРасхожденияхПослеПриемкиТовары.Ссылка                              КАК Ссылка,
	|	АктОРасхожденияхПослеПриемкиТовары.Упаковка                            КАК Упаковка,
	|	АктОРасхожденияхПослеПриемкиТовары.Номенклатура.ЕдиницаИзмерения       КАК ЕдиницаИзмерения,
	|	АктОРасхожденияхПослеПриемкиТовары.Номенклатура.Наименование           КАК НоменклатураНаименование,
	|	АктОРасхожденияхПослеПриемкиТовары.Характеристика.Наименование         КАК ХарактеристикаНаименование,
	|	АктОРасхожденияхПослеПриемкиТовары.НоменклатураПоставщика.Наименование КАК НоменклатураПоставщикаНаименование,
	|	АктОРасхожденияхПослеПриемкиТовары.НомерСтроки                         КАК НомерСтроки
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки.Товары КАК АктОРасхожденияхПослеПриемкиТовары
	|ГДЕ
	|	АктОРасхожденияхПослеПриемкиТовары.Ссылка В(&МассивОбъектов)
	|	И АктОРасхожденияхПослеПриемкиТовары.КоличествоПоДокументу > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////6
	|ВЫБРАТЬ
	|	ПериодыКурсовВалютДокументов.Ссылка КАК Ссылка,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПериодыКурсовВалютДокументов.Ссылка.Валюта = КурсыВалют.Валюта
	|				ТОГДА ЕСТЬNULL(КурсыВалют.Курс, 1)
	|		КОНЕЦ) КАК КурсВалютыДокумента,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПериодыКурсовВалютДокументов.Ссылка.Валюта = КурсыВалют.Валюта
	|				ТОГДА ЕСТЬNULL(КурсыВалют.Кратность, 1)
	|		КОНЕЦ) КАК КратностьВалютыДокумента,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА &ВалютаРегламентированногоУчета = КурсыВалют.Валюта
	|				ТОГДА ЕСТЬNULL(КурсыВалют.Курс, 1)
	|		КОНЕЦ) КАК КурсВалютыРегламентированногоУчета,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА &ВалютаРегламентированногоУчета = КурсыВалют.Валюта
	|				ТОГДА ЕСТЬNULL(КурсыВалют.Кратность, 1)
	|		КОНЕЦ) КАК КратностьВалютыРегламентированногоУчета,
	|	ВЫБОР
	|		КОГДА &ВалютаРегламентированногоУчета = ПериодыКурсовВалютДокументов.Ссылка.Валюта
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПересчетНеТребуется
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка КАК Ссылка,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА ДанныеДокумента.Валюта = КурсыВалют.Валюта
	|					ТОГДА КурсыВалют.Период
	|			КОНЕЦ) КАК ПериодВалютаДокумента,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА &ВалютаРегламентированногоУчета = КурсыВалют.Валюта
	|					ТОГДА КурсыВалют.Период
	|			КОНЕЦ) КАК ПериодВалютаРегламентированногоУчета
	|	ИЗ
	|		Документ.АктОРасхожденияхПослеПриемки КАК ДанныеДокумента
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|			ПО ДанныеДокумента.Дата >= КурсыВалют.Период
	|				И (ДанныеДокумента.Валюта = КурсыВалют.Валюта
	|					ИЛИ &ВалютаРегламентированногоУчета = КурсыВалют.Валюта)
	|	ГДЕ
	|		ДанныеДокумента.Ссылка В(&МассивОбъектов)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеДокумента.Ссылка) КАК ПериодыКурсовВалютДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют КАК КурсыВалют
	|		ПО (ПериодыКурсовВалютДокументов.Ссылка.Валюта = КурсыВалют.Валюта
	|					И ПериодыКурсовВалютДокументов.ПериодВалютаДокумента = КурсыВалют.Период
	|				ИЛИ &ВалютаРегламентированногоУчета = КурсыВалют.Валюта
	|					И ПериодыКурсовВалютДокументов.ПериодВалютаРегламентированногоУчета = КурсыВалют.Период)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПериодыКурсовВалютДокументов.Ссылка,
	|	ВЫБОР
	|		КОГДА &ВалютаРегламентированногоУчета = ПериодыКурсовВалютДокументов.Ссылка.Валюта
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	
	СтруктураДанныхПечати = Новый Структура;
	СтруктураДанныхПечати.Вставить("ДанныеПечати",              ПакетРезультатов[1]);
	СтруктураДанныхПечати.Вставить("ДанныеТоваров",             ПакетРезультатов[2]);
	СтруктураДанныхПечати.Вставить("ДанныеТоваровПоДокументам", ПакетРезультатов[3]);
	СтруктураДанныхПечати.Вставить("ДанныеКурсовВалют",         ПакетРезультатов[4]);

	Возврат СтруктураДанныхПечати;
	
КонецФункции

Процедура ЗаполнитьСтруктуруПолучателейПечатныхФорм(СтруктураДанныхОбъектаПечати) Экспорт
	
	СтруктураДанныхОбъектаПечати.ОсновнойПолучатель = "Партнер";
	
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Партнер");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда 
		СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Контрагент");
	КонецЕсли;
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("КонтактноеЛицо");
	
КонецПроцедуры

Функция ДоступныеДляШаблоновПечатныеФормы() Экспорт

	МассивДоступныхПечатныхФорм = Новый Массив;
	
	ПараметрыПечати = Новый Структура("ПечатьВНоменклатуреПоставщика", Ложь);
	
	МассивДоступныхПечатныхФорм.Добавить(ШаблоныСообщенийСервер.СтруктураПараметровДоступнойПечатнойФормы(
	                                     "Торг1", НСтр("ru='Торг-1';uk='Торг-1'"), "Обработка.ПечатьАктыОРасхождениях", ПараметрыПечати));
	МассивДоступныхПечатныхФорм.Добавить(ШаблоныСообщенийСервер.СтруктураПараметровДоступнойПечатнойФормы(
	                                     "Торг2", НСтр("ru='Торг-2';uk='Торг-2'"), "Обработка.ПечатьАктыОРасхождениях", ПараметрыПечати));
	МассивДоступныхПечатныхФорм.Добавить(ШаблоныСообщенийСервер.СтруктураПараметровДоступнойПечатнойФормы(
	                                     "Торг3", НСтр("ru='Торг-3';uk='Торг-3'"), "Обработка.ПечатьАктыОРасхождениях", ПараметрыПечати));
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьНоменклатуруПоставщиков") Тогда
		ПараметрыПечати.ПечатьВНоменклатуреПоставщика = Истина;
		
		МассивДоступныхПечатныхФорм.Добавить(ШаблоныСообщенийСервер.СтруктураПараметровДоступнойПечатнойФормы(
		                                     "Торг1", НСтр("ru='Торг-1 (в номенклатуре поставщика)';uk='Торг-1 (у номенклатурі постачальника)'"), "Обработка.ПечатьАктыОРасхождениях", ПараметрыПечати));
		МассивДоступныхПечатныхФорм.Добавить(ШаблоныСообщенийСервер.СтруктураПараметровДоступнойПечатнойФормы(
		                                     "Торг2", НСтр("ru='Торг-2 (в номенклатуре поставщика)';uk='Торг-2 (у номенклатурі постачальника)'"), "Обработка.ПечатьАктыОРасхождениях", ПараметрыПечати));
		МассивДоступныхПечатныхФорм.Добавить(ШаблоныСообщенийСервер.СтруктураПараметровДоступнойПечатнойФормы(
		                                     "Торг3", НСтр("ru='Торг-3 (в номенклатуре поставщика)';uk='Торг-3 (у номенклатурі постачальника)'"), "Обработка.ПечатьАктыОРасхождениях", ПараметрыПечати));
	КонецЕсли;
	
	Возврат МассивДоступныхПечатныхФорм

КонецФункции

#КонецОбласти

#Область ИзменениеСтатуса

// Формирует запрос проверки при смене статуса списка документов
//
// Параметры:
//	МассивДокументов - Массив - Массив ссылок на документы, которые надо проверять
//	НовыйСтатус - Строка - Имя нового статуса
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
//	Запрос - Запрос проверки перед сменой статуса
//
Функция СформироватьЗапросПроверкиПриСменеСтатуса(МассивДокументов, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	ЗначениеНовогоСтатуса = Перечисления.СтатусыАктаОРасхождениях[НовыйСтатус];
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Ссылка) КАК Представление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Статус) КАК ПредставлениеТекущегоСтатуса,
	|	ПРЕДСТАВЛЕНИЕ(&Статус) КАК ПредставлениеНовогоСтатуса,
	|	ВЫБОР
	|		КОГДА ТаблицаДокументов.Статус = &Статус
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СтатусСовпадает,
	|	ТаблицаДокументов.Проведен КАК Проведен,
	|	ТаблицаДокументов.ПометкаУдаления КАК ПометкаУдаления,
	|	ИСТИНА КАК ЗаписьПроведением
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки КАК ТаблицаДокументов
	|ГДЕ
	|	ТаблицаДокументов.Ссылка В (&МассивДокументов)
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Статус", ЗначениеНовогоСтатуса);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Возврат Запрос;
	
КонецФункции

// Возвращает результат проверки при смене статуса документа
//
// Параметры:
//	ВыборкаПроверки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
//	НовыйСтатус - Перечисление - Новый статус
//	ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
//	Булево - Истина, в случае успешного завершения проверки
//
Функция ПроверкаПередСменойСтатуса(ВыборкаПроверки, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли



