// ПриСозданииНаСервере()
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	мПараметры = Новый Структура();
	
	мСпрашиватьОСохранении = Истина;
	мПрограммноеЗакрытие   = Ложь;
	
	Организация = Параметры.Организация;
	
	мДатаНачалаПериодаОтчета = Параметры.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета  = Параметры.мДатаКонцаПериодаОтчета;
	
	
	ДатаНач 							= Параметры.ДатаНач;
	ДатаКон 							= Параметры.ДатаКон;
	ПриИзмененииДатаНач(ЭтаФорма);
	ПриИзмененииДатаКон(ЭтаФорма);
	
	ПоОбособленномуПодразделению 		= Параметры.ПоОбособленномуПодразделению;
	Если Не (ПоОбособленномуПодразделению = Истина ИЛИ ПоОбособленномуПодразделению = Ложь) Тогда
		ПоОбособленномуПодразделению = Ложь	
	КонецЕсли;
	
	ОбособленноеПодразделение 			= Параметры.ОбособленноеПодразделение;
	
	ПервыйНомерВыданные 				= Параметры.ПервыйНомерВыданные;
	Если НЕ ЗначениеЗаполнено(ПервыйНомерВыданные) Тогда
		ПервыйНомерВыданные = 1;	
	КонецЕсли;
	// сохраним на время работы - нам нужно знать изменялся ли номер
	мПараметры.Вставить("ПервыйНомерВыданные", ПервыйНомерВыданные);
	
	
	ПервыйНомерПолученные 			= Параметры.ПервыйНомерПолученные;
	Если НЕ ЗначениеЗаполнено(ПервыйНомерПолученные) Тогда
		ПервыйНомерПолученные = 1;	
	КонецЕсли;
	// сохраним на время работы - нам нужно знать изменялся ли номер
	мПараметры.Вставить("ПервыйНомерПолученные", ПервыйНомерПолученные);
	
	мПараметры.Вставить("ОбособленноеПодразделение",    ОбособленноеПодразделение);
	мПараметры.Вставить("ПоОбособленномуПодразделению", ПоОбособленномуПодразделению);
	
	СортироватьВыданныеТолькоПоНомеру = Параметры.СортироватьВыданныеТолькоПоНомеру;
	Если Не (СортироватьВыданныеТолькоПоНомеру = Истина ИЛИ СортироватьВыданныеТолькоПоНомеру = Ложь) Тогда
		СортироватьВыданныеТолькоПоНомеру = Ложь	
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Элементы", Элементы);
	СтруктураПараметров.Вставить("ПоОбособленномуПодразделению", ПоОбособленномуПодразделению);
		
	УправлениеЭУ(СтруктураПараметров);
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиентеНаСервереБезКонтекста 
Процедура УправлениеЭУ(СтруктураПараметров)
	
	СтруктураПараметров.Элементы.ОбособленноеПодразделение.Видимость = СтруктураПараметров.ПоОбособленномуПодразделению;
	
КонецПроцедуры // УправлениеЭУ()

// Сохранить()
//
&НаКлиенте
Процедура Сохранить(Команда)
	
	мСпрашиватьОСохранении = Ложь;
	ДействияПриЗакрытии();
	
КонецПроцедуры // Сохранить()

// ПередЗакрытием()
//
&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)

	Если ЗавершениеРаботы <> Неопределено Тогда 
		
		Если ЗавершениеРаботы И Модифицированность Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	Если мПрограммноеЗакрытие = Истина Тогда
		Возврат;
	КонецЕсли;
			
	Если мСпрашиватьОСохранении <> Ложь И Модифицированность Тогда
		
		Отказ = Истина;
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru='Настройки были изменены. Сохранить изменения?';uk='Настройки були змінені. Зберегти зміни?'"), РежимДиалогаВопрос.ДаНетОтмена);
		Возврат;
		
	ИначеЕсли мСпрашиватьОСохранении <> Ложь И НЕ Модифицированность Тогда
		Возврат;
	КонецЕсли;
	
	ДействияПриЗакрытии();
	
КонецПроцедуры

&НаКлиенте
Процедура ДействияПриЗакрытии()
	
	ВладелецФормы.СтруктураРеквизитовФормы.ДатаНач 								= ДатаНач;
	ВладелецФормы.СтруктураРеквизитовФормы.ДатаКон 								= ДатаКон;
	ВладелецФормы.СтруктураРеквизитовФормы.ОбособленноеПодразделение 			= ОбособленноеПодразделение;
	ВладелецФормы.СтруктураРеквизитовФормы.ПоОбособленномуПодразделению 		= ПоОбособленномуПодразделению;
	ВладелецФормы.СтруктураРеквизитовФормы.ПервыйНомерПолученные 				= ПервыйНомерПолученные;
	ВладелецФормы.СтруктураРеквизитовФормы.ПервыйНомерВыданные 				= ПервыйНомерВыданные;
	ВладелецФормы.СтруктураРеквизитовФормы.СортироватьВыданныеТолькоПоНомеру 	= СортироватьВыданныеТолькоПоНомеру;	
	
	ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекСохранить("РегламентированнаяОтчетность", "РеестрНН_СортироватьВыданныеТолькоПоНомеру", СортироватьВыданныеТолькоПоНомеру);	
	ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекСохранить("РегламентированнаяОтчетность", "РеестрНН_ПоОбособленномуПодразделению", 		 ПоОбособленномуПодразделению);	
	ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекСохранить("РегламентированнаяОтчетность", "РеестрНН_ОбособленноеПодразделение",			 ОбособленноеПодразделение);	
	
	мПрограммноеЗакрытие = Истина;
	Отказ = Истина;
	
	ПараметрыВозврата = Новый Структура();
	
	Если мПараметры.ПервыйНомерВыданные   <> ПервыйНомерВыданные  Тогда
		ПараметрыВозврата.Вставить("ЗановоВывестиРазделВыданные");
	КонецЕсли;
	
	Если мПараметры.ПервыйНомерПолученные <> ПервыйНомерПолученные Тогда
		ПараметрыВозврата.Вставить("ЗановоВывестиРазделПолученные");
	КонецЕсли;
	
	Если    мПараметры.ОбособленноеПодразделение    <> ОбособленноеПодразделение 
		ИЛИ мПараметры.ПоОбособленномуПодразделению <> ПоОбособленномуПодразделению Тогда
		ПараметрыВозврата.Вставить("ЗаполнитьНаименованиеПоОбособленномуПодразделению");
	КонецЕсли;
	
	Закрыть(ПараметрыВозврата);
	
КонецПроцедуры // ПередЗакрытием()

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Ответ, ДополнительныеПараметры)Экспорт
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		мПрограммноеЗакрытие = Истина;
		Закрыть();
		Возврат;
	ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	ДействияПриЗакрытии();
	
КонецПроцедуры
 
&НаКлиентеНаСервереБезКонтекста
Процедура ПриИзмененииДатаНач(Форма)
	
	Если Форма.ДатаНач < Форма.мДатаНачалаПериодаОтчета Тогда
		Если НЕ ЗначениеЗаполнено(Форма.ДатаНач) Тогда
			Форма.ДатаНач = Форма.мДатаНачалаПериодаОтчета;
		КонецЕсли;
	ИначеЕсли Форма.ДатаНач > Форма.мДатаКонцаПериодаОтчета Тогда
		Форма.ДатаНач = Форма.мДатаКонцаПериодаОтчета;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Форма.ДатаКон) Тогда
		Форма.ДатаКон = Форма.мДатаКонцаПериодаОтчета;
	КонецЕсли;
	
	Если Форма.ДатаНач > Форма.ДатаКон Тогда
	     Форма.ДатаКон = Форма.ДатаНач;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПриИзмененииДатаКон(Форма)
	
	Если Форма.ДатаКон > Форма.мДатаКонцаПериодаОтчета Тогда
		Форма.ДатаКон = Форма.мДатаКонцаПериодаОтчета;
	ИначеЕсли Форма.ДатаКон < Форма.мДатаНачалаПериодаОтчета Тогда
		Форма.ДатаКон =Форма. мДатаНачалаПериодаОтчета;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Форма.ДатаНач) Тогда
		Форма.ДатаНач = Форма.мДатаНачалаПериодаОтчета;
	КонецЕсли;
	
	Если Форма.ДатаНач > Форма.ДатаКон Тогда
	     Форма.ДатаНач = Форма.ДатаКон;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоОбособленномуПодразделениюПриИзменении(Элемент)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Элементы", Элементы);
	СтруктураПараметров.Вставить("ПоОбособленномуПодразделению", ПоОбособленномуПодразделению);
		
	УправлениеЭУ(СтруктураПараметров);
	
	Модифицированность = Истина;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПервыйНомерВыданныеПриИзменении(Элемент)
	
	Если ПервыйНомерВыданные < 1  Тогда
		ПервыйНомерВыданные = 1;	
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПервыйНомерПолученныеПриИзменении(Элемент)
	
	Если ПервыйНомерПолученные < 1  Тогда
		ПервыйНомерПолученные = 1;	
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачПриИзменении(Элемент)
	
	ПриИзмененииДатаНач(ЭтаФорма);
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаКонПриИзменении(Элемент)
	
	ПриИзмененииДатаКон(ЭтаФорма);
	Модифицированность = Истина;	
	
КонецПроцедуры

&НаКлиенте
Процедура СортироватьВыданныеТолькоПоНомеруПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОбособленноеПодразделениеПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОбособленноеПодразделениеОчистка(Элемент, СтандартнаяОбработка)
	
	Модифицированность = Истина;
	
КонецПроцедуры
