#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
    
    Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка как Ссылка,
	|	ДанныеДокумента.Дата как Период,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ВЫБОР 
	|		КОГДА ДанныеДокумента.Контрагент ССЫЛКА Справочник.Организации
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	    ИНАЧЕ ДанныеДокумента.Партнер
	|	КОНЕЦ КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.ВидОперации КАК ВидОперации,
	| 
	|	ВЫБОР 
	// ВводОстатков
	|       КОГДА ДанныеДокумента.ПоВводуОстатков
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.ВводОстатков)
	// ПоступлениеТоваровУслуг
	|       КОГДА ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.НалоговаяНакладная)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Поставка)
	// ВозвратТоваровПоставщику, ВозвратТоваровМеждуОрганизациями
	|       КОГДА ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РасчетКорректировкиВозврат)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат)
	// ОтчетКомитенту
	|       КОГДА ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РасчетКорректировкиКорректировка)
	|			ТОГДА ВЫБОР 
	|				КОГДА ДанныеДокумента.Переоценка
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|				ИНАЧЕ
	|					ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Поставка)
	|        		КОНЕЦ
	// Все выше упомянутое, но для контрагента для неплательщика НДС
	|       КОГДА ДанныеДокумента.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.ТоварныйЧек)
	|			ТОГДА ВЫБОР 
	|				КОГДА ДанныеДокумента.Переоценка
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка)
	|				ИНАЧЕ
	|					ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Поставка)
	|       	 	КОНЕЦ
	|	КОНЕЦ КАК ВидПоставки,
	| 
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ДатаОтгрузкиОплаты <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаОтгрузкиОплаты, ДЕНЬ)
	|		ИНАЧЕ 
	|			ДанныеДокумента.ДатаВходящегоДокумента
	|	КОНЕЦ КАК ДатаВозникновенияНК,
	|
	|	ДанныеДокумента.Переоценка КАК Переоценка,
	|	ДанныеДокумента.ПоВводуОстатков КАК ПоВводуОстатков	
	|ИЗ
	|	Документ.РегистрацияВходящегоНалоговогоДокумента КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
    |";
    
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
    
	Запрос.УстановитьПараметр("Период",                     Реквизиты.Период);
	Запрос.УстановитьПараметр("ВидОперации",                Реквизиты.ВидОперации);
	Запрос.УстановитьПараметр("Переоценка",                 Реквизиты.Переоценка);
	Запрос.УстановитьПараметр("ВидПоставки",                Реквизиты.ВидПоставки);
	Запрос.УстановитьПараметр("ПоВводуОстатков",            Реквизиты.ПоВводуОстатков);
	Запрос.УстановитьПараметр("ДатаВозникновенияНК",        Реквизиты.ДатаВозникновенияНК);
	Запрос.УстановитьПараметр("Организация",                Реквизиты.Организация);
	Запрос.УстановитьПараметр("Партнер",    				Реквизиты.Партнер);
	Запрос.УстановитьПараметр("Контрагент",    				Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("НаправлениеДеятельности",    Реквизиты.НаправлениеДеятельности);
	
КонецПроцедуры

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
    
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
    
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
    ТекстЗапросаТаблицаНДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов(Запрос, ТекстыЗапроса, Регистры);
    ТекстЗапросаТаблицаНДСРеестрПолученныхНалоговыхДокументов(Запрос, ТекстыЗапроса, Регистры);
    ТекстЗапросаТаблицаНДСУсловныеПродажи(Запрос, ТекстыЗапроса, Регистры);
	
	////////////////////////////////////////////////////////////////////////////
	// Поместим результаты запроса в дополнительные свойства
	
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
    
КонецПроцедуры

Функция ТекстЗапросаТаблицаНДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов(Запрос, ТекстыЗапроса, Регистры)
    
	ИмяРегистра = "НДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтСоответствиеОбъектовРасчетовКлючамАналитикиУчетаПоПартнерам", ТекстыЗапроса) Тогда
		ТекстЗапросаВтСоответствиеОбъектовРасчетовКлючамАналитикиУчетаПоПартнерам(Запрос, ТекстыЗапроса);
	КонецЕсли;	
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	СоответствиеОбъектовРасчетовАналитикам.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ПоставкаДокумента.ОбъектРасчетов КАК ОбъектРасчетов,
	|
	|	&ВидПоставки КАК ВидПоставки,
	|
	|	ПоставкаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ПоставкаДокумента.НалоговоеНазначение КАК НалоговоеНазначение,
	|   ВЫБОР
	|       КОГДА &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РасчетКорректировкиВозврат)
	|			ТОГДА -1	
	|       ИНАЧЕ	
	|       	1
	|   КОНЕЦ * ПоставкаДокумента.СуммаСНДС КАК СуммаВзаиморасчетов,
	|	ВЫБОР КОГДА (НЕ ПоставкаДокумента.НалоговоеНазначение.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая)) ТОГДА
	|   	ВЫБОР
	|       	КОГДА &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РасчетКорректировкиВозврат)
	|				ТОГДА -1	
	|       	ИНАЧЕ	
	|       		1
	|   	КОНЕЦ * (ПоставкаДокумента.СуммаНДС - ПоставкаДокумента.СуммаНДСПропорционально)
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаНДСКредит,
	|	&ДатаВозникновенияНК КАК ДатаВходящегоНалоговогоДокумента,
	|	ПоставкаДокумента.ДокументПоставки КАК ДокументПоставки
	|ИЗ
	|	Документ.РегистрацияВходящегоНалоговогоДокумента.Поставка КАК ПоставкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСоответствиеОбъектовРасчетовКлючамАналитикиУчетаПоПартнерам КАК СоответствиеОбъектовРасчетовАналитикам
	|		ПО (СоответствиеОбъектовРасчетовАналитикам.ОбъектРасчетов = ПоставкаДокумента.ОбъектРасчетов)
	|ГДЕ
	|	ПоставкаДокумента.Ссылка = &Ссылка
	|   И &ВидОперации В ( 
	|   	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.НалоговаяНакладная), 
	|   	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РасчетКорректировкиВозврат), 
	|   	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РасчетКорректировкиКорректировка), 
	|   	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.ТоварныйЧек)
	|   ) 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	СоответствиеОбъектовРасчетовАналитикам.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ПоставкаДокумента.ОбъектРасчетов КАК ОбъектРасчетов,
	|
	|	&ВидПоставки КАК ВидПоставки,
	|
	|	ПоставкаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ПоставкаДокумента.НалоговоеНазначение КАК НалоговоеНазначение,
	|   ПоставкаДокумента.СуммаСНДС КАК СуммаВзаиморасчетов,
	|	ВЫБОР КОГДА (НЕ ПоставкаДокумента.НалоговоеНазначение.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая)) ТОГДА
	|   	(ПоставкаДокумента.СуммаНДС - ПоставкаДокумента.СуммаНДСПропорционально)
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СуммаНДСКредит,
	|	&ДатаВозникновенияНК КАК ДатаВходящегоНалоговогоДокумента,
	|	ПоставкаДокумента.ДокументПоставки КАК ДокументПоставки
	|ИЗ
	|	Документ.РегистрацияВходящегоНалоговогоДокумента.Поставка КАК ПоставкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСоответствиеОбъектовРасчетовКлючамАналитикиУчетаПоПартнерам КАК СоответствиеОбъектовРасчетовАналитикам
	|		ПО (СоответствиеОбъектовРасчетовАналитикам.ОбъектРасчетов = ПоставкаДокумента.ОбъектРасчетов)
	|ГДЕ
	|	ПоставкаДокумента.Ссылка = &Ссылка
	|   И &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.ИсправлениеОшибки)
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	СоответствиеОбъектовРасчетовАналитикам.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ПоставкаДокумента.ОбъектРасчетов КАК ОбъектРасчетов,
	|
	|	&ВидПоставки КАК ВидПоставки,
	|
	|	ПоставкаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ПоставкаДокумента.НалоговоеНазначение КАК НалоговоеНазначение,
	|   ВЫБОР
	|       КОГДА &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РасчетКорректировкиВозврат)
	|			ТОГДА -1	
	|       ИНАЧЕ	
	|       	1
	|   КОНЕЦ * ПоставкаДокумента.СуммаСНДС КАК СуммаВзаиморасчетов,
	|   ВЫБОР
	|       КОГДА &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РасчетКорректировкиВозврат)
	|			ТОГДА -1	
	|       ИНАЧЕ	
	|       	1
	|   КОНЕЦ * (ПоставкаДокумента.СуммаНДС - ПоставкаДокумента.СуммаНДСПропорционально) КАК СуммаНДСКредит,
	|	&ДатаВозникновенияНК КАК ДатаВходящегоНалоговогоДокумента,
	|	ПоставкаДокумента.ДокументПоставки КАК ДокументПоставки
	|ИЗ
	|	Документ.РегистрацияВходящегоНалоговогоДокумента.Поставка КАК ПоставкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСоответствиеОбъектовРасчетовКлючамАналитикиУчетаПоПартнерам КАК СоответствиеОбъектовРасчетовАналитикам
	|		ПО (СоответствиеОбъектовРасчетовАналитикам.ОбъектРасчетов = ПоставкаДокумента.ОбъектРасчетов)
	|ГДЕ
	|	ПоставкаДокумента.Ссылка = &Ссылка
	|	И &ПоВводуОстатков
	|   И &ВидОперации В ( 
	|   	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.НалоговаяНакладная), 
	|   	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РасчетКорректировкиВозврат), 
	|   	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РасчетКорректировкиКорректировка), 
	|   	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.ТоварныйЧек)
	|   )
	|";
	
    ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаНДСРеестрПолученныхНалоговыхДокументов(Запрос, ТекстыЗапроса, Регистры)
    
	ИмяРегистра = "НДСРеестрПолученныхНалоговыхДокументов";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтСоответствиеОбъектовРасчетовКлючамАналитикиУчетаПоПартнерам", ТекстыЗапроса) Тогда
		ТекстЗапросаВтСоответствиеОбъектовРасчетовКлючамАналитикиУчетаПоПартнерам(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	СоответствиеОбъектовРасчетовАналитикам.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	ПоставкаДокумента.СтатьяДекларацииНДСНалоговыйКредит КАК СтатьяДекларацииНДСНалоговыйКредит,
	|	ПоставкаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ПоставкаДокумента.Сумма КАК СуммаБезНДС,
	|	ПоставкаДокумента.СуммаНДС КАК СуммаНДС,
// Информация для заполнения отчета "Анализ налогового кредита"	
	|	&ВидПоставки КАК ВидПоставки,
	|	ПоставкаДокумента.ОбъектРасчетов КАК ОбъектРасчетов,
	|	&ДатаВозникновенияНК КАК ДатаВходящегоНалоговогоДокумента,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.НалоговыйКредитПоставка) КАК ХозяйственнаяОперация
// ...
	|ИЗ
	|	Документ.РегистрацияВходящегоНалоговогоДокумента.Поставка КАК ПоставкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСоответствиеОбъектовРасчетовКлючамАналитикиУчетаПоПартнерам КАК СоответствиеОбъектовРасчетовАналитикам
	|		ПО (СоответствиеОбъектовРасчетовАналитикам.ОбъектРасчетов = ПоставкаДокумента.ОбъектРасчетов)
	|ГДЕ
	|	ПоставкаДокумента.Ссылка = &Ссылка
	|
	|";
	
    ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаНДСУсловныеПродажи(Запрос, ТекстыЗапроса, Регистры)
    
	ИмяРегистра = "НДСУсловныеПродажи";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
    КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ВидУсловнойПродажи.ПредполагаемаяСводнаяУсловнаяПродажа)  КАК ВидУсловнойПродажи,
	|
	|	ПоставкаДокумента.Ссылка КАК Номенклатура,
	|	ПоставкаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая) КАК НалоговоеНазначение,
	|	ПоставкаДокумента.НалоговоеНазначение КАК НалоговоеНазначениеПоФакту,
	|	
	|	СУММА(ВЫБОР
	|			КОГДА ПоставкаДокумента.НалоговоеНазначение.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.ПропорциональноОблагаемая)
	|				ТОГДА ПоставкаДокумента.СуммаНДСПропорционально * 100 / ВЫБОР
	|						КОГДА ПоставкаДокумента.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|							ТОГДА 20
    |						КОГДА ПоставкаДокумента.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС14)
    |							ТОГДА 14
	|						КОГДА ПоставкаДокумента.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС7)
	|							ТОГДА 7
	|						ИНАЧЕ 100
	|					КОНЕЦ
	|			ИНАЧЕ ПоставкаДокумента.Сумма
	|		КОНЕЦ) КАК СтоимостьРегл,
	|  	СУММА(ВЫБОР
	|      	КОГДА ПоставкаДокумента.НалоговоеНазначение.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.ПропорциональноОблагаемая) ТОГДА
	|      		ПоставкаДокумента.СуммаНДСПропорционально
	|      	ИНАЧЕ	
	|			ПоставкаДокумента.СуммаНДС
	|   	КОНЕЦ )	КАК НДСРегл
	|ИЗ
	|	Документ.РегистрацияВходящегоНалоговогоДокумента.Поставка КАК ПоставкаДокумента
	|ГДЕ
	|	ПоставкаДокумента.Ссылка = &Ссылка
	|	И НЕ (ПоставкаДокумента.НалоговоеНазначение.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Облагаемая))
	|   И &ВидОперации В ( 
	|   	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.НалоговаяНакладная), 
	|   	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РасчетКорректировкиКорректировка), 
	|   	ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.ТоварныйЧек)
	|   )
    |	И ПоставкаДокумента.СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС14), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС7))
	|СГРУППИРОВАТЬ ПО
	|	ПоставкаДокумента.Ссылка,
	|	ПоставкаДокумента.СтавкаНДС,
	|	ПоставкаДокумента.НалоговоеНазначение
	|";
	
    ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаВтСоответствиеОбъектовРасчетовКлючамАналитикиУчетаПоПартнерам(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтСоответствиеОбъектовРасчетовКлючамАналитикиУчетаПоПартнерам"; 
	
	ИнициализироватьСоответствиеОбъектовРасчетовКлючамАналитикиУчетаПоПартнерам(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СоответствиеОбъектовРасчетов.ОбъектРасчетов	КАК ОбъектРасчетов,
	|	СоответствиеОбъектовРасчетов.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	|ПОМЕСТИТЬ ВтСоответствиеОбъектовРасчетовКлючамАналитикиУчетаПоПартнерам
	|ИЗ
	|	&СоответствиеОбъектовРасчетовКлючамАналитикиУчетаПоПартнерам КАК СоответствиеОбъектовРасчетов";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ИнициализироватьСоответствиеОбъектовРасчетовКлючамАналитикиУчетаПоПартнерам(Запрос)
	
	Если Запрос.Параметры.Свойство("СоответствиеОбъектовРасчетовКлючамАналитикиУчетаПоПартнерам") Тогда
		Возврат;
	КонецЕсли;
	
	СоответствиеОбъектовРасчетовКлючамАналитики = Новый ТаблицаЗначений;
	
	СоответствиеОбъектовРасчетовКлючамАналитики.Колонки.Добавить("ОбъектРасчетов", Метаданные.РегистрыНакопления.НДСРасчетНалоговогоКредита.Измерения.ОбъектРасчетов.Тип);
	СоответствиеОбъектовРасчетовКлючамАналитики.Колонки.Добавить("АналитикаУчетаПоПартнерам", Новый ОписаниеТипов("СправочникСсылка.КлючиАналитикиУчетаПоПартнерам"));
	
	ЗапросАналитики = Новый Запрос;
	ЗапросАналитики.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация,
	|	&Партнер,
	|	&Контрагент,
	|	ВЫБОР
	|		КОГДА ПоставкаДокумента.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА ПоставкаДокумента.ОбъектРасчетов
	|		КОГДА ПоставкаДокумента.ОбъектРасчетов = НЕОПРЕДЕЛЕНО
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|		ИНАЧЕ ЕСТЬNULL(ПоставкаДокумента.ОбъектРасчетов.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|	КОНЕЦ КАК Договор,
	|	&НаправлениеДеятельности,
	|	ПоставкаДокумента.ОбъектРасчетов,
	|	ЕСТЬNULL(АналитикаУчетаПоПартнерам.КлючАналитики, ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПоПартнерам.ПустаяСсылка)) КАК АналитикаУчетаПоПартнерам
	|ИЗ
	|	Документ.РегистрацияВходящегоНалоговогоДокумента.Поставка КАК ПоставкаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
	|		ПО (АналитикаУчетаПоПартнерам.Организация = &Организация)
	|			И (АналитикаУчетаПоПартнерам.Партнер = &Партнер)
	|			И (АналитикаУчетаПоПартнерам.Контрагент = &Контрагент)
	|			И (АналитикаУчетаПоПартнерам.НаправлениеДеятельности = &НаправлениеДеятельности)
	|			И (АналитикаУчетаПоПартнерам.Договор = ВЫБОР
	|				КОГДА ПоставкаДокумента.ОбъектРасчетов ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ТОГДА ПоставкаДокумента.ОбъектРасчетов
	|				КОГДА ПоставкаДокумента.ОбъектРасчетов = НЕОПРЕДЕЛЕНО
	|					ТОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|				ИНАЧЕ ЕСТЬNULL(ПоставкаДокумента.ОбъектРасчетов.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|			КОНЕЦ)
	|ГДЕ
	|	ПоставкаДокумента.Ссылка = &Ссылка";
	
	ЗапросАналитики.УстановитьПараметр("Ссылка",					Запрос.Параметры.Ссылка);
	ЗапросАналитики.УстановитьПараметр("Партнер",					Запрос.Параметры.Партнер);
	ЗапросАналитики.УстановитьПараметр("Организация",				Запрос.Параметры.Организация);
	ЗапросАналитики.УстановитьПараметр("Контрагент",				Запрос.Параметры.Контрагент);
	ЗапросАналитики.УстановитьПараметр("НаправлениеДеятельности",	Запрос.Параметры.НаправлениеДеятельности); 
	
	Результат = ЗапросАналитики.Выполнить();
	ВыборкаАналитики = Результат.Выбрать();
	
	Пока ВыборкаАналитики.Следующий() Цикл
	
		СоответствиеОбъектаРасчетовАналитике = СоответствиеОбъектовРасчетовКлючамАналитики.Добавить();
		ЗаполнитьЗначенияСвойств(СоответствиеОбъектаРасчетовАналитике, ВыборкаАналитики);
		Если Не ЗначениеЗаполнено(СоответствиеОбъектаРасчетовАналитике.АналитикаУчетаПоПартнерам) Тогда
			СоответствиеОбъектаРасчетовАналитике.АналитикаУчетаПоПартнерам = 
				РегистрыСведений.АналитикаУчетаПоПартнерам.СоздатьКлючАналитики(ВыборкаАналитики);
		КонецЕсли; 
	
	КонецЦикла;
	
	Запрос.УстановитьПараметр("СоответствиеОбъектовРасчетовКлючамАналитикиУчетаПоПартнерам", СоответствиеОбъектовРасчетовКлючамАналитики);
	
КонецПроцедуры

#КонецОбласти
 
#Область СозданиеНаОсновании

Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);
	
	ВводНаОснованииПереопределяемый.ДобавитьКомандыСоздатьНаОснованииПисмаПоШаблону(КомандыСоздатьНаОсновании);
	
КонецПроцедуры

#КонецОбласти

#Область Отчеты

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);
	
КонецПроцедуры

#КонецОбласти

#Область ИнициализацияИЗаполнение

Функция ПолучитьСтатьюНалоговойДекларации(ВидОперации, СтавкаНДС) Экспорт
	
	СтатьиДеклараций = Справочники.СтатьиНалоговыхДеклараций;	

	Если Не ЗначениеЗаполнено(ВидОперации) ИЛИ Не ЗначениеЗаполнено(СтавкаНДС) Тогда
		Возврат СтатьиДеклараций.ПустаяСсылка();
		
	// Считаем, что есть право на налоговый кредит	
	ИначеЕсли СтавкаНДС = Перечисления.СтавкиНДС.НДС0 
          ИЛИ СтавкаНДС = Перечисления.СтавкиНДС.НДС14
		  ИЛИ СтавкаНДС = Перечисления.СтавкиНДС.НДС7
	      ИЛИ СтавкаНДС = Перечисления.СтавкиНДС.НДС20 Тогда
	 
	 	// приобретение с уплатой НДС
		Если ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.НалоговаяНакладная
		 ИЛИ ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.ИсправлениеОшибки
		 ИЛИ ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.ТоварныйЧек Тогда
			
			Возврат СтатьиДеклараций.НДС_НКПокупкаСНДСвВРОблаг;
			
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.ВосстановлениеНалоговогоКредита Тогда
			
			Возврат  СтатьиДеклараций.НДС_НККорректировкаВосстановлениеКредита;
			
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РасчетКорректировкиВозврат
			  ИЛИ ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РасчетКорректировкиКорректировка Тогда
							
			Возврат СтатьиДеклараций.НДС_НКИзменениеСтоимости	
			
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РаботыОтНерезидентаПрошлогоПериода Тогда
							
			Возврат СтатьиДеклараций.НДС_НКИмпортВРОблагУслугиНерезидента;
			
		КонецЕсли;
		
	Иначе
		
		// приобретение без НДС
		Если ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.НалоговаяНакладная
			ИЛИ ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.ИсправлениеОшибки
			ИЛИ ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.ВосстановлениеНалоговогоКредита
			ИЛИ ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.ТоварныйЧек Тогда
			
			// 11.2 Декларации,
			Возврат  СтатьиДеклараций.НДС_НКПокупкаБезНДСвВРНеОблаг;
				
		ИначеЕсли ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РасчетКорректировкиВозврат
			  ИЛИ ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РасчетКорректировкиКорректировка Тогда
				  
			Возврат СтатьиДеклараций.НДС_НККорректировкаБезНК;
			
		Иначе
			
			// Импорт			
			Если ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РаботыОтНерезидентаПрошлогоПериода Тогда
				
				// странно, услуги от нерезидента успользуемые на территории Украины облагаются по ставке 20%
				Возврат СтатьиДеклараций.ПустаяСсылка();
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СтатьиДеклараций.ПустаяСсылка();
	
КонецФункции

Функция ЗаполнитьПоОстаткам(Объект) Экспорт 

	Запрос = Новый Запрос;
	Запрос.Текст = 
	// 0 - Временная таблица с данными по первому событию закрытому в рамках документов поставки (не обязательно открытому)
	"ВЫБРАТЬ
	|	СуммыПервогоСобытияКРегистрации.ОбъектРасчетов,
	|	СуммыПервогоСобытияКРегистрации.ДокументПоставки,
	|	СУММА(СуммыПервогоСобытияКРегистрации.СуммаСНДС) КАК СуммаСНДС
	|ПОМЕСТИТЬ СуммыПервогоСобытияКРегистрации
	|ИЗ
	|		(ВЫБРАТЬ
	// Берем сумму первого события на дату
	|			НДСРасчетНалоговогоКредита.ВидПоставки,
	|			НДСРасчетНалоговогоКредита.ОбъектРасчетов,
	|			ВЫБОР
	|           	КОГДА НДСРасчетНалоговогоКредита.ДокументПоставки.Ссылка ЕСТЬ NULL
	|               	ТОГДА НЕОПРЕДЕЛЕНО
	|               ИНАЧЕ
	|	              	НДСРасчетНалоговогоКредита.ДокументПоставки
	|			КОНЕЦ КАК ДокументПоставки,
	// Если по первому событию еще не определен документ поставки, то пустое значение обрабатывается вместе со всеми
	|			НДСРасчетНалоговогоКредита.СуммаПоставкиТребующаяРегистрацииННОборот КАК СуммаСНДС
	|		ИЗ
	|			РегистрНакопления.НДСРасчетНалоговогоКредита.Обороты(
	|					НАЧАЛОПЕРИОДА(&ДатаОстатков, ДЕНЬ),
	|					КОНЕЦПЕРИОДА(&ДатаОстатков, ДЕНЬ),
	|					,
	|					АналитикаУчетаПоПартнерам.Партнер = &Партнер
	|						И АналитикаУчетаПоПартнерам.Организация = &Организация
	|						И АналитикаУчетаПоПартнерам.Договор = &Договор
	|						И АналитикаУчетаПоПартнерам.НаправлениеДеятельности = &НаправлениеДеятельности
	|						И АналитикаУчетаПоПартнерам.Контрагент = &Контрагент) КАК НДСРасчетНалоговогоКредита
	|		ГДЕ
	|			НДСРасчетНалоговогоКредита.СуммаПоставкиТребующаяРегистрацииННОборот > 0
	|		    ИЛИ &ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка) 
	|		
	|		ОБЪЕДИНИТЬ ВСЕ
	|		
	// Отнимаем из нее сумму которая уже закрыта документами РегистрацияВходящегоНалоговогоДокумента или КорректировкаРегистров
	|		ВЫБРАТЬ
	|			НДССоставПоставки.ВидПоставки,
	|			НДССоставПоставки.ОбъектРасчетов,
	|			НДССоставПоставки.ДокументПоставки,
	|			-НДССоставПоставки.СуммаВзаиморасчетов
	|		ИЗ
	|			РегистрНакопления.НДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов КАК НДССоставПоставки
	|		ГДЕ
	|			(НДССоставПоставки.Активность)
	|			И НДССоставПоставки.Регистратор <> &Ссылка
	|			И НДССоставПоставки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			И НДССоставПоставки.АналитикаУчетаПоПартнерам.Партнер = &Партнер
	|			И НДССоставПоставки.АналитикаУчетаПоПартнерам.Организация = &Организация
	|			И НДССоставПоставки.АналитикаУчетаПоПартнерам.Договор = &Договор
	|			И НДССоставПоставки.АналитикаУчетаПоПартнерам.НаправлениеДеятельности = &НаправлениеДеятельности
	|			И НДССоставПоставки.АналитикаУчетаПоПартнерам.Контрагент = &Контрагент
	|			И НДССоставПоставки.ДатаВходящегоНалоговогоДокумента = &ДатаОстатков
	|
	|		    И НЕ НДССоставПоставки.ДокументПоставки.Ссылка ЕСТЬ NULL
	|		
	|
	|		) КАК СуммыПервогоСобытияКРегистрации
	|
	|ГДЕ 
	|	СуммыПервогоСобытияКРегистрации.ВидПоставки = &ВидПоставки
	|
	|СГРУППИРОВАТЬ ПО
	|	СуммыПервогоСобытияКРегистрации.ОбъектРасчетов,
	|	СуммыПервогоСобытияКРегистрации.ДокументПоставки
	|
	|ИМЕЮЩИЕ
	|	СУММА(СуммыПервогоСобытияКРегистрации.СуммаСНДС) > 0 
	|	ИЛИ (&ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка) И
	|	     СУММА(СуммыПервогоСобытияКРегистрации.СуммаСНДС) <> 0)
	|
	|;
	|
	// 1 - Выборка с данными по первому событию
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СуммыПервогоСобытияКРегистрации.ОбъектРасчетов,
	|	СуммыПервогоСобытияКРегистрации.ДокументПоставки,
	|	СуммыПервогоСобытияКРегистрации.СуммаСНДС
	|ИЗ
	|	СуммыПервогоСобытияКРегистрации КАК СуммыПервогоСобытияКРегистрации
	|;
	|
	// 2 - Сумма закрытого первого события без указания документов поставки (распределяется пропорционально в рамках объекта расчетов)
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СуммыЗакрытияПервогоСобытияБезДокументаПоставки.ОбъектРасчетов,
	|	СУММА(СуммыЗакрытияПервогоСобытияБезДокументаПоставки.СуммаСНДС) КАК СуммаСНДС
	|ИЗ
	|	(ВЫБРАТЬ
	|			НДССоставПоставки.ВидПоставки,
	|			НДССоставПоставки.ОбъектРасчетов,
	|			НДССоставПоставки.СуммаВзаиморасчетов КАК СуммаСНДС
	|		ИЗ
	|			РегистрНакопления.НДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов КАК НДССоставПоставки
	|		ГДЕ
	|			(НДССоставПоставки.Активность)
	|			И НДССоставПоставки.Регистратор <> &Ссылка
	|			И НДССоставПоставки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			И НДССоставПоставки.АналитикаУчетаПоПартнерам.Партнер = &Партнер
	|			И НДССоставПоставки.АналитикаУчетаПоПартнерам.Организация = &Организация
	|			И НДССоставПоставки.АналитикаУчетаПоПартнерам.Договор = &Договор
	|			И НДССоставПоставки.АналитикаУчетаПоПартнерам.НаправлениеДеятельности = &НаправлениеДеятельности
	|			И НДССоставПоставки.АналитикаУчетаПоПартнерам.Контрагент = &Контрагент
	|			И НДССоставПоставки.ДатаВходящегоНалоговогоДокумента = &ДатаОстатков
	|
	|		    И НДССоставПоставки.ДокументПоставки.Ссылка ЕСТЬ NULL
	|
	|		) КАК СуммыЗакрытияПервогоСобытияБезДокументаПоставки
	|
	|ГДЕ 
	|	СуммыЗакрытияПервогоСобытияБезДокументаПоставки.ВидПоставки = &ВидПоставки
	|
	|СГРУППИРОВАТЬ ПО
	|	СуммыЗакрытияПервогоСобытияБезДокументаПоставки.ОбъектРасчетов
	|
	|ИМЕЮЩИЕ
	|	СУММА(СуммыЗакрытияПервогоСобытияБезДокументаПоставки.СуммаСНДС) > 0 
	|   ИЛИ (&ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка) И
	|	     СУММА(СуммыЗакрытияПервогоСобытияБезДокументаПоставки.СуммаСНДС) <> 0)
	|
	|;
	// 3- База распределения
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоставПоставкиСгруппированно.ОбъектРасчетов КАК ОбъектРасчетов,
	|	СоставПоставкиСгруппированно.ДокументПоставки КАК ДокументПоставки,
	|	СоставПоставкиСгруппированно.СтавкаНДС,
	|	СоставПоставкиСгруппированно.НалоговоеНазначение,
	|	СоставПоставкиСгруппированно.СуммаСНДС КАК СуммаСНДС
	|ИЗ
	|	(ВЫБРАТЬ
	|		НДССоставПоставки.ОбъектРасчетов КАК ОбъектРасчетов,
	|		НДССоставПоставки.ДокументПоставки КАК ДокументПоставки,
	|		НДССоставПоставки.СтавкаНДС,
	|		НДССоставПоставки.НалоговоеНазначение,
	|		СУММА(ВЫБОР
	|			КОГДА НДССоставПоставки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ * НДССоставПоставки.СуммаВзаиморасчетов) КАК СуммаСНДС
	|	ИЗ
	|		СуммыПервогоСобытияКРегистрации КАК СуммыПервогоСобытияКРегистрации
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов КАК НДССоставПоставки
	|			ПО (НДССоставПоставки.Активность)
	|				И НДССоставПоставки.Регистратор <> &Ссылка
	|				И НДССоставПоставки.АналитикаУчетаПоПартнерам.Партнер = &Партнер
	|				И НДССоставПоставки.АналитикаУчетаПоПартнерам.Организация = &Организация
	|				И НДССоставПоставки.АналитикаУчетаПоПартнерам.Договор = &Договор
	|				И НДССоставПоставки.АналитикаУчетаПоПартнерам.НаправлениеДеятельности = &НаправлениеДеятельности
	|				И НДССоставПоставки.АналитикаУчетаПоПартнерам.Контрагент = &Контрагент
	|				И ((СуммыПервогоСобытияКРегистрации.ОбъектРасчетов = НДССоставПоставки.ОбъектРасчетов) ИЛИ
	|				   (СуммыПервогоСобытияКРегистрации.ОбъектРасчетов.Ссылка ЕСТЬ NULL И НДССоставПоставки.ОбъектРасчетов.Ссылка ЕСТЬ NULL))
	|				И СуммыПервогоСобытияКРегистрации.ДокументПоставки = НДССоставПоставки.ДокументПоставки
	|
	|	СГРУППИРОВАТЬ ПО
	|		НДССоставПоставки.ОбъектРасчетов,
	|		НДССоставПоставки.ДокументПоставки,
	|		НДССоставПоставки.НалоговоеНазначение,
	|		НДССоставПоставки.СтавкаНДС
	|	) КАК СоставПоставкиСгруппированно
	|ГДЕ
	|	СоставПоставкиСгруппированно.СуммаСНДС > 0
	|   ИЛИ (&ВидПоставки = ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка) И
	|	     СоставПоставкиСгруппированно.СуммаСНДС <> 0)";
	
	ДатаВозникновенияНК = ?(ЗначениеЗаполнено(Объект.ДатаОтгрузкиОплаты), Объект.ДатаОтгрузкиОплаты, Объект.ДатаВходящегоДокумента);
	Запрос.УстановитьПараметр("ДатаОстатков", ДатаВозникновенияНК);
	Если ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Организации") Тогда
		Запрос.УстановитьПараметр("Партнер", Справочники.Партнеры.НашеПредприятие);
	Иначе
		Запрос.УстановитьПараметр("Партнер", Объект.Партнер);
	КонецЕсли;
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Договор",                 Объект.Договор);
	Запрос.УстановитьПараметр("НаправлениеДеятельности", Объект.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);	
	
	Если Объект.ПоВводуОстатков Тогда
		ВидПоставки = Перечисления.ВидыПоставки.ВводОстатков;
		
	ИначеЕсли Объект.ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РасчетКорректировкиВозврат Тогда
		ВидПоставки = Перечисления.ВидыПоставки.Возврат;
		
	ИначеЕсли (Объект.ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РасчетКорректировкиКорректировка ИЛИ
	           Объект.ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.ТоварныйЧек) 
		     И Объект.Переоценка Тогда
		ВидПоставки = Перечисления.ВидыПоставки.Переоценка;
		
	Иначе
		ВидПоставки = Перечисления.ВидыПоставки.Поставка;
		
	КонецЕсли;
	Запрос.УстановитьПараметр("ВидПоставки", ВидПоставки);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Если Результат[1].Пустой() Тогда		
		Возврат Ложь;
	КонецЕсли;
	
	//Результат[0].Выгрузить() - СуммыПервогоСобытияКРегистрации
    СуммыПервогоСобытияКРегистрации                 = Результат[1].Выгрузить();
	СуммыЗакрытияПервогоСобытияБезДокументаПоставки = Результат[2].Выгрузить();	
	СоставыПоставок                                 = Результат[3].Выгрузить();
	
	СуммыПервогоСобытияКРегистрации.Индексы.Добавить("ОбъектРасчетов, ДокументПоставки");	
	СоставыПоставок.Индексы.Добавить("ОбъектРасчетов, ДокументПоставки");	
	
	// Распределим суммы закрытия сформированные документами РегистрацияВходящегоНалоговогоДокумента
	// без указания документа поставки пропорционально суммам первого события в разрезе объектов расчета. 
	// Например такое возникает когда ПКО по которому еще не зарегистрированно ПТУ
	Отбор = Новый Структура("ОбъектРасчетов");
	Для каждого СтрокаКРаспределению Из СуммыЗакрытияПервогоСобытияБезДокументаПоставки Цикл
		
		ЗаполнитьЗначенияСвойств(Отбор, СтрокаКРаспределению);
		
		// Определяем, на что будем распределять
		МассивСтрокБазыРаспределения = СуммыПервогоСобытияКРегистрации.НайтиСтроки(Отбор);
		
		СуммаРаспределения = СтрокаКРаспределению.СуммаСНДС;
		
		МассивСуммБазы = Новый Массив;
		Для каждого СтрокаБазы Из МассивСтрокБазыРаспределения Цикл
			МассивСуммБазы.Добавить(СтрокаБазы.СуммаСНДС);
		КонецЦикла;
		
		МассивСуммРаспределенныйНаБазу = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СуммаРаспределения, МассивСуммБазы);
		
		Индекс = 0;
		Для каждого СтрокаБазы Из МассивСтрокБазыРаспределения Цикл
			СтрокаБазы.СуммаСНДС = СтрокаБазы.СуммаСНДС - МассивСуммРаспределенныйНаБазу[Индекс];
			
			// Возможно все таки оказалось что уже все закрыли (или по ошибке больше чем надо)
			Если СтрокаБазы.СуммаСНДС <= 0 Тогда
				СуммыПервогоСобытияКРегистрации.Удалить(СтрокаБазы);
			КонецЕсли;
			
			Индекс = Индекс + 1;
		КонецЦикла;

	КонецЦикла;
	
	Если СуммыПервогоСобытияКРегистрации.Количество() = 0 Тогда
		// После распределения данных снова может не оказаться
		Возврат Ложь;
	КонецЕсли;
		
	// Распределение сумм возникшего первого события по поставкам в разрезе ставок НДС, объекта расчетов и документа поставки 
	Отбор = Новый Структура("ОбъектРасчетов, ДокументПоставки");
	Для каждого СтрокаПервогоСобытия Из СуммыПервогоСобытияКРегистрации Цикл
		
		СуммаКРаспределению = СтрокаПервогоСобытия.СуммаСНДС;
		
		Если ЗначениеЗаполнено(СтрокаПервогоСобытия.ДокументПоставки) Тогда
			// Можем попробовать распределить
			ЗаполнитьЗначенияСвойств(Отбор, СтрокаПервогоСобытия);
			СоставПоставкиПоДокументу = СоставыПоставок.НайтиСтроки(Отбор);
			
			СуммаПоставкиПоДокументу = 0;
			МассивСуммПоставки = Новый Массив;
			МассивСтрокПоставки = Новый Массив;
			
			
			Для каждого СтрокаСоставаПоставкиПоДокументу Из СоставПоставкиПоДокументу Цикл
				
				СуммаПоставкиПоДокументу = СуммаПоставкиПоДокументу + СтрокаСоставаПоставкиПоДокументу.СуммаСНДС;
				
				НоваяСтрока = Объект.Поставка.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСоставаПоставкиПоДокументу);
				МассивСтрокПоставки.Добавить(НоваяСтрока);
				МассивСуммПоставки.Добавить(НоваяСтрока.СуммаСНДС);
				
			КонецЦикла;
			
						
			ПревышениеСуммы = СуммаКРаспределению - СуммаПоставкиПоДокументу;
			
			Если ПревышениеСуммы >= 0 Тогда
				// Все, что нашли, уже распределено выше полностью, остаток - это аванс
				СуммаКРаспределению = ПревышениеСуммы;
			Иначе
				// Раcпределяем сумму первого события пропорционально суммам найденным в документе
				НовыйМассивСуммПоставки = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СуммаКРаспределению, МассивСуммПоставки);
				Индекс = 0;
				Для каждого СтрокаПоставки Из МассивСтрокПоставки Цикл
					СтрокаПоставки.СуммаСНДС = НовыйМассивСуммПоставки[Индекс];
					Индекс = Индекс + 1;
				КонецЦикла;

				// Аванс не остается
				СуммаКРаспределению = 0;
			КонецЕсли;
			
		КонецЕсли;
		
		// Остаток - это аванс без документа поставки
		Если СуммаКРаспределению > 0 Тогда
			НоваяСтрока = Объект.Поставка.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПервогоСобытия);
			НоваяСтрока.СуммаСНДС = СуммаКРаспределению;
			
			Если НДСОбщегоНазначенияСервер.ОрганизацияКонтрагентПлательщикНДС(Объект.Контрагент) Тогда
				// Аванс от плательщиков, ставка вводится руками
				НоваяСтрока.СтавкаНДС = Неопределено; 
			Иначе
				// Аванс от не плательщиков, ставка всегда НеНДС
				НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.НеНДС;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	КоэффициентПропорциональногоОтнесенияНДСНаОбязательства = НДСОбщегоНазначенияПовтИсп.ПолучитьКоэффициентПропорциональногоНДСОбязательтсва(Объект.Организация, НачалоГода(Объект.Дата));
	
	// Дозаполняем оставшиеся колонки табличной части. Пересчитаем суммы от СуммыСНДС 
	Для каждого ТекущаяСтрока Из Объект.Поставка Цикл
		
		Если Не ЗначениеЗаполнено(ТекущаяСтрока.СтавкаНДС) Тогда
			Продолжить; // Будет расчитана вручную, когда пользователь укажет ставку
		КонецЕсли;
		
		ТекПроцентНДС = ЦенообразованиеКлиентСервер.ПолучитьСтавкуНДСЧислом(ТекущаяСтрока.СтавкаНДС);
		ТекущаяСтрока.СуммаНДС = ЦенообразованиеКлиентСервер.РассчитатьСуммуНДС(ТекущаяСтрока.СуммаСНДС, ТекПроцентНДС, Истина);
		ТекущаяСтрока.Сумма = ТекущаяСтрока.СуммаСНДС - ТекущаяСтрока.СуммаНДС;
		Если ТекущаяСтрока.НалоговоеНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Пропорционально Тогда
			ТекущаяСтрока.СуммаНДСПропорционально = ТекущаяСтрока.СуммаНДС * КоэффициентПропорциональногоОтнесенияНДСНаОбязательства;
		Иначе
			ТекущаяСтрока.СуммаНДСПропорционально = 0;
		КонецЕсли;
		
		// Инвертируем суммы, если это возврат
		Если Объект.ВидОперации = Перечисления.ВидыОперацийРегистрацияВходящегоНалоговогоДокумента.РасчетКорректировкиВозврат Тогда
			ТекущаяСтрока.Сумма     = - ТекущаяСтрока.Сумма;
			ТекущаяСтрока.СуммаНДС  = - ТекущаяСтрока.СуммаНДС;
			ТекущаяСтрока.СуммаСНДС = - ТекущаяСтрока.СуммаСНДС;
			ТекущаяСтрока.СуммаНДСПропорционально = - ТекущаяСтрока.СуммаНДСПропорционально;
		КонецЕсли;
		
		ТекущаяСтрока.СтатьяДекларацииНДСНалоговыйКредит = ПолучитьСтатьюНалоговойДекларации(Объект.ВидОперации, ТекущаяСтрока.СтавкаНДС);

	КонецЦикла;
	
	
	Возврат Истина;
	
КонецФункции // ЗаполнитьПоОстаткам

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ЗаполнитьНалоговоеНазначениеВТабличнойЧастиПоставка_ДанныеДляОбновления(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РегистрацияВходящегоНалоговогоДокументаПоставка.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РегистрацияВходящегоНалоговогоДокумента.Поставка КАК РегистрацияВходящегоНалоговогоДокументаПоставка
	|ГДЕ
	|	РегистрацияВходящегоНалоговогоДокументаПоставка.Ссылка.Проведен
	|	И РегистрацияВходящегоНалоговогоДокументаПоставка.НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(
        Параметры, 
        Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка")
    );	

КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.4
// Заполняет "НалоговоеНазначение" в табличной части документа Поставка
Процедура ЗаполнитьНалоговоеНазначениеВТабличнойЧастиПоставка(Параметры) Экспорт
    
    ПолноеИмяОбъекта = "Документ.РегистрацияВходящегоНалоговогоДокумента"; 
    
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(
        Параметры.Очередь, 
        ПолноеИмяОбъекта, 
        МенеджерВременныхТаблиц);
    
    Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
    КонецЕсли;
    
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	 
	ЗапросПоСтатьямДеклараций = Новый Запрос;
	ЗапросПоСтатьямДеклараций.Текст =
	"ВЫБРАТЬ
	|	СтатьиНалоговыхДеклараций.Ссылка КАК СтатьяНалоговойДекларации,
	|	ВЫБОР
	|		КОГДА СтатьиНалоговыхДеклараций.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.СтатьиНалоговыхДеклараций.НДС_НКПокупкаБезНДСвВР_))
	|				ИЛИ СтатьиНалоговыхДеклараций.Ссылка В ИЕРАРХИИ (ЗНАЧЕНИЕ(Справочник.СтатьиНалоговыхДеклараций.НДС_НКИмпортВРНеОблаг_))
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая)
	|	КОНЕЦ КАК НалоговоеНазначение
	|ИЗ
	|	Справочник.СтатьиНалоговыхДеклараций КАК СтатьиНалоговыхДеклараций
	|ГДЕ
	|	СтатьиНалоговыхДеклараций.ВидНалоговойДекларации = ЗНАЧЕНИЕ(Перечисление.ВидыНалоговыхДеклараций.ДекларацияПоНДС)";
	
	ВыборкаПоСтатьямДеклараций = ЗапросПоСтатьямДеклараций.Выполнить().Выбрать();
	СоответствиеСтатейНалоговыхДекларацийИНалоговыхНазначений = Новый Соответствие;
	
	// В принципе в проведенном документе такого не должно быть
	СоответствиеСтатейНалоговыхДекларацийИНалоговыхНазначений.Вставить(
	Справочники.СтатьиНалоговыхДеклараций.ПустаяСсылка(), Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая);	
	
	Пока ВыборкаПоСтатьямДеклараций.Следующий() Цикл
		
		СоответствиеСтатейНалоговыхДекларацийИНалоговыхНазначений.Вставить(
		ВыборкаПоСтатьямДеклараций.СтатьяНалоговойДекларации, ВыборкаПоСтатьямДеклараций.НалоговоеНазначение);	
		
	КонецЦикла; 
	
	ЗапросПоДокументам = Новый Запрос;
    ЗапросПоДокументам.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросПоДокументам.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РегистрацияВходящегоНалоговогоДокументаПоставка.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РегистрацияВходящегоНалоговогоДокумента.Поставка КАК РегистрацияВходящегоНалоговогоДокументаПоставка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляОбработки КАК ДокументыКОбработке
	|		ПО РегистрацияВходящегоНалоговогоДокументаПоставка.Ссылка = ДокументыКОбработке.Ссылка
	|ГДЕ
	|	РегистрацияВходящегоНалоговогоДокументаПоставка.НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)";	
    
    ЗапросПоДокументам.Текст = СтрЗаменить(ЗапросПоДокументам.Текст, "ВТДляОбработки", Результат.ИмяВременнойТаблицы);
    
    Выборка = ЗапросПоДокументам.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка	
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Документ.РегистрацияВходящегоНалоговогоДокумента");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
 			Блокировка.Заблокировать();
			
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
            
            // Если объект ранее был удален или обработан другими сеансами, пропускаем его
			Если ДокументОбъект = Неопределено Тогда
				ОтменитьТранзакцию();
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				Продолжить;
            КонецЕсли;
            
    		Для Каждого СтрокаТЧ Из ДокументОбъект.Поставка Цикл
    			Если ЗначениеЗаполнено(СтрокаТЧ.НалоговоеНазначение) Тогда
    				Продолжить;
				КонецЕсли;
				
    			СтрокаТЧ.НалоговоеНазначение = СоответствиеСтатейНалоговыхДекларацийИНалоговыхНазначений.Получить(СтрокаТЧ.СтатьяДекларацииНДСНалоговыйКредит);
    		КонецЦикла;
    		            
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
                        
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
            ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(Выборка.Ссылка);
										
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
        Параметры.Очередь, 
        ПолноеИмяОбъекта
    );
    
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
КонецПроцедуры

#КонецОбласти

#КонецЕсли