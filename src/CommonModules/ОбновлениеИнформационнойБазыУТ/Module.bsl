////////////////////////////////////////////////////////////////////////////////
// Обновление информационной базы библиотеки УправлениеТорговлейДляУкраины.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область СведенияОБиблиотекеИлиКонфигурации

// Заполняет основные сведения о библиотеке или основной конфигурации.
// Библиотека, имя которой имя совпадает с именем конфигурации в метаданных, определяется как основная конфигурация.
// 
// Параметры:
//  Описание - Структура - сведения о библиотеке:
//
//   Имя                 - Строка - имя библиотеки, например, "СтандартныеПодсистемы".
//   Версия              - Строка - версия в формате из 4-х цифр, например, "2.1.3.1".
//
//   ТребуемыеПодсистемы - Массив - имена других библиотек (Строка), от которых зависит данная библиотека.
//                                  Обработчики обновления таких библиотек должны быть вызваны ранее
//                                  обработчиков обновления данной библиотеки.
//                                  При циклических зависимостях или, напротив, отсутствии каких-либо зависимостей,
//                                  порядок вызова обработчиков обновления определяется порядком добавления модулей
//                                  в процедуре ПриДобавленииПодсистем общего модуля ПодсистемыКонфигурацииПереопределяемый.
//
Процедура ПриДобавленииПодсистемы(Описание) Экспорт
	
	Описание.Имя    = "BASУправлениеТорговлей";
	Если Метаданные.Имя = "BASУправлениеТорговлей" Тогда
		Описание.Версия = "3.2.32.3";
	Иначе
		Описание.Версия = "3.2.32.3";
	КонецЕсли; 
	Описание.РежимВыполненияОтложенныхОбработчиков = "Параллельно";
	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиОбновленияИнформационнойБазы


// Добавляет в список процедуры-обработчики обновления данных ИБ
// для всех поддерживаемых версий библиотеки или конфигурации.
// Вызывается перед началом обновления данных ИБ для построения плана обновления.
//
//
// Параметры:
//  Обработчики - это таблица значений, возвращаемая функцией
//                НоваяТаблицаОбработчиковОбновления модуля ОбновлениеИнформационнойБазы.
//
// Пример добавления процедуры-обработчика в список:
//  Обработчик = Обработчики.Добавить();
//  Обработчик.Версия    = "1.0.0.0";
//  Обработчик.Процедура = "ОбновлениеИБ.ПерейтиНаВерсию_1_0_0_0";
// 
//  Все свойства обработчика см. в комментарии к функции
//  НоваяТаблицаОбработчиковОбновления в модуле ОбновлениеИнформационнойБазы.
//
Процедура ПриДобавленииОбработчиковОбновленияПриПереходеСBASУправлениеТорговлей_3_1(Обработчики) Экспорт

#Область Монопольно

#Область Версия_3_2_1

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.1";
    Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "ОбновлениеИнформационнойБазыУТ.ЗаполнитьКонстантуИспользоватьИмпортныеТовары";
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.1";
    Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "РегистрыСведений.ПравилаДляОбменаДанными.ОчиститьПравилаОбмена";


	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.1";
    Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "УправлениеКонтактнойИнформациейСлужебный.ПреобразоватьИзФормата31";

    
	Обработчик = Обработчики.Добавить(); 
	Обработчик.Версия = "3.2.1.4"; 
    Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.ПолитикиУчетаСерий.ВзвестиФлагиИзлишкиНедостачиВозвратНепринятых";
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.7";
    Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.СоглашенияСПоставщиками.ЗаполнитьКонстантуИспользоватьСоглашенияСПоставщиками";
	Обработчик.Комментарий = НСтр("ru='Заполняется значение константы ""Использовать соглашения с поставщиками""';uk='Заповнюється значення константи ""Використовувати угоди з постачальниками""'");
	
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.7";
    Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.ДоговорыКонтрагентов.ЗаполнитьКонстантуИспользоватьДоговорыСПоставщиками";
	Обработчик.Комментарий = НСтр("ru='Заполняется значение константы ""Использовать соглашения с поставщиками""';uk='Заповнюється значення константи ""Використовувати угоди з постачальниками""'");
	
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.7";
    Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.ВидыЦенПоставщиков.ЗаполнитьДанныеВидовЦенПоставщиковИзУсловийЦенПоставщиков";
	Обработчик.Комментарий = НСтр("ru='Справочник ""Условия цен поставщиков"" трансформируется в справочник ""Виды цен поставщиков"". Данные из соглашения-владельца переносятся в вид цены поставщика.';uk='Довідник ""Умови цін постачальників"" трансформується у довідник ""Види цін постачальників"". Дані із оферти-власника переносяться у вид ціни постачальника.'");
	
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.7";
    Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.СоглашенияСПоставщиками.ЗаполнитьВидЦеныПоставщика";
	Обработчик.Комментарий = НСтр("ru='Для каждого соглашения с поставщиком создается вид цены поставщика и записывается в реквизит ""Вид цены поставщика"".';uk='Для кожної оферти з постачальником створюється вид ціни постачальника і записується в реквізит ""Вид ціни постачальника"".'");
    
	Обработчик = Обработчики.Добавить(); 
    Обработчик.Версия = "3.2.1.8";
    Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "ОбновлениеИнформационнойБазыУТ.ЗаполнитьКонстантуНомерЗадания";
	Обработчик.Комментарий = НСтр("ru='Производится заполнение служебной константы ""Номер задания"".';uk='Проводиться заповнення службової константи ""Номер завдання"".'");
	
	Обработчик = Обработчики.Добавить(); 
    Обработчик.Версия = "3.2.1.8";
    Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "ПартионныйУчетСервер.ЗаданияКРасчетуСебестоимости";
	Обработчик.Комментарий = НСтр("ru='Производится формирование записей по неактуальным записям границ партионного учета в регистре ""Задания к расчету партий"".';uk='Проводиться формування записів по неактуальним записам границь партійного обліку в регістрі ""Завдання до розрахунку партій"".'");
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.14";
    Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.Организации.ОбъединитьФлагиДопускаютсяВзаиморасчеты";
    
    
	Обработчик = Обработчики.Добавить(); 
    Обработчик.Версия = "3.2.1.17";
    Обработчик.РежимВыполнения = "Монопольно";
    Обработчик.Процедура = "Справочники.ПолитикиУчетаСерий.ЗаполнитьРеквизитДляСклада";
	Обработчик.Комментарий = НСтр("ru='Заполнение нового реквизита ""Для склада"" в справочнике ""Политики учета серий"".';uk='Заповнення нового реквізиту ""Для складу"" в довіднику ""Політики обліку серій"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.19";
    Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "ПланыВидовХарактеристик.СтатьиАктивовПассивов.УстановитьПризнакАктивПассивУПредопределенныхЭлементов";
    
	Обработчик = Обработчики.Добавить(); 
    Обработчик.Версия = "3.2.1.23";
    Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.ВидыНоменклатуры.ЗаполнитьРеквизитыДляКонтроляСерий";
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.27";
    Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "МенеджерОборудованияВызовСервераПереопределяемый.ОбновитьПоставляемыеДрайвера";
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.30";
    Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "РегистрыСведений.ЗаданияКРасчетуСебестоимости.ПерезаполнитьРазделУчетаСебестоимость";
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.34";
    Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.СтатьиДвиженияДенежныхСредств.ЗаполнитьСтатьиДругойОрганизации";
	Обработчик.Комментарий = НСтр("ru='Выполняется заполнение статей движения ДС по другой организации';uk='Виконується заповнення статей руху ГК по іншій організації'");
	Обработчик.НачальноеЗаполнение = Ложь;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.46";
    Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.СертификатыНоменклатуры.ЗаполнитьСтатусСертификатовНоменклатуры";
	Обработчик.Комментарий = НСтр("ru='Заполняет статус сертификатов номенклатуры';uk='Заповнює статус сертифікатів номенклатури'");
    
	Обработчик = Обработчики.Добавить(); 
    Обработчик.Версия = "3.2.1.49";
    Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "ОбновлениеИнформационнойБазыУТ.ЗаполнитьКонстантуИспользуетсяСборкаРазборкаИСерииНоменклатуры";
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.58";
    Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.ВидыНоменклатуры.ЗаполнитьВариантОказанияУслугПоУмолчанию";
    
    
	Обработчик = Обработчики.Добавить(); 
    Обработчик.Версия = "3.2.1.64"; 
    Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.НастройкиХозяйственныхОпераций.ЗаполнитьПредопределенныеНастройкиХозяйственныхОпераций";
    

#КонецОбласти // Версия_3_2_1

#Область Версия_3_2_2

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "ОбновлениеИнформационнойБазыУТ.ЗаполнитьКонстантуРежимФормированияРасходныхОрдеров";
	Обработчик.Комментарий = НСтр("ru='Заполняет константу ""Расходный ордер на товары формируется"" значением по умолчанию ""Кладовщиком"".';uk='Заповнює константу ""Видатковий ордер на товари формується"" значення за промовчанням ""Комірником"".'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "ОбновлениеИнформационнойБазыУТ.ЗаполнитьКонстантуРасходныеОрдераФормируютсяМенеджером";
	Обработчик.Комментарий = НСтр("ru='Заполняет константу ""Расходный ордер на товары формируется"" значением по умолчанию ""Кладовщиком"".';uk='Заповнює константу ""Видатковий ордер на товари формується"" значення за промовчанням ""Комірником"".'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "ОбновлениеИнформационнойБазыУТ.ЗаполнитьКонстантуПорядокОформленияНакладныхРасходныхОрдеров";
	Обработчик.Комментарий = НСтр("ru='Заполняет константу ""Порядок оформления накладных и расходных ордеров"" значением по умолчанию ""Сначала заказы и накладные, затем ордера"".';uk='Заповнює константу ""Порядок оформлення накладних і видаткових ордерів"" значення за промовчанням ""Спочатку замовлення та накладні, потім ордери"".'");


	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.3";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.ВидыПодарочныхСертификатов.ЗаполнитьСтатьюАналитикуДоходов";
	Обработчик.Комментарий = НСтр("ru='Заполняет статьи и аналитики доходов в справочнике ""Виды подарочных сертификатов"".';uk='Заповнює статті та аналітики доходів в довіднику ""Види подарункових сертифікатів"".'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.4";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "ФизическиеЛицаУТ.ЗаполнитьФИОФизическихЛиц";
	Обработчик.Комментарий = НСтр("ru='Заполняет регистр сведений ""ФИО физических лиц"" по данным справочника ""Физические лица"". Формируются записи для тех физических лиц, для которых не было записей истории ФИО.';uk='Заповнює регістр відомостей ""ПІБ фізичних осіб"" за даними довідника ""Фізичні особи"". Формуються записи для тих фізичних осіб, для яких не було записів історії ПІБ.'");


	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.6";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "ОбновлениеИнформационнойБазыУТ.ЗаполнитьКонстантуИспользоватьОтчетДвиженияЗаказов";
	Обработчик.Комментарий = НСтр("ru='Заполняет значение константы ""Использовать отчет движения заказов"" в зависимости от значения константы ""Использовать расширенные возможности заказа клиент"". Основное назначение, скрыть отчет ""Движения"" в базовой версии УТ.';uk='Заповнює значення константи ""Використовувати звіт рухи замовлень"" в залежності від значення константи ""Використовувати розширені можливості замовлення клієнт"". Основне призначення, приховати звіт ""Рухи"" в базовій версії УТ.'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.6";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "ОбновлениеИнформационнойБазыУТ.ЗаполнитьКонстантуИнтерфейсВерсии82";
	Обработчик.Комментарий = НСтр("ru='Установка значения константы ИнтерфейсВерсии82  в ""Истина"".';uk='Встановлення значення константи ИнтерфейсВерсии82 в ""Істина"".'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.7";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "ОбновлениеИнформационнойБазыУТ.ЗаполнитьКонстантуНомерЗаданияКРаспределениюРасчетовСКлиентами";
	Обработчик.Комментарий = НСтр("ru='Производится заполнение служебной константы ""Номер задания к распределению расчетов с клиентами"".';uk='Проводиться заповнення службової константи ""Номер завдання до розподілу розрахунків з клієнтами"".'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.7";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "ОбновлениеИнформационнойБазыУТ.ЗаполнитьКонстантуНомерЗаданияКРаспределениюРасчетовСПоставщиками";
	Обработчик.Комментарий = НСтр("ru='Производится заполнение служебной константы ""Номер задания к распределению расчетов с поставщиками"".';uk='Проводиться заповнення службової константи ""Номер завдання до розподілу розрахунків з постачальниками"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.7";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "ОбновлениеИнформационнойБазыУТ.ЗаполнитьКонстантуНомерЗаданияКФормированиюИсходящихНалоговыхДокументов";
	Обработчик.Комментарий = НСтр("ru='Производится заполнение служебной константы ""Номер задания к формированию исходящих налоговых документов"".';uk='Проводиться заповнення службової константи ""Номер завдання до формування вихідних податкових документів"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.7";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "ОбновлениеИнформационнойБазыУТ.ЗаполнитьКонстантуНомерЗаданияКРасчетуНалоговыхОбязательствДополнительно";
	Обработчик.Комментарий = НСтр("ru='Производится заполнение служебной константы ""Номер задания к расчету налоговых обязательств дополнительно"".';uk='Проводиться заповнення службової константи ""Номер завдання до розрахунку податкових зобов''язань додатково"".'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.8";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "РегистрыСведений.ЗаданияКРаспределениюРасчетовСКлиентами.ПеренестиГраницыРасчетаКлиентов";
	Обработчик.Комментарий = НСтр("ru='Производится перенос неактуальных границ последовательности ""Расчеты с клиентами"" в регистр заданий.';uk='Проводиться перенесення неактуальних границь послідовності ""Розрахунки з клієнтами"" в регістр завдань.'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.8";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "РегистрыСведений.ЗаданияКРаспределениюРасчетовСПоставщиками.ПеренестиГраницыРасчетаПоставщиков";
	Обработчик.Комментарий = НСтр("ru='Производится перенос неактуальных границ последовательности ""Расчеты с поставщиками"" в регистр заданий.';uk='Проводиться перенесення неактуальних границь послідовності ""Розрахунки з постачальниками"" в регістр завдань.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.8";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "РегистрыСведений.ЗаданияКФормированиюИсходящихНалоговыхДокументов.ПеренестиГраницыФормированиеИсходящихНалоговыхДокументов";
	Обработчик.Комментарий = НСтр("ru='Производится перенос неактуальных границ последовательности ""Формирование исходящих налоговых документов"" в регистр заданий.';uk='Проводиться перенесення неактуальних границь послідовності ""Формування вихідних податкових документів"" в регістр завдань.'");
    
    

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.9";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.ВариантыАнализаЦелевыхПоказателей.ОчиститьИсточникиДанныхВариантовАнализаЦелевыхПоказателей";
	Обработчик.Комментарий = НСтр("ru='Очищает регистр сведений ""Источники данных вариантов анализа целевых показателей"".';uk='Очищує регістр відомостей ""Джерела даних аналізу варіантів цільових показників"".'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.9";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.ВариантыАнализаЦелевыхПоказателей.ЗаполнитьПериодичностьРасчетаРежимШкалыЗначенийВариантОтображенияМонопольно";
	Обработчик.Комментарий = НСтр("ru='Заполняет новые реквизиты справочника ""Варианты анализа целевых показателей"", такие как - ""Периодичность расчета показателя"", ""Режим шкалы значений"", ""Включать Ноль"" и ""Вариант отображения по умолчанию"".';uk='Заповнює нові реквізити довідника ""Варіанти аналізу цільових показників"", такі як - ""Періодичність розрахунку показника"", ""Режим шкали значень"", ""Включати Нуль"" і ""Варіант відображення по умовчанню"".'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.10";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.КатегорииЦелей.ЗаполнитьРеквизитДопУпорядочиванияИерархическогоМонопольно";
	Обработчик.Комментарий = НСтр("ru='Заполняет реквизит дополнительного иерархического упорядочивания в справочнике ""Категории целей"".';uk='Заповнює реквізит додаткового ієрархічного упорядкування у довіднику ""Категорії цілей"".'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.10";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.СтруктураЦелей.ЗаполнитьРеквизитДопУпорядочиванияИерархическогоМонопольно";
	Обработчик.Комментарий = НСтр("ru='Заполняет реквизит дополнительного иерархического упорядочивания в справочнике ""Структура целей"".';uk='Заповнює реквізит додаткового ієрархічного упорядкування у довіднику ""Структура цілей"".'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.11";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.БанковскиеСчетаОрганизаций.ВключитьИспользованиеОбменаСБанком";
	Обработчик.Комментарий = НСтр("ru='Устанавливает флаг использования обмена с банком.';uk='Встановлює прапор використання обміну з банком.'");

    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.14";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.ВидыНоменклатуры.ЗаполнитьПолитикаУчетаСерийДляСкладовКогдаНеИспользуетсяНесколькоСкладов";
	Обработчик.Комментарий = НСтр("ru='Заполняет новый реквизит ""Политика учета серий"" для видов номенклатуры в базах, в которых отключено использование нескольких складов.';uk='Заповнює новий реквізит ""Політика обліку серій"" для видів номенклатури в базах, в яких відключено використання декількох складів.'");


	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.15";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "ПланыВидовХарактеристик.СтатьиАктивовПассивов.ВключитьИспользованиеУчетаПрочихАктивовПассивов";
	Обработчик.Комментарий = НСтр("ru='Включает использование учета прочих активов/пассивов';uk='Включає використання обліку інших активів/пасивів'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.15";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "ПланыВидовХарактеристик.СтатьиАктивовПассивов.СоздатьСтатьиАктивовПассивовНаОснованииСтатейРасходов";
	Обработчик.Комментарий = НСтр("ru='Создает на основании статей расходов с вариантом распределения ""На прочие активы"" соответствующие статьи активов/пассивов.';uk='Створює на підставі статей витрат з варіантом розподілу ""На інші активи"" відповідні статті активів/пасивів.'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.16";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.СтатьиДвиженияДенежныхСредств.ОбработатьХозяйственныеОперации";
	Обработчик.Комментарий = НСтр("ru='Обновляет список хозяйственных операций списка ""Статьи движения денежных средств"".
    |Переносит значения реквизита ""Хозяйственная операция"" объектов справочника ""Статьи движения денежных средств"" в табличную часть ""Хозяйственные операции"".
    |До завершения работы обработчика обновления список ""Статьи движения денежных средств"" находится в некорректном состоянии.'
    |;uk='Оновлює список господарських операцій списку ""Статті руху грошових коштів"".
    |Переносить значення реквізиту ""Господарська операція"" об''єктів довідника ""Статті руху грошових коштів"" в табличну частину ""Господарські операції"".
    |До завершення роботи обробника оновлення список ""Статті руху грошових коштів"" знаходиться в некоректному стані.'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.17";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.ВариантыКлассификацииЗадолженности.СоздатьЭлементПоУмолчаниюМонопольно";
	Обработчик.Комментарий = НСтр("ru='Выполняет первоначальное заполнение справочника ""Варианты классификации задолженности"". 
    |Если в справочнике нет ни одного элемента, то создается стандартный вариант классификации ""Стандартная классификация"" (с периодами 1-3-15-30-45-60-180 дней).'
    |;uk='Виконує початкове заповнення довідника ""Варіанти класифікації заборгованості"". 
    |Якщо в довіднику немає жодного елемента, то створюється стандартний варіант класифікації ""Стандартна класифікація"" (з періодами 1-3-15-30-45-60-180 днів).'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.18";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "ОбновлениеИнформационнойБазыУТ.ЗаполнитьКонстантуМаксимальноеКоличествоЭлементовВДеревеОтборовНоменклатуры";
	Обработчик.Комментарий = НСтр("ru='Заполняет константу ""Максимальное количество элементов в дереве отборов номенклатуры"" значением по умолчанию 50.';uk='Заповнює константу ""Максимальна кількість елементів у дереві відборів номенклатури"" значенням по умовчанню 50.'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.19";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "ОбновлениеИнформационнойБазыУТ.ЗаполнитьКонстантуИспользоватьГруппыДоступаПартнеров";
	Обработчик.Комментарий = НСтр("ru='Заполняет константу ""Использовать группы доступа партнеров"" в зависимости от значений констант ""Использовать внешних пользователей"" и ""Ограничивать доступ на уровне записей"".';uk='Заповнює константу ""Використовувати групи доступу партнерів"" залежно від значень констант ""Використовувати зовнішніх користувачів"" і ""Обмежувати доступ на рівні записів"".'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.20";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.СкладскиеГруппыНоменклатуры.ЗаполнитьРеквизитыОграничиватьПоВесуОграничиватьПоОбъему";
	Обработчик.Комментарий = НСтр("ru='Устанавливает для справочника ""Складская группа номенклатуры"" значение нового реквизита ""При размещении учитывать"" значение ""вес и объем"".';uk='Встановлює для довідника ""Складська група номенклатури"" значення нового реквізиту ""При розміщенні враховувати"" значення ""вага і об''єм"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.20";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.УпаковкиЕдиницыИзмерения.ОбъединитьЕдиницыИзмеренияИУпаковкиЗаменитьСсылки";
	Обработчик.Комментарий = НСтр("ru='Обновляет справочник ""Упаковки и единицы измерения"":
    |- выполняется создание новых элементов справочника на основании устаревшего ""(Не использовать) Удалить единицы измерения"" и их подмена в справочниках и документах.'
    |;uk='Оновлює довідник ""Упаковки та одиниці вимірювання:
    |- виконується створення нових елементів довідника на підставі застарілого ""(Не використовувати) Видалити одиниці вимірювання та їх підміна в довідниках та документах.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.20";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.ПравилаОбменаСПодключаемымОборудованиемOffline.ОбновитьНастройкиПравилОбменаСПодключаемымОборудованием";
	Обработчик.Комментарий = НСтр("ru='Исправляет значение единицы измерения веса в настройках правил обмена с подключаемым оборудованием.';uk='Виправляє значення одиниці вимірювання ваги у налаштуваннях правил обміну з додатковим обладнанням.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.21";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "РегистрыСведений.ВариантыПереупаковки.ЗаполнитьВариантПереупаковкиВПустуюУпаковку";
	Обработчик.Комментарий = НСтр("ru='Добавляет в регистр накопления ""Варианты переупаковки"" новую запись для переупаковки упаковок в единицы измерения веса, объема, длины или площади.';uk='Додає в регістр накопичення ""Варіанти перепакування"" новий запис для перепакування упаковок в одиниці вимірювання ваги, об''єму, довжини або площі.'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.22";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.УсловияПредоставленияСкидокНаценок.ПреобразоватьУсловияПоСтрокеВОтборыНоменклатурыСкидокНаценок";
	Обработчик.Комментарий = НСтр("ru='Преобразовывает условия предоставления скидок (наценок) по строке в отбор номенклатуры скидки (наценки).';uk='Перетворює умови надання знижок (націнок) по рядку в відбір номенклатури знижки (націнки).'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.22";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.УсловияПредоставленияСкидокНаценок.ПреобразоватьУсловиеПробнаяПродажаВОтборыНоменклатурыСкидокНаценок";
	Обработчик.Комментарий = НСтр("ru='Преобразовывает условие предоставления ""За пробную продажу"" в отбор номенклатуры скидки (наценки) с условием""Клиент покупает товар в первый раз"".';uk='Перетворює умову надання ""За пробний продаж"" в відбір номенклатури знижки (націнки) з умовою ""Клієнт купує товар в перший раз"".'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.22";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.ВидыЦен.ЗаполнитьВариантОкругления";
	Обработчик.Комментарий = НСтр("ru='Заполняет поле ""Вариант округления"" в справочнике ""Виды цен"".';uk='Заповнює поле ""Варіант округлення"" в довіднику ""Види цін"".'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.22";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.УсловияПредоставленияСкидокНаценок.ПреобразоватьУсловиеПерваяПродажаПартнеруВУсловиеЗаНакопленныйОбъемПродаж";
	Обработчик.Комментарий = НСтр("ru='Преобразовывает условие предоставления ""За первую продажу партнеру"" в условие ""За накопленный объем продаж"" с нулевым количеством.';uk='Перетворює умову надання ""За перший продаж партнеру"" в умову ""За накопичений обсяг продажів"" з нульовою кількістю.'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.23";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.СкидкиНаценки.ЗаполнитьВариантОтбораНоменклатурыИВариантОкругления";
	Обработчик.Комментарий = НСтр("ru='Заполняет поле ""Вариант отбора номенклатуры"" и поле ""Вариант округления"" в справочнике ""Скидки (наценки)"".';uk='Заповнює поле ""Варіант відбору номенклатури"" і поле ""Варіант округлення"" у довіднику ""Знижки (націнки)"".'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.23";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.УсловияПредоставленияСкидокНаценок.ЗаполнитьВариантОтбораНоменклатуры";
	Обработчик.Комментарий = НСтр("ru='Заполняет поле ""Вариант отбора номенклатуры"" в справочнике ""Условия предоставления скидок (наценок)"".';uk='Заповнює поле ""Варіант відбору номенклатури в довіднику ""Умови надання знижок (націнок)"".'");



	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.26";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.НаборыДополнительныхРеквизитовИСведений.ЗаполнитьРеквизитИспользуется";
	Обработчик.Комментарий = НСтр("ru='Заполняет реквизит ""Используется"" значением ""Истина"" в наборах дополнительных реквизитов.';uk='Заповнює реквізит ""Використовується"" значенням ""Істина"" в наборах додаткових реквізитів.'");


    
    
#КонецОбласти // Версия_3_2_2

#Область Версия_3_2_3


	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.Склады.ВключитьИспользованиеСтатусовПересчетовТоваров";
	Обработчик.Комментарий = НСтр("ru='Включает новую настройку складов ""Использовать статусы пересчетов товаров"".';uk='Включає нову настройку складів ""Використовувати статуси перерахунків товарів"".'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.2";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "ОбновлениеИнформационнойБазыУТ.НастроитьИсториюКонтактнойИнформацииИМногострочноеПоле";
	Обработчик.Комментарий = НСтр("ru='Обновление видов контактной информации. Для юридического адреса организации устанавливает флаг ХранитьИсториюИзменений.';uk='Оновлення видів контактної інформації. Для юридичної адреси організації встановлює прапор ХранитьИсториюИзменений.'");



	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.3";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.НаправленияДеятельности.ЗаполнитьСтатусИспользуется";
	Обработчик.Комментарий = НСтр("ru='Заполняется новый реквизит ""Статус"" значением ""Используется""';uk='Заповнюється новий реквізит ""Статус"" значенням ""Використовується""'");


	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.4";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Документы.ПоручениеЭкспедитору.УстановитьПараметрыНабораСвойств";
	Обработчик.Комментарий = НСтр("ru='Инициализирует параметры дополнительных реквизитов документа ""Поручение экспедитору""';uk='Ініціалізує параметри додаткових реквізитів документа ""Доручення експедитору""'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.5";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "РегистрыСведений.СхемыОбеспечения.РеструктуризироватьВытесняющиеНастройкиСпособовОбеспеченияПотребностей";
	Обработчик.Комментарий = НСтр("ru='Создает основную схему обеспечения. Записывает настройки схемы обеспечения по складам. Удаляет настройки способов обеспечения складов из регистра сведений ""Варианты обеспечения товарами"". Переносит настройки способов обеспечения работ в целом из регистра ""Варианты обеспечения работами"" в справочник ""Номенклатура"". Настройки способов обеспечения товаров и тары в целом детализирует до характеристик.';uk='Створює основну схему забезпечення. Записує параметри схеми забезпечення по складах. Видаляє налаштування способів забезпечення складів з регістра відомостей ""Варіанти забезпечення товарами"". Переносить настройки способів забезпечення робіт у цілому з регістра ""Варіанти забезпечення роботами"" у довідник ""Номенклатура"". Настройки способів забезпечення товарів і тари в цілому деталізує до характеристик.'");

    
    
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.3.6";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.НастройкиХозяйственныхОпераций.ОчиститьНеИспользуемыеЭлементыСправочника";
	Обработчик.Комментарий = НСтр("ru='Очищает неиспользуемые элементы справочника ""Хозяйственные операции"".';uk='Очищає невживані елементи довідника ""Господарські операції"".'");

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.3.7";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.НастройкиХозяйственныхОпераций.ЗаполнитьПредопределенныеНастройкиХозяйственныхОпераций";
	Обработчик.Комментарий = НСтр("ru='Обновляет реквизиты предопределенных элементов справочника ""Настройки хозяйственных операций"" согласно заданным настройкам в текстовых макетах.';uk='Оновлює реквізити напеердвизначених елементів довідника ""Настройки господарських операцій"" згідно заданих настройок в текстових макетах.'");
    
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.3.8";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.НастройкиХозяйственныхОпераций.ОбновитьНаименованияХозяйственныхОпераций";
	Обработчик.Комментарий = НСтр("ru='Обновляет наименование предопределенных элементов справочника ""Хозяйственные операции"".';uk='Оновлює найменування напередвизначених елементів довідника ""Господарські операції"".'");
    
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.3.9";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.СтатьиНалоговыхДеклараций.ОбновитьПредопределенныеСтатьи";
	Обработчик.Комментарий = НСтр("ru='Обновляет предопределенные элементы справочника ""Статьи налоговых деклараций"".';uk='Оновлює напередвизначені елементи довідника ""Статті податкових декларацій"".'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.3.10";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "РегистрыСведений.НаборыСтатейНалоговыхДеклараций.ОбновитьПредопределенныеСтатьиСПредварительнойОчисткой";
	Обработчик.Комментарий = НСтр("ru='Обновляет предопределенные элементы справочника ""Наборы статей налоговых деклараций"".';uk='Оновлює напередвизначені елементи довідника ""Набори статей податкових декларацій"".'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.3.11";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.НаборыСтатейНалоговыхДеклараций.ОбновитьПредопределенныеСтатьи";
	Обработчик.Комментарий = НСтр("ru='Обновляет регистр сведений ""Связи наборов и статей налоговых деклараций"".';uk='Оновлює регістр відомостей ""Зв''язки наборів і статей податкових декларацій"".'");
    
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.3.12";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "НДСОбщегоНазначенияСервер.ЗаполнитьКодНоменклатурыПоКлассификаторуВНалоговыхДокументах";
	Обработчик.Комментарий = НСтр("ru='Заполняет реквизит ""Код по классификатору на печать"" в налоговых документах.';uk='Заповнює реквізит ""Код за класифікатором на друк"" в податкових документах.'");
    
    

#КонецОбласти // Версия_3_2_3

#КонецОбласти

#Область Отложенно

#Область Версия_3_2_1

#Область ПотерянныеСоответствия

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.1";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.АвансовыйОтчет.ПеренестиРеквизитыПотерянныеСоответствия";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.АвансовыйОтчет.ПеренестиРеквизитыПотерянныеСоответствия_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.АвансовыйОтчет";
	Обработчик.Комментарий = НСтр("ru='Переносит реквизиты с потерянными соответствиями при обновлении с предыдущей редакции';uk='Переносить реквізити з втраченими відповідниками при оновленні з попередньої редакції'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.1";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.АктВыполненныхРабот.ПеренестиРеквизитыПотерянныеСоответствия";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.АктВыполненныхРабот.ПеренестиРеквизитыПотерянныеСоответствия_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.АктВыполненныхРабот";
	Обработчик.Комментарий = НСтр("ru='Переносит реквизиты с потерянными соответствиями при обновлении с предыдущей редакции';uk='Переносить реквізити з втраченими відповідниками при оновленні з попередньої редакції'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.1";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ВыкупВозвратнойТарыКлиентом.ПеренестиРеквизитыПотерянныеСоответствия";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ВыкупВозвратнойТарыКлиентом.ПеренестиРеквизитыПотерянныеСоответствия_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ВыкупВозвратнойТарыКлиентом";
	Обработчик.Комментарий = НСтр("ru='Переносит реквизиты с потерянными соответствиями при обновлении с предыдущей редакции';uk='Переносить реквізити з втраченими відповідниками при оновленні з попередньої редакції'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.1";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ОтчетБанкаПоОперациямЭквайринга.ПеренестиРеквизитыПотерянныеСоответствия";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ОтчетБанкаПоОперациямЭквайринга.ПеренестиРеквизитыПотерянныеСоответствия_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ОтчетБанкаПоОперациямЭквайринга";
	Обработчик.Комментарий = НСтр("ru='Переносит реквизиты с потерянными соответствиями при обновлении с предыдущей редакции';uk='Переносить реквізити з втраченими відповідниками при оновленні з попередньої редакції'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.1";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.РеализацияУслугПрочихАктивов.ПеренестиРеквизитыПотерянныеСоответствия";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.РеализацияУслугПрочихАктивов.ПеренестиРеквизитыПотерянныеСоответствия_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.РеализацияУслугПрочихАктивов";
	Обработчик.Комментарий = НСтр("ru='Переносит реквизиты с потерянными соответствиями при обновлении с предыдущей редакции';uk='Переносить реквізити з втраченими відповідниками при оновленні з попередньої редакції'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.1";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ТаможеннаяДекларацияИмпорт.ПеренестиРеквизитыПотерянныеСоответствия";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ТаможеннаяДекларацияИмпорт.ПеренестиРеквизитыПотерянныеСоответствия_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ТаможеннаяДекларацияИмпорт";
	Обработчик.Комментарий = НСтр("ru='Переносит реквизиты с потерянными соответствиями при обновлении с предыдущей редакции';uk='Переносить реквізити з втраченими відповідниками при оновленні з попередньої редакції'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
#КонецОбласти

    
    
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.3";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПередачаТоваровМеждуОрганизациями.ЗаполнитьВариантОформленияПродажи";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПередачаТоваровМеждуОрганизациями.ЗаполнитьВариантОформленияПродажи_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПередачаТоваровМеждуОрганизациями";
	Обработчик.Комментарий = НСтр("ru='Заполняет новый реквизит ""Вариант оформления продажи"" в документе ""Передача товаров между организациями""';uk='Заповнює новий реквізит ""Варіант оформлення продажу"" в документі ""Передача товарів між організаціями""'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.3";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.РеализацияТоваровУслуг.ЗаполнитьВариантОформленияПродажи";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.РеализацияТоваровУслуг.ЗаполнитьВариантОформленияПродажи_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.РеализацияТоваровУслуг";
	Обработчик.Комментарий = НСтр("ru='Заполняет новый реквизит ""Вариант оформления продажи"" в документе ""Реализация товаров и услуг""';uk='Заповнює новий реквізит ""Варіант оформлення продажу"" в документі ""Реалізація товарів і послуг""'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.5";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПрочееОприходованиеТоваров.ЗаполнитьНазначениеВТЧСерииПрочееОприходованиеТоваров";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПрочееОприходованиеТоваров.ЗаполнитьНазначениеВТЧСерииПрочееОприходованиеТоваров_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПрочееОприходованиеТоваров";
	Обработчик.Комментарий = НСтр("ru='Заполнение колонки ""Назначение"" в табличной части ""Серии"" в документе ""Прочее оприходование товаров"".
    | Пока работа обработчика не завершена, статусы указания серий и движения по товарам на складах будут вычисляться некорректно.'
    |;uk='Заповнення колонки ""Призначення"" в табличній частині ""Серії"" в документі ""Інше оприбуткування товарів"".
    |Поки робота обробника не завершена, статуси зазначення серій та рухи товарів на складах будуть обчислюватися некоректно.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.7";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.РегистрацияЦенНоменклатурыПоставщика.ЗаполнитьВидЦеныПоставщикаВТабличнойЧастиТовары";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.РегистрацияЦенНоменклатурыПоставщика.ЗаполнитьВидЦеныПоставщикаВТабличнойЧастиТовары_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.РегистрацияЦенНоменклатурыПоставщика";
	Обработчик.Комментарий = НСтр("ru='Выполняется обновление видов цен поставщика в табличной части товары документа ""Регистрация цен номенклатуры поставщика"".';uk='Виконується оновлення видів цін постачальника в табличній частині товари документа ""Реєстрація цін номенклатури постачальника"".'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.7";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПоступлениеТоваровУслуг.ЗаполнитьВидЦеныПоставщикаВТабличнойЧастиТовары";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПоступлениеТоваровУслуг.ЗаполнитьВидЦеныПоставщикаВТабличнойЧастиТовары_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПоступлениеТоваровУслуг";
	Обработчик.Комментарий = НСтр("ru='Выполняется обновление видов цен поставщика в табличной части товары документа ""Поступление товаров и услуг"".';uk='Виконується оновлення видів цін постачальника в табличній частині товари документа ""Надходження товарів і послуг"".'");
	Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.7";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ЗаказПоставщику.ЗаполнитьВидЦеныПоставщикаВТабличнойЧастиТовары";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаказПоставщику.ЗаполнитьВидЦеныПоставщикаВТабличнойЧастиТовары_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ЗаказПоставщику";
	Обработчик.Комментарий = НСтр("ru='Выполняется обновление видов цен поставщика в табличной части товары документа ""Заказ поставщику"".';uk='Виконується оновлення видів цін постачальника в табличній частині товари документа ""Замовлення постачальнику"".'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.11";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ВнутреннееПотреблениеТоваров.ПерезаполнитьНазначениеВТЧСерии";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ВнутреннееПотреблениеТоваров.ПерезаполнитьНазначениеВТЧСерии_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ВнутреннееПотреблениеТоваров";
	Обработчик.Комментарий = НСтр("ru='Заполнение колонки ""Назначение"" в табличной части ""Серии"" в документе ""Внутреннее потребление товаров"".
    | Пока работа обработчика не завершена, серии в документе могут отображаться некорректно.'
    |;uk='Заповнення колонки ""Призначення"" в табличній частині ""Серії"" в документі ""Внутрішнє споживання товарів"".
    |Поки робота обробника не завершена, серії в документі можуть відображатися некоректно.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.11";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПеремещениеТоваров.ПерезаполнитьНазначениеВТЧСерии";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПеремещениеТоваров.ПерезаполнитьНазначениеВТЧСерии_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПеремещениеТоваров";
	Обработчик.Комментарий = НСтр("ru='Заполнение колонки ""Назначение"" в табличной части ""Серии"" в документе ""Перемещение товаров"".
    | Пока работа обработчика не завершена, серии в документе могут отображаться некорректно.'
    |;uk='Заповнення колонки ""Призначення"" в табличній частині ""Серії"" документ ""Переміщення товарів"".
    |Поки робота обробника не завершена, серії в документі можуть відображатися некоректно.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.11";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПоступлениеТоваровУслуг.ПерезаполнитьНазначениеВТЧСерии";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПоступлениеТоваровУслуг.ПерезаполнитьНазначениеВТЧСерии_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 2;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПоступлениеТоваровУслуг";
	Обработчик.Комментарий = НСтр("ru='Заполнение колонки ""Назначение"" в табличной части ""Серии"" в документе ""Поступление товаров и услуг"".
    | Пока работа обработчика не завершена, серии в документе могут отображаться некорректно.'
    |;uk='Заповнення колонки ""Призначення"" в табличній частині ""Серії"" в документі ""Надходження товарів і послуг"".
    |Поки робота обробника не завершена, серії в документі можуть відображатися некоректно.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.11";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПрочееОприходованиеТоваров.ПерезаполнитьНазначениеВТЧСерии";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПрочееОприходованиеТоваров.ПерезаполнитьНазначениеВТЧСерии_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 2;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПрочееОприходованиеТоваров";
	Обработчик.Комментарий = НСтр("ru='Заполнение колонки ""Назначение"" в табличной части ""Серии"" в документе ""Прочее оприходование товаров"".
    | Пока работа обработчика не завершена, серии в документе могут отображаться некорректно.'
    |;uk='Заповнення колонки ""Призначення"" в табличній частині ""Серії"" в документі ""Інше оприбуткування товарів"".
    |Поки робота обробника не завершена, серії в документі можуть відображатися некоректно.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.11";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.РеализацияТоваровУслуг.ПерезаполнитьНазначениеВТЧСерии";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.РеализацияТоваровУслуг.ПерезаполнитьНазначениеВТЧСерии_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 2;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.РеализацияТоваровУслуг";
	Обработчик.Комментарий = НСтр("ru='Заполнение колонки ""Назначение"" в табличной части ""Серии"" в документе ""Реализация товаров услуг"".
    | Пока работа обработчика не завершена, серии в документе могут отображаться некорректно.'
    |;uk='Заповнення колонки ""Призначення"" в табличній частині ""Серії"" в документі ""Реалізація товарів і послуг"".
    |Поки робота обробника не завершена, серії в документі можуть відображатися некоректно.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.11";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.СборкаТоваров.ПерезаполнитьНазначениеВТЧСерии";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.СборкаТоваров.ПерезаполнитьНазначениеВТЧСерии_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.СборкаТоваров";
	Обработчик.Комментарий = НСтр("ru='Заполнение колонки ""Назначение"" в табличной части ""Серии"" в документе ""Сборка товаров"".
    | Пока работа обработчика не завершена, серии в документе могут отображаться некорректно.'
    |;uk='Заповнення колонки ""Призначення"" в табличній частині ""Серії"" в документі ""Збірка товарів"".
    |Поки робота обробника не завершена, серії в документі можуть відображатися некоректно.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.12";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ТаможеннаяДекларацияИмпорт.ПеренестиПоступленияВТабличнуюЧасть";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ТаможеннаяДекларацияИмпорт.ПеренестиПоступленияВТабличнуюЧасть_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 2;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ТаможеннаяДекларацияИмпорт";
	Обработчик.Комментарий = НСтр("ru='Заполняет реквизит ""ДокументПоступления"" в табличной части ""Товары"" документа ""Таможенная декларация"" по значению документа поступления в шапке';uk='Заповнює реквізит ""ДокументПоступления"" в табличній частині ""Товари"" документу ""Митна декларація"" за значенням документа надходження в шапці'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.13";
	Обработчик.РежимВыполнения = "Отложенно";
    Обработчик.Процедура = "Документы.ПеремещениеТоваров.ПерезаполнитьНазначениеОтправителяВПеремещенииТоваров";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПеремещениеТоваров.ПерезаполнитьНазначениеОтправителяВПеремещенииТоваров_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 2;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПеремещениеТоваров";
	Обработчик.Комментарий = НСтр("ru='Перезаполнение колонки ""НазначениеОтправителя"" в табличных частях ""Товары"" и ""Серии"" в документе ""Перемещение товаров"".';uk='Перезаповнює колонки ""НазначениеОтправителя"" в табличних частинах ""Товари"" і ""Серії"" у документі ""Переміщення товарів"".'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.15";
	Обработчик.РежимВыполнения = "Отложенно";
    Обработчик.Процедура = "РегистрыНакопления.ДвиженияДенежныеСредстваКонтрагент.КорректироватьОплатуВДругуюОрганизацию";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДвиженияДенежныеСредстваКонтрагент.КорректироватьОплатуВДругуюОрганизацию_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Корректировка движений регистра ""Движения ""Денежные средства - Контрагент"" по хоз. операции ""Оплата в другую организацию"".';uk='Коригування рухів регістра ""Рухи ""Грошові кошти - Контрагент"" по госп. операції ""Оплата в іншу організацію"".'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить(); 
    Обработчик.Версия = "3.2.1.15";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПоступлениеБезналичныхДенежныхСредств.ЗаполнитьСуммуКонвертации";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПоступлениеБезналичныхДенежныхСредств.ЗаполнитьСуммуКонвертации_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПоступлениеБезналичныхДенежныхСредств";
	Обработчик.Комментарий = НСтр("ru='Заполняется новый реквизит ""Сумма конвертации""
                            |в документах ""Поступление безналичных денежных средств"".'
                            |;uk='Заповнюється новий реквізит ""Сума конвертації""
                            |в документах ""Надходження безготівкових коштів"".'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить(); 
    Обработчик.Версия = "3.2.1.15";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПриходныйКассовыйОрдер.ЗаполнитьСуммуКонвертации";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПриходныйКассовыйОрдер.ЗаполнитьСуммуКонвертации_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПриходныйКассовыйОрдер";
	Обработчик.Комментарий = НСтр("ru='Заполняется новый реквизит ""Сумма конвертации""
                            |в документах ""Поступление безналичных денежных средств"".'
                            |;uk='Заповнюється новий реквізит ""Сума конвертації""
                            |в документах ""Надходження безготівкових коштів"".'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;                        
                            
#Область ОбновлениеВыписки                            

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.15";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПоступлениеБезналичныхДенежныхСредств.УстановитьСтатусПроведенияБанком";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПоступлениеБезналичныхДенежныхСредств.УстановитьСтатусПроведенияБанком_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 2;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПоступлениеБезналичныхДенежныхСредств";
	Обработчик.Комментарий = НСтр("ru='Устанавливает документам поступления безналичных денежных средств признак проведения банком.
        |Пока обработчик не завершен, информация об остатках безналичных денежных средств может быть некорректной.'
        |;uk='Встановлює документами надходження безготівкових коштів ознака проведення банком.
        |Поки обробник не завершений, інформація про залишки безготівкових грошових коштів може бути некоректною.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.15";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.СписаниеБезналичныхДенежныхСредств.УстановитьСтатусПроведенияБанком";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.СписаниеБезналичныхДенежныхСредств.УстановитьСтатусПроведенияБанком_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 2;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.СписаниеБезналичныхДенежныхСредств";
	Обработчик.Комментарий = НСтр("ru='Устанавливает документам списания безналичных денежных средств признак проведения банком.
        |Пока обработчик не завершен, информация об остатках безналичных денежных средств может быть некорректной.'
        |;uk='Встановлює документами списання безготівкових коштів ознаку проведення банком.
        |Поки обробник не завершений, інформація про залишки безготівкових грошових коштів може бути некоректною.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.15";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДенежныеСредстваБезналичные.ПеренестиБезналичныеДенежныеСредства";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДенежныеСредстваБезналичные.ПеренестиБезналичныеДенежныеСредства_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 3;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Переносит движения безналичных денежных средств из выписки в документы поступления и списания.
        |Пока обработчик не завершен, информация об остатках безналичных денежных средств может быть некорректной.'
        |;uk='Переносить рухи безготівкових грошових коштів з виписки документів надходження і списання.
        |Поки обробник не завершений, інформація про залишки безготівкових грошових коштів може бути некоректною.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.15";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ОтражениеРасхожденийПриИнкассацииДенежныхСредств.СоздатьДвиженияДенежныеСредстваВПути";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ОтражениеРасхожденийПриИнкассацииДенежныхСредств.СоздатьДвиженияДенежныеСредстваВПути_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ОтражениеРасхожденийПриИнкассацииДенежныхСредств";
	Обработчик.Комментарий = НСтр("ru='Проводит расхождения при инкассации денежных средств по регистру ""Денежные средства в пути"".
        |Пока обработчик не завершен, информация об остатках безналичных денежных средств может быть некорректной.'
        |;uk='Проводить розбіжності при інкасації грошових коштів за регістру ""Грошові кошти в дорозі"".
        |Поки обробник не завершений, інформація про залишки безготівкових грошових коштів може бути некоректною.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.15";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ОперацияПоПлатежнойКарте.СоздатьДвиженияДенежныеСредстваВПути";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ОперацияПоПлатежнойКарте.СоздатьДвиженияДенежныеСредстваВПути_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 2;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Проводит операции по платежной карте по регистру ""Денежные средства в пути"".
        |Пока обработчик не завершен, информация об остатках безналичных денежных средств может быть некорректной.'
        |;uk='Проводить операції по платіжній картці за регістру ""Грошові кошти в дорозі"".
        |Поки обробник не завершений, інформація про залишки безготівкових грошових коштів може бути некоректною.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.15";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ОтчетОРозничныхПродажах.СоздатьДвиженияДенежныеСредстваВПути";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ОтчетОРозничныхПродажах.СоздатьДвиженияДенежныеСредстваВПути_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 3;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Проводит отчеты о розничных продажах по регистру ""Денежные средства в пути"".
        |Пока обработчик не завершен, информация об остатках безналичных денежных средств может быть некорректной.'
        |;uk='Проводить звіти про роздрібні продажі по регістру ""Грошові кошти в дорозі"".
        |Поки обробник не завершений, інформація про залишки безготівкових грошових коштів може бути некоректною.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.15";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ВводОстатков.СоздатьДвиженияДенежныеСредстваВПути";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ВводОстатков.СоздатьДвиженияДенежныеСредстваВПути_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 4;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ВводОстатков";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Комментарий = НСтр("ru='Проводит ввод остатков по регистру ""Денежные средства в пути"".
        |Пока обработчик не завершен, информация об остатках безналичных денежных средств может быть некорректной.'
        |;uk='Проводить введення залишків по регістру ""Грошові кошти в дорозі"".
        |Поки обробник не завершений, інформація про залишки безготівкових грошових коштів може бути некоректною.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.15";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДенежныеСредстваБезналичные.СоздатьПоступленияПоЭквайрингу";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДенежныеСредстваБезналичные.СоздатьПоступленияПоЭквайрингу_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 5;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
    Обработчик.ЗапускатьТолькоВГлавномУзле = Истина; 
	Обработчик.Комментарий = НСтр("ru='Создает документы поступления денежных средств по эквайрингу.
        |Пока обработчик не завершен, информация об остатках безналичных денежных средств может быть некорректной.'
        |;uk='Створює документи надходження грошових коштів по еквайрингу.
        |Поки обробник не завершений, інформація про залишки безготівкових грошових коштів може бути некоректною.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.15";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ОтчетБанкаПоОперациямЭквайринга.СоздатьДвиженияДенежныеСредстваВПути";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ОтчетБанкаПоОперациямЭквайринга.СоздатьДвиженияДенежныеСредстваВПути_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 6;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Проводит отчеты банка по операциям эквайринга по регистру ""Денежные средства в пути"".
        |Пока обработчик не завершен, информация об остатках безналичных денежных средств может быть некорректной.'
        |;uk='Проводить звіти банку за операціями еквайрингу за регістру ""Грошові кошти в дорозі"".
        |Поки обробник не завершений, інформація про залишки безготівкових грошових коштів може бути некоректною.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.15";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДенежныеСредстваБезналичные.ОбработатьВозвратыПоЭквайрингу";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДенежныеСредстваБезналичные.ОбработатьВозвратыПоЭквайрингу_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 7;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
    Обработчик.ЗапускатьТолькоВГлавномУзле = Истина; 
    Обработчик.Комментарий = НСтр("ru='Формирует корректировки регистра ""Денежные средства в пути"" по операциям возврата по эквайрингу.';uk='Формує коригування регістра ""Грошові кошти в дорозі"" за операціями повернення еквайрингу.'");    
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
    Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.15";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПоступлениеБезналичныхДенежныхСредств.ПровестиДенежныеСредстваКЗачислению";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПоступлениеБезналичныхДенежныхСредств.ПровестиДенежныеСредстваКЗачислению_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 8;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
    Обработчик.Комментарий = НСтр("ru='Проводит по регистру ""Денежные средства (безналичные)"" документы поступления безналичных денежных средств, по которым еще не получена выписка банка.';uk='Проводить за регістру ""Грошові кошти (безготівкові)"" документи надходження безготівкових коштів, за якими ще не отримана виписка банку.'");    
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.15";
    Обработчик.РежимВыполнения = "Отложенно";
    Обработчик.Процедура = "Документы.СписаниеБезналичныхДенежныхСредств.ПровестиДенежныеСредстваКСписанию";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.СписаниеБезналичныхДенежныхСредств.ПровестиДенежныеСредстваКСписанию_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 9;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
    Обработчик.Комментарий = НСтр("ru='Проводит по регистру ""Денежные средства (безналичные)"" документы списания безналичных денежных средств, по которым еще не получена выписка банка.';uk='Проводить за регістру ""Грошові кошти (безготівкові)"" документи списання безготівкових коштів, за якими ще не отримана виписка банку.'"); 
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.15";
    Обработчик.РежимВыполнения = "Отложенно";
    Обработчик.Процедура = "Документы.ПриходныйКассовыйОрдер.ЗаполнитьКассуОтправитель";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПриходныйКассовыйОрдер.ЗаполнитьКассуОтправитель_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 2;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПриходныйКассовыйОрдер";
	Обработчик.Комментарий = НСтр("ru='Заполняется новый реквизит ""Касса отправитель"" в документах ""Приходный кассовый ордер"".';uk='Заповнюється новий реквізит ""Касса відправник"" в документах ""Прибутковий касовий ордер"".'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.15";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.УдалитьВыпискаПоРасчетномуСчету.ПеренестиБезналичныеОплатыВДругуюОрганизацию";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.УдалитьВыпискаПоРасчетномуСчету.ПеренестиБезналичныеОплатыВДругуюОрганизацию_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 10;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
    Обработчик.ЗапускатьТолькоВГлавномУзле = Истина; 
	Обработчик.Комментарий = НСтр("ru='Перенос движений выписки по хозяйственной операции ""Оплата в другую организацию"".
                                    |Пока работа обработчика не завершена, информация об остатках денежных средств может быть некорректной.'
                                    |;uk='Перенесення рухів виписки по господарській операції ""Оплата в іншу організацію"".
                                    |Поки робота обробника не завершена, інформація про залишки грошових коштів може бути некоректною.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.15";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.УдалитьВыпискаПоРасчетномуСчету.ПеренестиБезналичныеВозвратыВДругуюОрганизацию";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.УдалитьВыпискаПоРасчетномуСчету.ПеренестиБезналичныеВозвратыВДругуюОрганизацию_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 11;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
    Обработчик.ЗапускатьТолькоВГлавномУзле = Истина; 
	Обработчик.Комментарий = НСтр("ru='Перенос движений выписки по хозяйственной операции ""Возврат в другую организацию"".
                                    |Пока работа обработчика не завершена, информация об остатках денежных средств может быть некорректной.'
                                    |;uk='Перенесення рухів виписки по господарській операції ""Повернення в іншу організацію"".
                                    |Поки робота обробника не завершена, інформація про залишки грошових коштів може бути некоректною.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
                                    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.15";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.УдалитьВыпискаПоРасчетномуСчету.ПеренестиОплатуВДругуюОрганизациюНаличными";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.УдалитьВыпискаПоРасчетномуСчету.ПеренестиОплатуВДругуюОрганизациюНаличными_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 3;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Перенос движений наличных ДС по хозяйственной операции ""Оплата в другую организацию"".
                                    |Пока работа обработчика не завершена, информация об остатках денежных средств может быть некорректной.'
                                    |;uk='Перенесення рухів готікових ГК по господарській операції ""Оплата в іншу організацію"".
                                    |Поки робота обробника не завершена, інформація про залишки грошових коштів може бути некоректною.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.15";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.УдалитьВыпискаПоРасчетномуСчету.ПеренестиВозвратВДругуюОрганизациюНаличными";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.УдалитьВыпискаПоРасчетномуСчету.ПеренестиВозвратВДругуюОрганизациюНаличными_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 4;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Перенос движений наличных ДС по хозяйственной операции ""Возврат в другую организацию"".
                                    |Пока работа обработчика не завершена, информация об остатках денежных средств может быть некорректной.'
                                    |;uk='Перенесення рухів готівкових ГК по господарській операції ""Повернення в іншу організацію"".
                                    |Поки робота обробника не завершена, інформація про залишки грошових коштів може бути некоректною.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.15";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.УдалитьВыпискаПоРасчетномуСчету.ПеренестиВнутреннеюПередачуДС";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.УдалитьВыпискаПоРасчетномуСчету.ПеренестиВнутреннеюПередачуДС_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 12;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
    Обработчик.ЗапускатьТолькоВГлавномУзле = Истина; 
	Обработчик.Комментарий = НСтр("ru='Перенос движений выписки по хозяйственной операции ""Внутренняя передача денежных средств"".
                                    |Пока работа обработчика не завершена, информация об остатках денежных средств может быть некорректной.'
                                    |;uk='Перенесення рухів виписки по господарській операції ""Внутрішня передача грошових коштів"".
                                    |Поки робота обробника не завершена, інформація про залишки грошових коштів може бути некоректною.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
    Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.15";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.УдалитьВыпискаПоРасчетномуСчету.ОчиститьДвиженияДенежныеСредстваВыпискиПоЭквайрингу";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.УдалитьВыпискаПоРасчетномуСчету.ОчиститьДвиженияДенежныеСредстваВыпискиПоЭквайрингу_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 13;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Очистка движений выписки по регистру ""Движения Денежные средства - Денежные средства"" по эквайрингу.';uk='Очищення рухів виписки по регістру ""Рухи кошти - Грошові кошти"" еквайрингу.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
    Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.15";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.УдалитьВыпискаПоРасчетномуСчету.ОчиститьДвиженияДенежныеСредстваДоходыРасходыВыпискиПоЭквайрингу";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.УдалитьВыпискаПоРасчетномуСчету.ОчиститьДвиженияДенежныеСредстваДоходыРасходыВыпискиПоЭквайрингу_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 14;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Очистка движений выписки по регистру ""Движения Денежные средства - Доходы/Расходы"" по эквайрингу.';uk='Очищення рухів виписки по регістру ""Рухи Грошові кошти - Доходи/Витрати"" по еквайрингу.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;

#КонецОбласти // ОбновлениеВыписки

#Область ЗаполнитьДвиженияДеньгиВПути

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.15";
	Обработчик.РежимВыполнения = "Отложенно";
    Обработчик.Процедура = "РегистрыНакопления.ДенежныеСредстваВПути.ЗаполнитьДеньгиВПутиБезналичныйРасчет";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДенежныеСредстваВПути.ЗаполнитьДеньгиВПутиБезналичныйРасчет_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 13;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Формирование движений платежных документов по безналичному расчету по регистру ""Денежные средства в пути"".
                                |Пока работа обработчика не завершена, информация об остатках переводов в пути может быть некорректной.'
                                |;uk='Формування рухів платіжних документів за безготівковим розрахунком по регістру ""Грошові кошти в дорозі"".
                                |Поки робота обробника не завершена, інформація про залишки переказів в дорозі може бути некоректною.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;                            
    
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.15";
	Обработчик.РежимВыполнения = "Отложенно";
    Обработчик.Процедура = "РегистрыНакопления.ДенежныеСредстваВПути.ЗаполнитьДеньгиВПутиНаличныйРасчет";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДенежныеСредстваВПути.ЗаполнитьДеньгиВПутиНаличныйРасчет_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 14;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Формирование движений платежных документов по наличному расчету по регистру ""Денежные средства в пути"".
                                    |Пока работа обработчика не завершена, информация об остатках переводов в пути может быть некорректной.'
                                    |;uk='Формування рухів платіжних документів за готівковим розрахунком по регістру ""Грошові кошти в дорозі"".
                                    |Поки робота обробника не завершена, інформація про залишки переказів в дорозі може бути некоректною.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;                                
    
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.15";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.УдалитьВыпискаПоРасчетномуСчету.ПеренестиПоступлениеСДругогоСчетаБезналичныйРасчет";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.УдалитьВыпискаПоРасчетномуСчету.ПеренестиПоступлениеСДругогоСчетаБезналичныйРасчет_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 15;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
    Обработчик.ЗапускатьТолькоВГлавномУзле = Истина; 
	Обработчик.Комментарий = НСтр("ru='Перенос движений выписки по хоз. операции ""Поступление денежных средств с другого счета"".
                                    |Пока работа обработчика не завершена, информация об остатках переводов в пути может быть некорректной.'
                                    |;uk='Перенесення рухів виписки за госп. операцією ""Надходження грошових коштів з іншого рахунку"".
                                    |Поки робота обробника не завершена, інформація про залишки переказів в дорозі може бути некоректною.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.15";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.УдалитьВыпискаПоРасчетномуСчету.ПеренестиПоступлениеИзБанкаБезналичныйРасчет";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.УдалитьВыпискаПоРасчетномуСчету.ПеренестиПоступлениеИзБанкаБезналичныйРасчет_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 16;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Перенос движений выписки по хоз. операции ""Поступление денежных средств из банка"".
                                    |Пока работа обработчика не завершена, информация об остатках переводов в пути может быть некорректной.'
                                    |;uk='Перенесення рухів виписки за госп. операцією ""Надходження грошових коштів з банку"".
                                    |Поки робота обробника не завершена, інформація про залишки переказів в дорозі може бути некоректною.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.15";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.УдалитьВыпискаПоРасчетномуСчету.ПеренестиПоступлениеИзБанкаНаличныйРасчет";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.УдалитьВыпискаПоРасчетномуСчету.ПеренестиПоступлениеИзБанкаНаличныйРасчет_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 17;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Формирование движений в регистре ""Денежные средства в пути"" по хоз. операции ""Поступление денежных средств из банка"".
                                    |Пока работа обработчика не завершена, информация об остатках переводов в пути может быть некорректной.'
                                    |;uk='Формування рухів у регістрі ""Грошові кошти в дорозі"" по госп. операції ""Надходження грошових коштів з банку"".
                                    |Поки робота обробника не завершена, інформація про залишки переказів в дорозі може бути некоректною.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.15";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.УдалитьВыпискаПоРасчетномуСчету.ПеренестиСдачуВБанкБезналичныйРасчет";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.УдалитьВыпискаПоРасчетномуСчету.ПеренестиСдачуВБанкБезналичныйРасчет_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 18;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Перенос движений выписки по хоз. операции ""Сдача денежных средств в банк"".
                                    |Пока работа обработчика не завершена, информация об остатках переводов в пути может быть некорректной.'
                                    |;uk='Перенесення рухів виписки з госп. операції ""Здавання коштів в банк"".
                                    |Поки робота обробника не завершена, інформація про залишки переказів в дорозі може бути некоректною.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
    Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.15";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.УдалитьВыпискаПоРасчетномуСчету.ПеренестиСдачуВБанкНаличныйРасчет";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.УдалитьВыпискаПоРасчетномуСчету.ПеренестиСдачуВБанкНаличныйРасчет_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 19;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Формирование движений в регистре ""Денежные средства в пути"" по хоз. операции ""Сдача денежных средств в банк"".
                                    |Пока работа обработчика не завершена, информация об остатках переводов в пути может быть некорректной.'
                                    |;uk='Формування рухів у регістрі ""Грошові кошти в дорозі"" по госп. операції ""Здавання коштів в банк"".
                                    |Поки робота обробника не завершена, інформація про залишки переказів в дорозі може бути некоректною.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.15";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.УдалитьВыпискаПоРасчетномуСчету.ПеренестиДвиженияДенежныеСредстваДоходыРасходы";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.УдалитьВыпискаПоРасчетномуСчету.ПеренестиДвиженияДенежныеСредстваДоходыРасходы_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 20;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Перенос движений выписки по регистру ""Движения Денежные средства - Доходы\Расходы"".';uk='Перенесення рухів виписки по регістру ""Рухи Грошові кошти - Доходи\Витрати"".'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.15";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.УдалитьВыпискаПоРасчетномуСчету.ПеренестиДвиженияДенежныеСредства";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.УдалитьВыпискаПоРасчетномуСчету.ПеренестиДвиженияДенежныеСредства_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 21;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Перенос движений выписки по регистру ""Движения денежных средств"".';uk='Перенесення рухів виписки по регістру ""Рухи грошових коштів"".'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
#КонецОбласти // ЗаполнитьДвиженияДеньгиВПути

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.15";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДвиженияДенежныеСредстваДоходыРасходы.КорректироватьДвиженияКонвертацииВалюты";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДвиженияДенежныеСредстваДоходыРасходы.КорректироватьДвиженияКонвертацииВалюты_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 22;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Корректировка движений регистра ""Движения ""Денежные средства - Доходы\Расходы"" по хоз. операции ""Конвертация валюты"".';uk='Коригування рухів регістра ""Рухи ""Грошові кошти - Доходи\Витрати"" за госп. операцією ""Конвертація валюти"".'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
    Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.16";
	Обработчик.РежимВыполнения = "Отложенно";  
	Обработчик.Процедура = "Документы.ВнутреннееПотреблениеТоваров.ЗаполнитьСтатусУказанияСерийОтправитель";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ВнутреннееПотреблениеТоваров.ЗаполнитьСтатусУказанияСерийОтправитель_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 2;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ВнутреннееПотреблениеТоваров";
    Обработчик.Комментарий = НСтр("ru='Заполняется промежуточный служебный реквизит УдалитьСтатусУказанияСерийОтправитель.';uk='Заповнюється проміжний службовий реквізит УдалитьСтатусУказанияСерийОтправитель.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.16";
	Обработчик.РежимВыполнения = "Отложенно";  
	Обработчик.Процедура = "Документы.ПрочееОприходованиеТоваров.ЗаполнитьНазначениеОтправителя";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПрочееОприходованиеТоваров.ЗаполнитьНазначениеОтправителя_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 2;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПрочееОприходованиеТоваров";
    Обработчик.Комментарий = НСтр("ru='Заполняются новый реквизит НазначениеОтправителя.';uk='Заповнюються новий реквізит НазначениеОтправителя.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
    
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.19";
	Обработчик.Процедура = "Справочники.ИсточникиДанныхПланирования.ОбновитьИсточникиДанныхПоДвижениюТоваров";
	Обработчик.РежимВыполнения = "Отложенно";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Справочники.ИсточникиДанныхПланирования.ОбновитьИсточникиДанныхПоДвижениюТоваров_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Справочник.ИсточникиДанныхПланирования";
	Обработчик.Комментарий = НСтр("ru='Обновляет СКД источников данных планирования после изменения поставляемых макетов.';uk='Оновлює СКД джерел даних планування після зміни поставляються макетів.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
    
    
	Обработчик = Обработчики.Добавить(); 
	Обработчик.Версия = "3.2.1.21";
	Обработчик.РежимВыполнения = "Отложенно";  
	Обработчик.Процедура = "Документы.ВнутреннееПотреблениеТоваров.ЗаполнитьНазначениеОтправителя";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ВнутреннееПотреблениеТоваров.ЗаполнитьНазначениеОтправителя_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 3;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ВнутреннееПотреблениеТоваров";
    Обработчик.Комментарий = НСтр("ru='Заполняются новые реквизиты Назначение в ТЧ Товары и Серии.';uk='Заповнюються нові реквізити Призначення в ТЧ Товари і Серії.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.22";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ОбеспечениеЗаказов.ИсправитьДвиженияПоОбеспечениюЗаказов";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ОбеспечениеЗаказов.ИсправитьДвиженияПоОбеспечениюЗаказов_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1; 
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Заполняет движения по регистру ""Обеспечение заказов"" для документов.';uk='Заповнює рухи по регістру ""Забезпечення замовлень"" для документів.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.25";
    Обработчик.РежимВыполнения = "Отложенно"; 
	Обработчик.Процедура = "Документы.ПоступлениеБезналичныхДенежныхСредств.КорректироватьРасчетыСКлиентами";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПоступлениеБезналичныхДенежныхСредств.КорректироватьРасчетыСКлиентами_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 22;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Перезаполняет движения по регистру ""Расчеты с клиентами"" для документов ""Поступление безналичных денежных средств"", не проведенных банком.';uk='Перезаповнює рухи по регістру ""Розрахунки з клієнтами"" для документів ""Надходження безготівкових коштів"", не проведених банком.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.25";
    Обработчик.РежимВыполнения = "Отложенно"; 
	Обработчик.Процедура = "Документы.СписаниеБезналичныхДенежныхСредств.КорректироватьРасчетыСПоставщиками";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.СписаниеБезналичныхДенежныхСредств.КорректироватьРасчетыСПоставщиками_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 22;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Перезаполняет движения по регистру ""Расчеты с поставщиками"" для документов ""Списание безналичных денежных средств"".';uk='Перезаполняет руху по регістру ""Розрахунки з постачальниками"" для документів ""Списання безготівкових коштів"".'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.25";
    Обработчик.РежимВыполнения = "Отложенно"; 
	Обработчик.Процедура = "Документы.РасходныйКассовыйОрдер.КорректироватьРасчетыСПоставщиками";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.РасходныйКассовыйОрдер.КорректироватьРасчетыСПоставщиками_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 23;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Перезаполняет движения по регистру ""Расчеты с поставщиками"" для документов ""Расходный кассовый ордер"", проведенных по заявке.';uk='Перезаповнює рухи по регістру ""Розрахунки з постачальниками"" для документів ""Видатковий касовий ордер"", проведених за заявкою.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.25";
    Обработчик.РежимВыполнения = "Отложенно"; 
	Обработчик.Процедура = "Документы.ЗаявкаНаРасходованиеДенежныхСредств.СформироватьДвиженияДеньгиВПути";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаявкаНаРасходованиеДенежныхСредств.СформироватьДвиженияДеньгиВПути_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 24;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Заполняет движения по регистру ""Расчеты с поставщиками"" для документов ""Заявка на расходование денежных средств"".';uk='Заповнює рухи по регістру ""Розрахунки з постачальниками"" для документів ""Заявка на витрачання грошових коштів"".'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
    
	Обработчик = Обработчики.Добавить(); 
    Обработчик.Версия = "3.2.1.29";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы.КорректироватьДвиженияОтчетаКомиcсионераОСписании";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы.КорректироватьДвиженияОтчетаКомиcсионераОСписании_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1; 
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Корректировка движений документа ""Отчет комиссионера о списании"" по регистру ""Движения ""Номенклатура - Доходы\Расходы"".';uk='Коригування рухів документа ""Звіт комісіонера про списання"" по регістру ""Рухи ""Номенклатура - Доходи\Витрати"".'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.30";
    Обработчик.РежимВыполнения = "Отложенно"; 
	Обработчик.Процедура = "Документы.ПеремещениеТоваров.ПерезаполнитьРазделУчетаСебестоимость";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПеремещениеТоваров.ПерезаполнитьРазделУчетаСебестоимость_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 6; 
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Перезаполняет раздел учета в движениях по регистру ""Себестоимость товаров"" для собственных товаров.';uk='Перезаповнює розділ обліку у рухах по регістру ""Собівартість товарів"" для власних товарів.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
    
	Обработчик = Обработчики.Добавить(); 
    Обработчик.Версия = "3.2.1.33";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПоступлениеБезналичныхДенежныхСредств.ЗаменитьХозОперациюВнутреннееПоступлениеДС";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПоступлениеБезналичныхДенежныхСредств.ЗаменитьХозОперациюВнутреннееПоступлениеДС_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 23; 
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПоступлениеБезналичныхДенежныхСредств";
	Обработчик.Комментарий = НСтр("ru='Для документов ""Поступление безналичных ДС"" заменяется хозяйственная операция ""Внутреннее поступление ДС"".';uk='Для документів ""Надходження безготівкових ГК"" замінюється господарська операція ""Внутрішнє надходження ГК"".'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
                                
    
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.38";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПриходныйОрдерНаТовары.ПометитьНаУдалениеОрдераСТипомВозвратНепринятых";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПриходныйОрдерНаТовары.ПометитьНаУдалениеОрдераСТипомВозвратНепринятых_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ОприходованиеИзлишковТоваров,Документ.ПриходныйОрдерНаТовары";
	Обработчик.Комментарий = НСтр("ru='Распроводит и помечает на удаление документы ""Приходный ордер на товары"" с типом операции ""Возврат непринятых товаров"" на неордерных при отражении излишков и недостач складах, при этом происходит перенос товаров в новые непроведенные документы ""Оприходование излишков товаров"".';uk='Розпроводить і позначає на видалення документи ""Прибутковий ордер на товари"" з типом операції ""Повернення пропущених товарів"" на неордерних при відображенні надлишків і нестач складах, при цьому відбувається перенесення товарів у нові непроведені документи ""Оприбуткування лишків товарів"".'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.39";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПриходныйОрдерНаТовары.ПеренестиСерииВТовары";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПриходныйОрдерНаТовары.ПеренестиСерииВТовары_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 2;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПриходныйОрдерНаТовары";
	Обработчик.Комментарий = НСтр("ru='Обновляются документы ""Приходный ордер на товары"":
    |- выполняется замена ссылок на документы ""Прочее оприходование товаров"" с операцией ""Возврат из производства"";
    |- переносятся серии в табличную часть ""Товары"".'
    |;uk='Оновлюються документи ""Прибутковий ордер на товари"":
    |- виконується заміна посилань на документи ""Інше оприбуткування товарів"" з операцією ""Повернення з виробництва"";
    |- переносяться серії в табличну частину ""Товари"".'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
	Обработчик = Обработчики.Добавить(); 
    Обработчик.Версия = "3.2.1.40";
	Обработчик.РежимВыполнения = "Отложенно";
    Обработчик.Процедура = "Документы.ПеремещениеТоваров.СоздатьЗаказыНаПеремещениеДляПеремещенийОбособленногоТовара";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПеремещениеТоваров.СоздатьЗаказыНаПеремещениеДляПеремещенийОбособленногоТовара_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 3; 
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ЗаказНаПеремещение,Документ.ПеремещениеТоваров,Документ.ПриходныйОрдерНаТовары";
	Обработчик.Комментарий = НСтр("ru='Создание заказов-оснований для перемещений обособленных товаров без заказа.
        |Пока работа обработчика не завершена не рекомендуется перепроводить перемещения без заказа, это приведет к искажению обособленного учета.'
        |;uk='Створення замовлень-підстав для переміщень відокремлених товарів без замовлення.
        |Поки робота обробника не завершена не рекомендується перепроводити переміщення без замовлення, це призведе до спотворення відокремленого обліку.'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;    
        
    Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.41";
	Обработчик.РежимВыполнения = "Отложенно"; 
	Обработчик.Процедура = "Документы.ПриходныйОрдерНаТовары.ИсправитьДвижения_3_2_1";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПриходныйОрдерНаТовары.ИсправитьДвижения_3_2_1_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 4; 
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Корректировка движений регистров ТоварыНаСкладах, СвободныеОстатки, ТоварыКОформлениюПоступления, ТоварыКОформлениюИзлишковНедостач документа ПриходныйОрдерНаТовары';uk='Коригування рухів регістрів ТоварыНаСкладах, СвободныеОстатки, ТоварыКОформлениюПоступления, ТоварыКОформлениюИзлишковНедостач документа ПриходныйОрдерНаТовары'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
    Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.1.42";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Справочники.Контрагенты.ЗаполнитьСтраныРегистрацииКонтрагентовРезидентов";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Справочники.Контрагенты.ЗаполнитьСтраныРегистрацииКонтрагентовРезидентов_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1; 
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Справочник.Контрагенты";
	Обработчик.Комментарий = НСтр("ru='Заполняет в качестве страны регистрации контрагента страну ""Украина"" для всех контрагентов, вид которых отличен от ""Юр. лицо, за пределами Украины"" .';uk='Заповнює в якості країни реєстрації контрагента країну ""Україна"" для всіх контрагентів, вид яких відрізняється від ""Юр. особа, за межами України"" .'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
	
    
    
    
	Обработчик = Обработчики.Добавить(); 
    Обработчик.Версия = "3.2.1.68"; 
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ТаможеннаяДекларацияИмпорт.ЗаполнитьКонтрагентаПоставщика";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ТаможеннаяДекларацияИмпорт.ЗаполнитьКонтрагентаПоставщика_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 3;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ТаможеннаяДекларацияИмпорт";
	Обработчик.Комментарий = НСтр("ru='В документе """"Таможенная декларация на импорт"""" заполняется реквизит """"Контрагент поставщика"""".';uk='В документі """"Митна декларація на імпорт"""" заповнюється реквізит """"Контрагент постачальника"""".'");
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
    

#КонецОбласти // Версия_3_2_1

#Область Версия_3_2_2

    ОчередьПодредакции322 = 100;
    МаксОчередь321 = ОчередьПодредакции322;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.0";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "ОбновлениеИнформационнойБазыУТ.НачалоПодредакции_3_2_2";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "ОбновлениеИнформационнойБазыУТ.НачалоПодредакции_3_2_2_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = ОчередьПодредакции322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = "";
	Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;


	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ВнутреннееПотреблениеТоваров.ПеренестиСерии10ВТЧТовары";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ВнутреннееПотреблениеТоваров.ПеренестиСерии10ВТЧТовары_ЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "Документы.ВнутреннееПотреблениеТоваров.ПеренестиСерии10ВТЧТовары_ПроверитьДанныеОбновлены";
	Обработчик.БлокируемыеОбъекты = "Документ.ВнутреннееПотреблениеТоваров,Документ.ЗаказНаВнутреннееПотребление,Документ.ЗаказНаРемонт,Документ.КорректировкаЗаказаМатериаловВПроизводство";
	Обработчик.Комментарий = НСтр("ru='Переносит серии с политикой ""При планировании отгрузки"" из табличной части ""Серии"" в табличную часть ""Товары"" в документах ""Внутреннее потребление товаров"". До завершения работы обработчика обновления работа со старыми документами временно невозможна.';uk='Переносить серії з політикою ""При плануванні відвантаження"" з табличної частини ""Серії"" в табличну частину ""Товари"" в документах ""Внутрішнє споживання товарів"". До завершення роботи обробника оновлення робота зі старими документами тимчасово неможлива.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ВозвратТоваровПоставщику.ПеренестиСерии10ВТЧТовары";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ВозвратТоваровПоставщику.ПеренестиСерии10ВТЧТовары_ЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ВозвратТоваровПоставщику";
	Обработчик.Комментарий = НСтр("ru='Переносит серии с политикой ""При планировании отгрузки"" из табличной части ""Серии"" в табличную часть ""Товары"" в документах ""Возврат товаров поставщику"". До завершения работы обработчиков обновления работа со старыми документами будет временно невозможна.';uk='Переносить серії з політикою ""При плануванні відвантаження"" з табличної частини ""Серії"" в табличну частину ""Товари"" в документах ""Повернення товарів постачальнику"". До завершення роботи обробників оновлення робота зі старими документами буде тимчасово неможлива.'");

    Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
    Обработчик.РежимВыполнения = "Отложенно";
    Обработчик.Процедура = "Документы.ЗаказНаСборку.ЗаполнитьОтгрузитьОперацияРазборкаОтложенно";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаказНаСборку.ЗаполнитьОтгрузитьОперацияРазборкаЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь321;
    Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
    Обработчик.БлокируемыеОбъекты = "Документ.ЗаказНаСборку";
    Обработчик.ЗапускатьТолькоВГлавномУзле = Истина;
    Обработчик.Комментарий = НСтр("ru='Переносит серии из документов ""Сборка товаров"" в связанные документы ""Заказ на сборку"". До завершения работы обработчиков обновления работа со старыми заказами будет временно невозможна.';uk='Переносить серії з документів ""Збирання товарів"" у зв''язані документи ""Замовлення на збирання"". До завершення роботи обробників оновлення робота зі старими замовленнями буде тимчасово неможлива.'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПеремещениеТоваров.ПеренестиСерии10ВТЧТовары";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПеремещениеТоваров.ПеренестиСерии10ВТЧТовары_ЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "Документы.ПеремещениеТоваров.ПеренестиСерии10ВТЧТовары_ПроверитьДанныеОбновлены";
	Обработчик.БлокируемыеОбъекты = "Документ.ЗаказНаПеремещение,Документ.ПеремещениеТоваров";
	Обработчик.Комментарий = НСтр("ru='Переносит серии с политикой ""При планировании отгрузки"" из табличной части "" Серии"" в табличную часть ""Товары"" в документах ""Перемещение товаров"". До завершения работы обработчика обновления работа со старыми документами будет временно невозможна.';uk='Переносить серії з політикою ""При плануванні відвантаження"" з табличної частини ""Серії"" в табличну частину ""Товари"" в документах ""Переміщення товарів"". До завершення роботи обробника оновлення робота зі старими документами буде тимчасово неможлива.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыСведений.ТоварныеОграничения.ЗаполнитьМетодОбеспеченияПотребностейЗаписатьДанные";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.ТоварныеОграничения.ЗаполнитьМетодОбеспеченияПотребностейОтметитьКОбработке";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Заполняет пустой метод обеспечения потребностей в регистре ""Товарные ограничения"". Пока работа обработчика не завершена, информация в регистре некорректна.';uk='Заповнює порожній метод забезпечення потреб у регістрі ""Товарні обмеження"". Поки робота обробника не завершена, інформація в регістрі некоректна.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ОрдерНаПеремещениеТоваров.ЗаполнитьОтгружаемыеТоварыОрдерНаПеремещениеТоваровОтложенно";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ОрдерНаПеремещениеТоваров.ЗаполнитьОтгружаемыеТоварыОрдерНаПеремещениеТоваровОтложенноОтметитьКОбработке";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ОрдерНаПеремещениеТоваров";
	Обработчик.Комментарий = НСтр("ru='Заполняет табличную часть ""Отгружаемые товары"" по табличным частям ""Товары"" и ""Серии"" в документе ""Ордер на перемещение товаров"". До завершения работы обработчика обновления не рекомендуется работать со старыми документами.';uk='Заповнює табличну частину ""Товари що відвантажуються "" за табличними частинами ""Товари"" і ""Серії"" в документі ""Ордер на переміщення товарів"". До завершення роботи обробника оновлення не рекомендується працювати зі старими документами.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.АннулированиеПодарочныхСертификатов.ПеренестиАналитикуДоходовВТабЧасть";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.АннулированиеПодарочныхСертификатов.ПеренестиАналитикуДоходовВТабЧастьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.АннулированиеПодарочныхСертификатов";
	Обработчик.Комментарий = НСтр("ru='Заполняет новые реквизиты в документах ""Аннулирование подарочных сертификатов"".';uk='Заповнює нові реквізити в документах ""Анулювання подарункових сертифікатів"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.РасходныйКассовыйОрдер.ЗаполнитьРасшифровкуПлатежаДляДокументовПрочаяВыдачаДС";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.РасходныйКассовыйОрдер.ЗаполнитьРасшифровкуПлатежаДляДокументовПрочаяВыдачаДСЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.РасходныйКассовыйОрдер";
	Обработчик.Комментарий = НСтр("ru='Заполняет в документах ""Расходный кассовый ордер"" с операцией ""Прочий расход"" табличную часть ""Расшифровка платежа"". 
    |До завершения работы обработчика обновления документы находятся в некорректном состоянии.'
    |;uk='Заповнює в документах ""Видатковий касовий ордер"" з операцією ""Інший витрата"" табличну частину ""Розшифровка платежу"". 
    |До завершення роботи обробника оновлення документи знаходяться в некоректному стані.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ЗаявкаНаРасходованиеДенежныхСредств.ИзменитьОперациюПрочиеРасходыНаПрочаяВыдачаДС";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаявкаНаРасходованиеДенежныхСредств.ИзменитьОперациюПрочиеРасходыНаПрочаяВыдачаДСЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ЗаявкаНаРасходованиеДенежныхСредств";
	Обработчик.Комментарий = НСтр("ru='Изменяет в документах ""Заявка на расходование ДС"" операцию с ""Прочие расходы"" на ""Прочий расход"". 
    |До завершения работы обработчика обновления документы находятся в некорректном состоянии.'
    |;uk='Змінює в документах ""Заявка на витрачання ГК"" операцію з ""Інші витрати"" на ""Інша витрата"". 
    |До завершення роботи обробника оновлення документи знаходяться в некоректному стані.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
    Обработчик.РежимВыполнения = "Отложенно"; 
	Обработчик.Процедура = "Документы.ПоступлениеБезналичныхДенежныхСредств.УдалитьДублиДокументовОплатыВДругуюОрганизацию";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПоступлениеБезналичныхДенежныхСредств.УдалитьДублиДокументовОплатыВДругуюОрганизацию_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПоступлениеБезналичныхДенежныхСредств";
    
	Обработчик = Обработчики.Добавить(); 
    Обработчик.Версия = "3.2.1.36";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПоступлениеБезналичныхДенежныхСредств.СформироватьДеньгиВПутиПоПоступлениямСДругогоСчета";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПоступлениеБезналичныхДенежныхСредств.СформироватьДеньгиВПутиПоПоступлениямСДругогоСчета_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
    Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Формирование движений по регистру ""Денежные средства в пути"" по хоз. операции ""Поступление с другого счета"".
                                   |Пока работа обработчика не завершена, информация об остатках переводов в пути может быть некорректной.'
                                   |;uk='Формування рухів по регістру ""Грошові кошти в дорозі"" по госп. операції ""Надходження з іншого рахунку"".
                                   |Поки робота обробника не завершена, інформація про залишки переказів в дорозі може бути некоректною.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПоступлениеБезналичныхДенежныхСредств.ЗаполнитьРасшифровкуПлатежаДляДокументовПрочееПоступлениеДС";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПоступлениеБезналичныхДенежныхСредств.ЗаполнитьРасшифровкуПлатежаДляДокументовПрочееПоступлениеДСЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 3 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПоступлениеБезналичныхДенежныхСредств";
	Обработчик.Комментарий = НСтр("ru='Заполняет в документах ""Поступление безналичных ДС"" с операцией ""Прочее поступление"" табличную часть ""Расшифровка платежа"". 
    |До завершения работы обработчика обновления, документы находятся в некорректном состоянии.'
    |;uk='Заповнює в документах ""Надходження безготівкових ГК"" з операцією ""Інше надходження"" табличну частину ""Розшифровка платежу"". 
    |До завершення роботи обробника оновлення, документи знаходяться в некоректному стані.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.УдалитьДвиженияДенежныеСредстваПрочиеАктивыПассивы.ПеренестиДвиженияПоДокументуЗаявкаНаРасходованиеДенежныхСредств";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.УдалитьДвиженияДенежныеСредстваПрочиеАктивыПассивы.ПеренестиДвиженияПоДокументуЗаявкаНаРасходованиеДенежныхСредствЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Переносит движения документа ""Заявка на расходование ДС"" из регистра ""Движения Денежные средства - Прочие активы/пассивы"" в регистр ""Движения Денежные средства - Доходы/Расходы"". 
    |До завершения работы обработчика обновления движения документов находятся в некорректном состоянии.'
    |;uk='Переносить рухи документа ""Заявка на витрачання ГК"" з регістра ""Рухи Грошові кошти - Інші активи/пасиви"" у регістр ""Рухи Грошові кошти - Доходи/Витрати"". 
    |До завершення роботи обробника оновлення руху документів знаходяться в некоректному стані.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПриходныйКассовыйОрдер.ЗаполнитьРасшифровкуПлатежаДляДокументовПрочееПоступлениеДС";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПриходныйКассовыйОрдер.ЗаполнитьРасшифровкуПлатежаДляДокументовПрочееПоступлениеДСЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПриходныйКассовыйОрдер";
	Обработчик.Комментарий = НСтр("ru='Заполняет в документах ""Приходный кассовый ордер"" с операцией ""Прочее поступление"" табличную часть ""Расшифровка платежа"". 
    |До завершения работы обработчика обновления документы находятся в некорректном состоянии.'
    |;uk='Заповнює документи ""Прибутковий касовий ордер"" з операцією ""Інше надходження"" табличну частину ""Розшифровка платежу"". 
    |До завершення роботи обробника оновлення документи знаходяться в некоректному стані.'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.СписаниеЗадолженности.УстановитьОперациюСписаниеДебиторскойЗадолженности";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.СписаниеЗадолженности.УстановитьОперациюСписаниеДебиторскойЗадолженностиЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.СписаниеЗадолженности";
	Обработчик.Комментарий = НСтр("ru='Устанавливает в документах ""Списание задолженности"" операцию ""Списание дебиторской задолженности""
    |До завершения работы обработчика обновления документы находятся в некорректном состоянии.'
    |;uk='Встановлює в документах ""Списання заборгованості"" операцію ""Списання дебіторської заборгованості""
    |До завершення роботи обробника оновлення документи знаходяться в некоректному стані.'");

    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ЗаказПоставщику.ЗаполнитьСпособДоставкиПоУмолчанию";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаказПоставщику.ЗаполнитьСпособДоставкиПоУмолчаниюЗарегистрироватьКОбработке";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ЗаказПоставщику";
	Обработчик.Комментарий = НСтр("ru='Обновляются документы ""Заказ поставщику"":
    |- заполняется способ доставки по умолчанию ""Силами поставщика до нашего склада"".'
    |;uk='Оновлюються документи ""Замовлення постачальнику"":
    |- заповнюється спосіб доставки по умовчанню ""Силами постачальника до нашого складу"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПоступлениеТоваровУслуг.ЗаполнитьСпособДоставкиПоУмолчанию";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПоступлениеТоваровУслуг.ЗаполнитьСпособДоставкиПоУмолчаниюЗарегистрироватьКОбработке";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПоступлениеТоваровУслуг";
	Обработчик.Комментарий = НСтр("ru='Заполняет способ доставки по умолчанию ""Силами поставщика до нашего склада"".';uk='Заповнює спосіб доставки по умовчанню ""Силами постачальника до нашого складу"".'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.АвансовыйОтчет.ЗаполнитьНовыеРеквизиты";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.АвансовыйОтчет.ЗаполнитьНовыеРеквизитыДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.АвансовыйОтчет";
	Обработчик.Комментарий = НСтр("ru='Заполняет в авансовых отчетах статус ""Утвержден"" и другие реквизиты.';uk='Заповнює в авансових звітах статус ""Затверджено"" та інші реквізити.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.РасчетыСКлиентамиПоДокументам.ЗаменитьАналитикуУчетаПоПартнерамОчиститьЗаказы";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.РасчетыСКлиентамиПоДокументам.ЗаменитьАналитикуУчетаПоПартнерамОчиститьЗаказыДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "РегистрСведений.АналитикаУчетаПоПартнерам";
	Обработчик.Комментарий = НСтр("ru='Заменяет измерение ""Аналитика учета по партнерам"" с учетом договора.
    |Очищает движения по регистру накопления ""Расчеты с клиентами по документам"", где регистратором является заказ.'
    |;uk='Замінює вимір ""Аналітика обліку по партнерам"" з урахуванням договору.
    |Очищає рухи по регістру накопичення ""Розрахунки з клієнтами за документами"", де реєстратором є замовлення.'");
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.РеализацияУслугПрочихАктивов.ЗаменитьСсылкиЕдиницИзмерения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.РеализацияУслугПрочихАктивов.ЗаменитьСсылкиЕдиницИзмерения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.РеализацияУслугПрочихАктивов";
	Обработчик.Комментарий = НСтр("ru='Обновляется документ ""Реализация услуг и прочих активов"".';uk='Оновлюється документ ""Реалізація послуг і інших активів"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ДоверенностьВыданная.ЗаменитьСсылкиЕдиницИзмерения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ДоверенностьВыданная.ЗаменитьСсылкиЕдиницИзмерения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ДоверенностьВыданная";
	Обработчик.Комментарий = НСтр("ru='Обновляется документ ""Выданная доверенность"".';uk='Оновлюється документ ""Видана довіреність"".'");
    
    Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.НалоговаяНакладная.ЗаменитьСсылкиЕдиницИзмерения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.НалоговаяНакладная.ЗаменитьСсылкиЕдиницИзмерения_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.НалоговаяНакладная";
	Обработчик.Комментарий = НСтр("ru='Обновляется документ ""Налоговая накладная"".';uk='Оновлюється документ ""Налоговая накладная"".'");

    Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.Приложение2КНалоговойНакладной.ЗаменитьСсылкиЕдиницИзмерения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.Приложение2КНалоговойНакладной.ЗаменитьСсылкиЕдиницИзмерения_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.Приложение2КНалоговойНакладной";
	Обработчик.Комментарий = НСтр("ru='Обновляется документ ""Приложение 2 к налоговой накладной"".';uk='Оновлюється документ ""Додаток 2 до податкової накладної"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.КорректировкаНазначенияТоваров.ЗаполнитьВидОперацииПоУмолчанию";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.КорректировкаНазначенияТоваров.ЗаполнитьВидОперацииПоУмолчанию_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.КорректировкаНазначенияТоваров";
	Обработчик.Комментарий = НСтр("ru='Обновляются документы ""Корректировка назначения товаров"":
    |- заполняется вид операции.'
    |;uk='Оновлюються документи ""Коригування призначення товарів"":
    |- заповнюється вид операції.'");
    
 	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПрочиеДоходыРасходы.ЗаполнитьДатуОтражения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПрочиеДоходыРасходы.ЗаполнитьДатуОтражения_ОтметитьКОбработке";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПрочиеДоходыРасходы";
	Обработчик.Комментарий = НСтр("ru='Обновляется документ ""Прочие доходы и расходы"":
    |- заполнение нового реквизита табличной части ""Дата отражения""'
    |;uk='Оновлюється документ ""Інші доходи і витрати"":
    |- заповнення нового реквізиту табличній частині ""Дата відображення""'");

    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "ОбновлениеИнформационнойБазыУТ.ОбновитьКонтактнуюИнформациюДляСписков";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "ОбновлениеИнформационнойБазыУТ.ЗарегистироватьКОбработкеКонтактнуюИнформациюДляСписков";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Обновляет представление в поле агрегате ВидДляСписка для вывода контактной информации
    | в динамических списках и отчетах.'
    |;uk='Оновлює представлення в поле агрегаті ВидДляСписка для виведення контактної інформації
    |у динамічних списках і звітах.'");
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ЗаявкаНаВозвратТоваровОтКлиента.ОткатитьСтатусыУстановленныеИзСпискаИсправитьВариантОбеспеченияПриИспользованииЗаказовСоСкладаОтложенно";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаявкаНаВозвратТоваровОтКлиента.ОткатитьСтатусыУстановленныеИзСпискаИсправитьВариантОбеспеченияПриИспользованииЗаказовСоСкладаЗарегистрироватьДанныеДляКОбработке";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Исправляет ошибку несоответствия статуса и варианта обеспечения в документе ""Заявка на возврат товаров от клиента"".';uk='Виправляє помилку невідповідності статусу та способу забезпечення в документі ""Заявка на повернення товарів від клієнта"".'");
    
    
    
    Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.2";
    Обработчик.РежимВыполнения = "Отложенно";
    Обработчик.Процедура = "Документы.РеализацияТоваровУслуг.ПеренестиСерии10ВТЧТовары";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.РеализацияТоваровУслуг.ПеренестиСерии10ВТЧТовары_ЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь321;
    Обработчик.ПроцедураПроверки = "Документы.РеализацияТоваровУслуг.ПеренестиСерии10ВТЧТовары_ПроверитьДанныеОбновлены";
    Обработчик.БлокируемыеОбъекты = "Документ.ЗаказКлиента,Документ.ЗаявкаНаВозвратТоваровОтКлиента,Документ.РеализацияТоваровУслуг";
    Обработчик.Комментарий = НСтр("ru='Переносит серии с политикой ""При планировании отгрузки"" из табличной части ""Серии"" в табличную часть ""Товары"" в документах ""Реализация товаров и услуг"". До завершения работы обработчика обновления работа со старыми документами будет временно невозможна.';uk='Переносить серії з політикою ""При плануванні відвантаження"" з табличної частини ""Серії"" в табличну частину ""Товари"" в документах ""Реалізація товарів і послуг"". До завершення роботи обробника оновлення робота зі старими документами буде тимчасово неможлива.'");
    
    Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.2";
    Обработчик.РежимВыполнения = "Отложенно";
    Обработчик.Процедура = "Документы.СборкаТоваров.ПеренестиСерии10ВТЧТовары";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.СборкаТоваров.ПеренестиСерии10ВТЧТовары_ЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь321;
    Обработчик.ПроцедураПроверки = "Документы.СборкаТоваров.ПеренестиСерии10ВТЧТовары_ПроверитьДанныеОбновлены";
    Обработчик.БлокируемыеОбъекты = "Документ.ЗаказНаСборку,Документ.СборкаТоваров";
    Обработчик.Комментарий = НСтр("ru='Переносит серии с политикой ""При планировании отгрузки"" из табличной части ""Серии"" в табличную часть ""Товары"" в документах ""Сборка /разборка товаров"". До завершения работы обработчика обновления работа со старыми документами будет временно невозможна.';uk='Переносить серії з політикою ""При плануванні відвантаження"" з табличної частини ""Серії"" в табличну частину ""Товари"" в документах ""Складання /розбирання товарів"". До завершення роботи обробника оновлення робота зі старими документами буде тимчасово неможлива.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ВнутреннееПотреблениеТоваров.ЗаполнитьЗаказНаВнутреннееПотреблениеВСтрокахСверхЗаказаОтложенно";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ВнутреннееПотреблениеТоваров.ЗаполнитьЗаказНаВнутреннееПотреблениеВСтрокахСверхЗаказаДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ВнутреннееПотреблениеТоваров";
	Обработчик.Комментарий = НСтр("ru='Заполняет распоряжения в табличной части ""Товары"" в строках сверх заказа в документах ""Внутреннее потребление товаров"". До завершения работы обработчиков обновления работа со старыми документами будет временно невозможна.';uk='Заповнює розпорядження у табличній частині ""Товари"" у рядках понад замовлення в документах ""Внутрішнє споживання товарів"". До завершення роботи обробників оновлення робота зі старими документами буде тимчасово неможлива.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДвиженияКонтрагентДоходыРасходы.СформироватьДвиженияКонтрагентДоходыРасходы";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДвиженияКонтрагентДоходыРасходы.СформироватьДвиженияКонтрагентДоходыРасходыДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Формирует движения документов ""Аннулирование подарочных сертификатов"" по регистру накопления ""Движения ""Контрагент - Доходы\Расходы"""".';uk='Формує рухи документів ""Анулювання подарункових сертифікатів"" по регістру накопичення ""Рухи ""Контрагент - Доходи\Витрати"""".'");
    
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ВозвратТоваровПоставщику.ОчиститьСтатусыНакладныхОтложенно";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ВозвратТоваровПоставщику.ОчиститьСтатусыНакладныхОтложенноКОтработке";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ВозвратТоваровПоставщику";
	Обработчик.Комментарий = НСтр("ru='Очищает статусы в документах ""Возврат товаров поставщику""';uk='Очищує статуси в документах ""Повернення товарів постачальнику""'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПеремещениеТоваров.ОчиститьСтатусКОтгрузкеОтложенно";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПеремещениеТоваров.ОчиститьСтатусКОтгрузкеОтметитьКОтработке";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПеремещениеТоваров";
	Обработчик.Комментарий = НСтр("ru='Удаляет статус ""К отгрузке"" в документах ""Перемещение товаров"".';uk='Видаляє статус ""До відвантаження"" в документах ""Переміщення товарів"".'");
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПриходныйКассовыйОрдер.ИзменитьОперациюСторнированиеПрочихРасходовНаПрочееПоступлениеДС";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПриходныйКассовыйОрдер.ИзменитьОперациюСторнированиеПрочихРасходовНаПрочееПоступлениеДСЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПриходныйКассовыйОрдер";
	Обработчик.Комментарий = НСтр("ru='Изменяет в документах ""Приходный кассовый ордер"" операцию с ""Сторнирование прочих расходов"" на ""Прочее поступление"". 
    |До завершения работы обработчика обновления документы находятся в некорректном состоянии.'
    |;uk='Змінює в документах ""Прибутковий касовий ордер"" операцію з ""Сторнування інших витрат"" на ""Інше надходження"". 
    |До завершення роботи обробника оновлення документи знаходяться в некоректному стані.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.УдалитьДвиженияДенежныеСредстваПрочиеАктивыПассивы.ПеренестиДвиженияПоДокументуПоступлениеБезналичныхДенежныхСредств";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.УдалитьДвиженияДенежныеСредстваПрочиеАктивыПассивы.ПеренестиДвиженияПоДокументуПоступлениеБезналичныхДенежныхСредствЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Переносит движения документа ""Поступление безналичных ДС"" из регистра ""Движения Денежные средства - Прочие активы/пассивы"" в регистр ""Движения Денежные средства - Доходы/Расходы"". 
    |До завершения работы обработчика обновления движения документов находятся в некорректном состоянии.'
    |;uk='Переносить рухи документа ""Надходження безготівкових ГК"" з регістра ""Рухи Грошові кошти - Інші активи/пасиви"" регістр ""Рухи Грошові кошти - Доходи/Витрати"". 
    |До завершення роботи обробника оновлення рухи документів знаходяться в некоректному стані.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.СписаниеЗадолженности.УстановитьОперациюСписаниеКредиторскойЗадолженности";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.СписаниеЗадолженности.УстановитьОперациюСписаниеКредиторскойЗадолженностиЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.СписаниеЗадолженности";
	Обработчик.Комментарий = НСтр("ru='Устанавливает в документах ""Списание задолженности"" операцию ""Списание кредиторской задолженности"". 
    |До завершения работы обработчика обновления документы находятся в некорректном состоянии.'
    |;uk='Встановлює в документах ""Списання заборгованості"" операцію ""Списання кредиторської заборгованості"". 
    |До завершення роботи обробника оновлення документи знаходяться в некоректному стані.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ЗаявкаНаРасходованиеДенежныхСредств.ПеренестиАналитикиПеречисленияНалогов";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаявкаНаРасходованиеДенежныхСредств.ПеренестиАналитикиПеречисленияНалоговДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ЗаявкаНаРасходованиеДенежныхСредств";
	Обработчик.Комментарий = НСтр("ru='Переносит реквизиты перечисления налогов из шапки документа в табличную часть.';uk='Переносить реквізити перерахування податків з шапки документа в табличну частину.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПриходныйОрдерНаТовары.ОбработатьДанныеДляПереходаНаВерсию_3_2_2";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПриходныйОрдерНаТовары.ЗарегистрироватьДанныеКОбработкеДляПереходаНаВерсию_3_2_2";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПриходныйОрдерНаТовары";
	Обработчик.Комментарий = НСтр("ru='Обновляются документы ""Приходный ордер на товары"":
    |- выполняется замена ссылок на документы ""Прочее оприходование товаров"" с операцией ""Возврат из производства"";
    |- переносятся серии в табличную часть ""Товары"".'
    |;uk='Оновлюються документи ""Прибутковий ордер на товари"":
    |- виконується заміна посилань на документи ""Інше оприбуткування товарів"" з операцією ""Повернення з виробництва"";
    |- переносяться серії в табличну частину ""Товари"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.РасчетыСПоставщикамиПоДокументам.ЗаменитьАналитикуУчетаПоПартнерамОчиститьЗаказы";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.РасчетыСПоставщикамиПоДокументам.ЗаменитьАналитикуУчетаПоПартнерамОчиститьЗаказыДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "РегистрСведений.АналитикаУчетаПоПартнерам";
	Обработчик.Комментарий = НСтр("ru='Заменяет измерение ""Аналитика учета по партнерам"" с учетом договора.
    |Удаляет движения регистра, где расчетным документом является ""Заказ поставщику"".'
    |;uk='Замінює вимір ""Аналітика обліку по партнерам"" з урахуванням договору.
    |Видаляє рухи регістру, де розрахунковим документом є ""Замовлення постачальнику"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.СписаниеБезналичныхДенежныхСредств.ЗаполнитьТипСуммыДляКредитовДепозитовЗаймов";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.СписаниеБезналичныхДенежныхСредств.ЗаполнитьТипСуммыДляКредитовДепозитовЗаймовДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ДенежныеСредстваСервер.ТипСуммКредитовДепозитовЗаймовЗаполнен";
	Обработчик.БлокируемыеОбъекты = "Документ.СписаниеБезналичныхДенежныхСредств,Справочник.ДоговорыКредитовИДепозитов";
	Обработчик.Комментарий = НСтр("ru='Заполняется реквизит ""Тип суммы"" в документе ""Списание безналичных ДС""
    |по хозяйственным операциям кредитов, депозитов, займов.'
    |;uk='Заповнюється реквізит ""Тип суми"" в документі ""Списання безготівкових ГК""
    |за господарськими операціями кредитів, депозитів, позик.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ВводОстатков.ОбновитьДенежныеСредстваУПодотчетныхЛиц";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ВводОстатков.ОбновитьДенежныеСредстваУПодотчетныхЛицДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ВводОстатков";
	Обработчик.Комментарий = НСтр("ru='Заменяет в документах ввода остатков тип операции для денежных средств у подотчетных лиц.';uk='Замінює в документах введення залишків тип операції грошових коштів у підзвітних осіб.'");
    
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.3";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.УдалитьДвиженияДенежныеСредстваПрочиеАктивыПассивы.ПеренестиДвиженияПоДокументуПриходныйКассовыйОрдер";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.УдалитьДвиженияДенежныеСредстваПрочиеАктивыПассивы.ПеренестиДвиженияПоДокументуПриходныйКассовыйОрдерЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 3 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Переносит движения документа ""Приходный кассовый ордер"" из регистра ""Движения Денежные средства - Прочие активы/пассивы"" в регистр ""Движения Денежные средства - Доходы/Расходы"". 
    |До завершения работы обработчика обновления движения документов находятся в некорректном состоянии.'
    |;uk='Переносить рухи документа ""Прибутковий касовий ордер"" з регістра Рухи Грошові кошти - Інші активи/пасиви"" регістр ""Рухи кошти - Доходи/Витрати"". 
    |До завершення роботи обробника оновлення рухи документів знаходяться в некоректному стані.'");
    
    Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.3";
    Обработчик.РежимВыполнения = "Отложенно";
    Обработчик.Процедура = "Документы.РеализацияТоваровУслуг.ЗаполнитьСамовывозДляНакладныхПоЗаказу";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.РеализацияТоваровУслуг.ЗаполнитьСамовывозДляНакладныхПоЗаказуКОтработке";
    Обработчик.ОчередьОтложеннойОбработки = 3 + МаксОчередь321;
    Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
    Обработчик.БлокируемыеОбъекты = "Документ.РеализацияТоваровУслуг";
    Обработчик.Комментарий = НСтр("ru='Заполняет способ доставки по умолчанию (""Самовывоз"") в документах ""Реализация товаров и услуг"", оформленных по заказам.';uk='Заповнює спосіб доставки по умовчанню (""Самовивіз"") в документах ""Реалізація товарів і послуг"", які оформлені за замовленнями.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.3";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.СписаниеБезналичныхДенежныхСредств.ЗаполнитьДатуАвансовогоОтчета";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.СписаниеБезналичныхДенежныхСредств.ЗаполнитьДатуАвансовогоОтчетаДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 3 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.СписаниеБезналичныхДенежныхСредств";
	Обработчик.Комментарий = НСтр("ru='Заполняет реквизит ""Дата авансового отчета"".';uk='Заповнює реквізит ""Дата авансового звіту"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.3";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ЗаявкаНаРасходованиеДенежныхСредств.ЗаполнитьДатуАвансовогоОтчета";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаявкаНаРасходованиеДенежныхСредств.ЗаполнитьДатуАвансовогоОтчетаДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 3 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ЗаявкаНаРасходованиеДенежныхСредств";
	Обработчик.Комментарий = НСтр("ru='Заполняет реквизит ""Дата авансового отчета"" в документе ""Заявка на расходование денежных средств"".';uk='Заповнює реквізит ""Дата авансового звіту"" у документі ""Заявка на витрачання грошових коштів"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.3";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыСведений.ЗаданияКРаспределениюРасчетовСКлиентами.ЗаменитьАналитикуУчетаПоПартнерам";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.ЗаданияКРаспределениюРасчетовСКлиентами.ЗаменитьАналитикуУчетаПоПартнерам_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 3 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "РегистрСведений.ЗаданияКРаспределениюРасчетовСКлиентами";
	Обработчик.Комментарий = НСтр("ru='Заменяет измерение ""Аналитика учета по партнерам"" с учетом договора.';uk='Замінює вимір ""Аналітика обліку за партнерам"" з урахуванням договору.'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.3";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыСведений.ЗаданияКРаспределениюРасчетовСПоставщиками.ЗаменитьАналитикуУчетаПоПартнерам";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.ЗаданияКРаспределениюРасчетовСПоставщиками.ЗаменитьАналитикуУчетаПоПартнерам_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 3 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "РегистрСведений.ЗаданияКРаспределениюРасчетовСПоставщиками";
	Обработчик.Комментарий = НСтр("ru='Заменяет измерение ""Аналитика учета по партнерам"" с учетом договора.';uk='Замінює вимір ""Аналітика обліку за партнерам"" з урахуванням договору.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.3";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыСведений.ЗаданияКФормированиюИсходящихНалоговыхДокументов.ЗаменитьАналитикуУчетаПоПартнерам";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.ЗаданияКФормированиюИсходящихНалоговыхДокументов.ЗаменитьАналитикуУчетаПоПартнерам_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 3 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "РегистрСведений.ЗаданияКФормированиюИсходящихНалоговыхДокументов";
	Обработчик.Комментарий = НСтр("ru='Заменяет измерение ""Аналитика учета по партнерам"" с учетом договора.';uk='Замінює вимір ""Аналітика обліку за партнерам"" з урахуванням договору.'");
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.3";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.РасходныйКассовыйОрдер.ЗаполнитьТипСуммыДляКредитовДепозитовЗаймов";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.РасходныйКассовыйОрдер.ЗаполнитьТипСуммыДляКредитовДепозитовЗаймовДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 3 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ДенежныеСредстваСервер.ТипСуммКредитовДепозитовЗаймовЗаполнен";
	Обработчик.БлокируемыеОбъекты = "Документ.РасходныйКассовыйОрдер,Справочник.ДоговорыКредитовИДепозитов";
	Обработчик.Комментарий = НСтр("ru='Заполняется реквизит ""Тип суммы"" в документе ""Расходный кассовый ордер""
    |по хозяйственным операциям кредитов, депозитов, займов.'
    |;uk='Заповнюється реквізит ""Тип суми"" в документі ""Видатковий касовий ордер""
    |за господарськими операціями кредитів, депозитів, позик.'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.3";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПриходныйКассовыйОрдер.ЗаполнитьТипСуммыДляКредитовДепозитовЗаймов";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПриходныйКассовыйОрдер.ЗаполнитьТипСуммыДляКредитовДепозитовЗаймовДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 3 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ДенежныеСредстваСервер.ТипСуммКредитовДепозитовЗаймовЗаполнен";
	Обработчик.БлокируемыеОбъекты = "Документ.ПриходныйКассовыйОрдер,Справочник.ДоговорыКредитовИДепозитов";
	Обработчик.Комментарий = НСтр("ru='Заполняется реквизит ""Тип суммы"" в документе ""Приходный кассовый ордер""
    |по хозяйственным операциям кредитов, депозитов, займов.'
    |;uk='Заповнюється реквізит ""Тип суми"" документ ""Прибутковий касовий ордер""
    |за господарськими операціями кредитів, депозитів, позик.'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.3";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПоступлениеБезналичныхДенежныхСредств.ЗаполнитьТипСуммыДляКредитовДепозитовЗаймов";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПоступлениеБезналичныхДенежныхСредств.ЗаполнитьТипСуммыДляКредитовДепозитовЗаймовДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 4 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ДенежныеСредстваСервер.ТипСуммКредитовДепозитовЗаймовЗаполнен";
	Обработчик.БлокируемыеОбъекты = "Документ.ПоступлениеБезналичныхДенежныхСредств,Справочник.ДоговорыКредитовИДепозитов";
	Обработчик.Комментарий = НСтр("ru='Заполняется  реквизит ""Тип суммы"" в документе ""Поступление безналичных ДС"" 
    |по хозяйственным операциям кредитов, депозитов, займов.'
    |;uk='Заповнюється реквізит ""Тип суми"" в документі ""Надходження безготівкових ГК"" 
    |за господарськими операціями кредитів, депозитів, позик.'");
    
    
    Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.4";
    Обработчик.РежимВыполнения = "Отложенно";
    Обработчик.Процедура = "Документы.РеализацияТоваровУслуг.ПеренестиРасхожденияВАкты";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.РеализацияТоваровУслуг.ДанныеДляОбновленияПеренестиРасхожденияВАкты";
    Обработчик.ОчередьОтложеннойОбработки = 4 + МаксОчередь321;
    Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
    Обработчик.БлокируемыеОбъекты = "Документ.АктОРасхожденияхПослеОтгрузки,Документ.РеализацияТоваровУслуг";
    Обработчик.ЗапускатьТолькоВГлавномУзле = Истина;
    Обработчик.Комментарий = НСтр("ru='Переносит расхождения из  документа ""Реализация товаров и услуг"" в документ ""Акт о расхождениях после отгрузки"".';uk='Переносить розбіжності з документа ""Реалізація товарів і послуг"" в документ ""Акт про розбіжності після відвантаження"".'");
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.4";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ЗаявкаНаРасходованиеДенежныхСредств.ЗаполнитьРасшифровкуПлатежаДляДокументовПрочаяВыдачаДС";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаявкаНаРасходованиеДенежныхСредств.ЗаполнитьРасшифровкуПлатежаДляДокументовПрочаяВыдачаДСЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 4 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ЗаявкаНаРасходованиеДенежныхСредств";
	Обработчик.Комментарий = НСтр("ru='Заполняет в документах ""Заявка на расходование ДС"" с операцией ""Прочий расход"" табличную часть ""Расшифровка платежа"". 
    |До завершения работы обработчика обновления, документы находятся в некорректном состоянии.'
    |;uk='Заповнює у документах ""Заявка на витрачання ГК"" з операцією ""Інший витрата"" табличну частину ""Розшифровка платежу"". 
    |До завершення роботи обробника оновлення, документи знаходяться в некоректному стані.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.4";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.УдалитьДвиженияДенежныеСредстваПрочиеАктивыПассивы.ПеренестиДвиженияПоДокументуРасходныйКассовыйОрдер";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.УдалитьДвиженияДенежныеСредстваПрочиеАктивыПассивы.ПеренестиДвиженияПоДокументуРасходныйКассовыйОрдерЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 4 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Переносит движения документа ""Расходный кассовый ордер"" из регистра ""Движения Денежные средства - Прочие активы/пассивы"" в регистр ""Движения Денежные средства - Доходы/Расходы"". До завершения работы обработчика обновления, движения документов находятся в некорректном состоянии.';uk='Переносить рухи документа ""Видатковий касовий ордер"" з регістра ""Рухи Грошові кошти - Інші активи/пасиви"" регістр ""Рухи Грошові кошти - Доходи/Витрати"". До завершення роботи обробника оновлення, рухи документів знаходяться в некоректному стані.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.4";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПоступлениеБезналичныхДенежныхСредств.ИзменитьОперациюПрочиеДоходыНаПрочееПоступлениеДС";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПоступлениеБезналичныхДенежныхСредств.ИзменитьОперациюПрочиеДоходыНаПрочееПоступлениеДСЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 5 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПоступлениеБезналичныхДенежныхСредств";
	Обработчик.Комментарий = НСтр("ru='Изменяет в документах ""Поступление безналичных ДС"" операцию с ""Прочие доходы"" на ""Прочее поступление"". 
    |До завершения работы обработчика обновления документы находятся в некорректном состоянии.'
    |;uk='Змінює в документах ""Надходження безготівкових ГК"" операцію ""Інші доходи"" на ""Інше надходження"". 
    |До завершення роботи обробника оновлення документи знаходяться в некоректному стані.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.4";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.СписаниеБезналичныхДенежныхСредств.ЗаполнитьРасшифровкуПлатежаДляДокументовПрочаяВыдачаДС";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.СписаниеБезналичныхДенежныхСредств.ЗаполнитьРасшифровкуПлатежаДляДокументовПрочаяВыдачаДСЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 4 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.СписаниеБезналичныхДенежныхСредств";
	Обработчик.Комментарий = НСтр("ru='Заполняет в документах ""Списание безналичных ДС"" с операцией ""Прочий расход"" табличную часть ""Расшифровка платежа"". 
    |До завершения работы обработчика обновления документы находятся в некорректном состоянии.'
    |;uk='Заповнює в документах ""Списання безготівкових ГК"" з операцією ""Інший витрата"" табличну частину ""Розшифровка платежу"". 
    |До завершення роботи обробника оновлення документи знаходяться в некоректному стані.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.4";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПриходныйКассовыйОрдер.ИзменитьОперациюПрочиеДоходыНаПрочееПоступлениеДС";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПриходныйКассовыйОрдер.ИзменитьОперациюПрочиеДоходыНаПрочееПоступлениеДСЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 4 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПриходныйКассовыйОрдер";
	Обработчик.Комментарий = НСтр("ru='Изменяет в документах ""Приходный кассовый ордер"" операцию с ""Прочие доходы"" на ""Прочее поступление"". 
    |До завершения работы обработчика обновления документы находятся в некорректном состоянии.'
    |;uk='Змінює в документах ""Прибутковий касовий ордер"" операцію ""Інші доходи"" на ""Інше надходження"". 
    |До завершення роботи обробника оновлення документи знаходяться в некоректному стані.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.4";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.РасходныйКассовыйОрдер.ЗаполнитьДатуАвансовогоОтчета";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.РасходныйКассовыйОрдер.ЗаполнитьДатуАвансовогоОтчетаДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 4 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.РасходныйКассовыйОрдер";
	Обработчик.Комментарий = НСтр("ru='Заполняет реквизит ""Дата авансового отчета"".';uk='Заповнює реквізит ""Дата авансового звіту"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.5";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПеремещениеТоваров.ПеренестиРасхожденияВАкты";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПеремещениеТоваров.ПеренестиРасхожденияВАктыОтметитьКОбработке";
    Обработчик.ОчередьОтложеннойОбработки = 5 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.АктОРасхожденияхПослеПеремещения,Документ.ПеремещениеТоваров";
	Обработчик.ЗапускатьТолькоВГлавномУзле = Истина;
	Обработчик.Комментарий = НСтр("ru='Переносит информацию о расхождениях по перемещениям из документов ""Перемещение товаров"" в ""Акт о расхождениях после перемещения"". До завершения работы обработчика обновления  работа с документом ""Перемещение товаров"" будет невозможна.';uk='Переносить інформацію про розбіжності за переміщенням з документів ""Переміщення товарів"" в ""Акт про розбіжності після переміщення"". До завершення роботи обробника оновлення робота з документом ""Переміщення товарів"" буде неможлива.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.5";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.РеализацияТоваровУслуг.ОчиститьСтатусКОтгрузкеОтложенно";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.РеализацияТоваровУслуг.ОчиститьСтатусКОтгрузкеОтметитьКОтработке";
    Обработчик.ОчередьОтложеннойОбработки = 5 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.РеализацияТоваровУслуг";
	Обработчик.Комментарий = НСтр("ru='Удаляет статус ""К отгрузке"" в документах ""Реализация товаров и услуг"".';uk='Видаляє статус ""До відвантаження"" в документах ""Реалізація товарів і послуг"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.5";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.УдалитьДвиженияДенежныеСредстваПрочиеАктивыПассивы.ПеренестиДвиженияПоДокументуСписаниеБезналичныхДенежныхСредств";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.УдалитьДвиженияДенежныеСредстваПрочиеАктивыПассивы.ПеренестиДвиженияПоДокументуСписаниеБезналичныхДенежныхСредствЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 5 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Переносит движения документа ""Списание безналичных ДС"" из регистра ""Движения Денежные средства - Прочие активы/пассивы"" в регистр ""Движения Денежные средства - Доходы/Расходы"". 
    |До завершения работы обработчика обновления движения документов находятся в некорректном состоянии.'
    |;uk='Переносить рухи документа ""Списання безготівкових ГК"" з регістра Рухи Грошові кошти - Інші активи/пасиви"" у регістр ""Рухи кошти - Доходи/Витрати"". 
    |До завершення роботи обробника оновлення рухи документів знаходяться в некоректному стані.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.5";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.СписаниеБезналичныхДенежныхСредств.ИзменитьОперациюПрочиеРасходыНаПрочаяВыдачаДС";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.СписаниеБезналичныхДенежныхСредств.ИзменитьОперациюПрочиеРасходыНаПрочаяВыдачаДСЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 5 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.СписаниеБезналичныхДенежныхСредств";
	Обработчик.Комментарий = НСтр("ru='Изменяет в документах ""Списание безналичных ДС"" операцию с ""Прочие расходы"" на ""Прочий расход"". 
    |До завершения работы обработчика обновления документы находятся в некорректном состоянии.'
    |;uk='Змінює в документах ""Списання безготівкових ГК"" операцію ""Інші витрати"" на ""Інші витрати"". 
    |До завершення роботи обробника оновлення документи знаходяться в некоректному стані.'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.5";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.РасходныйКассовыйОрдер.ИзменитьОперациюПрочиеРасходыНаПрочаяВыдачаДС";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.РасходныйКассовыйОрдер.ИзменитьОперациюПрочиеРасходыНаПрочаяВыдачаДСЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 5 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.РасходныйКассовыйОрдер";
	Обработчик.Комментарий = НСтр("ru='Изменяет в документах ""Расходный кассовый ордер"" операцию с ""Прочие расходы"" на ""Прочий расход"". 
    |До завершения работы обработчика обновления документы находятся в некорректном состоянии.'
    |;uk='Змінює в документах ""Видатковий касовий ордер"" операцію ""Інші витрати"" на ""Інші витрати"". 
    |До завершення роботи обробника оновлення документи знаходяться в некоректному стані.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.6";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ВозвратТоваровПоставщику.ПеренестиРасхожденияВАкты";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ВозвратТоваровПоставщику.ДанныеДляОбновленияПеренестиРасхожденияВАкты";
    Обработчик.ОчередьОтложеннойОбработки = 6 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ВозвратТоваровПоставщику";
	Обработчик.ЗапускатьТолькоВГлавномУзле = Истина;
	Обработчик.Комментарий = НСтр("ru='Переносит расхождения из документа ""Возврат товаров поставщику"" в документ ""Акт о расхождениях после отгрузки"".';uk='Переносить розбіжності з документа ""Повернення товарів постачальнику"" до документу ""Акт про розбіжності після відвантаження"".'");
    
    Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.6";
    Обработчик.РежимВыполнения = "Отложенно";
    Обработчик.Процедура = "Документы.ЗаказКлиента.ЗаполнитьСерииПоНакладнымОтложенно";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаказКлиента.ЗаполнитьСерииПоНакладнымЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 6 + МаксОчередь321;
    Обработчик.ПроцедураПроверки = "Документы.ЗаказКлиента.ЗаполнитьСерииПоНакладнымПроверитьДанныеОбновлены";
    Обработчик.БлокируемыеОбъекты = "Документ.ЗаказКлиента,Документ.РеализацияТоваровУслуг";
    Обработчик.Комментарий = НСтр("ru='Переносит серии из документов ""Реализация товаров и услуг"" в связанные документы ""Заказ клиента"".  До завершения работы обработчика обновления работа со старыми заказами будет временно невозможна.';uk='Переносить серії з документів ""Реалізація товарів і послуг"" зв''язані документи ""Замовлення клієнта"". До завершення роботи обробника оновлення робота зі старими замовленнями буде тимчасово неможлива.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.6";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ЗаявкаНаВозвратТоваровОтКлиента.ЗаполнитьСерииПоНакладнымОтложенно";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаявкаНаВозвратТоваровОтКлиента.ЗаполнитьСерииПоНакладнымЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 6 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "Документы.ЗаявкаНаВозвратТоваровОтКлиента.ЗаполнитьСерииПоНакладнымПроверитьДанныеОбновлены";
	Обработчик.БлокируемыеОбъекты = "Документ.ЗаявкаНаВозвратТоваровОтКлиента,Документ.РеализацияТоваровУслуг";
	Обработчик.Комментарий = НСтр("ru='Переносит серии из документов ""Реализация товаров и услуг"" в связанные документы ""Заявка на возврат товаров от клиента"". До завершения работы обработчика обновления работа со старыми заказами будет временно невозможна.';uk='Переносить серії з документів ""Реалізація товарів і послуг"" зв''язані документи ""Заявка на повернення товарів від клієнта"". До завершення роботи обробника оновлення робота зі старими замовленнями буде тимчасово неможлива.'");
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.6";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыСведений.СуммыДокументовВВалютеРегл.ОбновитьДвиженияРеализацияТоваровУслуг";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.СуммыДокументовВВалютеРегл.ОбновитьДвиженияРеализацияТоваровУслуг_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 6 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Перепроводит документы по регистру сведений ""Суммы документов в валюте регл"".';uk='Перепроводит документи по регістрі відомостей ""Суми документів в валюті регл"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.6";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПеремещениеТоваров.ЗаполнитьСамовывозДляНакладныхПоЗаказу";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПеремещениеТоваров.ЗаполнитьСамовывозДляНакладныхПоЗаказуКОтработке";
    Обработчик.ОчередьОтложеннойОбработки = 6 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПеремещениеТоваров";
	Обработчик.Комментарий = НСтр("ru='Заполняет способ доставки по умолчанию (""Самовывоз"") в документах ""Перемещение товаров"",  оформленных по заказам.';uk='Заповнює спосіб доставки по умовчанню (""Самовивіз"") в документах ""Переміщення товарів"", які оформлені за замовленнями.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.6";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.СписаниеБезналичныхДенежныхСредств.ПеренестиАналитикиПеречисленияНалогов";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.СписаниеБезналичныхДенежныхСредств.ПеренестиАналитикиПеречисленияНалоговДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 6 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.СписаниеБезналичныхДенежныхСредств";
	Обработчик.Комментарий = НСтр("ru='Переносит реквизиты перечисления налогов из шапки документа в табличную часть.';uk='Переносить реквізити перерахування податків з шапки документа в табличну частину.'");
    
    
    Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.7";
    Обработчик.РежимВыполнения = "Отложенно";
    Обработчик.Процедура = "Документы.ЗаказНаПеремещение.ЗаполнитьСерииПоНакладнымОтложенно";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаказНаПеремещение.ЗаполнитьСерииПоНакладнымЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 7 + МаксОчередь321;
    Обработчик.ПроцедураПроверки = "Документы.ЗаказНаПеремещение.ЗаполнитьСерииПоНакладнымПроверитьДанныеОбновлены";
    Обработчик.БлокируемыеОбъекты = "Документ.ЗаказНаПеремещение,Документ.ПеремещениеТоваров";
    Обработчик.Комментарий = НСтр("ru='Переносит серии из документов ""Перемещение товаров"" в связанные документы ""Заказ на перемещение товаров"". До завершения работы обработчика обновления работа со старыми заказами будет временно невозможна.';uk='Переносить серії з документів ""Переміщення товарів"" зв''язані документи ""Замовлення на переміщення товарів"". До завершення роботи обробника оновлення робота зі старими замовленнями буде тимчасово неможлива.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.7";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ВозвратТоваровПоставщику.ЗаполнитьСпособДоставкиСамовывозОтложенно";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ВозвратТоваровПоставщику.ЗаполнитьСпособДоставкиСамовывозОтложенноЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 7 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ВозвратТоваровПоставщику";
	Обработчик.Комментарий = НСтр("ru='Заполняет новый реквизит ""Способ доставки"" значением ""Самовывоз"" в документах ""Возврат товаров поставщику"".';uk='Заповнює новий реквізит ""Спосіб доставки"" значенням ""Самовивіз"" в документах ""Повернення товарів постачальнику"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.7";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ЗаказКлиента.ЗаполнитьДатуОтгрузкиВСтатусеНесогласованОтложенно";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаказКлиента.ЗаполнитьДатуОтгрузкиВСтатусеНесогласованЗарегистрироватьДанныеДляКОбработке";
    Обработчик.ОчередьОтложеннойОбработки = 7 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ЗаказКлиента";
	Обработчик.Комментарий = НСтр("ru='Заполняет дату отгрузки в документах ""Заказ клиента"" в статусе ""На согласовании"" согласно гарантированному сроку отгрузки по основному способу обеспечения.';uk='Заповнює дату відвантаження в документах ""Замовлення клієнта"" в статус ""На погодженні"" згідно гарантованого терміну відвантаження за основним способом забезпечення.'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.7";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ЗаявкаНаВозвратТоваровОтКлиента.ЗаполнитьДатуОтгрузкиВСтатусеНесогласованаКВозвратуОтложенно";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаявкаНаВозвратТоваровОтКлиента.ЗаполнитьДатуОтгрузкиВСтатусеНесогласованаКВозвратуЗарегистрироватьДанныеДляКОбработке";
    Обработчик.ОчередьОтложеннойОбработки = 7 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ЗаявкаНаВозвратТоваровОтКлиента";
	Обработчик.Комментарий = НСтр("ru='Заполняет дату отгрузки в документах ""Заявка на возврат товаров от клиента"" в статусе ""На согласовании"" и ""К возврату"" согласно гарантированному сроку отгрузки по основному способу обеспечения.';uk='Заповнює дату відвантаження в документах ""Заявка на повернення товарів від клієнта"" в статус ""На погодженні"" та ""До повернення"" згідно гарантованого терміну відвантаження за основним способом забезпечення.'");
    
    
    Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.8";
    Обработчик.РежимВыполнения = "Отложенно";
    Обработчик.Процедура = "Документы.СборкаТоваров.ПеренестиРасхожденияВКорректировкиЗаписейРегистровОтложенно";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.СборкаТоваров.ПеренестиРасхожденияВКорректировкиЗаписейРегистровЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 8 + МаксОчередь321;
    Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
    Обработчик.БлокируемыеОбъекты = "Документ.СборкаТоваров";
    Обработчик.ЗапускатьТолькоВГлавномУзле = Истина;
    Обработчик.Комментарий = НСтр("ru='Переносит данные по расхождениям из документа ""Сборка/разборка товаров"" в  документ ""Корректировки регистров"". До выполнения переноса работа с документами будет невозможна.';uk='Переносить дані щодо розбіжностей з документа ""Збирання/розбирання товарів"" у документ ""Коригування регістрів"". До виконання переносу робота з документами буде неможлива.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.8";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ЗаказНаПеремещение.ЗаполнитьСпособДоставки";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаказНаПеремещение.ЗаполнитьСпособДоставки_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 8 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ЗаказНаПеремещение";
	Обработчик.Комментарий = НСтр("ru='Обновляет документы ""Заказ на перемещение"":
    |- Заполняет новый реквизит ""Способ доставки"" значением ""Самовывоз"".'
    |;uk='Оновлює документи ""Замовлення на переміщення"":
    |- Заповнює новий реквізит ""Спосіб доставки"" значенням ""Самовивіз"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.8";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПриходныйКассовыйОрдер.ЗаполнитьВладельцаОбъектаРасчетаВТабличнойЧасти";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПриходныйКассовыйОрдер.ЗаполнитьВладельцаОбъектаРасчетаВТабличнойЧастиДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 8 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПриходныйКассовыйОрдер";
	Обработчик.Комментарий = НСтр("ru='Заполняет новый реквизит ""Организация"" в табличной части ""Расшифровка платежа"" документа ""Приходный кассовый ордер"".';uk='Заповнює новий реквізит ""Організація"" в табличній частині ""Розшифровка платежу"" документа ""Прибутковий касовий ордер"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.8";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПоступлениеБезналичныхДенежныхСредств.ЗаполнитьВладельцаОбъектаРасчетаВТабличнойЧасти";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПоступлениеБезналичныхДенежныхСредств.ЗаполнитьВладельцаОбъектаРасчетаВТабличнойЧастиДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 8 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПоступлениеБезналичныхДенежныхСредств";
	Обработчик.Комментарий = НСтр("ru='Заполняет новый реквизит ""Организация"" в табличной части ""Расшифровка платежа"" документа ""Поступление безналичных ДС"".';uk='Заповнює новий реквізит ""Організація"" в табличній частині ""Розшифровка платежу"" документа ""Надходження безготівкових ГК"".'");
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.8";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ЗаказКлиента.ОткатитьСтатусыУстановленныеИзСпискаИсправитьВариантОбеспеченияПриИспользованииЗаказовСоСкладаОтложенно";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаказКлиента.ОткатитьСтатусыУстановленныеИзСпискаИсправитьВариантОбеспеченияПриИспользованииЗаказовСоСкладаЗарегистрироватьДанныеДляКОбработке";
    Обработчик.ОчередьОтложеннойОбработки = 8 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Исправляет ошибку несоответствия статуса и варианта обеспечения в документе ""Заказ клиента"".';uk='Виправляє помилку невідповідності статусу та способу забезпечення в документі ""Замовлення клієнта"".'");
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.9";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ЗаказНаСборку.РазборкаРазбитьСтрокиТЧПоНакладнымССериями";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаказНаСборку.РазборкаРазбитьСтрокиТЧПоНакладнымССериямиЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 9 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "Документы.ЗаказНаСборку.ЗаполнитьСерииПоНакладнымПроверитьДанныеОбновлены";
	Обработчик.БлокируемыеОбъекты = "Документ.ЗаказНаСборку,Документ.СборкаТоваров";
	Обработчик.Комментарий = НСтр("ru='Разбивает строки табличной части ""Товары"" документов ""Заказ на сборку/разборку"", если в связанной накладной после переноса серий изменились коды строк в табличной части ""Товары"", Из накладной переносятся новые коды строк. До завершения работы обработчика обновления 
    |работа со старыми заказами временно невозможна.'
    |;uk='Розбиває рядок табличної частини ""Товари"" документів ""Замовлення на збирання/розбирання"", якщо пов''язаної накладної після перенесення серій змінилися коди рядків у табличній частині ""Товари"", З накладної переносяться нові коди рядків. До завершення роботи обробника оновлення 
    |робота зі старими замовленнями тимчасово неможлива.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.9";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ВнутреннееПотреблениеТоваров.ПеренестиРасхожденияВКорректировкиЗаписейРегистровОтложенно";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ВнутреннееПотреблениеТоваров.ПеренестиРасхожденияВКорректировкиЗаписейРегистровЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 9 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ВнутреннееПотреблениеТоваров";
	Обработчик.ЗапускатьТолькоВГлавномУзле = Истина;
	Обработчик.Комментарий = НСтр("ru='Переносит данные по расхождениям из документа""Внутреннее потребление товаров"" в документ ""Корректировки регистров"". До завершения процесса переноса работа с документами будет невозможна.';uk='Переносить дані щодо розбіжностей з документа ""Внутрішнє споживання товарів"" у документ ""Коригування регістрів"". До завершення процесу переносу робота з документами буде неможлива.'");
    
    
   
    Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.10";
    Обработчик.РежимВыполнения = "Отложенно";
    Обработчик.Процедура = "Документы.ЗаказНаВнутреннееПотребление.ЗаполнитьСерииПоНакладнымОтложенно";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаказНаВнутреннееПотребление.ЗаполнитьСерииПоНакладнымЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 10 + МаксОчередь321;
    Обработчик.ПроцедураПроверки = "Документы.ЗаказНаВнутреннееПотребление.ЗаполнитьСерииПоНакладнымПроверитьДанныеОбновлены";
    Обработчик.БлокируемыеОбъекты = "Документ.ВнутреннееПотреблениеТоваров,Документ.ЗаказНаВнутреннееПотребление";
    Обработчик.Комментарий = НСтр("ru='Переносит серии из документов ""Внутреннее потребление товаров"" в связанные документы ""Заказ на внутреннее потребление товаров"". До завершения работы обработчика обновления работа со старыми документами будет временно невозможна.';uk='Переносить серії з документів ""Внутрішнє споживання товарів"" зв''язані документи ""Замовлення на внутрішнє споживання товарів"". До завершення роботи обробника оновлення робота зі старими документами буде тимчасово неможлива.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.10";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ЗаказНаСборку.РазбитьЗаказыНаРазборкуПоФинСериямПривязатьНакладные";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаказНаСборку.РазбитьЗаказыНаРазборкуПоФинСериямПривязатьНакладныеЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 10 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ЗаказНаСборку,Документ.СборкаТоваров";
	Обработчик.ЗапускатьТолькоВГлавномУзле = Истина;
	Обработчик.Комментарий = НСтр("ru='Разбивает документы ""Заказ на сборку (разборку)"", в которых не указана серия комплекта и по которым оформлены ""Сборка (разборка) товаров"":
    |- если в нескольких накладных по заказу указано несколько фин.серий.(тип политики равен ""Учет себестоимости по сериям"")'
    |;uk='Розбиває документи ""Замовлення на збирання (розбирання)"", в яких не вказана серія комплекту і за якими оформлені ""Збирання (розбирання) товарів"":
    |- якщо в декількох накладних за замовленням зазначено кілька фін.серій.(тип політики дорівнює ""Облік собівартості по серіям"")'");
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.10";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПоступлениеБезналичныхДенежныхСредств.ФорматироватьНазначениеПлатежа";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПоступлениеБезналичныхДенежныхСредств.ФорматироватьНазначениеПлатежаЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 10 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПоступлениеБезналичныхДенежныхСредств";
	Обработчик.Комментарий = НСтр("ru='Заполняет поле форматированного назначения платежа.';uk='Заповнює поле для форматованого призначення платежу.'");
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.10";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.РасходныйКассовыйОрдер.ЗаполнитьВладельцаОбъектаРасчетаВТабличнойЧасти";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.РасходныйКассовыйОрдер.ЗаполнитьВладельцаОбъектаРасчетаВТабличнойЧастиДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 10 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.РасходныйКассовыйОрдер";
	Обработчик.Комментарий = НСтр("ru='Заполняет новый реквизит ""Организация"" в табличной части ""Расшифровка платежа"" документа ""Расходный кассовый ордер"".';uk='Заповнює новий реквізит ""Організація"" в табличній частині ""Розшифровка платежу"" документа ""Видатковий касовий ордер"".'");
    
    
   	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.11";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ВнутреннееПотреблениеТоваров.ОчиститьСтатусыНакладныхОтложенно";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ВнутреннееПотреблениеТоваров.ОчиститьСтатусыНакладныхОтложенноКОтработке";
    Обработчик.ОчередьОтложеннойОбработки = 11 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ВнутреннееПотреблениеТоваров";
	Обработчик.Комментарий = НСтр("ru='Очищает статусы в документах ""Внутреннее потребление товаров"".';uk='Очищує статуси в документах ""Внутрішнє споживання товарів"".'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.11";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.СборкаТоваров.ОчиститьСтатусКСборкеОтложенно";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.СборкаТоваров.ОчиститьСтатусКОтгрузкеОтметитьКОтработке";
    Обработчик.ОчередьОтложеннойОбработки = 11 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.СборкаТоваров";
	Обработчик.Комментарий = НСтр("ru='Удаляет статус ""К сборке/разборке"" в документах ""Сборка (разборка) товаров"".';uk='Видаляє статус ""До збирання/розбирання"" в документах ""Збирання (розбирання) товарів"".'");
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.12";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ЗаказНаСборку.РазбитьЗаказыНаРазборкуПоСериям";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаказНаСборку.РазбитьЗаказыНаРазборкуПоСериямЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 12 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "Документы.ЗаказНаСборку.ЗаполнитьСерииПоНакладнымПроверитьДанныеОбновлены";
	Обработчик.БлокируемыеОбъекты = "Документ.ЗаказНаСборку,Документ.СборкаТоваров";
	Обработчик.ЗапускатьТолькоВГлавномУзле = Истина;
	Обработчик.Комментарий = НСтр("ru='Разбивает документы ""Заказ на сборку (разборку)"", в которых не указана серия комплекта и по которым оформлены ""Сборка (разборка) товаров"":
    |- если серия комплекта нефинансовая (тип политики отличается от ""Учет себестоимости по сериям"") и не на все количество заказа оформлены накладные (нет серий для перезаполнения).'
    |;uk='Розбиває документи ""Замовлення на збирання (розбирання)"", в яких не вказана серія комплекту і за якими оформлені ""Збирання (розбирання) товарів"":
    |- якщо серія комплекту нефінансова (тип політики відрізняється від ""Облік собівартості по серіям"") і не на всі кількість замовлення оформлені накладні (немає серій для перезаповнення).'");
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.13";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ЗаказНаСборку.СборкаЗаполнитьСерииПоНакладнымОтложенно";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаказНаСборку.СборкаЗаполнитьСерииПоНакладнымЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 13 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "Документы.ЗаказНаСборку.ЗаполнитьСерииПоНакладнымПроверитьДанныеОбновлены";
	Обработчик.БлокируемыеОбъекты = "Документ.ЗаказНаСборку,Документ.СборкаТоваров";
	Обработчик.Комментарий = НСтр("ru='Переносит серии из документов ""Сборка/разборка товаров"" в связанные документы ""Заказ на сборку (разборку)"". До завершения обработчиков обновления работа со старыми заказами будет временно невозможна.';uk='Переносить серії з документів ""Збирання/розбирання товарів"" зв''язані документи ""Замовлення на збирання (розбирання)"". До завершення обробників оновлення робота зі старими замовленнями буде тимчасово неможлива.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.14";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ЗаказНаСборку.РазборкаЗаполнитьСерииПоНакладнымОтложенно";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаказНаСборку.РазборкаЗаполнитьСерииПоНакладнымЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 14 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "Документы.ЗаказНаСборку.ЗаполнитьСерииПоНакладнымПроверитьДанныеОбновлены";
	Обработчик.БлокируемыеОбъекты = "Документ.ЗаказНаСборку,Документ.СборкаТоваров";
	Обработчик.Комментарий = НСтр("ru='Переносит серии из документов ""Сборка/разборка товаров"" в связанные документы ""Заказ на сборку (разборку)"". До выполнения обработчика обновления работа со старыми заказами временно невозможна.';uk='Переносить серії з документів ""Збирання/розбирання товарів"" зв''язані документи ""Замовлення на збирання (розбирання)"". До виконання обробника оновлення робота зі старими замовленнями тимчасово неможлива.'");
    

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.15";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.РасходныйОрдерНаТовары.ЗаполнитьРаспоряжениеВРасходномОрдереОтложенно";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.РасходныйОрдерНаТовары.ЗаполнитьРаспоряжениеВРасходномОрдереОтложенноДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 15 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "Документы.РасходныйОрдерНаТовары.РасходныеОрдераОбновленыНаНовуюВерсию";
	Обработчик.БлокируемыеОбъекты = "Документ.ВнутреннееПотреблениеТоваров,Документ.ВозвратСырьяДавальцу,Документ.ВозвратТоваровПоставщику,Документ.ПередачаДавальцу,Документ.ПередачаМатериаловВПроизводство,Документ.ПередачаСырьяПереработчику,Документ.ПеремещениеТоваров,Документ.РасходныйОрдерНаТовары,Документ.РеализацияТоваровУслуг,Документ.СборкаТоваров";
	Обработчик.Комментарий = НСтр("ru='Заполняет табличные части ""Товары по распоряжениям"" и ""Отгружаемые товары"" по табличным частям ""Товары"" и ""Серии"" в документе ""Расходный ордер"". До завершения работы обработчика обновления не рекомендуется работать со старыми документами.';uk='Заповнює табличні частини ""Товари за розпорядженням"" і ""Товари що відвантажуються"" за табличними частинами ""Товари"" і ""Серії"" в документі ""Видатковий ордер"". До завершення роботи обробника оновлення не рекомендується працювати зі старими документами.'");
    

    
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.15";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ВзаимозачетЗадолженности.ЗаполнитьВладельцаОбъектаРасчетаВТабличнойЧасти";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ВзаимозачетЗадолженности.ЗаполнитьВладельцаОбъектаРасчетаВТабличнойЧастиДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 15 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ВзаимозачетЗадолженности";
	Обработчик.Комментарий = НСтр("ru='Заполняет новый реквизит ""Организация"" в табличных частях документа ""Взаимозачет задолженности"".';uk='Заповнює новий реквізит ""Організація"" в табличних частинах документа ""Взаємозалік заборгованості"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.15";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.СписаниеБезналичныхДенежныхСредств.ЗаполнитьВладельцаОбъектаРасчетаВТабличнойЧасти";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.СписаниеБезналичныхДенежныхСредств.ЗаполнитьВладельцаОбъектаРасчетаВТабличнойЧастиДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 15 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.СписаниеБезналичныхДенежныхСредств";
	Обработчик.Комментарий = НСтр("ru='Заполняет новый реквизит ""Организация"" в табличной части ""Расшифровка платежа"" документа ""Списание безналичных ДС"".';uk='Заповнює новий реквізит ""Організація"" в табличній частині ""Розшифровка платежу"" документа ""Списання безготівкових ГК"".'");
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.15";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыСведений.ДанныеВнутреннихДокументов.ЗаполнитьРегистрСведенийДанныеВнутреннихДокументовЗаписатьДанные";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.ДанныеВнутреннихДокументов.ЗаполнитьРегистрСведенийДанныеВнутреннихДокументовОтметитьКОбработке";
    Обработчик.ОчередьОтложеннойОбработки = 15 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Заполняет регистр сведений ""Данные внутренних документов"".
    |До завершения работы обработчика обновления в рабочих местах ""Внутренние товародвижения"", ""Сборки (разборки) товаров"", ""Перемещения товаров"", ""Внутренние потребления товаров"" не будут отображаться документы.'
    |;uk='Заповнює регістр відомостей ""Дані внутрішніх документів"".
    |До завершення роботи обробника оновлення робочих місцях ""Внутрішні товарорухи"", ""Складання (розбирання) товарів"", ""Переміщення товарів"", ""Внутрішні споживання товарів"" не будуть відображатися документи.'");
    
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.16";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.СписаниеБезналичныхДенежныхСредств.ФорматироватьНазначениеПлатежа";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.СписаниеБезналичныхДенежныхСредств.ФорматироватьНазначениеПлатежаЗаполнитьДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 16 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.СписаниеБезналичныхДенежныхСредств";
	Обработчик.Комментарий = НСтр("ru='Заполняет поле форматированного назначения платежа.';uk='Заповнює поле для форматованого призначення платежу.'");
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.17";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.РасчетыПоДоговорамКредитовИДепозитов.ЗаполнитьРесурсыСуммаРеглУпр";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.РасчетыПоДоговорамКредитовИДепозитов.ЗаполнитьРесурсыСуммаРеглУпрДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 17 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Заполняет новые ресурсы ""Сумма (регл.)"" и ""Сумма (упр.)"" в регистре ""Расчеты по договорам кредитов и депозитов"".';uk='Заповнює нові ресурси ""Сума (регл.)"" і ""Сума (упр.)"" у регістрі ""Розрахунки за договорами кредитів і депозитів"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.17";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДвиженияДенежныеСредстваКонтрагент.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДвиженияДенежныеСредстваКонтрагент.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 17 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Перепроводит по регистру ""Движения ""Денежные средства - Контрагент"""" документы ""Заявка на расход ДС"", ""Расходный кассовый ордер"", ""Списание безналичных ДС"".Формирует по регистру движения документов реализации\возврата подарочных сертификатов.';uk='Перепроводит по регістру ""Рухи ""Грошові кошти - Контрагент"""" документи ""Заявка на витрату ГК"", ""Видатковий касовий ордер"", ""Списання безготівкових ГК"".Формує по регістру рухи документів реалізації\повернення подарункових сертифікатів.'");
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.17";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ЛимитыРасходаДенежныхСредств.КорректироватьДвиженияРегистра";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ЛимитыРасходаДенежныхСредств.КорректироватьДвиженияРегистраДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 17 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Обновляет информацию по лимитам расхода денежных средств для лизинговых платежей. 
    |До завершения выполнения обработчика информация в отчете ""Лимиты расхода денежных средств"" по лизинговым платежам может быть некорректной.'
    |;uk='Оновлює інформацію по лімітам витрат коштів для лізингових платежів. 
    |До завершення виконання обробника інформація у звіті ""Ліміти витрати грошових коштів"" за лізинговими платежами може бути некоректною.'");
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.18";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ЗаданиеНаПеревозку.ЗаполнитьРаспоряженияСкладТоварыКДоставке";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаданиеНаПеревозку.ЗаполнитьРаспоряженияСкладТоварыКДоставкеЗарегистрироватьКОбработке";
    Обработчик.ОчередьОтложеннойОбработки = 18 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "Документы.ЗаданиеНаПеревозку.ЗаполнитьРаспоряженияСкладТоварыКДоставке_ПроверитьДанныеОбновлены";
	Обработчик.БлокируемыеОбъекты = "Документ.ЗаданиеНаПеревозку,Документ.ПередачаДавальцу,Документ.ПередачаСырьяПереработчику,Документ.ПеремещениеТоваров,Документ.РеализацияТоваровУслуг,РегистрСведений.ТоварыКДоставке";
	Обработчик.Комментарий = НСтр("ru='В документе ""Задание на перевозку"" заполняются поля ""Распоряжение"" и ""Склад"" в табличной части ""Распоряжения по пункту маршрута"".
    |Заполняется новый регистр сведений ""Товары к доставке"" по данным незакрытых заданий на перевозку.
    |Список распоряжений на доставку в рабочем месте ""Доставка"" может формироваться некорректно до окончания работы обработчика.'
    |;uk='В документі ""Завдання на перевезення"" заповнюються поля ""Розпорядження"" і ""Склад"" в табличній частині ""Розпорядження за пунктом маршруту"".
    |Заповнюється новий регістр відомостей ""Товари до доставки"" за даними незакритих завдань на перевезення.
    |Список розпоряджень на доставку в робочому місці ""Доставка"" може формуватися некоректно до закінчення роботи обробника.'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.18";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.РеализацияТоваровУслуг.ИсправитьДвиженияПоРегиструТоварыПереданныеНаКомиссию";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.РеализацияТоваровУслуг.ЗаполнитьДанныеДляОбновленияТоварыПереданныеНаКомиссию";
    Обработчик.ОчередьОтложеннойОбработки = 18 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Заполняет движения документа ""Реализация товаров и услуг"" по регистру ""Товары переданные на комиссию"".';uk='Заповнює рухи документа ""Реалізація товарів і послуг"" по регістру ""Товари передані на комісію"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.18";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ПереданнаяВозвратнаяТара.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ПереданнаяВозвратнаяТара.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 18 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Заполняет движения по регистру ""Переданная возвратная тара"" для документов ""Реализация товаров и услуг"" в статусе ""К отгрузке""';uk='Заповнює рухи по регістру ""Передана поворотна тара"" для документів ""Реалізація товарів і послуг"" в статус ""До відвантаження""'");
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.19";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ЗаданиеНаПеревозку.ОткатитьСтатусОтправленныхЗаданийСНеотгруженнымиОрдерами";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаданиеНаПеревозку.ОткатитьСтатусОтправленныхЗаданийСНеотгруженнымиОрдерамиЗарегистрироватьКОбработке";
    Обработчик.ОчередьОтложеннойОбработки = 19 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ЗаданиеНаПеревозку";
	Обработчик.Комментарий = НСтр("ru='В Задании на перевозку заполняются статус ""К погрузке"" для заданий, по которым имеются неотгруженные ордера.';uk='У Завданні на перевезення заповнюються статус ""До навантаження"" для завдань, за якими є невідвантажені ордера.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.19";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ВзаимозачетЗадолженности.ЗаполнитьТипыДебитораИКредитораОтложенно";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ВзаимозачетЗадолженности.ДокументыДляОбновленияЗаполнитьТипыДебитораИКредитораОтложенно";
    Обработчик.ОчередьОтложеннойОбработки = 19 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ВзаимозачетЗадолженности";
	Обработчик.Комментарий = НСтр("ru='Заполняет новые реквизиты документа ""Взаимозачет задолженности"".
    |Рекомендуется не редактировать документы ""Взаимозачет задолженности"" до окончания выполнения обработчика.
    |До завершения работы обработчика обновления отображение документа может быть некорректным.'
    |;uk='Заповнює нові реквізити документа ""Взаємозалік заборгованості"".
    |Рекомендується не редагувати документи ""Взаємозалік заборгованості"" до закінчення виконання обробника.
    |До завершення роботи обробника оновлення відображення документа може бути некоректним.'");
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.20";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДвиженияКонтрагентКонтрагент.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДвиженияКонтрагентКонтрагент.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 20 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Корректируется  регистр накопления ""Движения Контрагент - Контрагент"" по документам ""Взаимозачет задолженности"".
    |До завершения работы обработчика обновления информация по взаимозачетам может быть некорректной.'
    |;uk='Коригується регістр накопичення ""Рухи Контрагент - Контрагент"" за документами ""Взаємозалік заборгованості"".
    |До завершення роботи обробника оновлення інформація щодо взаємозаліків може бути некоректною.'");
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.20";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ЗаданиеНаПеревозку.ЗаполнитьОперациюОтложенно";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаданиеНаПеревозку.ЗаполнитьОперациюКОтработке";
    Обработчик.ОчередьОтложеннойОбработки = 20 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ЗаданиеНаПеревозку";
	Обработчик.Комментарий = НСтр("ru='Заполняет в ранее оформленных документах ""Задания на перевозку"" операцию ""Доставка с нашего склада"".';uk='Заповнює у раніше оформлених документах ""Завдання на перевезення"" операцію ""Доставка з нашого складу"".'");
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.21";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыСведений.СостоянияИРеквизитыДоставки.ПервоначальноеЗаполнение";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.СостоянияИРеквизитыДоставки.ПервоначальноеЗаполнение_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 21 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "РегистрСведений.СостоянияИРеквизитыДоставки";
	Обработчик.Комментарий = НСтр("ru='Выполняет первоначальное заполнение регистра сведений ""Состояние и реквизиты доставки"".';uk='Виконує початкове заповнення регістра відомостей ""Стан та реквізити доставки"".'");
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.2.23";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыСведений.СостоянияЗаказовКлиентов.ПерезаполнитьСостоянияЗаказовКлиентов";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.СостоянияЗаказовКлиентов.ПерезаполнитьСостоянияЗаказовКлиентовОтметитьКОтработке";
    Обработчик.ОчередьОтложеннойОбработки = 23 + МаксОчередь321;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "РегистрСведений.СостоянияЗаказовКлиентов";
	Обработчик.Комментарий = НСтр("ru='Обновляет состояния заказов клиентов в регистре ""Состояния заказов клиентов"".';uk='Оновлює стани замовлень клієнтів у регістрі ""Стани замовлень клієнтів"".'");

#КонецОбласти // Версия_3_2_2

#Область Версия_3_2_3

    ОчередьПодредакции323 = 200;
    МаксОчередь322 = ОчередьПодредакции323;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.0";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "ОбновлениеИнформационнойБазыУТ.НачалоПодредакции_3_2_3";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "ОбновлениеИнформационнойБазыУТ.НачалоПодредакции_3_2_3_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = ОчередьПодредакции323;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = "";
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;
	
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПоступлениеТоваровУслуг.ПеренестиРасхожденияВАкты";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПоступлениеТоваровУслуг.ПеренестиРасхожденияВАктыЗарегистрироватьКОбработке";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПоступлениеТоваровУслуг";
	Обработчик.Комментарий = НСтр("ru='Переносит расхождения из документа ""Поступление товаров и услуг"" в ""Акты о расхождениях после поступления"".
    |Пока работа обработчика не завершена, изменение документа ""Поступление товаров"" и услуг может привести к рассинхронизации данных.'
    |;uk='Переносить розбіжності з документа ""Надходження товарів і послуг"" в ""Акти про розбіжності після надходження"".
    |Поки робота обробника не завершена, зміна документа ""Надходження товарів та послуг"" може призвести до розсинхронізації даних.'");


	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыСведений.СезонныеКоэффициенты.ЗаполнитьСезоннуюГруппуОтложенно";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.СезонныеКоэффициенты.ЗаполнитьСезоннуюГруппуОтметитьКОбработке";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "РегистрСведений.СезонныеКоэффициенты";
	Обработчик.Комментарий = НСтр("ru='Заполняет в регистре ""Сезонные коэффициенты"" сезонную группу бизнес региона по умолчанию.  Пока работа обработчика не завершена, информация в регистре некорректна.';uk='Заповнює в регістрі ""Сезонні коефіцієнти"" сезонну групу бізнес регіону по умовчанню. Поки робота обробника не завершена, інформація в регістрі некоректна.'");


	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДенежныеСредстваУПодотчетныхЛиц.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДенежныеСредстваУПодотчетныхЛиц.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Исправляет движения по регистру накопления ""Денежные средства у подотчетных лиц"". Пока работа обработчика не завершена, информация в регистре некорректна.';uk='Виправляє рухи по регістру накопичення ""Грошові кошти у підзвітних осіб"". Поки робота обробника не завершена, інформація в регістрі некоректна.'");
    
    Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.РаспределениеРасходовБудущихПериодов.ЗаполнитьНовыеРеквизитыДокументаИПодразделениеВТЧ";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.РаспределениеРасходовБудущихПериодов.ЗаполнитьНовыеРеквизитыДокументаИПодразделениеВТЧКОбработке";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.РаспределениеРасходовБудущихПериодов";
	Обработчик.Комментарий = НСтр("ru='Заполняет реквизит ""СуммаДокументаРегл"", 
    |а также реквизит ""Подразделение"" в табличной части ""РаспределениеРасходов"" документа ""Распределение расходов будущих периодов"".
    |Пока работа обработчика обновления не завершена, данные документов будут некорректными.'
    |;uk='Заповнює реквізит ""СуммаДокументаРегл"", 
    |а також реквізит ""Подразделение"" у табличній частині ""РаспределениеРасходов"" документа ""Розподіл витрат майбутніх періодів"".
    |Поки робота обробника оновлення не завершена, дані документів будуть некоректними.'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ОтчетКомиссионера.ЗаполнитьИдентификаторСтроки";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ОтчетКомиссионера.ЗаполнитьИдентификаторСтроки_КОбработке";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.ЗапускатьТолькоВГлавномУзле = Истина;
	Обработчик.Комментарий = НСтр("ru='В документе ""Отчет комиссионера"" заполняется реквизит ""Идентификатор строки"".';uk='У документі ""Звіт комісіонера"" заповнюється реквізит ""Ідентифікатор рядка"".'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ОтчетПоКомиссииМеждуОрганизациями.ЗаполнитьИдентификаторСтроки";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ОтчетПоКомиссииМеждуОрганизациями.ЗаполнитьИдентификаторСтроки_КОбработке";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.ЗапускатьТолькоВГлавномУзле = Истина;
	Обработчик.Комментарий = НСтр("ru='В документе ""Отчет по комиссии между организациями"" заполняется реквизит ""Идентификатор строки"".';uk='У документі ""Звіт по комісії між організаціями"" заповнюється реквізит ""Ідентифікатор рядка"".'");
    

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ЗаданиеНаПеревозку.ЗаполнитьЗаданиеВыполняет";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаданиеНаПеревозку.ЗаполнитьЗаданиеВыполняетКОтработке";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ЗаданиеНаПеревозку";
	Обработчик.Комментарий = НСтр("ru='Заполняет реквизит ""Задание выполняет"" в заданиях на перевозку. Необработанные задания на перевозку нельзя редактировать.';uk='Заповнює реквізит ""Завдання виконує"" у завданнях на перевезення. Необроблені завдання на перевезення не можна редагувати.'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.КорректировкаНазначенияТоваров.ЗаполнитьНазначение";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.КорректировкаНазначенияТоваров.ЗаполнитьНазначение_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.КорректировкаНазначенияТоваров";
	Обработчик.Комментарий = НСтр("ru='Обновляются документы ""Корректировка назначения товаров"":
    |- выполняется замена ссылок на документы ""Заказ на внутреннее потребление"" с операцией ""Передача в производство"";
    |- заполняется вид операции.'
    |;uk='Оновлюються документи ""Коригування призначення товарів"":
    |- виконується заміна посилань на документи ""Замовлення на внутрішнє споживання"" з операцією ""Передача у виробництво"";
    |- заповнюється вид операції.'");
		


	
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДвиженияДоходыРасходыПрочиеАктивыПассивы.ЗарегистироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Перезаполняет статью и аналитику пассивов в регистре ""Движения Доходы/Расходы - Прочие активы/пассивы"" для налогов и взносов с оплаты труда.';uk='Перезаповнює статтю і аналітику пасивів у регістрі ""Рухи Доходи/Витрати - Інші активи/пасиви"" для податків і внесків з оплати праці.'");
	
	Обработчик = Обработчики.Добавить(); 
	Обработчик.Версия = "3.2.3.1";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ВводОстатков.ЗаполнитьУпаковкиВРегистреТоварыВЯчейках";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ВводОстатков.ЗаполнитьУпаковкиВРегистреТоварыВЯчейках_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ВводОстатков";
	Обработчик.Комментарий = НСтр("ru='В табличной части серии в документе ""Ввод остатков"" заполняются упаковки для адресных складов.';uk='У табличній частині серії в документі ""Введення залишків"" заповнюються упаковки для адресних складів.'");
	
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ТоварыВЯчейках.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ТоварыВЯчейках.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Исправляет движения по регистру накопления ""Товары в ячейках"". Пока работа обработчика не завершена, информация в регистре некорректна.';uk='Виправляє рухи по регістру накопичення ""Товари в комірках"". Поки робота обробника не завершена, інформація в регістрі некоректна.'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ТоварыКОтбору.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ТоварыКОтбору.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Исправляет движения по регистру накопления ""Товары к отбору"". Пока работа обработчика не завершена, информация в регистре некорректна.';uk='Виправляє рухи по регістру накопичення ""Товари до відбору"". Поки робота обробника не завершена, інформація в регістрі некоректна.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы.КорректироватьДвиженияОтчетаПоКомиссииМеждуОрганизациямиОСписании";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы.КорректироватьДвиженияОтчетаПоКомиссииМеждуОрганизациямиОСписании_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Корректирует аналитику движений по регистру ""Движения Номенклатура - Доходы\Расходы"" для документов ""Отчет по комиссии между организациями о списании"". До завершения работы обработчика обновления возможно некорректные данные по комиссионному товару в отчете ""Себестоимость товаров"".';uk='Коригує аналітику рухів по регістру ""Рухи Номенклатура - Доходи\Витрати"" для документів ""Звіт по комісії між організаціями про списання"". До завершення роботи обробника оновлення можливо некоректні дані по комісійного товару в звіті ""Собівартість товарів"".'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДвиженияНоменклатураНоменклатура.КорректироватьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДвиженияНоменклатураНоменклатура.КорректироватьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Корректировка движений регистра ""Движения ""Номенклатура - Номенклатура"".';uk='Коригування рухів регістра ""Рухи ""Номенклатура - Номенклатура"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.КорректировкаРегистров.ЗаполнитьДоговорВАналитикеПоПартнерамКорректировокРегистров";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.КорректировкаРегистров.ЗаполнитьДоговорВАналитикеПоПартнерамКорректировокРегистровОтметитьКОбработке";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Заполняет договор в аналитиках учета по партнерам в регистре ""Расчеты с клиентами""';uk='Заповнює договір в аналітиках обліку за партнерам у регістрі ""Розрахунки з клієнтами""'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.АвансовыйОтчет.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.АвансовыйОтчет.ЗарегистироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.АвансовыйОтчет";
	Обработчик.Комментарий = НСтр("ru='Рассчитывает сумму с НДС прочих расходов в авансовых отчетах. До завершения обработки данные по НДС могут быть некорректны.';uk='Розраховує суму з ПДВ інших витрат у авансових звітах. До завершення обробки дані по ПДВ можуть бути некоректними.'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПеремещениеТоваров.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПеремещениеТоваров.ЗарегистироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПеремещениеТоваров";
	Обработчик.Комментарий = НСтр("ru='Заполняет договор в аналитиках учета по партнерам в регистре ""Расчеты с клиентами""';uk='Заповнює договір в аналітиках обліку за партнерам у регістрі ""Розрахунки з клієнтами""'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.РасчетыСПоставщиками.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.РасчетыСПоставщиками.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Заменяет измерение ""Аналитика учета по партнерам"" с учетом договора. Пока обработчик не завершен, данные в регистре некорректны.';uk='Замінює вимір ""Аналітика обліку за партнерам"" з урахуванням договору. Поки обробник не завершений, дані в регістрі некоректні.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.РасчетыСКлиентами.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.РасчетыСКлиентами.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Заменяет измерение ""Аналитика учета по партнерам"" с учетом договора. Пока обработчик не завершен, данные в регистре некорректны.';uk='Замінює вимір ""Аналітика обліку за партнерам"" з урахуванням договору. Поки обробник не завершений, дані в регістрі некоректні.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.КнигаДоходовРасходовПоЕдиномуНалогу.ЗаменитьАналитикуУчетаПоПартнерам";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.КнигаДоходовРасходовПоЕдиномуНалогу.ЗаменитьАналитикуУчетаПоПартнерам_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Заменяет измерение ""Аналитика учета по партнерам"" с учетом договора. Пока обработчик не завершен, данные в регистре некорректны.';uk='Замінює вимір ""Аналітика обліку за партнерам"" з урахуванням договору. Поки обробник не завершений, дані в регістрі некоректні.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.НДСНоменклатурныйСоставДляНалоговыхНакладных.ЗаменитьАналитикуУчетаПоПартнерам";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.НДСНоменклатурныйСоставДляНалоговыхНакладных.ЗаменитьАналитикуУчетаПоПартнерам_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Заменяет измерение ""Аналитика учета по партнерам"" с учетом договора. Пока обработчик не завершен, данные в регистре некорректны.';uk='Замінює вимір ""Аналітика обліку за партнерам"" з урахуванням договору. Поки обробник не завершений, дані в регістрі некоректні.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.НДСРасчетНалоговыхОбязательств.ЗаменитьАналитикуУчетаПоПартнерам";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.НДСРасчетНалоговыхОбязательств.ЗаменитьАналитикуУчетаПоПартнерам_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Заменяет измерение ""Аналитика учета по партнерам"" с учетом договора. Пока обработчик не завершен, данные в регистре некорректны.';uk='Замінює вимір ""Аналітика обліку за партнерам"" з урахуванням договору. Поки обробник не завершений, дані в регістрі некоректні.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.НДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов.ЗаменитьАналитикуУчетаПоПартнерам";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.НДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов.ЗаменитьАналитикуУчетаПоПартнерам_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Заменяет измерение ""Аналитика учета по партнерам"" с учетом договора. Пока обработчик не завершен, данные в регистре некорректны.';uk='Замінює вимір ""Аналітика обліку за партнерам"" з урахуванням договору. Поки обробник не завершений, дані в регістрі некоректні.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.НДСРасчетНалоговогоКредита.ЗаменитьАналитикуУчетаПоПартнерам";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.НДСРасчетНалоговогоКредита.ЗаменитьАналитикуУчетаПоПартнерам_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Заменяет измерение ""Аналитика учета по партнерам"" с учетом договора. Пока обработчик не завершен, данные в регистре некорректны.';uk='Замінює вимір ""Аналітика обліку за партнерам"" з урахуванням договору. Поки обробник не завершений, дані в регістрі некоректні.'");
    
    Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.НДСРеестрВыданныхНалоговыхДокументов.ЗаменитьАналитикуУчетаПоПартнерам";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.НДСРеестрВыданныхНалоговыхДокументов.ЗаменитьАналитикуУчетаПоПартнерам_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Заменяет измерение ""Аналитика учета по партнерам"" с учетом договора. Пока обработчик не завершен, данные в регистре некорректны.';uk='Замінює вимір ""Аналітика обліку за партнерам"" з урахуванням договору. Поки обробник не завершений, дані в регістрі некоректні.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.НДСРеестрПолученныхНалоговыхДокументов.ЗаменитьАналитикуУчетаПоПартнерам";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.НДСРеестрПолученныхНалоговыхДокументов.ЗаменитьАналитикуУчетаПоПартнерам_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Заменяет измерение ""Аналитика учета по партнерам"" с учетом договора. Пока обработчик не завершен, данные в регистре некорректны.';uk='Замінює вимір ""Аналітика обліку за партнерам"" з урахуванням договору. Поки обробник не завершений, дані в регістрі некоректні.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ЗаявкаНаРасходованиеДенежныхСредств.ЗаполнитьСтатьиАктивовПассивовНалоги";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаявкаНаРасходованиеДенежныхСредств.ЗаполнитьСтатьиАктивовПассивовНалоги_КОбработке";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ЗаявкаНаРасходованиеДенежныхСредств";
	Обработчик.Комментарий = НСтр("ru='Перезаполняет в документе статью активов и пассивов при оплате имущественных налогов на предопределенную статью ""Налоги"".';uk='Перезаповнює в документі статті активів і пасивів при оплату майнових податків на напередвизначену статтю ""Податки"".'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.СписаниеБезналичныхДенежныхСредств.ЗаполнитьСтатьиАктивовПассивовНалоги";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.СписаниеБезналичныхДенежныхСредств.ЗаполнитьСтатьиАктивовПассивовНалоги_КОбработке";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.СписаниеБезналичныхДенежныхСредств";
	Обработчик.Комментарий = НСтр("ru='Перезаполняет в документе статью активов и пассивов при оплате имущественных налогов, НДФЛ и страховых взносов на предопределенную статью ""Налоги"".';uk='Перезаповнює в документі статті активів і пасивів при оплату майнових податків, ПДФО і страхових внесків на напередвизначену статтю ""Податки"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПрочееОприходованиеТоваров.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПрочееОприходованиеТоваров.ЗарегистироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПрочееОприходованиеТоваров";
	Обработчик.Комментарий = НСтр("ru='Переносит серии с политикой учета ""Указываются при планировании отгрузки"" из табличной части ""Товары"" в табличную часть ""Серии"" в документе ""Прочее оприходование товаров""';uk='Переносить серії з політикою обліку ""Вказуються при плануванні відвантаження"" з табличної частини ""Товари"" в табличну частину ""Серії"" в документі ""Інше оприбуткування товарів""'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДенежныеСредстваБезналичные.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДенежныеСредстваБезналичные.ЗарегистироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Корректировка записей регистра накопления ""Денежные средства безналичные"" по хоз. операции ""Конвертация валюты"".
    |Пока работа обработчика не завершена, информация в отчетах по денежным средствам может быть некорректной.'
    |;uk='Коригування записів регістру накопичення ""Грошові кошти безготівкові"" з госп. операції ""Конвертація валюти"".
    |Поки робота обробника не завершена, інформація у звітах по коштах може бути некоректною.'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДенежныеСредстваНаличные.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДенежныеСредстваНаличные.ЗарегистироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Корректировка записей регистра накопления ""Денежные средства наличные"" по хоз. операции ""Конвертация валюты"".
    |Пока работа обработчика не завершена, информация в отчетах по денежным средствам может быть некорректной.'
    |;uk='Коригування записів регістру накопичення ""Грошові кошти готівку"" з госп. операції ""Конвертація валюти"".
    |Поки робота обробника не завершена, інформація у звітах по коштах може бути некоректною.'");
    
 	
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.МатериалыИРаботыВПроизводстве.ПерезаполнитьРегистр";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.МатериалыИРаботыВПроизводстве.ПерезаполнитьРегистр_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "РегистрСведений.АналитикаВидовЗапасов,РегистрСведений.АналитикаУчетаНоменклатуры,Справочник.КлючиАналитикиУчетаНоменклатуры";
	Обработчик.ЗапускатьТолькоВГлавномУзле = Истина; 
	Обработчик.Комментарий = НСтр("ru='Обновляет регистр ""Материалы и работы в производстве"".';uk='Оновлює реєстр ""Матеріали і роботи у виробництві"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.НалоговаяНакладная.ПеренестиОбъектРасчетовИзШапкиВТабличныеЧасти";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.НалоговаяНакладная.ПеренестиОбъектРасчетовИзШапкиВТабличныеЧасти_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.НалоговаяНакладная";
	Обработчик.Комментарий = НСтр("ru='Перенос объекта расчетов из шапки документа ""Налоговая накладная"" в табличные части.';uk='Перенесення об''єкта розрахунків з шапки документа ""Податкова накладна"" у табличні частини.'");

    Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.Приложение2КНалоговойНакладной.ПеренестиОбъектРасчетовИзШапкиВТабличныеЧасти";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.Приложение2КНалоговойНакладной.ПеренестиОбъектРасчетовИзШапкиВТабличныеЧасти_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.Приложение2КНалоговойНакладной";
	Обработчик.Комментарий = НСтр("ru='Перенос объекта расчетов из шапки документа ""Приложение 2 к налоговой накладной"" в табличные части.';uk='Перенесення об''єкта розрахунків з шапки документа ""Додаток 2 до податкової накладної"" у табличні частини.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.1";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.РегистрацияВходящегоНалоговогоДокумента.ЗаполнитьНалоговоеНазначениеВТабличнойЧастиПоставка";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.РегистрацияВходящегоНалоговогоДокумента.ЗаполнитьНалоговоеНазначениеВТабличнойЧастиПоставка_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.РегистрацияВходящегоНалоговогоДокумента";
	Обработчик.Комментарий = НСтр("ru='Выполняется установка налоговых назначений в табличной части поставка документа ""Регистрация входящего налогового документа"".';uk='Виконується встановлення податкових призначень у табличній частині постачання документа ""Реєстрація вхідного податкового документа"".'");
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ТоварыОрганизацийКОформлению.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ТоварыОрганизацийКОформлению.ЗарегистироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Выполняет движения по регистру накопления ""Товары организаций к оформлению"". Пока работа обработчика не завершена, информация в регистре некорректна.';uk='Виконує рухи по регістру накопичення ""Товари організацій до оформлення"". Поки робота обробника не завершена, інформація в регістрі некоректна.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыСведений.СуммыДокументовВВалютеРегл.ЗаполнитьДляУслугСуммыВВалютеРегл";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.СуммыДокументовВВалютеРегл.ЗаполнитьДляУслугСуммыВВалютеРегл_КОбработке";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Перепроводит документы по регистру сведений ""Суммы документов в валюте регл"", если для услуг из документа нет движений по регистру.';uk='Перепроводит документи по регістру відомостей ""Суми документів в валюті регл"", якщо для послуг з документа немає рухів по регістру.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ТоварыКПоступлению.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ТоварыКПоступлению.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Обновляет движения по регистру ""Товары к поступлению"":
    |- для документов товародвижения в статусе ""К отгрузке/К сборке"".
    |- для документов ""Перемещение товаров"" и ""Сборка (разборка) товаров"" по заказам удаляет движения и добавляет такие же движения в документы ""Заказ на перемещение"" и ""Заказ на сборку"".'
    |;uk='Оновлює руху по регістру ""Товари до надходження"":
    |- для документів товароруху в статус ""До відвантаження/До збірки"".
    |- для документів ""Переміщення товарів"" і ""Збірка (розбирання) товарів"" на замовлення видаляє руху і додає такі ж рухи в документи ""Замовлення на переміщення"" і ""Замовлення на збірку"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ТоварыКОформлениюПоступления.ИсправитьДвижения";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ТоварыКОформлениюПоступления.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Заполняет движения по регистру ""Товары к оформлению поступлений"" для документов товародвижения в статусе ""К отгрузке/К сборке""';uk='Заповнює рухи по регістру ""Товари до оформлення надходжень"" для документів товароруху в статусі ""До відвантаження/До складання""'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ТранспортнаяНакладная.ЗаполнитьПлательщиков";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ТранспортнаяНакладная.ЗаполнитьПлательщиков_ОтметитьКОбработке";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ТранспортнаяНакладная";
	Обработчик.Комментарий = НСтр("ru='Заполняет плательщиков и их банковские счета в документах ""Транспортная накладная"". Пока работа обработчика не завершена, информация в документах некорректна.';uk='Заповнює платників і їх банківські рахунки в документах ""Транспортна накладна"". Поки робота обробника не завершена, інформація в документах некоректна.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ТоварыКОтгрузке.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ТоварыКОтгрузке.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Исправляет движения по регистру накопления ""Товары к отгрузке"". Пока работа обработчика не завершена, информация в регистре некорректна.';uk='Виправляє рухи по регістру накопичення ""Товари до відвантаження"". Поки робота обробника не завершена, інформація в регістрі некоректна.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ОбеспечениеЗаказов.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ОбеспечениеЗаказов.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Исправляет движения по регистру накопления ""Обеспечение заказов"". Пока работа обработчика не завершена, информация в регистре некорректна.';uk='Виправляє рухи по регістру накопичення ""Забезпечення замовлень"". Поки робота обробника не завершена, інформація в регістрі некоректна.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДвижениеТоваров.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДвижениеТоваров.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
    Обработчик.Комментарий = НСтр("ru='Исправляет движения по регистру ""Движение товаров"".';uk='Виправляє рухи по регістру ""Рух товарів"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ТоварыНаСкладах.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ТоварыНаСкладах.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Обновляется регистр накопления """"Товары на складах"""". Пока работа обработчика не завершена, информация в регистре некорректна.';uk='Оновлюється регістр накопичення """"Товари на складах"""". Поки робота обробника не завершена, інформація в регістрі некоректна.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ПрочиеАктивыПассивы.ЗаполнитьСтатьиАктивовПассивовНалоги";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ПрочиеАктивыПассивы.ЗаполнитьСтатьиАктивовПассивовНалоги_КОбработке";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Перезаполняет в регистре статьи при начислении и оплате имущественных налогов, НДФЛ и страховых взносов на предопределенную статью ""Налоги"". Перезаполняет в регистре статьи, когда в документе статья указана, а в движениях - нет.';uk='Перезаповнює в регістрі статті при нарахуванні та оплаті майнових податків, ПДФО і страхових внесків на напередвизначену статтю ""Податки"". Перезаполняет в регістрі статті, коли в документі зазначена стаття, а в рухах - ні.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДенежныеСредстваКВыплате.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДенежныеСредстваКВыплате.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Обновляется регистр накопления ""Денежные средства к выплате"". 
    |Пока работа обработчика не завершена, информация в регистре некорректна.'
    |;uk='Оновлюється регістр накопичення ""Грошові кошти до виплати"". 
    |Поки робота обробника не завершена, інформація в регістрі некоректна.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.СвободныеОстатки.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.СвободныеОстатки.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Изменяет движения по регистру накопления ""Свободные остатки"". Пока работа обработчика не завершена, информация в регистре некорректна.';uk='Змінює рухи по регістру накопичення ""Вільні залишки"". Поки робота обробника не завершена, інформація в регістрі некоректна.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДвиженияКонтрагентДоходыРасходы.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДвиженияКонтрагентДоходыРасходы.ЗарегистироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Корректировка записей регистра накопления ""Движения Контрагент - Доходы\Расходы"" для документов ""Расчет курсовых разниц"".
    |Пока работа обработчика не завершена, информация в регистре некорректна.'
    |;uk='Коригування записів регістру накопичення ""Рухи Контрагент - Доходи\Витрати"" для документів ""Розрахунок курсових різниць"".
    |Поки робота обробника не завершена, інформація в регістрі некоректна.'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДвиженияСерийТоваров.ПерезаполнитьРегистр";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДвиженияСерийТоваров.ПерезаполнитьРегистр_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Обновляется регистр накопления """"Движения серий товаров"""". Пока работа обработчика не завершена, информация в регистре некорректна.';uk='Оновлюється регістр накопичення """"Рухи серій товарів"""". Поки робота обробника не завершена, інформація в регістрі некоректна.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДвиженияДенежныхСредств.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДвиженияДенежныхСредств.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Корректирует движения по регистру ""Движения денежных средств"".
    |Пока обработчик не завершен, данные в регистре некорректны.'
    |;uk='Коригує руху по регістру ""Рухи грошових коштів"".
    |Поки обробник не завершений, дані в регістрі некоректні.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДвиженияДенежныеСредстваДоходыРасходы.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДвиженияДенежныеСредстваДоходыРасходы.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Корректирует движения по регистру ""Движения денежные средства доходы расходы"".
    |Пока обработчик не завершен, данные в регистре некорректны.'
    |;uk='Коригує руху по регістру ""Рухи кошти доходи витрати"".
    |Поки обробник не завершений, дані в регістрі некоректні.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.3";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ГрафикПоступленияТоваров.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ГрафикПоступленияТоваров.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 3 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Заполняет движения по регистру ""График поступления товаров"". Пока работа обработчика не завершена, информация в регистре некорректна.';uk='Заповнює рухи по регістру ""Графік надходження товарів"". Поки робота обробника не завершена, інформація в регістрі некоректна.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.3";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыСведений.СостоянияИРеквизитыДоставки.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.СостоянияИРеквизитыДоставки.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
    Обработчик.ОчередьОтложеннойОбработки = 3 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "РегистрСведений.СостоянияИРеквизитыДоставки";
	Обработчик.Комментарий = НСтр("ru='Очищает ошибочные записи регистра сведений ""Состояния и реквизиты доставки""';uk='Очищає помилкові записи реєстру відомостей ""Стани і реквізити доставки""'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.4";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыСведений.ДоступныеОстаткиПланируемыхПоступлений.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.ДоступныеОстаткиПланируемыхПоступлений.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 4 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "РегистрСведений.ДоступныеОстаткиПланируемыхПоступлений";
	Обработчик.Комментарий = НСтр("ru='Актуализирует регистр сведений ""Доступные остатки планируемых поступлений"".';uk='Актуалізує регістр відомостей ""Доступні залишки планованих надходжень"".'");
    
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.5";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДенежныеСредстваВПути.КорректироватьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДенежныеСредстваВПути.КорректироватьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 5 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Перепроводятся ""Приходно-кассовые ордера"" по регистру накопления ""Денежные средства в пути"" по хозяйственной операции ""Конвертация валюты"".
    |До завершения работы обработчика обновления информация об остатках денежных средств в пути может быть некорректной.'
    |;uk='Перепроводятся ""Прибуткові касові ордера"" по регістру накопичення ""Грошові кошти в дорозі"" по господарської операції ""Конвертація валюти"".
    |До завершення роботи обробника оновлення інформація про залишки грошових коштів у дорозі може бути некоректною.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.6";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ЗаявкиНаВозвратТоваровОтКлиентов.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ЗаявкиНаВозвратТоваровОтКлиентов.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 6 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Очищает движения по РН ""Заявки на возврат товаров от клиента"" для отмененных строк по ресурсу КОформлению';uk='Очищає руху по РН  ""Заявки на повернення товарів від клієнта"" для скасованих рядків по ресурсу КОформлению'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.7";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ЗаказыНаПеремещение.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ЗаказыНаПеремещение.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 7 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "РегистрНакопления.ЗаказыНаПеремещение";
	Обработчик.Комментарий = НСтр("ru='Заполняет измерение ""Серия"" в регистре ""Заказы на перемещение"" для серий со статусом указания серий равном 10 (серии по которым учитываются остатки).';uk='Заповнює вимір ""Серія"" в регістрі ""Замовлення на переміщення"" для серій зі статусом зазначення серій рівним 10 (серії за якими обліковуються залишки).'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.8";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ВыручкаИСебестоимостьПродаж.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ВыручкаИСебестоимостьПродаж.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 8 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Заменяет измерение ""Аналитика учета по партнерам"" с учетом договора.';uk='Замінює вимір ""Аналітика обліку за партнерам"" з урахуванням договору.'");
    
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.3.9";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДенежныеСредстваВКассахККМ.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДенежныеСредстваВКассахККМ.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 9 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Заполняет ресурсы ""К поступлению"" в регистре ""Денежные средства в кассах ККМ"".';uk='Заповнює ресурси ""До надходження в регістрі ""Грошові кошти в касах ККМ"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.10";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ОбеспечениеЗаказовРаботами.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ОбеспечениеЗаказовРаботами.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 10 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Изменяет движения по регистру накопления ""Обеспечение заказов работами"".  Пока работа обработчика не завершена, информация в регистре некорректна.';uk='Змінює рухи по регістру накопичення ""Забезпечення замовлень роботами"". Поки робота обробника не завершена, інформація в регістрі некоректна.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.11";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ЗаказыКлиентов.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ЗаказыКлиентов.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 11 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Исправляет неверные движения документов в регистре накопления ""Заказы клиентов"".';uk='Виправляє неправильні рухи документів в регістрі накопичення ""Замовлення клієнтів"".'");
    
    Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.12";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ЗаказыНаСборку.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ЗаказыНаСборку.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 12 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "РегистрНакопления.ЗаказыНаСборку";
	Обработчик.Комментарий = НСтр("ru='Заполняет измерение ""Серия"" в регистре ""Заказы на сборку"".';uk='Заповнює вимір ""Серія"" в регістрі ""Замовлення на збірку"".'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.12";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ЗаказыНаВнутреннееПотребление.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ЗаказыНаВнутреннееПотребление.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 12 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Заполняет измерение ""Серия"" в регистре ""Заказы на внутреннее потребление"" для серий со статусом указания серий равном 10 (серии указываются при планировании отгрузки).';uk='Заповнює вимір ""Серія"" в регістрі ""Замовлення на внутрішнє споживання"" для серій зі статусом зазначення серій рівним 10 (серії вказуються при плануванні відвантаження).'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.12";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ГрафикОтгрузкиТоваров.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ГрафикОтгрузкиТоваров.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 12 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Заполняет новый регистр ""График отгрузки товаров"". Пока  работа обработчика обновления не завершена,  резервирование в заказах и обеспечение потребностей недоступно, данные о доступности товаров могут быть неактуальными.';uk='Заповнює новий регістр ""Графік відвантаження товарів"". Поки робота обробника оновлення не завершена, резервування в замовленнях і забезпечення потреб недоступне, дані про доступність товарів можуть бути неактуальними.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.13";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ТоварыПереданныеНаКомиссию.КорректироватьДвижения";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ТоварыПереданныеНаКомиссию.КорректироватьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 13 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
    Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Корректировка движений регистра ""Товары переданные на комиссию"".';uk='Коригування рухів регістра ""Товари передані на комісію"".'");
    
    
    
      
    Обработчик = Обработчики.Добавить(); 
    Обработчик.Версия = "3.2.3.14";
    Обработчик.РежимВыполнения = "Отложенно";
    Обработчик.Процедура = "РегистрыНакопления.Закупки.ЗакупкиЗаполнитьСуммыДопРасходов";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.Закупки.ЗакупкиЗаполнитьСуммыДопРасходов_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 14 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
    Обработчик.Комментарий = НСтр("ru='Заполняет суммы доп. расходов в регистре ""Закупки"".
    |    |Пока работа обработчика не завершена в отчете ""Себестоимость товаров"" не будут выводится суммы доп. расходов по товарам.'
    |;uk='Заповнює суми дод. витрат у регістрі ""Закупівлі"".
    |    |Поки робота обробника не завершена у звіті ""Собівартість товарів"" не будуть виводиться суми дод. витрат по товарах.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.15";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.Закупки.ПереносДопРасходовПоСтатьямНаСебестоимость";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.Закупки.ПереносДопРасходовПоСтатьяНаСебестоимость_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 15 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Переносит движения доп.расходов по статьям расходов, распределяемым на себестоимость в Регистр накопления ""Движения Номенклатура - Доходы\Расходы"".';uk='Переносить рухи дод. витрат за статтями витрат, що розподіляються на собівартість в Регістр накопичення ""Рухи Номенклатура - Доходи\Витрати"".'");
    
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.3.16";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.Закупки.КорректироватьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.Закупки.КорректироватьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 16 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Корректирует движения регистра ""Закупки"" для документов ""Возврат товаров поставщику"".';uk='Коригує рухи регістра ""Закупівлі"" для документів ""Повернення товарів постачальнику"".'");
    
	Обработчик = Обработчики.Добавить(); 
    Обработчик.Версия = "3.2.3.17";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ПартииТоваровОрганизаций.ВосстановитьДвиженияПоПартиямТоваров";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ПартииТоваровОрганизаций.ВосстановитьДвиженияПоПартиямТоваров_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 17 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Для документов поступления товаров выполняется формирование недостающих движений по регистру ""Партии товаров оргнизаций"".
                                |Пока работа обработчика не завершена, информация о себестоимости товаров может быть некорректной.'
                                |;uk='Для документів надходження товарів виконується формування відсутніх рухів по регістру ""Партії товарів оргнизаций"".
                                |Поки робота обробника не завершена, інформація про собівартість товарів може бути некоректною.'");

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.18";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.СебестоимостьТоваров.ПровестиКомиссионныеТовары";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.СебестоимостьТоваров.ПровестиКомиссионныеТовары_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 18 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Выполняется формирование движений документов, в которых используется комиссионный товар или материал давальца по регистру накопления ""Себестоимость товаров"".
    |Пока работа обработчика не завершена, отсуствует возможность суммового учета по таким товарам.'
    |;uk='Виконується формування рухів документів, в яких використовується комісійний товар або матеріал давальца по регістру накопичення ""Собівартість товарів"".
    |Поки робота обробника не завершена, відсутній можливість сумового обліку по таких товарах.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.19";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.СебестоимостьТоваров.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.СебестоимостьТоваров.ИсправитьДвижения_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 19 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.ЗапускатьТолькоВГлавномУзле = Истина;
	Обработчик.Комментарий = НСтр("ru='Заменяет измерение ""Аналитика учета по партнерам"" с учетом договора.';uk='Замінює вимір ""Аналітика обліку за партнерам"" з урахуванням договору.'");
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.3.19";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ПартииТоваровОрганизаций.ПровестиКомиссионныеТовары";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ПартииТоваровОрганизаций.ПровестиКомиссионныеТовары_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 19 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Выполняется переформирование движений документов, в которых используется комиссионный товар или материал давальца по регистру накопления ""Партии товаров организаций"".
    |Пока работа обработчика не завершена, отсуствует возможность суммового учета по таким товарам.'
    |;uk='Виконується переформування рухів документів, в яких використовується комісійний товар або матеріал давальца по регістру накопичення ""Партії товарів організацій"".
    |Поки робота обробника не завершена, відсутній можливість сумового обліку по таких товарах.'");
    
    Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.3.20";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.РасчетСебестоимостиТоваров.СоздатьЗаданияПерерасчетаКомиссии";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.РасчетСебестоимостиТоваров.СоздатьЗаданияПерерасчетаКомиссии_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 20 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Формируются задания для перерасчета себестоимости в прошедших периодах для комиссионных товаров.';uk='Формуються завдання для перерахунку собівартості в минулих періодах для комісійних товарів.'");
    
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.3.21";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "ОбновлениеИнформационнойБазыУТ.ОчиститьСсылкиНаУстаревшиеМетаданные_3_2_3";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "ОбновлениеИнформационнойБазыУТ.ЗарегистироватьКОбработкеУстаревшиеМетаданные_3_2_3";
	Обработчик.ОчередьОтложеннойОбработки = 21 + МаксОчередь322;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Выполняет подготовку к удалению объектов с префиксом ""Удалить"" в следующих версиях конфигурации.';uk='Виконує підготовку до видалення об''єктів з префіксом ""Видалити"" в наступних версіях конфігурації.'");

#КонецОбласти // Версия_3_2_3

#Область Версия_3_2_4

	ОчередьПодредакции324 = 300;
    МаксОчередь323 = ОчередьПодредакции324;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.4.0";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "ОбновлениеИнформационнойБазыУТ.НачалоПодредакции_3_2_4";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "ОбновлениеИнформационнойБазыУТ.НачалоПодредакции_3_2_4_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = ОчередьПодредакции324;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = "";
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;

	
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.4.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыСведений.НДСНачальныеПериодыНОДляДокументовПоставки.ПерезаполнитьНДСНачальныеПериодыНОДляДокументовПоставки";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.НДСНачальныеПериодыНОДляДокументовПоставки.ПерезаполнитьНДСНачальныеПериодыНОДляДокументовПоставкиОтметитьКОтработке";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь323;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "РегистрСведений.НДСНачальныеПериодыНОДляДокументовПоставки";
	Обработчик.Комментарий = НСтр("ru='Устанавливает аналитику учета по партнерам в регистре ""Начальные периоды налоговых обязательств в разрезе документов поставки"".';uk='Встановлює аналітику обліку за партнерам у регістрі ""Початкові періоди податкових зобов''язань у розрізі документів поставки"".'");
	
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.4.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.НДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов.ОбновитьПриходныеДвиженияНДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.НДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов.ОбновитьПриходныеДвиженияНДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 1 + МаксОчередь323;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "РегистрНакопления.НДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов";
	Обработчик.Комментарий = НСтр("ru='Переформировывает движения по регистру ""НДС: Состав поставки для регистрации входящих налоговых документов"" по документам, которые формируют приходные движения.';uk='Переформовує рухи по регістру ""ПДВ: Склад поставки для реєстрації вхідних податкових документів"" за документами, які формують прибуткові рухи.'");
    
	
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.4.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.НДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов.ОбновитьРасходныеДвиженияНДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.НДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов.ОбновитьРасходныеДвиженияНДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 2 + МаксОчередь323;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "РегистрНакопления.НДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов";
	Обработчик.Комментарий = НСтр("ru='Переформировывает движения по регистру ""НДС: Состав поставки для регистрации входящих налоговых документов"" по документам, которые формируют расходные движения.';uk='Переформовує рухи по регістру ""ПДВ: Склад поставки для реєстрації вхідних податкових документів"" за документами, які формують витратні рухи.'");
	
#КонецОбласти // Версия_3_2_4

	ОчередьПодредакции325 = 400;
    
	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.5.0";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "ОбновлениеИнформационнойБазыУТ.НачалоПодредакции_3_2_5";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "ОбновлениеИнформационнойБазыУТ.НачалоПодредакции_3_2_5_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = ОчередьПодредакции325;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = "";
    Обработчик.НеЗаполнятьДанныеВОбработчикеПодредакции = Истина;

#КонецОбласти

КонецПроцедуры

// Добавляет в список процедуры-обработчики обновления данных ИБ
// для всех поддерживаемых версий библиотеки или конфигурации.
// Вызывается перед началом обновления данных ИБ для построения плана обновления.
//
//
// Параметры:
//  Обработчики - это таблица значений, возвращаемая функцией
//                НоваяТаблицаОбработчиковОбновления модуля ОбновлениеИнформационнойБазы.
//
// Пример добавления процедуры-обработчика в список:
//  Обработчик = Обработчики.Добавить();
//  Обработчик.Версия    = "1.0.0.0";
//  Обработчик.Процедура = "ОбновлениеИБ.ПерейтиНаВерсию_1_0_0_0";
// 
//  Все свойства обработчика см. в комментарии к функции
//  НоваяТаблицаОбработчиковОбновления в модуле ОбновлениеИнформационнойБазы.
//
Процедура ПриДобавленииОбработчиковОбновленияBASERP_2_1_3(Обработчики) Экспорт
    
#Область Монопольно

#Область Версия_3_2_1

#Область Справочники_НастройкиХозяйственныхОпераций_ЗаполнитьПредопределенныеНастройкиХозяйственныхОпераций

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.2";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.НастройкиХозяйственныхОпераций.ОчиститьНеИспользуемыеЭлементыСправочника";
	Обработчик.Комментарий = НСтр("ru='Очищает неиспользуемые элементы справочника ""Хозяйственные операции"".';uk='Очищає невживані елементи довідника ""Господарські операції"".'");

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.2";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.НастройкиХозяйственныхОпераций.ЗаполнитьПредопределенныеНастройкиХозяйственныхОпераций";
	Обработчик.Комментарий = НСтр("ru='Обновляет реквизиты предопределенных элементов справочника ""Настройки хозяйственных операций"" согласно заданным настройкам в текстовых макетах.';uk='Оновлює реквізити напеердвизначених елементів довідника ""Настройки господарських операцій"" згідно заданих настройок в текстових макетах.'");

#КонецОбласти

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.3";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.СтатьиНалоговыхДеклараций.ОбновитьПредопределенныеСтатьи";
	Обработчик.Комментарий = НСтр("ru='Обновляет предопределенные элементы справочника ""Статьи налоговых деклараций"".';uk='Оновлює напередвизначені елементи довідника ""Статті податкових декларацій"".'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.3";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "РегистрыСведений.НаборыСтатейНалоговыхДеклараций.ОбновитьПредопределенныеСтатьиСПредварительнойОчисткой";
	Обработчик.Комментарий = НСтр("ru='Обновляет предопределенные элементы справочника ""Наборы статей налоговых деклараций"".';uk='Оновлює напередвизначені елементи довідника ""Набори статей податкових декларацій"".'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.3";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.НаборыСтатейНалоговыхДеклараций.ОбновитьПредопределенныеСтатьи";
	Обработчик.Комментарий = НСтр("ru='Обновляет регистр сведений ""Связи наборов и статей налоговых деклараций"".';uk='Оновлює регістр відомостей ""Зв''язки наборів і статей податкових декларацій"".'");

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.4";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "НДСОбщегоНазначенияСервер.ПеренестиГраницыАктуальностиФормированияНалоговыхДокументовВЗадания";
	Обработчик.Комментарий = НСтр("ru='Обновляет предопределенные элементы справочника ""Статьи налоговых деклараций"".';uk='Оновлює напередвизначені елементи довідника ""Статті податкових декларацій"".'");

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.5";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "НДСОбщегоНазначенияСервер.ЗаполнитьКодНоменклатурыПоКлассификаторуВНалоговыхДокументах";
	Обработчик.Комментарий = НСтр("ru='Заполняет реквизит ""Код по классификатору на печать"" в налоговых документах.';uk='Заповнює реквізит ""Код за класифікатором на друк"" в податкових документах.'");

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.1.7";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.СтатьиНалоговыхДеклараций.ОбновитьПредопределенныеСтатьи";
	Обработчик.Комментарий = НСтр("ru='Обновляет предопределенные элементы справочника ""Статьи налоговых деклараций"".';uk='Оновлює напередвизначені елементи довідника ""Статті податкових декларацій"".'");
	
#КонецОбласти // Версия_3_2_1

#Область Версия_3_2_3

#Область Справочники_НастройкиХозяйственныхОпераций_ЗаполнитьПредопределенныеНастройкиХозяйственныхОпераций

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.НастройкиХозяйственныхОпераций.ЗаполнитьПредопределенныеНастройкиХозяйственныхОпераций";
	Обработчик.Комментарий = НСтр("ru='Обновляет реквизиты предопределенных элементов справочника ""Хозяйственные операции"" согласно заданным настройкам в текстовых макетах.';uk='Оновлює реквізити напередвизначених елементів довідника ""Господарські операції"" згідно заданим настройкам в текстових макетах.'");

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.3.1";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.НастройкиХозяйственныхОпераций.ОбновитьНаименованияХозяйственныхОпераций";
	Обработчик.Комментарий = НСтр("ru='Обновляет наименование предопределенных элементов справочника ""Хозяйственные операции"".';uk='Оновлює найменування напередвизначених елементів довідника ""Господарські операції"".'");
#КонецОбласти
	
#КонецОбласти // Версия_3_2_3

#КонецОбласти

#Область Отложенно


#КонецОбласти

КонецПроцедуры


// Добавляет в список процедуры-обработчики обновления данных ИБ
// для всех поддерживаемых версий библиотеки или конфигурации.
// Вызывается перед началом обновления данных ИБ для построения плана обновления.
//
//
// Параметры:
//  Обработчики - это таблица значений, возвращаемая функцией
//                НоваяТаблицаОбработчиковОбновления модуля ОбновлениеИнформационнойБазы.
//
// Пример добавления процедуры-обработчика в список:
//  Обработчик = Обработчики.Добавить();
//  Обработчик.Версия    = "1.0.0.0";
//  Обработчик.Процедура = "ОбновлениеИБ.ПерейтиНаВерсию_1_0_0_0";
// 
//  Все свойства обработчика см. в комментарии к функции
//  НоваяТаблицаОбработчиковОбновления в модуле ОбновлениеИнформационнойБазы.
//
Процедура ПриДобавленииОбработчиковОбновления(Обработчики) Экспорт

#Область НачальноеЗаполнение

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "";
	Обработчик.НачальноеЗаполнение = Истина;
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "ОбновлениеИнформационнойБазыУТ.ПервыйЗапуск";
	Обработчик.Комментарий = НСтр("ru='Инициализация настроек программы при первом запуске.';uk='Ініціалізація настройок програми при першому запуску.'");

#КонецОбласти
    
    Если Метаданные.Имя = "BASУправлениеТорговлей" Тогда
        ПриДобавленииОбработчиковОбновленияПриПереходеСBASУправлениеТорговлей_3_1(Обработчики);
    ИначеЕсли Метаданные.Имя = "BASERP" Тогда    
        ПриДобавленииОбработчиковОбновленияBASERP_2_1_3(Обработчики);
    КонецЕсли; 
    
#Область Монопольно

#Область Версия_3_2_7

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.7.3";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.СтатьиНалоговыхДеклараций.ОбновитьПредопределенныеСтатьи";
	Обработчик.Комментарий = НСтр("ru='Обновляет предопределенные элементы справочника ""Статьи налоговых деклараций"".';uk='Оновлює напередвизначені елементи довідника ""Статті податкових декларацій"".'");

#КонецОбласти // Версия_3_2_7

#Область Версия_3_2_10

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.10.7";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "ПланыВидовХарактеристик.СтатьиРасходов.ЗаполнитьСтатьяРасходовРаспределениеНачальныхОстатковНЗП";
	Обработчик.Комментарий = НСтр("ru='Обновляет реквизиты предопределенных элементов плана видов характеристик ""Статьи расходов"".';uk='Оновлює реквізити напередвизначених елементів плану видів характеристик ""Статті витрат"".'");

    Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.10.7";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "ПланыВидовХарактеристик.СтатьиРасходов.ЗаполнитьСтатьяРасходовРасходыПриПерерасчетеПропорциональногоНДС";
	Обработчик.Комментарий = НСтр("ru='Обновляет реквизиты предопределенных элементов плана видов характеристик ""Статьи расходов"".';uk='Оновлює реквізити напередвизначених елементів плану видів характеристик ""Статті витрат"".'");

#КонецОбласти // Версия_3_2_10

#Область Версия_3_2_12

#Область Справочники_УпаковкиЕдиницыИзмерения_ЗаполнитьВладельцевУНекорректныхЕдиницИзмерений

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.12.1";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.УпаковкиЕдиницыИзмерения.ЗаполнитьВладельцевУНекорректныхЕдиницИзмерений";
	Обработчик.Комментарий = НСтр("ru='Заполняет владельцев и типы измеряемых величин у тех единиц измерений, у которых они не заполнены.';uk='Заповнює власників і типи вимірюваних величин у тих одиниць вимірювань, у яких вони не заповнені.'");

#КонецОбласти

#Область Справочники_ВидыНоменклатуры_ОбработатьДанныеДляПереходаНаНовуюВерсию

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.12.1";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.ВидыНоменклатуры.ОбработатьДанныеДляПереходаНаВерсию2_1_12";
	Обработчик.Комментарий = НСтр("ru='Заполняет служебные реквизиты справочника.';uk='Заповнює службові реквізити довідника.'");

#КонецОбласти

#Область ОбновлениеИнформационнойБазыУТ_ЗаполнитьКонстантуИспользоватьРасширеннуюФормуПодбораКоличестваИВариантовОбеспечения

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.12.1";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "ОбновлениеИнформационнойБазыУТ.ЗаполнитьКонстантуИспользоватьРасширеннуюФормуПодбораКоличестваИВариантовОбеспечения";
	Обработчик.Комментарий = НСтр("ru='Заполняет значение константы ""ИспользоватьРасширеннуюФормуПодбораКоличестваИВариантовОбеспечения"".';uk='Заповнює значення константи ""ИспользоватьРасширеннуюФормуПодбораКоличестваИВариантовОбеспечения"".'");

#КонецОбласти

#Область Справочники_НастройкиХозяйственныхОпераций_ЗаполнитьПредопределенныеНастройкиХозяйственныхОпераций

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.12.1";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.НастройкиХозяйственныхОпераций.ЗаполнитьПредопределенныеНастройкиХозяйственныхОпераций";
	Обработчик.Комментарий = НСтр("ru='Обновляет реквизиты предопределенных элементов справочника  ""Настройки хозяйственных операций"" согласно заданным настройкам в текстовых макетах.';uk='Оновлює реквізити напередвизначених елементів довідника ""Настройки господарських операцій"" згідно заданим настройкам в текстових макетах.'");

#КонецОбласти

#Область Справочники_ДрайверыОборудования_СнятьСПоддержкиДрайверПриватбанкЭквайринговыеТерминалы

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.12.5";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.ДрайверыОборудования.СнятьСПоддержкиДрайверПриватбанкЭквайринговыеТерминалы";
	Обработчик.Комментарий = НСтр("ru='Выводится информация о снятии с поддержки драйвера Приватбанк: Ingenico ECRCommX.';uk='Виводиться інформація про зняття з підтримки драйвера Приватбанк: Ingenico ECRCommX.'");

#КонецОбласти

#КонецОбласти // Версия_3_2_12

#Область Версия_3_2_13

  	Обработчик = Обработчики.Добавить();
  	Обработчик.Версия = "3.2.13.2";
  	Обработчик.РежимВыполнения = "Монопольно";
  	Обработчик.Процедура = "НСИССервер.ПриОбновленииРелиза";
  	Обработчик.Комментарий = НСтр("ru='Настройка RDI.';uk='Настройка RDI.'");

#КонецОбласти // Версия_3_2_13

#Область Версия_3_2_14

#Область Справочники_НастройкиХозяйственныхОпераций_ЗаполнитьПредопределенныеНастройкиХозяйственныхОпераций

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.14.8";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.НастройкиХозяйственныхОпераций.ЗаполнитьПредопределенныеНастройкиХозяйственныхОпераций";
	Обработчик.Комментарий = НСтр("ru='Обновляет реквизиты предопределенных элементов справочника ""Хозяйственные операции"" согласно заданным настройкам в текстовых макетах.';uk='Оновлює реквізити напередвизначених елементів довідника ""Господарські операції"" згідно заданим настройкам в текстових макетах.'");

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.14.8";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.НастройкиХозяйственныхОпераций.ОбновитьНаименованияХозяйственныхОпераций";
	Обработчик.Комментарий = НСтр("ru='Обновляет наименование предопределенных элементов справочника ""Хозяйственные операции"".';uk='Оновлює найменування напередвизначених елементів довідника ""Господарські операції"".'");
    
#КонецОбласти
	
#КонецОбласти // Версия_3_2_14

#Область Версия_3_2_15

#Область Справочники_НастройкиХозяйственныхОпераций_ЗаполнитьПредопределенныеНастройкиХозяйственныхОпераций

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.15.1";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.СтатьиНалоговыхДеклараций.ОбновитьПредопределенныеСтатьи";
	Обработчик.Комментарий = НСтр("ru='Обновляет предопределенные элементы справочника ""Статьи налоговых деклараций"".';uk='Оновлює напередвизначені елементи довідника ""Статті податкових декларацій"".'");

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.15.1";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "РегистрыСведений.НаборыСтатейНалоговыхДеклараций.ОбновитьПредопределенныеСтатьиСПредварительнойОчисткой";
	Обработчик.Комментарий = НСтр("ru='Обновляет предопределенные элементы справочника ""Наборы статей налоговых деклараций"".';uk='Оновлює напередвизначені елементи довідника ""Набори статей податкових декларацій"".'");
    
#КонецОбласти
	
#КонецОбласти // Версия_3_2_15

#Область Версия_3_2_17

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.17.1";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "ПланыВидовХарактеристик.СтатьиРасходов.ЗаполнитьСтатьяРасходовАмортизацияВременнойРазницы2020";
	Обработчик.Комментарий = НСтр("ru='Обновляет реквизиты предопределенных элементов плана видов характеристик ""Статьи расходов"".';uk='Оновлює реквізити напередвизначених елементів плану видів характеристик ""Статті витрат"".'");
   
#КонецОбласти // Версия_3_2_17


#Область Версия_3_2_18

#Область СтатьиНалоговыхДеклараций

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.18.2";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.СтатьиНалоговыхДеклараций.ОбновитьПредопределенныеСтатьи";
	Обработчик.Комментарий = НСтр("ru='Обновляет предопределенные элементы справочника ""Статьи налоговых деклараций"".';uk='Оновлює напередвизначені елементи довідника ""Статті податкових декларацій"".'");

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.18.2";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "РегистрыСведений.НаборыСтатейНалоговыхДеклараций.ОбновитьПредопределенныеСтатьиСПредварительнойОчисткой";
	Обработчик.Комментарий = НСтр("ru='Обновляет предопределенные элементы справочника ""Наборы статей налоговых деклараций"".';uk='Оновлює напередвизначені елементи довідника ""Набори статей податкових декларацій"".'");
    
#КонецОбласти

#Область СтатьиНалоговыхДеклараций

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.18.2";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.СтатьиНалоговыхДеклараций.ОбновитьПредопределенныеСтатьи";
	Обработчик.Комментарий = НСтр("ru='Обновляет предопределенные элементы справочника ""Статьи налоговых деклараций"".';uk='Оновлює напередвизначені елементи довідника ""Статті податкових декларацій"".'");

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.18.2";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "РегистрыСведений.НаборыСтатейНалоговыхДеклараций.ОбновитьПредопределенныеСтатьиСПредварительнойОчисткой";
	Обработчик.Комментарий = НСтр("ru='Обновляет предопределенные элементы справочника ""Наборы статей налоговых деклараций"".';uk='Оновлює напередвизначені елементи довідника ""Набори статей податкових декларацій"".'");
    
#КонецОбласти
	
#КонецОбласти // Версия_3_2_18

#Область Версия_3_2_20

#Область СтатьиНалоговыхДеклараций

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.20.1";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.СтатьиНалоговыхДеклараций.ОбновитьПредопределенныеСтатьи";
	Обработчик.Комментарий = НСтр("ru='Обновляет предопределенные элементы справочника ""Статьи налоговых деклараций"".';uk='Оновлює напередвизначені елементи довідника ""Статті податкових декларацій"".'");

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.20.1";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "РегистрыСведений.НаборыСтатейНалоговыхДеклараций.ОбновитьПредопределенныеСтатьиСПредварительнойОчисткой";
	Обработчик.Комментарий = НСтр("ru='Обновляет предопределенные элементы справочника ""Наборы статей налоговых деклараций"".';uk='Оновлює напередвизначені елементи довідника ""Набори статей податкових декларацій"".'");
    
#КонецОбласти

#КонецОбласти // Версия_3_2_20

#Область Версия_3_2_21

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.21.1";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "ОбновлениеИнформационнойБазыУТ.ОбновитьМинимальнуюЗарплату";
	Обработчик.Комментарий = НСтр("ru='Обновляет данные в регистре ""Минимальная оплата труда"".';uk='Оновлює дані в регістрі ""Мінімальна оплата праці"".'");

#КонецОбласти // Версия_3_2_21

#Область Версия_3_2_22

#Область СтатьиНалоговыхДеклараций

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.22.2";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.СтатьиНалоговыхДеклараций.ОбновитьПредопределенныеСтатьи";
	Обработчик.Комментарий = НСтр("ru='Обновляет предопределенные элементы справочника ""Статьи налоговых деклараций"".';uk='Оновлює напередвизначені елементи довідника ""Статті податкових декларацій"".'");

#КонецОбласти

#КонецОбласти // Версия_3_2_22

#Область Версия_3_2_23

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.23.1";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "ОбновлениеИнформационнойБазыУТ.СнятьПометкуУдаленияСРанееПредопределенногоЭлементаСправочникаСтраныМира";
	Обработчик.Комментарий = НСтр("ru='Снимает пометку удаления с элемента справочника ""Страны мира"" который перестал быть предопределенным.';uk='Знімає позначку вилучення з елемента довідника ""Країни світу"" який перестав бути напередвизначеним.'");

#КонецОбласти // Версия_3_2_23

#Область Версия_3_2_25

#Область СтатьиНалоговыхДеклараций

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.25.1";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.СтатьиНалоговыхДеклараций.ОбновитьПредопределенныеСтатьи";
	Обработчик.Комментарий = НСтр("ru='Обновляет предопределенные элементы справочника ""Статьи налоговых деклараций"".';uk='Оновлює напередвизначені елементи довідника ""Статті податкових декларацій"".'");

#КонецОбласти

#КонецОбласти // Версия_3_2_25

#Область Версия_3_2_26

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.26.2";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "РегистрыСведений.УчетнаяПолитикаОрганизаций.ОбновитьСлужебныеРесурсы";
	Обработчик.Комментарий = НСтр("ru='Обновляет служебные данные в регистре учетной политики организаций.';uk='Оновлює службові дані у регістрі облікової політики організацій.'");
	
#КонецОбласти // Версия_3_2_25

#Область Версия_3_2_27

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.27.1";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "РегистрыСведений.УчетнаяПолитикаОрганизаций.ОбновитьСлужебныеРесурсы";
	Обработчик.Комментарий = НСтр("ru='Обновляет служебные данные в регистре учетной политики организаций.';uk='Оновлює службові дані у регістрі облікової політики організацій.'");
	
#КонецОбласти // Версия_3_2_27  

#Область Версия_3_2_28

#Область СтатьиНалоговыхДеклараций

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.28.1";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.СтатьиНалоговыхДеклараций.ОбновитьПредопределенныеСтатьи";
	Обработчик.Комментарий = НСтр("ru='Обновляет предопределенные элементы справочника ""Статьи налоговых деклараций"".';uk='Оновлює напередвизначені елементи довідника ""Статті податкових декларацій"".'");

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.28.1";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "РегистрыСведений.НаборыСтатейНалоговыхДеклараций.ОбновитьПредопределенныеСтатьиСПредварительнойОчисткой";
	Обработчик.Комментарий = НСтр("ru='Обновляет предопределенные элементы справочника ""Наборы статей налоговых деклараций"".';uk='Оновлює напередвизначені елементи довідника ""Набори статей податкових декларацій"".'");
	

#КонецОбласти

#КонецОбласти // Версия_3_2_28

#Область Версия_3_2_29

#Область Справочники_ДрайверыОборудования_АктуализироватьОборудование

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.29.2";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.ДрайверыОборудования.АктуализироватьОборудование_3_2_29";
	Обработчик.Комментарий = НСтр("ru='Актуализирует перечень поддерживаемого торгового оборудования.';uk='Актуалізує перелік торговельного обладнання, що підтримується.'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.29.2";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "МенеджерОборудованияВызовСервераПереопределяемый.ОбновитьПоставляемыеДрайвера";
	Обработчик.Комментарий = НСтр("ru='Обновляет поставляемые драйверы в справочнике ""Драйверы оборудования""';uk='Оновлює драйвери що поставляються в довіднику ""Драйвери обладнання""'");

#КонецОбласти

#КонецОбласти // Версия_3_2_29

#Область Версия_3_2_30  

#Область СтатьиНалоговыхДеклараций

	Обработчик = Обработчики.Добавить();
  	Обработчик.Версия = "3.2.30.1";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.СтатьиНалоговыхДеклараций.ОбновитьПредопределенныеСтатьи";
	Обработчик.Комментарий = НСтр("ru='Обновляет предопределенные элементы справочника ""Статьи налоговых деклараций"".';uk='Оновлює напередвизначені елементи довідника ""Статті податкових декларацій"".'");
	
	Обработчик = Обработчики.Добавить();
  	Обработчик.Версия = "3.2.30.1";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "РегистрыСведений.НаборыСтатейНалоговыхДеклараций.ОбновитьПредопределенныеСтатьиСПредварительнойОчисткой";
	Обработчик.Комментарий = НСтр("ru='Обновляет предопределенные элементы справочника ""Наборы статей налоговых деклараций"".';uk='Оновлює напередвизначені елементи довідника ""Набори статей податкових декларацій"".'");

#КонецОбласти	

#КонецОбласти // Версия_3_2_30    

#Область Версия_3_2_30  

#Область СтатьиНалоговыхДеклараций

	Обработчик = Обработчики.Добавить();
  	Обработчик.Версия = "3.2.31.1";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "Справочники.СтатьиНалоговыхДеклараций.ОбновитьПредопределенныеСтатьи";
	Обработчик.Комментарий = НСтр("ru='Обновляет предопределенные элементы справочника ""Статьи налоговых деклараций"".';uk='Оновлює напередвизначені елементи довідника ""Статті податкових декларацій"".'");
	
	Обработчик = Обработчики.Добавить();
  	Обработчик.Версия = "3.2.31.1";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "РегистрыСведений.НаборыСтатейНалоговыхДеклараций.ОбновитьПредопределенныеСтатьиСПредварительнойОчисткой";
	Обработчик.Комментарий = НСтр("ru='Обновляет предопределенные элементы справочника ""Наборы статей налоговых деклараций"".';uk='Оновлює напередвизначені елементи довідника ""Набори статей податкових декларацій"".'");

#КонецОбласти	

#КонецОбласти // Версия_3_2_31    

#КонецОбласти   


#Область Отложенно

#Область Версия_3_2_7

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.7.1";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.НДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов.ИсправитьДвиженияПоРегистраторамВовзратТоваровПоставщикуИРВНД";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.НДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов.ИсправитьДвиженияПоРегистраторамВовзратТоваровПоставщикуИРВНД_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 401;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Переформировывает движения по регистру ""НДС: Состав поставки для регистрации входящих налоговых документов"", которые сформированы документом ""Возврат товаров поставщику"" и ""Регистрация входящего налогового документа""';uk='Переформовує рухи по регістру ""ПДВ: Склад поставки для реєстрації вхідних податкових документів"", які сформовані документом ""Повернення товарів постачальнику"" і ""Реєстрація вхідного податкового документа""'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.7.1";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.НДСНоменклатурныйСоставДляНалоговыхНакладных.ИсправитьДвиженияПоРегистраторуВозвратТоваровОтКлиента";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.НДСНоменклатурныйСоставДляНалоговыхНакладных.ИсправитьДвиженияПоРегистраторуВозвратТоваровОтКлиента_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 401;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Переформировывает движения по регистру ""НДС: Номенклатурный состав для налоговых накладных"", которые сформированы документом ""Возврат товаров от клиента""';uk='Переформовує рухи по регістру ""ПДВ: Номенклатурний склад для податкових накладних"", які сформовані документом ""Повернення товарів від клієнта""'");
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.7.1";
    Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.НДСРеестрПолученныхНалоговыхДокументов.ЗаменитьАналитикуУчетаПоПартнерамПоРегистраторуРегистрацияВходящегоНалоговогоДокумента";
    Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.НДСРеестрПолученныхНалоговыхДокументов.ЗаменитьАналитикуУчетаПоПартнерамПоРегистраторуРегистрацияВходящегоНалоговогоДокумента_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 402;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Переформировывает движения по регистру ""НДС: Реестр полученных налоговых документов"", которые сформированы документом ""Регистрация входящего налогового документа""';uk='Переформовує рухи по регістру ""ПДВ: Реєстр отриманих податкових документів"", які сформовані документом ""Реєстрація вхідного податкового документа""'");

#КонецОбласти

#Область Версия_3_2_9

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.9.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыСведений.ДокументыФизическихЛиц.ЗаполнитьПредставлениеНаУкрОтложенно";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.ДокументыФизическихЛиц.ЗаполнитьПредставлениеНаУкрОтметитьКОбработке";
    Обработчик.ОчередьОтложеннойОбработки = 403;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "РегистрСведений.ДокументыФизическихЛиц";
	Обработчик.Комментарий = НСтр("ru='Заполняет в регистре ""Документы физических лиц"" представление на украинском языке.';uk='Заповнює в регістрі ""Документи фізичних осіб"" представлення українською мовою.'");
	
#КонецОбласти

#Область Версия_3_2_12

#Область РегистрыНакопления_ЗаказыНаСборку_ОбработатьДанныеДляПереходаНаНовуюВерсию

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.12.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ЗаказыНаСборку.ОбработатьДанныеДляПереходаНаВерсию2_1_12";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ЗаказыНаСборку.ЗарегистрироватьДанныеКОбработкеДляПереходаНаВерсию2_1_12";
	Обработчик.ОчередьОтложеннойОбработки = 401;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Обновляет движения по регистру ""Заказы на сборку"" для документов ""Сборка (разборка) товаров"".';uk='Оновлює рухи по регістру ""Замовлення на збирання"" для документів ""Збирання (розбирання) товарів"".'");

#КонецОбласти

#Область РегистрыСведений_ВариантыПереупаковки_ОбработатьДанныеДляПереходаНаНовуюВерсию

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.12.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыСведений.ВариантыПереупаковки.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыСведений.ВариантыПереупаковки.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ОчередьОтложеннойОбработки = 401;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "РегистрСведений.ВариантыПереупаковки";
	Обработчик.Комментарий = НСтр("ru='Переформирует записи в регистре """"Варианты переупаковки""""';uk='Переформує записи в регістрі """"Варіанти перепакування""""'");

#КонецОбласти

#Область РегистрыНакопления_ТоварыКОформлениюИзлишковНедостач_ОбработатьДанныеДляПереходаНаНовуюВерсию

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.12.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ТоварыКОформлениюИзлишковНедостач.ИсправитьДвижения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ТоварыКОформлениюИзлишковНедостач.ИсправитьДвижения_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 401;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Перезаполняет ""Назначение"" в движениях по регистрам:""Товары на складах"" в варианте отражения ""Уменьшить реализацию увеличить складские остатки"" и ""Товары к оформлению излишков недостач"" в варианте отражения ""Уменьшить реализацию, учесть при инвентаризации"".
    |Пока работа обработчика не завершена, информация о товарах на складах будет не корректна.'
    |;uk='Перезаповнює ""Призначення"" в рухах по регістрах:""Товари на складах"" у варіанті відображення ""Зменшити реалізацію збільшити складські залишки"" і ""Товари до оформлення надлишків нестач"" у варіанті відображення ""Зменшити реалізацію, врахувати під час інвентаризації"".
    |Поки робота обробника не завершена, інформація про товари на складах буде не коректна.'");

#КонецОбласти

#Область РегистрыНакопления_ТоварыКПоступлению_ОбработатьДанныеДляПереходаНаНовуюВерсию

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.12.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ТоварыКПоступлению.ОбработатьДанныеДляПереходаНаВерсию2_1_12";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ТоварыКПоступлению.ЗарегистрироватьДанныеКОбработкеДляПереходаНаВерсию2_1_12";
	Обработчик.ОчередьОтложеннойОбработки = 402;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Обновляет движения по регистру ""Товары к поступлению"":
    |- для документов ""Заказ на сборку (разборку)"".'
    |;uk='Оновлює рухи по регістру ""Товари до надходження"":
    |- для документів ""Замовлення на збирання (розбирання)"".'");

#КонецОбласти

#Область РегистрыНакопления_ТоварыКОформлениюПоступления_ОбработатьДанныеДляПереходаНаНовуюВерсию

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.12.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ТоварыКОформлениюПоступления.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ТоварыКОформлениюПоступления.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ОчередьОтложеннойОбработки = 402;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Заполняет движения по регистру ""Товары к оформлению поступлений"" для документов товародвижения в статусе ""К отгрузке/К сборке""';uk='Заповнює рухи по регістру ""Товари до оформлення надходжень"" для документів товароруху в статусі ""До відвантаження/До складання""'");

#КонецОбласти

#Область РегистрыНакопления_ДвиженияДенежныхСредств_ОбработатьДанныеДляПереходаНаНовуюВерсию

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.12.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДвиженияДенежныхСредств.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДвиженияДенежныхСредств.ЗарегистироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ОчередьОтложеннойОбработки = 402;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Корректирует движения по регистру ""Движения денежных средств"".
    |Пока обработчик не завершен, данные в регистре некорректны.'
    |;uk='Коригує руху по регістру ""Рухи грошових коштів"".
    |Поки обробник не завершений, дані в регістрі некоректні.'");

#КонецОбласти

#Область Документы_ЗаявкаНаВозвратТоваровОтКлиента_ОбработатьДанныеДляПереходаНаНовуюВерсию

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.12.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ЗаявкаНаВозвратТоваровОтКлиента.ОбработатьДанныеДляПереходаНаВерсию2_1_12";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ЗаявкаНаВозвратТоваровОтКлиента.ЗарегистрироватьДанныеКОбработкеДляПереходаНаВерсию2_1_12";
	Обработчик.ОчередьОтложеннойОбработки = 401;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ЗаявкаНаВозвратТоваровОтКлиента";
	Обработчик.Комментарий = НСтр("ru='Исправляет некорректно заполненный реквизит ""Способ доставки"" в заявках на возврат товаров от клиента';uk='Виправляє некоректно заповнений реквізит ""Спосіб доставки"" у заявках на повернення товарів від клієнта'");

#КонецОбласти

#Область РегистрыНакопления_РасчетыСКлиентами_ОбработатьДанныеДляПереходаНаНовуюВерсию

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.12.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.РасчетыСКлиентами.ОбработатьДанныеДляПереходаНаВерсию2_1_12";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.РасчетыСКлиентами.ЗарегистрироватьДанныеКОбработкеДляПереходаНаВерсию2_1_12";
	Обработчик.ОчередьОтложеннойОбработки = 402;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Обработчик обновления движений документа ""Реализация товаров и услуг"" по регистру РасчетыСКлиентами.
    |Корректирует движения по ресурсу ""Отгружается"" для заказов со строками сверх заказа.'
    |;uk='Обробник оновлення рухів документа ""Реалізація товарів і послуг"" по регістру РасчетыСКлиентами.
    |Коригує рухи по ресурсу ""Відвантажується"" для замовлень з рядками понад замовлення.'");

#КонецОбласти

#Область РегистрыНакопления_ОбеспечениеЗаказов_ОбработатьДанныеДляПереходаНаНовуюВерсию

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.12.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ОбеспечениеЗаказов.ОбработатьДанныеДляПереходаНаВерсию2_1_12";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ОбеспечениеЗаказов.ЗарегистрироватьДанныеКОбработкеДляПереходаНаВерсию2_1_12";
	Обработчик.ОчередьОтложеннойОбработки = 402;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Изменяет движения по регистру накопления ""Обеспечение заказов"". Пока работа обработчика не завершена, информация в регистре некорректна.';uk='Змінює рухи по регістру накопичення ""Забезпечення замовлень"". Поки робота обробника не завершена, інформація в регістрі некоректна.'");

#КонецОбласти

#Область РегистрыНакопления_ДенежныеСредстваВПути_ОбработатьДанныеДляПереходаНаНовуюВерсию

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.12.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДенежныеСредстваВПути.ОбработатьДанныеДляПереходаНаВерсию2_1_12";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДенежныеСредстваВПути.ЗарегистрироватьДанныеКОбработкеДляПереходаНаВерсию2_1_12";
    Обработчик.ОчередьОтложеннойОбработки = 403;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Исправляет движения регистра ""Денежные средства в пути"" документов ""Реализация подарочных сертификатов"" и ""Поступление безналичных ДС"" с хоз. операцией ""Конвертация валюты"".
    |До завершения обработки данные по эквайрингу и деньгах в пути могут быть некорректны.'
    |;uk='Виправляє рухи регістра ""Грошові кошти в дорозі"" документів ""Реалізація подарункових сертифікатів"" і ""Надходження безготівкових ГК"" з госп. операцією ""Конвертація валюти"".
    |До завершення обробки дані по еквайрінгу та коштам в дорозі можуть бути некоректними.'");

#КонецОбласти

#Область РегистрыНакопления_ПрочиеДоходы_ОбработатьДанныеДляПереходаНаНовуюВерсию

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.12.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ПрочиеДоходы.ОбработатьДанныеДляПереходаНаНовуюВерсию";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ПрочиеДоходы.ЗарегистрироватьДанныеКОбработкеДляПереходаНаНовуюВерсию";
	Обработчик.ОчередьОтложеннойОбработки = 401;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Исправляет движения регистра ""Прочие доходы"" документов ""Поступление безналичных ДС"" с хоз. операцией ""Конвертация валюты"".
    |До завершения обработки данные о деньгах в пути могут быть некорректны.'
    |;uk='Виправляє рухи регістра ""Інші доходи"" документів ""Надходження безготівкових ГК"" з госп. операцією ""Конвертація валюти"".
    |До завершення обробки дані про кошти в дорозі можуть бути некоректними.'");

#КонецОбласти

#Область РегистрыНакопления_ПрочиеРасходы_ОбработатьДанныеДляПереходаНаНовуюВерсию

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.12.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ПрочиеРасходы.ОбработатьДанныеДляПереходаНаВерсию2_1_12";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ПрочиеРасходы.ЗарегистрироватьДанныеКОбработкеДляПереходаНаВерсию2_1_12";
    Обработчик.ОчередьОтложеннойОбработки = 404;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Обновляет движения по регистру ""Прочие расходы"" для документов ""Авансовый отчет"".
    |Исправляет движения регистра ""Прочие расходы"" документов ""Поступление безналичных ДС"" с хоз. операцией ""Конвертация валюты"".
    |До завершения обработки данные о деньгах в пути могут быть некорректны.'
    |;uk='Оновлює рухи по регістру ""Інші витрати"" для документів ""Авансовий звіт"".
    |Виправляє рухи регістра ""Інші витрати"" документів ""Надходження безготівкових ГК"" з госп. операцією ""Конвертація валюти"".
    |До завершення обробки дані про кошти в дорозі можуть бути некоректними.'");

#КонецОбласти

#Область РегистрыНакопления_ТоварыНаСкладах_ОбработатьДанныеДляПереходаНаНовуюВерсию

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.12.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ТоварыНаСкладах.ОбработатьДанныеДляПереходаНаВерсию2_1_12";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ТоварыНаСкладах.ЗарегистрироватьДанныеКОбработкеДляПереходаНаВерсию2_1_12";
	Обработчик.ОчередьОтложеннойОбработки = 402;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Обновляется регистр накопления ""Товары на складах"". Пока работа обработчика не завершена, информация в регистре некорректна.';uk='Оновлюється регістр накопичення ""Товари на складах"". Поки робота обробника не завершена, інформація в регістрі некоректна.'");

#КонецОбласти

#Область Документы_ПеремещениеТоваров_ОбработатьДанныеДляПереходаНаНовуюВерсию

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.12.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.ПеремещениеТоваров.ОбработатьДанныеДляПереходаНаВерсию2_1_12";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.ПеремещениеТоваров.ЗарегистрироватьДанныеКОбработкеДляПереходаНаВерсию2_1_12";
	Обработчик.ОчередьОтложеннойОбработки = 401;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Документ.ПеремещениеТоваров";
	Обработчик.Комментарий = НСтр("ru='Перезаполняет реквизит ""СтатусУказанияСерийОтправитель"" в табличной части ""Товары"", если он заполнен некорректно.';uk='Перезаповнює реквізит ""СтатусУказанияСерийОтправитель"" в табличній частині ""Товари"", якщо він заповнений некоректно.'");

#КонецОбласти

#КонецОбласти // Версия_3_2_12

#Область Версия_3_2_14

#Область РегистрыНакопления_ДенежныеСредстваВПути_ОбработатьДанныеДляПереходаНаНовуюВерсию

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.14.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДенежныеСредстваВПути.ОбработатьДанныеДляПереходаНаВерсию2_1_14";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДенежныеСредстваВПути.ЗарегистрироватьДанныеКОбработкеДляПереходаНаВерсию2_1_14";
    Обработчик.ОчередьОтложеннойОбработки = 405;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Исправляет движения регистра ""Денежные средства в пути"" документов ""Поступление безналичных ДС"" с хоз. операцией ""Конвертация валюты"".
    |До завершения обработки данные по деньгах в пути могут быть некорректны.'
    |;uk='Виправляє руху регістра ""Грошові кошти в дорозі"" документів ""Надходження безготівкових ГК"" з госп. операцією ""Конвертація валюти"".
    |До завершення обробки дані по грошових коштах в дорозі можуть бути некоректними.'");

#КонецОбласти

#Область ПровестиРаботыБезНалоговогоНазначения

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.14.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.СебестоимостьТоваров.ПровестиРаботыБезНалоговогоНазначения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.СебестоимостьТоваров.ПровестиРаботыБезНалоговогоНазначения_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 403;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
    Обработчик.Комментарий = НСтр("ru='Иcправляет движения по регистру накопления ""Себестоимость товаров"". Пока работа обработчика не завершена, информация в регистре некорректна.';uk='Виправляє рухи по регістру накопичення ""Собівартість товарів"". Поки робота обробника не завершена, інформація в регістрі некоректна.'");
    
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.14.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ВыручкаИСебестоимостьПродаж.ПровестиРаботыБезНалоговогоНазначения";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ВыручкаИСебестоимостьПродаж.ПровестиРаботыБезНалоговогоНазначения_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 404;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
    Обработчик.Комментарий = НСтр("ru='Иcправляет движения по регистру накопления ""Выручка и себестоимость продаж"". Пока работа обработчика не завершена, информация в регистре некорректна.';uk='Виправляє рухи по регістру накопичення ""Виручка і собівартість продажів"". Поки робота обробника не завершена, інформація в регістрі некоректна.'");

#КонецОбласти

#Область ИсправитьВводОстатковТЗР

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.14.3";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ПартииПрочихРасходов.ИсправитьВводОстатковТЗР";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ПартииПрочихРасходов.ИсправитьВводОстатковТЗР_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 403;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
    Обработчик.Комментарий = НСтр("ru='Иcправляет движения по регистру накопления ""Партии прочих расходов"". Пока работа обработчика не завершена, информация в регистре некорректна.';uk='Виправляє рухи по регістру накопичення ""Партії інших витрат"". Поки робота обробника не завершена, інформація в регістрі некоректна.'");

#КонецОбласти

#Область КорректироватьХозОперациюРасходыПриКонвертацииВалюты

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.14.7";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ДвиженияДенежныеСредстваДоходыРасходы.КорректироватьХозОперациюРасходыПриКонвертацииВалюты";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ДвиженияДенежныеСредстваДоходыРасходы.КорректироватьХозОперациюРасходыПриКонвертацииВалюты_ДанныеДляОбновления";
    Обработчик.ОчередьОтложеннойОбработки = 406;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
    Обработчик.Комментарий = НСтр("ru='Иcправляет движения по регистру накопления ""Движения Денежные средства - Доходы/Расходы"". Пока работа обработчика не завершена, информация в регистре некорректна.';uk='Виправляє рухи по регістру накопичення ""Рухи Грошові кошти - Доходи/Витрати"". Поки робота обробника не завершена, інформація в регістрі некоректна.'");

#КонецОбласти

#КонецОбласти // Версия_3_2_14

#Область Версия_3_2_15

    Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.15.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Документы.НалоговаяНакладная.ЗаменитьСтатьюДекларацииНДС22";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Документы.НалоговаяНакладная.ЗаменитьСтатьюДекларацииНДС22_ДанныеДляОбновления";
	Обработчик.ОчередьОтложеннойОбработки = 405;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='В документах ""Налоговая накладная"" заполняется новая статья декларации НДС ""2.2 Экспортные операции, освобожденные от налогообложения"", действующая с начала 2020 года.';uk='В документах ""Податкова накладна"" заповнюється нова стаття декларації ПДВ ""2.2 Експортні операції, звільнені від оподаткування"", яка використовується з початку 2020 року.'");

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.15.5";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.ПрочиеРасходы.ОбработатьДанныеДляПереходаНаВерсию2_1_15";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.ПрочиеРасходы.ЗарегистрироватьДанныеКОбработкеДляПереходаНаВерсию2_1_15";
    Обработчик.ОчередьОтложеннойОбработки = 405;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "";
	Обработчик.Комментарий = НСтр("ru='Обновляет движения по регистру ""Прочие расходы"" для документов ""Покупка-продажа валюты"".
    |Пока работа обработчика не завершена, информация в регистре некорректна.'
    |;uk='Оновлює рухи по регістру ""Інші витрати"" для документів ""Купівля-продаж валюти"".
    |Поки роботу обробника не завершено, інформація в регістрі некоректна.'");

	
#КонецОбласти // Версия_3_2_15

#Область Версия_3_2_23

	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.2.23.1";
	Обработчик.РежимВыполнения = "Монопольно";
	Обработчик.Процедура = "МенеджерОборудованияВызовСервераПереопределяемый.ОбновитьПоставляемыеДрайвера";
	Обработчик.Комментарий = НСтр("ru='Обновляет поставляемые драйверы в справочнике ""Драйверы оборудования""';uk='Оновлює драйвери що поставляються в довіднику ""Драйвери обладнання""'");
	
#КонецОбласти // Версия_3_2_23

#Область Версия_3_2_25

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.25.2";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "РегистрыНакопления.КнигаДоходовРасходовПоЕдиномуНалогу.ПерезаписатьВсеДвиженияПриОбновлении";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "РегистрыНакопления.КнигаДоходовРасходовПоЕдиномуНалогу.ЗарегистрироватьДанныеКОбработкеДляЗаполненияНомераПлатежногоДокумента";
    Обработчик.ОчередьОтложеннойОбработки = 401;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Отчет.УчетДоходовРасходовПоЕдиномуНалогу";
	Обработчик.Комментарий = НСтр("ru='Заполняет реквизит ""Номер платежного документа"" в регистре накопления ""Книга доходов расходов по единому налогу""';uk='Заповнює реквізит ""Номер платіжного документа"" у регістрі накопичення ""Книга доходів видатків з єдиного податку""'");
	
#КонецОбласти // Версия_3_2_25

#Область Версия_3_2_29

	Обработчик = Обработчики.Добавить();
    Обработчик.Версия = "3.2.29.1";
	Обработчик.РежимВыполнения = "Отложенно";
	Обработчик.Процедура = "Справочники.Склады.ЗаполнитьНалоговуюИнспекцию";
	Обработчик.ПроцедураЗаполненияДанныхОбновления = "Справочники.Склады.ЗарегистрироватьДанныеКОбработкеДляЗаполненияНалоговойИнспеции";
    Обработчик.ОчередьОтложеннойОбработки = 406;
	Обработчик.ПроцедураПроверки = "ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы";
	Обработчик.БлокируемыеОбъекты = "Справочник.Склады";
	Обработчик.Комментарий = НСтр("ru='Заполняет налоговую инспецию в справочнике складов по данным устаревшего кода КОАТУУ';uk='Заповнює податкову інспекцію у довіднику складів за даними застарілого коду КОАТУУ'");
	
#КонецОбласти // Версия_3_2_29

#КонецОбласти

КонецПроцедуры

// Вызывается перед процедурами-обработчиками обновления данных ИБ.
//
Процедура ПередОбновлениемИнформационнойБазы() Экспорт
	
КонецПроцедуры

// Вызывается после завершения обновления данных ИБ.
// 
// Параметры:
//   ПредыдущаяВерсия       - Строка - версия до обновления. "0.0.0.0" для "пустой" ИБ.
//   ТекущаяВерсия          - Строка - версия после обновления.
//   ВыполненныеОбработчики - ДеревоЗначений - список выполненных процедур-обработчиков обновления,
//                                             сгруппированных по номеру версии.
//   ВыводитьОписаниеОбновлений - Булево - (возвращаемое значение) если установить Истина,
//                                то будет выведена форма с описанием обновлений. По умолчанию, Истина.
//   МонопольныйРежим           - Булево - Истина, если обновление выполнялось в монопольном режиме.
//
// Пример обхода выполненных обработчиков обновления:
//
//	Для Каждого Версия Из ВыполненныеОбработчики.Строки Цикл
//		
//		Если Версия.Версия = "*" Тогда
//			// Обработчик, который может выполнятся при каждой смене версии.
//		Иначе
//			// Обработчик, который выполняется для определенной версии.
//		КонецЕсли;
//		
//		Для Каждого Обработчик Из Версия.Строки Цикл
//			...
//		КонецЦикла;
//		
//	КонецЦикла;
//
Процедура ПослеОбновленияИнформационнойБазы(Знач ПредыдущаяВерсия, Знач ТекущаяВерсия,
		Знач ВыполненныеОбработчики, ВыводитьОписаниеОбновлений, МонопольныйРежим) Экспорт
        
	
	ПараметрЗапускаНаСервере = ПараметрыСеанса.ПараметрыКлиентаНаСервере.Получить("ПараметрЗапуска");
	Если ПараметрЗапускаНаСервере<>Неопределено Тогда
		Если Найти(ПараметрЗапускаНаСервере,"Trade103Data")<>0 Тогда
			ВыводитьОписаниеОбновлений = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Вызывается при подготовке табличного документа с описанием изменений в программе.
//
// Параметры:
//   Макет - ТабличныйДокумент - описание обновления всех библиотек и конфигурации.
//           Макет можно дополнить или заменить.
//           См. также общий макет ОписаниеИзмененийСистемы.
//
Процедура ПриПодготовкеМакетаОписанияОбновлений(Знач Макет) Экспорт
	
КонецПроцедуры

// Добавляет в список процедуры-обработчики перехода с другой программы (с другим именем конфигурации).
// Например, для перехода между разными, но родственными конфигурациями: базовая -> проф -> корп.
// Вызывается перед началом обновления данных ИБ.
//
// Параметры:
//  Обработчики - ТаблицаЗначений - с колонками:
//    * ПредыдущееИмяКонфигурации - Строка - имя конфигурации, с которой выполняется переход;
//    * Процедура                 - Строка - полное имя процедуры-обработчика перехода с программы ПредыдущееИмяКонфигурации. 
//                                  Например, "ОбновлениеИнформационнойБазыУПП.ЗаполнитьУчетнуюПолитику"
//                                  Обязательно должна быть экспортной.
//
// Пример добавления процедуры-обработчика в список:
//  Обработчик = Обработчики.Добавить();
//  Обработчик.ПредыдущееИмяКонфигурации  = "УправлениеТорговлей";
//  Обработчик.Процедура                  = "ОбновлениеИнформационнойБазыУПП.ЗаполнитьУчетнуюПолитику";
//
Процедура ПриДобавленииОбработчиковПереходаСДругойПрограммы(Обработчики) Экспорт
	
	
КонецПроцедуры

// Позволяет переопределить режим обновления данных информационной базы.
// Для использования в редких (нештатных) случаях перехода, не предусмотренных в
// стандартной процедуре определения режима обновления.
//
// Параметры:
//   РежимОбновленияДанных - Строка - в обработчике можно присвоить одно из значений:
//              "НачальноеЗаполнение"     - если это первый запуск пустой базы (области данных);
//              "ОбновлениеВерсии"        - если выполняется первый запуск после обновление конфигурации базы данных;
//              "ПереходСДругойПрограммы" - если выполняется первый запуск после обновление конфигурации базы данных, 
//                                          в которой изменилось имя основной конфигурации.
//
//   СтандартнаяОбработка  - Булево - если присвоить Ложь, то стандартная процедура
//                                    определения режима обновления не выполняется, 
//                                    а используется значение РежимОбновленияДанных.
//
Процедура ПриОпределенииРежимаОбновленияДанных(РежимОбновленияДанных, СтандартнаяОбработка) Экспорт
	
КонецПроцедуры

// Вызывается после выполнения всех процедур-обработчиков перехода с другой программы (с другим именем конфигурации),
// и до начала выполнения обновления данных ИБ.
//
// Параметры:
//  ПредыдущееИмяКонфигурации    - Строка - имя конфигурации до перехода.
//  ПредыдущаяВерсияКонфигурации - Строка - имя предыдущей конфигурации (до перехода).
//  Параметры                    - Структура - 
//    * ВыполнитьОбновлениеСВерсии   - Булево - по умолчанию Истина. Если установить Ложь, 
//        то будут выполнена только обязательные обработчики обновления (с версией "*").
//    * ВерсияКонфигурации           - Строка - номер версии после перехода. 
//        По умолчанию, равен значению версии конфигурации в свойствах метаданных.
//        Для того чтобы выполнить, например, все обработчики обновления с версии ПредыдущаяВерсияКонфигурации, 
//        следует установить значение параметра в ПредыдущаяВерсияКонфигурации.
//        Для того чтобы выполнить вообще все обработчики обновления, установить значение "0.0.0.1".
//    * ОчиститьСведенияОПредыдущейКонфигурации - Булево - по умолчанию Истина. 
//        Для случаев когда предыдущая конфигурация совпадает по имени с подсистемой текущей конфигурации, следует указать Ложь.
//
Процедура ПриЗавершенииПереходаСДругойПрограммы(Знач ПредыдущееИмяКонфигурации, 
	Знач ПредыдущаяВерсияКонфигурации, Параметры) Экспорт
	
    
    Если ПредыдущееИмяКонфигурации = "УправлениеТорговлейДляУкраины" Тогда
        Параметры.ВерсияКонфигурации = ПредыдущаяВерсияКонфигурации;
    КонецЕсли; 
    
	
КонецПроцедуры

#КонецОбласти

#Область ПереименованныеОбъектыМетаданных

// Заполняет переименования объектов метаданных (подсистемы и роли).
//
// Подробнее: см. ОбщегоНазначенияПереопределяемый.ПриДобавленииПереименованийОбъектовМетаданных().
//
Процедура ПриДобавленииПереименованийОбъектовМетаданных(Итог) Экспорт
	
	//ОписаниеПодсистемы = Новый Структура("Имя, Версия");
	//ПриДобавленииПодсистемы(ОписаниеПодсистемы);
	
КонецПроцедуры

#КонецОбласти

#Область УниверсальныеПроцедурыОбновления

// Используется для записи движений
//
Процедура ЗаписатьНаборЗаписей(МенеджерРегистра, ИмяРегистра, Ссылка, ТаблицыДляДвижений = Неопределено, РегистрироватьНаУзлахПлановОбмена = Ложь) Экспорт

	НаборЗаписей = МенеджерРегистра[ИмяРегистра].СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Ссылка);
	Если ТаблицыДляДвижений <> Неопределено Тогда
		НаборЗаписей.Загрузить(ТаблицыДляДвижений["Таблица" + ИмяРегистра]);
	КонецЕсли; 
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей, РегистрироватьНаУзлахПлановОбмена);
	
КонецПроцедуры

// Используется для записи движений
//
Процедура ЗаписатьНаборыЗаписей(МенеджерРегистров, ИменаРегистров, Ссылка, ТаблицыДляДвижений = Неопределено, РегистрироватьНаУзлахПлановОбмена = Ложь) Экспорт

	Регистры = Новый Структура(ИменаРегистров);
	
	Для Каждого Регистр Из Регистры Цикл
		ЗаписатьНаборЗаписей(МенеджерРегистров, Регистр.Ключ, Ссылка, ТаблицыДляДвижений, РегистрироватьНаУзлахПлановОбмена);
	КонецЦикла;
	
КонецПроцедуры

// На основе данных о необходимости переформирования движений перезаписывает движения документа.
//	Для работы функции необходимо, чтобы процедура ИнициализироватьДанныеДокумента модуля менеджера документа, поддерживала параметр Регистры.
//	см. например, Документ.ПриходныйОрдерНаТовары.ИнициализироватьДанныеДокумента
//
// Параметры:
//  ПолноеИмяДокумента					 - Строка, Массив - имя документа, по которому нужно переформировать движения. Например, "Документ.ПриходныйОрдерНаТовары"
//																Если документов несколько, то нужно передать их имена в массиве.
//  ПолныеИменаРегистров				 - Строка, Массив - имя регистра, по которому нужно переформировать движения. Например, "РегистрНакопления.ТоварыНаСкладах"
//																Если регистров несколько, то их имена нужно передать в массиве.
//  Очередь								 - Число - очередь отоженной обработки данных для контроля данных на предмет блокировки другими обработчиками
// 
// Возвращаемое значение:
//  Булево - ИСТИНА, если обработка всех движений завершена 
//
Функция ПерезаписатьДвиженияИзОчереди(ПолныеИменаДокументов, ПолныеИменаРегистров, Очередь) Экспорт
	
	Если ТипЗнч(ПолныеИменаДокументов) = Тип("Строка") Тогда
		СписокДокументов = СтрРазделить(ПолныеИменаДокументов, ",", Ложь);
	Иначе
		СписокДокументов = ПолныеИменаДокументов;
	КонецЕсли;
	
	Если ТипЗнч(ПолныеИменаРегистров) = Тип("Строка") Тогда
		Регистры = СтрРазделить(ПолныеИменаРегистров, ",", Ложь);
	Иначе
		Регистры = ПолныеИменаРегистров;
	КонецЕсли;
		
		
	Для Каждого ПолноеИмяДокумента Из СписокДокументов Цикл
		
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмяДокумента);
		
		Для Каждого ПолноеИмяРегистра Из Регистры Цикл
			ИмяРегистра = СтрРазделить(ПолноеИмяРегистра,".",Ложь)[1];
			МенеджерРегистра = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмяРегистра);    
			
			ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
			ДополнительныеПараметры.ДополнительныеИсточникиДанных = МенеджерДокумента.ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра);
			
			ВыборкаПоРегистраторам = ОбновлениеИнформационнойБазы.ВыбратьРегистраторыРегистраДляОбработки(Очередь,
																										ПолноеИмяДокумента,
																										ПолноеИмяРегистра,
																										ДополнительныеПараметры);
			
			Пока ВыборкаПоРегистраторам.Следующий() Цикл
				
				НачатьТранзакцию();
				
				Попытка
					
					// Устанавливаем управляемую блокировку, чтобы провести ответственное чтение объекта
					Блокировка = Новый БлокировкаДанных;
					
					ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяДокумента);
					ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаПоРегистраторам.Регистратор);
					ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
					
					Блокировка.Заблокировать();
					
					НаборЗаписей = МенеджерРегистра.СоздатьНаборЗаписей();
					НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаПоРегистраторам.Регистратор);
					
					//Выполним ответственное чтение реквизита "Проведен"
					РегистраторПроведен = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыборкаПоРегистраторам.Регистратор, "Проведен");
					
					Если РегистраторПроведен Тогда
						ДопСвойства = Новый Структура;
						ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(ВыборкаПоРегистраторам.Регистратор, ДопСвойства);
						МенеджерДокумента.ИнициализироватьДанныеДокумента(ВыборкаПоРегистраторам.Регистратор, ДопСвойства, ИмяРегистра);
					
						НаборЗаписей.Загрузить(ДопСвойства.ТаблицыДляДвижений["Таблица" + ИмяРегистра]);
					КонецЕсли;
					
					ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
					
					ЗафиксироватьТранзакцию();
				Исключение
					
					ОтменитьТранзакцию();
					
					ТекстСообщения = НСтр("ru='Не удалось перезаписать движения в регистр %ИмяРегистра% по документу %Ссылка% по причине: %Причина%';uk='Не вдалося перезаписати рухи в регістр %ИмяРегистра% по документу %Ссылка% по причині: %Причина%'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", ВыборкаПоРегистраторам.Регистратор);
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяРегистра%", ПолноеИмяРегистра);
					
					ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
					Метаданные.НайтиПоПолномуИмени(ПолноеИмяДокумента), ВыборкаПоРегистраторам.Регистратор, ТекстСообщения);
					
				КонецПопытки;
			КонецЦикла;
			
			
		КонецЦикла;
		
	КонецЦикла;
	
    ВсеСделано = Истина;
    Для Каждого ПолноеИмяРегистра Из Регистры Цикл
        ВсеСделано = ВсеСделано И НЕ ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Очередь, ПолноеИмяРегистра);
    КонецЦикла;    
	Возврат ВсеСделано;
	
КонецФункции


// На основе данных о необходимости переформирования движений перезаписывает движения документов.
//	Для работы функции необходимо, чтобы процедура ИнициализироватьДанныеДокумента модуля менеджера документа, поддерживала параметр Регистры.
//	см. например, Документ.ПриходныйОрдерНаТовары.ИнициализироватьДанныеДокумента
//
// Параметры:
//  ПолныеИменаРегистров				 - Строка, Массив - имя регистра, по которому нужно переформировать движения. Например, "РегистрНакопления.ТоварыНаСкладах"
//																Если регистров несколько, то их имена нужно передать в массиве.
//  Очередь								 - Число - очередь отоженной обработки данных для контроля данных на предмет блокировки другими обработчиками
// 
// Возвращаемое значение:
//  Булево - ИСТИНА, если обработка всех движений завершена 
//
Функция ПерезаписатьДвиженияИзОчередиПоВсемДокументам(ПолныеИменаРегистров, Очередь) Экспорт
	
	Если ТипЗнч(ПолныеИменаРегистров) = Тип("Строка") Тогда
		Регистры = СтрРазделить(ПолныеИменаРегистров, ",", Ложь);
	Иначе
		Регистры = ПолныеИменаРегистров;
	КонецЕсли;
		
		
    Для Каждого ПолноеИмяРегистра Из Регистры Цикл
        ИмяРегистра = СтрРазделить(ПолноеИмяРегистра,".",Ложь)[1];
        МенеджерРегистра = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмяРегистра);    
        
        ВыборкаПоРегистраторам = ОбновлениеИнформационнойБазы.ВыбратьРегистраторыРегистраДляОбработки(
            Очередь,
            Неопределено, // ПолноеИмяДокумента
            ПолноеИмяРегистра,
            Неопределено  // ДополнительныеПараметры
        );
        
        Пока ВыборкаПоРегистраторам.Следующий() Цикл
            
            НачатьТранзакцию();
            
            ИмяДокумента       = ВыборкаПоРегистраторам.Регистратор.Метаданные().Имя;
            ПолноеИмяДокумента = "Документ." + ИмяДокумента;
            
            Попытка
                
                // Устанавливаем управляемую блокировку, чтобы провести ответственное чтение объекта
                Блокировка = Новый БлокировкаДанных;
                
                ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяДокумента);
                ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаПоРегистраторам.Регистратор);
                ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
                
                Блокировка.Заблокировать();
                
                
                НаборЗаписей = МенеджерРегистра.СоздатьНаборЗаписей();
                НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаПоРегистраторам.Регистратор);
                
                // Выполним ответственное чтение реквизита "Проведен"
                РегистраторПроведен = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВыборкаПоРегистраторам.Регистратор, "Проведен");
                
                Если РегистраторПроведен Тогда
                    ДопСвойства = Новый Структура;
                    ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(ВыборкаПоРегистраторам.Регистратор, ДопСвойства);
                    Документы[ИмяДокумента].ИнициализироватьДанныеДокумента(ВыборкаПоРегистраторам.Регистратор, ДопСвойства, ИмяРегистра);
                
                    НаборЗаписей.Загрузить(ДопСвойства.ТаблицыДляДвижений["Таблица" + ИмяРегистра]);
                КонецЕсли;
                
                ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
                
                ЗафиксироватьТранзакцию();
            Исключение
                
                ОтменитьТранзакцию();
                
                ТекстСообщения = НСтр("ru='Не удалось перезаписать движения в регистр %ИмяРегистра% по документу %Ссылка% по причине: %Причина%';uk='Не вдалося перезаписати рухи в регістр %ИмяРегистра% по документу %Ссылка% по причині: %Причина%'");
                ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", ВыборкаПоРегистраторам.Регистратор);
                ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
                ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяРегистра%", ПолноеИмяРегистра);
                
                ЗаписьЖурналаРегистрации(
                    ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
                    УровеньЖурналаРегистрации.Предупреждение,
                    Метаданные.НайтиПоПолномуИмени(ПолноеИмяДокумента), 
                    ВыборкаПоРегистраторам.Регистратор, 
                    ТекстСообщения
                );
                
            КонецПопытки;
        КонецЦикла;
        
        
    КонецЦикла;
	
    ВсеСделано = Истина;
    Для Каждого ПолноеИмяРегистра Из Регистры Цикл
        ВсеСделано = ВсеСделано И НЕ ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Очередь, ПолноеИмяРегистра);
    КонецЦикла;    
	Возврат ВсеСделано;
	
КонецФункции


// Адаптирует запрос механизма проведения для использования в функции ОбновлениеИнформационнойБазыУТ.РегистраторыДляПерепроведения,
// делая его запросом для всех проведенных документов.
// Параметры:
//  ИзначальныйТекстЗапроса - Строка - текст запроса механизма проведения, который или формирует таблицу движений, или создает временные таблицы,
//												используемые в запросах формирующих таблицы движений
//												Требования к тексту запроса:
//												- все объединяемые таблицы запроса, формирующего таблицу движений имеют один синоним;
//												- если есть соедининения с другими таблицами, то оно реализовано таким образом, что будет
//													корректно работать, если не установлен отбор по ссылке;
//												- не используются временные таблицы;
//												- не используются вложенные запросы и группировки;
//												- нет упорядочивания;
//												- параметры запроса рассчитываются или по данным шапки, или являются значениями констант;
// 												- для всех полей непримитивных типов заполнены значения по умолчанию, как они хранятся в регистре.
//													Это или пустая ссылка типа, или НЕОПРЕДЕЛЕНО (для полей составного типа), то НЕ должно быть NULL
//												- параметр, устанавливающий отбор по ссылке называется &Ссылка
//												- в конце запроса не должно быть знака ";"
// 												- в тексте запроса, формирующим таблицу движения, должны выбираться только ЗНАЧИМЫЕ
//													для формирования движений поля (нет полей НомерСтроки, Порядок и т.д.);
//  ПолноеИмяРегистра				 - Строка - полное имя регистра, как оно задается в языке запросов (например, РегистрНакопления.ТоварыНаСкладах)
//  ПолноеИмяДокумента				 - Строка - полное имя документа, как оно задается в языке запросов (например, Документ.ВводОстатков)
//  СинонимТаблицыДокумента			 - Строка - синоним таблицы документа, используемый в запросе
//  ПереопределениеРасчетаПараметров - Структура - по умолчанию все параметры, которые есть в запросе заменяются на <СинонимТаблицыДокумента>.Ссылка.<ИмяПараметра>
//  												Для параметра &Период по умолчанию подставляется <СинонимТаблицыДокумента>.Ссылка.Дата
//  												Если параметры расчитываются иначе, то в этой структуре в ключе передается имя параметра, в значении
//													- выражение для его расчета
//  ТекстыЗапросаВременныхТаблиц     - Соответствие - тексты запросов временных таблиц, используемых в тексте запроса механизма проведения.
//													  Ключ соответствия - имя временной таблицы, Значение - текст запроса временной таблицы.
//													  Параметр необходимо использовать когда механизм формирования движений опирается не на
//													  физическую таблицу документа, а на предварительно созданную временную таблицу.
//													  Поля выборки временной таблицы должны содержать поле "Ссылка" - ссылку на физическую таблицу проводимого документа.
//
// Возвращаемое значение:
//   - строка - адаптированный текст запроса
//
Функция АдаптироватьЗапросМеханизмаПроведения(Знач ИзначальныйТекстЗапроса,
														ПолноеИмяДокумента,
														СинонимТаблицыДокумента,
														ПереопределениеРасчетаПараметров,
														ТекстыЗапросаВременныхТаблиц = Неопределено) Экспорт
	
	ИзначальныйТекстЗапроса = СтрЗаменить(ИзначальныйТекстЗапроса,
										"ВЫБРАТЬ",
										"ВЫБРАТЬ
										|	ТаблицаДокументаОбновлениеИБ.Ссылка КАК Регистратор,");
				
	ИзначальныйТекстЗапроса = СтрЗаменить(ИзначальныйТекстЗапроса,
										"ГДЕ",
										"
										|ГДЕ
										|	ТаблицаДокументаОбновлениеИБ.Ссылка.Проведен
										|	И ");
	
	Если ТекстыЗапросаВременныхТаблиц <> Неопределено Тогда
		
		Для Каждого Элемент Из ТекстыЗапросаВременныхТаблиц Цикл
			
			ПревыйСимвол = СтрНайти(Элемент.Значение, "ПОМЕСТИТЬ");
			ПоследнийСимвол = СтрНайти(Элемент.Значение, Элемент.Ключ, НаправлениеПоиска.СНачала, ПревыйСимвол) + СтрДлина(Элемент.Ключ);
			ПодстановкаПоиска = Сред(Элемент.Значение, ПревыйСимвол, ПоследнийСимвол - ПревыйСимвол);
			ПодстановкаВременнойТаблицы = СтрЗаменить(Элемент.Значение, ПодстановкаПоиска, "");
			ИзначальныйТекстЗапроса = СтрЗаменить(ИзначальныйТекстЗапроса, Элемент.Ключ, "(" + ПодстановкаВременнойТаблицы + ")");
			
		КонецЦикла;
		
	КонецЕсли;
	
	ИзначальныйТекстЗапроса = СтрЗаменить(ИзначальныйТекстЗапроса,СинонимТаблицыДокумента,"ТаблицаДокументаОбновлениеИБ");
	ИзначальныйТекстЗапроса = СтрЗаменить(ИзначальныйТекстЗапроса,"ТаблицаДокументаОбновлениеИБ.Ссылка = &Ссылка","ИСТИНА");
	
	Запрос = Новый Запрос;
	Запрос.Текст = ИзначальныйТекстЗапроса;
	
	ПараметрыЗапроса = Запрос.НайтиПараметры();
	МетаданныеДокумента = Метаданные.НайтиПоПолномуИмени(ПолноеИмяДокумента);
	
	Для Каждого Параметр из ПараметрыЗапроса Цикл
		
		ТекстЗамены = Неопределено;
		
		Если ПереопределениеРасчетаПараметров.Свойство(Параметр.Имя) Тогда
			ТекстЗамены = ПереопределениеРасчетаПараметров[Параметр.Имя];
			ТекстЗамены = СтрЗаменить(ТекстЗамены, СинонимТаблицыДокумента, "ТаблицаДокументаОбновлениеИБ");
		ИначеЕсли Параметр.Имя = "Ссылка" Тогда
			ТекстЗамены = "ТаблицаДокументаОбновлениеИБ.Ссылка";
		ИначеЕсли Параметр.Имя = "Период" Тогда
			ТекстЗамены = "ТаблицаДокументаОбновлениеИБ.Ссылка.Дата";
		ИначеЕсли МетаданныеДокумента.Реквизиты.Найти(Параметр.Имя) <> Неопределено Тогда
			ТекстЗамены = "ТаблицаДокументаОбновлениеИБ.Ссылка." + Параметр.Имя;
		КонецЕсли;	
		
		Если ТекстЗамены <> Неопределено Тогда
			ИзначальныйТекстЗапроса = СтрЗаменить(ИзначальныйТекстЗапроса,"&" + Параметр.Имя, ТекстЗамены);
		КонецЕсли;
			
	КонецЦикла;
	
	Возврат ИзначальныйТекстЗапроса;
	
КонецФункции

// Результат адаптации запроса для фукнции ОбновлениеИнформационнойБазыУТ.РегистраторыДляПерепроведения
// 
// Возвращаемое значение:
//  Структура - поля:
//	* ТекстЗапроса - Строка - должен быть объявлен обязательно, адаптированный текст запроса
//	* ЗначенияПараметров - Структура - значения параметров запроса, которые вычисляются из констант
//										(не зависят от конкретного документа)
//
Функция РезультатАдаптацииЗапроса() Экспорт
	
	РезультатАдаптацииЗапроса = Новый Структура;
	РезультатАдаптацииЗапроса.Вставить("ТекстЗапроса");
	РезультатАдаптацииЗапроса.Вставить("ЗначенияПараметров", Новый Структура);
	
	Возврат РезультатАдаптацииЗапроса;
КонецФункции

// Выбирает регистраторы, по которым движения записанные в регистр отличаются от тех, которые формируются запросом механизма проведения
// Параметры:
//  РезультатАдаптацииЗапроса - Структура - см. ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса 
// 												Требования к запросам:
// 												- текст не должен содержать обращения к временным таблицам
//												- все запросы должны быть адаптированы для выборки без отбора по ссылке.
//													это можно сделать  с помощью фукнции ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения, 
//													 если текст запроса удовлетворяет ее условиям. Если нет - можно попробовать адаптировать текст самостоятельно
// 												- в тексте запроса, формирующим таблицу движения, должны выбираться только ЗНАЧИМЫЕ
//													для формирования движений поля (нет полей НомерСтроки, Порядок и т.д.);
// 												- нет упорядочивания; 
// 												- есть поле "Регистратор"; 
//  ПолноеИмяРегистра				 - Строка - полное имя регистра, как оно задается в языке запросов (например, РегистрНакопления.ТоварыНаСкладах)
//  ПолноеИмяДокумента				 - Строка - полное имя документа, как оно задается в языке запросов (например, Документ.ВводОстатков)
//  ЗначенияПараметров - Структура - если параметры не рассчитываются в запросе, а устанавливаются из кода, то в этом параметре нужно передать их значения
//									Например, это значения учитываемых ФО
//  Очередь - Число, Неопределено - если параметр <> Неопределено, то при составлении массива регистраторов учитывается информация о выполнении обработчиков обновления
//										- исключаются регистраторы, которые не обновлены обработчиками предыдущих очередей
//										- оптимизируется выборка данных, т.к. берутся только те регистраторы, которые еще не обрабатывались в текущей очереди
//									Важно, чтобы тексты запросов адаптировались тоже с учетом очереди (либо тоже без учета очереди)
// Возвращаемое значение:
//   - Массив - массив ссылок на документы, по которым нужно переформировать движения по регистру
//
Функция РегистраторыДляПерепроведения(РезультатАдаптацииЗапроса,
										ПолноеИмяРегистра,
										ПолноеИмяДокумента) Экспорт
	
	Очередь = Неопределено;
	ТекстЗапросаФормированияДвижений = РезультатАдаптацииЗапроса.ТекстЗапроса;
	ЗначенияПараметров = РезультатАдаптацииЗапроса.ЗначенияПараметров;
	
	ТекстРезультирующегоЗапроса	= "";
	
	ЧастиИмениРегистра = СтрРазделить(ПолноеИмяРегистра, ".", Ложь);
	
	ТипРегистра = ЧастиИмениРегистра[0];
	ИмяРегистра = ЧастиИмениРегистра[1];
	
	Если ТипРегистра = "РегистрНакопления"
		Или ТипРегистра = "РегистрСведений" Тогда
		МетаданныеРегистра = Метаданные.НайтиПоПолномуИмени(ПолноеИмяРегистра);
	Иначе
		ТекстИсключения = НСтр("ru='Функция пока не поддерживает работу с регистрами типа %ТипРегистра%.';uk='Функція поки не підтримує роботу з регістрами типу %ТипРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ТипРегистра%", ТипРегистра);
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
		
	ТекстРегистра = 
	"ВЫБРАТЬ";
	
	ТекстВыборкиСуммирующегоЗапроса =
	"ВЫБРАТЬ";
	ТекстГруппировкиСуммирующиегоЗапроса = "
	|СГРУППИРОВАТЬ ПО";	
	ТекстУсловияСуммирующиегоЗапроса = "
	|ИМЕЮЩИЕ
	|	ЛОЖЬ";	
	
	Если ТипРегистра = "РегистрСведений" Тогда
		ТекстЗапросаФормированияДвижений = СтрЗаменить(ТекстЗапросаФормированияДвижений,
											"ВЫБРАТЬ",
											"ВЫБРАТЬ
											|	1 КАК КонтрольноеПолеОбновлениеИБ,");
		ТекстРегистра = СтрЗаменить(ТекстРегистра,
											"ВЫБРАТЬ",
											"ВЫБРАТЬ
											|	-1,");
		ТекстВыборкиСуммирующегоЗапроса = СтрЗаменить(ТекстВыборкиСуммирующегоЗапроса,
											"ВЫБРАТЬ",
											"ВЫБРАТЬ
											|	СУММА(КонтрольноеПолеОбновлениеИБ) КАК КонтрольноеПолеОбновлениеИБ,");
		ТекстУсловияСуммирующиегоЗапроса = ТекстУсловияСуммирующиегоЗапроса + "
		| ИЛИ СУММА(КонтрольноеПолеОбновлениеИБ) <> 0";
	КонецЕсли;				
	
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапросаФормированияДвижений);
	
	Запрос = СхемаЗапроса.ПакетЗапросов[0];
	
	ВсеКолонки = Новый Массив;
	
	Для каждого Колонка из Запрос.Колонки Цикл
		
		ВсеКолонки.Добавить(Колонка.Псевдоним);
		
		Если ТипРегистра = "РегистрНакопления"
			И МетаданныеРегистра.Ресурсы.Найти(Колонка.Псевдоним) <> Неопределено Тогда		
			
			ТекстРегистра = ТекстРегистра + "
			|	-ТаблицаРегистра." + Колонка.Псевдоним + ",";
			
			ТекстВыборкиСуммирующегоЗапроса = ТекстВыборкиСуммирующегоЗапроса + "
			|	СУММА(ВложенныйЗапрос." + Колонка.Псевдоним + ") КАК " + Колонка.Псевдоним + ",";
			
			ТекстУсловияСуммирующиегоЗапроса = ТекстУсловияСуммирующиегоЗапроса + "
			|	ИЛИ СУММА(ВложенныйЗапрос." + Колонка.Псевдоним + ") <> 0";
			
		ИначеЕсли Не Колонка.Псевдоним = "КонтрольноеПолеОбновлениеИБ" Тогда
			ТекстРегистра = ТекстРегистра + "
			|	ТаблицаРегистра." + Колонка.Псевдоним + ",";
			
			ТекстВыборкиСуммирующегоЗапроса = ТекстВыборкиСуммирующегоЗапроса + "
			|	ВложенныйЗапрос." + Колонка.Псевдоним + " КАК " + Колонка.Псевдоним + ",";
			
			ТекстГруппировкиСуммирующиегоЗапроса = ТекстГруппировкиСуммирующиегоЗапроса + " 
			|	ВложенныйЗапрос." + Колонка.Псевдоним + ",";
		КонецЕсли;
				
	КонецЦикла;
	
	ТекстВставкиЗапросФормирующийДвижения = "";
	
	Для каждого Измерение из МетаданныеРегистра.Измерения Цикл		
		
		Если ВсеКолонки.Найти(Измерение.Имя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ТекстРегистра = ТекстРегистра + "
		|	ТаблицаРегистра." + Измерение.Имя + ",";
		
		ТекстВыборкиСуммирующегоЗапроса = ТекстВыборкиСуммирующегоЗапроса + "
		|	ВложенныйЗапрос." + Измерение.Имя + " КАК " + Измерение.Имя + ",";
		
		ТекстГруппировкиСуммирующиегоЗапроса = ТекстГруппировкиСуммирующиегоЗапроса + " 
		|	ВложенныйЗапрос." + Измерение.Имя + ",";
		
		ТекстВставкиЗапросФормирующийДвижения = ТекстВставкиЗапросФормирующийДвижения + "
		|	&ПустоеЗначение" + Измерение.Имя + " КАК " + Измерение.Имя + ",";
		
		ЗначенияПараметров.Вставить("ПустоеЗначение" + Измерение.Имя, Измерение.Тип.ПривестиЗначение());
		
	КонецЦикла;
	
	Для каждого Ресурс из МетаданныеРегистра.Ресурсы Цикл		
		
		Если ВсеКолонки.Найти(Ресурс.Имя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТипРегистра = "РегистрНакопления" Тогда
			ТекстРегистра = ТекстРегистра + "
			|	-ТаблицаРегистра." + Ресурс.Имя + ",";
			
			ТекстВыборкиСуммирующегоЗапроса = ТекстВыборкиСуммирующегоЗапроса + "
			|	СУММА(ВложенныйЗапрос." + Ресурс.Имя + ") КАК " + Ресурс.Имя + ",";
			
			ТекстУсловияСуммирующиегоЗапроса = ТекстУсловияСуммирующиегоЗапроса + "
			|	ИЛИ СУММА(ВложенныйЗапрос." + Ресурс.Имя + ") <> 0";
			
			ТекстВставкиЗапросФормирующийДвижения = ТекстВставкиЗапросФормирующийДвижения + "
			|	0 КАК " + Ресурс.Имя + ",";
		Иначе	
			ТекстРегистра = ТекстРегистра + "
			|	ТаблицаРегистра." + Ресурс.Имя + ",";
			
			ТекстВыборкиСуммирующегоЗапроса = ТекстВыборкиСуммирующегоЗапроса + "
			|	ВложенныйЗапрос." + Ресурс.Имя + " КАК " + Ресурс.Имя + ",";
			
			ТекстГруппировкиСуммирующиегоЗапроса = ТекстГруппировкиСуммирующиегоЗапроса + " 
			|	ВложенныйЗапрос." + Ресурс.Имя + ",";
			
			ТекстВставкиЗапросФормирующийДвижения = ТекстВставкиЗапросФормирующийДвижения + "
			|	&ПустоеЗначение" + Ресурс.Имя + " КАК " + Ресурс.Имя + ",";
			
			ЗначенияПараметров.Вставить("ПустоеЗначение" + Ресурс.Имя, Ресурс.Тип.ПривестиЗначение());
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Реквизит из МетаданныеРегистра.Реквизиты Цикл		
		
		Если ВсеКолонки.Найти(Реквизит.Имя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ТекстРегистра = ТекстРегистра + "
		|	ТаблицаРегистра." + Реквизит.Имя + ",";
		
		ТекстВыборкиСуммирующегоЗапроса = ТекстВыборкиСуммирующегоЗапроса + "
		|	ВложенныйЗапрос." + Реквизит.Имя + " КАК " + Реквизит.Имя + ",";
		
		ТекстГруппировкиСуммирующиегоЗапроса = ТекстГруппировкиСуммирующиегоЗапроса + " 
		|	ВложенныйЗапрос." + Реквизит.Имя + ",";
		
		ТекстВставкиЗапросФормирующийДвижения = ТекстВставкиЗапросФормирующийДвижения + "
		|	&ПустоеЗначение" + Реквизит.Имя + " КАК " + Реквизит.Имя + ",";
		
		ЗначенияПараметров.Вставить("ПустоеЗначение" + Реквизит.Имя, Реквизит.Тип.ПривестиЗначение());
		
	КонецЦикла;
	
	ТекстРегистра = Лев(ТекстРегистра, СтрДлина(ТекстРегистра) - 1);
	ТекстВыборкиСуммирующегоЗапроса = Лев(ТекстВыборкиСуммирующегоЗапроса, СтрДлина(ТекстВыборкиСуммирующегоЗапроса) - 1);
	ТекстГруппировкиСуммирующиегоЗапроса = Лев(ТекстГруппировкиСуммирующиегоЗапроса, СтрДлина(ТекстГруппировкиСуммирующиегоЗапроса) - 1);
	
	Если Не ПустаяСтрока(ТекстВставкиЗапросФормирующийДвижения) Тогда
		ТекстВставкиЗапросФормирующийДвижения = Лев(ТекстВставкиЗапросФормирующийДвижения, СтрДлина(ТекстВставкиЗапросФормирующийДвижения) - 1);
		ТекстЗапросаФормированияДвижений = СтрЗаменить(ТекстЗапросаФормированияДвижений,
											"ИЗ",
											",
											|" +ТекстВставкиЗапросФормирующийДвижения + "
											|ИЗ");
	КонецЕсли;
			
	ТекстРегистра = ТекстРегистра + "
	|ИЗ
	|	" + ПолноеИмяРегистра + " КАК ТаблицаРегистра";
	
	Если Очередь <> Неопределено Тогда
		ТекстРегистра = ТекстРегистра + "
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ " + ПолноеИмяРегистра + ".Изменения КАК РегистраторыКОбработке
		|		ПО ТаблицаРегистра.Регистратор = РегистраторыКОбработке.Регистратор
		|			И (РегистраторыКОбработке.Узел = &ТекущаяОчередь)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированоРегистратор КАК ВТЗаблокированоРегистратор
		|		ПО ТаблицаРегистра.Регистратор = ВТЗаблокированоРегистратор.Регистратор
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированоСсылка КАК ВТЗаблокированоСсылка
		|		ПО ТаблицаРегистра.Регистратор = ВТЗаблокированоСсылка.Ссылка";
	КонецЕсли;
	
	ТекстРегистра = ТекстРегистра + "
	|ГДЕ
	|	ТаблицаРегистра.Регистратор ССЫЛКА " + ПолноеИмяДокумента;
	
	Если Очередь <> Неопределено Тогда
		ТекстРегистра = ТекстРегистра + "
		|	И ВТЗаблокированоРегистратор.Регистратор ЕСТЬ NULL 
		|	И ВТЗаблокированоСсылка.Ссылка ЕСТЬ NULL ";
	КонецЕсли;
	
	ТекстРезультирующегоЗапроса = ТекстРезультирующегоЗапроса + "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НеправильныеДвижения.Регистратор КАК Регистратор
	|ИЗ
	|(" + ТекстВыборкиСуммирующегоЗапроса + "
	|ИЗ
	|	("
	+ ТекстЗапросаФормированияДвижений 
	+ "
	|ОБЪЕДИНИТЬ ВСЕ
	|" 
	+ ТекстРегистра
	+ ") КАК ВложенныйЗапрос "
	+ ТекстГруппировкиСуммирующиегоЗапроса
	+ ТекстУсловияСуммирующиегоЗапроса + ") КАК НеправильныеДвижения";
	
	ЗапросВыборки = Новый Запрос;
	
	Для Каждого Параметр из ЗначенияПараметров Цикл
		
		ЗапросВыборки.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);
		
	КонецЦикла;
	
	Если Очередь <> Неопределено Тогда
		
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
		
		ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(Очередь, ПолноеИмяДокумента, МенеджерВременныхТаблиц);
		ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(Очередь, ПолноеИмяРегистра, МенеджерВременныхТаблиц);
	
		ТекстРезультирующегоЗапроса = СтрЗаменить(ТекстРезультирующегоЗапроса, "ВТЗаблокированоРегистратор","ВТЗаблокировано" + ИмяРегистра);
		ТекстРезультирующегоЗапроса = СтрЗаменить(ТекстРезультирующегоЗапроса, "ВТЗаблокированоСсылка","ВТЗаблокировано" + СтрРазделить(ПолноеИмяДокумента,".")[1]);
	
		ЗапросВыборки.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		ЗапросВыборки.УстановитьПараметр("ТекущаяОчередь", ПланыОбмена.ОбновлениеИнформационнойБазы.УзелПоОчереди(Очередь));
		
	КонецЕсли;
	
	ЗапросВыборки.Текст = ТекстРезультирующегоЗапроса;
	
	Регистраторы = ЗапросВыборки.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	
	Возврат Регистраторы;
КонецФункции

// Сообщает пользователю, работа с формой временно ограничена, т.к. не завершен переход на новую версию программы.
//
Процедура СообщитьЧтоРаботаСФормойВременноОграничена() Экспорт

	ТекстСообщения = НСтр("ru='Работа с формой временно ограничена, т.к. не завершен переход на новую версию программы. Данные отображаемые в форме могут быть не корректными.';uk='Робота з формою тимчасово обмежена, оскільки не завершений перехід на нову версію програми. Дані, які відображаються у формі, можуть бути не коректними.'");
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения); 
	
КонецПроцедуры


// Возвращает массив неповторяющихся имен регистраторов регистра(ов) накопления в виде [Документ.СборкаТоваров, Документ.РасходныйОрдерНаТовары, ...]
// Параметры:
//  ИменаРегистров - Строка, Массив - имена регистра накопления, для которых нужно вернуть массив регистраторов. Например, "ТоварыНаСкладах"
//									  Если регистров несколько, то их имена нужно передать в массиве или через ",", например, "ТоварыНаСкладах,ТоварыОрганизаций"
// Возвращаемое значение:
//  Массив - массив имен регистраторов регистров в виде [Документ.СборкаТоваров, Документ.РасходныйОрдерНаТовары, ...]
//
Функция МассивРегистраторовРегистровНакопления(ИменаРегистров) Экспорт

	Если ТипЗнч(ИменаРегистров) = Тип("Строка") Тогда
		Регистры = СтрРазделить(ИменаРегистров, ",", Ложь);
	Иначе
		Регистры = ИменаРегистров;
	КонецЕсли;
    
	МассивДокументов = Новый Массив;
    
    Для Каждого ИмяРегистра Из Регистры Цикл
    	ТипыРегистраторов = Метаданные.РегистрыНакопления[ИмяРегистра].СтандартныеРеквизиты.Регистратор.Тип.Типы();
    	Для Каждого ТипРегистратора Из ТипыРегистраторов Цикл
    		Регистратор = Метаданные.НайтиПоТипу(ТипРегистратора);
            Если Регистратор <> Неопределено Тогда
                ИмяРегистратора = "Документ." + Регистратор.Имя;
                Если МассивДокументов.Найти(ИмяРегистратора) = Неопределено Тогда
                    МассивДокументов.Добавить(ИмяРегистратора);
                КонецЕсли; 
    		КонецЕсли;
        КонецЦикла;
    КонецЦикла;
	
	Возврат МассивДокументов;

КонецФункции


#КонецОбласти

#Область ПроцедурыДляЗаменыСсылок

// Используется для замены ссылок в справочниках, документах, регистрах
//
// Параметры:
//  ПутьКРеквизиту		- Строка - путь к реквизиту, в котором хранится ссылка (формат строки аналогичен сообщениям, выводимым при помощи команды "Найти ссылки на объект")
//  СоответствиеСсылок	- Соответствие - соответствие старой и новой ссылки (ключ - старая ссылка, значение - новая ссылка)
//
// Примеры:
//  1. Замена ссылок в реквизите "ДокументОснование" документа "ЗаказНаПеремещение"
//	ЗаменитьСсылки("Документ.ЗаказНаПеремещение.Реквизит.ДокументОснование", СоответствиеДокументов);
//
//  2. Замена ссылок в реквизите "ДокументОтгрузки" табличной части "Товары" документа "ПриходныйОрдерНаТовары"
//	ЗаменитьСсылки("Документ.ПриходныйОрдерНаТовары.ТабличнаяЧасть.Товары.Реквизит.ДокументОтгрузки", СоответствиеДокументов);
//
Процедура ЗаменитьСсылки(ПутьКРеквизиту, СоответствиеСсылок) Экспорт

	ПараметрыВыборки = ПараметрыВыборкиСвязанныхДанных(ПутьКРеквизиту);
	
	СписокСсылок = Новый Массив;
	Для каждого КлючИЗначение Из СоответствиеСсылок Цикл
		СписокСсылок.Добавить(КлючИЗначение.Ключ);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПараметрыВыборки.ТекстЗапроса;
	Запрос.УстановитьПараметр("СписокСсылок", СписокСсылок);
	
	ОбработкаЗавершена = Ложь;
	Пока НЕ ОбработкаЗавершена Цикл
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		ОбработкаЗавершена = (Выборка.Количество() = 0);
		ОбойтиИЗаменитьСсылки(Выборка, ПараметрыВыборки, СоответствиеСсылок, Неопределено);
	КонецЦикла;
	
КонецПроцедуры

// Выбирает данные для обработки и заменяет ссылки
//
// Параметры:
//  ПолноеИмяОбъекта			 - Строка - Полное имя объекта для которого будут заменяться ссылки
//  ИмяРеквизитаСНовойСсылкой	 - Строка - Имя реквизита в котором хранится ссылка на новый объект
//  ПустоеЗначениеРеквизита		 - Произвольный - Пустое значение, используется чтобы выбрать объекты в которых новая ссылка заполнена
//  СвязанныеДанные				 - Массив - Список объектов в которых встречается ссылка на объект
//  Очередь						 - Число - Очередь обработчика обновления
// 
// Возвращаемое значение:
//   - Булево - Истина, если все ссылки заменены, иначе Ложь.
//
Функция ВыбратьСвязанныеДанныеИЗаменитьСсылки(ПолноеИмяОбъекта, ИмяРеквизитаСНовойСсылкой, ПустоеЗначениеРеквизита, СвязанныеДанные, Очередь) Экспорт
	
	ОбработкаЗавершена = Истина;
	
	ОбъектыДляОбработки = СгруппироватьСвязанныеДанные(СвязанныеДанные);
	
	Для каждого ПараметрыОбъектаДляОбработки Из ОбъектыДляОбработки Цикл
		
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		// Получаем данные для обработки
		Если ПараметрыОбъектаДляОбработки.ВидТаблицы = "РегистрНакопления" 
			ИЛИ ПараметрыОбъектаДляОбработки.ВидТаблицы = "РегистрСведений" 
				И НЕ ПараметрыОбъектаДляОбработки.ЭтоНезависимыйРегистрСведений Тогда
				
			ПараметрыДляОбработки = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуРегистраторовРегистраДляОбработки(
											Очередь, 
											Неопределено, 
											ПараметрыОбъектаДляОбработки.ПолноеИмяОбъекта,
											МенеджерВременныхТаблиц);
			
		ИначеЕсли ПараметрыОбъектаДляОбработки.ВидТаблицы = "РегистрСведений" 
			И ПараметрыОбъектаДляОбработки.ЭтоНезависимыйРегистрСведений Тогда
			
			ПараметрыДляОбработки = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуИзмеренийНезависимогоРегистраСведенийДляОбработки(
											Очередь,
											ПараметрыОбъектаДляОбработки.ПолноеИмяОбъекта,
											МенеджерВременныхТаблиц);
											
		Иначе	
			
			ПараметрыДляОбработки = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(
											Очередь, 
											ПараметрыОбъектаДляОбработки.ПолноеИмяОбъекта, 
											МенеджерВременныхТаблиц);
			
		КонецЕсли; 
		
		Если НЕ ПараметрыДляОбработки.ЕстьДанныеДляОбработки Тогда
			Продолжить;
		КонецЕсли;
		
		ОбработкаЗавершена = Ложь; // Данные для обработки есть
		
		Если НЕ ПараметрыДляОбработки.ЕстьЗаписиВоВременнойТаблице Тогда
			Продолжить;
		КонецЕсли; 
		
		СоздатьВременнуюТаблицуОбъектовДляЗаменыСсылок(
				ПараметрыОбъектаДляОбработки.СписокПараметровВыборки, 
				ПараметрыДляОбработки.ИмяВременнойТаблицы, 
				ПолноеИмяОбъекта,
				ИмяРеквизитаСНовойСсылкой, 
				"ВТ_ОбъектыДляЗаменыСсылок",
				МенеджерВременныхТаблиц);
				
		ТекстЗапроса = 
	  	"ВЫБРАТЬ
		|	ОбъектыДляЗаменыСсылок.СсылкаНаОбъект КАК СсылкаНаОбъект,
		|	МИНИМУМ(ВЫБОР
		|			КОГДА ОбъектыДляЗаменыСсылок.НоваяСсылка <> &ПустоеЗначение
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК ЕстьНоваяСсылка
		|ПОМЕСТИТЬ ВТ_НаличеНовыхСсылок
		|ИЗ
		|	ВТ_ОбъектыДляЗаменыСсылок КАК ОбъектыДляЗаменыСсылок
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъектыДляЗаменыСсылок.СсылкаНаОбъект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТДляОбработки.Ссылка КАК Ссылка
		|ИЗ
		|	&ВТДляОбработки КАК ВТДляОбработки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НаличеНовыхСсылок КАК ВТ_НаличеНовыхСсылок
		|		ПО (ВТ_НаличеНовыхСсылок.СсылкаНаОбъект = ВТДляОбработки.Ссылка)
		|ГДЕ
		|	ЕСТЬNULL(ВТ_НаличеНовыхСсылок.ЕстьНоваяСсылка, ИСТИНА) = ИСТИНА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбъектыДляЗаменыСсылок.СсылкаНаОбъект,
		|	ОбъектыДляЗаменыСсылок.СтараяСсылка,
		|	ОбъектыДляЗаменыСсылок.НоваяСсылка
		|ИЗ
		|	ВТ_ОбъектыДляЗаменыСсылок КАК ОбъектыДляЗаменыСсылок";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВТДляОбработки", ПараметрыДляОбработки.ИмяВременнойТаблицы);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТДляОбработки.Ссылка", "ВТДляОбработки." + ПараметрыОбъектаДляОбработки.ПолеОтбора);
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ПустоеЗначение", ПустоеЗначениеРеквизита);
		Результат = Запрос.ВыполнитьПакет();
		
		ТаблицаЗамены = Результат[2].Выгрузить();
		
		Выборка = Результат[1].Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НачатьТранзакцию();
			
			НайденныйОбъект = ПолучитьОбъектДляЗаменыСсылок(Выборка.Ссылка, ПараметрыОбъектаДляОбработки);
			Если НайденныйОбъект = Неопределено Тогда
				ОтменитьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			ОбновлениеИнформационнойБазыУТ.ЗаменитьВсеСсылкиВОбъекте(
					Выборка.Ссылка, 
					ПараметрыОбъектаДляОбработки.СписокПараметровВыборки, 
					ТаблицаЗамены, 
					НайденныйОбъект);
					
			// Перед записью нужно установить отбор по новой ссылке
			Если ПараметрыОбъектаДляОбработки.ЭтоНезависимыйРегистрСведений Тогда
				СтруктураПоиска = Новый Структура("СсылкаНаОбъект", Выборка.Ссылка);
				ДанныеДляЗаменыСсылок = ТаблицаЗамены.НайтиСтроки(СтруктураПоиска);
				НайденныйОбъект.Отбор.Регистратор.Установить(ДанныеДляЗаменыСсылок[0].НоваяСсылка);
			КонецЕсли;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НайденныйОбъект);
			
			ЗафиксироватьТранзакцию();
			
		КонецЦикла;
		
	КонецЦикла;

	Возврат ОбработкаЗавершена;
	
КонецФункции

// Отмечает, что данные, связанные с переданными объектами, будут обработаны при обновлении
//
// Параметры:
//  СвязанныеДанные	- Массив - содержит путь к реквизиту, в котором хранится ссылка (формат строки аналогичен сообщениям, выводимым при помощи команды "Найти ссылки на объект")
//  СписокСсылок	- Массив - список ссылок на которые нужно найти связь
//  Параметры		- Структура - параметры обработчика обновления
//
Процедура ОтметитьКОбработкеСвязанныеДанные(СвязанныеДанные, СписокСсылок, Параметры) Экспорт

	Для каждого ПутьКРеквизиту Из СвязанныеДанные Цикл
		
		ПараметрыВыборки = ПараметрыВыборкиСвязанныхДанных(ПутьКРеквизиту, Ложь);
		
		Запрос = Новый Запрос;
		Запрос.Текст = ПараметрыВыборки.ТекстЗапроса;
		Запрос.УстановитьПараметр("СписокСсылок", СписокСсылок);
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Тогда
			Прервать;
		КонецЕсли; 
		
		Если ПараметрыВыборки.ВидТаблицы = "РегистрНакопления"
			ИЛИ ПараметрыВыборки.ВидТаблицы = "РегистрСведений" 
				И НЕ ПараметрыВыборки.ЭтоНезависимыйРегистрСведений Тогда
			
			ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
			ДополнительныеПараметры.ЭтоДвижения = Истина;
			ДополнительныеПараметры.ПолноеИмяРегистра = ПараметрыВыборки.ПолноеИмяОбъекта;
			
		ИначеЕсли ПараметрыВыборки.ВидТаблицы = "РегистрСведений" 
			И ПараметрыВыборки.ЭтоНезависимыйРегистрСведений Тогда
			
			ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
			ДополнительныеПараметры.ЭтоНезависимыйРегистрСведений = Истина;
			ДополнительныеПараметры.ПолноеИмяРегистра = ПараметрыВыборки.ПолноеИмяОбъекта;
			
		Иначе
			ДополнительныеПараметры = Неопределено;
		КонецЕсли; 
		
		Данные = Результат.Выгрузить().ВыгрузитьКолонку("СсылкаНаОбъект");
		ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Данные, ДополнительныеПараметры);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаменитьВсеСсылкиВОбъекте(СсылкаНаОбъект, СписокПараметровВыборки, ТаблицаЗаменыИлиСоответствиеСсылок, Объект) Экспорт

	Если ТипЗнч(ТаблицаЗаменыИлиСоответствиеСсылок) = Тип("ТаблицаЗначений") Тогда
		
		СтруктураПоиска = Новый Структура("СсылкаНаОбъект", СсылкаНаОбъект);
		ДанныеДляЗаменыСсылок = ТаблицаЗаменыИлиСоответствиеСсылок.НайтиСтроки(СтруктураПоиска);
		Для каждого ПараметрыВыборки Из СписокПараметровВыборки Цикл
			Для каждого ПараметрыЗаменыСсылок Из ДанныеДляЗаменыСсылок Цикл
				Если ЗначениеЗаполнено(ПараметрыЗаменыСсылок.НоваяСсылка) Тогда
					ЗаменитьСсылкиВОбъекте(
							Объект, 
							ПараметрыВыборки, 
							ПараметрыЗаменыСсылок.НоваяСсылка, 
							ПараметрыЗаменыСсылок.СтараяСсылка);
							
				КонецЕсли; 
			КонецЦикла; 
		КонецЦикла; 
		
	Иначе
		
		НоваяСсылка = ТаблицаЗаменыИлиСоответствиеСсылок.Получить(СсылкаНаОбъект);
		Для каждого ПараметрыВыборки Из СписокПараметровВыборки Цикл
			Если ЗначениеЗаполнено(НоваяСсылка) Тогда
				ЗаменитьСсылкиВОбъекте(
						Объект, 
						ПараметрыВыборки, 
						НоваяСсылка, 
						СсылкаНаОбъект);
			КонецЕсли; 
		КонецЦикла; 
		
	КонецЕсли;
	
КонецПроцедуры

// Заменяет ссылки в объекте
//
// Параметры:
//  Объект				- ПроизвольныйОбъект - Объект в котором нужно заменить ссылки
//  ПараметрыВыборки	- Структура - Параметр формируется с помощью ОбновлениеИнформационнойБазыУТ.ПараметрыВыборкиСвязанныхДанных()
//  НоваяСсылка			- ПроизвольнаяСсылка - Ссылка на новый объект
//  СтараяСсылка		- ПроизвольнаяСсылка - Ссылка на старый объект
//
Процедура ЗаменитьСсылкиВОбъекте(Объект, ПараметрыВыборки, НоваяСсылка, СтараяСсылка)

	КоллекцияОбъекта = Неопределено;
	
	Если ПараметрыВыборки.ВидТаблицы = "РегистрСведений" Тогда

		КоллекцияОбъекта = Объект;
		
	ИначеЕсли ПараметрыВыборки.ВидТаблицы = "РегистрНакопления" Тогда
		
		КоллекцияОбъекта = Объект;
		
	ИначеЕсли ПараметрыВыборки.ВидТаблицы = "Справочник" ИЛИ ПараметрыВыборки.ВидТаблицы = "Документ" Тогда
		
		Если ПараметрыВыборки.ИмяПодчиненнойТаблицы <> "" Тогда
			КоллекцияОбъекта = Объект[ПараметрыВыборки.ИмяПодчиненнойТаблицы];
		КонецЕсли;
		
	КонецЕсли;
	
	Если КоллекцияОбъекта <> Неопределено Тогда
		Для каждого ДанныеСтроки Из КоллекцияОбъекта Цикл
			Если ДанныеСтроки[ПараметрыВыборки.Реквизит] = СтараяСсылка Тогда
				ДанныеСтроки[ПараметрыВыборки.Реквизит] = НоваяСсылка;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Объект[ПараметрыВыборки.Реквизит] = НоваяСсылка;
	КонецЕсли; 
	
КонецПроцедуры

Функция ПараметрыВыборкиСвязанныхДанных(ПутьКРеквизиту, ВыбратьПорцию = Истина) Экспорт

	МассивСтрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ПутьКРеквизиту, ".");
	ВидТаблицы = МассивСтрок[0];
	ИмяТаблицы = МассивСтрок[1];
	
	Если МассивСтрок.ВГраница() = 3 Тогда
		ИмяПодчиненнойТаблицы = "";
		Реквизит = МассивСтрок[3];
	Иначе
		ИмяПодчиненнойТаблицы = МассивСтрок[3];
		Реквизит = МассивСтрок[5];
	КонецЕсли; 
	
	ЭтоНезависимыйРегистрСведений = Ложь;
	
	Если ВидТаблицы = "РегистрНакопления" Тогда
		ПолеОтбора = "Регистратор";
	ИначеЕсли ВидТаблицы = "РегистрСведений" Тогда
		Если Метаданные.РегистрыСведений[ИмяТаблицы].РежимЗаписи = Метаданные.СвойстваОбъектов.РежимЗаписиРегистра.ПодчинениеРегистратору Тогда
			ПолеОтбора = "Регистратор";
		Иначе
			ПолеОтбора = Реквизит;
			ЭтоНезависимыйРегистрСведений = Истина;
		КонецЕсли;
	ИначеЕсли ВидТаблицы = "Справочник" ИЛИ ВидТаблицы = "Документ" Тогда
		ПолеОтбора = "Ссылка";
	Иначе
		ПолеОтбора = "";
	КонецЕсли;
	
	ИмяОсновнойТаблицы = ВидТаблицы + "." + ИмяТаблицы + ?(ИмяПодчиненнойТаблицы <> "", "." + ИмяПодчиненнойТаблицы, "");
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ " + ?(ВыбратьПорцию, "ПЕРВЫЕ 500", "") + "
	|	Т." + Реквизит + " КАК СтараяСсылка,
	|	" + ?(ЗначениеЗаполнено(ПолеОтбора), "Т." + ПолеОтбора, """") + " КАК СсылкаНаОбъект
	|ИЗ
	|	" + ИмяОсновнойТаблицы + " КАК Т
	|ГДЕ
	|	Т." + Реквизит + " В (&СписокСсылок)";
	
	ПараметрыВыборки = Новый Структура;
	ПараметрыВыборки.Вставить("ТекстЗапроса", ТекстЗапроса);
	ПараметрыВыборки.Вставить("ВидТаблицы", ВидТаблицы);
	ПараметрыВыборки.Вставить("ИмяТаблицы", ИмяТаблицы);
	ПараметрыВыборки.Вставить("Реквизит", Реквизит);
	ПараметрыВыборки.Вставить("ПолеОтбора", ПолеОтбора);
	ПараметрыВыборки.Вставить("ЭтоНезависимыйРегистрСведений", ЭтоНезависимыйРегистрСведений);
	ПараметрыВыборки.Вставить("ИмяОсновнойТаблицы", ИмяОсновнойТаблицы);
	ПараметрыВыборки.Вставить("ИмяПодчиненнойТаблицы", ИмяПодчиненнойТаблицы);
	ПараметрыВыборки.Вставить("ПолноеИмяОбъекта", ВидТаблицы + "." + ИмяТаблицы);
	
	Возврат ПараметрыВыборки;

КонецФункции

Процедура ОбойтиИЗаменитьСсылки(Выборка, ПараметрыВыборки, СоответствиеСсылок, Очередь)

	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		НайденныйОбъект = ПолучитьОбъектДляЗаменыСсылок(Выборка.СсылкаНаОбъект, ПараметрыВыборки);
		Если НайденныйОбъект = Неопределено Тогда
			ОтменитьТранзакцию();
			Продолжить;
		КонецЕсли;
		
		Если ПараметрыВыборки.ЭтоНезависимыйРегистрСведений Тогда
			НайденныйОбъект.Отбор.Регистратор.Установить(СоответствиеСсылок.Получить(Выборка.СтараяСсылка));
		КонецЕсли;
		
		ЗаменитьСсылкиВОбъекте(НайденныйОбъект, ПараметрыВыборки, СоответствиеСсылок.Получить(Выборка.СтараяСсылка), Выборка.СтараяСсылка);
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(НайденныйОбъект);
		
		// Нужно удалить старые записи если это независимый регистр
		Если ПараметрыВыборки.ЭтоНезависимыйРегистрСведений Тогда
			НайденныйОбъектУдаление = РегистрыСведений[ПараметрыВыборки.ИмяТаблицы].СоздатьНаборЗаписей();
			НайденныйОбъектУдаление.Отбор.Регистратор.Установить(Выборка.СсылкаНаОбъект);
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НайденныйОбъектУдаление);
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьОбъектДляЗаменыСсылок(СсылкаНаОбъект, ПараметрыВыборки) Экспорт

	НайденныйОбъект = Неопределено;
	
	Если ПараметрыВыборки.ВидТаблицы = "РегистрСведений" Тогда

		Если НЕ ПараметрыВыборки.ЭтоНезависимыйРегистрСведений Тогда
			Попытка
				Блокировка = Новый БлокировкаДанных;
				ЭлементБлокировки = Блокировка.Добавить(ПараметрыВыборки.ПолноеИмяОбъекта + ".НаборЗаписей");
				ЭлементБлокировки.УстановитьЗначение("Регистратор", СсылкаНаОбъект);
				Блокировка.Заблокировать();
			Исключение
				Возврат Неопределено;
			КонецПопытки; 
		КонецЕсли; 
		
		НайденныйОбъект = РегистрыСведений[ПараметрыВыборки.ИмяТаблицы].СоздатьНаборЗаписей();
		
		Если ПараметрыВыборки.ЭтоНезависимыйРегистрСведений Тогда
			НайденныйОбъект.Отбор[ПараметрыВыборки.Реквизит].Установить(СсылкаНаОбъект);
		Иначе
			НайденныйОбъект.Отбор.Регистратор.Установить(СсылкаНаОбъект);
		КонецЕсли; 
		
		НайденныйОбъект.Прочитать();
		
	ИначеЕсли ПараметрыВыборки.ВидТаблицы = "РегистрНакопления" Тогда
		
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПараметрыВыборки.ПолноеИмяОбъекта + ".НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", СсылкаНаОбъект);
			Блокировка.Заблокировать();
		Исключение
			Возврат Неопределено;
		КонецПопытки; 
		
		НайденныйОбъект = РегистрыНакопления[ПараметрыВыборки.ИмяТаблицы].СоздатьНаборЗаписей();
		НайденныйОбъект.Отбор.Регистратор.Установить(СсылкаНаОбъект);
		НайденныйОбъект.Прочитать();
		
	ИначеЕсли ПараметрыВыборки.ВидТаблицы = "Справочник" ИЛИ ПараметрыВыборки.ВидТаблицы = "Документ" Тогда
		
		Попытка
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПараметрыВыборки.ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", СсылкаНаОбъект);
			Блокировка.Заблокировать();
		Исключение
			Возврат Неопределено;
		КонецПопытки; 
		
		НайденныйОбъект = СсылкаНаОбъект.ПолучитьОбъект();
		
	КонецЕсли;

	Возврат НайденныйОбъект;

КонецФункции

// Создает временную таблицу которая используются для замены ссылок
//
// Параметры:
//  СписокПараметровВыборки					- Массив - Параметры выборки сформированные с помощью функции ПараметрыВыборкиСвязанныхДанных()
//  ИмяТаблицыСсылокДляОбработки			- Строка - Имя временной таблицы в которой расположены ссылки для обработки
//  ПолноеИмяОбъекта						- Строка - Имя объекта на который выполнен поиск ссылок
//  ИмяРеквизитаСНовойСсылкой				- Строка - Имя реквизита в котором хранится новая ссылка
//  ИмяВременнойТаблицы			 			- Строка - Имя временной таблицы в которую будут помещены данные для замены
//  МенеджерВременныхТаблиц					- МенеджерВременныхТаблиц
//
Процедура СоздатьВременнуюТаблицуОбъектовДляЗаменыСсылок(СписокПараметровВыборки, ИмяТаблицыСсылокДляОбработки, ПолноеИмяОбъекта, ИмяРеквизитаСНовойСсылкой, ИмяВременнойТаблицы, МенеджерВременныхТаблиц) Экспорт

	ТекстЗапроса = "";
	Для каждого ПараметрыВыборки Из СписокПараметровВыборки Цикл
		
		ТекстЗапроса = ТекстЗапроса + Символы.ПС + ?(ТекстЗапроса <> "", "ОБЪЕДИНИТЬ ВСЕ", "") + Символы.ПС +  
		"ВЫБРАТЬ
		|	ВТДляОбработки." + ПараметрыВыборки.ПолеОтбора + " КАК СсылкаНаОбъект,
		|	ТаблицаОбъекта.Ссылка КАК СтараяСсылка,
		|	ТаблицаОбъекта." + ИмяРеквизитаСНовойСсылкой + " КАК НоваяСсылка
		|ИЗ
		|	" + ИмяТаблицыСсылокДляОбработки + " КАК ВТДляОбработки
		
		// Соединение с таблицей объекта в которой расположен реквизит со старой ссылкой,
		// Например Документ.ПрочееОприходованиеТоваров.ВидыЗапасов (реквизит ДокументРеализации)
		|		ЛЕВОЕ СОЕДИНЕНИЕ " + ПараметрыВыборки.ИмяОсновнойТаблицы + " КАК ТаблицаОбъектаСодержащаяРеквизит
		|		ПО ТаблицаОбъектаСодержащаяРеквизит." + ПараметрыВыборки.ПолеОтбора + " = ВТДляОбработки." + ПараметрыВыборки.ПолеОтбора + "
		
		// Соединение с таблицей объекта ссылка на который в реквизите
		// Например Документ.ВнутреннееПотреблениеТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ " + ПолноеИмяОбъекта + " КАК ТаблицаОбъекта
		|		ПО ТаблицаОбъекта.Ссылка = ТаблицаОбъектаСодержащаяРеквизит." + ПараметрыВыборки.Реквизит + "
		|ГДЕ
		|	НЕ ТаблицаОбъекта.Ссылка ЕСТЬ NULL";
		
	КонецЦикла; 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.СсылкаНаОбъект,
	|	ВложенныйЗапрос.СтараяСсылка,
	|	ВложенныйЗапрос.НоваяСсылка
	|ПОМЕСТИТЬ " + ИмяВременнойТаблицы + "
	|ИЗ 
	|	(" + ТекстЗапроса + ") КАК ВложенныйЗапрос";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция СгруппироватьСвязанныеДанные(СвязанныеДанные) Экспорт

	// Нужно сгруппировать объекты
	ОбъектыДляОбработки = Новый ТаблицаЗначений;
	ОбъектыДляОбработки.Колонки.Добавить("ПолноеИмяОбъекта", Новый ОписаниеТипов("Строка"));
	ОбъектыДляОбработки.Колонки.Добавить("ВидТаблицы", Новый ОписаниеТипов("Строка"));
	ОбъектыДляОбработки.Колонки.Добавить("ПолеОтбора", Новый ОписаниеТипов("Строка"));
	ОбъектыДляОбработки.Колонки.Добавить("ЭтоНезависимыйРегистрСведений", Новый ОписаниеТипов("Булево"));
	ОбъектыДляОбработки.Колонки.Добавить("СписокПараметровВыборки", Новый ОписаниеТипов("Массив"));
	
	Для каждого ПутьКРеквизиту Из СвязанныеДанные Цикл
		
		ПараметрыВыборки = ПараметрыВыборкиСвязанныхДанных(ПутьКРеквизиту);
		
		ПараметрыОбъектаДляОбработки = ОбъектыДляОбработки.Найти(ПараметрыВыборки.ПолноеИмяОбъекта, "ПолноеИмяОбъекта");
		Если ПараметрыОбъектаДляОбработки = Неопределено Тогда
			ПараметрыОбъектаДляОбработки = ОбъектыДляОбработки.Добавить();
			ПараметрыОбъектаДляОбработки.ПолноеИмяОбъекта = ПараметрыВыборки.ПолноеИмяОбъекта;
			ПараметрыОбъектаДляОбработки.ВидТаблицы = ПараметрыВыборки.ВидТаблицы;
			ПараметрыОбъектаДляОбработки.ПолеОтбора = ПараметрыВыборки.ПолеОтбора;
			ПараметрыОбъектаДляОбработки.ЭтоНезависимыйРегистрСведений = ПараметрыВыборки.ЭтоНезависимыйРегистрСведений;
		КонецЕсли;
		ПараметрыОбъектаДляОбработки.СписокПараметровВыборки.Добавить(ПараметрыВыборки);
		
	КонецЦикла;
	
	Возврат ОбъектыДляОбработки;

КонецФункции
 
#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаполненияПустойИБ

// Обработчик первого запуска УТ 3.
//
Процедура ПервыйЗапуск() Экспорт
	
	
	// Заполнение предопределенных объектов с макетом НачальноеЗаполнение
	Обработки.НачальноеЗаполнениеИОбновлениеОбъектов.ЗаполнитьВсеОбъекты();
	
	Справочники.Валюты.ЗаполнитьВалютыПоУмолчанию();
	Справочники.УпаковкиЕдиницыИзмерения.ЗаполнитьЕдиницыИзмеренияИзКлассификатора("0101,0134,0301,2009,0123,0306"); // Метр, Кубический метр, Килограмм, Штука, Квадратный метр, Метрическая тонна
	
	ЗаполнитьКонстантыПоУмолчанию();
	
	БизнесПроцессы.СогласованиеПродажи.ИнициализироватьРолиИсполнителей();
	БизнесПроцессы.СогласованиеЗакупки.ИнициализироватьРолиИсполнителей();
	БизнесПроцессы.СогласованиеЦенНоменклатуры.ИнициализироватьРолиИсполнителей();
	БизнесПроцессы.СогласованиеЗаявкиНаВозвратТоваровОтКлиента.ИнициализироватьРолиИсполнителей();
	
	Справочники.Партнеры.ЗаполнитьПредопределенныхПартнеров();
	Справочники.Контрагенты.ЗаполнитьПредопределенныхКонтрагентов();
	Справочники.Организации.ЗаполнитьПредопределеннуюОрганизацию();
	Справочники.СкидкиНаценки.ЗаполнитьПредопределенныеЭлементы();
	Справочники.СтатьиДвиженияДенежныхСредств.ЗаполнитьПредопределенныеСтатьиДвиженияДенежныхСредств();
	Справочники.ВидыКонтактнойИнформации.ЗаполнитьСвойстваВидовКонтактнойИнформации();
	Справочники.НастройкиХозяйственныхОпераций.ЗаполнитьПредопределенныеНастройкиХозяйственныхОпераций();
	Справочники.Приоритеты.СоздатьПриоритетыПоУмолчанию();
	
	ПланыВидовХарактеристик.СтатьиДоходов.ЗаполнитьПредопределенныеСтатьиДоходов();
	ПланыВидовХарактеристик.СтатьиРасходов.ЗаполнитьПредопределенныеСтатьиРасходов();
	ПланыВидовХарактеристик.СтатьиАктивовПассивов.УстановитьПризнакАктивПассивУПредопределенныхЭлементов();
	
	КалендарныеГрафики.ОбновитьИспользованиеНесколькихПроизводственныхКалендарей();
	Справочники.ВариантыКлассификацииЗадолженности.СоздатьЭлементПоУмолчаниюМонопольно();
	МониторингЦелевыхПоказателей.ЗаполнитьСтруктуруЦелейИВариантыАнализа();
	
	
	РегистрыСведений.ШтрихкодыНоменклатуры.ЗаполнитьКонстантыПодсистемыШтрихкодирования();
	МенеджерОборудованияВызовСервераПереопределяемый.ОбновитьПоставляемыеДрайвера();
	
	ОбновлениеИнформационнойБазыУТ.ОтключитьНеиспользуемыеРегламентныеЗаданияБазовойВерсии();
	ОбновлениеИнформационнойБазыУТ.НастроитьИсториюКонтактнойИнформацииИМногострочноеПоле();
	
КонецПроцедуры

// Заполняет константы значениями по умолчанию.
// Вызывается при первоначальном заполнении ИБ после заполнения следующих данных
//	- Справочник.УпаковкиЕдиницыИзмерения
//
Процедура ЗаполнитьКонстантыПоУмолчанию()
	
    УстановитьВалютыУчета();
	УстановитьЕдиницыИзмерения();
	
	ЗначенияКонстант = ОбщегоНазначенияУТПовтИсп.ПолучитьЗначенияКонстантПоУмолчанию();
	Для Каждого КлючИЗначение Из ЗначенияКонстант Цикл
		Константы[КлючИЗначение.Ключ].Установить(КлючИЗначение.Значение);
	КонецЦикла; 
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

// Заполняет служебные константы-идентификаторы конфигурации.
//
Процедура УстановитьСлужебныеКонстанты() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	// Правильные значения служебных констант (функциональных опций)
	ЗначенияКонстант = Новый Структура("УправлениеТорговлей, КомплекснаяАвтоматизация, УправлениеПредприятием", Ложь, Ложь, Ложь);
	ИмяКонстанты = СтрЗаменить(СтрЗаменить(СтрЗаменить(Метаданные.Имя, "Базовая", ""), "BAS", "") , "ERP", "УправлениеПредприятием");
	ИмяКонстанты = СтрЗаменить(ИмяКонстанты,"КомплексноеУправлениеПредприятием","КомплекснаяАвтоматизация");
	ЗначенияКонстант[ИмяКонстанты] = Истина;
	
	Для Каждого КлючИЗначение Из ЗначенияКонстант Цикл
		
		Если Константы[КлючИЗначение.Ключ].Получить() <> КлючИЗначение.Значение Тогда
			
			// Текущее значение константы в ИБ не соответствует правильному - исправим
			МенеджерЗначения = Константы[КлючИЗначение.Ключ].СоздатьМенеджерЗначения();
			
			МенеджерЗначения.Значение = КлючИЗначение.Значение;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(МенеджерЗначения, Ложь);
			
		КонецЕсли;
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры


// Процедура устанавливает значение валюты регламентированного и управленческого учета.
// Вызывается при первоначальном заполнении ИБ.
//
Процедура УстановитьВалютыУчета()
	
	Если НЕ ЗначениеЗаполнено(Константы.ВалютаРегламентированногоУчета.Получить()) Тогда
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	Валюты.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.Валюты КАК Валюты
			|ГДЕ
			|	НЕ Валюты.ПометкаУдаления
			|	И Валюты.Код = ""980""");
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда
			КлассификаторXML = Справочники.Валюты.ПолучитьМакет("КлассификаторВалют").ПолучитьТекст();
			КлассификаторТаблица = ОбщегоНазначения.ПрочитатьXMLВТаблицу(КлассификаторXML).Данные;
			
			Справочники.Валюты.СоздатьВалюту("980", "гривна, гривны, гривен, ж, копейка, копейки, копеек, ж, 2", "гривня, гривні, гривень, ж, копійка, копійки, копійок, ж, 2", КлассификаторТаблица);
			УстановитьВалютыУчета();
		Иначе
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			
			Константы.ВалютаРегламентированногоУчета.Установить(Выборка.Ссылка);
			
		КонецЕсли;
		
    КонецЕсли;
    
    Если НЕ ЗначениеЗаполнено(Константы.ВалютаУправленческогоУчета.Получить()) Тогда
        Константы.ВалютаУправленческогоУчета.Установить(Константы.ВалютаРегламентированногоУчета.Получить()); 
    КонецЕсли;    
    
КонецПроцедуры

// Процедура устанавливает значения констант, связанных с единицами измерения
//
Процедура УстановитьЕдиницыИзмерения()
	
	БазоваяЕдиницаИзмеренияДлины   = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоКоду("0101"); // Метр
	БазоваяЕдиницаИзмеренияВеса    = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоКоду("0301"); // Килограмм
	БазоваяЕдиницаИзмеренияОбъема  = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоКоду("0134"); // Кубический метр
	БазоваяЕдиницаИзмеренияПлощади = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоКоду("0123"); // Квадратный метр
	
	Константы.ЕдиницаИзмеренияДлины.Установить(БазоваяЕдиницаИзмеренияДлины);
	Константы.ЕдиницаИзмеренияВеса.Установить(БазоваяЕдиницаИзмеренияВеса);
	Константы.ЕдиницаИзмеренияОбъема.Установить(БазоваяЕдиницаИзмеренияОбъема);
	Константы.ЕдиницаИзмеренияПлощади.Установить(БазоваяЕдиницаИзмеренияПлощади);
	
КонецПроцедуры

// Для базовой версии отключает неиспользуемые регламентные задания.
//
Процедура ОтключитьНеиспользуемыеРегламентныеЗаданияБазовойВерсии() Экспорт
	
	Если НЕ СтандартныеПодсистемыСервер.ЭтоБазоваяВерсияКонфигурации() Тогда
		Возврат;
	КонецЕсли;
	
	НеиспользуемыеЗадания = Новый Структура(
		"ABCКлассификацияНоменклатуры,
		|ABCКлассификацияПартнеров,
		|АрхивированиеЧековККМ,
		|XYZКлассификацияНоменклатуры,
		|XYZКлассификацияПартнеров,
		|АрхивированиеЧековККМ,
		|ЗапускДополнительныхОбработок,
		|ЗаполнениеДанныхДляОграниченияДоступа,
		|ИнтеграцияС1СДокументооборотВыполнитьОбменДанными,
		|ОбновлениеАгрегатов,
		|ОбновлениеДанныхОДоступностиТоваровДляВнешнихПользователей,
		|ОбновлениеКодовТоваровПодключаемогоОборудования,
		|ОбновлениеНоменклатурыПродаваемойСовместно,
		|ОбновлениеСтатусовДоставкиSMS,
		|ОтправкаSMS,
		|ОчисткаСегментов,
		|ПерестроениеАгрегатов,
		|ПолучениеИОтправкаЭлектронныхПисем,
		|ПроведениеПоРасчетамСПартнерами,
		|РасчетИсточниковДанныхВариантовАнализа,
		|РасчетПоказателейПрогнозаРасходаУпаковок,
		|СозданиеЗаданийНаОтбор,
		|СозданиеЗаданийНаПересчетТоваров,
		|СозданиеЗаданийНаПодпитку,
		|СозданиеРасходныхОрдеров,
		|УведомлениеИсполнителейОНовыхЗадачах,
		|УдалениеНеактуальнойИнформацииСинхронизации,
		|УдалениеОтложенныхЧековККМ,
		|ФормированиеДвиженийПоПартиямЗатратамНДС,
		|ФормированиеСегментов");
	
	МассивЗаданий = РегламентныеЗадания.ПолучитьРегламентныеЗадания();
	
	Для Каждого Задание Из МассивЗаданий Цикл
		
		Если НеиспользуемыеЗадания.Свойство(Задание.Метаданные.Имя) И Задание.Использование Тогда
			Задание.Использование = Ложь;
			Задание.Записать();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти


#Область ОбновлениеНовыхВерсийИБ


// Обработчик обновления BAS УТ 3.2.1
Процедура ЗаполнитьКонстантуИспользоватьИмпортныеТовары() Экспорт
	Константы.ИспользоватьИмпортныеТовары.Установить(Истина);
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.1
// Заполняет новую константу "НомерЗаданияКРасчетуСебестоимости" 
// которая управляет механизмом партионного учета
Процедура ЗаполнитьКонстантуНомерЗадания() Экспорт
	
	Если Константы.НомерЗаданияКРасчетуСебестоимости.Получить() = 0 Тогда
		Константы.НомерЗаданияКРасчетуСебестоимости.Установить(1);
	КонецЕсли;
	
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.1
// Устанавливает константу ИспользуетсяСборкаРазборкаИСерииНоменклатуры.
Процедура ЗаполнитьКонстантуИспользуетсяСборкаРазборкаИСерииНоменклатуры() Экспорт

	Константы.ИспользуетсяСборкаРазборкаИСерииНоменклатуры.Установить(
			Константы.ИспользоватьСборкуРазборку.Получить() 
			И Константы.ИспользоватьСерииНоменклатуры.Получить());
	
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.2
// Заполняет новую константу "РежимФормированияРасходныхОрдеров" 
Процедура ЗаполнитьКонстантуРежимФормированияРасходныхОрдеров() Экспорт
	Если НЕ ЗначениеЗаполнено(Константы.РежимФормированияРасходныхОрдеров.Получить()) Тогда
		Константы.РежимФормированияРасходныхОрдеров.Установить(Перечисления.РежимыФормированияРасходныхОрдеров.Кладовщиком);
	КонецЕсли;
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.2
// Заполняет новую константу "РасходныеОрдераФормируютсяМенеджером" 
Процедура ЗаполнитьКонстантуРасходныеОрдераФормируютсяМенеджером() Экспорт
	Константы.РасходныеОрдераФормируютсяМенеджером.Установить(Ложь);
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.2
// Заполняет новую константу "ПорядокОформленияНакладныхРасходныхОрдеров" 
Процедура ЗаполнитьКонстантуПорядокОформленияНакладныхРасходныхОрдеров() Экспорт
	Если НЕ ЗначениеЗаполнено(Константы.ПорядокОформленияНакладныхРасходныхОрдеров.Получить()) Тогда
		Константы.ПорядокОформленияНакладныхРасходныхОрдеров.Установить(Перечисления.ПорядокОформленияНакладныхРасходныхОрдеров.СначалаНакладные);
	КонецЕсли;
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.2
Процедура ЗаполнитьКонстантуИспользоватьОтчетДвиженияЗаказов() Экспорт
	
	Если СтандартныеПодсистемыСервер.ЭтоБазоваяВерсияКонфигурации() Тогда
		Константы.ИспользоватьОтчетДвиженияЗаказов.Установить(Ложь);
	Иначе
		Константы.ИспользоватьОтчетДвиженияЗаказов.Установить(Константы.ИспользоватьРасширенныеВозможностиЗаказаКлиента.Получить());
	КонецЕсли;
	
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.2
Процедура ЗаполнитьКонстантуИнтерфейсВерсии82() Экспорт
	
	Если НЕ СтандартныеПодсистемыСервер.ЭтоБазоваяВерсияКонфигурации() Тогда
		Константы.ИнтерфейсВерсии82.Установить(Истина);
	КонецЕсли;
	
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.2
// Заполняет новую константу "НомерЗаданияКРаспределениюРасчетовСКлиентами" 
// которая управляет механизмом оффлайновых взаиморасчетов.
Процедура ЗаполнитьКонстантуНомерЗаданияКРаспределениюРасчетовСКлиентами() Экспорт
	Если Константы.НомерЗаданияКРаспределениюРасчетовСКлиентами.Получить() = 0 Тогда
		Константы.НомерЗаданияКРаспределениюРасчетовСКлиентами.Установить(1);
	КонецЕсли;
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.2
// Заполняет новую константу "НомерЗаданияКРаспределениюРасчетовСПоставщиками" 
// которая управляет механизмом оффлайновых взаиморасчетов.
Процедура ЗаполнитьКонстантуНомерЗаданияКРаспределениюРасчетовСПоставщиками() Экспорт
	Если Константы.НомерЗаданияКРаспределениюРасчетовСПоставщиками.Получить() = 0 Тогда
		Константы.НомерЗаданияКРаспределениюРасчетовСПоставщиками.Установить(1);
	КонецЕсли;
КонецПроцедуры


// Обработчик обновления BAS УТ 3.2.2
// Заполняет новую константу "НомерЗаданияКФормированиюИсходящихНалоговыхДокументов" 
// которая управляет механизмом формирования исходящих налоговых документов.
Процедура ЗаполнитьКонстантуНомерЗаданияКФормированиюИсходящихНалоговыхДокументов() Экспорт
	Если Константы.НомерЗаданияКФормированиюИсходящихНалоговыхДокументов.Получить() = 0 Тогда
		Константы.НомерЗаданияКФормированиюИсходящихНалоговыхДокументов.Установить(1);
	КонецЕсли;
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.2
// Заполняет новую константу "НомерЗаданияКРасчетуНалоговыхОбязательствДополнительно" 
// которая управляет механизмом формирования исходящих налоговых документов.
Процедура ЗаполнитьКонстантуНомерЗаданияКРасчетуНалоговыхОбязательствДополнительно() Экспорт
	Если Константы.НомерЗаданияКРасчетуНалоговыхОбязательствДополнительно.Получить() = 0 Тогда
		Константы.НомерЗаданияКРасчетуНалоговыхОбязательствДополнительно.Установить(1);
	КонецЕсли;
КонецПроцедуры


// Обработчик обновления BAS УТ 3.2.2
// Заполняет новую константу "МаксимальноеКоличествоЭлементовВДеревеОтборовНоменклатуры" 
Процедура ЗаполнитьКонстантуМаксимальноеКоличествоЭлементовВДеревеОтборовНоменклатуры() Экспорт
	Если Константы.МаксимальноеКоличествоЭлементовВДеревеОтборовНоменклатуры.Получить() = 0 Тогда
		Константы.МаксимальноеКоличествоЭлементовВДеревеОтборовНоменклатуры.Установить(50);
	КонецЕсли;
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.2
// Заполняет константу "ИспользоватьГруппыДоступаПартнеров" в зависимости от 
// значений констант "ИспользоватьВнешнихПользователей" и "ОграничиватьДоступНаУровнеЗаписей".
Процедура ЗаполнитьКонстантуИспользоватьГруппыДоступаПартнеров() Экспорт

	Если Константы.ИспользоватьВнешнихПользователей.Получить()  
	           И Константы.ОграничиватьДоступНаУровнеЗаписей.Получить() 
	           И Не Константы.ИспользоватьГруппыДоступаПартнеров.Получить() Тогда		
		Константы.ИспользоватьГруппыДоступаПартнеров.Установить(Истина);
	КонецЕсли;
	
КонецПроцедуры



Процедура НачалоПодредакции_ДанныеДляОбновления(Параметры, ИмяПодредакции) Экспорт
    
    Набор = РегистрыСведений.ВерсииПодсистем.СоздатьНаборЗаписей();
    Набор.Отбор.ИмяПодсистемы.Установить(ИмяПодредакции);
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Набор);
	
	
КонецПроцедуры

Процедура НачалоПодредакции(Параметры, ОчередьПодредакции, ИмяПодредакции) 
    
    // заполняем таблицу отложенных обработчиков по сведениях об обновлении
    
    ТаблицаОбработчиков = Новый ТаблицаЗначений;
    ТаблицаОбработчиков.Колонки.Добавить("ИмяОбработчика", Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(0)));
	ТаблицаОбработчиков.Колонки.Добавить("ПроцедураЗаполненияДанныхОбновления", Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(0)));
	ТаблицаОбработчиков.Колонки.Добавить("ОчередьОтложеннойОбработки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(4)));
    ТаблицаОбработчиков.Колонки.Добавить("ОчередьОбработчикаПодредакции", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(4)));
    ТаблицаОбработчиков.Колонки.Добавить("Статус", Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(0)));
    
    СведенияОбОбновлении = ОбновлениеИнформационнойБазыСлужебный.СведенияОбОбновленииИнформационнойБазы();
    
    СтрокиBASУТ = СведенияОбОбновлении.ДеревоОбработчиков.Строки.Найти("BASУправлениеТорговлей", "ИмяБиблиотеки").Строки;
    
    Для Каждого СтрокаВерсия Из СтрокиBASУТ Цикл
        Для Каждого СтрокаДереваОбработчик Из СтрокаВерсия.Строки Цикл   
            СтрокаТаблицыОбработчики = ТаблицаОбработчиков.Добавить();
            ЗаполнитьЗначенияСвойств(СтрокаТаблицыОбработчики, СтрокаДереваОбработчик);
            Если НЕ СтрокаДереваОбработчик.НеЗаполнятьДанныеВОбработчикеПодредакции Тогда
                ОчередьОбработчикаПодредакции = СтрокаДереваОбработчик.ОчередьОбработчикаПодредакции;
                Если ОчередьОбработчикаПодредакции = 0 Тогда
                    // по умолчанию очередь обработчика подредакции будет ближайшая меньшая сотня
                    ОчередьОбработчикаПодредакции = Цел(СтрокаДереваОбработчик.ОчередьОтложеннойОбработки/100) * 100;
                КонецЕсли; 
                СтрокаТаблицыОбработчики.ОчередьОбработчикаПодредакции = ОчередьОбработчикаПодредакции;
            КонецЕсли; 
        КонецЦикла;     
    КонецЦикла; 
    
    ТаблицаОбработчиков.Сортировать("ОчередьОтложеннойОбработки");
    
    ВсеПредыдущиеОбработчикиВыполнены = Истина;
    
    // проверяем выполнение всех обработчиков с очередью меньше, чем очередь подредакции
    Для Каждого СтрокаТаблицыОбработчики Из ТаблицаОбработчиков Цикл
        Если СтрокаТаблицыОбработчики.ОчередьОтложеннойОбработки >= ОчередьПодредакции Тогда
            Прервать;
        КонецЕсли;
        Если СокрЛП(СтрокаТаблицыОбработчики.Статус) <> "Выполнено" Тогда
            ВсеПредыдущиеОбработчикиВыполнены = Ложь;
            Прервать;
        КонецЕсли; 
    КонецЦикла; 
    
    Если НЕ ВсеПредыдущиеОбработчикиВыполнены Тогда
        // ждем завершения всех обработчиков предыдущей подредакции
        Параметры.ОбработкаЗавершена = Ложь;
        Возврат;
    КонецЕсли; 
    
    ДанныеВсехОбработчиковЗаполнены = Истина;
    // все обработчики предыдущей подредакции выполнены
    // заполняем данные для обработки для следующих обработчиков, которые этого требуют 
    // для этого в обработчике должна быть указана ОчередьОбработчикаПодредакции равной очереди этой подредакции
    Для Каждого СтрокаТаблицыОбработчики Из ТаблицаОбработчиков Цикл
        
        Если СтрокаТаблицыОбработчики.ОчередьОбработчикаПодредакции <> ОчередьПодредакции Тогда
            Продолжить;
        КонецЕсли;
        
        ПараметрыОбработчикаЗаполненияСтруктура = ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке();
        
        ПараметрыОбработчикаЗаполненияСтруктура.Очередь = СтрокаТаблицыОбработчики.ОчередьОтложеннойОбработки;
        ПараметрыОбработчикаЗаполненияСтруктура.Вставить("ДанныеОбработчика", Новый Соответствие);
            
        ПараметрыОбработчикаЗаполнения = Новый Массив;
        ПараметрыОбработчикаЗаполнения.Добавить(ПараметрыОбработчикаЗаполненияСтруктура);
        
        Попытка
            Сообщение = НСтр("ru='Выполняется процедура заполнения данных
                              |""%1""
                              |отложенного обработчика обновления
                              |""%2"".'
                              |;uk='Виконується процедура заповнення даних
                              |""%1""
                              |відкладеного обробника оновлення
                              |""%2"".'"
            );
            
            Сообщение = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
                Сообщение,
                СтрокаТаблицыОбработчики.ПроцедураЗаполненияДанныхОбновления,
                СтрокаТаблицыОбработчики.ИмяОбработчика
            );
            
            ЗаписатьИнформацию(Сообщение);
                
            РаботаВБезопасномРежиме.ВыполнитьМетодКонфигурации(СтрокаТаблицыОбработчики.ПроцедураЗаполненияДанныхОбновления, ПараметрыОбработчикаЗаполнения);
            
        Исключение
            ДанныеВсехОбработчиковЗаполнены = Ложь;
            ЗаписатьОшибку(
                СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
                    НСтр("ru='При вызове процедуры заполнения данных
                        |""%1""
                        |отложенного обработчика обновления
                        |""%2""
                        |произошла ошибка:
                        |""%3"".'
                        |;uk='При виклику процедури заповнення даних
                        |""%1""
                        |відкладеного обробника оновлення
                        |""%2""
                        |сталася помилка:
                        |""%3"".'"
                    ),
                    СтрокаТаблицыОбработчики.ПроцедураЗаполненияДанныхОбновления,
                    СтрокаТаблицыОбработчики.ИмяОбработчика,
                    ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())
                )
            );
            ВызватьИсключение;
        КонецПопытки;
        
        СведенияОбОбновлении.ОбрабатываемыеДанные.Вставить(
            СтрокаТаблицыОбработчики.ИмяОбработчика, 
            ПараметрыОбработчикаЗаполненияСтруктура.ДанныеОбработчика
        );
        
    КонецЦикла; 
    
    Если ДанныеВсехОбработчиковЗаполнены Тогда
	    ОбновлениеИнформационнойБазыСлужебный.ЗаписатьСведенияОбОбновленииИнформационнойБазы(СведенияОбОбновлении);
        
        Набор = РегистрыСведений.ВерсииПодсистем.СоздатьНаборЗаписей();
        Набор.Отбор.ИмяПодсистемы.Установить(ИмяПодредакции);
		ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Набор, Неопределено, Параметры.Очередь);
		
        
        Параметры.ОбработкаЗавершена = Истина;
    Иначе
        Параметры.ОбработкаЗавершена = Ложь;    
    КонецЕсли; 
	
КонецПроцедуры

Процедура НачалоПодредакции_3_2_2_ДанныеДляОбновления(Параметры) Экспорт
    НачалоПодредакции_ДанныеДляОбновления(Параметры, "НачалоПодредакции_3_2_2");
КонецПроцедуры

Процедура НачалоПодредакции_3_2_2(Параметры) Экспорт
    ОчередьПодредакции = 100;
    НачалоПодредакции(Параметры, ОчередьПодредакции, "НачалоПодредакции_3_2_2");
КонецПроцедуры

Процедура НачалоПодредакции_3_2_3_ДанныеДляОбновления(Параметры) Экспорт
    НачалоПодредакции_ДанныеДляОбновления(Параметры, "НачалоПодредакции_3_2_3");	
КонецПроцедуры

Процедура НачалоПодредакции_3_2_3(Параметры) Экспорт
    ОчередьПодредакции = 200;
    НачалоПодредакции(Параметры, ОчередьПодредакции, "НачалоПодредакции_3_2_3");
КонецПроцедуры

Процедура НачалоПодредакции_3_2_4_ДанныеДляОбновления(Параметры) Экспорт
    НачалоПодредакции_ДанныеДляОбновления(Параметры, "НачалоПодредакции_3_2_4");	
КонецПроцедуры

Процедура НачалоПодредакции_3_2_4(Параметры) Экспорт
    ОчередьПодредакции = 300;
    НачалоПодредакции(Параметры, ОчередьПодредакции, "НачалоПодредакции_3_2_4");
КонецПроцедуры

Процедура НачалоПодредакции_3_2_5_ДанныеДляОбновления(Параметры) Экспорт
    НачалоПодредакции_ДанныеДляОбновления(Параметры, "НачалоПодредакции_3_2_5");	
КонецПроцедуры

Процедура НачалоПодредакции_3_2_5(Параметры) Экспорт
    ОчередьПодредакции = 400;
    НачалоПодредакции(Параметры, ОчередьПодредакции, "НачалоПодредакции_3_2_5");
КонецПроцедуры

Процедура ПередВыполнениемОбработчикаОтложенногоОбновления(Параметры) Экспорт    
    
    МожноВыполнять = Истина;
    
    // если данные к обработке заполняются в обработчике подредакции
    // необходимо ожидать выполнения обработчика подредакции 
    Если НЕ Параметры.НеЗаполнятьДанныеВОбработчикеПодредакции Тогда
        
        ОчередьОбработчикаПодредакции = Параметры.ОчередьОбработчикаПодредакции;
        Если ОчередьОбработчикаПодредакции = 0 Тогда
            // по умолчанию очередь обработчика подредакции - ближайшая меньшая сотня
            ОчередьОбработчикаПодредакции = Цел(Параметры.Очередь/100) * 100;
        КонецЕсли; 
		
		Если ОчередьОбработчикаПодредакции <> 0 Тогда
			МожноВыполнять = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
				ОчередьОбработчикаПодредакции,
				"РегистрСведений.ВерсииПодсистем"
			);
		КонецЕсли; 
    
    КонецЕсли; 
    
    Параметры.Вставить("МожноВыполнять", МожноВыполнять);

КонецПроцедуры
 
Процедура ЗаписатьИнформацию(Знач Текст)
	ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазыСлужебный.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Информация,,, Текст);
КонецПроцедуры

Процедура ЗаписатьОшибку(Знач Текст)
	ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазыСлужебный.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Ошибка,,, Текст);
КонецПроцедуры


#Область УстаревшиеМетаданные


Функция УстаревшиеМетаданные_3_2_3()
	
	УстаревшиеМетаданные = Новый Массив;
    
    УстаревшиеМетаданные.Добавить(Метаданные.ПланыОбмена.УдалитьОбменУправлениеТорговлейСайт);
    
	УстаревшиеМетаданные.Добавить(Метаданные.Справочники.УдалитьДоговорыЭквайринга);
	УстаревшиеМетаданные.Добавить(Метаданные.Справочники.УдалитьДоговорыЭквайрингаПрисоединенныеФайлы);
    УстаревшиеМетаданные.Добавить(Метаданные.Справочники.УдалитьЕдиницыИзмерения);
    
	УстаревшиеМетаданные.Добавить(Метаданные.Документы.УдалитьАктОРасхожденияхПриПоступленииТоваров);
	УстаревшиеМетаданные.Добавить(Метаданные.Документы.УдалитьАктПриемкиТоваров);
    УстаревшиеМетаданные.Добавить(Метаданные.Документы.УдалитьВыпискаПоРасчетномуСчету);
    
    УстаревшиеМетаданные.Добавить(Метаданные.Перечисления.УдалитьСтатусыВнутреннихПотребленийТоваров);
	УстаревшиеМетаданные.Добавить(Метаданные.Перечисления.УдалитьСтатусыВозвратовТоваровПоставщикам);
	УстаревшиеМетаданные.Добавить(Метаданные.Перечисления.УдалитьТипыДенежныхСредствКПоступлению);
	УстаревшиеМетаданные.Добавить(Метаданные.Перечисления.УдалитьТипыДенежныхСредствКСписанию);
    
	Возврат УстаревшиеМетаданные;
	
КонецФункции

// Обработчик обновления BAS УТ 3.2.3
// Удаляет записи регистров сведений для устаревших объектов метаданных.
Процедура ЗарегистироватьКОбработкеУстаревшиеМетаданные_3_2_3(Параметры) Экспорт
	
	ДополнительныеПараметрыОтметки = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметрыОтметки.ЭтоНезависимыйРегистрСведений = Истина;
	
	ИмяРегистра  = Неопределено;
	ИмяИзмерения = Неопределено;
	
	ДанныеКОбработке = Неопределено;
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = ОбщегоНазначенияУТ.ВыбратьЗаписиРегистровСведенийПоМетаданнымИзмерений(УстаревшиеМетаданные_3_2_3());
	УстановитьПривилегированныйРежим(Ложь);
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если ИмяРегистра <> Выборка.ИмяРегистра ИЛИ ИмяИзмерения <> Выборка.ИмяИзмерения Тогда
			
			Если ДанныеКОбработке <> Неопределено Тогда
				ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, ДанныеКОбработке, ДополнительныеПараметрыОтметки);
			КонецЕсли;
			
			ИмяРегистра  = Выборка.ИмяРегистра;
			ИмяИзмерения = Выборка.ИмяИзмерения;
			
			ДополнительныеПараметрыОтметки.ПолноеИмяРегистра = "РегистрСведений." + ИмяРегистра;
			
			ДанныеКОбработке = Новый ТаблицаЗначений;
			ДанныеКОбработке.Колонки.Добавить(ИмяИзмерения);
			
		КонецЕсли;
		
		ДанныеКОбработке.Добавить()[ИмяИзмерения] = Выборка.ЗначениеОтбора;
		
	КонецЦикла;
	
	Если ДанныеКОбработке <> Неопределено Тогда
		ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, ДанныеКОбработке, ДополнительныеПараметрыОтметки);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОчиститьСсылкиНаУстаревшиеМетаданные_3_2_3(Параметры) Экспорт
	
	ЕстьОбработанныеДанные = Ложь;
	
	МассивРегистров = ОбщегоНазначенияУТ.РегистрыСведенийПоМетаданнымИзмерений(УстаревшиеМетаданные_3_2_3());
	
	Для Каждого Регистр Из МассивРегистров Цикл
		
		МетаданныеОбъекта = Метаданные.НайтиПоПолномуИмени("РегистрСведений."+ Регистр.Имя);
		ДанныеМогутБытьВОчереди = Метаданные.ПланыОбмена.ОбновлениеИнформационнойБазы.Состав.Содержит(МетаданныеОбъекта);
		Если Не ДанныеМогутБытьВОчереди Тогда
			Продолжить;
		КонецЕсли;
		
		Выборка = ОбновлениеИнформационнойБазы.ВыбратьИзмеренияНезависимогоРегистраСведенийДляОбработки(
			Параметры.Очередь,
			"РегистрСведений." + Регистр.Имя);
			
		Если Выборка.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Колонки = Выборка.Владелец().Колонки;
		
		Пока Выборка.Следующий() Цикл
			
			НаборЗаписей = РегистрыСведений[Регистр.Имя].СоздатьНаборЗаписей();
			
			Для Каждого ТекКолонка Из Колонки Цикл
				ЗначениеОтбора = Выборка[ТекКолонка.Имя];
				Если ЗначениеЗаполнено(ЗначениеОтбора) Тогда
					ЭлементОтбора = НаборЗаписей.Отбор.Найти(ТекКолонка.Имя);
					Если ЭлементОтбора <> Неопределено Тогда
						ЭлементОтбора.Установить(ЗначениеОтбора);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьНаборЗаписей(НаборЗаписей, Истина);
			
		КонецЦикла;
		
		ЕстьОбработанныеДанные = Истина;
		
		Прервать; // за одну итерацию обновления очищаем только один регистр
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = НЕ ЕстьОбработанныеДанные;
	
КонецПроцедуры



#КонецОбласти

// Обработчик обновления БСП, до версии 2.3.2 будет находиться в этом модуле.
// Обновляет представление в поле агрегате ВидДляСписка для вывода контактной информации
// в динамических списках и отчетах.
// Для элементов справочника Контрагенты дополнительно заполняет реквизит СтранаРегистрации при условии, 
// что контрагент резидент.
//
Процедура ЗарегистироватьКОбработкеКонтактнуюИнформациюДляСписков(Параметры) Экспорт
	
	ОбъектыМетаданных = МассивОбъектовМетаданныхДляОбработки();
	
	ТекстЗапроса = "";
	Разделитель = "";
	
	Для каждого Объект Из ОбъектыМетаданных Цикл
		
		ТекстЗапроса = ТекстЗапроса + Разделитель + " ВЫБРАТЬ 
					|    КонтактнаяИнформация.Ссылка КАК Ссылка
					|ИЗ
					|    " + Объект.ПолноеИмя() + ".КонтактнаяИнформация КАК КонтактнаяИнформация
					|
					|СГРУППИРОВАТЬ ПО
					|    КонтактнаяИнформация.Ссылка
					|
					|ИМЕЮЩИЕ
					|    СУММА(ВЫБОР
					|            КОГДА КонтактнаяИнформация.ВидДляСписка = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ПустаяСсылка)
					|                ТОГДА 0
					|                ИНАЧЕ 1
					|        КОНЕЦ) = 0";

		Разделитель = " ОБЪЕДИНИТЬ ВСЕ ";
		
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;

    ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));

КонецПроцедуры	

Процедура ОбновитьКонтактнуюИнформациюДляСписков(Параметры) Экспорт
	
	ОбъектыМетаданных = МассивОбъектовМетаданныхДляОбработки();
	
	Для каждого Объект Из ОбъектыМетаданных Цикл
	
		Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, Объект.ПолноеИмя());
		
		Пока Выборка.Следующий() Цикл
			
			НачатьТранзакцию();
					
			Попытка
				
				Блокировка = Новый БлокировкаДанных;
				ЭлементБлокировки = Блокировка.Добавить(Объект.ПолноеИмя());
				ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
				Блокировка.Заблокировать();
								
				СпрОбъект = Выборка.Ссылка.ПолучитьОбъект();
				
				Если СпрОбъект = Неопределено Тогда
					ОтменитьТранзакцию();
					Продолжить;
				КонецЕсли;
				
				УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформациюДляСписков(СпрОбъект);
				
				Если Объект = Метаданные.Справочники.Контрагенты 
					И СпрОбъект.СтранаРегистрации.Пустая()
					И НЕ СпрОбъект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицоНеРезидент Тогда
					
					СпрОбъект.СтранаРегистрации = Справочники.СтраныМира.Украина;
					
				КонецЕсли;

				
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(СпрОбъект);
				
				ЗафиксироватьТранзакцию();
				
			Исключение
				
				ОтменитьТранзакцию();
				ТекстСообщения = НСтр("ru='Не удалось заполнить вид контактной информации для списка у элемента: %Ссылка% по причине: %Причина%';uk='Не вдалося заповнити вид контактної інформації для списку у елемента: %Ссылка% по причині: %Причина%'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				Объект,
				Выборка.Ссылка,
				ТекстСообщения);
				
			КонецПопытки;
			
		КонецЦикла;
	
	КонецЦикла;
	
	МассивИмен = Новый Массив;
	Для каждого Объект Из ОбъектыМетаданных Цикл
		МассивИмен.Добавить(Объект.ПолноеИмя());
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, МассивИмен);		
	
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.3
// Обновление видов контактной информации.
// Для юридического адреса организации устанавливает флаг ХранитьИсториюИзменений.
// Для сохранения обратной совместимости всех элементов с видом контактной информации Другое
// свойство МногострочноеПоле устанавливается в Истина.
//
Процедура НастроитьИсториюКонтактнойИнформацииИМногострочноеПоле() Экспорт
	
	ЮридическийАдресОрганизации = Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации.ПолучитьОбъект();
	ЮридическийАдресОрганизации .ХранитьИсториюИзменений = Истина;
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ЮридическийАдресОрганизации);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВидыКонтактнойИнформации.Ссылка
		|ИЗ
		|	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
		|ГДЕ
		|	ВидыКонтактнойИнформации.Тип = &Тип";
	
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Другое);
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		ВидКонтактнойИнформации = РезультатЗапроса.Ссылка.ПолучитьОбъект();
		ВидКонтактнойИнформации.МногострочноеПоле = Истина;
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ВидКонтактнойИнформации);
	КонецЦикла;
	
КонецПроцедуры

Функция МассивОбъектовМетаданныхДляОбработки()
	
	ОбъектыМетаданных = Новый Массив;
	ОбъектыМетаданных.Добавить(Метаданные.Справочники.КонтактныеЛицаПартнеров);
	ОбъектыМетаданных.Добавить(Метаданные.Справочники.Контрагенты);
	ОбъектыМетаданных.Добавить(Метаданные.Справочники.Организации);
	ОбъектыМетаданных.Добавить(Метаданные.Справочники.Партнеры);
	ОбъектыМетаданных.Добавить(Метаданные.Справочники.Пользователи);
	ОбъектыМетаданных.Добавить(Метаданные.Справочники.Склады);
	ОбъектыМетаданных.Добавить(Метаданные.Справочники.ФизическиеЛица);
		
	Возврат ОбъектыМетаданных;
	
КонецФункции

// Заполняет пустое поле объекта значением реквизита по умолчанию. 
//
// Параметры:
//  Параметры			 - Структура - параметры обработчика обновления, передаваемые в обработчик при его запуске 
//  ПолноеИмяОбъекта	 - Строка - полное имя объекта, например, Документ.ПриходныйОрдерНаТовары 
//  ИмяРеквизита		 - Строка - имя заполняемого реквизита
//  ЗначениеРеквизита	 - Любой тип - значение заполняемого реквизита 
//
Процедура ЗаполнитьПустойРеквизитЗначениемПоУмолчанию(Параметры, ПолноеИмяОбъекта, ИмяРеквизита, ЗначениеРеквизита) Экспорт
	
	ОбъектыДляОбработки = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
	Пока ОбъектыДляОбработки.Следующий() Цикл
		НачатьТранзакцию();
		
		Попытка
			
			// Устанавливаем управляемую блокировку, чтобы провести ответственное чтение объекта
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ОбъектыДляОбработки.Ссылка);
			
			Блокировка.Заблокировать();
			
			Объект = ОбъектыДляОбработки.Ссылка.ПолучитьОбъект();
			
			Если Объект = Неопределено Тогда
				ОтменитьТранзакцию();
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ОбъектыДляОбработки.Ссылка);
				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Объект[ИмяРеквизита]) Тогда
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Объект);
			Иначе
				Объект[ИмяРеквизита] = ЗначениеРеквизита;
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(Объект);
			КонецЕсли;
			
		    ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			МетаданныеОбъекта = Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъекта);
			
			ТекстСообщения = НСтр("ru='Не удалось обработать %ИмяОбъекта%: %Ссылка% по причине: %Причина%';uk='Не вдалося обробити %ИмяОбъекта%: %Ссылка% по причині: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяОбъекта%", ПолноеИмяОбъекта);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", ОбъектыДляОбработки.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
										УровеньЖурналаРегистрации.Предупреждение,
										МетаданныеОбъекта,
										ОбъектыДляОбработки.Ссылка,
										ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;	
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры

Процедура ЗаполнитьПустойРеквизитЗначениемПоУмолчаниюЗарегистрироватьДанныеКОбработке(Параметры, ПолноеИмяОбъекта, ИмяРеквизита) Экспорт
  
	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОбъекта.Ссылка КАК Ссылка 
	|ИЗ
	|	#ПолноеИмяОбъекта КАК ТаблицаОбъекта
	|ГДЕ
	|	ТаблицаОбъекта.#ИмяРеквизита = &ПустоеЗначение";
	
	МетаданныеОбъекта = Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъекта);
	
	ПустоеЗначение = МетаданныеОбъекта.Реквизиты.Найти(ИмяРеквизита).Тип.ПривестиЗначение();
	
	Запрос.УстановитьПараметр("ПустоеЗначение", ПустоеЗначение);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ПолноеИмяОбъекта", ПолноеИмяОбъекта);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ИмяРеквизита", ИмяРеквизита);
	
	Запрос.Текст = ТекстЗапроса;
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры


Функция ПроверитьПолучитьОбъект(Ссылка,ВерсияДанных,Очередь) Экспорт
	
	Объект = Ссылка.ПолучитьОбъект();
	Если Объект = Неопределено Тогда
		ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Ссылка);
		Возврат Неопределено;
	КонецЕсли;
	Если Объект.ВерсияДанных <> ВерсияДанных Тогда
		Возврат Неопределено;
	КонецЕсли;
	Возврат Объект;
	
КонецФункции

Процедура СообщитьОНеудачнойБлокировке(Ссылка) Экспорт
	ТекстСообщения = НСтр("ru='Не удалось заблокировать документ: %Документ% по причине: %Причина%';uk='Не вдалося заблокувати документ: %Документ% по причині: %Причина%'");
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", Ссылка);
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
							УровеньЖурналаРегистрации.Предупреждение,
							Ссылка.Метаданные(),
							Ссылка,
							ТекстСообщения);
КонецПроцедуры

Процедура СообщитьОНеудачнойОбработке(Ссылка) Экспорт
	ТекстСообщения = НСтр("ru='Не удалось обработать документ: %Регистратор% по причине: %Причина%';uk='Не вдалося обробити документ: %Регистратор% по причині: %Причина%'");
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", Ссылка);
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
							УровеньЖурналаРегистрации.Предупреждение,
							Ссылка.Метаданные(),
							Ссылка,
							ТекстСообщения);
КонецПроцедуры



// Обработчик обновления УТ 3.2.12.1
// Заполняет константу "ИспользоватьРасширеннуюФормуПодбораКоличестваИВариантовОбеспечения" 
//
Процедура ЗаполнитьКонстантуИспользоватьРасширеннуюФормуПодбораКоличестваИВариантовОбеспечения() Экспорт
	
	Константы.ИспользоватьРасширеннуюФормуПодбораКоличестваИВариантовОбеспечения.Установить(Истина);
	
КонецПроцедуры

Процедура ОбновитьМинимальнуюЗарплату() Экспорт
	
	Обработки.НачальноеЗаполнениеИОбновлениеОбъектов.ЗаполнитьОбъект("РегистрСведений", "МинимальнаяОплатаТруда");
	
КонецПроцедуры

Процедура СнятьПометкуУдаленияСРанееПредопределенногоЭлементаСправочникаСтраныМира() Экспорт
	
	НайденнаяСсылка = Справочники.СтраныМира.НайтиПоКоду("643");
	Если ЗначениеЗаполнено(НайденнаяСсылка) и НайденнаяСсылка.ПометкаУдаления Тогда
		НайденныйОбъект = НайденнаяСсылка.ПолучитьОбъект();
		НайденныйОбъект.УстановитьПометкуУдаления(Ложь);
		НайденныйОбъект.Записать();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
