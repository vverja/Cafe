
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры,,"ЗакрыватьПриВыборе,ЗакрыватьПриЗакрытииВладельца,КлючНазначенияИспользования");
	
	ЗаполнитьСписокВыбораПредставительОрганизацииДолжность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Не ЗакрытьФормуПринудительно
		И (Модифицированность И Не СохранитьПараметры) Тогда
		
		СписокКнопок = Новый СписокЗначений();
		СписокКнопок.Добавить("Закрыть", НСтр("ru='Закрыть';uk='Закрити'"));
		СписокКнопок.Добавить("НеЗакрывать", НСтр("ru='Не закрывать';uk='Не закривати'"));
		
		Отказ = Истина;
		
		ДополнительныеПараметры = Новый Структура;
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ПоказатьВопросПередЗакрытиемЗавершение", ЭтотОбъект, ДополнительныеПараметры),
			НСтр("ru='Реквизиты печати были изменены. Закрыть форму без сохранения реквизитов?';uk='Реквізити друку були змінені. Закрити форму без збереження реквізитів?'"),
			СписокКнопок);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросПередЗакрытиемЗавершение(ОтветНаВопрос, ДополнительныеПараметры) Экспорт
	
	Если ОтветНаВопрос = "Закрыть" Тогда
		ЗакрытьФормуПринудительно = Истина;
		Закрыть(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если СохранитьПараметры Тогда
		СтруктураПараметров = ИзменяемыеРеквизиты(ЭтаФорма); 
		ОповеститьОВыборе(СтруктураПараметров);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Если Не ТолькоПросмотр Тогда
		СохранитьПараметры = Истина;
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПредставительОрганизацииПриИзменении(Элемент)
	ЗаполнитьСписокВыбораПредставительОрганизацииДолжность(Истина);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаКлиентеНаСервереБезКонтекста
Функция ИзменяемыеРеквизиты(Источник)
	
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("ПредставительОрганизации",       		Источник.ПредставительОрганизации);
	СтруктураПараметров.Вставить("ПредставительОрганизацииДолжность",   Источник.ПредставительОрганизацииДолжность);
	
	Возврат СтруктураПараметров;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокВыбораПредставительОрганизацииДолжность(ПриИзменении = Ложь)
	
	Элементы.ПредставительОрганизацииДолжность.СписокВыбора.Очистить();
	ДанныеДляВыбора = ДолжностиДляПечатиВызовСервера.СписокДолжностейФизическогоЛица(ПредставительОрганизации, Организация, Дата);
	 
	Если ПриИзменении И ДанныеДляВыбора.Количество() = 1 Тогда
		ПредставительОрганизацииДолжность = ДанныеДляВыбора[0];
	КонецЕсли;
	
	Для Каждого ЭлементСпискаЗначений Из ДанныеДляВыбора Цикл	
		Элементы.ПредставительОрганизацииДолжность.СписокВыбора.Добавить(ЭлементСпискаЗначений.Значение, ЭлементСпискаЗначений.Значение);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти