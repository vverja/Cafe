#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	Документы.ЗаявкаНаРасходованиеДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	
	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);
	
	ВводНаОснованииПереопределяемый.ДобавитьКомандыСоздатьНаОснованииПисмаПоШаблону(КомандыСоздатьНаОсновании);


КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.ВозвратТоваровМеждуОрганизациями) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ВозвратТоваровМеждуОрганизациями.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.ВозвратТоваровМеждуОрганизациями);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьПередачиТоваровМеждуОрганизациями";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуКонтрольВозвратовТоваров(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуОстаткиТоваровОрганизаций(КомандыОтчетов);

КонецПроцедуры


// Выборка значений реквизитов документа по ссылке.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ВозвратТоваровМеждуОрганизациями - Ссылка на документ
//
// Возвращаемое значение:
//	Структура - Реквизиты выбранного документа
//
Функция РеквизитыДокумента(ДокументСсылка) Экспорт
	Реквизиты = Новый Структура(
		"Дата, ХозяйственнаяОперация, Организация,
		|Партнер, Контрагент,
		|ОрганизацияОтправитель, ОрганизацияПолучатель,
		|ВалютаВзаиморасчетов, СуммаДокумента, СуммаВзаиморасчетов,
		|РасчетыЧерезОтдельногоКонтрагента, ПоТоварамКОформлению",
		'00010101', Перечисления.ХозяйственныеОперации.ПустаяСсылка(), Справочники.Организации.ПустаяСсылка(),
		Справочники.Партнеры.ПустаяСсылка(), Справочники.Контрагенты.ПустаяСсылка(),
		Справочники.Организации.ПустаяСсылка(), Справочники.Организации.ПустаяСсылка(),
		Справочники.Валюты.ПустаяСсылка(), 0, 0,
		Ложь, Ложь);
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	Данные.Дата КАК Дата,
		|	Данные.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
		|	Данные.Организация КАК Организация,
		|	(ВЫБОР КОГДА Данные.РасчетыЧерезОтдельногоКонтрагента ТОГДА Данные.Партнер
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КОНЕЦ) КАК Партнер,
		|	(ВЫБОР КОГДА Данные.РасчетыЧерезОтдельногоКонтрагента ТОГДА Данные.Контрагент
		|		ИНАЧЕ Данные.Организация КОНЕЦ) КАК Контрагент,
		|	Данные.Организация КАК ОрганизацияОтправитель,
		|	Данные.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
		|	Данные.Валюта КАК ВалютаВзаиморасчетов,
		|	Данные.СуммаДокумента КАК СуммаДокумента,
		|	(ВЫБОР КОГДА Данные.Проведен ТОГДА Данные.СуммаДокумента ИНАЧЕ 0 КОНЕЦ) КАК СуммаВзаиморасчетов,
		|	Данные.РасчетыЧерезОтдельногоКонтрагента КАК РасчетыЧерезОтдельногоКонтрагента,
		|	Данные.ПоТоварамКОформлению КАК ПоТоварамКОформлению
		|ИЗ
		|	Документ.ВозвратТоваровМеждуОрганизациями КАК Данные
		|ГДЕ
		|	Данные.Ссылка = &ДокументСсылка
		|");
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Реквизиты, Выборка);
	КонецЕсли;
	Возврат Реквизиты;
КонецФункции

// Расчет типа запасов по хозяйственной операции
//
// Параметры:
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации
//
Функция ТипЗапасовОперации(ХозяйственнаяОперация) Экспорт
	Возврат ?(ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями,
			Перечисления.ТипыЗапасов.КомиссионныйТовар,
			Перечисления.ТипыЗапасов.Товар);
КонецФункции


// Возвращает текст запроса для получениях доступных назначений
//	Параметры:
//		ПараметрыФормированияЗапроса - Структура - параметры для формирования текстов запросов
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаДоступныхНазначений(ПараметрыФормированияЗапроса) Экспорт

	ТекстЗапроса = Справочники.Назначения.ТекстЗапросаВсехНазначений(ПараметрыФормированияЗапроса);
	Возврат ТекстЗапроса;

КонецФункции

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад,Дата";
	
	Возврат ИменаРеквизитов;
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение
//			Тип Структура
//				Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ВозвратТоваровМеждуОрганизациями";
	
	ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Склад, Ложь);
	
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПустаяСсылка());
	
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;
	
	ПараметрыУказанияСерий.ТолькоСерииДляСебестоимости = Истина;
	ПараметрыУказанияСерий.Дата = Объект.Дата;
	
	Возврат ПараметрыУказанияСерий;
КонецФункции

// Возвращает текст запроса расчета статусов указания серий
//		
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|					ТОГДА ВЫБОР
	|							КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 14
	|							ИНАЧЕ 13
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|			ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|		ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|			И (ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;

КонецФункции


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДополнительныеСвойства);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаВыручкаИСебестоимостьПродаж(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаЗакупки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладныхТовары(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладныхВидыЗапасов(Запрос, ТекстыЗапроса, Регистры);
    ТекстЗапросаТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладныхРасшифровкаПлатежа(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСРасчетНалоговыхОбязательств(Запрос, ТекстыЗапроса, Регистры);
    ТекстЗапросаТаблицаНДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументовТовары(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументовРасшифровкаПлатежа(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСРасчетНалоговогоКредита(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
    Если ПроведениеСервер.ТребуетсяТаблицаДляДвижений("НДСНоменклатурныйСоставДляНалоговыхНакладных", Регистры) Тогда
        
    	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладных", 
    		ДополнитьТаблицуНДСНоменклатурныйСоставОбъектомРасчетов(
    			ДополнитьТаблицуНДСНоменклатурныйСоставНомеромГТД(
    				ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладныхТовары, // ТекстЗапросаТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладныхТовары
    				ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладныхВидыЗапасов  // ТекстЗапросаТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладныхВидыЗапасов
    			),
    			ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладныхРасшифровкаПлатежа      // ТекстЗапросаТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладныхВидыЗапасов
    		)
    	);
        
    КонецЕсли;
    
    Если ПроведениеСервер.ТребуетсяТаблицаДляДвижений("НДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов", Регистры) Тогда
        
        ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаНДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов",
            ДополнитьТаблицуНДССоставПоставкиОбъектомРасчетов(
                ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаНДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументовТовары, // НДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументовТовары
                ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаНДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументовРасшифровкаПлатежа  // НДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументовРасшифровкаПлатеж 
            )
        );
        
    КонецЕсли;
 	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка, ДополнительныеСвойств)
	
	// получаем значения реквизитов документа
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Период,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.Склад КАК Склад,
	|	ДанныеДокумента.ДокументПоступления КАК ДокументПоступления,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.Менеджер КАК Менеджер,
	|
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	(ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|		ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ) КАК ЭтоВозвратТовара,
	|	(ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями)
	|		ТОГДА Истина ИНАЧЕ Ложь КОНЕЦ) КАК ЭтоВозвратПоКомиссии,
	|
	|	ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента КАК РасчетыЧерезОтдельногоКонтрагента,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Возврат) КАК ВидПоставки,
	|
	|	ДанныеДокумента.ПоТоварамКОформлению КАК ПоТоварамКОформлению,
	|
	|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности
	|
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	// курсы валют, ключи аналитики, виды запасов
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Реквизиты.Валюта,Неопределено,Реквизиты.Период);
	ПересчитатьТаблицуТоваровВВалютуРегл(Реквизиты, Запрос.МенеджерВременныхТаблиц);
	
	АналитикиПартнеров = КлючиАналитикиПартнеров(Реквизиты);
	
	// наполнение запроса данных проведения параметрами
	Запрос.УстановитьПараметр("Ссылка",								Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Период",								Реквизиты.Период);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",				Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("ЭтоВозвратТовара",					Реквизиты.ЭтоВозвратТовара);
	Запрос.УстановитьПараметр("ЭтоВозвратПоКомиссии",				Реквизиты.ЭтоВозвратПоКомиссии);
	Запрос.УстановитьПараметр("Организация",						Реквизиты.Организация);
	Запрос.УстановитьПараметр("ОрганизацияПолучатель",				Реквизиты.ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("Склад",								Реквизиты.Склад);
	Запрос.УстановитьПараметр("Подразделение",						Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ПоТоварамКОформлению",				Реквизиты.ПоТоварамКОформлению);
	Запрос.УстановитьПараметр("Валюта",								Реквизиты.Валюта);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",		Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",			Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("РасчетыЧерезОтдельногоКонтрагента",	Реквизиты.РасчетыЧерезОтдельногоКонтрагента);
	Запрос.УстановитьПараметр("Контрагент",							Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("ДокументПоступления",				Реквизиты.ДокументПоступления);
	Запрос.УстановитьПараметр("Менеджер",							Реквизиты.Менеджер);
	Запрос.УстановитьПараметр("Партнер",							Реквизиты.Партнер);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл",	Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУПР",		Коэффициенты.КоэффициентПересчетаВВалютуУПР);
	Запрос.УстановитьПараметр("АналитикаУчетаПолучатель",			АналитикиПартнеров.АналитикаУчетаПолучатель);
	Запрос.УстановитьПараметр("АналитикаУчетаОтправитель",			АналитикиПартнеров.АналитикаУчетаОтправитель);
	Запрос.УстановитьПараметр("АналитикаВзаиморасчетовПолучатель",	АналитикиПартнеров.АналитикаВзаиморасчетовПолучатель);
	Запрос.УстановитьПараметр("АналитикаВзаиморасчетовОтправитель",	АналитикиПартнеров.АналитикаВзаиморасчетовОтправитель);
	Запрос.УстановитьПараметр("КорВидЗапасов",						Справочники.ВидыЗапасов.ВидЗапасовДокумента(Реквизиты.Организация, Перечисления.ХозяйственныеОперации.ВозвратТоваровПоставщику, Неопределено));
	
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов",		ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета",	ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Запрос.УстановитьПараметр("ИспользоватьПартионныйУчет",							ПолучитьФункциональнуюОпцию("ИспользоватьПартионныйУчет"));
	Запрос.УстановитьПараметр("ОрганизацияПлательщикНДСПолучатель",            НДСОбщегоНазначенияСервер.ОрганизацияКонтрагентПлательщикНДС(Реквизиты.ОрганизацияПолучатель, Реквизиты.Период));
	Запрос.УстановитьПараметр("ОрганизацияПлательщикНДСОтправитель",           НДСОбщегоНазначенияСервер.ОрганизацияКонтрагентПлательщикНДС(Реквизиты.Организация, Реквизиты.Период));
	Запрос.УстановитьПараметр("ВидПоставки",                                   Реквизиты.ВидПоставки);
	Запрос.УстановитьПараметр("МоментОпределенияБазыНДСПолучатель",            НДСИсходящийСервер.ОпределитьМоментОпределенияБазыНДС(Реквизиты.ВидПоставки, Реквизиты.ХозяйственнаяОперация, Реквизиты.Валюта, Реквизиты.ОрганизацияПолучатель));
	Запрос.УстановитьПараметр("МоментОпределенияБазыНДСОтправитель",           НДСВходящийСервер.ОпределитьМоментОпределенияБазыНДС(Реквизиты.ВидПоставки, Реквизиты.ХозяйственнаяОперация, Реквизиты.Организация));

КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиНоменклатуры(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросПредварительный = Новый Запрос("
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.Склад           КАК Склад,
		|	Таблица.Номенклатура    КАК Номенклатура,
		|	Таблица.Характеристика  КАК Характеристика,
		|	Таблица.Серия           КАК Серия
		|ИЗ 
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		&ОрганизацияПолучатель КАК Склад,
		|		Товары.Номенклатура    КАК Номенклатура,
		|		Товары.Характеристика  КАК Характеристика,
		|		&Серия                 КАК Серия
		|	ИЗ
		|		Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК Товары
		|	ГДЕ
		|		Товары.Ссылка = &Ссылка 
		|		И НЕ &ЭтоВозвратТовара
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		&Организация           КАК Склад,
		|		Товары.Номенклатура    КАК Номенклатура,
		|		Товары.Характеристика  КАК Характеристика,
		|		&Серия                 КАК Серия
		|	ИЗ
		|		Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК Товары
		|	ГДЕ
		|		Товары.Ссылка = &Ссылка 
		|		И НЕ &ЭтоВозвратТовара
		|	) КАК Таблица
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ 
		|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|	ПО 
		|		Таблица.Номенклатура = Аналитика.Номенклатура 
		|		И Таблица.Характеристика = Аналитика.Характеристика
		|		И Таблица.Серия = Аналитика.Серия
		|		И Таблица.Склад = Аналитика.Склад
		|ГДЕ
		|	Аналитика.КлючАналитики ЕСТЬ NULL
		|");
	ЗапросПредварительный.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросПредварительный.УстановитьПараметр("ОрганизацияПолучатель", Запрос.Параметры.ОрганизацияПолучатель);
	ЗапросПредварительный.УстановитьПараметр("Организация", Запрос.Параметры.Организация);
	ЗапросПредварительный.УстановитьПараметр("Серия", Справочники.СерииНоменклатуры.ПустаяСсылка());
	ЗапросПредварительный.УстановитьПараметр("ЭтоВозвратТовара", Запрос.Параметры.ЭтоВозвратТовара);
	Выборка = ЗапросПредварительный.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка)
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры 

Функция КлючиАналитикиПартнеров(Реквизиты)
	КлючВзаиморасчетовКлиент =
		Новый Структура(
			"Организация,Партнер,Контрагент, Договор, НаправлениеДеятельности",
			Реквизиты.ОрганизацияПолучатель,
			?(Реквизиты.РасчетыЧерезОтдельногоКонтрагента,Реквизиты.Партнер,Справочники.Партнеры.НашеПредприятие),
			?(Реквизиты.РасчетыЧерезОтдельногоКонтрагента,Реквизиты.Контрагент,Реквизиты.Организация),
			Справочники.ДоговорыКонтрагентов.ПустаяСсылка(),
			Реквизиты.НаправлениеДеятельности);
	КлючВзаиморасчетовПоставщик =
		Новый Структура(
			"Организация,Партнер,Контрагент, Договор, НаправлениеДеятельности",
			Реквизиты.Организация,
			?(Реквизиты.РасчетыЧерезОтдельногоКонтрагента,Реквизиты.Партнер,Справочники.Партнеры.НашеПредприятие),
			?(Реквизиты.РасчетыЧерезОтдельногоКонтрагента,Реквизиты.Контрагент,Реквизиты.ОрганизацияПолучатель),
			Справочники.ДоговорыКонтрагентов.ПустаяСсылка(),
			Реквизиты.НаправлениеДеятельности);
	КлючКлиент =
		Новый Структура(
			"Организация,Партнер,Контрагент, Договор, НаправлениеДеятельности",
			Реквизиты.ОрганизацияПолучатель,
			Справочники.Партнеры.НашеПредприятие,
			Реквизиты.Организация,
			Справочники.ДоговорыКонтрагентов.ПустаяСсылка(),
			Реквизиты.НаправлениеДеятельности);
	КлючПоставщик =
		Новый Структура(
			"Организация,Партнер,Контрагент, Договор, НаправлениеДеятельности",
			Реквизиты.Организация,
			Справочники.Партнеры.НашеПредприятие,
			Реквизиты.ОрганизацияПолучатель,
			Справочники.ДоговорыКонтрагентов.ПустаяСсылка(),
			Реквизиты.НаправлениеДеятельности);
	Возврат Новый Структура(
		"АналитикаУчетаПолучатель, АналитикаУчетаОтправитель, АналитикаВзаиморасчетовПолучатель, АналитикаВзаиморасчетовОтправитель",
		РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(КлючКлиент),
		РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(КлючПоставщик),
		РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(КлючВзаиморасчетовКлиент),
		РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(КлючВзаиморасчетовПоставщик));
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "РасчетыСКлиентами";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	РасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовПолучатель КАК АналитикаУчетаПоПартнерам,
	|	РасшифровкаПлатежа.Заказ КАК ЗаказКлиента,
	|	РасшифровкаПлатежа.ВалютаВзаиморасчетов КАК Валюта,
	|
	|	РасшифровкаПлатежа.СуммаВзаиморасчетов КАК Сумма,
	|	РасшифровкаПлатежа.СуммаВзаиморасчетов КАК КОплате,
	|	ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУПР КАК ЧИСЛО(15, 2)) КАК СуммаУпр,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Период КАК ДатаРегистратора,
	|	&Организация КАК Организация
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка=&Ссылка И &ЭтоВозвратТовара
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции 

Функция ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "РасчетыСПоставщиками";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	РасшифровкаПлатежа.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовОтправитель КАК АналитикаУчетаПоПартнерам,
	|	РасшифровкаПлатежа.Заказ КАК ЗаказПоставщику,
	|	РасшифровкаПлатежа.ВалютаВзаиморасчетов КАК Валюта,
	|
	|	РасшифровкаПлатежа.СуммаВзаиморасчетов КАК Сумма,
	|	РасшифровкаПлатежа.СуммаВзаиморасчетов КАК КОплате,
	|	ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(РасшифровкаПлатежа.Сумма * &КоэффициентПересчетаВВалютуУПР КАК ЧИСЛО(15, 2)) КАК СуммаУпр,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Период КАК ДатаРегистратора,
	|	&Организация КАК Организация
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|	
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка=&Ссылка И &ЭтоВозвратТовара
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции 

Функция ТекстЗапросаВтЗапасыОтправителя(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтЗапасыОтправителя";
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	ТекстЗапроса =  "
	|ВЫБРАТЬ
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры                              КАК АналитикаВозврата,
	|	Неопределено                                                        КАК АналитикаКомиссии,
	|	ВидыЗапасов.НомерСтроки                                             КАК НомерСтроки,
	|	Аналитика.Номенклатура                                              КАК Номенклатура,
	|	Аналитика.Характеристика                                            КАК Характеристика,
	|	ВидыЗапасов.ВидЗапасов                                              КАК ВидЗапасов,
	|	(ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА ВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ Неопределено КОНЕЦ)                                       КАК ВидЗапасовУчетный,
	|	ВидыЗапасов.ВидЗапасов.ТипЗапасов                                   КАК ТипЗапасов,
	|	ВидыЗапасов.НомерГТД                                                КАК НомерГТД,
	|	ВидыЗапасов.Количество                                              КАК Количество,
	|	ВидыЗапасов.СуммаСНДС                                               КАК СуммаСНДС,
	|	ВидыЗапасов.СтавкаНДС                                               КАК СтавкаНДС,
	|	ВидыЗапасов.ВидЗапасов.НалоговоеНазначение                          КАК НалоговоеНазначение,
	|	ВидыЗапасов.ЦелевоеНалоговоеНазначение                              КАК ЦелевоеНалоговоеНазначение,
	|	ВидыЗапасов.СуммаНДС                                                КАК СуммаНДС,
	|	ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС                        КАК СуммаБезНДС,
	|	ВЫРАЗИТЬ((ВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр)  КАК ЧИСЛО(15,2)) КАК СуммаСНДСУпр,
	|	ВЫРАЗИТЬ((ВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл) КАК ЧИСЛО(15,2)) КАК СуммаСНДСРегл,
	|	ВидыЗапасов.ВидЗапасовПолучателя                                    КАК ВидЗапасовПолучателя,
	|	ВидыЗапасов.ИдентификаторСтроки                                     КАК ИдентификаторСтроки,
	|	Аналитика.Склад	КАК Склад
	|ПОМЕСТИТЬ ВтЗапасыОтправителя
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики 
	|ГДЕ
	|	ВидыЗапасов.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтЗапасыПолучателя(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтЗапасыПолучателя";
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	ТекстЗапроса =  "
	|ВЫБРАТЬ
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры                                                      КАК АналитикаВозврата,
	|	АналитикаКомиссии.КлючАналитики                                                             КАК АналитикаКомиссии,
	|	ВидыЗапасов.НомерСтроки                                                                     КАК НомерСтроки,
	|	Аналитика.Номенклатура                                                                      КАК Номенклатура,
	|	Аналитика.Характеристика                                                                    КАК Характеристика,
	|	ВидыЗапасов.ВидЗапасовПолучателя                                                            КАК ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасов                                                                      КАК ВидЗапасовОтправителя,
	|	(ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА ВидыЗапасов.ВидЗапасовПолучателя
	|		ИНАЧЕ Неопределено КОНЕЦ)                                                               КАК ВидЗапасовУчетный,
	|	ВидыЗапасов.ВидЗапасовПолучателя.ТипЗапасов                                                 КАК ТипЗапасов,
	|	ВидыЗапасов.НомерГТД                                                                        КАК НомерГТД,
	|	ВидыЗапасов.Количество                                                                      КАК Количество,
	|	ВидыЗапасов.СуммаСНДС                                                                       КАК СуммаСНДС,
	|	ВидыЗапасов.СтавкаНДС                                                                       КАК СтавкаНДС,
	|	ВидыЗапасов.ВидЗапасовПолучателя.НалоговоеНазначение                                        КАК НалоговоеНазначение,
	|	ВидыЗапасов.ВидЗапасов.НалоговоеНазначение                                                  КАК ЦелевоеНалоговоеНазначение,
	|	ВидыЗапасов.СуммаНДС                                                                        КАК СуммаНДС,
	|	ВЫРАЗИТЬ((ВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр)                          КАК ЧИСЛО(15,2)) КАК СуммаСНДСУпр,
	|	ВЫРАЗИТЬ(((ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВВалютуУпр) КАК ЧИСЛО(15,2)) КАК СуммаБезНДСУпр,
	|	ВЫРАЗИТЬ((ВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл)                         КАК ЧИСЛО(15,2)) КАК СуммаСНДСРегл,
	|	ВЫРАЗИТЬ((ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл  КАК ЧИСЛО(15,2)) КАК СуммаБезНДСРегл,
	|	ВЫРАЗИТЬ(ВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуРегл  КАК ЧИСЛО(15,2))          КАК СуммаНДСРегл,
	|	ВидыЗапасов.ВидЗапасовПолучателя.Валюта                                                     КАК Валюта,
	|	ВидыЗапасов.АналитикаУчетаПартий                                                            КАК АналитикаУчетаПартий,
	|	ВидыЗапасов.ИдентификаторСтроки                                                             КАК ИдентификаторСтроки,
	|	ВидыЗапасов.ДокументРеализации                                                              КАК ДокументРеализации,
	|	Аналитика.Склад КАК Склад
	|		
	|ПОМЕСТИТЬ ВтЗапасыПолучателя
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО 
	|		ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомиссии
	|	ПО 
	|		Аналитика.Номенклатура = АналитикаКомиссии.Номенклатура 
	|		И Аналитика.Характеристика = АналитикаКомиссии.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = АналитикаКомиссии.Серия
	|		И &Организация = АналитикаКомиссии.Склад
	|ГДЕ
	|	ВидыЗапасов.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтЗапасыОтправителя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыОтправителя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтЗапасыПолучателя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыПолучателя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	&Склад КАК Склад,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД,
	|
	|	ТаблицаТовары.Количество КАК Количество,
	|
	|	&Организация КАК ОрганизацияОтгрузки,
	|	ТаблицаТовары.АналитикаВозврата КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.АналитикаВозврата КАК КорАналитикаУчетаНоменклатуры,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.ЦелевоеНалоговоеНазначение КАК НалоговоеНазначение,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ТаблицаТовары.ВидЗапасовПолучателя КАК КорВидЗапасов,
	|	ЛОЖЬ КАК Первичное
	|ИЗ
	|	ВтЗапасыОтправителя КАК ТаблицаТовары
	|ГДЕ
	|	НЕ &ПоТоварамКОформлению
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	&Склад КАК Склад,
	|	&ОрганизацияПолучатель КАК Организация,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД,
	|
	|	-ТаблицаТовары.Количество КАК Количество,
	|
	|	&Организация КАК ОрганизацияОтгрузки,
	|	ТаблицаТовары.АналитикаВозврата КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.АналитикаВозврата КАК КорАналитикаУчетаНоменклатуры,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.ЦелевоеНалоговоеНазначение КАК НалоговоеНазначение,
	|	&Ссылка КАК ДокументРеализации,
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|	ИСТИНА КАК Первичное
	|ИЗ
	|	ВтЗапасыПолучателя КАК ТаблицаТовары
	|ГДЕ
	|	НЕ &ПоТоварамКОформлению
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтЗапасыОтправителя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыОтправителя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтЗапасыПолучателя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыПолучателя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = 
	"
	|ВЫБРАТЬ // возврат товара поставщику
	|	ВидыЗапасов.НомерСтроки                                                 КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                  КАК ВидДвижения,
	|	&Период                                                                 КАК Период,
	|	ВидыЗапасов.АналитикаВозврата                                           КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                                            КАК Организация,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ                                                                   КАК РазделУчета,
	|	ВидыЗапасов.ВидЗапасовУчетный                                           КАК ВидЗапасов,
	|	ВидыЗапасов.НалоговоеНазначение                                         КАК НалоговоеНазначение,
	|	ВидыЗапасов.Количество                                                  КАК Количество,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА 0
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ((ВидыЗапасов.СуммаСНДС - (ВЫБОР КОГДА ВидыЗапасов.НалоговоеНазначение.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая) ТОГДА 0 ИНАЧЕ ВидыЗапасов.СуммаНДС КОНЕЦ)) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) 
	|	КОНЕЦ КАК СтоимостьРегл,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА 0
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ((ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2))
	|	КОНЕЦ КАК СтоимостьРеглБезНДС,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА 0
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2))
	|	КОНЕЦ КАК НДСРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями) КАК ХозяйственнаяОперация,
	|	ВЫБОР КОГДА ВидыЗапасов.ВидЗапасовПолучателя.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|			И ВидыЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК КорРазделУчета,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВидыЗапасов.ВидЗапасовПолучателя
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК КорВидЗапасов,
	|	ВидыЗапасов.ЦелевоеНалоговоеНазначение                                  КАК КорНалоговоеНазначение,
	|	ВЫБОР КОГДА ВидыЗапасов.ВидЗапасовПолучателя.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|			И ВидыЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	ТОГДА
	|		ВидыЗапасов.АналитикаВозврата
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК КорАналитикаУчетаНоменклатуры,
	|	&АналитикаУчетаПолучатель                                               КАК АналитикаУчетаПоПартнерам,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров) КАК СтатьяРасходовСписания,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров) КАК СтатьяДоходов,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК АналитикаРасходов,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК АналитикаДоходов,
	|	&Подразделение                                                          КАК Подразделение,
	|	Неопределено                                                            КАК ЗаказКлиента,
	|	&ОрганизацияПолучатель                                                  КАК КорОрганизация
	|ИЗ
	|	ВтЗапасыОтправителя КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // возврат товара от клиента
	|	ВидыЗапасов.НомерСтроки                                                 КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                  КАК ВидДвижения,
	|	&Период                                                                 КАК Период,
	|	ВидыЗапасов.АналитикаВозврата                                           КАК АналитикаУчетаНоменклатуры,
	|	&ОрганизацияПолучатель                                                  КАК Организация,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ                                                                   КАК РазделУчета,
	|	ВидыЗапасов.ВидЗапасовУчетный                                           КАК ВидЗапасов,
	|	ВидыЗапасов.НалоговоеНазначение                                         КАК НалоговоеНазначение,
	|	-ВидыЗапасов.Количество                                                 КАК Количество,
	|	0                                                                       КАК СтоимостьРегл,
	|	0                                                                       КАК СтоимостьРеглБезНДС,
	|	0                                                                       КАК НДСРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации)           КАК ХозяйственнаяОперация,
	|	Неопределено                                                            КАК КорРазделУчета,
	|	Неопределено                                                            КАК КорВидЗапасов,
	|	ВидыЗапасов.ЦелевоеНалоговоеНазначение                                  КАК КорНалоговоеНазначение,
	|	Неопределено                                                            КАК КорАналитикаУчетаНоменклатуры,
	|	Неопределено                                                            КАК АналитикаУчетаПоПартнерам,
	|	Неопределено                                                            КАК СтатьяРасходовСписания,
	|	Неопределено                                                            КАК СтатьяДоходов,
	|	Неопределено                                                            КАК АналитикаРасходов,
	|	Неопределено                                                            КАК АналитикаДоходов,
	|	Неопределено                                                            КАК Подразделение,
	|	Неопределено                                                            КАК ЗаказКлиента,
	|	Неопределено                                                            КАК КорОрганизация
	|ИЗ
	|	ВтЗапасыПолучателя КАК ВидыЗапасов
	|ГДЕ
	|	НЕ &ЭтоВозвратПоКомиссии
	|	И ВидыЗапасов.ВидЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // возврат товара от комиссионера, списываем товар с комиссионного учета
	|	ВидыЗапасов.НомерСтроки                                                            КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                                             КАК ВидДвижения,
	|	&Период                                                                            КАК Период,
	|	ВидыЗапасов.АналитикаКомиссии                                                      КАК АналитикаУчетаНоменклатуры,
	|	&ОрганизацияПолучатель                                                             КАК Организация,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	КОНЕЦ                                                                              КАК РазделУчета,
	|	ВидыЗапасов.ВидЗапасовУчетный                                                      КАК ВидЗапасов,
	|	ВидыЗапасов.НалоговоеНазначение                                                    КАК НалоговоеНазначение,
	|	ВидыЗапасов.Количество                                                             КАК Количество,
	|	0                                                                                  КАК СтоимостьРегл,
	|	0                                                                       		   КАК СтоимостьРеглБезНДС,
	|	0                                                                       		   КАК НДСРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)                 КАК ХозяйственнаяОперация,
	|	(ВЫБОР ВидыЗапасов.ВидЗапасов.ТипЗапасов
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КОНЕЦ) КАК КорРазделУчета,
	|	ВидыЗапасов.ВидЗапасовУчетный                                                      КАК КорВидЗапасов,
	|	ВидыЗапасов.ЦелевоеНалоговоеНазначение                                             КАК КорНалоговоеНазначение,
	|	ВидыЗапасов.АналитикаВозврата                                                      КАК КорАналитикаУчетаНоменклатуры,
	|	Неопределено                                                                       КАК АналитикаУчетаПоПартнерам,
	|	Неопределено                                                                       КАК СтатьяРасходовСписания,
	|	Неопределено                                                                       КАК СтатьяДоходов,
	|	Неопределено                                                                       КАК АналитикаРасходов,
	|	Неопределено                                                                       КАК АналитикаДоходов,
	|	Неопределено                                                                       КАК Подразделение,
	|	Неопределено                                                                       КАК ЗаказКлиента,
	|	Неопределено                                                                       КАК КорОрганизация
	|ИЗ
	|	ВтЗапасыПолучателя КАК ВидыЗапасов
	|ГДЕ
	|	&ЭтоВозвратПоКомиссии
	|	И ВидыЗапасов.ВидЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // возврат товара от комиссионера, приходуем товар на складской учет
	|	ВидыЗапасов.НомерСтроки                                                 КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                  КАК ВидДвижения,
	|	&Период                                                                 КАК Период,
	|	ВидыЗапасов.АналитикаВозврата                                           КАК АналитикаУчетаНоменклатуры,
	|	&ОрганизацияПолучатель                                                  КАК Организация,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ                                                                   КАК РазделУчета,
	|	ВидыЗапасов.ВидЗапасовУчетный                                           КАК ВидЗапасов,
	|	ВидыЗапасов.НалоговоеНазначение                                         КАК НалоговоеНазначение,
	|	ВидыЗапасов.Количество                                                  КАК Количество,
	|	0                                                                       КАК СтоимостьРегл,
	|	0                                                                       КАК СтоимостьРеглБезНДС,
	|	0                                                                       КАК НДСРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)      КАК ХозяйственнаяОперация,
	|	Неопределено                                                            КАК КорРазделУчета,
	|	Неопределено                                                            КАК КорВидЗапасов,
	|	ВидыЗапасов.ЦелевоеНалоговоеНазначение                                  КАК КорНалоговоеНазначение,
	|	Неопределено                                                            КАК КорАналитикаУчетаНоменклатуры,
	|	Неопределено                                                            КАК АналитикаУчетаПоПартнерам,
	|	Неопределено                                                            КАК СтатьяРасходовСписания,
	|	Неопределено                                                            КАК СтатьяДоходов,
	|	Неопределено                                                            КАК АналитикаРасходов,
	|	Неопределено                                                            КАК АналитикаДоходов,
	|	Неопределено                                                            КАК Подразделение,
	|	Неопределено                                                            КАК ЗаказКлиента,
	|	Неопределено                                                            КАК КорОрганизация
	|ИЗ
	|	ВтЗапасыПолучателя КАК ВидыЗапасов
	|ГДЕ
	|	&ЭтоВозвратПоКомиссии
	|	И ВидыЗапасов.ВидЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВыручкаИСебестоимостьПродаж(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "ВыручкаИСебестоимостьПродаж";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтЗапасыПолучателя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыПолучателя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ВидыЗапасов.НомерСтроки       КАК НомерСтроки,
	|	&Период                       КАК Период,
	|	ВидыЗапасов.АналитикаВозврата КАК АналитикаУчетаНоменклатуры,
	|	Неопределено                  КАК ЗаказКлиента,
	|	&АналитикаУчетаПолучатель     КАК АналитикаУчетаПоПартнерам,
	|	&Подразделение                КАК Подразделение,
	|	ВидыЗапасов.ТипЗапасов        КАК ТипЗапасов,
	|	ВидыЗапасов.ВидЗапасовУчетный КАК ВидЗапасов,
	|	&Менеджер                     КАК Менеджер,
	|	-ВидыЗапасов.Количество       КАК Количество,
	|	-ВидыЗапасов.СуммаСНДСУпр     КАК СуммаВыручки,
	|	-ВидыЗапасов.СуммаБезНДСУпр   КАК СуммаВыручкиБезНДС,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар) ТОГДА
	|			0
	|		ИНАЧЕ
	|			-ВидыЗапасов.СуммаСНДСУпр
	|	КОНЕЦ КАК Себестоимость,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар) ТОГДА
	|			0
	|		ИНАЧЕ
	|			-ВидыЗапасов.СуммаБезНДСУпр
	|	КОНЕЦ КАК СебестоимостьБезНДС,
	|
	|	ВидыЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации) КАК ХозяйственнаяОперация,
	|	0 КАК СебестоимостьРегл,
	|	-ВидыЗапасов.СуммаБезНДСРегл КАК СуммаВыручкиРегл,
	|	-(ВидыЗапасов.СуммаБезНДСРегл + ВидыЗапасов.СуммаНДСРегл) КАК СуммаВыручкиСНДСРегл,
	|
	|	0 КАК СуммаРучнойСкидки,
	|	0 КАК СуммаАвтоматическойСкидки,
	|
	|	&Склад КАК Склад,
	|	НЕОПРЕДЕЛЕНО КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК Соглашение,
	|
	|	&Валюта КАК ВалютаВзаиморасчетов,
	|	ВидыЗапасов.СуммаСНДС КАК СуммаВВалютеВзаиморасчетов,
	|	ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	&Валюта КАК ВалютаДокумента,
	|	ВидыЗапасов.СуммаСНДС КАК СуммаВВалютеДокумента,
	|	ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС КАК СуммаБезНДСВВалютеДокумента,
	|
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		ВидыЗапасов.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	&Ссылка КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтЗапасыПолучателя КАК ВидыЗапасов
	|ГДЕ
	|	&ЭтоВозвратТовара
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "ТоварыОрганизацийКПередаче";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтЗапасыОтправителя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыОтправителя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&ОрганизацияПолучатель КАК ОрганизацияВладелец,
	|	&Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасовПродавца,
	|	ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.Количество КАК Возвращено,
	|	ТаблицаТовары.АналитикаВозврата КАК АналитикаУчетаНоменклатуры,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ТаблицаТовары.ВидЗапасовПолучателя КАК КорВидЗапасов,
	|	ИСТИНА КАК Первичное
	|ИЗ
	|	ВтЗапасыОтправителя КАК ТаблицаТовары
	|	
	|ГДЕ
	|	&ПоТоварамКОформлению
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтКурсыВалют"; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	КурсыВалют.Валюта КАК Валюта,
	|
	|	(КурсВалютыДокумента.Курс * КурсыВалют.Кратность)
	|   / (КурсВалютыДокумента.Кратность * КурсыВалют.Курс) КАК КоэффициентПересчета
	|
	|ПОМЕСТИТЬ ВтКурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Период,
	|		Валюта В (
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ТаблицаВидыЗапасов.ВидЗапасовПолучателя.Валюта КАК Валюта
	|			ИЗ
	|				Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|			ГДЕ
	|				ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|				И ТаблицаВидыЗапасов.ВидЗапасовПолучателя.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			)
	|	) КАК КурсыВалют
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &Валюта) КАК КурсВалютыДокумента
	|	ПО
	|		Истина
	|
	|ГДЕ
	|	КурсВалютыДокумента.Кратность <> 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "ТоварыКОформлениюОтчетовКомитенту";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтКурсыВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтЗапасыПолучателя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыПолучателя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаВидыЗапасов.Валюта КАК Валюта,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	(-ТаблицаВидыЗапасов.Количество) КАК Количество,
	|	0 КАК КоличествоСписано,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.Валюта = &Валюта ТОГДА
	|		-ТаблицаВидыЗапасов.СуммаСНДС
	|	ИНАЧЕ
	|		-ТаблицаВидыЗапасов.СуммаСНДС * КурсыВалют.КоэффициентПересчета
	|	КОНЕЦ КАК СуммаВыручки,
	|	&КорВидЗапасов КАК КорВидЗапасов,
	|	Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтЗапасыПолучателя КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтКурсыВалют КАК КурсыВалют
	|	ПО
	|		ТаблицаВидыЗапасов.Валюта = КурсыВалют.Валюта
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаВидыЗапасов.Номенклатура = Аналитика.Номенклатура
	|		И ТаблицаВидыЗапасов.Характеристика = Аналитика.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = Аналитика.Серия
	|		И ТаблицаВидыЗапасов.ВидЗапасов.Комитент = Аналитика.Склад
	|ГДЕ
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И &ЭтоВозвратТовара
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции 


Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтЗапасыОтправителя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыОтправителя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	0 КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Валюта КАК Валюта,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаВидыЗапасов.СуммаБезНДС КАК СуммаБезНДС,
	|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокументаРегл.СуммаБезНДС КАК СуммаБезНДСРегл,
	|	ТаблицаДокументаРегл.СуммаНДС КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО КАК ТипРасчетов
	|
	|ИЗ
	|	ВтЗапасыОтправителя КАК ТаблицаВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаТоваровПредварительная КАК ТаблицаДокументаРегл
	|	ПО
	|		ТаблицаВидыЗапасов.ИдентификаторСтроки = ТаблицаДокументаРегл.ИдентификаторСтроки
	|
	|ГДЕ
	|	&Валюта <> &ВалютаРегламентированногоУчета
	|	И (НЕ &ЭтоВозвратПоКомиссии)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции 

Функция ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "ПартииТоваровОрганизаций";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтЗапасыПолучателя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыПолучателя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&ОрганизацияПолучатель КАК Организация,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	&Ссылка КАК ДокументПоступления, 
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	-ТаблицаТовары.Количество КАК Количество,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА СуммыДокументовВВалютеРегл.СуммаБезНДСРегл ЕСТЬ NULL 
	|			ИЛИ СуммыДокументовВВалютеРегл.СуммаБезНДСРегл = 0
	|		ТОГДА ВЫРАЗИТЬ(-(ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ -СуммыДокументовВВалютеРегл.СуммаБезНДСРегл
	|	КОНЕЦ КАК СтоимостьРегл,
	|	ВЫБОР
	|		КОГДА СуммыДокументовВВалютеРегл.СуммаНДСРегл ЕСТЬ NULL 
	|			ИЛИ СуммыДокументовВВалютеРегл.СуммаНДСРегл = 0
	|		ТОГДА ВЫРАЗИТЬ (-ТаблицаТовары.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|		ИНАЧЕ -СуммыДокументовВВалютеРегл.СуммаНДСРегл
	|	КОНЕЦ КАК НДСРегл,
	|
	|	ТаблицаТовары.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.АналитикаВозврата КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.АналитикаВозврата КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ВидЗапасовОтправителя КАК КорВидЗапасов,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеПоВозврату) КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ИСТИНА КАК Первичное,
	|	&Ссылка КАК ДокументИсточник
	|ИЗ
	|	ВтЗапасыПолучателя КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|	ПО
	|		&Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|		И ТаблицаТовары.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|ГДЕ
	|	&ИспользоватьПартионныйУчет
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ПересчитатьТаблицуТоваровВВалютуРегл(Реквизиты, МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                           КАК НомерСтроки,
	|	ТаблицаДокумента.ИдентификаторСтроки                   КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СтавкаНДС                             КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС                              КАК СуммаНДС,
	|	&Валюта                                                КАК Валюта,
	|	&Период                                                КАК Дата
	|
	|ПОМЕСТИТЬ ТаблицаТоваровПредварительная
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И &Валюта <> &ВалютаРегламентированногоУчета
	|";
	Запрос.УстановитьПараметр("Ссылка",                         Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Период",                         Реквизиты.Период);
	Запрос.УстановитьПараметр("Валюта",                         Реквизиты.Валюта);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	
	Запрос.Выполнить();
	
	ОбщегоНазначенияУТ.ПересчитатьТаблицуТоваровВВалютуРегл(МенеджерВременныхТаблиц);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаЗакупки(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "Закупки";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтЗапасыОтправителя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыОтправителя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|// Организация отправитель.
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&Менеджер КАК Менеджер,
	|
	|	ВидыЗапасов.АналитикаВозврата КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.Склад КАК Склад,
	|	ВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВидыЗапасов.ВидЗапасовУчетный КАК ВидЗапасов,
	|
	|	ВЫБОР
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА &Партнер
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	КОНЕЦ КАК Партнер,
	|	ВЫБОР
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА &Контрагент
	|		ИНАЧЕ &ОрганизацияПолучатель
	|	КОНЕЦ КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО КАК Соглашение,
	|	НЕОПРЕДЕЛЕНО КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК Заказ,
	|
	|	ВидыЗапасов.Количество КАК Количество,
	|
	|	ВидыЗапасов.СуммаСНДСУпр КАК Сумма,
	|	ВЫРАЗИТЬ((ВидыЗапасов.СуммаБезНДС * &КоэффициентПересчетаВВалютуУпр) КАК ЧИСЛО(15,2)) КАК СуммаБезНДС,
	|	ВидыЗапасов.СуммаСНДСРегл КАК СуммаРегл,
	|	ВЫРАЗИТЬ((ВидыЗапасов.СуммаБезНДС * &КоэффициентПересчетаВВалютуРегл) КАК ЧИСЛО(15,2)) КАК СуммаРеглБезНДС,
	|	0 КАК СуммаСкидки,
	|
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК СтоимостьРегл,
	|	0 КАК СуммаДопРасходов,
	|	0 КАК СуммаДопРасходовБезНДС,
	|
	|	&Валюта КАК ВалютаДокумента,
	|	ВидыЗапасов.СуммаСНДС КАК СуммаВВалютеДокумента,
	|	ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС КАК СуммаБезНДСВВалютеДокумента,
	|
	|	&Валюта КАК ВалютаВзаиморасчетов,
	|	ВидыЗапасов.СуммаСНДС КАК СуммаВВалютеВзаиморасчетов,
	|	ВидыЗапасов.СуммаСНДС - ВидыЗапасов.СуммаНДС КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ ВидыЗапасов.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	&Ссылка КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтЗапасыОтправителя КАК ВидыЗапасов
	|ГДЕ
	|	&ЭтоВозвратТовара И ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|"; 
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "ДвиженияНоменклатураНоменклатура";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период                                                             КАК Период,
	|	&ХозяйственнаяОперация                                              КАК ХозяйственнаяОперация,
	|	&ОрганизацияПолучатель                                              КАК Организация,
	|	&Подразделение                                                      КАК Подразделение,
	|
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры                              КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.Склад                                                     КАК Склад,
	|	ВидыЗапасов.ВидЗапасов.ТипЗапасов                                   КАК ТипЗапасов,
	|	(ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов 
	|		ТОГДА ВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ Неопределено 
	|	КОНЕЦ)                                                              КАК ВидЗапасов,
	|
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры                              КАК КорАналитикаУчетаНоменклатуры,
	|	Аналитика.Склад                                                     КАК КорСклад,
	|	ВидыЗапасов.ВидЗапасовПолучателя.ТипЗапасов                         КАК КорТипЗапасов,
	|	(ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|		ТОГДА ВидыЗапасов.ВидЗапасовПолучателя
	|		ИНАЧЕ Неопределено 
	|	КОНЕЦ)                                                              КАК КорВидЗапасов,
	|
	|	ВидыЗапасов.Количество                                              КАК Количество,
	|	ВидыЗапасов.Количество                                              КАК КорКоличество,
	|
	|	ВЫРАЗИТЬ((ВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр)  КАК ЧИСЛО(15,2)) КАК Стоимость,
	|	ВЫРАЗИТЬ((ВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр)  КАК ЧИСЛО(15,2)) КАК СтоимостьБезНДС,
	|	ВЫРАЗИТЬ((ВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл) КАК ЧИСЛО(15,2)) КАК СтоимостьРегл,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ Аналитика.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ВидыЗапасов.ВидЗапасовПолучателя
	|		ИНАЧЕ Аналитика.Номенклатура
	|	КОНЕЦ КАК КорИсточникГФУНоменклатуры
	|
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики 
	|ГДЕ
	|	&ЭтоВозвратПоКомиссии
	|	И ВидыЗапасов.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры)
	ИмяРегистра = "ТоварыПереданныеНаКомиссию";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтЗапасыПолучателя", ТекстыЗапроса) Тогда
		ТекстЗапросаВтЗапасыПолучателя(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки) КАК НомерСтроки,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|
	|	ТаблицаТовары.АналитикаКомиссии КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК Соглашение,
	|	&ОрганизацияПолучатель КАК Организация,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ТаблицаТовары.АналитикаВозврата КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|ИЗ
	|	ВтЗапасыПолучателя КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация 
	|			= ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.АналитикаКомиссии,
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.НомерГТД,
	|	ТаблицаТовары.НалоговоеНазначение,
	|	ТаблицаТовары.АналитикаВозврата,
	|	ТаблицаТовары.ДокументРеализации,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладныхТовары(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСНоменклатурныйСоставДляНалоговыхНакладныхТовары";
	ИмяРегистраДляПроверки = "НДСНоменклатурныйСоставДляНалоговыхНакладных";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистраДляПроверки, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&АналитикаВзаиморасчетовПолучатель КАК АналитикаУчетаПоПартнерам,
	|
	|	НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|
	|	&ВидПоставки КАК ВидПоставки,
	|
	|	&Валюта КАК Валюта,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыЗаполненияНоменклатурыНалоговыхДокументов.ТоварыУслуги) КАК СпособЗаполнения,
	|
	|	ТаблицаТоваров.СтавкаНДС      КАК СтавкаНДС,
	|	Неопределено                  КАК НомерГТД,
	|	ТаблицаТоваров.Номенклатура   КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Упаковка       КАК Упаковка,
	|	(ТаблицаТоваров.СуммаСНДС - ТаблицаТоваров.СуммаНДС) / ТаблицаТоваров.КоличествоУпаковок КАК ЦенаНН,
	|
	|	&Ссылка КАК ДокументПоставки,
	|   НЕОПРЕДЕЛЕНО КАК ДокументПоставкиДляВозвратов,
	|
	|	ТаблицаТоваров.СуммаСНДС КАК СуммаВзаиморасчетов,
	|	ТаблицаТоваров.КоличествоУпаковок КАК КоличествоУпаковок,
// Дополнительные колонки для распределения номеров ГТД
	|	ТаблицаТоваров.Количество КАК Количество
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК ТаблицаТоваров
	|
	|ГДЕ
	|	&ОрганизацияПлательщикНДСОтправитель
	|	И ТаблицаТоваров.Ссылка = &Ссылка
	|
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладныхВидыЗапасов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСНоменклатурныйСоставДляНалоговыхНакладныхВидыЗапасов";
	ИмяРегистраДляПроверки = "НДСНоменклатурныйСоставДляНалоговыхНакладных";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистраДляПроверки, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.СтавкаНДС      КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.НомерГТД       КАК НомерГТД,
	|	Аналитика.Номенклатура   		  КАК Номенклатура,
	|	Аналитика.Характеристика          КАК Характеристика,
	|
	|	ТаблицаВидыЗапасов.Количество КАК Количество
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|ГДЕ
	|	&ОрганизацияПлательщикНДСОтправитель
	|	И ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|
	|/////////////////////////////////////////////////////////////////////////////
	|";
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладныхРасшифровкаПлатежа(Запрос, ТекстыЗапроса, Регистры)

	ИмяРегистра = "НДСНоменклатурныйСоставДляНалоговыхНакладныхРасшифровкаПлатежа";
	ИмяРегистраДляПроверки = "НДСНоменклатурныйСоставДляНалоговыхНакладных";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистраДляПроверки, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.Заказ КАК ОбъектРасчетов,
// В валюте документа
	|	СУММА(ТаблицаРасшифровкаПлатежа.Сумма) КАК СуммаВзаиморасчетов 
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|
	|ГДЕ
	|	&ОрганизацияПлательщикНДСОтправитель
	|	И ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРасшифровкаПлатежа.Заказ
	|
	|
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ДополнитьТаблицуНДСНоменклатурныйСоставНомеромГТД(ТаблицаЗапросаТовары, ТаблицаЗапросаВидыЗапасов)
	
	ПогрешностьКоличествоУпаковок = 0;
	ПогрешностьПогрешностьСуммаВзаиморасчетов = 0;
	
	СтруктураПоиска = Новый Структура("Номенклатура, Характеристика");
	Для Каждого СтрокаВидовЗапасов Из ТаблицаЗапросаВидыЗапасов Цикл
		
		КоличествоКРаспределению = СтрокаВидовЗапасов.Количество;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаВидовЗапасов);
		Для Каждого СтрокаТоваров Из ТаблицаЗапросаТовары.НайтиСтроки(СтруктураПоиска) Цикл
			
			Если СтрокаТоваров.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Количество = Мин(КоличествоКРаспределению, СтрокаТоваров.Количество);
			
			НоваяСтрока = ТаблицаЗапросаТовары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТоваров);
			
			НоваяСтрока.НомерГТД = СтрокаВидовЗапасов.НомерГТД;
			НоваяСтрока.Количество = Количество;
			НоваяСтрока.КоличествоУпаковок  = ?(СтрокаТоваров.Количество <> 0, НДСИсходящийСервер.ОкруглитьСУчетомПогрешности(Количество * СтрокаТоваров.КоличествоУпаковок  / СтрокаТоваров.Количество, 3, ПогрешностьКоличествоУпаковок), 0);
			НоваяСтрока.СуммаВзаиморасчетов = ?(СтрокаТоваров.Количество <> 0, НДСИсходящийСервер.ОкруглитьСУчетомПогрешности(Количество * СтрокаТоваров.СуммаВзаиморасчетов / СтрокаТоваров.Количество, 2, ПогрешностьПогрешностьСуммаВзаиморасчетов), 0);
			
			СтрокаТоваров.Количество          = СтрокаТоваров.Количество          - Количество;
			СтрокаТоваров.КоличествоУпаковок  = СтрокаТоваров.КоличествоУпаковок  - НоваяСтрока.КоличествоУпаковок;
			СтрокаТоваров.СуммаВзаиморасчетов = СтрокаТоваров.СуммаВзаиморасчетов - НоваяСтрока.СуммаВзаиморасчетов;
			
			КоличествоКРаспределению = КоличествоКРаспределению - НоваяСтрока.Количество;
			
			Если КоличествоКРаспределению = 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	МассивУдаляемыхСтрок = ТаблицаЗапросаТовары.НайтиСтроки(Новый Структура("Количество", 0));
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		ТаблицаЗапросаТовары.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
	ТаблицаЗапросаТовары.Колонки.Удалить("Количество");
	
	Возврат ТаблицаЗапросаТовары;
	
КонецФункции

Функция ДополнитьТаблицуНДСНоменклатурныйСоставОбъектомРасчетов(ТаблицаЗапросаТовары, ТаблицаРасшифровкаПлатежа)
	
	// В случае комиссии ТаблицаРасшифровкаПлатежа пуста, ОбъектРасчетов остается в значении НЕОПРЕДЕЛЕНО
	ПогрешностьКоличествоУпаковок = 0;
	
	Для Каждого СтрокаРасшифровкаПлатежа Из ТаблицаРасшифровкаПлатежа Цикл
		
		СуммаВзаиморасчетовКРаспределению = СтрокаРасшифровкаПлатежа.СуммаВзаиморасчетов;
		
		Для каждого СтрокаТоваров Из ТаблицаЗапросаТовары Цикл
			Если СтрокаТоваров.СуммаВзаиморасчетов = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			СуммаВзаиморасчетов = Мин(СуммаВзаиморасчетовКРаспределению, СтрокаТоваров.СуммаВзаиморасчетов);
			
			НоваяСтрока = ТаблицаЗапросаТовары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТоваров);
			
			НоваяСтрока.ОбъектРасчетов = СтрокаРасшифровкаПлатежа.ОбъектРасчетов;
			НоваяСтрока.СуммаВзаиморасчетов = СуммаВзаиморасчетов;
			НоваяСтрока.КоличествоУпаковок  = ?(СтрокаТоваров.СуммаВзаиморасчетов <> 0, НДСИсходящийСервер.ОкруглитьСУчетомПогрешности(СуммаВзаиморасчетов * СтрокаТоваров.КоличествоУпаковок  / СтрокаТоваров.СуммаВзаиморасчетов, 3, ПогрешностьКоличествоУпаковок), 0);
			
			СтрокаТоваров.СуммаВзаиморасчетов = СтрокаТоваров.СуммаВзаиморасчетов - СуммаВзаиморасчетов;
			СтрокаТоваров.КоличествоУпаковок  = СтрокаТоваров.КоличествоУпаковок  - НоваяСтрока.КоличествоУпаковок;
			
			СуммаВзаиморасчетовКРаспределению = СуммаВзаиморасчетовКРаспределению - НоваяСтрока.СуммаВзаиморасчетов;
			
			Если СуммаВзаиморасчетовКРаспределению = 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	МассивУдаляемыхСтрок = ТаблицаЗапросаТовары.НайтиСтроки(Новый Структура("СуммаВзаиморасчетов", 0));
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		ТаблицаЗапросаТовары.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
	Возврат ТаблицаЗапросаТовары;
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСРасчетНалоговыхОбязательств(Запрос, ТекстыЗапроса, Регистры)
    
    ИмяРегистра = "НДСРасчетНалоговыхОбязательств";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&АналитикаВзаиморасчетовПолучатель КАК АналитикаУчетаПоПартнерам,
	|
	|	НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|
	|	&ВидПоставки КАК ВидПоставки, 
	|	&Валюта КАК Валюта,
	|
	|	&Ссылка КАК ДокументПоставки,
	|	&МоментОпределенияБазыНДСОтправитель КАК МоментОпределенияБазыНДС,
	|
	|	СУММА(ТаблицаТоваров.СуммаСНДС) КАК СуммаПоставкиТребующаяРегистрацииНН,
	|   0 КАК СуммаПоставкиНеТребующаяРегистрацииНН
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК ТаблицаТоваров
	|
	|ГДЕ
	|	&ОрганизацияПлательщикНДСОтправитель
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями)
	|	И ТаблицаТоваров.Ссылка = &Ссылка
	|
	|ИМЕЮЩИЕ 
	|	СУММА(ТаблицаТоваров.СуммаСНДС) <> 0
	|
	|
	|
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции


Функция ТекстЗапросаТаблицаНДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументовТовары(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТаблицаНДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументовТовары";
    ИмяРегистраДляПроверки = "НДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистраДляПроверки, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&АналитикаВзаиморасчетовОтправитель КАК АналитикаУчетаПоПартнерам,
	|
// Заполняется после выполнения общего запроса
	|	НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	&ВидПоставки КАК ВидПоставки,
	|
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|   ВЫБОР 
	|		КОГДА НЕ &ОрганизацияПлательщикНДСПолучатель  
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|		КОГДА ТаблицаТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|		КОГДА ТаблицаТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НеНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая)
	|	КОНЕЦ КАК НалоговоеНазначение,
	|	СУММА(ТаблицаТовары.СуммаСНДС) КАК СуммаВзаиморасчетов,
	|	СУММА(ВЫБОР 
	|		КОГДА НЕ &ОрганизацияПлательщикНДСПолучатель  
	|			ТОГДА 0
	|		КОГДА ТаблицаТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|			ТОГДА 0
	|		КОГДА ТаблицаТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НеНДС)
	|			ТОГДА 0
	|		ИНАЧЕ ТаблицаТовары.СуммаНДС
	|	КОНЕЦ) КАК СуммаНДСКредит,
	|
	|	НЕОПРЕДЕЛЕНО КАК ДатаВходящегоНалоговогоДокумента,
	|	&Ссылка КАК ДокументПоставки
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|   И &ОрганизацияПлательщикНДСПолучатель
	|   И &ВалютаРегламентированногоУчета = &Валюта
    |
    |СГРУППИРОВАТЬ ПО
    |	ТаблицаТовары.СтавкаНДС
	|
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаНДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументовРасшифровкаПлатежа(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТаблицаНДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументовРасшифровкаПлатежа";
    ИмяРегистраДляПроверки = "НДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистраДляПроверки, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаРасшифровкаПлатежа.Заказ КАК ОбъектРасчетов,
// В валюте документа
	|	СУММА(ТаблицаРасшифровкаПлатежа.Сумма) КАК СуммаВзаиморасчетов 
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.РасшифровкаПлатежа КАК ТаблицаРасшифровкаПлатежа
	|
	|ГДЕ
	|	ТаблицаРасшифровкаПлатежа.Ссылка = &Ссылка
	|	И &ОрганизацияПлательщикНДСПолучатель
	|   И &ВалютаРегламентированногоУчета = &Валюта
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРасшифровкаПлатежа.Заказ
	|
	|
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ДополнитьТаблицуНДССоставПоставкиОбъектомРасчетов(ТаблицаЗапросаТовары, ТаблицаРасшифровкаПлатежа)
	
	// В случае комиссии ТаблицаРасшифровкаПлатежа пуста, ОбъектРасчетов остается в значении НЕОПРЕДЕЛЕНО
	Для Каждого СтрокаРасшифровкаПлатежа Из ТаблицаРасшифровкаПлатежа Цикл
		
		СуммаВзаиморасчетовКРаспределению = СтрокаРасшифровкаПлатежа.СуммаВзаиморасчетов;
		
		Для каждого СтрокаТоваров Из ТаблицаЗапросаТовары Цикл
			Если СтрокаТоваров.СуммаВзаиморасчетов = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			СуммаВзаиморасчетов = Мин(СуммаВзаиморасчетовКРаспределению, СтрокаТоваров.СуммаВзаиморасчетов);
			СуммаНДСКредит 		= ?(СуммаВзаиморасчетов = СтрокаТоваров.СуммаВзаиморасчетов, СтрокаТоваров.СуммаНДСКредит, (СтрокаТоваров.СуммаНДСКредит * СуммаВзаиморасчетов ) / СтрокаТоваров.СуммаВзаиморасчетов);
			
			НоваяСтрока = ТаблицаЗапросаТовары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТоваров);
			
			НоваяСтрока.ОбъектРасчетов = СтрокаРасшифровкаПлатежа.ОбъектРасчетов;
			НоваяСтрока.СуммаВзаиморасчетов = СуммаВзаиморасчетов;
			НоваяСтрока.СуммаНДСКредит = СуммаНДСКредит;
			
			СтрокаТоваров.СуммаВзаиморасчетов = СтрокаТоваров.СуммаВзаиморасчетов - СуммаВзаиморасчетов;
			СтрокаТоваров.СуммаНДСКредит = СтрокаТоваров.СуммаНДСКредит - СуммаНДСКредит;
			
			СуммаВзаиморасчетовКРаспределению = СуммаВзаиморасчетовКРаспределению - НоваяСтрока.СуммаВзаиморасчетов;
			
			Если СуммаВзаиморасчетовКРаспределению = 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
			
	МассивУдаляемыхСтрок = ТаблицаЗапросаТовары.НайтиСтроки(Новый Структура("СуммаВзаиморасчетов", 0));
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		ТаблицаЗапросаТовары.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
	Возврат ТаблицаЗапросаТовары;
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСРасчетНалоговогоКредита(Запрос, ТекстыЗапроса, Регистры)
    
    ИмяРегистра = "НДСРасчетНалоговогоКредита";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&АналитикаВзаиморасчетовОтправитель КАК АналитикаУчетаПоПартнерам,
	|
	|	НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	&Ссылка КАК ДокументПоставки,
	|
	|	&ВидПоставки КАК ВидПоставки, 
	|	&МоментОпределенияБазыНДСПолучатель КАК МоментОпределенияБазыНДС,
	|
	|	СУММА(ТаблицаТовары.СуммаСНДС) КАК СуммаПоставкиТребующаяРегистрацииНН,
	|   0 КАК СуммаПоставкиНеТребующаяРегистрацииНН
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ОрганизацияПлательщикНДСПолучатель
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратПоКомиссииМеждуОрганизациями)
	|   И &ВалютаРегламентированногоУчета = &Валюта
	|
	|ИМЕЮЩИЕ 
	|	СУММА(ТаблицаТовары.СуммаСНДС) <> 0
	|
	|
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

 


#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Возврат поставщику
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ВозвратПоставщику";
	КомандаПечати.Представление = НСтр("ru='Возврат поставщику';uk='Повернення постачальнику'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ВозвратПоставщику") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"ВозвратПоставщику", 
			"Возврат поставщику", 
			СформироватьПечатнуюФормуВозвратПоставщику(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
			,
			,
			,
			Истина
		);
	КонецЕсли;
	
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуВозвратПоставщику(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	УстановитьПривилегированныйРежим(Истина);
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ 
	|   ИСТИНА КАК УчитыватьНДС,
	|   Товары.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ТаблицаУчитыватьНДС
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов) И Товары.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НеНДС)
	|СГРУППИРОВАТЬ ПО Товары.Ссылка 
	|;
	|ВЫБРАТЬ
	|	ВозвратТоваров.Ссылка КАК Ссылка,
	|	ВозвратТоваров.Организация.Префикс КАК Префикс,
	|	ВозвратТоваров.Номер КАК Номер,
	|	ВозвратТоваров.Дата КАК Дата,
	|	ВозвратТоваров.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|	ВозвратТоваров.ОрганизацияПолучатель КАК Получатель,
	|	ВозвратТоваров.Валюта КАК Валюта,
	|	ВозвратТоваров.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ВозвратТоваров.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|   ЕСТЬNULL(ТаблицаУчитыватьНДС.УчитыватьНДС, Ложь) КАК УчитыватьНДС,
	|	ВозвратТоваров.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	ВозвратТоваров.БанковскийСчетОрганизацииПолучателя КАК БанковскийСчетПолучателя,
	|	ВозвратТоваров.МестоСоставленияДокумента КАК МестоСоставленияДокумента,
	|	ВозвратТоваров.ПредставительОрганизации.Наименование КАК ПредставительОрганизации,
	|	ВозвратТоваров.ПредставительОрганизацииДолжность КАК ПредставительОрганизацииДолжность,
	|	ВозвратТоваров.ПредставительОрганизацииПолучателя.Наименование КАК ПредставительОрганизацииПолучателя,
	|	ВозвратТоваров.ПредставительОрганизацииПолучателяДолжность КАК ПредставительОрганизацииПолучателяДолжность,
	|	ВозвратТоваров.ПолучилПоДругомуДокументу КАК ПолучилПоДругомуДокументу,
	|	ВозвратТоваров.ДоверенностьАльтернативныйВидДокумента КАК ДоверенностьАльтернативныйВидДокумента,
	|	ВозвратТоваров.ДоверенностьСерия КАК ДоверенностьСерия,
	|	ВозвратТоваров.ДоверенностьНомер КАК ДоверенностьНомер,
	|	ВозвратТоваров.ДоверенностьДата КАК ДоверенностьДата,
	|	ВозвратТоваров.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	ВозвратТоваров.ДоверенностьПримечание КАК ДоверенностьПримечание,
	|	ВЫБОР
	|		КОГДА ВозвратТоваров.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоПередачаНаКомиссию
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ВозвратТоваров
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаУчитыватьНДС КАК ТаблицаУчитыватьНДС
	|		ПО ВозвратТоваров.Ссылка = ТаблицаУчитыватьНДС.Ссылка
	|ГДЕ
	|	ВозвратТоваров.Ссылка В(&МассивДокументов)
	|	И ВозвратТоваров.Проведен
	|	И (НЕ ВозвратТоваров.РасчетыЧерезОтдельногоКонтрагента)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВозвратТоваров.Ссылка,
	|	ВозвратТоваров.Организация.Префикс,
	|	ВозвратТоваров.Номер,
	|	ВозвратТоваров.Дата,
	|	ВозвратТоваров.Организация,
	|	ВозвратТоваров.Партнер,
	|	ВозвратТоваров.Контрагент,
	|	ВозвратТоваров.Валюта,
	|	ВозвратТоваров.ЦенаВключаетНДС,
	|	ВозвратТоваров.ХозяйственнаяОперация,
	|   ЕСТЬNULL(ТаблицаУчитыватьНДС.УчитыватьНДС, Ложь) КАК УчитыватьНДС,
	|	ВозвратТоваров.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	ВозвратТоваров.БанковскийСчетОрганизацииПолучателя КАК БанковскийСчетПолучателя,
	|	ВозвратТоваров.МестоСоставленияДокумента КАК МестоСоставленияДокумента,
	|	ВозвратТоваров.ПредставительОрганизации.Наименование КАК ПредставительОрганизации,
	|	ВозвратТоваров.ПредставительОрганизацииДолжность КАК ПредставительОрганизацииДолжность,
	|	ВозвратТоваров.ПредставительОрганизацииПолучателя.Наименование КАК ПредставительОрганизацииПолучателя,
	|	ВозвратТоваров.ПредставительОрганизацииПолучателяДолжность КАК ПредставительОрганизацииПолучателяДолжность,
	|	ВозвратТоваров.ПолучилПоДругомуДокументу КАК ПолучилПоДругомуДокументу,
	|	ВозвратТоваров.ДоверенностьАльтернативныйВидДокумента КАК ДоверенностьАльтернативныйВидДокумента,
	|	ВозвратТоваров.ДоверенностьСерия КАК ДоверенностьСерия,
	|	ВозвратТоваров.ДоверенностьНомер КАК ДоверенностьНомер,
	|	ВозвратТоваров.ДоверенностьДата КАК ДоверенностьДата,
	|	ВозвратТоваров.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	ВозвратТоваров.ДоверенностьПримечание КАК ДоверенностьПримечание,
	|	ВЫБОР
	|		КОГДА ВозвратТоваров.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ВозвратТоваров
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаУчитыватьНДС КАК ТаблицаУчитыватьНДС
	|		ПО ВозвратТоваров.Ссылка = ТаблицаУчитыватьНДС.Ссылка
	|ГДЕ
	|	ВозвратТоваров.Ссылка В(&МассивДокументов)
	|	И ВозвратТоваров.Проведен
	|	И ВозвратТоваров.РасчетыЧерезОтдельногоКонтрагента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВозвратТоваров.Ссылка,
	|	ВозвратТоваров.Организация.Префикс,
	|	ВозвратТоваров.Номер,
	|	ВозвратТоваров.Дата,
	|	ВозвратТоваров.Контрагент,
	|	ВозвратТоваров.Партнер,
	|	ВозвратТоваров.ОрганизацияПолучатель,
	|	ВозвратТоваров.Валюта,
	|	ВозвратТоваров.ЦенаВключаетНДС,
	|	ВозвратТоваров.ХозяйственнаяОперация,
	|   ЕСТЬNULL(ТаблицаУчитыватьНДС.УчитыватьНДС, Ложь) КАК УчитыватьНДС,
	|	ВозвратТоваров.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	ВозвратТоваров.БанковскийСчетОрганизацииПолучателя КАК БанковскийСчетПолучателя,
	|	ВозвратТоваров.МестоСоставленияДокумента КАК МестоСоставленияДокумента,
	|	ВозвратТоваров.ПредставительОрганизации.Наименование КАК ПредставительОрганизации,
	|	ВозвратТоваров.ПредставительОрганизацииДолжность КАК ПредставительОрганизацииДолжность,
	|	ВозвратТоваров.ПредставительОрганизацииПолучателя.Наименование КАК ПредставительОрганизацииПолучателя,
	|	ВозвратТоваров.ПредставительОрганизацииПолучателяДолжность КАК ПредставительОрганизацииПолучателяДолжность,
	|	ВозвратТоваров.ПолучилПоДругомуДокументу КАК ПолучилПоДругомуДокументу,
	|	ВозвратТоваров.ДоверенностьАльтернативныйВидДокумента КАК ДоверенностьАльтернативныйВидДокумента,
	|	ВозвратТоваров.ДоверенностьСерия КАК ДоверенностьСерия,
	|	ВозвратТоваров.ДоверенностьНомер КАК ДоверенностьНомер,
	|	ВозвратТоваров.ДоверенностьДата КАК ДоверенностьДата,
	|	ВозвратТоваров.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	ВозвратТоваров.ДоверенностьПримечание КАК ДоверенностьПримечание,
	|	ВЫБОР
	|		КОГДА ВозвратТоваров.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями КАК ВозвратТоваров
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаУчитыватьНДС КАК ТаблицаУчитыватьНДС
	|		ПО ВозвратТоваров.Ссылка = ТаблицаУчитыватьНДС.Ссылка
	|ГДЕ
	|	ВозвратТоваров.Ссылка В(&МассивДокументов)
	|	И ВозвратТоваров.Проведен
	|	И ВозвратТоваров.РасчетыЧерезОтдельногоКонтрагента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК ТоварНаименованиеПолное,
	|	ВложенныйЗапрос.Номенклатура.Код КАК Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул КАК Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Наименование КАК ЕдиницаЦены,
	|	ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.Упаковка.Наименование
	|	КОНЕЦ КАК Упаковка,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	ВложенныйЗапрос.Количество КАК Количество,
	|	ВложенныйЗапрос.Сумма КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС КАК СуммаНДС,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВозвратТоваров.Ссылка КАК Ссылка,
	|		ВозвратТоваров.Номенклатура КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА ВозвратТоваров.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|				ТОГДА 1
	|			ИНАЧЕ &ТекстЗапросаКоэффициентУпаковки2
	|		КОНЕЦ КАК Коэффициент,
	|		&ТекстЗапросаЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		ВозвратТоваров.Характеристика КАК Характеристика,
	|		ВозвратТоваров.Упаковка КАК Упаковка,
	|		ВозвратТоваров.СтавкаНДС КАК СтавкаНДС,
	|		ВозвратТоваров.Цена КАК Цена,
	|		ВозвратТоваров.КоличествоУпаковок КАК Количество,
	|		ВозвратТоваров.Сумма КАК Сумма,
	|		ВозвратТоваров.СуммаНДС КАК СуммаНДС,
	|		ВозвратТоваров.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК ВозвратТоваров
	|	ГДЕ
	|		ВозвратТоваров.Ссылка В(&МассивДокументов)
	|		И ВозвратТоваров.Ссылка.Проведен) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ВложенныйЗапрос.Упаковка",
			"ВложенныйЗапрос.Номенклатура"));
		
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ВозвратТоваров.Упаковка",
			"ВозвратТоваров.Номенклатура"));
			
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"ВозвратТоваров.Упаковка",
			"ВозвратТоваров.Номенклатура"));
 	
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
		
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВозвратТоваровМеждуОрганизациями_Накладная";
	
	МассивРезультатов   = Запрос.ВыполнитьПакет();
	ДанныеПечати        = МассивРезультатов[1].Выбрать();
	ВыборкаПоДокументам = МассивРезультатов[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
	
		// Найдем в выборке товары по текущему документу
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		НайденСледующий = ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		// Макет необходимо получать для каждого документа, т.к. размеры колонок изменяются динамически
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВозвратТоваровМеждуОрганизациями.ПФ_MXL_ВозвратПоставщику", КодЯзыкаПечать);
		
		ВыборкаПоТоварам = ВыборкаПоДокументам.Выбрать();
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент    = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Выводим шапку накладной
		
			
			ОбластьКолонкаТовар = Макет.Область("Товар");
			Если Не ВыводитьКоды Тогда
				ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки * 1.2;
			КонецЕсли;
			
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		
		ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(ДанныеПечати, НСтр("ru='Возврат поставщику';uk='Повернення постачальнику'",КодЯзыкаПечать), КодЯзыкаПечать);
		
		ОбластьМакета.Параметры.ТекстЗаголовка = ТекстЗаголовка;
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		СведенияОПоставщике	= ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Получатель, ДанныеПечати.Дата, , ДанныеПечати.БанковскийСчетПолучателя);	
		СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата, , ДанныеПечати.БанковскийСчетОрганизации);
		
		ОбластьМакета                                   = Макет.ПолучитьОбласть("Поставщик");
		ПредставлениеПоставщика                         = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование",,КодЯзыкаПечать);
		РеквизитыПоставщика                             = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "НомерСчета,Банк,МФО,/,ЮридическийАдрес,Телефоны,/,КодПоЕДРПОУ,КодПоДРФО,ИНН,НомерСвидетельства,/,ИнформацияОСтатусеПлательщикаНалогов",,КодЯзыкаПечать);
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ПредставлениеПоставщика;
		ОбластьМакета.Параметры.РеквизитыПоставщика     = РеквизитыПоставщика;
		ОбластьМакета.Параметры.Поставщик               = ДанныеПечати.Организация;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета                                   = Макет.ПолучитьОбласть("Покупатель");
		ПредставлениеПолучателя                         = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование",,КодЯзыкаПечать);
		РеквизитыПокупателя                             = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ФактическийАдрес,Телефоны,",,КодЯзыкаПечать);
		ОбластьМакета.Параметры.ПредставлениеПолучателя = ПредставлениеПолучателя;
		ОбластьМакета.Параметры.РеквизитыПокупателя		= РеквизитыПокупателя;
		ОбластьМакета.Параметры.Получатель              = ДанныеПечати.Получатель;
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим заголовок таблицы Товары
		
			
			ОбластьНомера     = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
			ОбластьКодов      = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
			ОбластьТовар      = Макет.ПолучитьОбласть("ШапкаТаблицы|Товар");
			ОбластьДанных     = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
			
			
		ТабличныйДокумент.Вывести(ОбластьНомера);
			
		Если ВыводитьКоды Тогда
			ОбластьКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов;
			ТабличныйДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
			
		ТабличныйДокумент.Присоединить(ОбластьТовар);
		ЗаполнитьЗначенияСвойств(ОбластьДанных.Параметры, ФормированиеПечатныхФорм.СформироватьЗаголовкиДляСуммовыхПоказателей(ДанныеПечати, КодЯзыкаПечать));
		ТабличныйДокумент.Присоединить(ОбластьДанных);
			
			
			ОбластьНомера  = Макет.ПолучитьОбласть("СтрокаТаблицы|НомерСтроки");
			ОбластьКодов   = Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
			ОбластьТовар   = Макет.ПолучитьОбласть("СтрокаТаблицы|Товар");
			ОбластьДанных  = Макет.ПолучитьОбласть("СтрокаТаблицы|Данные");
			
			
		Сумма          = 0;
		СуммаНДС       = 0;
		НомерСтроки    = 0;
		
		// Выводим строки таблицы Товары
			
		Пока ВыборкаПоТоварам.Следующий() Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьНомера.Параметры.НомерСтроки = НомерСтроки;
			ТабличныйДокумент.Вывести(ОбластьНомера);
			
			Если ВыводитьКоды Тогда
				
				ОбластьКодов.Параметры.Артикул = ВыборкаПоТоварам[КолонкаКодов];
				ТабличныйДокумент.Присоединить(ОбластьКодов);
				
			КонецЕсли;
			
			ОбластьТовар.Параметры.Заполнить(ВыборкаПоТоварам);
			ОбластьТовар.Параметры.Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				ВыборкаПоТоварам.ТоварНаименованиеПолное,
				ВыборкаПоТоварам.Характеристика
			) + ?(ВыборкаПоТоварам.ЭтоВозвратнаяТара, НСтр("ru=' (возвратная тара)';uk=' (зворотна тара)'",КодЯзыкаПечать), "");
			ТабличныйДокумент.Присоединить(ОбластьТовар);
			
			ОбластьДанных.Параметры.Заполнить(ВыборкаПоТоварам);
			ТабличныйДокумент.Присоединить(ОбластьДанных);
			
			Если ДанныеПечати.ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.ВозвратТоваровКомитенту Тогда
				
				Сумма    = Сумма    + ВыборкаПоТоварам.Сумма;
				СуммаНДС = СуммаНДС + ВыборкаПоТоварам.СуммаНДС;
				
			КонецЕсли;
				
		КонецЦикла;
		
		// Выводим подвал
		
			
			ОбластьНомера = Макет.ПолучитьОбласть("ПодвалТаблицы|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
			ОбластьТовар  = Макет.ПолучитьОбласть("ПодвалТаблицы|Товар");
			ОбластьДанных = Макет.ПолучитьОбласть("ПодвалТаблицы|Данные");
			
			ТабличныйДокумент.Вывести(ОбластьНомера);
			
			Если ВыводитьКоды Тогда
				ТабличныйДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			
			ТабличныйДокумент.Присоединить(ОбластьТовар);
				
			ОбластьДанных.Параметры.Всего = ФормированиеПечатныхФорм.ФорматСумм(Сумма);
			ТабличныйДокумент.Присоединить(ОбластьДанных);
			
			
		// Выводим ИтогоНДС
		
		Если ДанныеПечати.УчитыватьНДС Тогда
			
			ОбластьНомера = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|НомерСтроки");
			ОбластьКодов  = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|КолонкаКодов");
			ОбластьТовар  = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|Товар");
			ОбластьДанных = Макет.ПолучитьОбласть("ПодвалТаблицыНДС|Данные");
			
			ТабличныйДокумент.Вывести(ОбластьНомера);
			
			Если ВыводитьКоды Тогда
				ТабличныйДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			
			ТабличныйДокумент.Присоединить(ОбластьТовар);
			ОбластьДанных.Параметры.НДС = ?(ДанныеПечати.ЦенаВключаетНДС, НСтр("ru='В том числе НДС:';uk='У тому числі ПДВ:'",КодЯзыкаПечать), НСтр("ru='Сумма НДС:';uk='Сума ПДВ:'",КодЯзыкаПечать));
			ОбластьДанных.Параметры.ВсегоНДС = СуммаНДС;
			ТабличныйДокумент.Присоединить(ОбластьДанных);
			
			Если Не ДанныеПечати.ЦенаВключаетНДС Тогда
				
				ТабличныйДокумент.Вывести(ОбластьНомера);	
				Если ВыводитьКоды Тогда
					ТабличныйДокумент.Присоединить(ОбластьКодов);
				КонецЕсли;	
				ТабличныйДокумент.Присоединить(ОбластьТовар);
				
				ОбластьДанных.Параметры.НДС = НСтр("ru='Всего с НДС:';uk='Всього із ПДВ:'",КодЯзыкаПечать);
				ОбластьДанных.Параметры.ВсегоНДС = Сумма+СуммаНДС;
				ТабличныйДокумент.Присоединить(ОбластьДанных);
				
			КонецЕсли;
			
		КонецЕсли;
		
			
			// Выводим Сумму прописью
			
			ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
			СуммаКПрописи = Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СуммаНДС);
			
			ИтоговаяСтрока = НСтр("ru='Всего наименований %КоличествоНаименований%, на сумму %СуммаДокумента% ';uk='Всього найменувань %КоличествоНаименований%, на суму %СуммаДокумента% '",КодЯзыкаПечать);
			ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%КоличествоНаименований%", ВыборкаПоТоварам.Количество());
			ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%СуммаДокумента%", ФормированиеПечатныхФорм.ФорматСумм(СуммаКПрописи, ДанныеПечати.Валюта));

			ОбластьМакета.Параметры.ИтоговаяСтрока = ИтоговаяСтрока;
			ОбластьМакета.Параметры.СуммаПрописью  = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаКПрописи, ДанныеПечати.Валюта, , КодЯзыкаПечать);
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		
		Если ЗначениеЗаполнено(ДанныеПечати.МестоСоставленияДокумента) Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("МестоСоставления");
			ОбластьМакета.Параметры.МестоСоставления = СокрЛП(ДанныеПечати.МестоСоставленияДокумента);
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		
		// Выводим подписи
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		
		ОбластьМакета.Параметры.Заполнить(ФормированиеПечатныхФорм.СведенияОбОтветсвенныхЛицах(ДанныеПечати, КодЯзыкаПечать));
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;

	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;

КонецФункции // СформироватьПечатнуюФормуВозвратПоставщику()
 



Процедура ЗаполнитьСтруктуруПолучателейПечатныхФорм(СтруктураДанныхОбъектаПечати) Экспорт
	
	СтруктураДанныхОбъектаПечати.ОсновнойПолучатель = "Партнер";
	
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Партнер");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда 
		СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Контрагент");
	КонецЕсли;
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Грузоотправитель");
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Грузополучатель");
	
КонецПроцедуры

Функция ДоступныеДляШаблоновПечатныеФормы() Экспорт

	МассивДоступныхПечатныхФорм = Новый Массив;
	
	МассивДоступныхПечатныхФорм.Добавить(ШаблоныСообщенийСервер.СтруктураПараметровДоступнойПечатнойФормы(
	                                     "ВозвратПоставщику", НСтр("ru='Возврат поставщику';uk='Повернення постачальнику'"), "Документ.ВозвратТоваровМеждуОрганизациями", Неопределено));
	
	Возврат МассивДоступныхПечатныхФорм

КонецФункции

#КонецОбласти

#Область ИнициализацияИЗаполнение

// Заполнение структуры по передаче товаров, "качество" ссылки на передачу НЕ контролируется
//
// Параметры:
//	Объект - Структура - что заполнять, состав ожидается эквивалентным структуре документе ВозвратТоваровМеждуОрганизациями
//	ИсточникСсылка - ДокументСсылка.ПередачаТоваровМеждуОрганизациями
//
Процедура ЗаполнитьПоПередачеТоваров(Объект, ИсточникСсылка) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ Организация, ОрганизацияПолучатель, РасчетыЧерезОтдельногоКонтрагента, Партнер, Контрагент
		|ИЗ Документ.ПередачаТоваровМеждуОрганизациями КАК ПТО
		|ГДЕ ПТО.Ссылка=&Ссылка");
	Запрос.УстановитьПараметр("Ссылка",ИсточникСсылка);
	Реквизиты = Запрос.Выполнить().Выгрузить()[0];
	
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		Объект.Организация = Реквизиты.ОрганизацияПолучатель;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Объект.ОрганизацияПолучатель) Тогда
		Объект.ОрганизацияПолучатель = Реквизиты.Организация;
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(Объект,Реквизиты,"РасчетыЧерезОтдельногоКонтрагента,Партнер,Контрагент");
	
КонецПроцедуры

// Заполнение ТЧ.Товары по остаткам к возврату между организациями на дату расчета или на Объект.Дата
//
// Параметры:
//	Объект - Структура - что заполнять, состав ожидается эквивалентным структуре документе ВозвратТоваровМеждуОрганизациями
//	НачалоПериода - ДатаВремя - дата начала расчета остатков для заполнения
//	КонецПериода - ДатаВремя - дата окончания расчета остатков для заполнения
//
Процедура ЗаполнитьТоварыПоОстаткамКВозврату(Объект, НачалоПериода = Неопределено, КонецПериода = Неопределено) Экспорт
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	ЗаПериод.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
		|	ВидыЗапасов.Ссылка						КАК ВидЗапасов,
		|	ЗаПериод.НомерГТД						КАК НомерГТД,
		|	ЗаПериод.ВозвращеноОборот				КАК ВозвращеноНаДату,
		|	ЕСТЬNULL(НаСейчас.ВозвращеноОстаток,0)	КАК ВозвращеноНаСейчас
		|ПОМЕСТИТЬ КВозврату
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизацийКПередаче.ОстаткиИОбороты(&НачГраница, &КонГраница, Период, ,
		|		ОрганизацияВладелец = &ОрганизацияПолучатель
		|		И АналитикаУчетаНоменклатуры.Склад = &Склад) КАК ЗаПериод
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		Справочник.ВидыЗапасов КАК ВидыЗапасов
		|	ПО
		|		ЗаПериод.ВидЗапасовПродавца = ВидыЗапасов.Ссылка
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		РегистрНакопления.ТоварыОрганизацийКПередаче.Остатки(,
		|			ОрганизацияВладелец = &ОрганизацияПолучатель
		|			И АналитикаУчетаНоменклатуры.Склад = &Склад) КАК НаСейчас
		|	ПО
		|		ЗаПериод.АналитикаУчетаНоменклатуры = НаСейчас.АналитикаУчетаНоменклатуры
		|		И ЗаПериод.НомерГТД = НаСейчас.НомерГТД
		|		И ЗаПериод.ВидЗапасовПродавца = НаСейчас.ВидЗапасовПродавца
		|ГДЕ
		|	ВидыЗапасов.Организация = &Организация
		|	И ВидыЗапасов.РеализацияЗапасовДругойОрганизации
		|	И ЗаПериод.ВозвращеноОборот > 0
		|	И ЕСТЬNULL(НаСейчас.ВозвращеноОстаток,0) > 0
		|	И ВидыЗапасов.ТипЗапасов = &ТипЗапасов
		|;
		|/////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР КОГДА КВозврату.ВозвращеноНаСейчас < КВозврату.ВозвращеноНаДату ТОГДА
		|		КВозврату.ВозвращеноНаСейчас
		|	ИНАЧЕ
		|		КВозврату.ВозвращеноНаДату
		|	КОНЕЦ									КАК Количество,
		|	Аналитика.Номенклатура					КАК Номенклатура,
		|	Аналитика.Характеристика				КАК Характеристика,
		|	Аналитика.Серия							КАК Серия,
		|	КВозврату.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
		|	КВозврату.ВидЗапасов					КАК ВидЗапасов,
		|	КВозврату.НомерГТД						КАК НомерГТД
		|ИЗ
		|	КВозврату
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|	ПО
		|		КВозврату.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
		|
		|УПОРЯДОЧИТЬ ПО
		|	Аналитика.Номенклатура,
		|	Аналитика.Характеристика,
		|	Аналитика.Серия,
		|	КВозврату.ВидЗапасов,
		|	КВозврату.НомерГТД
		|");
	Запрос.УстановитьПараметр("ОрганизацияПолучатель", Объект.ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("ТипЗапасов", ТипЗапасовОперации(Объект.ХозяйственнаяОперация));
	
	ДатаНачала = ?(ЗначениеЗаполнено(НачалоПериода), НачалоПериода, '00010101');
	ДатаОкончания = ?(ЗначениеЗаполнено(КонецПериода), КонецПериода, Объект.Дата);
	Запрос.УстановитьПараметр("НачГраница", Новый Граница(ДатаНачала, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонГраница", Новый Граница(ДатаОкончания, ВидГраницы.Включая));
	
	Объект.Товары.Очистить();
	ТаблицаТовары = Объект.Товары.Выгрузить();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.ВидыЗапасов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		НоваяСтрокаТоваров = ТаблицаТовары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТоваров, Выборка);
		НоваяСтрокаТоваров.КоличествоУпаковок = НоваяСтрокаТоваров.Количество;
	КонецЦикла;
	
	ТаблицаТовары.Свернуть("Номенклатура, Характеристика, АналитикаУчетаНоменклатуры, СтавкаНДС", "Количество, КоличествоУпаковок");
	Объект.Товары.Загрузить(ТаблицаТовары);
КонецПроцедуры

// Заполняет вид цены значением по умолчанию, заполняет валюту документа из вида цены
//
// Параметры:
//	Объект - Структура - что заполнять, состав ожидается эквивалентным структуре документе ВозвратТоваровМеждуОрганизациями
//
Процедура ЗаполнитьВидЦеныПоУмолчанию(Объект) Экспорт
	Если Не ЗначениеЗаполнено(Объект.ВидЦены) Тогда
		Объект.ВидЦены = Справочники.ВидыЦен.ВидЦеныПоУмолчанию(
			Объект.ВидЦены,
			Новый Структура("ИспользоватьПриПередачеМеждуОрганизациями", Истина));
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ВидЦены) Тогда
		Реквизиты = Справочники.ВидыЦен.ПолучитьРеквизитыВидаЦены(Объект.ВидЦены);
		Объект.ЦенаВключаетНДС = Реквизиты.ЦенаВключаетНДС;
	КонецЕсли;
	Объект.Валюта = Константы.ВалютаРегламентированногоУчета.Получить();
КонецПроцедуры

// Заполняем налогоболожение, ставки НДС, цены и суммы в товарах.
//
// Параметры:
//	Объект - Структура - что заполнять, состав ожидается эквивалентным структуре документе ВозвратТоваровМеждуОрганизациями
//
Процедура ЗаполнитьНалогобложениеИЦеныПоУмолчанию(Объект) Экспорт
	НалогообложениеНДСПоУмолчанию = НДСОбщегоНазначенияСервер.ПолучитьНалогообложениеНДС(Объект.ОрганизацияПолучатель, Объект.Организация, Объект.Дата, Истина);
	Объект.АвторасчетНДС      = НДСИсходящийСервер.ПолучитьФлагАвторасчетНДС(НалогообложениеНДСПоУмолчанию);
	КэшированныеЗначения = Неопределено;
	Действия = Новый Структура("ЗаполнитьСтавкуНДС", НалогообложениеНДСПоУмолчанию);
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Объект.Товары, Действия, КэшированныеЗначения);

	ЗаполнитьВидЦеныПоУмолчанию(Объект);
	Если ЗначениеЗаполнено(Объект.ВидЦены) Тогда
		СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(Объект);
		ПродажиСервер.ЗаполнитьЦены(
			Объект.Товары,
			, // Массив строк или структура отбора
			Новый Структура( // Параметры заполнения
				"Дата, Валюта, ВидЦены, ПоляЗаполнения",
				Объект.Дата,
				Объект.Валюта,
				Объект.ВидЦены,
				"Цена, ВидЦены"
			),
			Новый Структура( // Структура действий с измененными строками
				"ПересчитатьСумму, ПересчитатьСуммуСНДС, ПересчитатьСуммуНДС",
				"КоличествоУпаковок", СтруктураПересчетаСуммы, СтруктураПересчетаСуммы));
		
	КонецЕсли;
КонецПроцедуры

// Установка значений по умолчанию для пустой структуры
//
// Параметры:
//	Объект - Структура - что заполнять, состав ожидается эквивалентным структуре документе ВозвратТоваровМеждуОрганизациями
//
Процедура ЗаполнитьРеквизитыПоУмолчанию(Объект) Экспорт
	
	Объект.Менеджер = Пользователи.ТекущийПользователь();
	Объект.Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Объект.Организация);
	Объект.Склад = ЗначениеНастроекПовтИсп.ПолучитьСкладПоУмолчанию(Объект.Склад);
		
	СтруктураПараметров = ДенежныеСредстваСервер.ПараметрыЗаполненияБанковскогоСчетаОрганизацииПоУмолчанию();
	СтруктураПараметров.Организация    = Объект.Организация;
	СтруктураПараметров.БанковскийСчет = Объект.БанковскийСчетОрганизации;

	Объект.БанковскийСчетОрганизации = ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(СтруктураПараметров);
	
	СтруктураПараметров = ДенежныеСредстваСервер.ПараметрыЗаполненияБанковскогоСчетаОрганизацииПоУмолчанию();
	СтруктураПараметров.Организация    = Объект.ОрганизацияПолучатель;
	СтруктураПараметров.БанковскийСчет = Объект.БанковскийСчетОрганизацииПолучателя;

	Объект.БанковскийСчетОрганизацииПолучателя = ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетОрганизацииПоУмолчанию(СтруктураПараметров);
	
	Объект.Подразделение = ЗначениеНастроекПовтИсп.ПодразделениеПользователя(Пользователи.ТекущийПользователь(), Объект.Подразделение);
	
	ЗаполнитьВидЦеныПоУмолчанию(Объект);
	НалогообложениеНДСПоУмолчанию = НДСОбщегоНазначенияСервер.ПолучитьНалогообложениеНДС(Объект.ОрганизацияПолучатель, Объект.Организация, Объект.Дата, Истина);
	Объект.АвторасчетНДС      = НДСИсходящийСервер.ПолучитьФлагАвторасчетНДС(НалогообложениеНДСПоУмолчанию);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаДанныхДокументов с полями:
//		Ссылка.
//
//	ПараметрыЗаполнения - Структура - структура, возвращаемая функцией ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения = Неопределено) Экспорт
	
	Если ПараметрыЗаполнения = Неопределено Тогда
		ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПересчитыватьВВалютуРегл", ПараметрыЗаполнения.ПересчитыватьВВалютуРегл);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка                КАК Ссылка,
	|	ТаблицаТоваров.Номенклатура          КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика        КАК Характеристика,
	|	ТаблицаТоваров.Серия                 КАК Серия,
	|	ТаблицаТоваров.Упаковка              КАК Упаковка,
	|	МАКСИМУМ(ТаблицаТоваров.НомерСтроки) КАК НомерСтроки
	|
	|ПОМЕСТИТЬ СтрокиТоваров
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.Товары КАК ТаблицаТоваров
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаТоваров.Ссылка = ДанныеДокументов.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Характеристика,
	|	ТаблицаТоваров.Серия,
	|	ТаблицаТоваров.Упаковка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Характеристика,
	|	ТаблицаТоваров.Упаковка
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                        КАК Ссылка,
	|	СтрокиТоваров.НомерСтроки                                      КАК НомерСтроки,
	|	Аналитика.Номенклатура                                         КАК Номенклатура,
	|	Аналитика.Характеристика                                       КАК Характеристика,
	|	Аналитика.Серия                                                КАК Серия,
	|	ТаблицаДокумента.НомерГТД                                      КАК НомерГТД,
	|	СУММА(ТаблицаДокумента.Количество)                             КАК Количество,
	|	СУММА(ТаблицаДокумента.КоличествоУпаковок)                     КАК КоличествоУпаковок,
	|	
	|	СУММА(ЕСТЬNULL(
	|		СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,
	|		ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС
	|	)) КАК СуммаБезНДС,
	|	
	|	ТаблицаДокумента.СтавкаНДС                                     КАК СтавкаНДС,
	|	
	|	СУММА(ЕСТЬNULL(
	|		СуммыДокументовВВалютеРегл.СуммаНДСРегл,
	|		ТаблицаДокумента.СуммаНДС
	|	)) КАК СуммаНДС,
	|	
	|	ИСТИНА                                                         КАК ЭтоТовар,
	|	ИСТИНА                                                         КАК ВернутьМногооборотнуюТару,
	|	ТаблицаДокумента.Упаковка                                      КАК Упаковка
	|
	|ПОМЕСТИТЬ ВозвратТоваровМеждуОрганизациямиТаблицаТоваров
	|ИЗ
	|	Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|	ПО
	|		ТаблицаДокумента.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|		И ТаблицаДокумента.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|		И СуммыДокументовВВалютеРегл.Активность
	|		И &ПересчитыватьВВалютуРегл
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаДокумента.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СтрокиТоваров КАК СтрокиТоваров
	|	ПО
	|		ТаблицаДокумента.Ссылка     = СтрокиТоваров.Ссылка
	|		И Аналитика.Номенклатура    = СтрокиТоваров.Номенклатура
	|		И Аналитика.Характеристика  = СтрокиТоваров.Характеристика
	|		И Аналитика.Серия           = СтрокиТоваров.Серия
	|		И ТаблицаДокумента.Упаковка = СтрокиТоваров.Упаковка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Ссылка,
	|	СтрокиТоваров.НомерСтроки,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	Аналитика.Серия,
	|	ТаблицаДокумента.СтавкаНДС,
	|	ТаблицаДокумента.Упаковка,
	|	ТаблицаДокумента.НомерГТД
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СтрокиТоваров
	|";
	
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

#КонецОбласти


#КонецОбласти

#КонецЕсли
