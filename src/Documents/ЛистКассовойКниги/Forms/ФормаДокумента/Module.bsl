
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	ИспользоватьНесколькоКасс = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоКасс");
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ПараметрыОбособленногоПодразделения = Новый ФиксированнаяСтруктура(Документы.ЛистКассовойКниги.ПараметрыОбособленногоПодразделения(Объект));
	УстановитьВидимостьОбособленногоПодразделения();
	ЗаполнитьСписокВыбораОбособленныхПодразделений();
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		РассчитатьОстатокПоРегистрам();
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
	
	// Обработчик механизма "ВерсионированиеОбъектов"
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	
	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюПечать);
	// Конец СтандартныеПодсистемы.Печать

	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	// ВводНаОсновании
	ВводНаОсновании.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюСоздатьНаОсновании);
	// Конец ВводНаОсновании

	// МенюОтчеты
	МенюОтчеты.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюОтчеты);
	// Конец МенюОтчеты

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УправлениеЭлементамиФормы();
	
	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ДатаПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Объект.КассовыеОрдера.Очистить();
	
	ОрганизацияПриИзмененииСервер();
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииСервер()
	
	ПараметрыОбособленногоПодразделения = Новый ФиксированнаяСтруктура(Документы.ЛистКассовойКниги.ПараметрыОбособленногоПодразделения(Объект));
	
	УстановитьВидимостьОбособленногоПодразделения();
	ЗаполнитьСписокВыбораОбособленныхПодразделений();
	
КонецПроцедуры
&НаКлиенте
Процедура ПоОбособленномуПодразделениюПриИзменении(Элемент)
	ПоОбособленномуПодразделениюПриИзмененииСервер();
КонецПроцедуры

&НаСервере
Процедура ПоОбособленномуПодразделениюПриИзмененииСервер()
	
	Объект.КассовыеОрдера.Очистить();
	
	Элементы.ОбособленноеПодразделениеОрганизации.Видимость = Объект.ПоОбособленномуПодразделению;
	Если Не Объект.ПоОбособленномуПодразделению Тогда
		Объект.ОбособленноеПодразделениеОрганизации = Справочники.ОбособленныеПодразделенияОрганизаций.ПустаяСсылка();
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбособленноеПодразделениеОрганизацииПриИзменении(Элемент)
	
	Объект.КассовыеОрдера.Очистить();
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДокументы

&НаКлиенте
Процедура ДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "Документ" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Документ) Тогда
		ПоказатьЗначение(, Элемент.ТекущиеДанные.Документ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыПриАктивизацииСтроки(Элемент)
	
	УстановитьПредупреждениеПриРедактировании();
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыПриИзменении(Элемент)
	
	УстановитьПредупреждениеПриРедактировании();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// ВводНаОсновании
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуСоздатьНаОсновании(Команда)
	
	ВводНаОснованииКлиент.ВыполнитьПодключаемуюКомандуСоздатьНаОсновании(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец ВводНаОсновании

// МенюОтчеты
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	МенюОтчетыКлиент.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец МенюОтчеты


&НаКлиенте
Процедура АвтоТест_ЗаполнитьДокументы(Команда) Экспорт

	СтруктураРеквизитов = Новый Структура;
	СтруктураРеквизитов.Вставить("Организация");
	СтруктураРеквизитов.Вставить("Дата");
	СтруктураРеквизитов.Вставить("ВалютаДенежныхСредств");
	Если ПараметрыОбособленногоПодразделения.ИспользованиеОбособленногоПодразделения Тогда
		СтруктураРеквизитов.Вставить("ПоОбособленномуПодразделению");
		Если Объект.ПоОбособленномуПодразделению Тогда
			СтруктураРеквизитов.Вставить("ОбособленноеПодразделениеОрганизации");
		КонецЕсли;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("АвтоТест_ЗаполнитьДокументыЗавершение", ЭтотОбъект);
	ОбщегоНазначенияУТКлиент.ПроверитьВозможностьЗаполненияТабличнойЧасти(
		Оповещение, 
		ЭтаФорма, 
		Объект.КассовыеОрдера, 
		СтруктураРеквизитов,
		Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура АвтоТест_ЗаполнитьДокументыЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	
	ЗаполнитьДокументы();
	
КонецПроцедуры

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
//Конец ИнтеграцияС1СДокументооборотом

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	// Надпись в пустом поле Документ для суммы переоценки
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Документ.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.КассовыеОрдера.Документ");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.DarkGray);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru='<Переоценка валютных денежных средств>';uk='<Переоцінка валютних коштів>'"));
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораОбособленныхПодразделений()
	Если ПараметрыОбособленногоПодразделения.ИспользованиеОбособленногоПодразделения Тогда
		Справочники.ОбособленныеПодразделенияОрганизаций.ОбособленныеПодразделенияОрганизации(Объект.Организация, Элементы.ОбособленноеПодразделениеОрганизации.СписокВыбора);
	Иначе
		Элементы.ОбособленноеПодразделениеОрганизации.СписокВыбора.Очистить();
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура РассчитатьОстатокПоРегистрам()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Кассы.Ссылка КАК Касса
	|ПОМЕСТИТЬ Кассы
	|ИЗ
	|	Справочник.Кассы КАК Кассы
	|ГДЕ
	|	Кассы.Владелец = &Организация
	|	И Кассы.ОбособленноеПодразделениеОрганизации = &ОбособленноеПодразделениеОрганизации
	|	И Кассы.ВалютаДенежныхСредств = &ВалютаДенежныхСредств
	|;
	|////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДенежныеСредстваНаличныеОстатки.СуммаОстаток КАК СуммаОстаток
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваНаличные.Остатки(
	|		&КонецДняГраница,
	|		Организация = &Организация
	|		И Касса В (ВЫБРАТЬ Кассы.Касса ИЗ Кассы)) КАК ДенежныеСредстваНаличныеОстатки
	|;
	|////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(
	|		ВЫБОР КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			ДенежныеСредства.Сумма
	|		КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
	|			-ДенежныеСредства.Сумма
	|		КОНЕЦ
	|	), 0) КАК СуммаИнвентаризации
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваНаличные КАК ДенежныеСредства
	|ГДЕ
	|	ДенежныеСредства.Период МЕЖДУ &НачалоДня И &КонецДня
	|	И Организация = &Организация
	|	И Касса В (ВЫБРАТЬ Кассы.Касса ИЗ Кассы)
	|	И ДенежныеСредства.ХозяйственнаяОперация В
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеИзлишкаПриИнвентаризацииДенежныхСредств),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеНедостачиПриИнвентаризацииДенежныхСредств))
	|");
	
	Запрос.УстановитьПараметр("КонецДняГраница", Новый Граница(КонецДня(Объект.Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("НачалоДня", НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("КонецДня", КонецДня(Объект.Дата));
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	ИспользованиеОбособленногоПодразделения = ПараметрыОбособленногоПодразделения.ИспользованиеОбособленногоПодразделения;
	Если ИспользованиеОбособленногоПодразделения Тогда
		Если Объект.ПоОбособленномуПодразделению Тогда
			Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", Объект.ОбособленноеПодразделениеОрганизации);
		Иначе
			Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", Справочники.ОбособленныеПодразделенияОрганизаций.ПустаяСсылка());
		КонецЕсли;
	Иначе
		Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", Справочники.ОбособленныеПодразделенияОрганизаций.ПустаяСсылка());	
	КонецЕсли;
	Запрос.УстановитьПараметр("ВалютаДенежныхСредств", Объект.ВалютаДенежныхСредств);	
		
	Результат = Запрос.ВыполнитьПакет();
	ВыборкаОстаткаНаНачалоДня = Результат[1].Выбрать();
	ВыборкаОстаткаНаНачалоДня.Следующий();
	ВыборкаСуммыИнвентаризации = Результат[2].Выбрать();
	ВыборкаСуммыИнвентаризации.Следующий();
	
	СуммаКонечныйОстатокПоРегистру = ВыборкаОстаткаНаНачалоДня.СуммаОстаток - ВыборкаСуммыИнвентаризации.СуммаИнвентаризации;
		
КонецПроцедуры

&НаСервере
Процедура УправлениеЭлементамиФормы()
	
	
	Элементы.СуммаКонечныйОстатокПоРегистру.Видимость =
		(Объект.СуммаКонечныйОстаток <> СуммаКонечныйОстатокПоРегистру)
		И Объект.Проведен;
		
	УстановитьВидимостьОбособленногоПодразделения();
	
	Элементы.ОбособленноеПодразделениеОрганизации.КнопкаОткрытия = ЗначениеЗаполнено(Объект.ОбособленноеПодразделениеОрганизации);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокументы()
	
	
	Объект.КассовыеОрдера.Очистить();
	
	ТекстЗапроса = 
	"
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДокументКассоваяКнига.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЛистКассовойКниги КАК ДокументКассоваяКнига
	|ГДЕ
	|	ДокументКассоваяКнига.Ссылка <> &ТекущийДокумент
	|	И ДокументКассоваяКнига.Организация = &Организация
	|	И ДокументКассоваяКнига.ВалютаДенежныхСредств = &ВалютаДенежныхСредств 
	|   И ДокументКассоваяКнига.ОбособленноеПодразделениеОрганизации = &ОбособленноеПодразделениеОрганизации
	|	И ДокументКассоваяКнига.Проведен
	|	И НачалоПериода(ДокументКассоваяКнига.Дата, ДЕНЬ) = &ДатаНач
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ВалютаДенежныхСредств", Объект.ВалютаДенежныхСредств);
	ИспользованиеОбособленногоПодразделения = ПараметрыОбособленногоПодразделения.ИспользованиеОбособленногоПодразделения;
	Если ИспользованиеОбособленногоПодразделения Тогда
		Если Объект.ПоОбособленномуПодразделению Тогда
			Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", Объект.ОбособленноеПодразделениеОрганизации);
		Иначе
			Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", Справочники.ОбособленныеПодразделенияОрганизаций.ПустаяСсылка());
		КонецЕсли;
	Иначе
		Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", Справочники.ОбособленныеПодразделенияОрганизаций.ПустаяСсылка());	
	КонецЕсли;
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Объект.Дата));
	
	ЗаполнятьДокументы = Истина;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='На дату %1 уже существует документ: %2';uk='На дату %1 вже існує документ: %2'"),
			Объект.Дата, Выборка.Ссылка);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Текст,
			, // КлючДанных
			"Объект.Дата");
		ЗаполнятьДокументы = Ложь;
		
	КонецЦикла;

	Если ЗаполнятьДокументы Тогда

		ТекстЗапроса = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДенежныеСредства.Регистратор КАК Документ,
		|	ДенежныеСредства.Регистратор.Номер КАК НомерДокумента,
		|	ВЫБОР КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|		0
		|	КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|		1
		|	КОНЕЦ КАК ЗначениеУпорядочивания,
		|	СУММА(
		|		ВЫБОР КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|			ДенежныеСредства.Сумма
		|		ИНАЧЕ
		|			0
		|		КОНЕЦ
		|	) КАК Приход,
		|	СУММА(
		|		ВЫБОР КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|			ДенежныеСредства.Сумма
		|		ИНАЧЕ
		|			0
		|		КОНЕЦ
		|	) КАК Расход,
		|	ДенежныеСредства.Касса.ВалютаДенежныхСредств КАК Валюта,
		|	ВЫБОР
		|		КОГДА ДенежныеСредства.Регистратор ССЫЛКА Документ.ПриходныйКассовыйОрдер
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ КАК ВидДок,
		|	ДенежныеСредства.Регистратор.НомерОрдера КАК НомерОрдера,
		|	МАКСИМУМ(СтатьиДДС.КорреспондирующийСчет) КАК КорреспондирующийСчет
		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваНаличные КАК ДенежныеСредства
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		Документ.ЛистКассовойКниги.КассовыеОрдера КАК ДокументКассоваяКнига
		|	ПО
		|		ДокументКассоваяКнига.Ссылка <> &Ссылка
		|		И ДокументКассоваяКнига.Ссылка.Проведен
		|		И ДокументКассоваяКнига.Ссылка.Организация = &Организация
	    |   И ДокументКассоваяКнига.Ссылка.ОбособленноеПодразделениеОрганизации = &ОбособленноеПодразделениеОрганизации
		|	И ДокументКассоваяКнига.Ссылка.ВалютаДенежныхСредств = &ВалютаДенежныхСредств
		|		И ДокументКассоваяКнига.Документ = ДенежныеСредства.Регистратор
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДДС
		|	ПО
		|		СтатьиДДС.Ссылка = ДенежныеСредства.СтатьяДвиженияДенежныхСредств
		|
		|ГДЕ
		|	ДенежныеСредства.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ДенежныеСредства.Организация = &Организация
		|	И ДенежныеСредства.Касса.ИспользоватьВКассовойКниге 
	    |   И ДенежныеСредства.Касса.ОбособленноеПодразделениеОрганизации = &ОбособленноеПодразделениеОрганизации
		|	И ДенежныеСредства.Касса.ВалютаДенежныхСредств = &ВалютаДенежныхСредств
		|	И ДокументКассоваяКнига.Документ ЕСТЬ NULL
		|	И Не ДенежныеСредства.Регистратор ССЫЛКА Документ.ВводОстатков
		|	И Не ДенежныеСредства.ХозяйственнаяОперация В
		  |		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПереоценкаДенежныхСредств),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойКассы),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеИзлишкаПриИнвентаризацииДенежныхСредств),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеНедостачиПриИнвентаризацииДенежныхСредств))
		|	
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|		0
		|	КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|		1
		|	КОНЕЦ,
		|	ДенежныеСредства.Касса.ВалютаДенежныхСредств,
		|	ВЫБОР
		|		КОГДА ДенежныеСредства.Регистратор ССЫЛКА Документ.ПриходныйКассовыйОрдер
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ,
		|	ДенежныеСредства.Регистратор.НомерОрдера,
		|	ДенежныеСредства.Регистратор
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДенежныеСредства.Регистратор КАК Документ,
		|	ДенежныеСредства.Регистратор.Номер КАК НомерДокумента,
		|	ВЫБОР КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|		0
		|	КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|		1
		|	КОНЕЦ КАК ЗначениеУпорядочивания,
		|	СУММА(
		|		ВЫБОР КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|			ДенежныеСредства.Сумма
		|		ИНАЧЕ
		|			0
		|		КОНЕЦ
		|	) КАК Приход,
		|	СУММА(
		|		ВЫБОР КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|			ДенежныеСредства.Сумма
		|		ИНАЧЕ
		|			0
		|		КОНЕЦ
		|	) КАК Расход,
		|	ДенежныеСредства.Касса.ВалютаДенежныхСредств КАК Валюта,
		|	ВЫБОР
		|		КОГДА ДенежныеСредства.Регистратор ССЫЛКА Документ.ПриходныйКассовыйОрдер
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ КАК ВидДок,
		|	ДенежныеСредства.Регистратор.НомерОрдера КАК НомерОрдера,
		|	МАКСИМУМ(СтатьиДДС.КорреспондирующийСчет) КАК КорреспондирующийСчет
		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваНаличные КАК ДенежныеСредства
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		Документ.ЛистКассовойКниги.КассовыеОрдера КАК ДокументКассоваяКнига
		|	ПО
		|		ДокументКассоваяКнига.Ссылка <> &Ссылка
		|		И ДокументКассоваяКнига.Ссылка.Проведен
		|		И ДокументКассоваяКнига.Ссылка.Организация = &Организация
	    |   И ДокументКассоваяКнига.Ссылка.ОбособленноеПодразделениеОрганизации = &ОбособленноеПодразделениеОрганизации
		|	И ДокументКассоваяКнига.Ссылка.ВалютаДенежныхСредств = &ВалютаДенежныхСредств
		|		И ДокументКассоваяКнига.Документ = ДенежныеСредства.Регистратор
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДДС
		|	ПО
		|		СтатьиДДС.Ссылка = ДенежныеСредства.СтатьяДвиженияДенежныхСредств
		|
		|ГДЕ
		|	ДенежныеСредства.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ДенежныеСредства.Организация = &Организация
		|	И ДенежныеСредства.Касса.ИспользоватьВКассовойКниге 
	    |   И ДенежныеСредства.Касса.ОбособленноеПодразделениеОрганизации = &ОбособленноеПодразделениеОрганизации
		|	И ДенежныеСредства.Касса.ВалютаДенежныхСредств = &ВалютаДенежныхСредств
		|	И ДокументКассоваяКнига.Документ ЕСТЬ NULL
		|	И Не ДенежныеСредства.Регистратор ССЫЛКА Документ.ВводОстатков
		|	И ДенежныеСредства.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойКассы)
		|	И ВЫРАЗИТЬ(ДенежныеСредства.Регистратор КАК Документ.ПриходныйКассовыйОрдер).КассаОтправитель.ОбособленноеПодразделениеОрганизации <>
		|	 &ОбособленноеПодразделениеОрганизации
		|	
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|		0
		|	КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|		1
		|	КОНЕЦ,
		|	ДенежныеСредства.Касса.ВалютаДенежныхСредств,
		|	ВЫБОР
		|		КОГДА ДенежныеСредства.Регистратор ССЫЛКА Документ.ПриходныйКассовыйОрдер
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ,
		|	ДенежныеСредства.Регистратор.НомерОрдера,
		|	ДенежныеСредства.Регистратор
		|
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДенежныеСредства.Регистратор КАК Документ,
		|	ДенежныеСредства.Регистратор.Номер КАК НомерДокумента,
		|	ВЫБОР КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|		0
		|	КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|		1
		|	КОНЕЦ КАК ЗначениеУпорядочивания,
		|	СУММА(
		|		ВЫБОР КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|			ДенежныеСредства.Сумма
		|		ИНАЧЕ
		|			0
		|		КОНЕЦ
		|	) КАК Приход,
		|	СУММА(
		|		ВЫБОР КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|			ДенежныеСредства.Сумма
		|		ИНАЧЕ
		|			0
		|		КОНЕЦ
		|	) КАК Расход,
		|	ДенежныеСредства.Касса.ВалютаДенежныхСредств КАК Валюта,
		|	ВЫБОР
		|		КОГДА ДенежныеСредства.Регистратор ССЫЛКА Документ.ПриходныйКассовыйОрдер
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ КАК ВидДок,
		|	ДенежныеСредства.Регистратор.НомерОрдера КАК НомерОрдера,
		|	МАКСИМУМ(СтатьиДДС.КорреспондирующийСчет) КАК КорреспондирующийСчет
		|ИЗ
		|	РегистрНакопления.ДенежныеСредстваНаличные КАК ДенежныеСредства
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		Документ.ЛистКассовойКниги.КассовыеОрдера КАК ДокументКассоваяКнига
		|	ПО
		|		ДокументКассоваяКнига.Ссылка <> &Ссылка
		|		И ДокументКассоваяКнига.Ссылка.Проведен
		|		И ДокументКассоваяКнига.Ссылка.Организация = &Организация
	    |   И ДокументКассоваяКнига.Ссылка.ОбособленноеПодразделениеОрганизации = &ОбособленноеПодразделениеОрганизации
		|	И ДокументКассоваяКнига.Ссылка.ВалютаДенежныхСредств = &ВалютаДенежныхСредств
		|		И ДокументКассоваяКнига.Документ = ДенежныеСредства.Регистратор
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДДС
		|	ПО
		|		СтатьиДДС.Ссылка = ДенежныеСредства.СтатьяДвиженияДенежныхСредств
		|
		|ГДЕ
		|	ДенежныеСредства.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ДенежныеСредства.Организация = &Организация
		|	И ДенежныеСредства.Касса.ИспользоватьВКассовойКниге 
	    |   И ДенежныеСредства.Касса.ОбособленноеПодразделениеОрганизации = &ОбособленноеПодразделениеОрганизации
		|	И ДенежныеСредства.Касса.ВалютаДенежныхСредств = &ВалютаДенежныхСредств
		|	И ДокументКассоваяКнига.Документ ЕСТЬ NULL
		|	И Не ДенежныеСредства.Регистратор ССЫЛКА Документ.ВводОстатков
		|	И ДенежныеСредства.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу)
		|	И ВЫРАЗИТЬ(ДенежныеСредства.Регистратор КАК Документ.РасходныйКассовыйОрдер).КассаПолучатель.ОбособленноеПодразделениеОрганизации <>
		|	  &ОбособленноеПодразделениеОрганизации
		|	
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|		0
		|	КОГДА ДенежныеСредства.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|		1
		|	КОНЕЦ,
		|	ДенежныеСредства.Касса.ВалютаДенежныхСредств,
		|	ВЫБОР
		|		КОГДА ДенежныеСредства.Регистратор ССЫЛКА Документ.ПриходныйКассовыйОрдер
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ,
		|	ДенежныеСредства.Регистратор.НомерОрдера,
		|	ДенежныеСредства.Регистратор
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВидДок,
		|	ДенежныеСредства.Регистратор.НомерОрдера
		|";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(Объект.Дата));
		Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Объект.Дата));
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
		Запрос.УстановитьПараметр("ВалютаДенежныхСредств", Объект.ВалютаДенежныхСредств);
		Если ИспользованиеОбособленногоПодразделения Тогда
			Если Объект.ПоОбособленномуПодразделению Тогда
				Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", Объект.ОбособленноеПодразделениеОрганизации);
			Иначе
				Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", Справочники.ОбособленныеПодразделенияОрганизаций.ПустаяСсылка());
			КонецЕсли;
		Иначе
			Запрос.УстановитьПараметр("ОбособленноеПодразделениеОрганизации", Справочники.ОбособленныеПодразделенияОрганизаций.ПустаяСсылка());	
		КонецЕсли;
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда
			
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='На дату %1  нет документов для заполнения листа кассовой книги';uk='На дату %1 немає документів для заповнення сторінки касової книги'"),
				Объект.Дата, Выборка.Ссылка);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				, // КлючДанных
				"Дата");
		Иначе
			ТаблицаДляСортировки = Новый ТаблицаЗначений;
			ТаблицаДляСортировки = Объект.КассовыеОрдера.Выгрузить().СкопироватьКолонки();
			ТаблицаДляСортировки.Колонки.Добавить("ЧислоНомерОрдера");
			ТаблицаДляСортировки.Колонки.Добавить("ВидДок");
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				Строка = ТаблицаДляСортировки.Добавить();
				ЗаполнитьЗначенияСвойств(Строка, Выборка);
				Строка.ЧислоНомерОрдера = СформироватьНомерОрдера(Выборка.НомерОрдера);
			КонецЦикла;
			ТаблицаДляСортировки.Индексы.Добавить("ВидДок, ЧислоНомерОрдера");
			ТаблицаДляСортировки.Сортировать("ВидДок, ЧислоНомерОрдера");
			Объект.КассовыеОрдера.Загрузить(ТаблицаДляСортировки);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПредупреждениеПриРедактировании()
	
	СтрокаТаблицы = Элементы.КассовыеОрдера.ТекущиеДанные;
	Если СтрокаТаблицы <> Неопределено Тогда
		Если ЗначениеЗаполнено(СтрокаТаблицы.Документ) Тогда
			Если ТипЗнч(СтрокаТаблицы.Документ) = Тип("ДокументСсылка.ПриходныйКассовыйОрдер") Тогда
				Элементы.Приход.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.НеОтображать;
				Элементы.Расход.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Отображать;
			Иначе
				Элементы.Приход.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Отображать;
				Элементы.Расход.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.НеОтображать;
			КонецЕсли;
			Элементы.НомерОрдера.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Отображать;
		Иначе
			Элементы.Приход.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Отображать;
			Элементы.Расход.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.Отображать;
			Элементы.НомерОрдера.ОтображениеПредупрежденияПриРедактировании = ОтображениеПредупрежденияПриРедактировании.НеОтображать;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииСервер()
	
	
КонецПроцедуры

Функция СформироватьНомерОрдера(Строка)
	СтрокаНули = "0000000000";
	Возврат Сред(СтрокаНули, 1, 10 - СтрДлина(Строка)) + Строка;
КонецФункции

&НаСервере
Процедура УстановитьВидимостьОбособленногоПодразделения()
	
	Элементы.ГруппаОбособленноеПодразделение.Видимость  = ПараметрыОбособленногоПодразделения.ИспользованиеОбособленногоПодразделения;
	Элементы.ОбособленноеПодразделениеОрганизации.Видимость = Объект.ПоОбособленномуПодразделению;
	Если Не ПараметрыОбособленногоПодразделения.ИспользованиеОбособленногоПодразделения Тогда
		Объект.ПоОбособленномуПодразделению = Ложь;
		Объект.ОбособленноеПодразделениеОрганизации = Справочники.ОбособленныеПодразделенияОрганизаций.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
