#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
// 		ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
// 		МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
// 		ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
// 		КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
// 		ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М11") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"М11",
			НСтр("ru='Требование-накладная (М-11)';uk='Вимога-накладна (М-11)'"),
			СформироватьПечатнуюФормуМ11(
				СтруктураТипов,
				ОбъектыПечати,
				ПараметрыПечати,
				Неопределено));
		
	КонецЕсли;
	
КонецПроцедуры // Печать()

// Функция формирует печатную форму "М-11"
//
Функция СформироватьПечатнуюФормуМ11(СтруктураТипов, ОбъектыПечати, ПараметрыПечати, КомплектыПечати) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_М11";
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыМ11(
			ПараметрыПечати,
			СтруктураОбъектов.Значение);
		
		ЗаполнитьТабличныйДокументМ11(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, КомплектыПечати);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции // СформироватьПечатнуюФормуСчетНаОплату()

// Процедура заполняет табличный документ "М-11"
//
Процедура ЗаполнитьТабличныйДокументМ11(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, КомплектыПечати)
	
	// Настроим параметры печати до заполнения для проверки вывода
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	ШаблонОшибкиТовары = НСтр("ru='В документе %1 отсутствуют товары. Печать М-11 не требуется';uk='У документі %1 відсутні товари. Друк М-11 не потрібний'");
	
	ТоварКод = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если Не ЗначениеЗаполнено(ТоварКод) Тогда
		ТоварКод = "Код";
	КонецЕсли;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьМ11.ПФ_MXL_UK_М11");
	
	ПервыйДокумент = Истина;
	ВыборкаДокументы = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоТабличнымЧастям = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	СтруктураОтбора = Новый Структура("Ссылка");
	
	Пока ВыборкаДокументы.Следующий() Цикл
		
		// Для печати комплектов
		Если КомплектыПечати <> Неопределено И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено Тогда
			КомплектПечатиПоСсылке = КомплектыПечати.Найти(ВыборкаДокументы.Ссылка,"Ссылка");
			Если КомплектПечатиПоСсылке = Неопределено Тогда
				КомплектПечатиПоСсылке = КомплектыПечати[0];
			КонецЕсли;
			Если КомплектПечатиПоСсылке.Экземпляров = 0 Тогда
				Продолжить
			КонецЕсли;
		КонецЕсли;
		
		СтруктураОтбора.Ссылка = ВыборкаДокументы.Ссылка;
		ВыборкаПоТабличнымЧастям.Сбросить();
		Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(СтруктураОтбора) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ШаблонОшибкиТовары,
					ВыборкаДокументы.Ссылка
				),
				ВыборкаДокументы.Ссылка);
			Продолжить;
		КонецЕсли;
		
		ВыборкаПоСтрокам = ВыборкаПоТабличнымЧастям.Выбрать();
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		//Вывод шапки.
		Область = Макет.ПолучитьОбласть("Шапка");
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, Область, ВыборкаДокументы.Ссылка);
		Область.Параметры.Заполнить(ВыборкаДокументы);
		
		СведенияОбОрганизации = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ВыборкаДокументы.Организация, ВыборкаДокументы.ДатаДокумента); 
		Область.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,");
		Область.Параметры.КодПоЕДРПОУ              = СведенияОбОрганизации.КодПоЕДРПОУ;			
		
		Область.Параметры.НомерДокумента           = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ВыборкаДокументы.Номер, Ложь, Истина);			
		
		Если ЗначениеЗаполнено(ВыборкаДокументы.Заказ) Тогда
			Область.Параметры.ПредставлениеОснования   = Локализация.ПолучитьЛокализованноеПредставление(ВыборкаДокументы.Заказ, "uk");			
		КонецЕсли;
		Область.Параметры.ПредставлениеПолучателя  = ВыборкаДокументы.Подразделение;
		
		ТабличныйДокумент.Вывести(Область);
		
		// Создаем массив для проверки вывода
		МассивВыводимыхОбластей = Новый Массив;
		
		КоличествоСтрок = ВыборкаПоСтрокам.Количество();
		
        ОбластьШапкаСтрок  = Макет.ПолучитьОбласть("ШапкаСтрок");
        ОбластьПодвалСтрок = Макет.ПолучитьОбласть("ПодвалСтрок");
		ОбластьПодписи     = Макет.ПолучитьОбласть("Подписи");

		НомерСтраницы = 1;
		НомерСтроки = 0;
		
		Сумма = 0;
		
		Пока ВыборкаПоСтрокам.Следующий() Цикл
			
			Область = Макет.ПолучитьОбласть("Строка");
			Область.Параметры.Заполнить(ВыборкаПоСтрокам);
			
			Если ТоварКод = "Артикул" Тогда
				Область.Параметры.НоменклатурныйНомер = ВыборкаПоСтрокам.НоменклатурныйНомерАртикул;
			Иначе
				Область.Параметры.НоменклатурныйНомер = ВыборкаПоСтрокам.НоменклатурныйНомерКод;
			КонецЕсли;
			
			Область.Параметры.МатериалНаименование = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				СокрЛП(ВыборкаПоСтрокам.НоменклатураНаименование),
				СокрЛП(ВыборкаПоСтрокам.Характеристика));
				
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(Область);
			МассивВыводимыхОбластей.Добавить(Область); // вместо ОбластьПодвалСтрок по высоте всегда меньше Область
			Если НомерСтроки = КоличествоСтрок И НомерСтраницы > 1 Тогда
				МассивВыводимыхОбластей.Добавить(ОбластьПодписи);
			КонецЕсли;
			Если Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
				НомерСтраницы = НомерСтраницы + 1;
				ТабличныйДокумент.Вывести(ОбластьПодвалСтрок);
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьШапкаСтрок);
			КонецЕсли;
		
			НомерСтроки = НомерСтроки +1;
			Сумма = Сумма + ВыборкаПоСтрокам.Сумма;
				
			ТабличныйДокумент.Вывести(Область);
			
		КонецЦикла;
		
		// Вывод подвала.
		ТабличныйДокумент.Вывести(ОбластьПодвалСтрок);
		
		Если НомерСтраницы = 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();				
		КонецЕсли;
		
		// Вывод подписей
		Если ЗначениеЗаполнено(КоличествоСтрок) Тогда
        	ОбластьПодписи.Параметры.КоличествоНаименований = НРег(ЧислоПрописью(КоличествоСтрок, "Л=uk; НП=Истина", "найменування, найменування, найменувань, с, , , , , 0"));
		КонецЕсли;
		Если ЗначениеЗаполнено(Сумма) Тогда
        	ОбластьПодписи.Параметры.СуммаПрописью = НРег(РаботаСКурсамиВалют.СформироватьСуммуПрописью(Сумма, ВыборкаДокументы.УчетныйВидЦеныВалютаЦены, , "uk"));
		КонецЕсли;		
		ОбластьПодписи.Параметры.РуководительДолжностьФИО  = СокрЛП(СокрП(ВыборкаДокументы.ДолжностьРуководителяОтправителя) + " " + ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ВыборкаДокументы.РуководительОтправителя));
		ОбластьПодписи.Параметры.ГлавныйБухгалтерФИО       = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ВыборкаДокументы.ГлавныйБухгалтерОтправителя);
		ОбластьПодписи.Параметры.ОтветственныйДолжностьФИО = СокрЛП(СокрП(ВыборкаДокументы.ДолжностьКладовщикаОтправителя) + " " + ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ВыборкаДокументы.КладовщикОтправитель));
		ТабличныйДокумент.Вывести(ОбластьПодписи);
		
		// Выведем нужное количество экземпляров (при печати комплектов)
		Если КомплектыПечати <> Неопределено И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено И КомплектПечатиПоСсылке.Экземпляров > 1 Тогда
			ОбластьКопирования = ТабличныйДокумент.ПолучитьОбласть(НомерСтрокиНачало,,ТабличныйДокумент.ВысотаТаблицы);
			Для Итератор = 2 По КомплектПечатиПоСсылке.Экземпляров Цикл
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьКопирования);
			КонецЦикла;
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьТабличныйДокументМ11()

#КонецОбласти

#КонецОбласти

#КонецЕсли
