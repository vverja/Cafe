#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - УправляемаяФорма - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - Структура - см. возвращаемое значение ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	Настройки.События.ПриСозданииНаСервере = Истина;
	Настройки.События.ПередЗагрузкойВариантаНаСервере = Ложь;
	Настройки.События.ПриЗагрузкеПользовательскихНастроекНаСервере = Истина;
КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   Форма - УправляемаяФорма - Форма отчета.
//   Отказ - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Передается из параметров обработчика "как есть".
//
// См. также:
//   "УправляемаяФорма.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	КомпоновщикНастроекФормы = ЭтаФорма.Отчет.КомпоновщикНастроек;
	Параметры = ЭтаФорма.Параметры;
	
	Если Параметры.Свойство("Договор") И ЗначениеЗаполнено(Параметры.Договор) Тогда
		
		СоставПараметров = "
		|ОграничиватьСуммуЗадолженности,
		|ДопустимаяСуммаЗадолженности,
		|ЗапрещаетсяПросроченнаяЗадолженность";
		
		ДанныеДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.Договор, СоставПараметров);
		
		ПараметрДанных = КомпоновщикНастроекФормы.ФиксированныеНастройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДопустимаяСуммаЗадолженности"));
		ПараметрДанных.Использование = Истина;
		ПараметрДанных.Значение = ДанныеДоговора.ДопустимаяСуммаЗадолженности;
		
		Если ДанныеДоговора.ОграничиватьСуммуЗадолженности И ДанныеДоговора.ЗапрещаетсяПросроченнаяЗадолженность Тогда
			КлючТекущегоВарианта = "ЗапретОтгрузкиПоКредитуИПросрочке";
		ИначеЕсли ДанныеДоговора.ОграничиватьСуммуЗадолженности Тогда
			КлючТекущегоВарианта = "ЗапретОтгрузкиПоКредиту";
		ИначеЕсли ДанныеДоговора.ЗапрещаетсяПросроченнаяЗадолженность Тогда
			КлючТекущегоВарианта = "ЗапретОтгрузкиПоПросрочке";
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрДанных = КомпоновщикНастроекФормы.ФиксированныеНастройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("СуммаПродажи"));
	ПараметрДанных.Использование = Истина;
	Если Параметры.Свойство("ДанныеПоСуммеПродажи") И Параметры.ДанныеПоСуммеПродажи.Свойство("СуммаВзаиморасчетов") Тогда
		ПараметрДанных.Значение = Параметры.ДанныеПоСуммеПродажи.СуммаВзаиморасчетов;
	ИначеЕсли Параметры.Свойство("ДанныеПоСуммеПродажи") Тогда
		ПараметрДанных.Значение = РассчитатьСуммуВзаиморасчетов(Параметры.ДанныеПоСуммеПродажи);
	КонецЕсли;
	
	ПараметрДанных = КомпоновщикНастроекФормы.ФиксированныеНастройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДатаОтчета"));
	ПараметрДанных.Использование = Истина;
	Если Параметры.Свойство("ДанныеПоСуммеПродажи") И Параметры.ДанныеПоСуммеПродажи.Свойство("Дата") Тогда
		ПараметрДанных.Значение = ?(Параметры.ДанныеПоСуммеПродажи.Дата > ТекущаяДата(), КонецДня(Параметры.ДанныеПоСуммеПродажи.Дата), КонецДня(ТекущаяДата()));
	Иначе
		ПараметрДанных.Значение = КонецДня(ТекущаяДата());
	КонецЕсли;
	
КонецПроцедуры

// Вызывается в одноименном обработчике формы отчета после выполнения кода формы.
//
// Подробнее - см. ОтчетыПереопределяемый.ПриЗагрузкеПользовательскихНастроекНаСервере
//
Процедура ПриЗагрузкеПользовательскихНастроекНаСервере(ЭтаФорма, НовыеПользовательскиеНастройкиКД) Экспорт
	
	Отчет = ЭтаФорма.Отчет;
	КомпоновщикНастроекФормы = ЭтаФорма.Отчет.КомпоновщикНастроек;
	
	ПартнерыИКонтрагенты.УдалитьЭлементИзНастроекОтборовОтчета(Отчет.КомпоновщикНастроек, "Контрагент");
	
	НовыеПользовательскиеНастройкиКД = КомпоновщикНастроекФормы.ПользовательскиеНастройки;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция РассчитатьСуммуВзаиморасчетов(СтруктураПараметров)
	
	СтруктураПараметров.Вставить("СуммаВзаиморасчетов");
	ВзаиморасчетыСервер.ЗаполнитьСуммуВзаиморасчетов(СтруктураПараметров);
	Возврат СтруктураПараметров.СуммаВзаиморасчетов;
	
КонецФункции
#КонецОбласти

#КонецЕсли