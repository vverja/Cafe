#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт


	Документы.ПриходныйОрдерНаТовары.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);

	Документы.УстановкаЦенНоменклатуры.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);

	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);

	Обработки.СправочноеРазмещениеНоменклатуры.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	
	Документы.ПоручениеЭкспедитору.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);

КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.ПрочееОприходованиеТоваров) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ПрочееОприходованиеТоваров.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.ПрочееОприходованиеТоваров);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьПрочееОприходованиеТоваров";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуМатериалыВЭксплуатации(КомандыОтчетов);

КонецПроцедуры


// Заполняет массивы реквизитов, зависимых от хозяйственной операции документа.
//
// Параметры:
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Выбранная хозяйственная операция
//	МассивВсехРеквизитов - Массив - Массив всех имен реквизитов, зависимых от хозяйственной операции
//	МассивРеквизитовОперации - Массив - Массив имен реквизитов, используемых в выбранной хозяйственной операции
//
Процедура ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(ХозяйственнаяОперация, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("ВидЦены");
	МассивВсехРеквизитов.Добавить("Товары.Цена");
	МассивВсехРеквизитов.Добавить("Товары.Сумма");
	МассивВсехРеквизитов.Добавить("Товары.СтатьяРасходов");
	МассивВсехРеквизитов.Добавить("Товары.АналитикаРасходов");
	МассивВсехРеквизитов.Добавить("Товары.ФизическоеЛицо");
	МассивВсехРеквизитов.Добавить("Товары.ПартияТМЦВЭксплуатации");
	МассивВсехРеквизитов.Добавить("Товары.СписаниеНаРасходы");
	МассивВсехРеквизитов.Добавить("Товары.СтатьяДоходов");
	МассивВсехРеквизитов.Добавить("Товары.АналитикаДоходов");
	МассивВсехРеквизитов.Добавить("Товары.Назначение");
	МассивВсехРеквизитов.Добавить("Товары.НомерГТД");
	
	МассивРеквизитовОперации = Новый Массив;
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратИзЭксплуатации Тогда
		МассивРеквизитовОперации.Добавить("ВидЦены");
		МассивРеквизитовОперации.Добавить("Товары.Цена");
		МассивРеквизитовОперации.Добавить("Товары.Сумма");
		МассивРеквизитовОперации.Добавить("Товары.СтатьяДоходов");
		МассивРеквизитовОперации.Добавить("Товары.АналитикаДоходов");
		МассивРеквизитовОперации.Добавить("Товары.ФизическоеЛицо");
		МассивРеквизитовОперации.Добавить("Товары.ПартияТМЦВЭксплуатации");
		МассивРеквизитовОперации.Добавить("Товары.НомерГТД");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеИзПроизводства Тогда
		МассивРеквизитовОперации.Добавить("ВидЦены");
		МассивРеквизитовОперации.Добавить("Товары.Цена");
		МассивРеквизитовОперации.Добавить("Товары.Сумма");
		МассивРеквизитовОперации.Добавить("Товары.СтатьяРасходов");
		МассивРеквизитовОперации.Добавить("Товары.АналитикаРасходов");
		МассивРеквизитовОперации.Добавить("Товары.Назначение");
		МассивРеквизитовОперации.Добавить("Товары.НомерГТД");
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторноСписанияНаРасходы Тогда
		МассивРеквизитовОперации.Добавить("Товары.АналитикаРасходов");
		МассивРеквизитовОперации.Добавить("Товары.СтатьяРасходов");
		МассивРеквизитовОперации.Добавить("Товары.СписаниеНаРасходы");
	КонецЕсли;
	
КонецПроцедуры

// Заполняет массивы элементов формы, зависимых от хозяйственной операции документа.
//
// Параметры:
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Выбранная хозяйственная операция
//	МассивВсехЭлементов - Массив - Массив всех элементов формы, зависимых от хозяйственной операции
//	МассивЭлементовОперации - Массив - Массив имен элементов формы, используемых в выбранной хозяйственной операции
//
Процедура ЗаполнитьИменаЭлементовПоХозяйственнойОперации(ХозяйственнаяОперация, МассивВсехЭлементов, МассивЭлементовОперации) Экспорт
	
	МассивВсехЭлементов = Новый Массив;
	МассивВсехЭлементов.Добавить("ТоварыПерезаполнитьПоПриемке");
	МассивВсехЭлементов.Добавить("ТоварыЗаполнитьЦеныПоВидуЦен");
	МассивВсехЭлементов.Добавить("ТоварыЗаполнитьСтатьиРасходов");
	МассивВсехЭлементов.Добавить("ТоварыЗаполнитьСтатьиРасходовВыделенныхСтрок");
	МассивВсехЭлементов.Добавить("ТоварыИзменитьКачество");
	МассивВсехЭлементов.Добавить("ТоварыПодобратьПоОстаткамВПодразделении");
	МассивВсехЭлементов.Добавить("ТоварыПодобратьТМЦВЭксплуатации");
	МассивВсехЭлементов.Добавить("ТоварыДобавитьТоварыИзДокументовСписания");
	
	МассивЭлементовОперации = Новый Массив;
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратИзЭксплуатации Тогда
		МассивЭлементовОперации.Добавить("ТоварыПерезаполнитьПоПриемке");
		МассивЭлементовОперации.Добавить("ТоварыЗаполнитьЦеныПоВидуЦен");
		МассивЭлементовОперации.Добавить("ТоварыИзменитьКачество");
		МассивЭлементовОперации.Добавить("ТоварыПодобратьТМЦВЭксплуатации");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеИзПроизводства Тогда
		МассивЭлементовОперации.Добавить("ТоварыПерезаполнитьПоПриемке");
		МассивЭлементовОперации.Добавить("ТоварыЗаполнитьЦеныПоВидуЦен");
		МассивЭлементовОперации.Добавить("ТоварыЗаполнитьСтатьиРасходов");
		МассивЭлементовОперации.Добавить("ТоварыЗаполнитьСтатьиРасходовВыделенныхСтрок");
		МассивЭлементовОперации.Добавить("ТоварыИзменитьКачество");
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СторноСписанияНаРасходы Тогда
		МассивЭлементовОперации.Добавить("ТоварыДобавитьТоварыИзДокументовСписания");
		МассивЭлементовОперации.Добавить("ТоварыЗаполнитьСтатьиРасходов");
		МассивЭлементовОперации.Добавить("ТоварыЗаполнитьСтатьиРасходовВыделенныхСтрок");
	КонецЕсли;
	
	
КонецПроцедуры

// Возвращает текст запроса для получениях доступных назначений
//	Параметры:
//		ПараметрыФормированияЗапроса - Структура - параметры для формирования текстов запросов
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаДоступныхНазначений(ПараметрыФормированияЗапроса) Экспорт
	
	Возврат Справочники.Назначения.ТекстЗапросаНазначенийРасширенный();
	
КонецФункции

#Область Серии

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад,Подразделение,Статус,Дата,ХозяйственнаяОперация";
	
	Возврат ИменаРеквизитов;
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение
//			Тип Структура
//				Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ПрочееОприходованиеТоваров";
	
	ПараметрыСерийПолучатель = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Склад, Ложь);
	
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры = ПараметрыСерийПолучатель.ИспользоватьСерииНоменклатуры
															И (Не СкладыСервер.ИспользоватьОрдернуюСхемуПриПоступлении(Объект.Склад, Объект.Дата))
														ИЛИ ПараметрыСерийПолучатель.УчитыватьСебестоимостьПоСериям;

	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийПолучатель.УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаПоПрочемуОприходованию);
	
	ПараметрыУказанияСерий.ИменаПолейДляОпределенияРаспоряжения.Добавить("Ссылка");
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Назначение");
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("НазначениеОтправителя");
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;
	ПараметрыУказанияСерий.Дата = Объект.Дата;
	
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает значение распоряжения на поступление или отгрузку.
//
//Параметры:
//	ЗначенияПолейДляОпределенияРаспоряжения - Структура - состав полей определяется значением
//		поля ИменаПолейДляОпределенияРаспоряжения параметров указания серий этого документа
//
// Возвращаемое значение:
//	ДокументСсылка.
//
Функция РаспоряжениеНаВыполнениеСкладскойОперации(ЗначенияПолейДляОпределенияРаспоряжения) Экспорт
	Возврат ЗначенияПолейДляОпределенияРаспоряжения.Ссылка;	
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Серия,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|					ТОГДА ВЫБОР
	|							КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 14
	|							ИНАЧЕ 13
	|						КОНЕЦ
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|					ТОГДА ВЫБОР
	|							КОГДА НЕ Склады.ИспользоватьОрдернуюСхемуПриПоступлении
	|								ИЛИ &Дата < Склады.ДатаНачалаОрдернойСхемыПриПоступлении
	|								ТОГДА ВЫБОР
	|										КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|												И ТоварыДляЗапроса.Количество > 0
	|											ТОГДА 10
	|										ИНАЧЕ 9
	|									КОНЕЦ
	|							ИНАЧЕ 0
	|						КОНЕЦ
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|					ТОГДА ВЫБОР
	|							КОГДА НЕ Склады.ИспользоватьОрдернуюСхемуПриПоступлении
	|								ИЛИ &Дата < Склады.ДатаНачалаОрдернойСхемыПриПоступлении
	|								ТОГДА ВЫБОР
	|										КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|												И ТоварыДляЗапроса.Количество > 0
	|											ТОГДА 8
	|										ИНАЧЕ 7
	|									КОНЕЦ
	|							ИНАЧЕ 0
	|						КОНЕЦ
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке
	|						И (НЕ Склады.ИспользоватьОрдернуюСхемуПриПоступлении
	|							ИЛИ &Дата < Склады.ДатаНачалаОрдернойСхемыПриПоступлении)
	|						И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеПоПрочемуОприходованию
	|					ТОГДА ВЫБОР
	|							КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|								ТОГДА ВЫБОР
	|										КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|												И ТоварыДляЗапроса.Количество > 0
	|											ТОГДА 4
	|										ИНАЧЕ 3
	|									КОНЕЦ
	|							ИНАЧЕ ВЫБОР
	|									КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|											И ТоварыДляЗапроса.Количество > 0
	|										ТОГДА 2
	|									ИНАЧЕ 1
	|								КОНЕЦ
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|				ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|			ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти


#Область Прочее

// Устанавливает условное оформление типа документа в динамическом списке по хозяйственной операции документа
//
// Параметры:
// 		Список - ДинамическийСписок - Динамической список формы
//
Функция УстановитьУсловноеОформлениеСписка(Список) Экспорт
	
	ОформляемоеПоле = "Тип";
	
	// Возврат из эксплуатации
	
	Элемент = Список.КомпоновщикНастроек.ФиксированныеНастройки.УсловноеОформление.Элементы.Добавить();
	Элемент.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ОформляемоеПоле);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ХозяйственнаяОперация");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ХозяйственныеОперации.ВозвратИзЭксплуатации;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Тип");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Тип("ДокументСсылка.ПрочееОприходованиеТоваров");
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru='Возврат из эксплуатации';uk='Повернення з експлуатації'"));
	
	// Прочее поступление товаров
	
	Элемент = Список.КомпоновщикНастроек.ФиксированныеНастройки.УсловноеОформление.Элементы.Добавить();
	Элемент.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ОформляемоеПоле);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ХозяйственнаяОперация");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ХозяйственныеОперации.ПрочееПоступлениеТоваров;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Тип");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Тип("ДокументСсылка.ПрочееОприходованиеТоваров");
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru='Прочее поступление товаров';uk='Інше надходження товарів'"));
	
	// Сторно списания на расходы
	
	Элемент = Список.КомпоновщикНастроек.ФиксированныеНастройки.УсловноеОформление.Элементы.Добавить();
	Элемент.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ОформляемоеПоле);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ХозяйственнаяОперация");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.ХозяйственныеОперации.СторноСписанияНаРасходы;
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Тип");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Тип("ДокументСсылка.ПрочееОприходованиеТоваров");
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru='Сторно списания на расходы';uk='Сторно списання на витрати'"));
	
	
КонецФункции

#КонецОбласти

// Возвращает текст запроса для записи данных в регистр сведений ДанныеВнутреннихДокументов
//
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаДанныеВнутреннихДокументов() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер,
	|	Документ.Дата,
	|	Документ.Организация,
	|	Документ.Склад,
	|	Документ.Подразделение,
	|	Документ.Ответственный,
	|	Документ.Комментарий,
	|	"""" КАК Дополнительно,
	|	Документ.ХозяйственнаяОперация,
	|	"""" КАК Статус,
	|	Документ.Проведен,
	|	Документ.ПометкаУдаления
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров КАК Документ
	|ГДЕ
	|	Документ.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("Ссылка");
	Поля.Добавить("Номер");
	Поля.Добавить("Дата");
	Поля.Добавить("ХозяйственнаяОперация");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Данные.ХозяйственнаяОперация) Тогда
		СтандартнаяОбработка = Ложь;
		Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='%1 %2 от %3';uk='%1 %2 від %3'"),
			Данные.ХозяйственнаяОперация,
			Данные.Номер,
			Данные.Дата);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)

	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                КАК Ссылка,
	|	ДанныеДокумента.Дата                  КАК Период,
	|	ДанныеДокумента.Организация           КАК Организация,
	|	ДанныеДокумента.Подразделение         КАК Подразделение,
	|	ДанныеДокумента.НалоговоеНазначение   КАК НалоговоеНазначение,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Склад                 КАК Склад,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|				И ДанныеДокумента.Дата >= ДанныеДокумента.Склад.ДатаНачалаОрдернойСхемыПриПоступлении
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                 КАК ОрдернаяСхемаПриПоступлении
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Реквизиты);
	
	Запрос.УстановитьПараметр("Период",										Реквизиты.Период);
	Запрос.УстановитьПараметр("Склад",										Реквизиты.Склад);
	Запрос.УстановитьПараметр("ОрдернаяСхемаПриПоступлении",				Реквизиты.ОрдернаяСхемаПриПоступлении);
	Запрос.УстановитьПараметр("Организация",								Реквизиты.Организация);
	Запрос.УстановитьПараметр("Подразделение",								Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",						Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("Валюта",										Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",				Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов", ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("ИспользоватьУчетПрочихДоходовРасходов", ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов")); 
	Запрос.УстановитьПараметр("ИспользоватьПартионныйУчет",					ПолучитьФункциональнуюОпцию("ИспользоватьПартионныйУчет"));
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Запрос.УстановитьПараметр("ПустаяСерия", Справочники.СерииНоменклатуры.ПустаяСсылка());
	Запрос.УстановитьПараметр("НалоговоеНазначение",						Реквизиты.НалоговоеНазначение);
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаКоэффициентПересчетаВВалютуРегл(Запрос)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуРегл") Тогда
		Возврат;
	КонецЕсли;
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
		Константы.ВалютаУправленческогоУчета.Получить(),
		Неопределено,
		Запрос.Параметры.Период);
	
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаКорВидЗапасов(Запрос)
	
	Если Запрос.Параметры.Свойство("КорВидЗапасов") Тогда
		Возврат;
	КонецЕсли;
	
	КорВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
										Запрос.Параметры.Организация, 
										Запрос.Параметры.ХозяйственнаяОперация, 
										Неопределено, 
										Запрос.Параметры.НалоговоеНазначение
										);
	
	Запрос.УстановитьПараметр("КорВидЗапасов", КорВидЗапасов);
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаКорВидЗапасовСписания(Запрос)
	
	Если Запрос.Параметры.Свойство("КорВидЗапасовСписания") Тогда
		Возврат;
	КонецЕсли;
	
	КорВидЗапасовСписания = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
										Запрос.Параметры.Организация, 
										Перечисления.ХозяйственныеОперации.СписаниеТоваровПоТребованию, 
										Неопределено, 
										Запрос.Параметры.НалоговоеНазначение
										);
	
	Запрос.УстановитьПараметр("КорВидЗапасовСписания", КорВидЗапасовСписания);
	
КонецПроцедуры

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	// Создание запроса инициализации движений и заполенение его параметров.
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	// Формирование текста запроса.
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОформлениюПоступления(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКПоступлению(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияНоменклатураДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТМЦВЭксплуатации(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры);
	
	// Исполнение запроса и выгрузка полученных таблиц для движений.
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиНоменклатуры(Реквизиты)

	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таб.Серия,
	|	Таб.Склад,
	|	Таб.Номенклатура,
	|	Таб.Характеристика
	|ИЗ (
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Серия КАК Серия,
	|		&Подразделение КАК Склад,
	|		ТаблицаТовары.Номенклатура КАК Номенклатура,
	|		ТаблицаТовары.Характеристика КАК Характеристика
	|	ИЗ
	|		Документ.ПрочееОприходованиеТоваров.Товары КАК ТаблицаТовары
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			  ТаблицаТовары.Номенклатура = Аналитика.Номенклатура
	|			И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|			И ТаблицаТовары.Серия = Аналитика.Серия
	|			И &Подразделение = Аналитика.Склад
	|
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И Аналитика.Номенклатура ЕСТЬ NULL
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		&ПустаяСерия КАК Серия,
	|		&Подразделение КАК Склад,
	|		ТаблицаТовары.Номенклатура КАК Номенклатура,
	|		ТаблицаТовары.Характеристика КАК Характеристика
	|	ИЗ
	|		Документ.ПрочееОприходованиеТоваров.Товары КАК ТаблицаТовары
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			ТаблицаТовары.Номенклатура = Аналитика.Номенклатура
	|			И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|			И &ПустаяСерия = Аналитика.Серия
	|			И &Подразделение = Аналитика.Склад
	|
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И Аналитика.Номенклатура ЕСТЬ NULL
	|	) КАК Таб");
	
	Запрос.УстановитьПараметр("Ссылка",			Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Подразделение",	Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ПустаяСерия", Справочники.СерииНоменклатуры.ПустаяСсылка());
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
КонецПроцедуры

Функция ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТовары";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка	 					КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки	 				КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура	 				КАК Номенклатура,
	|	ТаблицаТовары.Характеристика 				КАК Характеристика,
	|	ТаблицаТовары.Назначение					КАК Назначение,
	|	ТаблицаТовары.Серия			 				КАК Серия,
	|	ТаблицаТовары.ВидЗапасов	 				КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД	 					КАК НомерГТД,
	|	&НалоговоеНазначение						КАК ЦелевоеНалоговоеНазначение,
	|	ТаблицаТовары.АналитикаУчетаПартий			КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.СтатьяРасходов				КАК СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов 			КАК АналитикаРасходов,
	|	ТаблицаТовары.СтатьяДоходов					КАК СтатьяДоходов,
	|	ТаблицаТовары.АналитикаДоходов 				КАК АналитикаДоходов,
	|	ТаблицаТовары.Количество	 				КАК Количество,
	|	ТаблицаТовары.Сумма			 				КАК Сумма,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры 	КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.СписаниеНаРасходы				КАК СписаниеНаРасходы,
	|	&Склад						 				КАК Склад
	|ПОМЕСТИТЬ ВтТовары
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаТовары";
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка	 				 КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки                КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура               КАК Номенклатура,
	|	ТаблицаТовары.Характеристика             КАК Характеристика,
	|	ТаблицаТовары.Назначение                 КАК Назначение,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	КорАналитика.КлючАналитики               КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.Серия			 			 КАК Серия,
	|	ТаблицаТовары.НомерГТД					 КАК НомерГТД,
	|	ТаблицаТовары.ЦелевоеНалоговоеНазначение КАК ЦелевоеНалоговоеНазначение,
	|	ТаблицаТовары.ВидЗапасов	 			 КАК ВидЗапасов,
	|	ТаблицаТовары.АналитикаУчетаПартий		 КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.СтатьяРасходов			 КАК СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов 		 КАК АналитикаРасходов,
	|	ТаблицаТовары.СтатьяДоходов				 КАК СтатьяДоходов,
	|	ТаблицаТовары.АналитикаДоходов 			 КАК АналитикаДоходов,
	|	ТаблицаТовары.Количество	 		КАК Количество,
	|	ТаблицаТовары.Сумма			 		КАК Сумма,
	|	ТаблицаТовары.Склад					КАК Склад,
	|	ТаблицаТовары.СписаниеНаРасходы	КАК СписаниеНаРасходы
	|ПОМЕСТИТЬ ВтТаблицаТовары
	|ИЗ
	|	ВтТовары КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КорАналитика
	|	ПО
	|		ТаблицаТовары.Номенклатура = КорАналитика.Номенклатура
	|		И ТаблицаТовары.Характеристика = КорАналитика.Характеристика
	|		И ТаблицаТовары.Серия = КорАналитика.Серия
	|		И (&Подразделение = КорАналитика.Склад)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВТВидыЗапасов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВТВидыЗапасов";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка,
	|	ВидыЗапасов.НомерСтроки,
	|	ВидыЗапасов.ВидЗапасов,
	|	ВидыЗапасов.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВидыЗапасов.НомерГТД,
	|	ВидыЗапасов.СкладОтгрузки,
	|	ВидыЗапасов.ВидЗапасовОтгрузки,
	|	ВидыЗапасов.ДокументРеализации,
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.СтатьяРасходов,
	|	ВидыЗапасов.АналитикаРасходов,
	|	ВидыЗапасов.Серия,
	|	ВидыЗапасов.ВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
	|	&НалоговоеНазначение КАК ЦелевоеНалоговоеНазначение,
	|	ВидыЗапасов.Количество,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	КлючиКомитента.КлючАналитики КАК АналитикаКомитента
	|ПОМЕСТИТЬ ВТВидыЗапасов
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров.ВидыЗапасов КАК ВидыЗапасов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО Аналитика.КлючАналитики = ВидыЗапасов.АналитикаУчетаНоменклатуры
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиКомитента
	|		ПО КлючиКомитента.Номенклатура = Аналитика.Номенклатура
	|		И КлючиКомитента.Характеристика = Аналитика.Характеристика
	|		И КлючиКомитента.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		И КлючиКомитента.Склад = ВидыЗапасов.ВидЗапасов.Комитент
	|ГДЕ
	|	ВидыЗапасов.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаСерииТоваров(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаСерииТоваров";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Назначение КАК Назначение,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10, 14)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ТаблицаТовары.Серия
	|	КОНЕЦ КАК Серия
	|ПОМЕСТИТЬ ВтТаблицаСерииТоваров
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Количество <> 0
	|	И НЕ &ОрдернаяСхемаПриПоступлении
	|	И (НЕ ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10)
	|			ИЛИ ТаблицаТовары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Количество,
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий),
	|	ТаблицаСерии.Серия
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И НЕ &ОрдернаяСхемаПриПоступлении
	|	И ТаблицаТовары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (4, 6, 8, 10)";

	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СвободныеОстатки";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	// На неордерном складе
	"ВЫБРАТЬ
	|	0 КАК Порядок,
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК ВНаличии,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеИзпроизводства)
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВРезервеПодЗаказ
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	НЕ &ОрдернаяСхемаПриПоступлении
	|
	|ОБЪЕДИНИТЬ ВСЕ
	// На ордерном складе для старых назначений ставим в резерв под заказ, т.к. этого не сделал приходный ордер
	|ВЫБРАТЬ
	|	0,
	|	&Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	0,
	|	ТаблицаТовары.Количество
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ОрдернаяСхемаПриПоступлении
	|	И ВЫБОР
	|			КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ТОГДА НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыНаСкладах";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаСерииТоваров", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаСерииТоваров(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|		  ТОГДА ТаблицаТовары.Назначение
	|		  ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ТаблицаТовары.Количество               КАК ВНаличии
	|ИЗ
	|	ВтТаблицаСерииТоваров КАК ТаблицаТовары";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюПоступления(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюПоступления";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Склад	                   КАК Склад,
	|	&Ссылка                                КАК ДокументПоступления,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|		  ТОГДА ТаблицаТовары.Назначение
	|		  ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ТаблицаТовары.Количество               КАК КОформлению
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ОрдернаяСхемаПриПоступлении";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКПоступлению(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКПоступлению";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Склад	                   КАК Склад,
	|	&Ссылка                                КАК ДокументПоступления,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|		  ТОГДА ТаблицаТовары.Назначение
	|		  ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаТовары.Количество               КАК КПоступлению
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ОрдернаяСхемаПриПоступлении";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&Склад КАК Получатель,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка) КАК Помещение,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПоПрочемуОприходованию) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	НЕ &ОрдернаяСхемаПриПоступлении КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество,
	|	&Склад,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПоПрочемуОприходованию),
	|	&Ссылка,
	|	&Период,
	|	&Ссылка,
	|	НЕ &ОрдернаяСхемаПриПоступлении
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров.Товары КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДатыПоступленияТоваровОрганизаций";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период КАК ДатаПоступления,
	|	ТаблицаТовары.Номенклатура               КАК Номенклатура,
	|	ТаблицаТовары.Характеристика             КАК Характеристика,
	|	ТаблицаТовары.Серия                      КАК Серия,
	|	ТаблицаТовары.ВидЗапасов                 КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД       КАК НомерГТД
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ПоступленияТоваров
	|	ПО
	|		ТаблицаТовары.ВидЗапасов					  = ПоступленияТоваров.ВидЗапасов 
	|		И ТаблицаТовары.Номенклатура				  = ПоступленияТоваров.Номенклатура
	|		И ТаблицаТовары.Характеристика				  = ПоступленияТоваров.Характеристика 
	|		И ТаблицаТовары.Серия						  = ПоступленияТоваров.Серия 
	|		И ТаблицаТовары.НомерГТД				  = ПоступленияТоваров.НомерГТД 
	|
	|ГДЕ
	|	&ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы)
	|	И (ПоступленияТоваров.ДатаПоступления ЕСТЬ NULL
	|	     ИЛИ ПоступленияТоваров.ДатаПоступления < &Период)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.НомерГТД";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВТВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрЗапросаКорВидЗапасов(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД КАК НомерГТД,
	|	ТаблицаТовары.ВидЗапасов КАК КорВидЗапасов,
	|	ТаблицаТовары.Количество КАК Количество,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	НЕОПРЕДЕЛЕНО КАК ОрганизацияОтгрузки,
	|	ТаблицаТовары.ЦелевоеНалоговоеНазначение КАК НалоговоеНазначение,
	|	ИСТИНА КАК Первичное
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	| ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ТаблицаВидыЗапасов.АналитикаКомитента
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры
	|	КОНЕЦ КАК КорАналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.ВидЗапасовОтгрузки КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.ВидЗапасовОтгрузки КАК КорВидЗапасов,
	|	-ТаблицаВидыЗапасов.Количество КАК Количество,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.СтатьяРасходов КАК СтатьяРасходов,
	|	ТаблицаВидыЗапасов.АналитикаРасходов КАК АналитикаРасходов,
	|	ТаблицаВидыЗапасов.ДокументРеализации КАК ДокументРеализации,
	|	&Организация КАК ОрганизацияОтгрузки,
	|	Списание.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ЛОЖЬ КАК Первичное
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров КАК Списание
	|		ПО ТаблицаВидыЗапасов.ДокументРеализации = Списание.Ссылка
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюОтчетовКомитенту";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВТВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрЗапросаКорВидЗапасов(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки            КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	&Период                                   КАК Период,
	|	ТаблицаВидыЗапасов.ВидЗапасов             КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.АналитикаКомитента     КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Валюта      КАК Валюта,
	|	ТаблицаВидыЗапасов.НомерГТД               КАК НомерГТД,
	|	0                                         КАК Количество,
	|	0                                         КАК СуммаВыручки,
	|	-ТаблицаВидыЗапасов.Количество            КАК КоличествоСписано,
	|	ТаблицаВидыЗапасов.Номенклатура           КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика         КАК Характеристика,
	|	&ХозяйственнаяОперация                    КАК ХозяйственнаяОперация,
	|	&КорВидЗапасов                            КАК КорВидЗапасов,
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение КАК НалоговоеНазначение,
	|	ТаблицаВидыЗапасов.ДокументРеализации     КАК ДокументРеализации
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВТВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрЗапросаКоэффициентПересчетаВВалютуРегл(Запрос);
	УстановитьПараметрЗапросаКорВидЗапасов(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	&Период                                   КАК Период,
	|	НЕОПРЕДЕЛЕНО КАК ПериодПродажи,
	|	ТаблицаТовары.НомерСтроки                 КАК НомерСтрокиДокумента,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры  КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|   	ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ                         		   КАК ВидЗапасов,
	|   ТаблицаТовары.ВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
	|
	|	ТаблицаТовары.Сумма   		   		   КАК Стоимость,
	|	ТаблицаТовары.Сумма   		   		   КАК СтоимостьБезНДС,
	|	ТаблицаТовары.Сумма*&КоэффициентПересчетаВВалютуРегл  КАК СтоимостьРегл,
	|	ТаблицаТовары.Сумма*&КоэффициентПересчетаВВалютуРегл  КАК СтоимостьРеглБезНДС,
	|	0 КАК НДСРегл,
	|	ТаблицаТовары.Количество       		   КАК Количество,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеТоваров) КАК ХозяйственнаяОперация,
	|	&Организация                     	   КАК Организация,
	|	&Подразделение                     	   КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК КорНалоговоеНазначение,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочееПоступлениеТоваров),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеИзпроизводства),
	|					ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзЭксплуатации))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(Списание.Дата, МЕСЯЦ) = НАЧАЛОПЕРИОДА(&Период, Месяц) 
	|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ КАК ВидДвижения,
	|	&Период,
	|	Списание.Дата КАК ПериодПродажи,
	|	ТаблицаВидыЗапасов.НомерСтроки,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ТаблицаВидыЗапасов.АналитикаКомитента
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах),
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			&КорВидЗапасов
	|		ИНАЧЕ
	|			ТаблицаВидыЗапасов.ВидЗапасов
	|		КОНЕЦ
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение 
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.НалоговоеНазначение 
	|	КОНЕЦ КАК НалоговоеНазначение, 
	|	0,
	|	0,
	|	0,
	|	0 КАК СтоимостьРеглБезНДС,
	|	0 КАК НДСРегл,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(Списание.Дата, МЕСЯЦ) = НАЧАЛОПЕРИОДА(&Период, Месяц) 
	|		ТОГДА -ТаблицаВидыЗапасов.Количество
	|		ИНАЧЕ ТаблицаВидыЗапасов.Количество
	|	КОНЕЦ КАК Количество,
    |	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы) КАК ХозяйственнаяОперация,
	|	&Организация,
	|	&Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорВидЗапасов,
	|	ТаблицаВидыЗапасов.НалоговоеНазначение КАК КорНалоговоеНазначение,
	|	ТаблицаВидыЗапасов.СтатьяРасходов КАК СтатьяРасходовСписания,
	|	ТаблицаВидыЗапасов.АналитикаРасходов КАК АналитикаРасходов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров КАК Списание
	|	ПО ТаблицаВидыЗапасов.ДокументРеализации = Списание.Ссылка
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы)
	|	И ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(Списание.Дата, МЕСЯЦ) = НАЧАЛОПЕРИОДА(&Период, Месяц) 
	|		ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ КАК ВидДвижения,
	|	&Период,
	|	Списание.Дата КАК ПериодПродажи,
	|	ТаблицаВидыЗапасов.НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|	КОНЕЦ КАК РазделУчета,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НалоговоеНазначение КАК НалоговоеНазначение, 
	|	0,
	|	0,
	|	0,
	|	0 КАК СтоимостьРеглБезНДС,
	|	0 КАК НДСРегл,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(Списание.Дата, МЕСЯЦ) = НАЧАЛОПЕРИОДА(&Период, Месяц) 
	|		ТОГДА -ТаблицаВидыЗапасов.Количество
	|		ИНАЧЕ ТаблицаВидыЗапасов.Количество
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.СтатьяРасходов.ВариантРаспределенияРасходов = 
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА
	|				ВЫБОР 
 	|					КОГДА ТаблицаВидыЗапасов.СтатьяРасходов.ВидЦенности В (
	|							ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС),
	|							ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОбъектыНезавершенногоСтроительства))
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставОС)
 	|					КОГДА ТаблицаВидыЗапасов.СтатьяРасходов.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставНМА)
	|				КОНЕЦ
	|		КОГДА ТаблицаВидыЗапасов.СтатьяРасходов.ВариантРаспределенияРасходов = 
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаПрочиеЦели)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	&Организация,
	|	&Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорВидЗапасов,
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение КАК КорНалоговоеНазначение,
	|	ТаблицаВидыЗапасов.СтатьяРасходов КАК СтатьяРасходовСписания,
	|	ТаблицаВидыЗапасов.АналитикаРасходов КАК АналитикаРасходов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров КАК Списание
	|	ПО ТаблицаВидыЗапасов.ДокументРеализации = Списание.Ссылка
	|
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы)
	|	И ТаблицаВидыЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиДокумента";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрЗапросаКоэффициентПересчетаВВалютуРегл(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Валюта КАК Валюта,
	|	ТаблицаТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаТовары.Сумма  КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|	0 КАК СуммаНДС,
	|	ТаблицаТовары.Сумма*&КоэффициентПересчетаВВалютуРегл КАК СуммаБезНДСРегл,
	|	0 КАК СуммаНДСРегл
	|
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров.Товары КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &Валюта <> &ВалютаРегламентированногоУчета
	|	И &ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл()

Функция ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииТоваровОрганизаций";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрЗапросаКоэффициентПересчетаВВалютуРегл(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	&Период                                   КАК Период,
	|	ТаблицаТовары.НомерСтроки                 КАК НомерСтроки,
	|	&Организация                              КАК Организация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры  КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.ВидЗапасов                  КАК ВидЗапасов,
	|	ТаблицаТовары.АналитикаУчетаПартий        КАК АналитикаУчетаПартий,
	|	&Ссылка                                   КАК ДокументПоступления,
	|	ТаблицаТовары.Количество                  КАК Количество,
	|	ТаблицаТовары.Сумма                       КАК Стоимость,
	|	ТаблицаТовары.Сумма                       КАК СтоимостьБезНДС,
	|	ТаблицаТовары.Сумма*&КоэффициентПересчетаВВалютуРегл  КАК СтоимостьРегл,
	|	ТаблицаТовары.Номенклатура                КАК Номенклатура,
	|	ТаблицаТовары.Характеристика              КАК Характеристика,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеТоваров) КАК ХозяйственнаяОперация,
	|	ИСТИНА КАК Первичное,
	|	НЕОПРЕДЕЛЕНО КАК ДокументИсточник
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочееПоступлениеТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеИзпроизводства),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзЭксплуатации))
	|	И &ИспользоватьПартионныйУчет
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияНоменклатураДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияНоменклатураДоходыРасходы";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВТВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрЗапросаКоэффициентПересчетаВВалютуРегл(Запрос);
	УстановитьПараметрЗапросаКорВидЗапасов(Запрос);
	УстановитьПараметрЗапросаКорВидЗапасовСписания(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Склад КАК Склад,
	|	ТаблицаТовары.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|   	ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	ТаблицаТовары.СтатьяРасходов КАК СтатьяДоходовРасходов,
	|	ТаблицаТовары.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Сумма КАК Стоимость,
	|	ТаблицаТовары.Сумма КАК СтоимостьБезНДС,
	|	ТаблицаТовары.Сумма*&КоэффициентПересчетаВВалютуРегл КАК СтоимостьРегл,
	|
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ 
	|		ТаблицаТовары.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеИзПроизводства))
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Склад КАК Склад,
	|	ТаблицаТовары.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|		ТОГДА ТаблицаТовары.ВидЗапасов
	|		ИНАЧЕ Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|	
	|	ТаблицаТовары.СтатьяДоходов КАК СтатьяДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	ТаблицаТовары.АналитикаДоходов КАК АналитикаДоходов,
	|	
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Сумма КАК Стоимость,
	|	ТаблицаТовары.Сумма КАК СтоимостьБезНДС,
	|	ТаблицаТовары.Сумма*&КоэффициентПересчетаВВалютуРегл КАК СтоимостьРегл,
	|
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ 
	|		ТаблицаТовары.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзЭксплуатации))
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Склад КАК Склад,
	|	ТаблицаТовары.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|   	ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	ТаблицаТовары.СтатьяДоходов КАК СтатьяДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	ТаблицаТовары.АналитикаДоходов КАК АналитикаДоходов,
	|
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Сумма КАК Стоимость,
	|	ТаблицаТовары.Сумма КАК СтоимостьБезНДС,
	|	ТаблицаТовары.Сумма*&КоэффициентПересчетаВВалютуРегл КАК СтоимостьРегл,
	|
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ 
	|		ТаблицаТовары.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры
	|
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочееПоступлениеТоваров)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатьяРасходов.ВариантРаспределенияРасходов = 
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|			ТОГДА
	|				ВЫБОР 
 	|					КОГДА ТаблицаТовары.СтатьяРасходов.ВидЦенности В (
	|							ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОС),
	|							ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ОбъектыНезавершенногоСтроительства))
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставОС)
 	|					КОГДА ТаблицаТовары.СтатьяРасходов.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НМА)
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаВСоставНМА)
	|				КОНЕЦ
	|		КОГДА ТаблицаТовары.СтатьяРасходов.ВариантРаспределенияРасходов = 
	|				ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаПрочиеЦели)
	|		ИНАЧЕ
	|			Списание.ХозяйственнаяОперация
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			ТаблицаТовары.АналитикаКомитента
	|		ИНАЧЕ
	|			ТаблицаТовары.АналитикаУчетаНоменклатуры
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	&Склад КАК Склад,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВЫБОР КОГДА ТаблицаТовары.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			ТаблицаТовары.ВидЗапасовОтгрузки.ТипЗапасов
	|		ИНАЧЕ
	|			ТаблицаТовары.ТипЗапасов
	|		КОНЕЦ
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ТипЗапасов,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВЫБОР КОГДА ТаблицаТовары.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			&КорВидЗапасовСписания
	|		ИНАЧЕ
	|			ТаблицаТовары.ВидЗапасов
	|		КОНЕЦ
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	ТаблицаТовары.СтатьяРасходов КАК СтатьяДоходовРасходов,
	|	ТаблицаТовары.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	- ТаблицаТовары.Количество КАК Количество,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК СтоимостьРегл,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА
	|				ВЫБОР КОГДА ТаблицаТовары.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|					&КорВидЗапасовСписания
	|				ИНАЧЕ
	|					ТаблицаТовары.ВидЗапасов
	|				КОНЕЦ
	|		ИНАЧЕ ТаблицаТовары.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры
	|
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаТовары
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров КАК Списание
	|	ПО ТаблицаТовары.ДокументРеализации = Списание.Ссылка
	|ГДЕ
	|	&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеДоходы";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрЗапросаКоэффициентПересчетаВВалютуРегл(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	ТаблицаТовары.СтатьяДоходов,
	|	ТаблицаТовары.АналитикаДоходов,
	|	
	|	ТаблицаТовары.Сумма,
	|	
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.Сумма*&КоэффициентПересчетаВВалютуРегл КАК СуммаРегл
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПрочееПоступлениеТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзЭксплуатации)
	|	)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаТовары", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаТовары(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                 КАК НомерСтроки,
	|	&Период                                   КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	&Организация                              КАК Организация,
	|	&Подразделение                            КАК Подразделение,
	|	ТаблицаТовары.СтатьяРасходов              КАК СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов           КАК АналитикаРасходов,
	|	-ТаблицаТовары.Сумма                      КАК Сумма,
	|	&ХозяйственнаяОперация                    КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры  КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ИспользоватьУчетПрочихДоходовРасходов
	|	И &ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеИзПроизводства)
	|	)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТМЦВЭксплуатации(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТМЦВЭксплуатации";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ТабличнаяЧасть.Номенклатура КАК Номенклатура,
	|	ТабличнаяЧасть.Характеристика КАК Характеристика,
	|	ТабличнаяЧасть.ПартияТМЦВЭксплуатации КАК Партия,
	|	-ТабличнаяЧасть.Количество КАК Количество
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзЭксплуатации)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОбеспечениеЗаказов";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	-ТаблицаТовары.Количество              КАК КЗаказу,
	|	
	|	ВЫБОР КОГДА НЕ &ОрдернаяСхемаПриПоступлении ТОГДА
	|				ТаблицаТовары.Количество
	|			КОГДА НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА //для старых назначений
	|				ТаблицаТовары.Количество
	|			ИНАЧЕ
	|				0
	|		КОНЕЦ                              КАК НаличиеПодЗаказ
	|	
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров.Товары КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеИзПроизводства)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.ПрочееОприходованиеТоваров";
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("ОрдернаяСхемаПриПоступлении",
												"ВЫБОР
												|		КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
												|				И ТаблицаТовары.Ссылка.Дата >= ТаблицаТовары.Ссылка.Склад.ДатаНачалаОрдернойСхемыПриПоступлении
												|			ТОГДА ИСТИНА
												|		ИНАЧЕ ЛОЖЬ
												|	КОНЕЦ");
	
	Если ИмяРегистра = "ОбеспечениеЗаказов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	Иначе
		ТекстИсключения = НСтр("ru='В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';uk='У документі %ПолноеИмяДокумента% не реалізована адаптація тексту запиту формування рухів по регістру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ЗначенияПараметров = Новый Структура();
	Результат.ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(ТекстЗапроса,
																								ПолноеИмяДокумента,
																								СинонимТаблицыДокумента,
																								ПереопределениеРасчетаПараметров);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Оприходование товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Накладная";
	КомандаПечати.Представление = НСтр("ru='Оприходование товаров';uk='Оприбуткування товарів'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

	// Задание на размещение товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьЗаданияНаОтборРазмещениеТоваров";
	КомандаПечати.Идентификатор = "ЗаданиеНаОтборРазмещениеТовара";
	КомандаПечати.Представление = НСтр("ru='Задание на размещение товаров';uk='Завдання на розміщення товарів'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ИмяФормы", "ЗаданиеНаРазмещение");

КонецПроцедуры

// Сформировать печатные формы объектов
//
// ПАРАМЕТРЫ.
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ОбъектыПечати		   - СписокЗначений	  - Список объектов печати
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
         УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Накладная",
			НСтр("ru='Оприходование товаров';uk='Оприбуткування товарів'"), СформироватьПечатнуюФормуНакладная(МассивОбъектов, ОбъектыПечати,ПараметрыВывода),,,,Истина);
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуНакладная(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;	
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДопКолонка = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	Если ЗначениеЗаполнено(ДопКолонка) Тогда
		ВыводитьДопКолонку = Истина;
	Иначе
		ВыводитьДопКолонку = Ложь;
		ДопКолонка = "Код";
	КонецЕсли;

	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Склад КАК Склад,
	|	Документ.Подразделение КАК Подразделение,
	|	Документ.Организация КАК Организация,
	|	Документ.ПредседательКомиссии КАК ПредседательКомиссии,
	|	Документ.ЧленКомиссии1 КАК ЧленКомиссии1,
	|	Документ.ЧленКомиссии2 КАК ЧленКомиссии2,
	|	Документ.ЧленКомиссии3 КАК ЧленКомиссии3,
	|	Документ.ДолжностьПредседателяКомиссии КАК ДолжностьПредседателяКомиссии,
	|	Документ.ДолжностьЧленаКомиссии1 КАК ДолжностьЧленаКомиссии1,
	|	Документ.ДолжностьЧленаКомиссии2 КАК ДолжностьЧленаКомиссии2,
	|	Документ.ДолжностьЧленаКомиссии3 КАК ДолжностьЧленаКомиссии3,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Склад) КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Подразделение) КАК ПодразделениеПредставление,
	|	Документ.Организация.НаименованиеСокращенное КАК ОрганизацияПредставление
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.Код КАК ДопКолонка,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное КАК ХарактеристикаПредставление,
	|	&ТекстЗапросаНаименованиеЕдиницыИзмерения КАК ЕдиницаИзмеренияПредставление,
	|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаТовары.Цена КАК Цена,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Серия,
	|	ТаблицаТовары.Серия.Представление
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	НЕ ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10)
	|	И ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Номенклатура.Код,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения),
	|	МАКСИМУМ(ТаблицаСерии.Количество),
	|	ТаблицаТовары.Цена,
	|	ТаблицаТовары.Сумма,
	|	ТаблицаТовары.Ссылка,
	|	МАКСИМУМ(ТаблицаСерии.Количество),
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Серия.Представление
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров.Серии КАК ТаблицаСерии
	|		ПО ТаблицаТовары.Номенклатура = ТаблицаСерии.Номенклатура
	|			И ТаблицаТовары.Характеристика = ТаблицаСерии.Характеристика
	|			И ТаблицаТовары.Назначение = ТаблицаСерии.Назначение
	|			И ТаблицаТовары.Ссылка = ТаблицаСерии.Ссылка
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Номенклатура.Код,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное,
	|	ТаблицаТовары.Цена,
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаСерии.НомерСтроки,
	|	ТаблицаТовары.Сумма,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Серия.Представление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (4, 6, 8, 10)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|ИТОГИ ПО
	|	Ссылка";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаНаименованиеЕдиницыИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Наименование",
			"ТаблицаТовары.Упаковка",
			"ТаблицаТовары.Номенклатура"));
	
	Если ВыводитьДопКолонку И ДопКолонка <> "Код" Тогда 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Номенклатура.Код", "Номенклатура." + ДопКолонка);
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	ВалютаУпр = Константы.ВалютаУправленческогоУчета.Получить();	
	РеквизитыДокумента = Новый Структура("Номер, Дата");
	СинонимДокумента = НСтр("ru='Оприходование товаров';uk= 'Оприбуткування товарів'", КодЯзыкаПечать);

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПрочееОприходованиеТоваров_ОприходованиеТоваров";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПрочееОприходованиеТоваров.ПФ_MXL_ОприходованиеТоваров", КодЯзыкаПечать);
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПодразделения") Тогда
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Иначе
		ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокБезПодразделения");
	КонецЕсли;
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");

	Если ВыводитьДопКолонку Тогда
		ОбластьШапкаТаблицы        = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ОбластьСтрока              = Макет.ПолучитьОбласть("Строка");
		ОбластьПодвалТаблицы       = Макет.ПолучитьОбласть("ПодвалТаблицы");
	Иначе
		ОбластьШапкаТаблицы        = Макет.ПолучитьОбласть("ШапкаТаблицыБезДопКолонки");
		ОбластьСтрока              = Макет.ПолучитьОбласть("СтрокаБезДопКолонки");	
		ОбластьПодвалТаблицы       = Макет.ПолучитьОбласть("ПодвалТаблицыБезДопКолонки");
	КонецЕсли;
	
	ОбластьПодписи       = Макет.ПолучитьОбласть("Подписи");
	ОбластьСуммаПрописью = Макет.ПолучитьОбласть("СуммаПрописью");
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаДокументы = РезультатыЗапроса[0].Выбрать();
	ВыборкаПоТабличнымЧастям = РезультатыЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	Пока ВыборкаДокументы.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		// Выводим шапку накладной.
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаДокументы);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаДокументы);
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента, КодЯзыкаПечать);
		ОбластьЗаголовок.Параметры.РеквизитыПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ВыборкаДокументы.Организация, ВыборкаДокументы.Дата), "ЮридическийАдрес,Телефоны,/,КодПоЕДРПОУ,ИНН,НомерСвидетельства,",,КодЯзыкаПечать);
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабДокумент, Макет, ОбластьЗаголовок, ВыборкаДокументы.Ссылка);
		ТабДокумент.Вывести(ОбластьЗаголовок);
		// Вывод шапки.
		
		ТабДокумент.Вывести(ОбластьШапкаТаблицы);
				
		СуммаВсего = 0;
		ВсегоНаименований = 0;
		
		// Вывод строк.
		ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаДокументы.Ссылка));
		
		ВыборкаПоСтрокам = ВыборкаПоТабличнымЧастям.Выбрать();
		
		Пока ВыборкаПоСтрокам.Следующий() Цикл
									
			// Номенклатура.
			ОбластьСтрока.Параметры.ТоварПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				ВыборкаПоСтрокам.НоменклатураПредставление,
				ВыборкаПоСтрокам.ХарактеристикаПредставление,
				,
				ВыборкаПоСтрокам.СерияПредставление);
			
			// Данные о ценах, количестве.
			ОбластьСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
			
			СуммаВсего = СуммаВсего + ВыборкаПоСтрокам.Сумма;
			ВсегоНаименований = ВсегоНаименований + 1;
			
			ОбластьСтрока.Параметры.НомерСтроки = ВсегоНаименований;
			ТабДокумент.Вывести(ОбластьСтрока);
			
		КонецЦикла;
		
		// Вывод подвала.
		ТабДокумент.Вывести(ОбластьПодвалТаблицы);
		
		// Вывод Суммы прописью.
		ОбластьСуммаПрописью.Параметры.СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаВсего, ВалютаУпр, , КодЯзыкаПечать);
		
		ТекстИтоговойСтроки = НСтр("ru='Всего наименований %ВсегоНаименований%, на сумму %СуммаВсего% %ВалютаУпр%';uk= 'Всього найменувань %ВсегоНаименований%, на суму %СуммаВсего% %ВалютаУпр%'", КодЯзыкаПечать);
		
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", ВсегоНаименований);
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%СуммаВсего%", Формат(СуммаВсего, "ЧЦ=15; ЧДЦ=2"));
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВалютаУпр%", Строка(ВалютаУпр));
		
		ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
		
		ТабДокумент.Вывести(ОбластьСуммаПрописью);
		
		// Вывод подписей.
		ОбластьПодписи.Параметры.Заполнить(ВыборкаДокументы);
		ОбластьПодписи.Параметры.ПредседательКомиссииФИО = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ВыборкаДокументы.ПредседательКомиссии);		
		ОбластьПодписи.Параметры.ЧленКомиссии1ФИО        = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ВыборкаДокументы.ЧленКомиссии1);		
		ОбластьПодписи.Параметры.ЧленКомиссии2ФИО        = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ВыборкаДокументы.ЧленКомиссии2);		
		ОбластьПодписи.Параметры.ЧленКомиссии3ФИО        = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ВыборкаДокументы.ЧленКомиссии3);		
		ТабДокумент.Вывести(ОбластьПодписи);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);
		
	КонецЦикла;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПолучитьДанныеДляПечатнойФормыОтборРазмещениеТоваров(ПараметрыПечати, МассивДокументов) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПрочееОприходованиеТоваров.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ПрочееОприходованиеТоваров.Ссылка) КАК СсылкаПредставление,
	|	ПрочееОприходованиеТоваров.Склад КАК Склад,
	|	ПРЕДСТАВЛЕНИЕ(ПрочееОприходованиеТоваров.Склад) КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)) КАК ПомещениеПредставление,
	|	ПрочееОприходованиеТоваров.Дата КАК Дата,
	|	ПрочееОприходованиеТоваров.Номер КАК Номер,
	|	NULL КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА ПрочееОприходованиеТоваров.Склад.ИспользоватьАдресноеХранениеСправочно
	|				И (НЕ ПрочееОприходованиеТоваров.Склад.ИспользоватьАдресноеХранение
	|					ИЛИ ПрочееОприходованиеТоваров.Дата < ПрочееОприходованиеТоваров.Склад.ДатаНачалаАдресногоХраненияОстатков)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИспользуетсяСправочноеХранение,
	|	ВЫБОР
	|		КОГДА ПрочееОприходованиеТоваров.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|				И ПрочееОприходованиеТоваров.Дата >= ПрочееОприходованиеТоваров.Склад.ДатаНачалаОрдернойСхемыПриПоступлении
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НарушенаОрдернаяСхема,
	|	ПрочееОприходованиеТоваров.Склад.ИспользованиеРабочихУчастков КАК ИспользованиеРабочихУчастков,
	|	ПрочееОприходованиеТоваров.Склад.ИспользоватьСерииНоменклатуры КАК ИспользоватьСерииНоменклатуры
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров КАК ПрочееОприходованиеТоваров
	|ГДЕ
	|	ПрочееОприходованиеТоваров.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок КАК НаборУпаковок,
	|	ТаблицаТовары.Количество КАК Количество
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И НЕ ТаблицаТовары.СтатусУказанияСерий В (2, 4, 6, 8, 10)
	|	И (НЕ ТаблицаТовары.Ссылка.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|			ИЛИ ТаблицаТовары.Ссылка.Дата < ТаблицаТовары.Ссылка.Склад.ДатаНачалаОрдернойСхемыПриПоступлении)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Ссылка,
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки),
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ВЫРАЗИТЬ(ТаблицаСерии.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок,
	|	СУММА(ТаблицаСерии.Количество)
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение
	|ГДЕ
	|	ТаблицаСерии.Ссылка В(&МассивОбъектов)
	|	И ТаблицаСерии.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (НЕ ТаблицаСерии.Ссылка.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|			ИЛИ ТаблицаТовары.Ссылка.Дата < ТаблицаТовары.Ссылка.Склад.ДатаНачалаОрдернойСхемыПриПоступлении)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Ссылка,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.НомерСтроки
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (2, 4, 6, 8, 10)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Склад КАК Склад,
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА NULL
	|		ИНАЧЕ ТаблицаТовары.Серия
	|	КОНЕЦ КАК Серия,
	|	ТаблицаТовары.НаборУпаковок КАК НаборУпаковок,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Упаковка,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаТоваровСуммированная
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА NULL
	|		ИНАЧЕ ТаблицаТовары.Серия
	|	КОНЕЦ,
	|	ТаблицаТовары.НаборУпаковок,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ТаблицаТовары.Ссылка.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура.Код КАК Код,
	|	ТаблицаТовары.Номенклатура.Артикул КАК Артикул,
	|	ТаблицаТовары.Ссылка.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбхода,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбходаДополнительнаяЯчейка,
	|	ПРЕДСТАВЛЕНИЕ(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток) КАК ПредставлениеРабочегоУчастка,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.ПорядокОбхода, ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка)) КАК ОсновнаяЯчейка,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.Код, """") КАК ОсновнаяЯчейкаПредставление,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.Код, """") КАК ЯчейкаПредставление,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ТаблицаТовары.Серия.Представление КАК ПредставлениеСерии,
	|	ТаблицаТовары.Количество КАК КоличествоУпаковок,
	|	ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий КАК НастройкаИспользованияСерий,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Упаковка) КАК ПредставлениеЕдининицыИзмеренияУпаковки
	|ИЗ
	|	ТаблицаТоваровСуммированная КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТовары.Ссылка.Склад)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОстальныеЯчейки
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОстальныеЯчейки.Номенклатура
	|			И (РазмещениеОстальныеЯчейки.ОсновнаяЯчейка = ЛОЖЬ)
	|			И (РазмещениеОстальныеЯчейки.Склад = ТаблицаТовары.Ссылка.Склад)
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И (НЕ ТаблицаТовары.Ссылка.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|			ИЛИ ТаблицаТовары.Ссылка.Дата < ТаблицаТовары.Ссылка.Склад.ДатаНачалаОрдернойСхемыПриПоступлении)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки,
	|	Номенклатура,
	|	Характеристика,
	|	Серия
	|ИТОГИ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Склад КАК Склад,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоличествоВУпаковке,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ЕдиницаИзмерения.Представление, ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения)) КАК ПредставлениеЕдининицыИзмеренияУпаковки
	|ИЗ
	|	ТаблицаТоваровСуммированная КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|		ПО (ТаблицаТовары.Номенклатура = УпаковкиНоменклатуры.Владелец
	|				ИЛИ ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок = УпаковкиНоменклатуры.Владелец)
	|			И (НЕ УпаковкиНоменклатуры.ПометкаУдаления)
	|			И ТаблицаТовары.Количество >= &ТекстЗапросаКоэффициентУпаковки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТовары.Ссылка.Склад)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки,
	|	КоличествоВУпаковке УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия.Наименование КАК ПредставлениеСерии,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТовары.Ссылка.Склад)
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|	И НЕ ТаблицаТовары.Серия ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"УпаковкиНоменклатуры",
			"ТаблицаТовары.Номенклатура"));
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивДокументов); 
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[0];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[3];
	РезультатПоУпаковкам 		= МассивРезультатов[4];
	РезультатПоСериям	 		= МассивРезультатов[5];
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти, РезультатПоУпаковкам, РезультатПоСериям",
													РезультатПоШапке,
													РезультатПоТабличнойЧасти,
													РезультатПоУпаковкам,
													РезультатПоСериям);
	
	Возврат СтруктураДанныхДляПечати;
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы


Функция ПолноеИмяОбъекта()
	Возврат "Документ.ПрочееОприходованиеТоваров";
КонецФункции

Процедура ЗаполнитьНазначениеВТЧСерииПрочееОприходованиеТоваров_ДанныеДляОбновления(Параметры) Экспорт
    
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка                               	  КАК Ссылка,
	|	ТаблицаТовары.Номенклатура                            КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                          КАК Характеристика,
	|	ТаблицаТовары.НомерСтроки                             КАК НомерСтрокиТовары,
	|	ТаблицаТовары.Количество                              КАК Количество,
	|   ТаблицаТовары.Назначение							  КАК Назначение,
	|   ВЫБОР КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|		ТаблицаТовары.Назначение
	|	КОНЕЦ					  							  КАК НазначениеОтправителя
	|
	|ПОМЕСТИТЬ ТоварыСНазначением
	|
	|ИЗ
	|
	|	Документ.ПрочееОприходованиеТоваров.Товары КАК ТаблицаТовары
	|
	|ГДЕ  
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|		ТаблицаТовары.Назначение
	|	КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка                               	  КАК Ссылка,
	|	ТаблицаТовары.НомерСтрокиТовары                       КАК НомерСтрокиТовары,
	|	ТаблицаСерии.НомерСтроки			                  КАК НомерСтрокиСерии,
	|	ТаблицаТовары.Количество                              КАК Количество,
	|	ТаблицаСерии.Количество			                      КАК КоличествоСерий,
	|   ТаблицаТовары.Назначение 							  КАК Назначение,
	|   ТаблицаСерии.Назначение                               КАК НазначениеСерии
	|
	|ПОМЕСТИТЬ ДанныеДляОбновления
	|
	|ИЗ
	|
	|	ТоварыСНазначением КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров.Серии КАК ТаблицаСерии
	|		ПО ТаблицаТовары.Ссылка = ТаблицаСерии.Ссылка
	|			И ТаблицаТовары.Номенклатура = ТаблицаСерии.Номенклатура
	|			И ТаблицаТовары.Характеристика = ТаблицаСерии.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДляОбновления.Ссылка,
	|	ДанныеДляОбновления.Количество,
	|	СУММА(ВЫБОР
	|		КОГДА ДанныеДляОбновления.НазначениеСерии <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ДанныеДляОбновления.КоличествоСерий
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК КоличествоСерий
	|ПОМЕСТИТЬ ДокументыСназначениями
	|ИЗ
	|	ДанныеДляОбновления КАК ДанныеДляОбновления
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДляОбновления.Ссылка,
	|	ДанныеДляОбновления.НомерСтрокиТовары,
	|	ДанныеДляОбновления.Количество
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////	
	|ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|	ДокументыСназначениями.Ссылка
	|ИЗ
	|	ДокументыСназначениями КАК ДокументыСназначениями
	|ГДЕ
	|  	ДокументыСназначениями.Количество > ДокументыСназначениями.КоличествоСерий  
    |";
    
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(
        Параметры, 
        Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка")
    );	

КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.1
// Заполняет "Назначение" в табличной части "Серии" и формирует движения по регистру накопления ТоварыНаСкладах
Процедура ЗаполнитьНазначениеВТЧСерииПрочееОприходованиеТоваров(Параметры) Экспорт
    
	ПолноеИмяОбъекта = ПолноеИмяОбъекта();
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(
        Параметры.Очередь, 
        ПолноеИмяОбъекта, 
        МенеджерВременныхТаблиц
    );
    
    Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
    КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
    
	ЗапросПоДокументам = Новый Запрос;
    ЗапросПоДокументам.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросПоДокументам.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка                               	  КАК Ссылка,
	|	ТаблицаТовары.Номенклатура                            КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                          КАК Характеристика,
	|	ТаблицаТовары.НомерСтроки                             КАК НомерСтрокиТовары,
	|	ТаблицаТовары.Количество                              КАК Количество,
	|   ТаблицаТовары.Назначение							  КАК Назначение,
	|   ВЫБОР КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|		ТаблицаТовары.Назначение
	|	КОНЕЦ					  							  КАК НазначениеОтправителя
	|
	|ПОМЕСТИТЬ ТоварыСНазначением
	|
	|ИЗ
	|
	|	Документ.ПрочееОприходованиеТоваров.Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляОбработки КАК ДокументыКОбработке
	|		ПО ТаблицаТовары.Ссылка = ДокументыКОбработке.Ссылка
	|
	|ГДЕ  
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|		ТаблицаТовары.Назначение
	|	КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка                               	  КАК Ссылка,
	|	ТаблицаТовары.НомерСтрокиТовары                       КАК НомерСтрокиТовары,
	|	ТаблицаСерии.НомерСтроки			                  КАК НомерСтрокиСерии,
	|	ТаблицаТовары.Количество                              КАК Количество,
	|	ТаблицаСерии.Количество			                      КАК КоличествоСерий,
	|   ТаблицаТовары.Назначение 							  КАК Назначение,
	|   ТаблицаСерии.Назначение                               КАК НазначениеСерии
	|
	|ПОМЕСТИТЬ ДанныеДляОбновления
	|
	|ИЗ
	|
	|	ТоварыСНазначением КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров.Серии КАК ТаблицаСерии
	|		ПО ТаблицаТовары.Ссылка = ТаблицаСерии.Ссылка
	|			И ТаблицаТовары.Номенклатура = ТаблицаСерии.Номенклатура
	|			И ТаблицаТовары.Характеристика = ТаблицаСерии.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДляОбновления.Ссылка,
	|	ДанныеДляОбновления.Количество,
	|	СУММА(ВЫБОР
	|		КОГДА ДанныеДляОбновления.НазначениеСерии <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ДанныеДляОбновления.КоличествоСерий
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК КоличествоСерий
	|ПОМЕСТИТЬ ДокументыСназначениями
	|ИЗ
	|	ДанныеДляОбновления КАК ДанныеДляОбновления
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДляОбновления.Ссылка,
	|	ДанныеДляОбновления.НомерСтрокиТовары,
	|	ДанныеДляОбновления.Количество
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////	
	|ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|	ДокументыСназначениями.Ссылка
	|ПОМЕСТИТЬ ДокументыДляОбновления
	|ИЗ
	|	ДокументыСназначениями КАК ДокументыСназначениями
	|ГДЕ
	|  	ДокументыСназначениями.Количество > ДокументыСназначениями.КоличествоСерий  
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДляОбновления.Ссылка КАК Ссылка,
	|	ДанныеДляОбновления.НомерСтрокиТовары,
	|	ДанныеДляОбновления.НомерСтрокиСерии,
	|	ДанныеДляОбновления.Назначение КАК Назначение,
	|	ДанныеДляОбновления.Количество
	|ИЗ
	|	ДокументыДляОбновления КАК ДокументыДляОбновления
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДляОбновления КАК ДанныеДляОбновления
	|		ПО ДокументыДляОбновления.Ссылка = ДанныеДляОбновления.Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиТовары,
	|	НомерСтрокиСерии
	|ИТОГИ ПО
	|	Ссылка,
	|	НомерСтрокиТовары
    |";
    
    ЗапросПоДокументам.Текст = СтрЗаменить(ЗапросПоДокументам.Текст, "ВТДляОбработки", Результат.ИмяВременнойТаблицы);
    
	ЗапросТаблицаДвиженийТоварыНаСкладах = Новый Запрос;
	ЗапросТаблицаДвиженийТоварыНаСкладах.Текст = "
	|ВЫБРАТЬ
    |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)			    КАК ВидДвижения,
    |	ТаблицаТовары.Ссылка.Дата                           КАК Период,
    |	ТаблицаТовары.Номенклатура                          КАК Номенклатура,
    |	ТаблицаТовары.Характеристика                        КАК Характеристика,
    |	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)      	КАК Назначение,
    |	ТаблицаТовары.Ссылка.Склад                          КАК Склад,
    |	ТаблицаТовары.Количество                            КАК ВНаличии,
    |	ТаблицаТовары.Серия                                 КАК Серия
    | 
    |ИЗ
    |	Документ.ПрочееОприходованиеТоваров.Товары КАК ТаблицаТовары
    |ГДЕ
    |	ТаблицаТовары.Ссылка = &Ссылка
    |	И ВЫБОР
    |		КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
    |				И ТаблицаТовары.Ссылка.Дата >= ТаблицаТовары.Ссылка.Склад.ДатаНачалаОрдернойСхемыПриПоступлении
    |			ТОГДА ЛОЖЬ
    |		ИНАЧЕ ИСТИНА
    |	КОНЕЦ
    |	И НЕ (ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10))
    |
    |ОБЪЕДИНИТЬ ВСЕ
    |
    |ВЫБРАТЬ
    |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
    |	ТаблицаТовары.Ссылка.Дата,
    |	ТаблицаСерии.Номенклатура,
    |	ТаблицаСерии.Характеристика,
    |	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка),
    |	ТаблицаСерии.Ссылка.Склад,
    |	СУММА(ТаблицаСерии.Количество),
    |	ТаблицаСерии.Серия
    |ИЗ
    |	Документ.ПрочееОприходованиеТоваров.Серии КАК ТаблицаСерии
    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров.Товары КАК ТаблицаТовары
    |		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
    |			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
    |			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
    |			И ТаблицаСерии.Назначение = ТаблицаТовары.Назначение
    |ГДЕ
    |	ТаблицаСерии.Ссылка = &Ссылка
    |	И ТаблицаТовары.Ссылка = &Ссылка
    |	И ТаблицаСерии.Количество <> 0
    |	И ВЫБОР
    |		КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
    |				И ТаблицаТовары.Ссылка.Дата >= ТаблицаТовары.Ссылка.Склад.ДатаНачалаОрдернойСхемыПриПоступлении
    |			ТОГДА ЛОЖЬ
    |		ИНАЧЕ ИСТИНА
    |	КОНЕЦ
    |
    |СГРУППИРОВАТЬ ПО
    |	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
    |	ТаблицаТовары.Ссылка.Дата,
    |	ТаблицаСерии.Номенклатура,
    |	ТаблицаСерии.Характеристика,
    |	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка),
    |	ТаблицаСерии.Ссылка.Склад,
    |	ТаблицаСерии.Серия,
    |	ТаблицаСерии.НомерСтроки
    |
    |ИМЕЮЩИЕ
    |	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (4, 6, 8, 10)
    |";
    
    Выборка = ЗапросПоДокументам.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    
    Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл    
		
		НачатьТранзакцию();
		
		Попытка	
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыНаСкладах.НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Ссылка);
			Блокировка.Заблокировать();
            
            ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
            
            ВыборкаПоСтрокеТоваров = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
            // Если объект ранее был удален или обработан другими сеансами, пропускаем его.
            Если ДокументОбъект = Неопределено 
                ИЛИ ВыборкаПоСтрокеТоваров.Количество() = 0 Тогда
				ОтменитьТранзакцию();
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				Продолжить;
            КонецЕсли;
            
            ЗаполнитьНазначениеВДокументе(ДокументОбъект, ВыборкаПоСтрокеТоваров);
            ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
            
			ЗапросТаблицаДвиженийТоварыНаСкладах.УстановитьПараметр("Ссылка", Выборка.Ссылка);
			ТаблицаДвижений = ЗапросТаблицаДвиженийТоварыНаСкладах.Выполнить().Выгрузить();
			
			Если ТаблицаДвижений.Количество() > 0 Тогда
				Набор = РегистрыНакопления.ТоварыНаСкладах.СоздатьНаборЗаписей();
				Набор.Отбор.Регистратор.Установить(Выборка.Ссылка);
				Набор.Загрузить(ТаблицаДвижений);
				
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
			КонецЕсли;	
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
            ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(Выборка.Ссылка);
										
		КонецПопытки;
		
	КонецЦикла;
    
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
        Параметры.Очередь, 
        ПолноеИмяОбъекта
    );

КонецПроцедуры

Процедура ЗаполнитьНазначениеВДокументе(ДокументОбъект, ВыборкаПоСтрокеТоваров)
	
	ИмяТчСерии = "Серии";				
	
	ЭтоПеремещение = Ложь;
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПеремещениеТоваров") Тогда
		ЭтоПеремещение = Истина;	
	КонецЕсли;
			
	Пока ВыборкаПоСтрокеТоваров.Следующий() Цикл
		
		НазначенийЗаполнено = 0;
		
		Выборка = ВыборкаПоСтрокеТоваров.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ТекущееНазначение = Выборка.Назначение;
			Если ЭтоПеремещение Тогда
				ТекущееНазначениеОтправителя = Выборка.НазначениеОтправителя;
			КонецЕсли;
			Если Выборка.НомерСтрокиСерии = 0 Тогда
				Прервать;
			КонецЕсли;	
			
			СтрокаСерий = ДокументОбъект[ИмяТчСерии][Выборка.НомерСтрокиСерии-1];
			
			Если ЗначениеЗаполнено(СтрокаСерий.Назначение) Тогда
				Продолжить;
			ИначеЕсли ЭтоПеремещение Тогда
				Если ЗначениеЗаполнено(СтрокаСерий.НазначениеОтправителя) Тогда
					Продолжить;	
				КонецЕсли;	
			КонецЕсли;
			
			Если СтрокаСерий.Количество + НазначенийЗаполнено > Выборка.Количество Тогда
				НоваяСтрока = ДокументОбъект[ИмяТчСерии].Добавить();	
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаСерий);
				НоваяСтрока.Назначение = ТекущееНазначение;
				Если ЭтоПеремещение Тогда
					НоваяСтрока.НазначениеОтправителя = ТекущееНазначениеОтправителя;
				КонецЕсли;	
				НоваяСтрока.Количество = Выборка.Количество - НазначенийЗаполнено;
				СтрокаСерий.Количество = СтрокаСерий.Количество - НоваяСтрока.Количество;	
				НазначенийЗаполнено = Выборка.Количество	
			ИначеЕсли СтрокаСерий.Количество > 0 Тогда
				СтрокаСерий.Назначение = ТекущееНазначение;
				Если ЭтоПеремещение Тогда
					СтрокаСерий.НазначениеОтправителя = ТекущееНазначениеОтправителя;
				КонецЕсли;	
				НазначенийЗаполнено = НазначенийЗаполнено + СтрокаСерий.Количество;
			Иначе
				Продолжить;
			КонецЕсли;
			
			Если НазначенийЗаполнено = Выборка.Количество Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		ДокументОбъект.Товары[Выборка.НомерСтрокиТовары-1].Назначение = ТекущееНазначение;
		Если ЭтоПеремещение Тогда
			ДокументОбъект.Товары[Выборка.НомерСтрокиТовары-1].НазначениеОтправителя = ТекущееНазначениеОтправителя;
		КонецЕсли;
	КонецЦикла;
	
	//Сворачивание таблицы серий
	КолонкиГруппировок = "Серия, Номенклатура, Характеристика, Назначение";
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВнутреннееПотреблениеТоваров") 
		Или ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.СборкаТоваров") Тогда
		КолонкиГруппировок = КолонкиГруппировок + ", УдалитьДокументРезерваСерий";
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПоступлениеТоваровУслуг") Тогда
		КолонкиГруппировок = КолонкиГруппировок + ", Склад";
	ИначеЕсли  ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
		КолонкиГруппировок = КолонкиГруппировок + ", Склад, УдалитьДокументРезерваСерий";
	ИначеЕсли  ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПеремещениеТоваров") Тогда
		КолонкиГруппировок = КолонкиГруппировок + ", НазначениеОтправителя, УдалитьДокументРезерваСерий";
	КонецЕсли;
	
	ДокументОбъект[ИмяТчСерии].Свернуть(КолонкиГруппировок,"Количество");
	
КонецПроцедуры

Процедура ПерезаполнитьНазначениеВТЧСерии_ДанныеДляОбновления(Параметры) Экспорт
	ОбеспечениеСервер.ПерезаполнитьНазначениеВТЧСерии_ДанныеДляОбновления("ПрочееОприходованиеТоваров", Параметры);
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.1
// Перезаполняет "Назначение" в табличной части "Серии"
Процедура ПерезаполнитьНазначениеВТЧСерии(Параметры) Экспорт
	ОбеспечениеСервер.ПерезаполнитьНазначениеВТЧСерии("ПрочееОприходованиеТоваров", Параметры);
КонецПроцедуры

Процедура ЗаполнитьНазначениеОтправителя_ДанныеДляОбновления(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокДокументов.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров КАК СписокДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПрочееОприходованиеТоваров.Товары КАК ТаблицаТовары
	|		ПО СписокДокументов.Ссылка = ТаблицаТовары.Ссылка
	|ГДЕ
	|	(ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				И ТаблицаТовары.НазначениеОтправителя = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
	
	|	И СписокДокументов.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратИзПроизводства)
    |";
    
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(
        Параметры, 
        Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка")
    );	

КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.1
// Заполняется реквизит НазначениеОтправителя табличной части Товары, Серии
Процедура ЗаполнитьНазначениеОтправителя(Параметры) Экспорт
    
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(
        Параметры.Очередь, 
        ПолноеИмяОбъекта()
    );
    
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка	
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта());
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			Блокировка.Заблокировать();
			
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
            
            // Если объект ранее был удален или обработан другими сеансами, пропускаем его
			Если ДокументОбъект = Неопределено Тогда 
				ОтменитьТранзакцию();
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				Продолжить;
            КонецЕсли;
            
    		Для Каждого ДанныеСтроки Из ДокументОбъект.Товары Цикл
    			Если ЗначениеЗаполнено(ДанныеСтроки.Назначение) Тогда
    				ДанныеСтроки.НазначениеОтправителя = ДанныеСтроки.Назначение;
                КонецЕсли;
            КонецЦикла;
            
    		Для Каждого ДанныеСтроки Из ДокументОбъект.Серии Цикл
    			Если ЗначениеЗаполнено(ДанныеСтроки.Назначение) Тогда
    				ДанныеСтроки.НазначениеОтправителя = ДанныеСтроки.Назначение;
    			КонецЕсли;
    		КонецЦикла;
            
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
            ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(Выборка.Ссылка);
										
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
        Параметры.Очередь, 
        ПолноеИмяОбъекта()
    );
	
КонецПроцедуры




Процедура ЗарегистироватьДанныеКОбработкеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПрочееОприходованиеТоваровТовары.Ссылка
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров.Товары КАК ПрочееОприходованиеТоваровТовары
	|ГДЕ
	|	ПрочееОприходованиеТоваровТовары.СтатусУказанияСерий В (9, 10)
	|	И ПрочееОприходованиеТоваровТовары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";
	Запрос = Новый Запрос(ТекстЗапроса);
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаНовуюВерсию(Параметры) Экспорт
	
	ПолноеИмя = "Документ.ПрочееОприходованиеТоваров";
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(Параметры.Очередь,ПолноеИмя);
	Пока Выборка.Следующий() Цикл
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить(ПолноеИмя);
		ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
		НачатьТранзакцию();
		Попытка
			Блокировка.Заблокировать();
		Исключение
			ОтменитьТранзакцию();
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойБлокировке(Выборка.Ссылка);
			Продолжить;
		КонецПопытки;
		
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Если Объект = Неопределено Тогда
			ОтменитьТранзакцию();
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			Продолжить;
		КонецЕсли;
		ЕстьИзменения = Ложь;
		Для Каждого СтрокаТоваров Из Объект.Товары Цикл
			Если (СтрокаТоваров.СтатусУказанияСерий = 10
				Или СтрокаТоваров.СтатусУказанияСерий = 9)
				И СтрокаТоваров.Серия <> Справочники.СерииНоменклатуры.ПустаяСсылка() Тогда
				СтрокаСерий = Объект.Серии.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаСерий,СтрокаТоваров);
				СтрокаТоваров.Серия = Справочники.СерииНоменклатуры.ПустаяСсылка();
				ЕстьИзменения = Истина;
			КонецЕсли;
		КонецЦикла;
		Если ЕстьИзменения Тогда
			Объект.Серии.Свернуть("Номенклатура,Серия,Характеристика,Назначение,НазначениеОтправителя","Количество");
			Попытка
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(Объект);
				ЗафиксироватьТранзакцию();
			Исключение
				ОтменитьТранзакцию();
				ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(Выборка.Ссылка);
				ВызватьИсключение;
			КонецПопытки;
		Иначе
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
		КонецЕсли;
	КонецЦикла;
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмя);
	
КонецПроцедуры


#КонецОбласти

#КонецОбласти

#КонецЕсли
