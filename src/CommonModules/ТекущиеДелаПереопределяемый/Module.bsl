////////////////////////////////////////////////////////////////////////////////
// Подсистема "Текущие дела".
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Заполняет список обработчиков текущих дел.
//
// Параметры:
//  Обработчики - Массив - массив ссылок на модули менеджеров или общие модули, в которых
//                         определена процедура ПриЗаполненииСпискаТекущихДел.
//
Процедура ПриОпределенииОбработчиковТекущихДел(Обработчики) Экспорт
	
	ТекущиеДелаУТ.ПриОпределенииОбработчиковТекущихДел(Обработчики);
	
	ИнтернетПоддержкаПользователей.ПриОпределенииОбработчиковТекущихДел(Обработчики);
	
КонецПроцедуры

// Получает список разделов командного интерфейса в заданном порядке.
//
// Параметры:
//  Разделы - Массив - массив разделов командного интерфейса.
//                     Задает начальный порядок разделов в панели текущих дел.
//
Процедура ПриОпределенииПорядкаРазделовКомандногоИнтерфейса(Разделы) Экспорт
	
	Разделы.Добавить(Метаданные.Подсистемы.CRMИМаркетинг);
	Разделы.Добавить(Метаданные.Подсистемы.Продажи);
	Разделы.Добавить(Метаданные.Подсистемы.Закупки);
	Разделы.Добавить(Метаданные.Подсистемы.Склад);
	Разделы.Добавить(Метаданные.Подсистемы.Казначейство);
	Разделы.Добавить(Метаданные.Подсистемы.ФинансовыйРезультатИКонтроллинг);
	
	ИнтернетПоддержкаПользователей.ПриОпределенииПорядкаРазделовКомандногоИнтерфейса(Разделы);
	
	Разделы.Добавить(Метаданные.Подсистемы.Администрирование);
	
КонецПроцедуры

// Отключает текущие дела.
//
// Параметры:
//  ОтключаемыеДела - Массив - массив строк идентификаторов текущих дел, которые нужно отключать.
//
Процедура ПриОтключенииТекущихДел(ОтключаемыеДела) Экспорт
	
КонецПроцедуры

// Устанавливает общие параметры запросов для расчета текущих дел.
// См. ТекущиеДела.УстановитьОбщиеПараметрыЗапросов().
//
// Параметры:
//  Запрос - выполняемый запрос.
//  ОбщиеПараметрыЗапросов - Структура - общие значения для расчета текущих дел.
//
Процедура УстановитьОбщиеПараметрыЗапросов(Запрос, ОбщиеПараметрыЗапросов) Экспорт
	
	Запрос.УстановитьПараметр("ДатаАктуальности", НачалоДня(ОбщиеПараметрыЗапросов.ТекущаяДата));
	
КонецПроцедуры

// Процедура-обработчик, вызываемая в форме расшифровки текущего дела.
// Устанавливает параметры открытия формы и необходимые отборы списка формы.
//
// Параметры:
//  Форма - УправляемаяФорма
//  Список - ДинамическийСписок
//
Процедура ПриСозданииНаСервере(Форма, Список) Экспорт
	Перем СтруктураБыстрогоОтбора;
	Перем ИмяТекущейСтраницы;
	
	// Заполним структуру реквизитов формы
	СтруктураРеквизитов = Новый Структура;
	Для Каждого Реквизит Из Форма.ПолучитьРеквизиты() Цикл
		СтруктураРеквизитов.Вставить(Реквизит.Имя);
	КонецЦикла;
	
	Если Форма.Параметры.Свойство("СтруктураБыстрогоОтбора", СтруктураБыстрогоОтбора) Тогда
		
		Для Каждого КлючИЗначение Из СтруктураБыстрогоОтбора Цикл
			
			Если СтруктураРеквизитов.Свойство(КлючИЗначение.Ключ) Тогда
				
				// Элемент отбора динамического списка выведен на форму
				ОтборыСписковКлиентСервер.ОтборПоЗначениюСпискаПриСозданииНаСервере(
					Список,
					КлючИЗначение.Ключ,
					Форма[КлючИЗначение.Ключ],
					СтруктураБыстрогоОтбора);
				
			Иначе
				
				// Отбор выполняется непосредственно в свойствах динамического списка
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
					Список,
					КлючИЗначение.Ключ,
					КлючИЗначение.Значение,
					ВидСравненияКомпоновкиДанных.Равно,
					,
					Истина);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Установим текущий элемент формы
	Если Форма.Параметры.Свойство("ИмяТекущейСтраницы", ИмяТекущейСтраницы) Тогда
		Форма.ТекущийЭлемент = Форма.Элементы[ИмяТекущейСтраницы];
	КонецЕсли;
	
КонецПроцедуры

// Процедура-обработчик, вызываемая в форме расшифровки текущего дела.
// Позволяет заменить сохраненные значения реквизитов формы.
// Заменяет сохраненные значения реквизитов формы на свойства Форма.Параметры.СтруктураБыстрогоОтбора.
//
// Параметры:
//  Форма - УправляемаяФорма
//  Настройки - Соответствие
//
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Форма, Настройки) Экспорт
	Перем СтруктураБыстрогоОтбора;
	
	Если Форма.Параметры.Свойство("СтруктураБыстрогоОтбора", СтруктураБыстрогоОтбора) Тогда
		
		Для Каждого КлючИЗначение Из СтруктураБыстрогоОтбора Цикл
			
			ЗначениеНастройки = Настройки.Получить(КлючИЗначение.Ключ);
			
			// Если есть сохраненное значение реквизита формы и оно не совпадает со значением
			// из СтруктураБыстрогоОтбора, то заменим сохраненное значение на значение быстрого отбора.
			Если ЗначениеНастройки <> Неопределено И ЗначениеНастройки <> КлючИЗначение.Значение Тогда
				Настройки.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти