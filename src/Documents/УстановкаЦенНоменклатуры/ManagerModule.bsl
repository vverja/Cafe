#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);

КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.УстановкаЦенНоменклатуры) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.УстановкаЦенНоменклатуры.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.УстановкаЦенНоменклатуры);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

	КомандаОтчет = ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуРезультатыСогласованияЦенНоменклатурыПоДокументу(КомандыОтчетов);
	Если КомандаОтчет <> Неопределено Тогда
		КомандаОтчет.СписокФорм = "ФормаДокумента,ФормаСписка";
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаЦеныНоменклатуры(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаЦеныНоменклатуры(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЦеныНоменклатуры";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура          КАК Номенклатура,
	|	ТаблицаТовары.Характеристика        КАК Характеристика,
	|	ТаблицаТовары.Упаковка              КАК Упаковка,
	|	ТаблицаТовары.ВидЦены               КАК ВидЦены,
	|	ТаблицаТовары.Цена                  КАК Цена,
	|	ТаблицаТовары.ВидЦены.ВалютаЦены    КАК Валюта,
	|	ТаблицаТовары.Ссылка.Дата           КАК ПЕРИОД
	|ИЗ
	|	Документ.УстановкаЦенНоменклатуры.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыУстановокЦенНоменклатуры.Согласован)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И (ТаблицаТовары.Номенклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)
	|		ИЛИ (ТаблицаТовары.Номенклатура.ИспользованиеХарактеристик <> ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)
	|		И ТаблицаТовары.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)))
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	Если ПолучитьФункциональнуюОпцию("ИспользоватьРозничныеПродажи") Тогда
		// Переоценка в рознице
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьПереоценкаВРознице";
		КомандаПечати.МенеджерПечати = "";
		КомандаПечати.Идентификатор = "ПереоценкаТоваровВРознице";
		КомандаПечати.Представление = НСтр("ru='Переоценка в рознице';uk='Переоцінка в роздробі'");
	КонецЕсли;

	// Установка цен номенклатуры
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьУстановкаЦенНоменклатуры";
	КомандаПечати.МенеджерПечати = "";
	КомандаПечати.Идентификатор = "УстановкаЦенНоменклатуры";
	КомандаПечати.Представление = НСтр("ru='Установка цен номенклатуры';uk='Встановлення цін номенклатури'");

	Если ПраваПользователяПовтИсп.ПечатьЭтикетокИЦенников() Тогда
		// Ценники
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьЭтикетокИЦенников";
		КомандаПечати.МенеджерПечати = "";
		КомандаПечати.Идентификатор = "Ценники";
		КомандаПечати.Представление = НСтр("ru='Ценники';uk='Цінники'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		
		// Этикетки
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьЭтикетокИЦенников";
		КомандаПечати.МенеджерПечати = "";
		КомандаПечати.Идентификатор = "Этикетки";
		КомандаПечати.Представление = НСтр("ru='Этикетки';uk='Етикетки'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;

КонецПроцедуры

// Процедура печати документа.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПереоценкаТоваровВРознице") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ПереоценкаТоваровВРознице",
			НСтр("ru='Переоценка товаров в рознице';uk='Переоцінка товарів у роздробі'"),
			СформироватьПечатнуюФормуПереоценкиТоваровВРознице(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "УстановкаЦенНоменклатуры") Тогда
			УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"УстановкаЦенНоменклатуры",
			НСтр("ru='Установка цен номенклатуры';uk='Встановлення цін номенклатури'"),
			СформироватьПечатнуюФормуУстановкиЦенНоменклатуры(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода));
	КонецЕсли;
	
КонецПроцедуры

// Функция формирует табличный документ с печатной формой переоценки в рознице.
//
// Возвращаемое значение:
//  Табличный документ.
//
Функция СформироватьПечатнуюФормуПереоценкиТоваровВРозницеБД(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода)

	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПереоценкаТоваровВРознице_ПереоценкаТоваровВРознице";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.УстановкаЦенНоменклатуры.ПФ_MXL_ПереоценкаТоваровВРознице", КодЯзыкаПечать);
	
	КонтролироватьАссортимент = АссортиментСерверПовтИсп.КонтролироватьАссортимент(ПараметрыПечати.РозничныйМагазин);
	
	ПервыйДокумент = Истина;
	Для Каждого УстановкаЦенНоменклатуры Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("УстановкаЦенНоменклатуры", УстановкаЦенНоменклатуры);
		Запрос.УстановитьПараметр("РозничныйМагазин",         ПараметрыПечати.РозничныйМагазин);
		Запрос.УстановитьПараметр("Организация",              ПараметрыПечати.Организация);
		Запрос.УстановитьПараметр("КонецПредыдущегоДня",      КонецДня(НачалоДня(УстановкаЦенНоменклатуры.Дата) - 1));
		Если КонтролироватьАссортимент Тогда
			
			ОбъектПланирования = АссортиментСервер.ОбъектПланирования(ПараметрыПечати.РозничныйМагазин);
			Запрос.УстановитьПараметр("ОбъектПланирования", ОбъектПланирования);
			Запрос.УстановитьПараметр("ДатаДокумента", УстановкаЦенНоменклатуры.Дата);
			
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	УстановкаЦенНоменклатуры.Номер КАК Номер,
			|	УстановкаЦенНоменклатуры.Дата КАК Дата,
			|	УстановкаЦенНоменклатуры.Ссылка КАК Ссылка,
			|	УстановкаЦенНоменклатуры.Ответственный КАК ОтветственныйПредставление,
			|	&Организация КАК Организация,
			|	&Организация КАК Поставщик,
			|	&РозничныйМагазин КАК Получатель,
			|	&РозничныйМагазин КАК ПредставлениеПолучателя
			|ИЗ
			|	Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
			|ГДЕ
			|	УстановкаЦенНоменклатуры.Ссылка = &УстановкаЦенНоменклатуры
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Ассортимент.Номенклатура КАК Номенклатура,
			|	Ассортимент.ВидЦены КАК ВидЦены
			|ПОМЕСТИТЬ НоменклатураВидыЦен
			|ИЗ
			|	РегистрСведений.Ассортимент.СрезПоследних(
			|			КОНЕЦПЕРИОДА(&ДатаДокумента, ДЕНЬ),
			|			ОбъектПланирования = &ОбъектПланирования
			|				И Номенклатура В
			|					(ВЫБРАТЬ
			|						Т.Номенклатура
			|					ИЗ
			|						Документ.УстановкаЦенНоменклатуры.Товары КАК Т
			|					ГДЕ
			|						Т.Ссылка = &УстановкаЦенНоменклатуры)) КАК Ассортимент
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВложенныйЗапрос.НомерСтроки               КАК НомерСтроки,
			|	ВложенныйЗапрос.Номенклатура              КАК Номенклатура,
			|	СправочникНоменклатура.Код                КАК Код,
			|	СправочникНоменклатура.Артикул            КАК Артикул,
			|	СправочникНоменклатура.НаименованиеПолное КАК ПолноеНаименованиеНоменклатуры,
			|	СправочникНоменклатура.ЕдиницаИзмерения.Представление  КАК ЕдиницаИзмерения,
			|	ВложенныйЗапрос.Характеристика                         КАК Характеристика,
			|	СправочникХарактеристикиНоменлатуры.НаименованиеПолное КАК ПолноеНаименованиеХарактеристики,
			|	1                                                      КАК Коэффициент,
			|	ВложенныйЗапрос.НоваяЦенаВРознице                      КАК ЦенаВРознице,
			|	ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) * (ВложенныйЗапрос.НоваяЦенаВРознице - ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)) КАК ОтклонениеСтоимости,
			|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) КАК ЦенаВРозницеСтарая,
			|	ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) КАК Количество
			|ИЗ
			|	Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			УстановкаЦенНоменклатурыТовары.Ссылка КАК Ссылка,
			|			УстановкаЦенНоменклатурыТовары.НомерСтроки КАК НомерСтроки,
			|			УстановкаЦенНоменклатурыТовары.Номенклатура КАК Номенклатура,
			|			УстановкаЦенНоменклатурыТовары.Характеристика КАК Характеристика,
			|			УстановкаЦенНоменклатурыТовары.Цена / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) КАК НоваяЦенаВРознице,
			|			УстановкаЦенНоменклатурыТовары.ВидЦены КАК ВидЦены
			|		ИЗ
			|			Документ.УстановкаЦенНоменклатуры.Товары КАК УстановкаЦенНоменклатурыТовары
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ НоменклатураВидыЦен КАК НоменклатураВидыЦен
			|				ПО НоменклатураВидыЦен.Номенклатура = УстановкаЦенНоменклатурыТовары.Номенклатура
			|				И НоменклатураВидыЦен.ВидЦены = УстановкаЦенНоменклатурыТовары.ВидЦены
			|		ГДЕ
			|			УстановкаЦенНоменклатурыТовары.Ссылка = &УстановкаЦенНоменклатуры
			|			) КАК ВложенныйЗапрос
			|		ПО (ВложенныйЗапрос.Ссылка = УстановкаЦенНоменклатуры.Ссылка)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|				КОНЕЦПЕРИОДА(&КонецПредыдущегоДня, ДЕНЬ),
			|				(Номенклатура, ВидЦены) В
			|					(ВЫБРАТЬ
			|						Т.Номенклатура,
			|						Т.ВидЦены
			|					ИЗ
			|						НоменклатураВидыЦен КАК Т
			|					)) КАК ЦеныНоменклатурыСрезПоследних
			|		ПО (ВложенныйЗапрос.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура)
			|			И (ВложенныйЗапрос.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика)
			|			И (ВложенныйЗапрос.ВидЦены = ЦеныНоменклатурыСрезПоследних.ВидЦены)
			|		ЛЕВОЕ СОЕДИНЕНИЕ
			|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
			|		ПО
			|			ВложенныйЗапрос.Номенклатура = Аналитика.Номенклатура
			|			И ВложенныйЗапрос.Характеристика = Аналитика.Характеристика
			|			И &РозничныйМагазин = Аналитика.Склад
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(
			|				&КонецПредыдущегоДня,
			|				Организация = &Организация) КАК ТоварыОрганизацийОстатки
			|		ПО (Аналитика.КлючАналитики = ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры)
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
			|		ПО СправочникНоменклатура.Ссылка = ВложенныйЗапрос.Номенклатура
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК СправочникХарактеристикиНоменлатуры
			|		ПО СправочникХарактеристикиНоменлатуры.Ссылка = ВложенныйЗапрос.Характеристика
			|ГДЕ
			|	УстановкаЦенНоменклатуры.Ссылка = &УстановкаЦенНоменклатуры
			|	И ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) <> 0
			|	И ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) * (ВложенныйЗапрос.НоваяЦенаВРознице - ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)) <> 0

			|УПОРЯДОЧИТЬ ПО
			|	ВложенныйЗапрос.НомерСтроки
			|";
		Иначе
			Запрос.УстановитьПараметр("ВидЦены",                  ПараметрыПечати.РозничныйМагазин.РозничныйВидЦены);
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	УстановкаЦенНоменклатуры.Номер         КАК Номер,
			|	УстановкаЦенНоменклатуры.Дата          КАК Дата,
			|	УстановкаЦенНоменклатуры.Ссылка        КАК Ссылка,
			|	УстановкаЦенНоменклатуры.Ответственный КАК ОтветственныйПредставление,
			|	&Организация                           КАК Организация,
			|	&Организация                           КАК Поставщик,
			|	&РозничныйМагазин                      КАК Получатель,
			|	&РозничныйМагазин                      КАК ПредставлениеПолучателя
			|ИЗ
			|	Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
			|ГДЕ
			|	УстановкаЦенНоменклатуры.Ссылка = &УстановкаЦенНоменклатуры
			|
			|;
			|ВЫБРАТЬ
			|	ВложенныйЗапрос.НомерСтроки                           КАК НомерСтроки,
			|	ВложенныйЗапрос.Номенклатура                          КАК Номенклатура,
			|	СправочникНоменклатура.Код                            КАК Код,
			|	СправочникНоменклатура.Артикул                        КАК Артикул,
			|	СправочникНоменклатура.НаименованиеПолное             КАК ПолноеНаименованиеНоменклатуры,
			|	СправочникНоменклатура.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
			|	ВложенныйЗапрос.Характеристика                              КАК Характеристика,
			|	СправочникХарактеристикиНоменлатуры.НаименованиеПолное      КАК ПолноеНаименованиеХарактеристики,
			|	1                                                           КАК Коэффициент,
			|	ВложенныйЗапрос.НоваяЦенаВРознице                           КАК ЦенаВРознице,
			|	ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) * (ВложенныйЗапрос.НоваяЦенаВРознице - (ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1))) КАК ОтклонениеСтоимости,
			|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) КАК ЦенаВРозницеСтарая,
			|	ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) КАК Количество
			|ИЗ
			|	Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
			|	
			|	ЛЕВОЕ СОЕДИНЕНИЕ
			|		(ВЫБРАТЬ
			|				УстановкаЦенНоменклатурыТовары.Ссылка КАК Ссылка,
			|				УстановкаЦенНоменклатурыТовары.НомерСтроки КАК НомерСтроки,
			|				УстановкаЦенНоменклатурыТовары.Номенклатура КАК Номенклатура,
			|				УстановкаЦенНоменклатурыТовары.Характеристика КАК Характеристика,
			|				УстановкаЦенНоменклатурыТовары.Цена / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) КАК НоваяЦенаВРознице
			|			ИЗ
			|				Документ.УстановкаЦенНоменклатуры.Товары КАК УстановкаЦенНоменклатурыТовары
			|			ГДЕ
			|				УстановкаЦенНоменклатурыТовары.Ссылка = &УстановкаЦенНоменклатуры
			|				И УстановкаЦенНоменклатурыТовары.ВидЦены = &ВидЦены
			|		) КАК ВложенныйЗапрос
			|		ПО ВложенныйЗапрос.Ссылка = УстановкаЦенНоменклатуры.Ссылка
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(КОНЕЦПЕРИОДА(&КонецПредыдущегоДня, ДЕНЬ), (Номенклатура, Характеристика, ВидЦены) В (ВЫБРАТЬ Т.Номенклатура, Т.Характеристика, Т.ВидЦены ИЗ Документ.УстановкаЦенНоменклатуры.Товары КАК Т ГДЕ Т.Ссылка = &УстановкаЦенНоменклатуры И Т.ВидЦены = &ВидЦены)) КАК ЦеныНоменклатурыСрезПоследних
			|		ПО ВложенныйЗапрос.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
			|			И ВложенныйЗапрос.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
			|		
			|		ЛЕВОЕ СОЕДИНЕНИЕ
			|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
			|		ПО
			|			ВложенныйЗапрос.Номенклатура = Аналитика.Номенклатура
			|			И ВложенныйЗапрос.Характеристика = Аналитика.Характеристика
			|			И &РозничныйМагазин = Аналитика.Склад
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(&КонецПредыдущегоДня, Организация = &Организация) КАК ТоварыОрганизацийОстатки
			|		ПО Аналитика.КлючАналитики = ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
			|		ПО СправочникНоменклатура.Ссылка = ВложенныйЗапрос.Номенклатура
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК СправочникХарактеристикиНоменлатуры
			|		ПО СправочникХарактеристикиНоменлатуры.Ссылка = ВложенныйЗапрос.Характеристика
			|ГДЕ
			|	УстановкаЦенНоменклатуры.Ссылка = &УстановкаЦенНоменклатуры
			|	И ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) <> 0
			|	И ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) * (ВложенныйЗапрос.НоваяЦенаВРознице - (ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1))) <> 0
			|	
			|УПОРЯДОЧИТЬ ПО
			|	ВложенныйЗапрос.НомерСтроки
			|
			|";
		КонецЕсли;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки1",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
				"ЦеныНоменклатурыСрезПоследних.Упаковка",
				"ЦеныНоменклатурыСрезПоследних.Номенклатура"));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки2",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
				"УстановкаЦенНоменклатурыТовары.Упаковка",
				"УстановкаЦенНоменклатурыТовары.Номенклатура"));
		Запрос.Текст = ТекстЗапроса;
		
		УстановитьПривилегированныйРежим(Истина);
		РезультатПакетаЗапросов = Запрос.ВыполнитьПакет();
		УстановитьПривилегированныйРежим(Ложь);
		
		Шапка = РезультатПакетаЗапросов[0].Выбрать();
		Шапка.Следующий();
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабДокумент, Макет, ОбластьМакета, Шапка.Ссылка);
		ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(Шапка, НСтр("ru='Переоценка товаров в рознице';uk='Переоцінка товарів у роздробі'"));
		ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(Шапка, НСтр("ru='Переоценка товаров в рознице';uk='Переоцінка товарів у роздробі'"), КодЯзыкаПечать);
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ПараметрыПечати.Организация, Шапка.Дата), "ПолноеНаименование,");
		ТабДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
		ОбластьМакета.Параметры.ПредставлениеПолучателя = ПараметрыПечати.РозничныйМагазин;
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Шапка таблицы
		ИмяДополнительнойКолонки = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
		ВыводитьКоды = ?(ЗначениеЗаполнено(ИмяДополнительнойКолонки),Истина, Ложь);
		
		ОбластьНомера = Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьНомера");
		ОбластьКодов  = Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьКодов");
		ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьДанных");
		
		ТабДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ОбластьКодов.Параметры.ИмяКолонкиКодов = ИмяДополнительнойКолонки;
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьДанных);
		
		// Строки таблицы
		ОбластьНомера = Макет.ПолучитьОбласть("Строка|ОбластьНомера");
		ОбластьКодов  = Макет.ПолучитьОбласть("Строка|ОбластьКодов");
		ОбластьДанных = Макет.ПолучитьОбласть("Строка|ОбластьДанных");
		
		ИтогОтклонениеСтоимости = 0;
		НомерСтроки = 0;
		ВыборкаСтрокТовары = РезультатПакетаЗапросов[РезультатПакетаЗапросов.Количество() - 1].Выбрать();
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьНомера.Параметры.НомерСтроки = НомерСтроки;
			ТабДокумент.Вывести(ОбластьНомера);
			Если ВыводитьКоды Тогда
				Если ИмяДополнительнойКолонки = "Артикул" Тогда
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Артикул;
				Иначе
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Код;
				КонецЕсли;
				ТабДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			ОбластьДанных.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьДанных.Параметры.Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				ВыборкаСтрокТовары.ПолноеНаименованиеНоменклатуры,
				ВыборкаСтрокТовары.ПолноеНаименованиеХарактеристики);
			ТабДокумент.Присоединить(ОбластьДанных);
			
			ИтогОтклонениеСтоимости = ИтогОтклонениеСтоимости + ВыборкаСтрокТовары.ОтклонениеСтоимости;
			
		КонецЦикла;
		
		// Итог
		ОбластьНомера = Макет.ПолучитьОбласть("Итог|ОбластьНомера");
		ОбластьКодов  = Макет.ПолучитьОбласть("Итог|ОбластьКодов");
		ОбластьДанных = Макет.ПолучитьОбласть("Итог|ОбластьДанных");
		
		ТабДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ОбластьДанных.Параметры.ИтогОтклонениеСтоимости = ФормированиеПечатныхФорм.ФорматСумм(ИтогОтклонениеСтоимости, ПараметрыПечати.РозничныйМагазин.РозничныйВидЦены.ВалютаЦены);
		ТабДокумент.Присоединить(ОбластьДанных);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, УстановкаЦенНоменклатуры);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

// Функция формирует табличный документ с печатной формой переоценки в рознице.
//
// Возвращаемое значение:
//  Табличный документ.
//
Функция СформироватьПечатнуюФормуПереоценкиТоваровВРозницеВТ(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода)
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПереоценкаТоваровВРознице_ПереоценкаТоваровВРознице";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.УстановкаЦенНоменклатуры.ПФ_MXL_ПереоценкаТоваровВРознице", КодЯзыкаПечать);
	
	КонтролироватьАссортимент = АссортиментСерверПовтИсп.КонтролироватьАссортимент(ПараметрыПечати.РозничныйМагазин);
	
	ДанныеДляПечати = ПолучитьИзВременногоХранилища(ПараметрыПечати.АдресДанныеДляПечатиВоВременномХранилище);
	
	ОбщегоНазначенияУТ.ПронумероватьТаблицуЗначений(ДанныеДляПечати.Товары, "НомерСтроки");
	
	НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Товары",                   ДанныеДляПечати.Товары);
	Запрос.УстановитьПараметр("РозничныйМагазин",         ПараметрыПечати.РозничныйМагазин);
	Запрос.УстановитьПараметр("Организация",              ПараметрыПечати.Организация);
	Запрос.УстановитьПараметр("КонецПредыдущегоДня",      ДанныеДляПечати.ДатаСтарыхЦен);
	Если КонтролироватьАссортимент Тогда
		
		ОбъектПланирования = АссортиментСервер.ОбъектПланирования(ПараметрыПечати.РозничныйМагазин);
		Запрос.УстановитьПараметр("ОбъектПланирования", ОбъектПланирования);
		Запрос.УстановитьПараметр("ДатаДокумента", ТекущаяДатаСеанса());
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Товары.НомерСтроки    КАК НомерСтроки,
		|	Товары.Номенклатура   КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Упаковка       КАК Упаковка,
		|	Товары.Цена           КАК Цена,
		|	Товары.ВидЦены        КАК ВидЦены
		|ПОМЕСТИТЬ ТаблицаДанных
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|ВЫБРАТЬ
		|	Ассортимент.Номенклатура КАК Номенклатура,
		|	Ассортимент.ВидЦены КАК ВидЦены
		|ПОМЕСТИТЬ НоменклатураВидыЦен
		|ИЗ
		|	РегистрСведений.Ассортимент.СрезПоследних(
		|			КОНЕЦПЕРИОДА(&ДатаДокумента, ДЕНЬ),
		|			ОбъектПланирования = &ОбъектПланирования
		|				И Номенклатура В
		|					(ВЫБРАТЬ
		|						Т.Номенклатура
		|					ИЗ
		|						ТаблицаДанных КАК Т)) КАК Ассортимент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.НомерСтроки                            КАК НомерСтроки,
		|	ВложенныйЗапрос.Номенклатура                           КАК Номенклатура,
		|	СправочникНоменклатура.Код                             КАК Код,
		|	СправочникНоменклатура.Артикул                         КАК Артикул,
		|	СправочникНоменклатура.НаименованиеПолное              КАК ПолноеНаименованиеНоменклатуры,
		|	СправочникНоменклатура.ЕдиницаИзмерения.Представление  КАК ЕдиницаИзмерения,
		|	ВложенныйЗапрос.Характеристика                         КАК Характеристика,
		|	СправочникХарактеристикиНоменлатуры.НаименованиеПолное КАК ПолноеНаименованиеХарактеристики,
		|	1                                                      КАК Коэффициент,
		|	ВложенныйЗапрос.НоваяЦенаВРознице                      КАК ЦенаВРознице,
		|	ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) * (ВложенныйЗапрос.НоваяЦенаВРознице - ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)) КАК ОтклонениеСтоимости,
		|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) КАК ЦенаВРозницеСтарая,
		|	ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) КАК Количество
		|ИЗ
		|		(ВЫБРАТЬ
		|			УстановкаЦенНоменклатурыТовары.НомерСтроки КАК НомерСтроки,
		|			УстановкаЦенНоменклатурыТовары.Номенклатура КАК Номенклатура,
		|			УстановкаЦенНоменклатурыТовары.Характеристика КАК Характеристика,
		|			УстановкаЦенНоменклатурыТовары.Цена / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) КАК НоваяЦенаВРознице,
		|			УстановкаЦенНоменклатурыТовары.ВидЦены КАК ВидЦены
		|		ИЗ
		|			ТаблицаДанных КАК УстановкаЦенНоменклатурыТовары
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ НоменклатураВидыЦен КАК НоменклатураВидыЦен
		|				ПО НоменклатураВидыЦен.Номенклатура = УстановкаЦенНоменклатурыТовары.Номенклатура
		|				И НоменклатураВидыЦен.ВидЦены = УстановкаЦенНоменклатурыТовары.ВидЦены
		|			) КАК ВложенныйЗапрос
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|				КОНЕЦПЕРИОДА(&КонецПредыдущегоДня, ДЕНЬ),
		|				(Номенклатура, ВидЦены) В
		|					(ВЫБРАТЬ
		|						Т.Номенклатура,
		|						Т.ВидЦены
		|					ИЗ
		|						НоменклатураВидыЦен КАК Т
		|					)) КАК ЦеныНоменклатурыСрезПоследних
		|		ПО (ВложенныйЗапрос.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура)
		|			И (ВложенныйЗапрос.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика)
		|			И (ВложенныйЗапрос.ВидЦены = ЦеныНоменклатурыСрезПоследних.ВидЦены)
		|		ЛЕВОЕ СОЕДИНЕНИЕ
		|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|		ПО
		|			ВложенныйЗапрос.Номенклатура = Аналитика.Номенклатура
		|			И ВложенныйЗапрос.Характеристика = Аналитика.Характеристика
		|			И &РозничныйМагазин = Аналитика.Склад
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(
		|				&КонецПредыдущегоДня,
		|				Организация = &Организация) КАК ТоварыОрганизацийОстатки
		|		ПО (Аналитика.КлючАналитики = ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры)
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО СправочникНоменклатура.Ссылка = ВложенныйЗапрос.Номенклатура
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК СправочникХарактеристикиНоменлатуры
		|		ПО СправочникХарактеристикиНоменлатуры.Ссылка = ВложенныйЗапрос.Характеристика
		|ГДЕ
		|	ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) <> 0
		|	И ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) * (ВложенныйЗапрос.НоваяЦенаВРознице - ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1)) <> 0
		|	
		|УПОРЯДОЧИТЬ ПО
		|	ВложенныйЗапрос.НомерСтроки
		|";
	Иначе
		Запрос.УстановитьПараметр("ВидЦены",                  ПараметрыПечати.РозничныйМагазин.РозничныйВидЦены);
		ТекстЗапроса = 
		
		"ВЫБРАТЬ
		|	Товары.НомерСтроки    КАК НомерСтроки,
		|	Товары.Номенклатура   КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Упаковка       КАК Упаковка,
		|	Товары.Цена           КАК Цена,
		|	Товары.ВидЦены        КАК ВидЦены
		|ПОМЕСТИТЬ ТаблицаДанных
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.НомерСтроки                                 КАК НомерСтроки,
		|	ВложенныйЗапрос.Номенклатура                                КАК Номенклатура,
		|	СправочникНоменклатура.Код                                  КАК Код,
		|	СправочникНоменклатура.Артикул                              КАК Артикул,
		|	СправочникНоменклатура.НаименованиеПолное                   КАК ПолноеНаименованиеНоменклатуры,
		|	СправочникНоменклатура.ЕдиницаИзмерения.Представление       КАК ЕдиницаИзмерения,
		|	ВложенныйЗапрос.Характеристика                              КАК Характеристика,
		|	СправочникХарактеристикиНоменлатуры.НаименованиеПолное      КАК ПолноеНаименованиеХарактеристики,
		|	1                                                           КАК Коэффициент,
		|	ВложенныйЗапрос.НоваяЦенаВРознице                           КАК ЦенаВРознице,
		|	ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) * (ВложенныйЗапрос.НоваяЦенаВРознице - (ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1))) КАК ОтклонениеСтоимости,
		|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1) КАК ЦенаВРозницеСтарая,
		|	ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) КАК Количество
		|ИЗ
		|	(ВЫБРАТЬ
		|			УстановкаЦенНоменклатурыТовары.НомерСтроки КАК НомерСтроки,
		|			УстановкаЦенНоменклатурыТовары.Номенклатура КАК Номенклатура,
		|			УстановкаЦенНоменклатурыТовары.Характеристика КАК Характеристика,
		|			УстановкаЦенНоменклатурыТовары.Цена / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки2, 1) КАК НоваяЦенаВРознице
		|		ИЗ
		|			ТаблицаДанных КАК УстановкаЦенНоменклатурыТовары
		|		ГДЕ
		|			УстановкаЦенНоменклатурыТовары.ВидЦены = &ВидЦены
		|	) КАК ВложенныйЗапрос
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(КОНЕЦПЕРИОДА(&КонецПредыдущегоДня, ДЕНЬ), (Номенклатура, Характеристика, ВидЦены) В (ВЫБРАТЬ Т.Номенклатура, Т.Характеристика, Т.ВидЦены ИЗ ТаблицаДанных КАК Т ГДЕ Т.ВидЦены = &ВидЦены)) КАК ЦеныНоменклатурыСрезПоследних
		|		ПО ВложенныйЗапрос.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
		|			И ВложенныйЗапрос.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ
		|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
		|		ПО
		|			ВложенныйЗапрос.Номенклатура = Аналитика.Номенклатура
		|			И ВложенныйЗапрос.Характеристика = Аналитика.Характеристика
		|			И &РозничныйМагазин = Аналитика.Склад
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(&КонецПредыдущегоДня, Организация = &Организация) КАК ТоварыОрганизацийОстатки
		|		ПО Аналитика.КлючАналитики = ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО СправочникНоменклатура.Ссылка = ВложенныйЗапрос.Номенклатура
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК СправочникХарактеристикиНоменлатуры
		|		ПО СправочникХарактеристикиНоменлатуры.Ссылка = ВложенныйЗапрос.Характеристика
		|ГДЕ
		|	ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) <> 0
		|	И ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) * (ВложенныйЗапрос.НоваяЦенаВРознице - (ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) / ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1, 1))) <> 0
		|	
		|УПОРЯДОЧИТЬ ПО
		|	ВложенныйЗапрос.НомерСтроки
		|
		|";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки1",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ЦеныНоменклатурыСрезПоследних.Упаковка",
			"ЦеныНоменклатурыСрезПоследних.Номенклатура"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки2",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"УстановкаЦенНоменклатурыТовары.Упаковка",
			"УстановкаЦенНоменклатурыТовары.Номенклатура"));
	Запрос.Текст = ТекстЗапроса;
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатПакетаЗапросов = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Переоценка товаров в рознице за %1';uk='Переоцінка товарів у роздробі за %1'"), Формат(ДанныеДляПечати.ДатаСтарыхЦен, НСтр("ru='ДФ=dd.MM.yyyy';uk='ДФ=dd.MM.yyyy'")));
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ОбластьМакета.Параметры.ПредставлениеПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ПараметрыПечати.Организация, ТекущаяДатаСеанса()), "ПолноеНаименование,");
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
	ОбластьМакета.Параметры.ПредставлениеПолучателя = ПараметрыПечати.РозничныйМагазин;
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Шапка таблицы
	ИмяДополнительнойКолонки = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ?(ЗначениеЗаполнено(ИмяДополнительнойКолонки),Истина, Ложь);
	
	ОбластьНомера = Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьНомера");
	ОбластьКодов  = Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьКодов");
	ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьДанных");
	
	ТабДокумент.Вывести(ОбластьНомера);
	Если ВыводитьКоды Тогда
		ОбластьКодов.Параметры.ИмяКолонкиКодов = ИмяДополнительнойКолонки;
		ТабДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
	ТабДокумент.Присоединить(ОбластьДанных);
	
	// Строки таблицы
	ОбластьНомера = Макет.ПолучитьОбласть("Строка|ОбластьНомера");
	ОбластьКодов  = Макет.ПолучитьОбласть("Строка|ОбластьКодов");
	ОбластьДанных = Макет.ПолучитьОбласть("Строка|ОбластьДанных");
	
	ИтогОтклонениеСтоимости = 0;
	НомерСтроки = 0;
	ВыборкаСтрокТовары = РезультатПакетаЗапросов[РезультатПакетаЗапросов.Количество() - 1].Выбрать();
	Пока ВыборкаСтрокТовары.Следующий() Цикл
		
		НомерСтроки = НомерСтроки + 1;
		
		ОбластьНомера.Параметры.НомерСтроки = НомерСтроки;
		ТабДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			Если ИмяДополнительнойКолонки = "Артикул" Тогда
				ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Артикул;
			Иначе
				ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Код;
			КонецЕсли;
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ОбластьДанных.Параметры.Заполнить(ВыборкаСтрокТовары);
		ОбластьДанных.Параметры.Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
			ВыборкаСтрокТовары.ПолноеНаименованиеНоменклатуры,
			ВыборкаСтрокТовары.ПолноеНаименованиеХарактеристики);
		ТабДокумент.Присоединить(ОбластьДанных);
		
		ИтогОтклонениеСтоимости = ИтогОтклонениеСтоимости + ВыборкаСтрокТовары.ОтклонениеСтоимости;
		
	КонецЦикла;
	
	// Итог
	ОбластьНомера = Макет.ПолучитьОбласть("Итог|ОбластьНомера");
	ОбластьКодов  = Макет.ПолучитьОбласть("Итог|ОбластьКодов");
	ОбластьДанных = Макет.ПолучитьОбласть("Итог|ОбластьДанных");
	
	ТабДокумент.Вывести(ОбластьНомера);
	Если ВыводитьКоды Тогда
		ТабДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Склады.РозничныйВидЦены.ВалютаЦены КАК ВалютаЦены
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	Склады.Ссылка = &Склад");
	Запрос.УстановитьПараметр("Склад", ПараметрыПечати.РозничныйМагазин);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ОбластьДанных.Параметры.ИтогОтклонениеСтоимости = ФормированиеПечатныхФорм.ФорматСумм(ИтогОтклонениеСтоимости, Выборка.ВалютаЦены);
	ТабДокумент.Присоединить(ОбластьДанных);
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Документы.УстановкаЦенНоменклатуры.ПустаяСсылка());
	
	Возврат ТабДокумент;
	
КонецФункции

// Функция формирует табличный документ с печатной формой переоценки в рознице.
//
// Возвращаемое значение:
//  Табличный документ.
//
Функция СформироватьПечатнуюФормуПереоценкиТоваровВРознице(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода)
	Если ЗначениеЗаполнено(ПараметрыПечати.АдресДанныеДляПечатиВоВременномХранилище) Тогда
		Возврат СформироватьПечатнуюФормуПереоценкиТоваровВРозницеВТ(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода);
	Иначе
		Возврат СформироватьПечатнуюФормуПереоценкиТоваровВРозницеБД(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода);
	КонецЕсли;

КонецФункции

Процедура ВывестиТабличнуюЧастьВПечатнуюФормуУстановкаЦенНоменклатуры(Параметры)
	
	// Шапка таблицы
	ИмяДополнительнойКолонки = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ?(ЗначениеЗаполнено(ИмяДополнительнойКолонки), Истина, Ложь);
	
	ШапкаНомера  = Параметры.Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьНомера");
	ШапкаКодов   = Параметры.Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьКодов");
	ШапкаТовар   = Параметры.Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьТовар");
	ШапкаВидЦены = Параметры.Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьВидЦены" + ?(Не Параметры.ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
	ШапкаУникальныеИдентификаторы = Параметры.Макет.ПолучитьОбласть("ШапкаТаблицы|УникальныеИдентификаторы");
	
	Параметры.ТабДокумент.Вывести(ШапкаНомера);
	Если ВыводитьКоды Тогда
		ШапкаКодов.Параметры.ИмяКолонкиКодов = ИмяДополнительнойКолонки;
		Параметры.ТабДокумент.Присоединить(ШапкаКодов);
	КонецЕсли;
	Если Не Параметры.ПараметрыПечати.ВыводитьШапку Тогда
		Параметры.ТабДокумент.Присоединить(ШапкаУникальныеИдентификаторы);
	КонецЕсли;
	Параметры.ТабДокумент.Присоединить(ШапкаТовар);
	
	Табл = Новый ТаблицаЗначений;
	Табл.Колонки.Добавить("ВидЦены");
	Табл.Колонки.Добавить("МакетОбласти");
	Табл.Колонки.Добавить("ВыводитьПроцентИзменения");
	Табл.Колонки.Добавить("ВыводитьСтаруюЦену");
	
	ВыборкаПоВидамЦен = Параметры.РезультатЗапроса.ВидыЦен.Выбрать();
	Пока ВыборкаПоВидамЦен.Следующий() Цикл
		
		Новая                          = Табл.Добавить();
		Новая.ВидЦены                  = ВыборкаПоВидамЦен.ВидЦены;
		Новая.ВыводитьПроцентИзменения = Ложь;
		Новая.ВыводитьСтаруюЦену       = Ложь;
		
		НайденныеСтроки = Параметры.ДеревоНастроек.Строки.НайтиСтроки(Новый Структура("Параметр", ВыборкаПоВидамЦен.ВидЦены), Ложь);
		Для Каждого ВидЦены Из НайденныеСтроки Цикл
			
			Для Каждого Колонка Из ВидЦены.Строки Цикл
				
				Если Колонка.Параметр = "СтараяЦена" И Колонка.ВыводитьНаПечать Тогда
					Новая.ВыводитьСтаруюЦену = Истина;
				КонецЕсли;
				
				Если Колонка.Параметр = "ПроцентИзменения" И Колонка.ВыводитьНаПечать Тогда
					Новая.ВыводитьПроцентИзменения = Истина;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
		Если Новая.ВыводитьПроцентИзменения И Новая.ВыводитьСтаруюЦену Тогда
			ШапкаВидЦены       = Параметры.Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьВидЦеныСтараяЦенаПроцентИзменения" + ?(Не Параметры.ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
			Новая.МакетОбласти = Параметры.Макет.ПолучитьОбласть("Строка|ОбластьВидЦеныСтараяЦенаПроцентИзменения" + ?(Не Параметры.ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
		ИначеЕсли Новая.ВыводитьПроцентИзменения И Не Новая.ВыводитьСтаруюЦену Тогда
			ШапкаВидЦены       = Параметры.Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьВидЦеныПроцентИзменения" + ?(Не Параметры.ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
			Новая.МакетОбласти = Параметры.Макет.ПолучитьОбласть("Строка|ОбластьВидЦеныПроцентИзменения");
		ИначеЕсли Не Новая.ВыводитьПроцентИзменения И Новая.ВыводитьСтаруюЦену Тогда
			ШапкаВидЦены       = Параметры.Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьВидЦеныСтараяЦена" + ?(Не Параметры.ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
			Новая.МакетОбласти = Параметры.Макет.ПолучитьОбласть("Строка|ОбластьВидЦеныСтараяЦена" + ?(Не Параметры.ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
		ИначеЕсли Не Новая.ВыводитьПроцентИзменения И Не Новая.ВыводитьСтаруюЦену Тогда
			ШапкаВидЦены       = Параметры.Макет.ПолучитьОбласть("ШапкаТаблицы|ОбластьВидЦены" + ?(Не Параметры.ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
			Новая.МакетОбласти = Параметры.Макет.ПолучитьОбласть("Строка|ОбластьВидЦены" + ?(Не Параметры.ПараметрыПечати.ВыводитьШапку,"УникальныйИдентификатор",""));
		КонецЕсли;
		
		ШапкаВидЦены.Параметры.ВидЦены = ВыборкаПоВидамЦен.ВидЦены;
		Параметры.ТабДокумент.Присоединить(ШапкаВидЦены);
		
	КонецЦикла;
	
	ОбластьНомера = Параметры.Макет.ПолучитьОбласть("Строка|ОбластьНомера");
	ОбластьКодов  = Параметры.Макет.ПолучитьОбласть("Строка|ОбластьКодов");
	ОбластьТовар  = Параметры.Макет.ПолучитьОбласть("Строка|ОбластьТовар");
	ОбластьУникальныеИдентификаторы = Параметры.Макет.ПолучитьОбласть("Строка|УникальныеИдентификаторы");
	
	НомерСтроки = 0;
	ВыборкаПоНоменклатуре = Параметры.РезультатЗапроса.Номенклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоНоменклатуре.Следующий() Цикл
		
		Если Не ЗначениеЗаполнено(ВыборкаПоНоменклатуре.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;
		
		ВыборкаПоХарактеристикам = ВыборкаПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоХарактеристикам.Следующий() Цикл
		
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьНомера.Параметры.НомерСтроки = НомерСтроки;
			Параметры.ТабДокумент.Вывести(ОбластьНомера);
			Если ВыводитьКоды Тогда
				
				Если ИмяДополнительнойКолонки = "Артикул" Тогда
					ОбластьКодов.Параметры.Артикул = ВыборкаПоХарактеристикам.Артикул;
				Иначе
					ОбластьКодов.Параметры.Артикул = ВыборкаПоХарактеристикам.Код;
				КонецЕсли;
				
				Параметры.ТабДокумент.Присоединить(ОбластьКодов);
				
			КонецЕсли;
			
			Если Не Параметры.ПараметрыПечати.ВыводитьШапку Тогда
				ОбластьУникальныеИдентификаторы.Параметры.УникальныйИдентификаторНоменклатура   = Строка(ВыборкаПоХарактеристикам.Номенклатура.УникальныйИдентификатор());
				ОбластьУникальныеИдентификаторы.Параметры.УникальныйИдентификаторХарактеристика = Строка(ВыборкаПоХарактеристикам.Характеристика.УникальныйИдентификатор());
				Параметры.ТабДокумент.Присоединить(ОбластьУникальныеИдентификаторы);
			КонецЕсли;
			
			ОбластьТовар.Параметры.Заполнить(ВыборкаПоХарактеристикам);
			ОбластьТовар.Параметры.Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				ВыборкаПоХарактеристикам.ПолноеНаименованиеНоменклатуры,
				ВыборкаПоХарактеристикам.ПолноеНаименованиеХарактеристики);
			Параметры.ТабДокумент.Присоединить(ОбластьТовар);
			
			ВыборкаПоВидамЦен = ВыборкаПоХарактеристикам.Выбрать();
			Для Каждого СтрокаТЗ Из Табл Цикл
				
				ВыборкаПоВидамЦен.Сбросить();
				Если ВыборкаПоВидамЦен.НайтиСледующий(Новый Структура("ВидЦены", СтрокаТЗ.ВидЦены)) Тогда
					
					ОбластьВидЦены = СтрокаТЗ.МакетОбласти;
					
					ОбластьВидЦены.Параметры.Цена = ВыборкаПоВидамЦен.Цена;
					
					Если СтрокаТЗ.ВыводитьСтаруюЦену Тогда
						ОбластьВидЦены.Параметры.СтараяЦена = ВыборкаПоВидамЦен.СтараяЦена;
					КонецЕсли;
					
					Если СтрокаТЗ.ВыводитьПроцентИзменения Тогда
						ОбластьВидЦены.Параметры.ПроцентИзменения = ВыборкаПоВидамЦен.ПроцентИзменения;
					КонецЕсли;
					
					Если ЗначениеЗаполнено(ВыборкаПоВидамЦен.Упаковка) Тогда
						ОбластьВидЦены.Параметры.ЕдиницаИзмерения = ВыборкаПоВидамЦен.Упаковка;
					Иначе
						ОбластьВидЦены.Параметры.ЕдиницаИзмерения = ВыборкаПоВидамЦен.ЕдиницаИзмерения;
					КонецЕсли;
					
					Если Не Параметры.ПараметрыПечати.ВыводитьШапку Тогда
						ОбластьВидЦены.Параметры.УникальныйИдентификаторЕдиницаИзмерения = Строка(ВыборкаПоВидамЦен.Упаковка.УникальныйИдентификатор());
					КонецЕсли;
					
				Иначе
					
					ОбластьВидЦены = СтрокаТЗ.МакетОбласти;
					
					ОбластьВидЦены.Параметры.Цена = 0;
					
					Если СтрокаТЗ.ВыводитьСтаруюЦену Тогда
						ОбластьВидЦены.Параметры.СтараяЦена = 0;
					КонецЕсли;
					
					Если СтрокаТЗ.ВыводитьПроцентИзменения Тогда
						ОбластьВидЦены.Параметры.ПроцентИзменения = 0;
					КонецЕсли;
					
					ОбластьВидЦены.Параметры.ЕдиницаИзмерения = Неопределено;
					
					Если Не Параметры.ПараметрыПечати.ВыводитьШапку Тогда
						ОбластьВидЦены.Параметры.УникальныйИдентификаторЕдиницаИзмерения = Строка(Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка().УникальныйИдентификатор());
					КонецЕсли;
					
				КонецЕсли;
				
				Параметры.ТабДокумент.Присоединить(ОбластьВидЦены);
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Функция формирует табличный документ с печатной формой установки цен номенклатуры.
//
// Возвращаемое значение:
//  Табличный документ.
//
Функция СформироватьПечатнуюФормуУстановкиЦенНоменклатуры(МассивОбъектов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода) Экспорт
	
	Если ПараметрыВывода <> Неопределено Тогда
		КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	Иначе
		КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм();
	КонецЕсли; 
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УстановкаЦенНоменклатуры";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.УстановкаЦенНоменклатуры.ПФ_MXL_УстановкаЦенНоменклатуры",КодЯзыкаПечать);
	
	ВидыЦен = Новый Массив;
	ДеревоНастроек = ПолучитьИзВременногоХранилища(ПараметрыПечати.ДеревоНастроек);
	Для Каждого СтрокаДерева Из ДеревоНастроек.Строки Цикл
		Если СтрокаДерева.ВыводитьНаПечать Тогда
			ВидыЦен.Добавить(СтрокаДерева.Параметр);
		КонецЕсли;
	КонецЦикла;
	
	ДанныеДляПечати = Неопределено;
	Если ЗначениеЗаполнено(ПараметрыПечати.АдресДанныеДляПечатиВоВременномХранилище) Тогда
		ДанныеДляПечати = ПолучитьИзВременногоХранилища(ПараметрыПечати.АдресДанныеДляПечатиВоВременномХранилище);
	КонецЕсли;
	
	Если ДанныеДляПечати = Неопределено Тогда
	
		ПервыйДокумент = Истина;
		Для Каждого УстановкаЦенНоменклатуры Из МассивОбъектов Цикл
			
			Если Не ПервыйДокумент Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			
			НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	УстановкаЦенНоменклатуры.Ссылка       КАК Ссылка,
			|	УстановкаЦенНоменклатуры.Ссылка.Номер КАК Номер,
			|	УстановкаЦенНоменклатуры.Ссылка.Дата  КАК Дата,
			|	Представление(УстановкаЦенНоменклатуры.Ссылка.Ответственный) КАК ОтветственныйПредставление
			|ИЗ
			|	Документ.УстановкаЦенНоменклатуры КАК УстановкаЦенНоменклатуры
			|ГДЕ
			|	УстановкаЦенНоменклатуры.Ссылка = &УстановкаЦенНоменклатуры
			|;
			|
			|ВЫБРАТЬ
			|	Товары.НомерСтроки                       КАК НомерСтроки,
			|	Товары.Номенклатура                      КАК Номенклатура,
			|	Товары.Характеристика                    КАК Характеристика,
			|	Товары.Упаковка                          КАК Упаковка,
			|	Товары.Цена                              КАК Цена,
			|	Товары.ВидЦены                           КАК ВидЦены,
			|	
			|	ВЫБОР КОГДА ЦеныНоменклатурыСрезПоследних.Упаковка = Товары.Упаковка ТОГДА
			|		ЦеныНоменклатурыСрезПоследних.Цена
			|	ИНАЧЕ
			|		ЦеныНоменклатурыСрезПоследних.Цена/ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1,1)*ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3,1)
			|	КОНЕЦ КАК ДействующаяЦена,
			|	
			|	ВЫРАЗИТЬ(ВЫБОР КОГДА ЦеныНоменклатурыСрезПоследних.Цена <> 0 Тогда 100*(Товары.Цена - ВЫБОР КОГДА ЦеныНоменклатурыСрезПоследних.Упаковка = Товары.Упаковка ТОГДА
			|		ЦеныНоменклатурыСрезПоследних.Цена
			|	ИНАЧЕ
			|		ЦеныНоменклатурыСрезПоследних.Цена/ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1,1)*ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3,1)
			|	КОНЕЦ)/ 
			|	
			|	ВЫБОР КОГДА ЦеныНоменклатурыСрезПоследних.Упаковка = Товары.Упаковка ТОГДА
			|		ЦеныНоменклатурыСрезПоследних.Цена
			|	ИНАЧЕ
			|		ЦеныНоменклатурыСрезПоследних.Цена/ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1,1)*ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3,1)
			|	КОНЕЦ ИНАЧЕ 0.00 КОНЕЦ КАК Число(10,2)) КАК ПроцентИзменения
			|	
			|ПОМЕСТИТЬ Товары
			|ИЗ
			|	Документ.УстановкаЦенНоменклатуры.Товары КАК Товары
			|	
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаСреза, (Номенклатура, Характеристика, ВидЦены) В (ВЫБРАТЬ Т.Номенклатура, Т.Характеристика, Т.ВидЦены ИЗ Документ.УстановкаЦенНоменклатуры.Товары КАК Т ГДЕ Т.Ссылка = &УстановкаЦенНоменклатуры И Т.ВидЦены В (&ВидыЦен))) КАК ЦеныНоменклатурыСрезПоследних
			|
			|		ПО Товары.Номенклатура      = ЦеныНоменклатурыСрезПоследних.Номенклатура
			|			И Товары.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
			|			И Товары.ВидЦены        = ЦеныНоменклатурыСрезПоследних.ВидЦены
			|
			|ГДЕ
			|	Товары.Ссылка = &УстановкаЦенНоменклатуры
			|	И Товары.ВидЦены В (&ВидыЦен)
			|	И (
			|		ВЫБОР
			|			КОГДА Товары.Номенклатура.ИспользованиеХарактеристик <> ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)
			|				И Товары.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) ТОГДА Ложь
			|			ИНАЧЕ Истина
			|		КОНЕЦ
			|	)
			|;
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Товары.ВидЦены КАК ВидЦены
			|ИЗ
			|	Товары КАК Товары
			|ГДЕ
			|	Товары.ВидЦены В (&ВидыЦен)
			|	И Товары.ПроцентИзменения <> 0 ИЛИ &Все
			|УПОРЯДОЧИТЬ ПО
			|	Товары.ВидЦены.РеквизитДопУпорядочивания
			|;
			|
			|ВЫБРАТЬ
			|	Товары.Номенклатура                      КАК Номенклатура,
			|	Товары.Характеристика                    КАК Характеристика,
			|	Товары.Номенклатура.НаименованиеПолное   КАК ПолноеНаименованиеНоменклатуры,
			|	Товары.Характеристика.НаименованиеПолное КАК ПолноеНаименованиеХарактеристики,
			|	Товары.Номенклатура.Код                  КАК Код,
			|	Товары.Номенклатура.Артикул              КАК Артикул,
			|	Товары.Упаковка                          КАК Упаковка,
			|	Товары.Номенклатура.ЕдиницаИзмерения     КАК ЕдиницаИзмерения,
			|	Товары.Цена                              КАК Цена,
			|	Товары.ВидЦены                           КАК ВидЦены,
			|	Товары.ДействующаяЦена                   КАК СтараяЦена,
			|	Товары.ПроцентИзменения                  КАК ПроцентИзменения
			|	
			|ИЗ
			|	Товары КАК Товары
			|ГДЕ
			|	Товары.ПроцентИзменения <> 0 ИЛИ &Все
			|УПОРЯДОЧИТЬ ПО
			|	Товары.НомерСтроки
			|
			|ИТОГИ ПО
			|	Номенклатура, Характеристика");
			
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки1",
				Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
					"ЦеныНоменклатурыСрезПоследних.Упаковка",
					"ЦеныНоменклатурыСрезПоследних.Номенклатура"));
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки3",
				Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
					"Товары.Упаковка",
					"Товары.Номенклатура"));
			Запрос.УстановитьПараметр("УстановкаЦенНоменклатуры", УстановкаЦенНоменклатуры);
			Запрос.УстановитьПараметр("ДатаСреза",                УстановкаЦенНоменклатуры.Дата - 1);
			Запрос.УстановитьПараметр("ВидыЦен",                  ВидыЦен);
			Запрос.УстановитьПараметр("Все",                      Не ПараметрыПечати.ПечататьТолькоИзмененныеЦены);
			РезультатЗапроса = Запрос.ВыполнитьПакет();
			
			РезультатыЗапроса = Новый Структура;
			РезультатыЗапроса.Вставить("Шапка",        РезультатЗапроса[0]);
			РезультатыЗапроса.Вставить("ВидыЦен",      РезультатЗапроса[2]);
			РезультатыЗапроса.Вставить("Номенклатура", РезультатЗапроса[3]);
			
			Параметры = Новый Структура;
			Параметры.Вставить("НомерСтрокиНачало",        НомерСтрокиНачало);
			Параметры.Вставить("ТабДокумент",              ТабДокумент);
			Параметры.Вставить("Макет",                    Макет);
			Параметры.Вставить("ДеревоНастроек",           ДеревоНастроек);
			Параметры.Вставить("УстановкаЦенНоменклатуры", УстановкаЦенНоменклатуры);
			Параметры.Вставить("ОбъектыПечати",            ОбъектыПечати);
			Параметры.Вставить("ПараметрыПечати",          ПараметрыПечати);
			Параметры.Вставить("РезультатЗапроса",         РезультатыЗапроса);
			
			Шапка = Параметры.РезультатЗапроса.Шапка.Выбрать();
			Шапка.Следующий();
			
			Если Параметры.ПараметрыПечати.ВыводитьШапку Тогда
				ОбластьМакета = Параметры.Макет.ПолучитьОбласть("Заголовок");
				ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(
					Параметры.ТабДокумент, Параметры.Макет, ОбластьМакета, Шапка.Ссылка);
				ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(
					Шапка, НСтр("ru='Установка цен номенклатуры';uk='Встановлення цін номенклатури'"),КодЯзыкаПечать);					
//kuza 04.06.2021 finish ООП 59707
				Параметры.ТабДокумент.Вывести(ОбластьМакета);
			КонецЕсли;
			
			ВывестиТабличнуюЧастьВПечатнуюФормуУстановкаЦенНоменклатуры(Параметры);
			
			Если Параметры.ПараметрыПечати.ВыводитьШапку Тогда
				ОбластьМакета = Параметры.Макет.ПолучитьОбласть("Подписи");
				ОбластьМакета.Параметры.Заполнить(Шапка);
				Параметры.ТабДокумент.Вывести(ОбластьМакета);
			КонецЕсли;
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(Параметры.ТабДокумент, Параметры.НомерСтрокиНачало, Параметры.ОбъектыПечати, Параметры.УстановкаЦенНоменклатуры);
			
		КонецЦикла;
	
	Иначе
		
		ОбщегоНазначенияУТ.ПронумероватьТаблицуЗначений(ДанныеДляПечати.Товары, "НомерСтроки");
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Неопределено КАК Ссылка,
		|	Неопределено КАК Номер,
		|	Неопределено КАК Дата,
		|	Неопределено КАК ОтветственныйПредставление
		|;
		|
		|ВЫБРАТЬ
		|	Товары.НомерСтроки    КАК НомерСтроки,
		|	Товары.Номенклатура   КАК Номенклатура,
		|	Товары.Характеристика КАК Характеристика,
		|	Товары.Упаковка       КАК Упаковка,
		|	Товары.Цена           КАК Цена,
		|	Товары.ВидЦены        КАК ВидЦены
		|ПОМЕСТИТЬ ТаблицаДанных
		|ИЗ
		|	&Товары КАК Товары
		|;
		|
		|ВЫБРАТЬ
		|	Товары.НомерСтроки                       КАК НомерСтроки,
		|	Товары.Номенклатура                      КАК Номенклатура,
		|	Товары.Характеристика                    КАК Характеристика,
		|	Товары.Упаковка                          КАК Упаковка,
		|	Товары.Цена                              КАК Цена,
		|	Товары.ВидЦены                           КАК ВидЦены,
		|	
		|	ВЫБОР КОГДА ЦеныНоменклатурыСрезПоследних.Упаковка = Товары.Упаковка ТОГДА
		|		ЦеныНоменклатурыСрезПоследних.Цена
		|	ИНАЧЕ
		|		ЦеныНоменклатурыСрезПоследних.Цена/ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1,1)*ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3,1)
		|	КОНЕЦ КАК ДействующаяЦена,
		|	
		|	ВЫРАЗИТЬ(ВЫБОР КОГДА ЦеныНоменклатурыСрезПоследних.Цена <> 0 Тогда 100*(Товары.Цена - ВЫБОР КОГДА ЦеныНоменклатурыСрезПоследних.Упаковка = Товары.Упаковка ТОГДА
		|		ЦеныНоменклатурыСрезПоследних.Цена
		|	ИНАЧЕ
		|		ЦеныНоменклатурыСрезПоследних.Цена/ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1,1)*ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3,1)
		|	КОНЕЦ)/ 
		|	
		|	ВЫБОР КОГДА ЦеныНоменклатурыСрезПоследних.Упаковка = Товары.Упаковка ТОГДА
		|		ЦеныНоменклатурыСрезПоследних.Цена
		|	ИНАЧЕ
		|		ЦеныНоменклатурыСрезПоследних.Цена/ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки1,1)*ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки3,1)
		|	КОНЕЦ ИНАЧЕ 0.00 КОНЕЦ КАК Число(10,2)) КАК ПроцентИзменения
		|	
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	ТаблицаДанных КАК Товары
		|	
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаСреза, (Номенклатура, Характеристика, ВидЦены) В (ВЫБРАТЬ Т.Номенклатура, Т.Характеристика, Т.ВидЦены ИЗ ТаблицаДанных КАК Т ГДЕ Т.ВидЦены В (&ВидыЦен))) КАК ЦеныНоменклатурыСрезПоследних
		|
		|		ПО Товары.Номенклатура      = ЦеныНоменклатурыСрезПоследних.Номенклатура
		|			И Товары.Характеристика = ЦеныНоменклатурыСрезПоследних.Характеристика
		|			И Товары.ВидЦены        = ЦеныНоменклатурыСрезПоследних.ВидЦены
		|
		|ГДЕ
		|	Товары.ВидЦены В (&ВидыЦен)
		|	И (
		|		ВЫБОР
		|			КОГДА Товары.Номенклатура.ИспользованиеХарактеристик <> ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать)
		|				И Товары.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) ТОГДА Ложь
		|			ИНАЧЕ Истина
		|		КОНЕЦ
		|	)
		|;
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Товары.ВидЦены КАК ВидЦены
		|ИЗ
		|	Товары КАК Товары
		|ГДЕ
		|	Товары.ВидЦены В (&ВидыЦен)
		|	И Товары.ПроцентИзменения <> 0 ИЛИ &Все
		|УПОРЯДОЧИТЬ ПО
		|	Товары.ВидЦены.РеквизитДопУпорядочивания
		|;
		|
		|ВЫБРАТЬ
		|	Товары.Номенклатура                      КАК Номенклатура,
		|	Товары.Характеристика                    КАК Характеристика,
		|	Товары.Номенклатура.НаименованиеПолное   КАК ПолноеНаименованиеНоменклатуры,
		|	Товары.Характеристика.НаименованиеПолное КАК ПолноеНаименованиеХарактеристики,
		|	Товары.Номенклатура.Код                  КАК Код,
		|	Товары.Номенклатура.Артикул              КАК Артикул,
		|	Товары.Упаковка                          КАК Упаковка,
		|	Товары.Номенклатура.ЕдиницаИзмерения     КАК ЕдиницаИзмерения,
		|	Товары.Цена                              КАК Цена,
		|	Товары.ВидЦены                           КАК ВидЦены,
		|	Товары.ДействующаяЦена                   КАК СтараяЦена,
		|	Товары.ПроцентИзменения                  КАК ПроцентИзменения
		|	
		|ИЗ
		|	Товары КАК Товары
		|ГДЕ
		|	Товары.ПроцентИзменения <> 0 ИЛИ &Все
		|УПОРЯДОЧИТЬ ПО
		|	Товары.НомерСтроки
		|
		|ИТОГИ ПО
		|	Номенклатура, Характеристика");
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки1",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
				"ЦеныНоменклатурыСрезПоследних.Упаковка",
				"ЦеныНоменклатурыСрезПоследних.Номенклатура"));
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки3",
				Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
					"Товары.Упаковка",
					"Товары.Номенклатура"));
		Запрос.УстановитьПараметр("ДатаСреза",                ДанныеДляПечати.ДатаСтарыхЦен);
		Запрос.УстановитьПараметр("ВидыЦен",                  ВидыЦен);
		Запрос.УстановитьПараметр("Товары",                   ДанныеДляПечати.Товары);
		Запрос.УстановитьПараметр("Все",                      Не ПараметрыПечати.ПечататьТолькоИзмененныеЦены);
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		РезультатыЗапроса = Новый Структура;
		РезультатыЗапроса.Вставить("Шапка",        РезультатЗапроса[0]);
		РезультатыЗапроса.Вставить("ВидыЦен",      РезультатЗапроса[3]);
		РезультатыЗапроса.Вставить("Номенклатура", РезультатЗапроса[4]);
		
		Параметры = Новый Структура;
		Параметры.Вставить("НомерСтрокиНачало",        НомерСтрокиНачало);
		Параметры.Вставить("ТабДокумент",              ТабДокумент);
		Параметры.Вставить("Макет",                    Макет);
		Параметры.Вставить("ДеревоНастроек",           ДеревоНастроек);
		Параметры.Вставить("УстановкаЦенНоменклатуры", УстановкаЦенНоменклатуры);
		Параметры.Вставить("ОбъектыПечати",            ОбъектыПечати);
		Параметры.Вставить("ПараметрыПечати",          ПараметрыПечати);
		Параметры.Вставить("РезультатЗапроса",         РезультатыЗапроса);
		
		Шапка = Параметры.РезультатЗапроса.Шапка.Выбрать();
		Шапка.Следующий();
		
		Если Параметры.ПараметрыПечати.ВыводитьШапку Тогда
			ОбластьМакета = Параметры.Макет.ПолучитьОбласть("Заголовок");
			ОбластьМакета.Параметры.ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Изменение цен номенклатуры за %1';uk='Зміна цін номенклатури за %1'"),
				Формат(ДанныеДляПечати.ДатаСтарыхЦен, НСтр("ru='ДФ=dd.MM.yyyy';uk='ДФ=dd.MM.yyyy'")));
			Параметры.ТабДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		
		ВывестиТабличнуюЧастьВПечатнуюФормуУстановкаЦенНоменклатуры(Параметры);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(Параметры.ТабДокумент, Параметры.НомерСтрокиНачало, Параметры.ОбъектыПечати, Параметры.УстановкаЦенНоменклатуры);
		
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции

// Функция помещает необходимые данные в структуру. Структура помещается во временное хранилище.
//
// Возвращаемое значение:
//   Адрес   - адрес структуры данных во временном хранилище
//
Функция ДанныеДляПечатиЭтикеток(МассивДокументов) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УстановкаЦенНоменклатурыТовары.Номенклатура   КАК Номенклатура,
	|	УстановкаЦенНоменклатурыТовары.Характеристика КАК Характеристика,
	|	УстановкаЦенНоменклатурыТовары.Упаковка       КАК Упаковка,
	|	МИНИМУМ(УстановкаЦенНоменклатурыТовары.НомерСтроки) КАК Порядок,
	|	СУММА(1)                                            КАК Количество
	|ИЗ
	|	Документ.УстановкаЦенНоменклатуры.Товары КАК УстановкаЦенНоменклатурыТовары
	|ГДЕ
	|	УстановкаЦенНоменклатурыТовары.Ссылка В(&МассивДокументов)
	|	И ВЫБОР
	|		КОГДА УстановкаЦенНоменклатурыТовары.Номенклатура.ИспользованиеХарактеристик В (ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры), ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры), ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры))
	|			И УстановкаЦенНоменклатурыТовары.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	УстановкаЦенНоменклатурыТовары.Номенклатура,
	|	УстановкаЦенНоменклатурыТовары.Характеристика,
	|	УстановкаЦенНоменклатурыТовары.Упаковка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УстановкаЦенНоменклатуры.ВидЦены КАК ВидЦены
	|ИЗ
	|	Документ.УстановкаЦенНоменклатуры.ВидыЦен КАК УстановкаЦенНоменклатуры
	|ГДЕ
	|	УстановкаЦенНоменклатуры.Ссылка В(&МассивДокументов)";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаРеквизитыДокументов = МассивРезультатов[1].Выгрузить();
	МассивВидовЦен = ТаблицаРеквизитыДокументов.ВыгрузитьКолонку(0);
	
	// Подготовка структуры действий для обработки печати ценников и этикеток
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьОрганизацию", Неопределено);
	СтруктураДействий.Вставить("ЗаполнитьСклад",       Неопределено);
	СтруктураДействий.Вставить("ЗаполнитьВидЦены",     ?(МассивВидовЦен.Количество() = 1, МассивВидовЦен[0], Неопределено));
	СтруктураДействий.Вставить("ПоказыватьКолонкуКоличествоВДокументе", Ложь);
	СтруктураДействий.Вставить("УстановитьРежимПечатиИзДокумента");
	СтруктураДействий.Вставить("УстановитьРежим", "ПечатьЭтикеток");
	СтруктураДействий.Вставить("ЗаполнитьКоличествоЭтикетокПоОстаткамНаСкладе");
	СтруктураДействий.Вставить("ЗаполнитьТаблицуТоваров");
	
	// Подготовка данных для заполенения табличной части обработки печати ценников и этикеток
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Товары", МассивРезультатов[0].Выгрузить());
	СтруктураРезультат.Вставить("СтруктураДействий", СтруктураДействий);
	
	Возврат ПоместитьВоВременноеХранилище(СтруктураРезультат);
	
КонецФункции

// Функция помещает необходимые данные в структуру. Структура помещается во временное хранилище.
//
// Возвращаемое значение:
//   Адрес   - адрес структуры данных во временном хранилище
//
Функция ДанныеДляПечатиЦенников(МассивДокументов) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	УстановкаЦенНоменклатурыТовары.Номенклатура   КАК Номенклатура,
	|	УстановкаЦенНоменклатурыТовары.Характеристика КАК Характеристика,
	|	УстановкаЦенНоменклатурыТовары.Упаковка       КАК Упаковка,
	|	МИНИМУМ(УстановкаЦенНоменклатурыТовары.НомерСтроки) КАК Порядок,
	|	СУММА(1)                                            КАК Количество
	|ИЗ
	|	Документ.УстановкаЦенНоменклатуры.Товары КАК УстановкаЦенНоменклатурыТовары
	|ГДЕ
	|	УстановкаЦенНоменклатурыТовары.Ссылка В(&МассивДокументов)
	|	И ВЫБОР
	|		КОГДА УстановкаЦенНоменклатурыТовары.Номенклатура.ИспользованиеХарактеристик В (ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры), ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры), ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры))
	|			И УстановкаЦенНоменклатурыТовары.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	УстановкаЦенНоменклатурыТовары.Номенклатура,
	|	УстановкаЦенНоменклатурыТовары.Характеристика,
	|	УстановкаЦенНоменклатурыТовары.Упаковка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УстановкаЦенНоменклатуры.ВидЦены КАК ВидЦены
	|ИЗ
	|	Документ.УстановкаЦенНоменклатуры.ВидыЦен КАК УстановкаЦенНоменклатуры
	|ГДЕ
	|	УстановкаЦенНоменклатуры.Ссылка В(&МассивДокументов)";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ТаблицаРеквизитыДокументов = МассивРезультатов[1].Выгрузить();
	МассивВидовЦен = ТаблицаРеквизитыДокументов.ВыгрузитьКолонку(0);
	
	// Подготовка структуры действий для обработки печати ценников и этикеток
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ЗаполнитьОрганизацию", Неопределено);
	СтруктураДействий.Вставить("ЗаполнитьСклад",       Неопределено);
	СтруктураДействий.Вставить("ЗаполнитьВидЦены",     ?(МассивВидовЦен.Количество() = 1, МассивВидовЦен[0], Неопределено));
	СтруктураДействий.Вставить("ПоказыватьКолонкуКоличествоВДокументе", Ложь);
	СтруктураДействий.Вставить("УстановитьРежимПечатиИзДокумента");
	СтруктураДействий.Вставить("УстановитьРежим", "ПечатьЦенников");
	СтруктураДействий.Вставить("ЗаполнитьКоличествоЦенниковПоДокументу");
	СтруктураДействий.Вставить("ЗаполнитьТаблицуТоваров");
	
	// Подготовка данных для заполенения табличной части обработки печати ценников и этикеток
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Товары", МассивРезультатов[0].Выгрузить());
	СтруктураРезультат.Вставить("СтруктураДействий", СтруктураДействий);
	
	Возврат ПоместитьВоВременноеХранилище(СтруктураРезультат);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
