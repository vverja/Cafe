#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Документы.ПриходныйОрдерНаТовары.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	
	Документы.УстановкаЦенНоменклатуры.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	
	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);
	
	Обработки.СправочноеРазмещениеНоменклатуры.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	
	Документы.РасходныйОрдерНаТовары.ДобавитьКомандуСоздатьНаОснованииРасходныйОрдерНаТовары(КомандыСоздатьНаОсновании);
	
	Документы.ПоручениеЭкспедитору.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	
КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.СборкаТоваров) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.СборкаТоваров.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.СборкаТоваров);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьСборкуРазборку";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ДобавитьКомандуСоздатьНаОснованииЗаказа(КомандыСоздатьНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.СборкаТоваров) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "ВводНаОснованииУТКлиент.СборкаТоваровСоздатьНаОснованииЗаказа";
		КомандаСоздатьНаОсновании.Идентификатор = "СоздатьНаОснованииЗаказа";
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.СборкаТоваров);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьСборкуРазборку";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуОстаткиТоваровОрганизаций(КомандыОтчетов);

	КомандаОтчет = ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСостояниеВыполненияВнутреннихРаспоряжений(КомандыОтчетов);
	Если КомандаОтчет <> Неопределено Тогда
		КомандаОтчет.Порядок = 1;
	КонецЕсли;
	
КонецПроцедуры

#Область СменаСтатуса

// Формирует запрос проверки при смене статуса списка документов
//
// Параметры:
// 		МассивДокументов - Массив - Массив ссылок на документы, которые надо проверять
// 		НовыйСтатус - Строка - Имя нового статуса
// 		ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
// 		Запрос - Запрос проверки перед сменой статуса
//
Функция СформироватьЗапросПроверкиПриСменеСтатуса(МассивДокументов, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	ЗначениеНовогоСтатуса = Перечисления.СтатусыСборокТоваров[НовыйСтатус];
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокументов.Ссылка                КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Ссылка) КАК Представление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаДокументов.Статус) КАК ПредставлениеТекущегоСтатуса,
	|	ПРЕДСТАВЛЕНИЕ(&Статус)                  КАК ПредставлениеНовогоСтатуса,
	|	ВЫБОР
	|		КОГДА ТаблицаДокументов.Статус = &Статус ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ                                   КАК СтатусСовпадает,
	|	ТаблицаДокументов.Проведен              КАК Проведен,
	|	ТаблицаДокументов.ПометкаУдаления       КАК ПометкаУдаления,
	|	ИСТИНА                                  КАК ЗаписьПроведением
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаДокументов
	|ГДЕ
	|	ТаблицаДокументов.Ссылка В(&МассивДокументов)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Статус", ЗначениеНовогоСтатуса);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	Возврат Запрос;
	
КонецФункции// СформироватьЗапросПроверкиПриСменеСтатуса();

// Возвращает результат проверки при смене статуса документа
//
// Параметры:
// 		ВыборкаПроверки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
// 		НовыйСтатус - Перечисление - Новый статус
// 		ДополнительныеПараметры - Структура - Структура дополнительных параметров
//
// Возвращаемое значение:
// 		Булево - Истина, в случае успешного завершения проверки
//
Функция ПроверкаПередСменойСтатуса(ВыборкаПроверки, НовыйСтатус, ДополнительныеПараметры) Экспорт
	
	Возврат Истина; // Для документа "СборкаТоваров" отсутствуют дополнительные проверки
	
КонецФункции

#КонецОбласти

#Область Серии

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад,Статус,ТипОперации,Дата";
	
	Возврат ИменаРеквизитов;
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение
//			Тип Структура
//				Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	ИспользоватьОрдернуюСхемуПриПриемке = СкладыСервер.ИспользоватьОрдернуюСхемуПриПоступлении(Объект.Склад, Объект.Дата);
	ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Склад, Ложь);
	
	Шапка = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	Шапка.ПолноеИмяОбъекта = "Документ.СборкаТоваров";
	
	Если Объект.ТипОперации = Перечисления.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих Тогда
		Шапка.ИспользоватьСерииНоменклатуры = ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры
											И (Не ИспользоватьОрдернуюСхемуПриПриемке
											Или ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям)
											И Объект.Статус = Перечисления.СтатусыСборокТоваров.СобраноРазобрано;
											
		Шапка.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям
												И Объект.Статус = Перечисления.СтатусыСборокТоваров.СобраноРазобрано;
		Шапка.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаСобранныхКомплектов);
	Иначе
		Шапка.ИспользоватьСерииНоменклатуры = ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры;
		Шапка.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
		Шапка.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаКомплектовДляРазборки);
	КонецЕсли;	
	
	Шапка.ПоляСвязи.Добавить("Назначение");
	
	Шапка.ЭтоНакладная = Истина;
	Шапка.ПланированиеОтгрузки = Объект.Статус = Перечисления.СтатусыСборокТоваров.ВРаботе;
	Шапка.ПланированиеОтбора   = Объект.Статус = Перечисления.СтатусыСборокТоваров.ВРаботе;
	Шапка.ФактОтбора           = Объект.Статус = Перечисления.СтатусыСборокТоваров.СобраноРазобрано;
	
	Если Объект.ТипОперации = Перечисления.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих Тогда
		Шапка.РегистрироватьСерии = Истина;
	Иначе
		Шапка.РегистрироватьСерии = НоменклатураКлиентСервер.НеобходимоРегистрироватьСерии(Шапка);
	КонецЕсли;
	
	Шапка.ТоварВШапке = Истина;
	Шапка.Дата = Объект.Дата;
	Шапка.ИменаПолейДляОпределенияРаспоряжения.Добавить("ЗаказНаСборку");
	Шапка.ИменаПолейДляОпределенияРаспоряжения.Добавить("Ссылка");
	
	ТЧ = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ТЧ.ПолноеИмяОбъекта = "Документ.СборкаТоваров";
	Если Объект.ТипОперации = Перечисления.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих Тогда
		ТЧ.ИспользоватьСерииНоменклатуры = ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры;
		ТЧ.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
		ТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаКомплектующихДляСборки);
	Иначе
		ТЧ.ИспользоватьСерииНоменклатуры = ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры
											И (Не ИспользоватьОрдернуюСхемуПриПриемке
											Или ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям)
											И Объект.Статус = Перечисления.СтатусыСборокТоваров.СобраноРазобрано;
											
		ТЧ.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям
											И Объект.Статус = Перечисления.СтатусыСборокТоваров.СобраноРазобрано;
		ТЧ.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПриемкаКомплектующихПослеРазборки);
	КонецЕсли;	
	
	ТЧ.ПоляСвязи.Добавить("Назначение");
	
	ТЧ.ЭтоНакладная = Истина;
	ТЧ.ПланированиеОтгрузки = Объект.Статус = Объект.Статус = Перечисления.СтатусыСборокТоваров.ВРаботе;
	ТЧ.ПланированиеОтбора   = Объект.Статус = Объект.Статус = Перечисления.СтатусыСборокТоваров.ВРаботе;
	ТЧ.ФактОтбора           = Объект.Статус = Перечисления.СтатусыСборокТоваров.СобраноРазобрано;
	
	Если Объект.ТипОперации = Перечисления.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих Тогда
		ТЧ.РегистрироватьСерии = НоменклатураКлиентСервер.НеобходимоРегистрироватьСерии(ТЧ);
	Иначе
		ТЧ.РегистрироватьСерии = Истина;
	КонецЕсли;
	
	ТЧ.ТоварВШапке = Ложь;
	ТЧ.Дата = Объект.Дата;
	ТЧ.ИменаПолейДляОпределенияРаспоряжения.Добавить("ЗаказНаСборку");
	ТЧ.ИменаПолейДляОпределенияРаспоряжения.Добавить("Ссылка");
	
	ПараметрыУказанияСерий = Новый Структура;
	
	ПараметрыУказанияСерий.Вставить("Шапка",Шапка);
	ПараметрыУказанияСерий.Вставить("ТЧ",ТЧ);
	Возврат ПараметрыУказанияСерий;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	Если ПараметрыУказанияСерий.ТоварВШапке Тогда
		
		Если ПараметрыУказанияСерий.СкладскиеОперации.Найти(Перечисления.СкладскиеОперации.ПриемкаСобранныхКомплектов) <> Неопределено Тогда
			
			ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийШапкиСборки();
			
		Иначе
			
			ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийШапкиРазборки();
			
		КонецЕсли;
		
	Иначе
		
		Если ПараметрыУказанияСерий.СкладскиеОперации.Найти(Перечисления.СкладскиеОперации.ОтгрузкаКомплектующихДляСборки) <> Неопределено Тогда
			
			ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийТЧСборки();
		
		Иначе
			
			ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийТЧРазборки();
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ЗаполнениеПоЗаказу

// Формирует структуру для создания сборки товаров по одному или нескольким заказам на сборку
// Если в переданных заказах отличаются реквизиты шапки, выдается сообщение об ошибке
//
// Параметры:
//  МассивСсылок - Массив - заказы на перемещение, по которым необходимо ввести накладную
//   РеквизитыШапки - Структура - структура, в которую будут помещены реквизиты шапки из массива заказов
//
// Возвращаемое значение:
//  Булево - Ложь, если в переданных заказах отличаются реквизиты шапки
//
Функция ДанныеЗаполненияНакладной(МассивСсылок, СвойстваЗаказов = Неопределено) Экспорт
	
	ТекстыЗапроса = Новый СписокЗначений();
	ТекстыЗапроса.Добавить(СозданиеНаОснованииПроверкаОтгрузить(),       "ТаблицаЕстьОтгрузить");
	ТекстыЗапроса.Добавить(СозданиеНаОснованииПроверкаРеквизитовШапки(), "ТаблицаРеквизитыШапки");
	
	СначалаОрдера = Константы.ПорядокОформленияНакладныхРасходныхОрдеров.Получить()
		= Перечисления.ПорядокОформленияНакладныхРасходныхОрдеров.СначалаОрдера;
	
	Если СначалаОрдера Тогда
		ТекстыЗапроса.Добавить(СозданиеНаОснованииПроверкаНаличияОрдеров(), "ТаблицаЕстьОрдера");
	КонецЕсли;
	
	Таблицы = Новый Структура();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	Запрос.УстановитьПараметр("НачалоТекущегоДня", НачалоДня(ТекущаяДатаСеанса()));
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, Таблицы);
	
	РеквизитыШапки = Новый Структура("ТипОперации, Организация, Склад, Сделка, Подразделение, ВариантКомплектации, Статус, Проведен, НаправлениеДеятельности");
	ЗаполнитьЗначенияСвойств(РеквизитыШапки, Таблицы.ТаблицаРеквизитыШапки[0]);
	
	РеквизитыШапки.Вставить("ЕстьОтгрузить", Таблицы.ТаблицаЕстьОтгрузить.Количество() > 0);
	РеквизитыШапки.Вставить("ЕстьОрдера",    Не СначалаОрдера Или Таблицы.ТаблицаЕстьОрдера.Количество() > 0);
	
	Возврат РеквизитыШапки;
	
КонецФункции

// Проверяет возможность создания сборки на основании структуры данных для заполнения сборки.
//
//  Параметры:
//   РеквизитыШапки - Структура.
//
//  Возвращаемое значение:
//   Булево - Истина, если одну сборку создать возможно, иначе - ложь.
//
Функция ПроверитьДанныеЗаполненияНакладной(РеквизитыШапки) Экспорт
	
	ТекстыОшибок = Новый Массив();
	Если Не РеквизитыШапки.ЕстьОтгрузить Тогда
		ТекстыОшибок.Добавить(ОбеспечениеСервер.ТекстОшибкиНетТоваровДоступныхДляОтгрузки());
	КонецЕсли;
	
	Если РеквизитыШапки.ТипОперации = Перечисления.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие Тогда
		ТекстПредупреждения = НСтр("ru='Нет данных для заполнения документа, так как разборка по заказу еще не начата.';uk='Немає даних для заповнення документа, так як розбирання по замовленню ще не розпочато.'");
	Иначе
		ТекстПредупреждения = НСтр("ru='Нет данных для заполнения документа, так как сборка по заказу еще не начата.';uk='Немає даних для заповнення документа, так як збирання по замовленню ще не розпочато.'");
	КонецЕсли;
	
	Результат = Новый Структура("ЕстьОшибки, ТекстОшибки, ЕстьПредупреждения, ТекстПредупреждения",
		ТекстыОшибок.Количество() > 0, ТекстыОшибок, Не РеквизитыШапки.ЕстьОрдера, ТекстПредупреждения);
	
	Возврат Результат;
	
КонецФункции

// Возвращает результат запроса для заполнения накладной по заказам/ордерам
//
// Параметры:
//  ДанныеОтбора   - Структура - поля, по которым будут отобраны остатки заказов для заполнения документа
//  КонтекстВызова - Строка - определяет контекст вызова процедуры:
//                             "СозданиеНаОсновании" - создание на основании из формы заказа, из списка заказов и из спсика распоряжений к оформлению,
//                             "Заполнение" по заказам из формы накладной при взведении флага "по заказу",
//                             "Подбор" подбор по заказам/ордерам из формы накладной,
//                             "Перезаполнение" по отгрузке и приемке из спсика распоряжений к оформлению.
//
// Возвращаемое значение:
//  Результат - Выборка, Структура - структура содержащая таблицы результатов выполнения запроса.
//
Функция РезультатЗапросаПоОстаткамЗаказов(ДанныеОтбора, КонтекстВызова) Экспорт
	
	// Описание всех возможных параметров запроса.
	ПараметрыЗапросов = Новый Структура("ОтобратьПоЗаказу, МассивЗаказов,
	                                    |Организация, Подразделение, Склад, ТипОперации,
	                                    |Регистратор, ТоварыНакладной");
	ПараметрыЗапросов.Вставить("УчитыватьСобирается", Ложь);
	ПараметрыЗапросов.Вставить("ЗаполнятьПоСобирается", Ложь);
	
	СписокЗапросов   = Новый СписокЗначений();
	ИменаПодзапросов = Новый Массив();
	
	// Обработка параметров вызова метода.
	Если КонтекстВызова = "СозданиеНаОсновании" Тогда
		
		ПараметрыЗапросаДляСозданияНаОсновании(ПараметрыЗапросов, СписокЗапросов, ИменаПодзапросов, ДанныеОтбора);
		
	ИначеЕсли КонтекстВызова = "Подбор" Тогда
		
		ПараметрыЗапросаДляПодбора(ПараметрыЗапросов, СписокЗапросов, ИменаПодзапросов, ДанныеОтбора);
		
	ИначеЕсли КонтекстВызова = "ПерезаполнениеПоОрдерам" Тогда
		
		ПараметрыЗапросаДляПерезаполнения(ПараметрыЗапросов, СписокЗапросов, ИменаПодзапросов, ДанныеОтбора);
		
	КонецЕсли;
	
	// Описание всех возможных текстов запросов.
	ТекстыЗапросов = Новый Соответствие();
	ТекстыЗапросов.Вставить("ВтЗаказыОтбор",                        ТекстЗапросаВременнойТаблицыРаспоряжений());
	ТекстыЗапросов.Вставить("ВтНакладная",                          ТекстЗапросаВременнойТаблицыНакладной());
	ТекстыЗапросов.Вставить("ТаблицаСобраноРазобраноКомплектующие", ТекстЗапросаСбораноРазобраноКомплектующие());
	ТекстыЗапросов.Вставить("ТаблицаСобраноРазобраноКомплект",      ТекстЗапросаСбораноРазобраноКомплект());
	ТекстыЗапросов.Вставить("ТаблицаКомплект",                      ТекстЗапросаОстаткиРегистраЗаказыИСторноДокументаКомплект());
	ТекстыЗапросов.Вставить("ТаблицаСерии",                         ТекстЗапросаОстаткиСерийРазбираемогоКомплектаИСторноДокумента());
	ТекстыЗапросов.Вставить("ТаблицаСерииРазборано",                ТекстЗапросаРазбораноСерии());
	
	// Используемые подзапросы для формирования "таблицы оформить" должны быть обернуты методом ТекстЗапросаОбъединения(...).
	ТекстыПодзапросов = Новый Соответствие();
	ТекстыПодзапросов.Вставить("БлокРегистрЗаказыКомплектующие",          ТекстЗапросаОстаткиРегистраЗаказыКомплектующие());
	ТекстыПодзапросов.Вставить("БлокСторноНакладнаяКомплектующие",        ТекстЗапросаСторноДвиженийНакладнаяКомплектующие());
	ТекстыПодзапросов.Вставить("БлокРегистрЗаказыКомплект",               ТекстЗапросаОстаткиРегистраЗаказыКомплект());
	ТекстыПодзапросов.Вставить("БлокСторноНакладнаяКомплект",             ТекстЗапросаСторноДвиженийНакладнаяКомплект());
	ТекстыПодзапросов.Вставить("БлокНовыеДвиженияНакладнаяКомплектующие", ТекстЗапросаНовыеДвиженияНакладнаяКомплектующие());
	
	Для Каждого Элемент Из СписокЗапросов Цикл
		Элемент.Представление = ТекстыЗапросов[Элемент.Значение];
	КонецЦикла;
	
	Элемент = СписокЗапросов.НайтиПоЗначению("ТаблицаКомплектующие");
	Если Элемент <> Неопределено Тогда
		Элемент.Представление = ТекстЗапросаОбъединения(ИменаПодзапросов, ТекстыПодзапросов);
	КонецЕсли;
	
	// Инициализация запроса.
	Запрос = Новый Запрос();
	
	Для Каждого Параметр Из ПараметрыЗапросов Цикл
		Запрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);
	КонецЦикла;
	
	Для Каждого Элемент Из СписокЗапросов Цикл
		Запрос.Текст = Запрос.Текст + Элемент.Представление;
	КонецЦикла;
	
	// Выполнение запроса, возврат результата.
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	СтруктураРезультата = Новый Структура();
	Для Каждого Элемент Из СписокЗапросов Цикл
		СтруктураРезультата.Вставить(Элемент.Значение, РезультатЗапроса[СписокЗапросов.Индекс(Элемент)].Выгрузить());
	КонецЦикла;
	
	Возврат СтруктураРезультата;
	
КонецФункции

// Проверяет наличие расходных ордеров по распоряжению.
//
// Параметры:
//  Распоряжения - ДокументСсылка - массив распоряжений-заказов.
//
// Возвращаемое значение:
//  Булево - Истина, если есть ордера, Ложь - если нет ордеров.
//
Функция ЕстьОрдерПоРаспоряжению(Распоряжения) Экспорт
	
	Запрос = новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.ОстаткиИОбороты(, , , ,
		|	ДокументОтгрузки В (&Заказы)
		|	И Склад В(
		|		ВЫБРАТЬ
		|			СпрСклады.Ссылка КАК Склад
		|		ИЗ
		|			Справочник.Склады КАК СпрСклады
		|		ГДЕ
		|			СпрСклады.ИспользоватьОрдернуюСхемуПриОтгрузке
		|			И СпрСклады.ДатаНачалаОрдернойСхемыПриОтгрузке <= &НачалоТекущегоДня)) КАК Таблица
		|ГДЕ
		|	Таблица.КОтгрузкеРасход + Таблица.СобраноПриход > 0
		|	
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению.ОстаткиИОбороты(, , , ,
		|	ДокументПоступления В (&Заказы)
		|	И Склад В(
		|		ВЫБРАТЬ
		|			СпрСклады.Ссылка КАК Склад
		|		ИЗ
		|			Справочник.Склады КАК СпрСклады
		|		ГДЕ
		|			СпрСклады.ИспользоватьОрдернуюСхемуПриПоступлении
		|			И СпрСклады.ДатаНачалаОрдернойСхемыПриПоступлении <= &НачалоТекущегоДня)) КАК Таблица
		|ГДЕ
		|	Таблица.КПоступлениюРасход > 0";
	
	Запрос.УстановитьПараметр("Заказы", Распоряжения);
	Запрос.УстановитьПараметр("НачалоТекущегоДня", НачалоДня(ТекущаяДатаСеанса()));
	УстановитьПривилегированныйРежим(Истина);
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

#КонецОбласти

#Область РаспоряжениеНаОтгрузку

// Возвращает значение распоряжения на поступление или отгрузку.
//
//Параметры:
//	ЗначенияПолейДляОпределенияРаспоряжения - Структура - состав полей определяется значением
//		поля ИменаПолейДляОпределенияРаспоряжения параметров указания серий этого документа
//
// Возвращаемое значение:
//	ДокументСсылка.
//
Функция РаспоряжениеНаВыполнениеСкладскойОперации(ЗначенияПолейДляОпределенияРаспоряжения) Экспорт
	Если ЗначениеЗаполнено(ЗначенияПолейДляОпределенияРаспоряжения.ЗаказНаСборку) Тогда
		Возврат ЗначенияПолейДляОпределенияРаспоряжения.ЗаказНаСборку;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

// Функция выполняет проверки документа-распоряжения при создании расходного ордера
//
// Параметры:
//	Распоряжение - Ссылка на документ-распоряжение
//	Склад - Ссылка на элемент справочника Склады
//
// Возвращаемое значение:
//	Структура - результаты проверки:
//		- Отказ - Булево - Истина, если проверки прошли с ошибками, иначе - Ложь
//		- ТекстОшибки - Строка - Обязательно должен быть заполнен, когда Отказ = Истина
//		- ДатаОтгрузки - Дата
//		- ГруппаСкладовВРаспоряжении - Булево - В распоряжении выбрана группа складов 
//		- ИспользоватьОрдернуюСхему - Булево - На складе используется ордерная схема
//
Функция ВыполнитьПроверкиРаспоряжения(Распоряжение, Склад) Экспорт 
		
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("Операция", "");
	СтруктураВозврата.Вставить("ТекстОшибки", "");
	СтруктураВозврата.Вставить("ГруппаСкладовВРаспоряжении", Ложь);
	СтруктураВозврата.Вставить("ДатаОтгрузки");
	СтруктураВозврата.Вставить("ИспользоватьОрдернуюСхему");
	
	Реквизиты = Новый Структура("ДатаОтгрузки, Склад, ИспользоватьОрдернуюСхему", "Дата");
	
	Реквизиты.Склад = "Склад";
	Реквизиты.ИспользоватьОрдернуюСхему ="
	|ВЫБОР
	|	КОГДА ЕстьNULL(Склад.ИспользоватьОрдернуюСхемуПриОтгрузке, Ложь)
	|			И Дата >= ЕстьNULL(Склад.ДатаНачалаОрдернойСхемыПриОтгрузке, ДАТАВРЕМЯ(1,1,1))
	|		ТОГДА ИСТИНА
	|	ИНАЧЕ ЛОЖЬ
	|КОНЕЦ";
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Распоряжение, Реквизиты);
	ИспользоватьОрдернуюСхему = ЗначенияРеквизитов.ИспользоватьОрдернуюСхему;
	
	СтруктураВозврата.ИспользоватьОрдернуюСхему = ИспользоватьОрдернуюСхему;
	
	Если ИспользоватьОрдернуюСхему Тогда
		
		Склад = ЗначенияРеквизитов.Склад;
		ЗаполнитьЗначенияСвойств(СтруктураВозврата, ЗначенияРеквизитов, "ДатаОтгрузки");
		
	Иначе
		
		ТекстОшибки = НСтр("ru='Для склада ""%Склад%"" оформление расходных ордеров не требуется.
            |Заполнение документа не выполнено.'
            |;uk='Для складу ""%Склад%"" оформлення видаткових ордерів не потрібно.
            |Заповнення документа не виконано.'");
		СтруктураВозврата.ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Склад%", Строка(ЗначенияРеквизитов.Склад));
		СтруктураВозврата.Операция = "Отказ";
		Возврат СтруктураВозврата;
		
	КонецЕсли;	
		
	Возврат СтруктураВозврата
	
КонецФункции

#КонецОбласти

#Область Прочее

// Возвращает текст запроса для получениях доступных назначений
//	Параметры:
//		ПараметрыФормированияЗапроса - Структура - параметры для формирования текстов запросов
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаДоступныхНазначений(ПараметрыФормированияЗапроса) Экспорт
	
	Возврат Справочники.Назначения.ТекстЗапросаНазначенийРасширенный();
	
КонецФункции

// Функция определяет реквизиты выбранного перемещения товаров.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.СборкаТоваров - Ссылка на документ
//
// Возвращаемое значение:
//	Структура - реквизиты сборки товаров
//
Функция РеквизитыДокумента(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация
	|ИЗ
	|	Документ.СборкаТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Дата = Выборка.Дата;
		Организация = Выборка.Организация;
	Иначе
		Дата = Дата(1,1,1);
		Организация = Неопределено;
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Дата, Организация",
		Дата,
		Организация,);
	
	Возврат СтруктураРеквизитов;

КонецФункции

// Осуществляет инициализацию структуры состояния выполнения документа
Функция СтруктураСостояниеВыполненияДокумента() Экспорт
	
	СтруктураСостояние = Отчеты.СостояниеВыполненияДокументов.ИницициализироватьСтруктуруСостояниеВыполненияДокумента();
	СтруктураСостояние.Вставить("ВыводитьТаблицыОтгрузка", 1);
	СтруктураСостояние.Вставить("ВыводитьТаблицыПоступление", 2);
	СтруктураСостояние.Вставить("ЭтоНакладная", Истина);
	СтруктураСостояние.Вставить("ТекстТоварУслугаОтгрузка", НСтр("ru='Товар';uk='Товар'"));
	СтруктураСостояние.Вставить("ТекстТоварУслугаПоступление", НСтр("ru='Товар';uk='Товар'"));
	
	ВТТоварыРаспоряжениеНакладнаяОтгружено = ВременнаяТаблицаТоварыРаспоряжениеНакладнаяОтгруженоДляОтчетаСостояниеВыполнения();
	ВТТоварыПоступление = ВременнаяТаблицаТоварыПоступлениеДляОтчетаСостояниеВыполнения();
	ВТТоварыРаспоряженияПоступлениеНакладная = ВременнаяТаблицаТоварыРаспоряженияПоступлениеНакладнаяДляОтчетаСостояниеВыполнения();
	
	СтруктураДопЗапросов = Новый Структура();
	СтруктураДопЗапросов.Вставить("ТекстЗапросаВТТоварыРаспоряжениеНакладнаяОтгружено",   ВТТоварыРаспоряжениеНакладнаяОтгружено);
	СтруктураДопЗапросов.Вставить("ТекстЗапросаВТТоварыПоступление",                      ВТТоварыПоступление);
	СтруктураДопЗапросов.Вставить("ТекстЗапросаВТТоварыРаспоряженияПоступлениеНакладная", ВТТоварыРаспоряженияПоступлениеНакладная);
	СтруктураСостояние.Вставить("СтруктураДопЗапросов", СтруктураДопЗапросов);
	
	Возврат СтруктураСостояние;
	
КонецФункции

#КонецОбласти

// Возвращает текст запроса для записи данных в регистр сведений ДанныеВнутреннихДокументов
//
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаДанныеВнутреннихДокументов() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер,
	|	Документ.Дата,
	|	Документ.Организация,
	|	Документ.Склад,
	|	Документ.Подразделение,
	|	Документ.Ответственный,
	|	Документ.Комментарий,
	|	"""" КАК Дополнительно,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров) КАК ХозяйственнаяОперация,
	|	Документ.Статус,
	|	Документ.Проведен,
	|	Документ.ПометкаУдаления
	|ИЗ
	|	Документ.СборкаТоваров КАК Документ
	|ГДЕ
	|	Документ.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#Область Заполнение

// Возвращает таблицу Товары
//
// Параметры:
//  Накладная	 - Ссылка - Ссылка на накладную, табличную часть Товары которой необходимо вернуть
// 
// Возвращаемое значение:
//   - ТаблицаЗначений
//
Функция ДанныеТаблицыТоварыДокумента(Накладная, ПоШапке = Ложь) Экспорт
	
	Запрос = Новый Запрос();
	
	Если ПоШапке Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	0 Как НомерСтроки,
		|	ЕСТЬNULL(СборкаТоваровСерии.Количество, СборкаТоваров.Количество) КАК Количество,
		|	ЕСТЬNULL(СборкаТоваровСерии.Номенклатура, СборкаТоваров.Номенклатура) КАК Номенклатура,
		|	ЕСТЬNULL(СборкаТоваровСерии.Характеристика, СборкаТоваров.Характеристика) КАК Характеристика,
		|	ЕСТЬNULL(СборкаТоваровСерии.Назначение, СборкаТоваров.Назначение) КАК Назначение,
		|	ЕСТЬNULL(СборкаТоваровСерии.Серия, СборкаТоваров.Серия) КАК Серия,
		|	СборкаТоваров.Упаковка,
		|	СборкаТоваровСерии.НомерСтроки КАК ИдентификаторСтроки,
		|	СборкаТоваров.ВидЗапасов,
		|	СборкаТоваров.СтатусУказанияСерий,
		|	СборкаТоваров.НомерГТД,
		|	СборкаТоваров.АналитикаУчетаПартий,
		|	СборкаТоваров.АналитикаУчетаНоменклатуры,
		|	СборкаТоваров.ЗаказНаСборку
		|ИЗ
		|	Документ.СборкаТоваров КАК СборкаТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Серии КАК СборкаТоваровСерии
		|		ПО (СборкаТоваровСерии.Ссылка = СборкаТоваров.Ссылка)
		|ГДЕ
		|	СборкаТоваров.Ссылка = &Накладная";
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СборкаТоваровТовары.НомерСтроки,
		|	СборкаТоваровТовары.Номенклатура,
		|	СборкаТоваровТовары.Характеристика,
		|	СборкаТоваровТовары.Назначение,
		|	СборкаТоваровТовары.Упаковка,
		|	СборкаТоваровТовары.КоличествоУпаковок,
		|	СборкаТоваровТовары.Количество,
		|	СборкаТоваровТовары.ДоляСтоимости,
		|	СборкаТоваровТовары.КодСтроки,
		|	СборкаТоваровТовары.СтатусУказанияСерий,
		|	СборкаТоваровТовары.ВидЗапасов,
		|	СборкаТоваровТовары.НомерГТД,
		|	СборкаТоваровТовары.АналитикаУчетаПартий,
		|	СборкаТоваровТовары.Серия,
		|	СборкаТоваровТовары.АналитикаУчетаНоменклатуры,
		|	СборкаТоваровТовары.ИдентификаторСтроки,
		|	СборкаТоваровТовары.Ссылка.ЗаказНаСборку
		|ИЗ
		|	Документ.СборкаТоваров.Товары КАК СборкаТоваровТовары
		|ГДЕ
		|	СборкаТоваровТовары.Ссылка = &Накладная";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Накладная", Накладная);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

// Возвращает структуру необходимую для дальнейшего использования при заполнении документа по заказу или ордерам
// 
// Возвращаемое значение:
//   - Структура
//
Функция ПараметрыЗаполненияДокумента() Экспорт
	
	ПараметрыЗаполнения = Новый Структура();
	ПараметрыЗаполнения.Вставить("Менеджер", Документы.СборкаТоваров);
	ПараметрыЗаполнения.Вставить("МенеджерРегистраЗаказ", РегистрыНакопления.ЗаказыНаСборку);
	ПараметрыЗаполнения.Вставить("ИмяРегистраЗаказ", "ЗаказыНаСборку");
	ПараметрыЗаполнения.Вставить("ИмяПоляЗаказ", "ЗаказНаСборку");
	ПараметрыЗаполнения.Вставить("Дата", КонецДня(ТекущаяДата()));
	ПараметрыЗаполнения.Вставить("КлючевыеПоля", "Номенклатура, Характеристика, Серия, Назначение");
	ПараметрыЗаполнения.Вставить("РазворачиватьПоКодамСтрок", Истина);
	ПараметрыЗаполнения.Вставить("ДополнительныеПоляТаблицыДокумента", "Упаковка, СтатусУказанияСерий, КодСтроки");
	
	Возврат ПараметрыЗаполнения;
	
КонецФункции

Функция ДополнитьСтрокиТаблицыПерезаполненияПоЗаказу(ТаблицаНовыхСтрок) Экспорт
	
	// Заказ на внутреннее потребление
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НовыеСтроки.ЗаказНаСборку,
	|	НовыеСтроки.Номенклатура,
	|	НовыеСтроки.Характеристика,
	|	НовыеСтроки.Серия,
	|	НовыеСтроки.Назначение,
	|	НовыеСтроки.Количество,
	|	НовыеСтроки.КодСтроки
	|ПОМЕСТИТЬ втНовыеСтроки
	|ИЗ
	|	&ТаблицаНовыеСтроки КАК НовыеСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказНаСборкуТовары.НомерСтроки,
	|	НовыеСтроки.Номенклатура,
	|	НовыеСтроки.Характеристика,
	|	НовыеСтроки.Серия,
	|	НовыеСтроки.Количество,
	|	НовыеСтроки.КодСтроки,
	|	НовыеСтроки.Назначение,
	|	ЗаказНаСборкуТовары.Упаковка,
	|	ЗаказНаСборкуТовары.КоличествоУпаковок,
	|	ЗаказНаСборкуТовары.СтатусУказанияСерий
	|ИЗ
	|	Документ.ЗаказНаСборку.Товары КАК ЗаказНаСборкуТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ втНовыеСтроки КАК НовыеСтроки
	|		ПО ЗаказНаСборкуТовары.Номенклатура = НовыеСтроки.Номенклатура
	|			И ЗаказНаСборкуТовары.Характеристика = НовыеСтроки.Характеристика
	|			И ЗаказНаСборкуТовары.Серия = НовыеСтроки.Серия
	|			И ЗаказНаСборкуТовары.КодСтроки = НовыеСтроки.КодСтроки
	|			И ЗаказНаСборкуТовары.Ссылка = НовыеСтроки.ЗаказНаСборку
	|ГДЕ
	|	НЕ НовыеСтроки.Номенклатура ЕСТЬ NULL ";
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.УстановитьПараметр("ТаблицаНовыеСтроки", ТаблицаНовыхСтрок);
	
	ТаблицаНайденныеДопРеквизиты = Запрос.Выполнить().Выгрузить();
	
	ИтоговаяТаблица = ТаблицаНайденныеДопРеквизиты.СкопироватьКолонки();
	
	Отбор = Новый Структура("КодСтроки, Номенклатура, Характеристика, Серия, Назначение");
	
	// Слияние доп. реквизитов и строк, для которых не были найдены данные
	Для Каждого Строка Из ТаблицаНовыхСтрок Цикл
		НоваяСтрока = ИтоговаяТаблица.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		ЗаполнитьЗначенияСвойств(Отбор, Строка);
		
		НайденныеСтроки = ТаблицаНайденныеДопРеквизиты.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденныеСтроки[0],, "Количество");
		КонецЕсли;
	КонецЦикла;
	
	ИтоговаяТаблица.Сортировать("НомерСтроки");
	
	Возврат ИтоговаяТаблица;
	
КонецФункции

Процедура ЗаполнитьШапкуДокументаПоЗаказу(Объект, ПараметрыЗаполнения, МассивЗаказов) Экспорт
	
	ЗаполнитьЗначенияСвойств(Объект, ПараметрыЗаполнения.РеквизитыШапки);
	
	Дата = ЗаказыСервер.ПолучитьМинимальнуюДатуОтгрузкиЗаказа(МассивЗаказов, ПараметрыЗаполнения.ИмяРегистраЗаказ, 
		ПараметрыЗаполнения.ИмяПоляЗаказ);
	
КонецПроцедуры

Процедура ОбновитьЗависимыеРеквизитыТабличнойЧасти(Товары, ПараметрыЗаполнения) Экспорт
	
	ПарамСтатьи = Новый Структура;
	ПарамСтатьи.Вставить("Организация", ПараметрыЗаполнения.Организация);
	ПарамСтатьи.Вставить("Подразделение", ПараметрыЗаполнения.Подразделение);
	
	СтруктураДействий = Новый Структура;
	СтруктураДействий.Вставить("ПересчитатьКоличествоУпаковок");
	
	Для Каждого Строка Из Товары Цикл
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(Строка, СтруктураДействий, Неопределено);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПерезаполнитьТоварыВШапкеРМВнутреннееТовародвижение(Объект, СтруктураПерезаполнения, Распоряжение) Экспорт
	
	ТаблицаСерии = СтруктураПерезаполнения.ТаблицаСуществующихСтрок;
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(СтруктураПерезаполнения.ТаблицаНовыхСтрок, ТаблицаСерии);
	ПолнаяТаблицаСуществующиеСтроки = ТаблицаСерии.Скопировать();
	
	ТаблицаСерии.Свернуть("Номенклатура, Характеристика, Серия, Назначение, Количество");
	
	Объект.Серии.Очистить();
	
	Если ПолнаяТаблицаСуществующиеСтроки.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(Объект, ПолнаяТаблицаСуществующиеСтроки[0]);
		Объект.Количество = ПолнаяТаблицаСуществующиеСтроки.Итог("Количество");
		
		Для Каждого Строка Из ТаблицаСерии Цикл
			Если ЗначениеЗаполнено(Строка.Серия) И Строка.Количество > 0 Тогда
				НоваяСерия = Объект.Серии.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСерия, Строка);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Дозаполнение шапки
	Если ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ЗаказНаСборку") Тогда
		РеквизитыРаспоряжения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Распоряжение, 
		"Упаковка, Назначение, ВариантОбеспечения");
		
		Объект.Упаковка = Распоряжение.Упаковка;
		
		ИспользуетсяОбособленноеОбеспечение = 
		РеквизитыРаспоряжения.ВариантОбеспечения = Перечисления.ВариантыОбеспечения.ОтгрузитьОбособленно;
		
		НазначениеШапкиИспользуется = ЗначениеЗаполнено(РеквизитыРаспоряжения.Назначение) 
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РеквизитыРаспоряжения.Назначение, "ДвиженияПоСкладскимРегистрам")
		И ИспользуетсяОбособленноеОбеспечение;
		
		Если НазначениеШапкиИспользуется Тогда
			Объект.Назначение = РеквизитыРаспоряжения.Назначение;
		КонецЕсли;
	КонецЕсли;
	
	СтруктураДействий = Новый Структура("ПересчитатьКоличествоУпаковок");
	ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(Объект, СтруктураДействий, Неопределено);
	
КонецПроцедуры

#КонецОбласти

// Возвращает структуру используемых статусов документа учитывая зависимости от функциональных опций и иных параметров
// 
// Возвращаемое значение:
//   - Структура
//
Функция СтатусыДокумента() Экспорт
	
	ИспользуемыеСтатусы = Новый Структура();
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьСтатусыСборокТоваров") Тогда
		
		ИспользуемыеСтатусы.Вставить("ВРаботе", Перечисления.СтатусыСборокТоваров.ВРаботе);
		ИспользуемыеСтатусы.Вставить("СобраноРазобрано", Перечисления.СтатусыСборокТоваров.СобраноРазобрано);
		
	КонецЕсли;
	
	Возврат ИспользуемыеСтатусы;
	
КонецФункции

Функция МетаданныеДокумента() Экспорт
	
	СтруктураОбъекта = НаправленияДеятельностиСервер.СтруктураОбъекта();
	Возврат СтруктураОбъекта;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Если ИмяРегистра = "СвободныеОстатки" Тогда
		ИсточникиДанных.Вставить("ЗаказНаСборку");
	КонецЕсли;
	
	Возврат ИсточникиДанных;

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт

	// Создание запроса инициализации движений и заполенение его параметров.
	Запрос = Новый Запрос;
	Реквизиты = ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);

	// Формирование текста запроса.
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаТаблицаЗаказыНаСборку(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОтгрузке(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКПоступлению(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОформлениюПоступления(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвижениеТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры);
	
	// Исполнение запроса и выгрузка полученных таблиц для движений.
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Функция ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеШапки.Дата                         КАК Период,
	|	ДанныеШапки.Ссылка                       КАК Ссылка,
	|	ДанныеШапки.Организация                  КАК Организация,
	|	ДанныеШапки.Подразделение                КАК Подразделение,
	|	ДанныеШапки.ЗаказНаСборку                КАК ЗаказНаСборку,
	|	ДанныеШапки.ДатаРаспоряжения             КАК ДатаРаспоряжения,
	|	ДанныеШапки.Склад                        КАК Склад,
	|	ДанныеШапки.ТипОперации                  КАК ТипОперации,
	|	ДанныеШапки.Номенклатура                 КАК Номенклатура,
	|	ДанныеШапки.Характеристика               КАК Характеристика,
	|	ДанныеШапки.Назначение                   КАК Назначение,
	|	ДанныеШапки.Серия                        КАК Серия,
	|	ДанныеШапки.Статус                       КАК Статус,
	|	ДанныеШапки.НалоговоеНазначение 		 КАК НалоговоеНазначение,
	|	ДанныеШапки.ВидЗапасов                   КАК ВидЗапасовИзШапки,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар) КАК ТипЗапасовИзШапки,
	|	ВЫБОР
	|		КОГДА ДанныеШапки.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
	|				И ДанныеШапки.Дата >= ДанныеШапки.Склад.ДатаНачалаОрдернойСхемыПриОтгрузке
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                      КАК ОрдернаяСхемаПриОтгрузке,
	|	ВЫБОР
	|		КОГДА ДанныеШапки.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|				И ДанныеШапки.Дата >= ДанныеШапки.Склад.ДатаНачалаОрдернойСхемыПриПоступлении
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                                                      КАК ОрдернаяСхемаПриПоступлении,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СборкаТоваров) КАК ХозяйственнаяОперация,
	|	(ВЫБОР ДанныеШапки.НоменклатураОсновногоКомпонента
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяССылка) ТОГДА ЛОЖЬ ИНАЧЕ ИСТИНА КОНЕЦ) КАК УказанОсновнойКомпонент,
	|	ДанныеШапки.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.СборкаТоваров КАК ДанныеШапки
	|ГДЕ
	|	ДанныеШапки.Ссылка = &Ссылка";

	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();

	Запрос.УстановитьПараметр("Склад",                         Реквизиты.Склад);
	Запрос.УстановитьПараметр("Период",                        Реквизиты.Период);
	Запрос.УстановитьПараметр("Статус",                        Реквизиты.Статус);
	Запрос.УстановитьПараметр("ДатаРаспоряжения",              Реквизиты.ДатаРаспоряжения);
	Запрос.УстановитьПараметр("Серия",                         Реквизиты.Серия);
	Запрос.УстановитьПараметр("Организация",                   Реквизиты.Организация);
	Запрос.УстановитьПараметр("Подразделение",                 Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ТипОперации",                   Реквизиты.ТипОперации);
	Запрос.УстановитьПараметр("ЗаказНаСборку",                 Реквизиты.ЗаказНаСборку);
	Запрос.УстановитьПараметр("СборкаПоЗаказу",                ЗначениеЗаполнено(Реквизиты.ЗаказНаСборку));
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",         Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("ОрдернаяСхемаПриОтгрузке",      Реквизиты.ОрдернаяСхемаПриОтгрузке);
	Запрос.УстановитьПараметр("ОрдернаяСхемаПриПоступлении",   Реквизиты.ОрдернаяСхемаПриПоступлении);
	Запрос.УстановитьПараметр("ВидЗапасовИзШапки",             Реквизиты.ВидЗапасовИзШапки);
	Запрос.УстановитьПараметр("ТипЗапасовИзШапки",             Реквизиты.ТипЗапасовИзШапки);
	Запрос.УстановитьПараметр("НалоговоеНазначение",           Реквизиты.НалоговоеНазначение);
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов", ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("УказанОсновнойКомпонент",       Реквизиты.УказанОсновнойКомпонент);
	Запрос.УстановитьПараметр("УказанОсновнойКомпонент",       Реквизиты.УказанОсновнойКомпонент);
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Запрос.УстановитьПараметр("ИспользоватьПартионныйУчет",    ПолучитьФункциональнуюОпцию("ИспользоватьПартионныйУчет"));
	Запрос.УстановитьПараметр("Назначение",                    Реквизиты.Назначение);
	Запрос.УстановитьПараметр("Номенклатура",                  Реквизиты.Номенклатура);
	Запрос.УстановитьПараметр("Характеристика",                Реквизиты.Характеристика);
	Запрос.УстановитьПараметр("НаправлениеДеятельности",       Реквизиты.НаправлениеДеятельности);
	
	Возврат Реквизиты;

КонецФункции

Процедура ИнициализироватьКлючиАналитикиНоменклатуры(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос;
	ЗапросАналитик.УстановитьПараметр("Ссылка",      Запрос.Параметры.Ссылка);
	ЗапросАналитик.УстановитьПараметр("Склад",       Запрос.Параметры.Склад);
	ЗапросАналитик.УстановитьПараметр("ТипОперации", Запрос.Параметры.ТипОперации);
	ЗапросАналитик.УстановитьПараметр("Статус",      Запрос.Параметры.Статус);
	
	ЗапросАналитик.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Склад          КАК Склад,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия          КАК Серия
	|ИЗ (
	|	ВЫБРАТЬ
	|		&Склад                         КАК Склад,
	|		ДанныеДокумента.Номенклатура   КАК Номенклатура,
	|		ДанныеДокумента.Характеристика КАК Характеристика,
	|		ДанныеДокумента.Серия          КАК Серия
	|	ИЗ
	|		Документ.СборкаТоваров КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.Ссылка = &Ссылка
	|		И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаВидыЗапасов.ВидЗапасов.Комитент              КАК Склад,
	|		Аналитика.Номенклатура                              КАК Номенклатура,
	|		Аналитика.Характеристика                            КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
	|	ИЗ
	|		Документ.СборкаТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|	ГДЕ
	|		ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|		И ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ВидыЗапасовВладельца.Комитент                       КАК Склад,
	|		Аналитика.Номенклатура                              КАК Номенклатура,
	|		Аналитика.Характеристика                            КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
	|	ИЗ
	|		Документ.СборкаТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|			Справочник.ВидыЗапасов КАК ВидыЗапасовВладельца
	|		ПО
	|			ТаблицаВидыЗапасов.ВидЗапасов.ВидЗапасовВладельца = ВидыЗапасовВладельца.Ссылка
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|	ГДЕ
	|		ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|		И ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		И ВидыЗапасовВладельца.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	) КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		  ТаблицаТовары.Номенклатура   = Аналитика.Номенклатура
	|		И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|		И ТаблицаТовары.Серия          = Аналитика.Серия
	|		И ТаблицаТовары.Склад          = Аналитика.Склад
	|ГДЕ
	|	Аналитика.Номенклатура ЕСТЬ NULL";
	
	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка)
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаЗаказыНаСборку(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ЗаказыНаСборку";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	// Комплекты, отгружаемые серии заданы в шапке.
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&ДатаРаспоряжения                      КАК Период,
	|	ТаблицаТовары.ЗаказНаСборку            КАК ЗаказНаСборку,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие) ТОГДА
	|				ТаблицаТовары.Серия
	|		КОНЕЦ                              КАК Серия,
	|	1                                      КАК КодСтроки,
	|	ВЫБОР КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих) ТОГДА
	|				ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Поступление)
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Отгрузка)
	|		КОНЕЦ                              КАК ТипСборки,
	|	ТаблицаТовары.Количество               КАК Заказано,
	|	ТаблицаТовары.Количество               КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &СборкаПоЗаказу
	// В том числе статус = 14, тогда серии берутся из шапки.
	|	И (ТаблицаТовары.СтатусУказанияСерий <> 10
	|		ИЛИ &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)) 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Комплекты, отгружаемые серии заданы в отдельной табличной части.
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)              КАК ВидДвижения,
	|	&ДатаРаспоряжения                                   КАК Период,
	|	&ЗаказНаСборку                                      КАК ЗаказНаСборку,
	|	ТаблицаТовары.Номенклатура                          КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                        КАК Характеристика,
	|	ТаблицаТовары.Серия                                 КАК Серия,
	|	1                                                   КАК КодСтроки,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Отгрузка) КАК ТипСборки,
	|	ТаблицаТовары.Количество                            КАК Заказано,
	|	ТаблицаТовары.Количество                            КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &СборкаПоЗаказу
	|	И ТаблицаТовары.Ссылка.СтатусУказанияСерий = 10 // статус = 10, тогда серии берутся из отдельной табличной части Серии
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Комплектующие.
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)   КАК ВидДвижения,
	|	&ДатаРаспоряжения                        КАК Период,
	|	&ЗаказНаСборку                           КАК ЗаказНаСборку,
	|	ТаблицаТовары.Номенклатура               КАК Номенклатура,
	|	ТаблицаТовары.Характеристика             КАК Характеристика,
	|	ВЫБОР КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих) ТОГДА
	|				ТаблицаТовары.Серия
	|		КОНЕЦ                                КАК Серия,
	|	ТаблицаТовары.КодСтроки                  КАК КодСтроки,
	|	ВЫБОР КОГДА &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих) ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Отгрузка)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Поступление)
	|	КОНЕЦ                                    КАК ТипСборки,
	|	ТаблицаТовары.Количество                 КАК Заказано,
	|	ТаблицаТовары.Количество                 КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &СборкаПоЗаказу";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаОбеспечения(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаОбеспечения";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки       КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура      КАК Номенклатура,
	|	ТаблицаТовары.Характеристика    КАК Характеристика,
	|	ТаблицаТовары.КодСтроки         КАК КодСтроки,
	|	ТаблицаТовары.Количество        КАК Количество,
	|	ТоварыЗаказа.ВариантОбеспечения КАК ВариантОбеспечения,
	|	ТаблицаТовары.Назначение        КАК Назначение
	|
	|ПОМЕСТИТЬ ВтТаблицаОбеспечения
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку.Товары КАК ТоварыЗаказа
	|		ПО ТаблицаТовары.Ссылка.ЗаказНаСборку = ТоварыЗаказа.Ссылка
	|			И ТаблицаТовары.Номенклатура      = ТоварыЗаказа.Номенклатура
	|			И ТаблицаТовары.Характеристика    = ТоварыЗаказа.Характеристика
	|			И ТаблицаТовары.КодСтроки         = ТоварыЗаказа.КодСтроки
	|			И &СборкаПоЗаказу
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвижениеТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвижениеТоваров";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаОбеспечения", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаОбеспечения(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = " 
	// На неордерном складе приход комплектов при сборке
	|ВЫБРАТЬ
	|	&Период                  КАК Период,
	|	&ЗаказНаСборку           КАК Распоряжение,
	|	Реквизиты.Склад          КАК Склад,
	|	Реквизиты.Номенклатура   КАК Номенклатура,
	|	Реквизиты.Характеристика КАК Характеристика,
	|	Реквизиты.Назначение     КАК Назначение,
	|	0                        КАК КодСтроки,
	|	ВЫБОР
	|		КОГДА Реквизиты.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -Реквизиты.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                    КАК ПланируемоеПоступление,
	|	ВЫБОР
	|		КОГДА Реквизиты.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -Реквизиты.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                    КАК ПланируемоеПоступлениеПодЗаказ
	|ИЗ
	|	Документ.СборкаТоваров КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|	И &СборкаПоЗаказу
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано)
	|	И НЕ &ОрдернаяСхемаПриПоступлении
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Ордерном складе сторно движений по старым назначениям, сделанные приходным ордером для комплектов при сборке
	|ВЫБРАТЬ
	|	&Период,
	|	&ЗаказНаСборку,
	|	Реквизиты.Склад,
	|	Реквизиты.Номенклатура,
	|	Реквизиты.Характеристика,
	|	Реквизиты.Назначение,
	|	0,
	|	Реквизиты.Количество,
	|	-Реквизиты.Количество
	|ИЗ
	|	Документ.СборкаТоваров КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|	И &СборкаПоЗаказу
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано)
	|	И &ОрдернаяСхемаПриПоступлении
	|	И ВЫБОР
	|			КОГДА Реквизиты.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ТОГДА НЕ Реквизиты.Назначение.ДвиженияПоСкладскимРегистрам
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// На неордерном складе приход комплектующих при разборке
	|ВЫБРАТЬ
	|	&Период,
	|	&ЗаказНаСборку,
	|	&Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Назначение,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ИЗ
	|	ВтТаблицаОбеспечения КАК ТаблицаТовары
	|ГДЕ
	|	&СборкаПоЗаказу
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано)
	|	И НЕ &ОрдернаяСхемаПриПоступлении
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Ордерном складе сторно движений по старым назначениям, сделанные приходным ордером для комплектующих при разборке
	|ВЫБРАТЬ
	|	&Период,
	|	&ЗаказНаСборку,
	|	&Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Назначение,
	|	0,
	|	ТаблицаТовары.Количество,
	|	-ТаблицаТовары.Количество
	|ИЗ
	|	ВтТаблицаОбеспечения КАК ТаблицаТовары
	|ГДЕ
	|	&СборкаПоЗаказу
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано)
	|	И &ОрдернаяСхемаПриПоступлении
	|	И ВЫБОР
	|			КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ТОГДА НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СвободныеОстатки";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;

	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаОбеспечения", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаОбеспечения(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = " 
	// Поступление комплекта при сборке (неордерная схема)
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	Реквизиты.Номенклатура                 КАК Номенклатура,
	|	Реквизиты.Характеристика               КАК Характеристика,
	|	Реквизиты.Количество                   КАК ВНаличии,
	|	ВЫБОР
	|		КОГДА Реквизиты.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА Реквизиты.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ                                  КАК ВРезервеПодЗаказ
	|ИЗ
	|	Документ.СборкаТоваров КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано)
	|	И НЕ &ОрдернаяСхемаПриПоступлении
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Поступление комплекта при сборке (ордерная схема, старые назначения)
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Склад,
	|	Реквизиты.Номенклатура,
	|	Реквизиты.Характеристика,
	|	0,
	|	Реквизиты.Количество
	|ИЗ
	|	Документ.СборкаТоваров КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано)
	|	И &ОрдернаяСхемаПриПоступлении
	|	И ВЫБОР
	|			КОГДА Реквизиты.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ТОГДА НЕ Реквизиты.Назначение.ДвиженияПоСкладскимРегистрам
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Поступление комплектующих при разборке (неордерная схема)
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ИЗ
	|	ВтТаблицаОбеспечения КАК ТаблицаТовары
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано)
	|	И НЕ &ОрдернаяСхемаПриПоступлении
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Поступление комплектующих при разборке (ордерная схема, старые назначения)
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	0,
	|	ТаблицаТовары.Количество
	|ИЗ
	|	ВтТаблицаОбеспечения КАК ТаблицаТовары
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано)
	|	И &ОрдернаяСхемаПриПоступлении
	|	И ВЫБОР
	|			КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ТОГДА НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Отгрузка комплектующих при сборке
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК ВНаличии,
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|			ТаблицаТовары.Количество
	|		КОНЕЦ                              КАК ВРезервеПодЗаказ
	|
	|ИЗ
	|	ВтТаблицаОбеспечения КАК ТаблицаТовары
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|	И НЕ &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Отгрузка комплектов при разборке
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Склад КАК Склад,
	|	Реквизиты.Номенклатура КАК Номенклатура,
	|	Реквизиты.Характеристика КАК Характеристика,
	|	Реквизиты.Количество КАК ВНаличии,
	|	ВЫБОР КОГДА Реквизиты.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
	|			Реквизиты.Количество
	|		КОНЕЦ КАК ВРезервеПодЗаказ
	|ИЗ
	|	Документ.СборкаТоваров КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|	И НЕ &СборкаПоЗаказу";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОбеспечениеЗаказов";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	// Отгрузка
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Количество               КАК Потребность,
	|	0                                      КАК КЗаказу,
	|	ТаблицаТовары.Количество               КАК НаличиеПодЗаказ
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И НЕ &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Потребность
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Количество               КАК Потребность,
	|	0                                      КАК КЗаказу,
	|	0                                      КАК НаличиеПодЗаказ
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И НЕ &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Назначение КАК Назначение,
	|	&Склад КАК Склад,
	|	0 КАК Потребность,
	|	ВЫБОР
	|		КОГДА НЕ &СборкаПоЗаказу
	|			ТОГДА -ТаблицаТовары.Количество
	|	КОНЕЦ КАК КЗаказу,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|				ИЛИ НЕ &ОрдернаяСхемаПриПоступлении
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НаличиеПодЗаказ
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано))
	|	И (НЕ &СборкаПоЗаказу
	|			ИЛИ НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|			ИЛИ НЕ &ОрдернаяСхемаПриПоступлении)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Назначение,
	|	&Склад,
	|	0,
	|	ВЫБОР
	|		КОГДА НЕ &СборкаПоЗаказу
	|			ТОГДА -ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|				ИЛИ НЕ &ОрдернаяСхемаПриПоступлении
	|			ТОГДА ТаблицаТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано))
	|	И (НЕ &СборкаПоЗаказу
	|			ИЛИ НЕ ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам
	|			ИЛИ НЕ &ОрдернаяСхемаПриПоступлении)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОтгрузке(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОтгрузке";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = " 
	// Комплектующие. Отгрузка по распоряжению с неордерного слкада (расход "К отгрузке", "К оформлению).
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
 	|	&Склад                                 КАК Получатель,
	|	&ЗаказНаСборку                         КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура      КАК Номенклатура,
	|	ТаблицаТовары.Характеристика    КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|			ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ  		                           КАК Назначение,
	|	ТаблицаТовары.Серия             КАК Серия,
	|	ТаблицаТовары.Количество        КАК КОтгрузке,
	|	ТаблицаТовары.Количество        КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|	И &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Комплектующие. Оформление накладной по распоряжению с ордерного слкада (расход "К оформлению").
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)  КАК ВидДвижения,
	|	&Период                                 КАК Период,
	|	&Склад                                  КАК Склад,
 	|	&Склад                                  КАК Получатель,
	|	&ЗаказНаСборку                          КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура       КАК Номенклатура,
	|	ТаблицаТовары.Характеристика     КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|			ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ   	                            КАК Назначение,
	|	ТаблицаТовары.Серия              КАК Серия,
	|	0                                       КАК КОтгрузке,
	|	ТаблицаТовары.Количество         КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|	И &ОрдернаяСхемаПриОтгрузке
	|	И &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Комплектующие. Выдача распоряжения на отгрузку с ордерного слкада (приход "К отгрузке", "К оформлению").
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	&Склад                                 КАК Получатель,
	|	&Ссылка                                КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура      КАК Номенклатура,
	|	ТаблицаТовары.Характеристика    КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|			ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ	                               КАК Назначение,
	|	ТаблицаТовары.Серия             КАК Серия,
	|	ТаблицаТовары.Количество        КАК КОтгрузке,
	|	0                                      КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|	И &ОрдернаяСхемаПриОтгрузке
	|	И НЕ &СборкаПоЗаказу
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Комплектующие. Приход-расход для накладных не по заказу на неордерном складе (приход и расход "К отгрузке").
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	&Склад                                 КАК Получатель,
	|	&Ссылка                                КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура      КАК Номенклатура,
	|	ТаблицаТовары.Характеристика    КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|			ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                              	   КАК Назначение,
	|	ТаблицаТовары.Серия             КАК Серия,
	|	ТаблицаТовары.Количество        КАК КОтгрузке,
	|	0                                      КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|	И НЕ &СборкаПоЗаказу
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	&Склад                                 КАК Получатель,
	|	&Ссылка                                КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура      КАК Номенклатура,
	|	ТаблицаТовары.Характеристика    КАК Характеристика,
	|	ВЫБОР КОГДА ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам ТОГДА
	|			ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ	                               КАК Назначение,
	|	ТаблицаТовары.Серия             КАК Серия,
	|	ТаблицаТовары.Количество        КАК КОтгрузке,
	|	0                                      КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|	И НЕ &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Комплекты. Отгрузка по распоряжению с неордерного слкада (расход "К отгрузке").
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Склад                                       КАК Склад,
	|	&Склад                                       КАК Получатель,
	|	&ЗаказНаСборку                               КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                 КАК Характеристика,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ) ТОГДА
	|				ТаблицаТовары.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	
	|	ТаблицаТовары.Серия                          КАК Серия,
	|	ТаблицаТовары.Количество                     КАК КОтгрузке,
	|	ТаблицаТовары.Количество                     КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.СтатусУказанияСерий <> 10
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|	И &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Склад                                       КАК Склад,
	|	&Склад                                       КАК Получатель,
	|	&ЗаказНаСборку                               КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                 КАК Характеристика,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ) ТОГДА
	|				ТаблицаТовары.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	
	|	ТаблицаТовары.Серия                          КАК Серия,
	|	ТаблицаТовары.Количество                     КАК КОтгрузке,
	|	ТаблицаТовары.Количество                     КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Ссылка.СтатусУказанияСерий = 10
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|	И &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Комплекты. Приход-расход для накладных не по заказу на неордерном складе (приход и расход "К отгрузке").
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Склад                                       КАК Склад,
	|	&Склад                                       КАК Получатель,
	|	&Ссылка                                      КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                 КАК Характеристика,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ) ТОГДА
	|				ТаблицаТовары.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	
	|	ТаблицаТовары.Серия                          КАК Серия,
	|	ТаблицаТовары.Количество                     КАК КОтгрузке,
	|	0                                            КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.СтатусУказанияСерий <> 10
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|	И НЕ &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Склад                                       КАК Склад,
	|	&Склад                                       КАК Получатель,
	|	&Ссылка                                      КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                 КАК Характеристика,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ) ТОГДА
	|				ТаблицаТовары.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	
	|	ТаблицаТовары.Серия                          КАК Серия,
	|	ТаблицаТовары.Количество                     КАК КОтгрузке,
	|	0                                            КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Ссылка.СтатусУказанияСерий = 10
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|	И НЕ &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Склад                                       КАК Склад,
	|	&Склад                                       КАК Получатель,
	|	&Ссылка                                      КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                 КАК Характеристика,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ) ТОГДА
	|				ТаблицаТовары.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	
	|	ТаблицаТовары.Серия                          КАК Серия,
	|	ТаблицаТовары.Количество                     КАК КОтгрузке,
	|	0                                            КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.СтатусУказанияСерий <> 10
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|	И НЕ &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Склад                                       КАК Склад,
	|	&Склад                                       КАК Получатель,
	|	&Ссылка                                      КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                 КАК Характеристика,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ) ТОГДА
	|				ТаблицаТовары.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	
	|	ТаблицаТовары.Серия                          КАК Серия,
	|	ТаблицаТовары.Количество                     КАК КОтгрузке,
	|	0                                            КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Ссылка.СтатусУказанияСерий = 10
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|	И НЕ &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Оформление накладной по распоряжению с ордерного слкада (расход "К оформлению").
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Склад                                       КАК Склад,
	|	&Склад                                       КАК Получатель,
	|	&ЗаказНаСборку                               КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                 КАК Характеристика,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ) ТОГДА
	|				ТаблицаТовары.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	
	|	ТаблицаТовары.Серия                          КАК Серия,
	|	0                                            КАК КОтгрузке,
	|	ТаблицаТовары.Количество                     КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.СтатусУказанияСерий <> 10
	|	И &ОрдернаяСхемаПриОтгрузке
	|	И &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Оформление накладной по распоряжению с ордерного слкада (расход "К оформлению").
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Склад                                       КАК Склад,
	|	&Склад                                       КАК Получатель,
	|	&ЗаказНаСборку                               КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                 КАК Характеристика,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ) ТОГДА
	|				ТаблицаТовары.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	
	|	ТаблицаТовары.Серия                          КАК Серия,
	|	0                                            КАК КОтгрузке,
	|	ТаблицаТовары.Количество                     КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Ссылка.СтатусУказанияСерий = 10
	|	И &ОрдернаяСхемаПриОтгрузке
	|	И &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Выдача распоряжения на отгрузку с ордерного слкада (приход "К отгрузке").
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Склад                                       КАК Склад,
	|	&Склад                                       КАК Получатель,
	|	&Ссылка                                      КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                 КАК Характеристика,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ) ТОГДА
	|				ТаблицаТовары.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	
	|	ТаблицаТовары.Серия                          КАК Серия,
	|	ТаблицаТовары.Количество                     КАК КОтгрузке,
	|	0                                            КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.СтатусУказанияСерий <> 10
	|	И &ОрдернаяСхемаПриОтгрузке
	|	И НЕ &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&Склад                                       КАК Склад,
	|	&Склад                                       КАК Получатель,
	|	&Ссылка                                      КАК ДокументОтгрузки,
	|	ТаблицаТовары.Номенклатура                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                 КАК Характеристика,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ) ТОГДА
	|				ТаблицаТовары.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	
	|	ТаблицаТовары.Серия                          КАК Серия,
	|	ТаблицаТовары.Количество                     КАК КОтгрузке,
	|	0                                            КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|ГДЕ
	|	&ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Ссылка.СтатусУказанияСерий = 10
	|	И &ОрдернаяСхемаПриОтгрузке
	|	И НЕ &СборкаПоЗаказу";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 

	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаТоварыКПоступлению(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКПоступлению";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ДанныеДокумента.Склад                  КАК Склад,
	|	ДанныеДокумента.Ссылка                 КАК ДокументПоступления,
	|	ДанныеДокумента.Номенклатура           КАК Номенклатура,
	|	ДанныеДокумента.Характеристика         КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДанныеДокумента.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ДанныеДокумента.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Назначение,
	|	ДанныеДокумента.Количество             КАК КПоступлению
	|ИЗ
	|	Документ.СборкаТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|	И &ОрдернаяСхемаПриПоступлении
	|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.ВРаботе), ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано))
	|	И НЕ &СборкаПоЗаказу
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Склад,
	|	ТаблицаКомплектующие.Ссылка,
	|	ТаблицаКомплектующие.Номенклатура,
	|	ТаблицаКомплектующие.Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаКомплектующие.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаКомплектующие.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаКомплектующие.Количество
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаКомплектующие
	|ГДЕ
	|	ТаблицаКомплектующие.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|	И &ОрдернаяСхемаПриПоступлении
	|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.ВРаботе), ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано))
	|	И НЕ &СборкаПоЗаказу";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюПоступления(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюПоступления";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ДанныеДокумента.Склад                  КАК Склад,
	|	ВЫБОР
	|		КОГДА &СборкаПоЗаказу
	|			ТОГДА &ЗаказНаСборку
	|		ИНАЧЕ ДанныеДокумента.Ссылка
	|	КОНЕЦ                                  КАК ДокументПоступления,
	|	ДанныеДокумента.Номенклатура           КАК Номенклатура,
	|	ДанныеДокумента.Характеристика         КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ДанныеДокумента.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ДанныеДокумента.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Назначение,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СтатусУказанияСерий = 14
	|			ТОГДА ДанныеДокумента.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Серия,
	|	ДанныеДокумента.Количество             КАК КОформлению
	|ИЗ
	|	Документ.СборкаТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|	И &ОрдернаяСхемаПриПоступлении
	|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.ВРаботе), ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	&Склад,
	|	ВЫБОР
	|		КОГДА &СборкаПоЗаказу
	|			ТОГДА &ЗаказНаСборку
	|		ИНАЧЕ ТаблицаКомплектующие.Ссылка
	|	КОНЕЦ,
	|	ТаблицаКомплектующие.Номенклатура,
	|	ТаблицаКомплектующие.Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаКомплектующие.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаКомплектующие.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТаблицаКомплектующие.СтатусУказанияСерий = 14
	|			ТОГДА ТаблицаКомплектующие.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаКомплектующие.Количество
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаКомплектующие
	|ГДЕ
	|	ТаблицаКомплектующие.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|	И &ОрдернаяСхемаПриПоступлении
	|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.ВРаботе), ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано))";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыНаСкладах";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	&Номенклатура                          КАК Номенклатура,
	|	&Характеристика                        КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА &Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Назначение,
	|	&Серия                                 КАК Серия,
	|	ТаблицаТовары.Количество               КАК ВНаличии,
	|	0                                      КАК КОтгрузке,
	|	ЛОЖЬ                                   КАК КонтролироватьОстатки
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.СтатусУказанияСерий В (0, 2, 14)
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|	И НЕ &ОрдернаяСхемаПриПоступлении
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Склад,
	|	&Номенклатура,
	|	&Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА &Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Количество,
	|	0,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК Шапка
	|		ПО ТаблицаТовары.Ссылка = Шапка.Ссылка
	|			И ТаблицаТовары.Номенклатура = Шапка.Номенклатура
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И Шапка.СтатусУказанияСерий В (4, 6, 8, 10)
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|	И НЕ &ОрдернаяСхемаПриПоступлении
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	&Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Количество,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (10, 14)
	|				И (НЕ &СборкаПоЗаказу
	|					ИЛИ ТаблицаТовары.КодСтроки = 0)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК КонтролироватьОстатки
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.СтатусУказанияСерий В (0, 2, 10, 14)
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	&Склад,
	|	МАКСИМУМ(ТаблицаТовары.Номенклатура),
	|	МАКСИМУМ(ТаблицаТовары.Характеристика),
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(МАКСИМУМ(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам), ЛОЖЬ)
	|			ТОГДА МАКСИМУМ(ТаблицаТовары.Назначение)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	МАКСИМУМ(ТаблицаТовары.Серия),
	|	МАКСИМУМ(ТаблицаТовары.Количество),
	|	0,
	|	ВЫБОР
	|		КОГДА МАКСИМУМ(ТаблицаСтатусов.СтатусУказанияСерий) В (6, 8)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Товары КАК ТаблицаСтатусов
	|		ПО ТаблицаТовары.Ссылка = ТаблицаСтатусов.Ссылка
	|			И ТаблицаТовары.Номенклатура = ТаблицаСтатусов.Номенклатура
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.НомерСтроки
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаСтатусов.СтатусУказанияСерий) В (4, 6, 8)
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	&Склад,
	|	&Номенклатура,
	|	&Характеристика,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ) ТОГДА
	|				ТаблицаТовары.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	
	|	&Серия КАК Серия,
	|	ТаблицаТовары.Количество,
	|	0,
	|	ВЫБОР
	|		КОГДА НЕ &СборкаПоЗаказу
	|				И ТаблицаТовары.СтатусУказанияСерий = 14
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.СтатусУказанияСерий В (0, 2, 14)
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	&Склад,
	|	&Номенклатура,
	|	&Характеристика,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ) ТОГДА
	|				ТаблицаТовары.Назначение
	|			ИНАЧЕ
	|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ,
	|	
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Количество,
	|	0,
	|	ВЫБОР
	|		КОГДА Шапка.СтатусУказанияСерий В (6, 8, 10)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК Шапка
	|		ПО ТаблицаТовары.Ссылка = Шапка.Ссылка
	|			И ТаблицаТовары.Номенклатура = Шапка.Номенклатура
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И Шапка.СтатусУказанияСерий В (4, 6, 8, 10)
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|	И НЕ &ОрдернаяСхемаПриОтгрузке
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Количество,
	|	0,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.СтатусУказанияСерий В (0, 2, 10, 14)
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|	И НЕ &ОрдернаяСхемаПриПоступлении
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Склад,
	|	МАКСИМУМ(ТаблицаТовары.Номенклатура),
	|	МАКСИМУМ(ТаблицаТовары.Характеристика),
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(МАКСИМУМ(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам), ЛОЖЬ)
	|			ТОГДА МАКСИМУМ(ТаблицаТовары.Назначение)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	МАКСИМУМ(ТаблицаТовары.Серия),
	|	МАКСИМУМ(ТаблицаТовары.Количество),
	|	0,
	|	ЛОЖЬ
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Товары КАК ТаблицаСтатусов
	|		ПО ТаблицаТовары.Ссылка = ТаблицаСтатусов.Ссылка
	|			И ТаблицаТовары.Номенклатура = ТаблицаСтатусов.Номенклатура
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|	И НЕ &ОрдернаяСхемаПриПоступлении
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.НомерСтроки
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаСтатусов.СтатусУказанияСерий) В (4, 6, 8)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	// Сборка - приход комплекта
	|ВЫБРАТЬ
	|	&Номенклатура                                                       КАК Номенклатура,
	|	&Характеристика                                                     КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА &Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                                               КАК Назначение,
	|	&Серия                                                              КАК Серия,
	|	ТаблицаТовары.Количество                                            КАК Количество,
	|	&Склад                                                              КАК Отправитель,
	|	&Склад                                                              КАК Получатель,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)        КАК ХарактеристикаПолучателя,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаСобранныхКомплектов) КАК СкладскаяОперация,
	|	&Ссылка                                                             КАК Документ,
	|	&Период                                                             КАК Период,
	|	НЕ &ОрдернаяСхемаПриПоступлении                                     КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Номенклатура,
	|	&Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Количество,
	|	&Склад,
	|	&Склад,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаСобранныхКомплектов),
	|	&Ссылка,
	|	&Период,
	|	НЕ &ОрдернаяСхемаПриПоступлении
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК Шапка
	|		ПО ТаблицаТовары.Ссылка = Шапка.Ссылка
	|			И ТаблицаТовары.Номенклатура = Шапка.Номенклатура
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Сборка - расход комплектующих
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура                                              КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                                            КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                                                   КАК Назначение,
	|	ТаблицаТовары.Серия                                                     КАК Серия,
	|	ТаблицаТовары.Количество                                                КАК Количество,
	|	&Склад                                                                  КАК Отправитель,
	|	&Номенклатура                                                           КАК Получатель,
	|	&Характеристика                                                         КАК ХарактеристикаПолучателя,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаКомплектующихДляСборки) КАК СкладскаяОперация,
	|	&Ссылка                                                                 КАК Документ,
	|	&Период                                                                 КАК Период,
	|	НЕ &ОрдернаяСхемаПриОтгрузке                                            КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаТовары.Номенклатура),
	|	МАКСИМУМ(ТаблицаТовары.Характеристика),
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(МАКСИМУМ(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам), ЛОЖЬ)
	|			ТОГДА МАКСИМУМ(ТаблицаТовары.Назначение)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	МАКСИМУМ(ТаблицаТовары.Серия),
	|	МАКСИМУМ(ТаблицаТовары.Количество),
	|	&Склад,
	|	&Номенклатура,
	|	&Характеристика,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаКомплектующихДляСборки),
	|	&Ссылка,
	|	&Период,
	|	НЕ &ОрдернаяСхемаПриОтгрузке
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Товары КАК ТаблицаОграничения
	|		ПО ТаблицаОграничения.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаОграничения.Номенклатура = ТаблицаТовары.Номенклатура
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.НомерСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Разборка - приход комплектующих
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ТаблицаТовары.Количество КАК Количество,
	|	&Склад КАК Отправитель,
	|	&Склад КАК Получатель,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаПолучателя,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаКомплектующихПослеРазборки) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	НЕ &ОрдернаяСхемаПриПоступлении КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаТовары.Номенклатура),
	|	МАКСИМУМ(ТаблицаТовары.Характеристика),
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(МАКСИМУМ(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам), ЛОЖЬ)
	|			ТОГДА МАКСИМУМ(ТаблицаТовары.Назначение)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	МАКСИМУМ(ТаблицаТовары.Серия),
	|	МАКСИМУМ(ТаблицаТовары.Количество),
	|	&Склад,
	|	&Склад,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаКомплектующихПослеРазборки),
	|	&Ссылка,
	|	&Период,
	|	НЕ &ОрдернаяСхемаПриОтгрузке
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Товары КАК ТаблицаОграничения
	|		ПО ТаблицаОграничения.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаОграничения.Номенклатура = ТаблицаТовары.Номенклатура
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.НомерСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Разборка - расход комплекта
	|ВЫБРАТЬ
	|	&Номенклатура,
	|	&Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	&Серия,
	|	ТаблицаТовары.Количество,
	|	&Склад,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаКомплектовДляРазборки),
	|	&Ссылка,
	|	&Период,
	|	НЕ &ОрдернаяСхемаПриОтгрузке
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Номенклатура,
	|	&Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА &Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Количество,
	|	&Склад,
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаКомплектовДляРазборки),
	|	&Ссылка,
	|	&Период,
	|	НЕ &ОрдернаяСхемаПриОтгрузке
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК Шапка
	|		ПО ТаблицаТовары.Ссылка = Шапка.Ссылка
	|			И ТаблицаТовары.Номенклатура = Шапка.Номенклатура
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДатыПоступленияТоваровОрганизаций";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьВтТаблицаКомплекты(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период                      КАК ДатаПоступления,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия          КАК Серия,
	|	ТаблицаТовары.ВидЗапасов     КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД       КАК НомерГТД
	|ИЗ
	|	ВтТаблицаКомплекты КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ПоступленияТоваров
	|	ПО
	|		ТаблицаТовары.ВидЗапасов = ПоступленияТоваров.ВидЗапасов 
	|		И ТаблицаТовары.Номенклатура = ПоступленияТоваров.Номенклатура
	|		И ТаблицаТовары.Характеристика = ПоступленияТоваров.Характеристика
	|		И ТаблицаТовары.Серия = ПоступленияТоваров.Серия
	|		И ТаблицаТовары.НомерГТД = ПоступленияТоваров.НомерГТД 
	|
	|ГДЕ
	|	(ПоступленияТоваров.ДатаПоступления ЕСТЬ NULL
	|		ИЛИ ПоступленияТоваров.ДатаПоступления < НАЧАЛОПЕРИОДА(&Период, ДЕНЬ))
	|	И &Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.НомерГТД";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрЗапросаАналитикаКомплекта(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаКомплекта") Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	Запрос.УстановитьПараметр("АналитикаКомплекта", 
		РегистрыСведений.АналитикаУчетаНоменклатуры.ЗначениеКлючаАналитики(Запрос.Параметры));
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаКорВидЗапасов(Запрос)
	
	Если Запрос.Параметры.Свойство("КорВидЗапасов") Тогда
		Возврат;
	КонецЕсли;
	
	КорВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(Запрос.Параметры.Организация, 
	                                                            Запрос.Параметры.ХозяйственнаяОперация, 
																Неопределено,
																Запрос.Параметры.НалоговоеНазначение
																);
	Запрос.УстановитьПараметр("КорВидЗапасов", КорВидЗапасов);
	
КонецПроцедуры

Процедура ИнициализироватьВтТаблицаКомплекты(Запрос)
	
	Если Запрос.Параметры.Свойство("ВтТаблицаКомплектыИнициализирована") Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	ЗапросВтТаблицаКомплекты = Новый Запрос;
	ЗапросВтТаблицаКомплекты.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросВтТаблицаКомплекты.УстановитьПараметр("Ссылка",                  Запрос.Параметры.Ссылка);
	ЗапросВтТаблицаКомплекты.УстановитьПараметр("ТипОперации",             Запрос.Параметры.ТипОперации);
	ЗапросВтТаблицаКомплекты.УстановитьПараметр("УказанОсновнойКомпонент", Запрос.Параметры.УказанОсновнойКомпонент);

	ЗапросВтТаблицаКомплекты.Текст = 
	"ВЫБРАТЬ
	|	0                             КАК НомерСтроки,
	|	Операция.Номенклатура         КАК Номенклатура,
	|	Операция.Характеристика       КАК Характеристика,
	|	Операция.Серия                КАК Серия,
	|	Операция.ВидЗапасов           КАК ВидЗапасов,
	|	Операция.НомерГТД             КАК НомерГТД,
	|	Операция.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	Операция.Количество           КАК Количество,
	|	1                             КАК ДоляСтоимости,
	|	Аналитика.КлючАналитики       КАК АналитикаУчетаНоменклатуры
	|ПОМЕСТИТЬ ВтТаблицаКомплекты
	|ИЗ
	|	Документ.СборкаТоваров КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Комплект
	|		ПО Комплект.Ссылка = Операция.Номенклатура
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО Операция.Номенклатура = Аналитика.Номенклатура
	|			И Операция.Характеристика = Аналитика.Характеристика
	|			И Операция.Серия          = Аналитика.Серия
	|			И Операция.Склад          = Аналитика.Склад
 	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|	И НЕ (&УказанОсновнойКомпонент И Комплект.ВестиУчетПоГТД)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	0                             КАК НомерСтроки,
	|	Операция.Номенклатура         КАК Номенклатура,
	|	Операция.Характеристика       КАК Характеристика,
	|	Операция.Серия                КАК Серия,
	|	Операция.ВидЗапасов           КАК ВидЗапасов,
	|	Операция.НомерГТД               КАК НомерГТД,
	|	Операция.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	Строки.КоличествоКомплекта    КАК Количество,
	|	1                             КАК ДоляСтоимости,
	|	Аналитика.КлючАналитики       КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	Документ.СборкаТоваров КАК Операция
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.ВидыЗапасов КАК Строки
	|		ПО Операция.Ссылка = Строки.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Комплект
	|		ПО Комплект.Ссылка = Операция.Номенклатура
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО Операция.Номенклатура = Аналитика.Номенклатура
	|			И Операция.Характеристика = Аналитика.Характеристика
	|			И Операция.Серия = Аналитика.Серия
	|			И Операция.Склад = Аналитика.Склад
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|	И &УказанОсновнойКомпонент И Комплект.ВестиУчетПоГТД
	|	И Строки.КоличествоКомплекта <> 0.
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	ТаблицаКомплекты.НомерСтроки,
	|	ТаблицаКомплекты.Номенклатура,
	|	ТаблицаКомплекты.Характеристика,
	|	ТаблицаКомплекты.Серия,
	|	ТаблицаКомплекты.ВидЗапасов,
	|	ТаблицаКомплекты.НомерГТД,
	|	ТаблицаКомплекты.АналитикаУчетаПартий,
	|	ТаблицаКомплекты.Количество,
	|	ТаблицаКомплекты.ДоляСтоимости,
	|	ТаблицаКомплекты.АналитикаУчетаНоменклатуры
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаКомплекты
	|ГДЕ
	|	ТаблицаКомплекты.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)";
	
	ЗапросВтТаблицаКомплекты.ВыполнитьПакет();
	
	Запрос.УстановитьПараметр("ВтТаблицаКомплектыИнициализирована", Истина);

КонецПроцедуры

Процедура ИнициализироватьТоварыОрганизаций(Запрос)
	
	Если Запрос.Параметры.Свойство("ТоварыОрганизацийИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьВтТаблицаКомплекты(Запрос);
	ИнициализироватьВтВидыЗапасов(Запрос);
	УстановитьПараметрЗапросаАналитикаКомплекта(Запрос);
	УстановитьПараметрЗапросаКорВидЗапасов(Запрос);
	
	ЗапросТоваров = Новый Запрос;
	ЗапросТоваров.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросТоваров.УстановитьПараметр("Ссылка",                  Запрос.Параметры.Ссылка);
	ЗапросТоваров.УстановитьПараметр("ТипОперации",             Запрос.Параметры.ТипОперации);
	ЗапросТоваров.УстановитьПараметр("УказанОсновнойКомпонент", Запрос.Параметры.УказанОсновнойКомпонент);
	ЗапросТоваров.УстановитьПараметр("Период",                  Запрос.Параметры.Период);
	ЗапросТоваров.УстановитьПараметр("Склад",                   Запрос.Параметры.Склад);
	ЗапросТоваров.УстановитьПараметр("Организация",             Запрос.Параметры.Организация);
	ЗапросТоваров.УстановитьПараметр("ХозяйственнаяОперация",   Запрос.Параметры.ХозяйственнаяОперация);
	ЗапросТоваров.УстановитьПараметр("КорВидЗапасов",           Запрос.Параметры.КорВидЗапасов);
	ЗапросТоваров.УстановитьПараметр("НалоговоеНазначение",   	Запрос.Параметры.НалоговоеНазначение);
	ЗапросТоваров.УстановитьПараметр("ВидЗапасовИзШапки",       Запрос.Параметры.ВидЗапасовИзШапки);
	ЗапросТоваров.УстановитьПараметр("АналитикаКомплекта",      Запрос.Параметры.АналитикаКомплекта);
	ЗапросТоваров.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)   КАК ВидДвижения,
	|	&Период                                  КАК Период,
	|	&Склад                                   КАК Склад,
	|	&Организация                             КАК ОрганизацияОтгрузки,
	|	&Организация                             КАК Организация,
	|	ТаблицаТовары.ВидЗапасов                 КАК ВидЗапасов,
	|	ТаблицаТовары.Номенклатура               КАК Номенклатура,
	|	ТаблицаТовары.Характеристика             КАК Характеристика,
	|	ТаблицаТовары.НомерГТД                   КАК НомерГТД,
	|	ТаблицаТовары.Количество                 КАК Количество,
	|	&ХозяйственнаяОперация                   КАК ХозяйственнаяОперация,
	|	&НалоговоеНазначение                     КАК НалоговоеНазначение,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                             КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                             КАК КорАналитикаУчетаНоменклатуры,
	|
	|	НЕОПРЕДЕЛЕНО                             КАК ИсходныйВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                             КАК АналитикаНоменклатурыКомитента,
	|	ИСТИНА                                   КАК Первичное,
	|	ТаблицаТовары.ДоляСтоимости              КАК ДоляСтоимости
	|ИЗ
	|	ВтТаблицаКомплекты КАК ТаблицаТовары
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период,
	|	&Склад,
	|	&Организация КАК ОрганизацияОтгрузки,
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасовВладельца.Организация
	|		ИНАЧЕ &Организация
	|	КОНЕЦ КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасовВладельца
	|		ИНАЧЕ ТаблицаВидыЗапасов.ВидЗапасов
	|	КОНЕЦ КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД,
	|	ТаблицаВидыЗапасов.Количество,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|   ТаблицаВидыЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры,
	|	(ВЫБОР ТаблицаВидыЗапасов.ТипЗапасов
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА &КорВидЗапасов
	|		ИНАЧЕ ВЫБОР &ТипОперации
	|			КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих) ТОГДА &ВидЗапасовИзШапки
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ
	|		КОНЕЦ) КАК КорВидЗапасов,
	|	(ВЫБОР &ТипОперации
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих) ТОГДА &АналитикаКомплекта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ)КАК КорАналитикаУчетаНоменклатуры,
	|
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ИсходныйВидЗапасов,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыКомитента,
	|	ЛОЖЬ КАК Первичное,
	|	1 КАК ДоляСтоимости
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Результат = ЗапросТоваров.ВыполнитьПакет();
	
	ТаблицаТоварыОрганизаций = Результат[0].Выгрузить();
	ЗаполнитьКорАналитикуУчетаНомеклатуры(ТаблицаТоварыОрганизаций, Запрос.Параметры);
	
	ЗапросТоваров.УстановитьПараметр("ТаблицаТоварыОрганизаций", ТаблицаТоварыОрганизаций);
	ЗапросТоваров.Текст = 
	"ВЫБРАТЬ
	|	ТоварыОрганизаций.НомерСтроки,
	|	ТоварыОрганизаций.ВидДвижения,
	|	ТоварыОрганизаций.Период,
	|	ТоварыОрганизаций.Склад,
	|	ТоварыОрганизаций.ОрганизацияОтгрузки,
	|	ТоварыОрганизаций.Организация,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.Номенклатура,
	|	ТоварыОрганизаций.Характеристика,
	|	ТоварыОрганизаций.НомерГТД,
	|	ТоварыОрганизаций.Количество,
	|	ТоварыОрганизаций.ХозяйственнаяОперация,
	|	ТоварыОрганизаций.НалоговоеНазначение,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.КорВидЗапасов,
	|	ТоварыОрганизаций.КорАналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.ИсходныйВидЗапасов,
	|	ТоварыОрганизаций.АналитикаНоменклатурыКомитента,
	|	ТоварыОрганизаций.Первичное,
	|	ТоварыОрганизаций.ДоляСтоимости
	|ПОМЕСТИТЬ ВтТоварыОрганизаций
	|ИЗ
	|	&ТаблицаТоварыОрганизаций КАК ТоварыОрганизаций";
	
	ЗапросТоваров.ВыполнитьПакет();
	
	Запрос.УстановитьПараметр("ТоварыОрганизацийИнициализированы", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьТоварыОрганизаций(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТоварыОрганизаций.НомерСтроки,
	|	ТоварыОрганизаций.ВидДвижения,
	|	ТоварыОрганизаций.Период,
	|	ТоварыОрганизаций.Склад,
	|	ТоварыОрганизаций.ОрганизацияОтгрузки,
	|	ТоварыОрганизаций.Организация,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.Номенклатура,
	|	ТоварыОрганизаций.Характеристика,
	|	ТоварыОрганизаций.НомерГТД,
	|	ТоварыОрганизаций.Количество,
	|	ТоварыОрганизаций.ХозяйственнаяОперация,
	|	ТоварыОрганизаций.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.КорВидЗапасов,
	|	ТоварыОрганизаций.КорАналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.Первичное,
	|	ТоварыОрганизаций.ДоляСтоимости
	|ИЗ
	|	ВтТоварыОрганизаций КАК ТоварыОрганизаций";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизацийКПередаче";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьВтВидыЗапасов(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                     КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)             КАК ВидДвижения,
	|	&Период                                            КАК Период,
	|	&Склад                                             КАК Склад,
	|	ТаблицаВидыЗапасов.ВидЗапасовВладельца.Организация КАК ОрганизацияВладелец,
	|	ТаблицаВидыЗапасов.Номенклатура                    КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика                  КАК Характеристика,
	|	ТаблицаВидыЗапасов.ВидЗапасов                      КАК ВидЗапасовПродавца,
	|	ТаблицаВидыЗапасов.НомерГТД                        КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество                      КАК Количество,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры      КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|ГДЕ
	|	ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюОтчетовКомитенту";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьВтВидыЗапасов(Запрос);
	УстановитьПараметрЗапросаКорВидЗапасов(Запрос);
	
	Если НЕ Запрос.Параметры.Свойство("ТоварыОрганизацийИнициализированы") Тогда
		ИнициализироватьТоварыОрганизаций(Запрос);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                    КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)            КАК ВидДвижения,
	|	&Период                                           КАК Период,
	|	СпрВидыЗапасов.Валюта                             КАК Валюта,
	|	СпрВидыЗапасов.Ссылка                             КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Номенклатура                   КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика                 КАК Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД                       КАК НомерГТД,
	|	&ХозяйственнаяОперация                            КАК ХозяйственнаяОперация,
	|	0                                                 КАК Количество,
	|	ТаблицаВидыЗапасов.Количество                     КАК КоличествоСписано,
	|	0                                                 КАК СуммаВыручки,
	|	&КорВидЗапасов                                    КАК КорВидЗапасов,
	|	ТаблицаВидыЗапасов.НалоговоеНазначение            КАК НалоговоеНазначение,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыКомитента КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.КорАналитикаУчетаНоменклатуры  КАК КорАналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтТоварыОрганизаций КАК ТаблицаВидыЗапасов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|		ПО СпрВидыЗапасов.Ссылка = ТаблицаВидыЗапасов.ИсходныйВидЗапасов
	|ГДЕ
	|	СпрВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                    КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)            КАК ВидДвижения,
	|	&Период                                           КАК Период,
	|	ВидыЗапасовВладельца.Валюта                       КАК Валюта,
	|	ВидыЗапасовВладельца.Ссылка                       КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Номенклатура                   КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика                 КАК Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД                       КАК НомерГТД,
	|	&ХозяйственнаяОперация                            КАК ХозяйственнаяОперация,
	|	0                                                 КАК Количество,
	|	ТаблицаВидыЗапасов.Количество                     КАК КоличествоСписано,
	|	0                                                 КАК СуммаВыручки,
	|	&КорВидЗапасов                                    КАК КорВидЗапасов,
	|	ТаблицаВидыЗапасов.НалоговоеНазначение            КАК НалоговоеНазначение,
	|	КлючиКомитента.КлючАналитики                      КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.КорАналитикаУчетаНоменклатуры  КАК КорАналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтТоварыОрганизаций КАК ТаблицаВидыЗапасов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|		ПО СпрВидыЗапасов.Ссылка = ТаблицаВидыЗапасов.ИсходныйВидЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовВладельца
	|		ПО ВидыЗапасовВладельца.Ссылка = СпрВидыЗапасов.ВидЗапасовВладельца
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиКомитента
	|	ПО ТаблицаВидыЗапасов.Номенклатура = КлючиКомитента.Номенклатура
	|		И ТаблицаВидыЗапасов.Характеристика = КлючиКомитента.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = КлючиКомитента.Серия
	|		И ВидыЗапасовВладельца.Комитент = КлючиКомитента.Склад
	|ГДЕ
	|	СпрВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И СпрВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И ВидыЗапасовВладельца.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ИнициализироватьВтВидыЗапасов(Запрос)
	
	Если Запрос.Параметры.Свойство("ВтВидыЗапасовИнициализирована") Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	ЗапросВтВидыЗапасов = Новый Запрос;
	ЗапросВтВидыЗапасов.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросВтВидыЗапасов.УстановитьПараметр("Ссылка",                  Запрос.Параметры.Ссылка);
	
	ЗапросВтВидыЗапасов.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.ВидЗапасов                 КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Валюта          КАК Валюта,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов      КАК ТипЗапасов,
	|	Справочник.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	Справочник.ВидЗапасовВладельца                КАК ВидЗапасовВладельца,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	АналитикаКомитента.КлючАналитики              КАК АналитикаНоменклатурыКомитента,
	|	Аналитика.Номенклатура                        КАК Номенклатура,
	|	Аналитика.Характеристика                      КАК Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД                   КАК НомерГТД,
	|	ТаблицаВидыЗапасов.ВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ТаблицаВидыЗапасов.Количество                 КАК Количество
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.СборкаТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК Справочник
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасов = Справочник.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомитента
	|	ПО
	|		Аналитика.Номенклатура = АналитикаКомитента.Номенклатура
	|		И Аналитика.Характеристика = АналитикаКомитента.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = АналитикаКомитента.Серия
	|		И ТаблицаВидыЗапасов.ВидЗапасов.Комитент = АналитикаКомитента.Склад
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка";

	ЗапросВтВидыЗапасов.ВыполнитьПакет();
	
	Запрос.УстановитьПараметр("ВтВидыЗапасовИнициализирована", Истина);

КонецПроцедуры

Процедура ВыполнитьРаспределениеСтоимостиКомплектующихНаКомплекты(Запрос)
	
	Если Запрос.Параметры.Свойство("СтоимостьКомплектующихНаКомплектыРаспределена") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПараметрЗапросаКорВидЗапасов(Запрос);
	УстановитьПараметрЗапросаАналитикаКомплекта(Запрос);
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	ИнициализироватьВтВидыЗапасов(Запрос);
	
	ЗапросРаспределения = Новый Запрос;
	ЗапросРаспределения.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросРаспределения.УстановитьПараметр("Ссылка",                Запрос.Параметры.Ссылка);
	ЗапросРаспределения.УстановитьПараметр("Период",                Запрос.Параметры.Период);
	ЗапросРаспределения.УстановитьПараметр("АналитикаКомплекта",    Запрос.Параметры.АналитикаКомплекта);
	ЗапросРаспределения.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов", 
	                                                                Запрос.Параметры.УчитыватьСебестоимостьТоваровПоВидамЗапасов);
	ЗапросРаспределения.УстановитьПараметр("ХозяйственнаяОперация", Запрос.Параметры.ХозяйственнаяОперация);
	ЗапросРаспределения.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", 
	                                                                Запрос.Параметры.ФормироватьВидыЗапасовПоГруппамФинансовогоУчета);
	ЗапросРаспределения.УстановитьПараметр("ТипОперации",           Запрос.Параметры.ТипОперации);
	ЗапросРаспределения.УстановитьПараметр("КорВидЗапасов",         Запрос.Параметры.КорВидЗапасов);
	ЗапросРаспределения.УстановитьПараметр("Организация",           Запрос.Параметры.Организация);
	ЗапросРаспределения.УстановитьПараметр("НаправлениеДеятельности", Запрос.Параметры.НаправлениеДеятельности);
	
	ЗапросРаспределения.Текст = 
	// При сборке
	"ВЫБРАТЬ
	|	1 КАК НомерСтрокиДокумента,
	|	&Период КАК Период,
	|	&АналитикаКомплекта КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|	
	|	ДанныеДокумента.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ДанныеДокумента.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	1 КАК ДоляСтоимости,
	|	ДанныеДокумента.Количество КАК Количество,
	|
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ДанныеДокумента.ВидЗапасов
	|	ИНАЧЕ 
	|		ДанныеДокумента.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|
	|	ВЫБОР КОГДА СпрВидыЗапасов.Комитент ССЫЛКА Справочник.Организации
	|		ТОГДА АналитикаРасчетовИнтеркампани.КлючАналитики
	|		ИНАЧЕ АналитикаРасчетов.КлючАналитики
	|	КОНЕЦ КАК АналитикаРасчетовСКомитентом
	|ИЗ
	|	Документ.СборкаТоваров КАК ДанныеДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО СпрВидыЗапасов.Ссылка = ДанныеДокумента.ВидЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетов
	|		ПО АналитикаРасчетов.Организация = ДанныеДокумента.Организация
	|		И АналитикаРасчетов.Партнер = СпрВидыЗапасов.Комитент
	|		И АналитикаРасчетов.Контрагент = СпрВидыЗапасов.Контрагент
	|		И АналитикаРасчетов.Договор = СпрВидыЗапасов.Договор
	|		И АналитикаРасчетов.НаправлениеДеятельности = ДанныеДокумента.НаправлениеДеятельности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетовИнтеркампани
	|		ПО АналитикаРасчетовИнтеркампани.Организация = ДанныеДокумента.Организация
	|		И АналитикаРасчетовИнтеркампани.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		И АналитикаРасчетовИнтеркампани.Контрагент = СпрВидыЗапасов.Контрагент
	|		И АналитикаРасчетовИнтеркампани.Договор = СпрВидыЗапасов.Договор
	|		И АналитикаРасчетовИнтеркампани.НаправлениеДеятельности = ДанныеДокумента.НаправлениеДеятельности
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих) // При сборке
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// При разборке
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтрокиДокумента,
	|	&Период КАК Период,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|	
	|	ТаблицаТовары.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.ДоляСтоимости КАК ДоляСтоимости,
	|	ТаблицаТовары.Количество КАК Количество,
	|
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ 
	|		ТаблицаТовары.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|
	|	ВЫБОР КОГДА СпрВидыЗапасов.Комитент ССЫЛКА Справочник.Организации
	|		ТОГДА АналитикаРасчетовИнтеркампани.КлючАналитики
	|		ИНАЧЕ АналитикаРасчетов.КлючАналитики
	|	КОНЕЦ КАК АналитикаРасчетовСКомитентом
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО СпрВидыЗапасов.Ссылка = ТаблицаТовары.ВидЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетов
	|		ПО АналитикаРасчетов.Организация = ТаблицаТовары.Ссылка.Организация
	|		И АналитикаРасчетов.Партнер = СпрВидыЗапасов.Комитент
	|		И АналитикаРасчетов.Контрагент = СпрВидыЗапасов.Контрагент
	|		И АналитикаРасчетов.Договор = СпрВидыЗапасов.Договор
	|		И АналитикаРасчетов.НаправлениеДеятельности = ТаблицаТовары.Ссылка.НаправлениеДеятельности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетовИнтеркампани
	|		ПО АналитикаРасчетовИнтеркампани.Организация = ТаблицаТовары.Ссылка.Организация
	|		И АналитикаРасчетовИнтеркампани.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		И АналитикаРасчетовИнтеркампани.Контрагент = СпрВидыЗапасов.Контрагент
	|		И АналитикаРасчетовИнтеркампани.Договор = СпрВидыЗапасов.Договор
	|		И АналитикаРасчетовИнтеркампани.НаправлениеДеятельности = ТаблицаТовары.Ссылка.НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие) // При разборке
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаВидыЗапасов.НомерСтроки) КАК НомерСтрокиДокумента,
	|	&Период КАК Период,
	|	1 КАК ДоляСтоимости,
	|	ВЫБОР 
	|		КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			ТаблицаВидыЗапасов.АналитикаНоменклатурыКомитента
	|		ИНАЧЕ
	|			ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|	
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			&КорВидЗапасов
	|		ИНАЧЕ
	|			ТаблицаВидыЗапасов.ВидЗапасов
	|		КОНЕЦ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|	
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаСписанияОприходования,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасовСписанияОприходования,
	|	ТаблицаВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			&КорВидЗапасов
	|		ИНАЧЕ
	|			ТаблицаВидыЗапасов.ВидЗапасов
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|
	|	СУММА(ТаблицаВидыЗапасов.Количество) КАК Количество,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|
	|	ВЫБОР КОГДА СпрВидыЗапасов.Комитент ССЫЛКА Справочник.Организации
	|		ТОГДА АналитикаРасчетовИнтеркампани.КлючАналитики
	|		ИНАЧЕ АналитикаРасчетов.КлючАналитики
	|	КОНЕЦ КАК АналитикаРасчетовСКомитентом
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|	ПО СпрВидыЗапасов.Ссылка = ТаблицаВидыЗапасов.ВидЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетов
	|		ПО АналитикаРасчетов.Организация = &Организация
	|		И АналитикаРасчетов.Партнер = СпрВидыЗапасов.Комитент
	|		И АналитикаРасчетов.Контрагент = СпрВидыЗапасов.Контрагент
	|		И АналитикаРасчетов.Договор = СпрВидыЗапасов.Договор
	|		И АналитикаРасчетов.НаправлениеДеятельности = &НаправлениеДеятельности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетовИнтеркампани
	|		ПО АналитикаРасчетовИнтеркампани.Организация = &Организация
	|		И АналитикаРасчетовИнтеркампани.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		И АналитикаРасчетовИнтеркампани.Контрагент = СпрВидыЗапасов.Контрагент
	|		И АналитикаРасчетовИнтеркампани.Договор = СпрВидыЗапасов.Договор
	|		И АналитикаРасчетовИнтеркампани.НаправлениеДеятельности = &НаправлениеДеятельности
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипЗапасов В (ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|	И ТаблицаВидыЗапасов.Количество > 0
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР 
	|		КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			ТаблицаВидыЗапасов.АналитикаНоменклатурыКомитента
	|		ИНАЧЕ
	|			ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			&КорВидЗапасов
	|		ИНАЧЕ
	|			ТаблицаВидыЗапасов.ВидЗапасов
	|		КОНЕЦ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ,
	|	
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов,
	|	ТаблицаВидыЗапасов.ТипЗапасов,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			&КорВидЗапасов
	|		ИНАЧЕ
	|			ТаблицаВидыЗапасов.ВидЗапасов
	|		КОНЕЦ
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.Номенклатура
	|	КОНЕЦ,
	|	ВЫБОР КОГДА СпрВидыЗапасов.Комитент ССЫЛКА Справочник.Организации
	|		ТОГДА АналитикаРасчетовИнтеркампани.КлючАналитики
	|		ИНАЧЕ АналитикаРасчетов.КлючАналитики
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтрокиДокумента";
	
	Результат = ЗапросРаспределения.ВыполнитьПакет();
	
	Распределение = РаспределитьСтоимостьКомплектующихНаКомплекты(
		Результат[0].Выгрузить(),
		Результат[1].Выгрузить(),
		Запрос.Параметры);
	
	ЗапросРаспределения.УстановитьПараметр("ТаблицаСебестоимостьТоваров", Распределение.ТаблицаСебестоимостьТоваров);
	ЗапросРаспределения.УстановитьПараметр("ТаблицаДвиженияНоменклатураНоменклатура",
		Распределение.ТаблицаДвиженияНоменклатураНоменклатура);
	ЗапросРаспределения.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаСебестоимостьТоваров.Период,
	|	ТаблицаСебестоимостьТоваров.Регистратор,
	|	ТаблицаСебестоимостьТоваров.НомерСтроки,
	|	ТаблицаСебестоимостьТоваров.ВидДвижения,
	|	ТаблицаСебестоимостьТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаСебестоимостьТоваров.РазделУчета,
	|	ТаблицаСебестоимостьТоваров.ВидЗапасов,
	|	ТаблицаСебестоимостьТоваров.НалоговоеНазначение,
	|	ТаблицаСебестоимостьТоваров.Организация,
	|	ТаблицаСебестоимостьТоваров.Количество,
	|	ТаблицаСебестоимостьТоваров.Стоимость,
	|	ТаблицаСебестоимостьТоваров.СтоимостьБезНДС,
	|	ТаблицаСебестоимостьТоваров.СуммаДопРасходов,
	|	ТаблицаСебестоимостьТоваров.СуммаДопРасходовБезНДС,
	|	ТаблицаСебестоимостьТоваров.СтоимостьРегл,
	|	ТаблицаСебестоимостьТоваров.СтоимостьРеглБезНДС,
	|	ТаблицаСебестоимостьТоваров.НДСРегл,
	|	ТаблицаСебестоимостьТоваров.ПостояннаяРазница,
	|	ТаблицаСебестоимостьТоваров.ВременнаяРазница,
	|	ТаблицаСебестоимостьТоваров.ХозяйственнаяОперация,
	|	ТаблицаСебестоимостьТоваров.КорАналитикаУчетаНоменклатуры,
	|	ТаблицаСебестоимостьТоваров.КорРазделУчета,
	|	ТаблицаСебестоимостьТоваров.КорВидЗапасов,
	|	ТаблицаСебестоимостьТоваров.КорНалоговоеНазначение,
	|	ТаблицаСебестоимостьТоваров.КорОрганизация,
	|	ТаблицаСебестоимостьТоваров.КорСтоимость,
	|	ТаблицаСебестоимостьТоваров.АналитикаУчетаПоПартнерам,
	|	ТаблицаСебестоимостьТоваров.ЗаказКлиента,
	|	ТаблицаСебестоимостьТоваров.Подразделение,
	|	ТаблицаСебестоимостьТоваров.АналитикаРасходов,
	|	ТаблицаСебестоимостьТоваров.СтатьяРасходовСписания,
	|	ТаблицаСебестоимостьТоваров.СтатьяДоходов,
	|	ТаблицаСебестоимостьТоваров.АналитикаДоходов,
	|	ТаблицаСебестоимостьТоваров.ПериодПродажи,
	|	ТаблицаСебестоимостьТоваров.СтатьяАктивовПассивов,
	|	ТаблицаСебестоимостьТоваров.АналитикаАктивовПассивов,
	|	ТаблицаСебестоимостьТоваров.ДокументДвижения,
	|	ТаблицаСебестоимостьТоваров.ИдентификаторСтроки,
	|	ТаблицаСебестоимостьТоваров.ГруппаПродукции
	|ПОМЕСТИТЬ ВтТаблицаСебестоимостьТоваров
	|ИЗ
	|	&ТаблицаСебестоимостьТоваров КАК ТаблицаСебестоимостьТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДвиженияНоменклатураНоменклатура.Период,
	|	ТаблицаДвиженияНоменклатураНоменклатура.Регистратор,
	|	ТаблицаДвиженияНоменклатураНоменклатура.НомерСтроки,
	|	ТаблицаДвиженияНоменклатураНоменклатура.ХозяйственнаяОперация,
	|	ТаблицаДвиженияНоменклатураНоменклатура.Организация,
	|	ТаблицаДвиженияНоменклатураНоменклатура.Подразделение,
	|	ТаблицаДвиженияНоменклатураНоменклатура.АналитикаУчетаНоменклатуры,
	|	ТаблицаДвиженияНоменклатураНоменклатура.Склад,
	|	ТаблицаДвиженияНоменклатураНоменклатура.ТипЗапасов,
	|	ТаблицаДвиженияНоменклатураНоменклатура.ВидЗапасов,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорАналитикаУчетаНоменклатуры,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорСклад,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорТипЗапасов,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорВидЗапасов,
	|	ТаблицаДвиженияНоменклатураНоменклатура.Количество,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорКоличество,
	|	ТаблицаДвиженияНоменклатураНоменклатура.Стоимость,
	|	ТаблицаДвиженияНоменклатураНоменклатура.СтоимостьБезНДС,
	|	ТаблицаДвиженияНоменклатураНоменклатура.СтоимостьРегл,
	|	ТаблицаДвиженияНоменклатураНоменклатура.ИсточникГФУНоменклатуры,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорИсточникГФУНоменклатуры,
	|	ТаблицаДвиженияНоменклатураНоменклатура.ДокументДвижения,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорОрганизация
	|ПОМЕСТИТЬ ВтТаблицаДвиженияНоменклатураНоменклатура
	|ИЗ
	|	&ТаблицаДвиженияНоменклатураНоменклатура КАК ТаблицаДвиженияНоменклатураНоменклатура";

	Результат = ЗапросРаспределения.ВыполнитьПакет();
	
	Запрос.УстановитьПараметр("СтоимостьКомплектующихНаКомплектыРаспределена", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииТоваровОрганизаций";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьВтТаблицаКомплекты(Запрос);
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	ТекстЗапроса = "
	| ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	&Организация                           КАК Организация,
	|	КлючиАналитики.КлючАналитики           КАК АналитикаУчетаНоменклатуры,
	|	&Ссылка                                КАК ДокументПоступления,
	|	ТаблицаТовары.ВидЗапасов               КАК ВидЗапасов,
	|	ТаблицаТовары.АналитикаУчетаПартий     КАК АналитикаУчетаПартий,
	|	СУММА(ТаблицаТовары.Количество)        КАК Количество,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	ИСТИНА                                 КАК Первичное,
	|	&Ссылка                                КАК ДокументИсточник
	|ИЗ
	|	ВтТаблицаКомплекты КАК ТаблицаТовары
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитики
	|		ПО 
	|			ТаблицаТовары.Номенклатура = КлючиАналитики.Номенклатура
	|			И ТаблицаТовары.Характеристика = КлючиАналитики.Характеристика
	|			И ТаблицаТовары.Серия = КлючиАналитики.Серия
	|			И (&Склад = КлючиАналитики.Склад)
	|ГДЕ
	|	&Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано))
	|	И &ИспользоватьПартионныйУчет
	|СГРУППИРОВАТЬ ПО
	|	КлючиАналитики.КлючАналитики,
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.АналитикаУчетаПартий,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ВыполнитьРаспределениеСтоимостиКомплектующихНаКомплекты(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаСебестоимостьТоваров.Период,
	|	ТаблицаСебестоимостьТоваров.Регистратор,
	|	ТаблицаСебестоимостьТоваров.НомерСтроки,
	|	ТаблицаСебестоимостьТоваров.ВидДвижения,
	|	ТаблицаСебестоимостьТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаСебестоимостьТоваров.РазделУчета,
	|	ТаблицаСебестоимостьТоваров.ВидЗапасов,
	|	ТаблицаСебестоимостьТоваров.НалоговоеНазначение,
	|	ТаблицаСебестоимостьТоваров.Организация,
	|	ТаблицаСебестоимостьТоваров.Количество,
	|	ТаблицаСебестоимостьТоваров.Стоимость,
	|	ТаблицаСебестоимостьТоваров.СтоимостьБезНДС,
	|	ТаблицаСебестоимостьТоваров.СуммаДопРасходов,
	|	ТаблицаСебестоимостьТоваров.СуммаДопРасходовБезНДС,
	|	ТаблицаСебестоимостьТоваров.СтоимостьРегл,
	|	ТаблицаСебестоимостьТоваров.СтоимостьРеглБезНДС,
	|	ТаблицаСебестоимостьТоваров.НДСРегл,
	|	ТаблицаСебестоимостьТоваров.ПостояннаяРазница,
	|	ТаблицаСебестоимостьТоваров.ВременнаяРазница,
	|	ТаблицаСебестоимостьТоваров.ХозяйственнаяОперация,
	|	ТаблицаСебестоимостьТоваров.КорАналитикаУчетаНоменклатуры,
	|	ТаблицаСебестоимостьТоваров.КорРазделУчета,
	|	ТаблицаСебестоимостьТоваров.КорВидЗапасов,
	|	ТаблицаСебестоимостьТоваров.КорНалоговоеНазначение,
	|	ТаблицаСебестоимостьТоваров.КорОрганизация,
	|	ТаблицаСебестоимостьТоваров.КорСтоимость,
	|	ТаблицаСебестоимостьТоваров.АналитикаУчетаПоПартнерам,
	|	ТаблицаСебестоимостьТоваров.ЗаказКлиента,
	|	ТаблицаСебестоимостьТоваров.Подразделение,
	|	ТаблицаСебестоимостьТоваров.АналитикаРасходов,
	|	ТаблицаСебестоимостьТоваров.СтатьяРасходовСписания,
	|	ТаблицаСебестоимостьТоваров.СтатьяДоходов,
	|	ТаблицаСебестоимостьТоваров.АналитикаДоходов,
	|	ТаблицаСебестоимостьТоваров.ПериодПродажи,
	|	ТаблицаСебестоимостьТоваров.СтатьяАктивовПассивов,
	|	ТаблицаСебестоимостьТоваров.АналитикаАктивовПассивов,
	|	ТаблицаСебестоимостьТоваров.ДокументДвижения,
	|	ТаблицаСебестоимостьТоваров.ИдентификаторСтроки,
	|	ТаблицаСебестоимостьТоваров.ГруппаПродукции
	|ИЗ
	|	ВтТаблицаСебестоимостьТоваров КАК ТаблицаСебестоимостьТоваров";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияНоменклатураНоменклатура";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ВыполнитьРаспределениеСтоимостиКомплектующихНаКомплекты(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДвиженияНоменклатураНоменклатура.Период,
	|	ТаблицаДвиженияНоменклатураНоменклатура.Регистратор,
	|	ТаблицаДвиженияНоменклатураНоменклатура.НомерСтроки,
	|	ТаблицаДвиженияНоменклатураНоменклатура.ХозяйственнаяОперация,
	|	ТаблицаДвиженияНоменклатураНоменклатура.Организация,
	|	ТаблицаДвиженияНоменклатураНоменклатура.Подразделение,
	|	ТаблицаДвиженияНоменклатураНоменклатура.АналитикаУчетаНоменклатуры,
	|	ТаблицаДвиженияНоменклатураНоменклатура.Склад,
	|	ТаблицаДвиженияНоменклатураНоменклатура.ТипЗапасов,
	|	ТаблицаДвиженияНоменклатураНоменклатура.ВидЗапасов,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорАналитикаУчетаНоменклатуры,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорСклад,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорТипЗапасов,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорВидЗапасов,
	|	ТаблицаДвиженияНоменклатураНоменклатура.Количество,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорКоличество,
	|	ТаблицаДвиженияНоменклатураНоменклатура.Стоимость,
	|	ТаблицаДвиженияНоменклатураНоменклатура.СтоимостьБезНДС,
	|	ТаблицаДвиженияНоменклатураНоменклатура.СтоимостьРегл,
	|	ТаблицаДвиженияНоменклатураНоменклатура.ИсточникГФУНоменклатуры,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорИсточникГФУНоменклатуры,
	|	ТаблицаДвиженияНоменклатураНоменклатура.ДокументДвижения,
	|	ТаблицаДвиженияНоменклатураНоменклатура.КорОрганизация
	|ИЗ
	|	ВтТаблицаДвиженияНоменклатураНоменклатура КАК ТаблицаДвиженияНоменклатураНоменклатура";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция РаспределитьСтоимостьКомплектующихНаКомплекты(ТаблицаКомплектов, ТаблицаКомплектующих, Реквизиты)

	ТаблицаСебестоимостьТоваров = РегистрыНакопления.СебестоимостьТоваров.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ТаблицаСебестоимостьТоваров.Колонки.Удалить("Активность");
	
	ТаблицаДвиженияНоменклатураНоменклатура = РегистрыНакопления.ДвиженияНоменклатураНоменклатура.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ТаблицаДвиженияНоменклатураНоменклатура.Колонки.Удалить("Активность");

	Результат = Новый Структура;
	Результат.Вставить("ТаблицаСебестоимостьТоваров", ТаблицаСебестоимостьТоваров);
	Результат.Вставить("ТаблицаДвиженияНоменклатураНоменклатура", ТаблицаДвиженияНоменклатураНоменклатура);
	
	Если ТаблицаКомплектов.Количество() = 0 Или ТаблицаКомплектующих.Количество() = 0 Тогда
		Возврат Результат;
	КонецЕсли;
	
	МассивРаспределения = ТаблицаКомплектов.ВыгрузитьКолонку("ДоляСтоимости");
	ВсегоДолейКоличествоВыхода = ТаблицаКомплектующих.Количество();

	Для Каждого СтрокаВхода Из ТаблицаКомплектующих Цикл

		РаспределенноеКоличество = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СтрокаВхода.Количество, МассивРаспределения, 3);

		Счетчик = 0;
		Для Каждого СтрокаВыхода Из ТаблицаКомплектов Цикл

			// Количество выхода надо рассчитать на каждую строку входа.
			Если ВсегоДолейКоличествоВыхода <> 0 Тогда
				КоличествоВыхода = Окр(СтрокаВыхода.Количество / ВсегоДолейКоличествоВыхода, 3, РежимОкругления.Окр15как20);
			Иначе
				КоличествоВыхода = СтрокаВыхода.Количество;
			КонецЕсли;

			СтрокаВыхода.Количество = СтрокаВыхода.Количество - КоличествоВыхода;

			ЗаписьКомплектующие = ТаблицаСебестоимостьТоваров.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьКомплектующие, СтрокаВхода);
			ЗаписьКомплектующие.ВидДвижения = ВидДвиженияНакопления.Расход;
			ЗаписьКомплектующие.Подразделение = Реквизиты.Подразделение;
			ЗаписьКомплектующие.КорАналитикаУчетаНоменклатуры = СтрокаВыхода.АналитикаУчетаНоменклатуры;
			ЗаписьКомплектующие.КорРазделУчета = СтрокаВыхода.РазделУчета;
			ЗаписьКомплектующие.КорВидЗапасов = СтрокаВыхода.ВидЗапасов;
			ЗаписьКомплектующие.Количество = РаспределенноеКоличество[Счетчик];
			ЗаписьКомплектующие.АналитикаУчетаПоПартнерам = СтрокаВхода.АналитикаРасчетовСКомитентом;
			ЗаписьКомплектующие.НалоговоеНазначение    = Реквизиты.НалоговоеНазначение;
			ЗаписьКомплектующие.КорНалоговоеНазначение = Реквизиты.НалоговоеНазначение;
			
			//Списание комиссионных комплектующих по разделу учета "Товары, принятые на комиссию".
			Если СтрокаВхода.ТипЗапасов = Перечисления.ТипыЗапасов.КомиссионныйТовар Тогда
				КомиссионныеКомплектующие = ТаблицаСебестоимостьТоваров.Добавить();
				ЗаполнитьЗначенияСвойств(КомиссионныеКомплектующие, ЗаписьКомплектующие,,"РазделУчета, ВидЗапасов, АналитикаУчетаНоменклатуры, КорРазделУчета");
				КомиссионныеКомплектующие.РазделУчета = Перечисления.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию;
				КомиссионныеКомплектующие.ВидЗапасов = СтрокаВхода.ВидЗапасовСписанияОприходования;
				КомиссионныеКомплектующие.АналитикаУчетаНоменклатуры = СтрокаВхода.АналитикаСписанияОприходования;
				КомиссионныеКомплектующие.НалоговоеНазначение    = Реквизиты.НалоговоеНазначение;
				КомиссионныеКомплектующие.КорНалоговоеНазначение = Реквизиты.НалоговоеНазначение;
			КонецЕсли;

			ЗаписьКомплект = ТаблицаСебестоимостьТоваров.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьКомплект, СтрокаВыхода);
			ЗаписьКомплект.ВидДвижения = ВидДвиженияНакопления.Приход;
			ЗаписьКомплект.Подразделение = Реквизиты.Подразделение;
			ЗаписьКомплект.Количество  = КоличествоВыхода;
			ЗаписьКомплект.НалоговоеНазначение    = Реквизиты.НалоговоеНазначение;
			ЗаписьКомплект.КорНалоговоеНазначение = Неопределено;
			
			// Движение Номенклатура - Номенклатура
			ЗаписьНоменклатураНоменклатура = ТаблицаДвиженияНоменклатураНоменклатура.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьНоменклатураНоменклатура, СтрокаВхода);
			ЗаписьНоменклатураНоменклатура.АналитикаУчетаНоменклатуры = СтрокаВхода.АналитикаСписанияОприходования;
			ЗаписьНоменклатураНоменклатура.ВидЗапасов = СтрокаВхода.ВидЗапасовСписанияОприходования;
			ЗаписьНоменклатураНоменклатура.Организация = Реквизиты.Организация;
			ЗаписьНоменклатураНоменклатура.Подразделение = Реквизиты.Подразделение;
			ЗаписьНоменклатураНоменклатура.Склад = Реквизиты.Склад;
			
			ЗаписьНоменклатураНоменклатура.КорАналитикаУчетаНоменклатуры = СтрокаВыхода.АналитикаУчетаНоменклатуры;
			ЗаписьНоменклатураНоменклатура.КорСклад = Реквизиты.Склад;
			ЗаписьНоменклатураНоменклатура.КорТипЗапасов = СтрокаВыхода.ТипЗапасов;
			ЗаписьНоменклатураНоменклатура.КорВидЗапасов = СтрокаВыхода.ВидЗапасов;
			
			ЗаписьНоменклатураНоменклатура.Количество = РаспределенноеКоличество[Счетчик];
			ЗаписьНоменклатураНоменклатура.КорКоличество = КоличествоВыхода;
			
			ЗаписьНоменклатураНоменклатура.КорИсточникГФУНоменклатуры = СтрокаВыхода.ИсточникГФУНоменклатуры;

			Счетчик = Счетчик + 1;

		КонецЦикла;

		ВсегоДолейКоличествоВыхода = ВсегоДолейКоличествоВыхода - 1;

	КонецЦикла;

	ТаблицаСебестоимостьТоваров.ЗаполнитьЗначения(Реквизиты.Организация, "Организация");
	
	Результат.ТаблицаСебестоимостьТоваров = ТаблицаСебестоимостьТоваров;
	Результат.ТаблицаДвиженияНоменклатураНоменклатура = ТаблицаДвиженияНоменклатураНоменклатура;
	
	Возврат Результат;

КонецФункции

Процедура ЗаполнитьКорАналитикуУчетаНомеклатуры(ТаблицаТоварыОрганизаций, Реквизиты)
	Если Реквизиты.ТипОперации = Перечисления.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих Тогда
		Возврат;
	КонецЕсли;
	
	Материалы = ТаблицаТоварыОрганизаций.НайтиСтроки(Новый Структура("ВидДвижения", ВидДвиженияНакопления.Расход));
	База = Новый Массив;
	Для Каждого Комплект Из ТаблицаТоварыОрганизаций Цикл
		База.Добавить(?(Комплект.ВидДвижения = ВидДвиженияНакопления.Приход, Комплект.ДоляСтоимости, 0.));
	КонецЦикла;
	
	ВсегоСтрок = ТаблицаТоварыОрганизаций.Количество();
	Для Каждого Материал Из Материалы Цикл
		КоличествоОстаток = Материал.Количество;
		КоличестваМатериала = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(КоличествоОстаток, База, 3);
		Если КоличестваМатериала = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		НомерСтроки = 0;
		Пока НомерСтроки < ВсегоСтрок Цикл
			Комплект = ТаблицаТоварыОрганизаций[НомерСтроки];
			
			Если Комплект.ВидДвижения = ВидДвиженияНакопления.Приход Тогда
				НовоеКоличество = КоличестваМатериала[НомерСтроки];
				КоличествоОстаток = КоличествоОстаток - НовоеКоличество;
				Если КоличествоОстаток > 0. Тогда
					НовыйМатериал = ТаблицаТоварыОрганизаций.Добавить();
					ЗаполнитьЗначенияСвойств(НовыйМатериал, Материал);
				Иначе
					НовыйМатериал = Материал;
				КонецЕсли;
				НовыйМатериал.КорАналитикаУчетаНоменклатуры = Комплект.АналитикаУчетаНоменклатуры;
				НовыйМатериал.Количество = НовоеКоличество;
				Если Не ЗначениеЗаполнено(НовыйМатериал.КорВидЗапасов) Тогда
					НовыйМатериал.КорВидЗапасов = Комплект.ВидЗапасов;
				КонецЕсли;
				
				Если КоличествоОстаток <= 0. Тогда
					Прервать;
				КонецЕсли;
			КонецЕсли;
			
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;

	ПолноеИмяДокумента = "Документ.СборкаТоваров";
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить(
		"ОрдернаяСхемаПриОтгрузке", 
		"ВЫБОР
		|		КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
		|				И ТаблицаТовары.Ссылка.Дата >= ТаблицаТовары.Ссылка.Склад.ДатаНачалаОрдернойСхемыПриОтгрузке
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ");
	
	ПереопределениеРасчетаПараметров.Вставить(
		"ОрдернаяСхемаПриПоступлении", 
		"ВЫБОР
		|		КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
		|				И ТаблицаТовары.Ссылка.Дата >= ТаблицаТовары.Ссылка.Склад.ДатаНачалаОрдернойСхемыПриПоступлении
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ");
		
	ПереопределениеРасчетаПараметров.Вставить(
		"СборкаПоЗаказу", 
		"ТаблицаТовары.Ссылка.ЗаказНаСборку <> ЗНАЧЕНИЕ(Документ.ЗаказНаСборку.ПустаяСсылка)");
	
	Если ИмяРегистра = "ОбеспечениеЗаказов" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	ИначеЕсли ИмяРегистра = "ТоварыКОтгрузке" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыКОтгрузке(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	ИначеЕсли ИмяРегистра = "ЗаказыНаСборку" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаЗаказыНаСборку(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
	
	ИначеЕсли ИмяРегистра = "ДвиженияСерийТоваров" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	ИначеЕсли ИмяРегистра = "ТоварыНаСкладах" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	Иначе
		ТекстИсключения = НСтр("ru='В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';uk='У документі %ПолноеИмяДокумента% не реалізована адаптація тексту запиту формування рухів по регістру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(ТекстЗапроса,
																								ПолноеИмяДокумента,
																								СинонимТаблицыДокумента,
																								ПереопределениеРасчетаПараметров);

	Возврат Результат;
	
КонецФункции

#КонецОбласти


#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	Если ПравоДоступа("Изменение", Метаданные.Документы.СборкаТоваров) Тогда
		// Сборка товаров
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "СборкаТоваров";
		КомандаПечати.Представление = НСтр("ru='Сборка товаров';uk='Збирання товарів'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 10;
 	КонецЕсли;

	// Задание на размещение товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьЗаданияНаОтборРазмещениеТоваров";
	КомандаПечати.Идентификатор = "ЗаданиеНаОтборРазмещениеТовара";
	КомандаПечати.Представление = НСтр("ru='Задание на размещение товаров';uk='Завдання на розміщення товарів'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ИмяФормы", "ЗаданиеНаРазмещение");
	КомандаПечати.Порядок = 20;
 
	// Задание на отбор товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьЗаданияНаОтборРазмещениеТоваров";
	КомандаПечати.Идентификатор = "ЗаданиеНаОтборРазмещениеТовара";
	КомандаПечати.Представление = НСтр("ru='Задание на отбор товаров';uk='Завдання на відбір товарів'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ИмяФормы", "ЗаданиеНаОтбор");
	КомандаПечати.Порядок = 30;
 	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СборкаТоваров") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СборкаТоваров",
				НСтр("ru='Сборка товаров';uk='Збирання товарів'"),
				ПечатьСборкаТоваров(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),
				,
				,
				,
				Истина
		);

	КонецЕсли;

КонецПроцедуры

Функция ПечатьСборкаТоваров(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	
	ДопКолонка = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьДопКолонку = ЗначениеЗаполнено(ДопКолонка);
	
	ЗапросПоДокументам = Новый Запрос;
	ЗапросПоДокументам.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	ЗапросПоДокументам.Текст =
	"
	|ВЫБРАТЬ
	|	Документ.Ссылка                          КАК Ссылка,
	|	Документ.Номер                           КАК Номер,
	|	Документ.Дата                            КАК Дата,
	|	Документ.Склад                           КАК Склад,
	|	Документ.Организация                     КАК Организация,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Склад)            КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Организация)      КАК ОрганизацияПредставление,
	|	Документ.Организация.Префикс             КАК Префикс,
	|	Документ.Ответственный.ФизическоеЛицо.Наименование КАК ОтветственныйПредставление,
	|	" + ?(ВыводитьДопКолонку, "Документ.Номенклатура." + ДопКолонка +" КАК ДопКолонка,", "") + "
	|	Документ.Номенклатура                    КАК Номенклатура,
	|	Документ.Номенклатура.НаименованиеПолное КАК НоменклатураПредставление,
	|	Документ.Характеристика.НаименованиеПолное КАК ХарактеристикаПредставление,
	|
	|	ВЫБОР КОГДА Документ.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) ТОГДА
	|			ПРЕДСТАВЛЕНИЕ(Документ.Номенклатура.ЕдиницаИзмерения)
	|		ИНАЧЕ
	|			ПРЕДСТАВЛЕНИЕ(Документ.Упаковка)
	|	КОНЕЦ                                    КАК Упаковка,
	|	Документ.КоличествоУпаковок              КАК Количество,
	|	Документ.ТипОперации                     КАК ТипОперации,
	|	Документ.Товары.(
	|
	|		НомерСтроки КАК НомерСтроки,
	|		" + ?(ВыводитьДопКолонку, "Номенклатура." + ДопКолонка +" КАК ДопКолонка,", "") + "
	|		Номенклатура                        КАК Номенклатура,
	|		Номенклатура.НаименованиеПолное     КАК НоменклатураПредставление,
	|		Характеристика.НаименованиеПолное 	КАК ХарактеристикаПредставление,
	|		Характеристика                      КАК Характеристика,
	|		ВЫБОР
	|			КОГДА Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) ТОГДА
	|				ПРЕДСТАВЛЕНИЕССЫЛКИ(Номенклатура.ЕдиницаИзмерения)
	|			ИНАЧЕ
	|				ПРЕДСТАВЛЕНИЕССЫЛКИ(Упаковка)
	|		КОНЕЦ              КАК Упаковка,
	|		КоличествоУпаковок КАК Количество
	|
	|	) КАК ТаблицаТовары
	|ИЗ
	|	Документ.СборкаТоваров КАК Документ
	|
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|УПОРЯДОЧИТЬ ПО
	|	Дата, Ссылка, НомерСтроки
	|";
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СборкаТоваров";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СборкаТоваров.ПФ_MXL_СборкаТоваров", КодЯзыкаПечать);
	
	Если ВыводитьДопКолонку Тогда
		ОбластьШапки  = "ШапкаСДопКолонкой";
		ОбластьСтроки = "СтрокаСДопКолонкой";
	Иначе
		ОбластьШапки  = "ШапкаТаблицы";
		ОбластьСтроки = "Строка";
	Конецесли;
	
	ПервыйДокумент = Истина;
	ВыборкаДокументы = ЗапросПоДокументам.Выполнить().Выбрать();
	Пока ВыборкаДокументы.Следующий() Цикл
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		// Вывод заголовка.
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаДокументы);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, Локализация.ПолучитьЛокализованноеПредставление(ВыборкаДокументы.ТипОперации, КодЯзыкаПечать), КодЯзыкаПечать);
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабДокумент, Макет, ОбластьМакета, ВыборкаДокументы.Ссылка);
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Вывод комплекта.
		Если ВыводитьДопКолонку Тогда
			
			ОбластьМакета = Макет.ПолучитьОбласть("КомплектКод");
			ОбластьМакета.Параметры.ДопКолонка = ДопКолонка + ":";
			ОбластьМакета.Параметры.ЗначениеДопКолонки = ВыборкаДокументы.ДопКолонка;
			ТабДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Комплект");
		ОбластьМакета.Параметры.Комплект = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
			ВыборкаДокументы.НоменклатураПредставление,
			ВыборкаДокументы.ХарактеристикаПредставление);
		ОбластьМакета.Параметры.Количество = Строка(ВыборкаДокументы.Количество) + " " + ВыборкаДокументы.Упаковка;
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Вывод шапки отчета.
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки);
		Если ВыводитьДопКолонку Тогда
			ОбластьМакета.Параметры.ДопКолонка = ДопКолонка;
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Вывод строк документа.
		ВыборкаПоСтрокам = ВыборкаДокументы.ТаблицаТовары.Выбрать();
		Пока ВыборкаПоСтрокам.Следующий() Цикл
			
			ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);
			ОбластьМакета.Параметры.Заполнить(ВыборкаПоСтрокам);
			
			ОбластьМакета.Параметры.НоменклатураПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				ВыборкаПоСтрокам.НоменклатураПредставление,
				ВыборкаПоСтрокам.ХарактеристикаПредставление);
			
			ТабДокумент.Вывести(ОбластьМакета);
			
		КонецЦикла;
		
		// Вывод подписей.
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.ОтветственныйПредставление = "/"+ ВыборкаДокументы.ОтветственныйПредставление + "/";
		ТабДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПолучитьДанныеДляПечатнойФормыОтборРазмещениеТоваров(ПараметрыПечати, МассивОбъектов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СборкаТоваров.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(СборкаТоваров.Ссылка) КАК СсылкаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(СборкаТоваров.Склад) КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)) КАК ПомещениеПредставление,
	|	СборкаТоваров.Дата КАК Дата,
	|	СборкаТоваров.Номер КАК Номер,
	|	СборкаТоваров.Склад КАК Склад,
	|	ВЫБОР
	|		КОГДА СборкаТоваров.Склад.ИспользоватьАдресноеХранениеСправочно
	|				И (НЕ СборкаТоваров.Склад.ИспользоватьАдресноеХранение
	|					ИЛИ СборкаТоваров.Дата < СборкаТоваров.Склад.ДатаНачалаАдресногоХраненияОстатков)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИспользуетсяСправочноеХранение,
	|	ВЫБОР
	|		КОГДА СборкаТоваров.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
	|				И СборкаТоваров.Дата >= СборкаТоваров.Склад.ДатаНачалаОрдернойСхемыПриПоступлении
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НарушенаОрдернаяСхема,
	|	СборкаТоваров.Склад.ИспользованиеРабочихУчастков КАК ИспользованиеРабочихУчастков,
	|	NULL КАК ВидОперации,
	|	СборкаТоваров.Склад.ИспользоватьСерииНоменклатуры КАК ИспользоватьСерииНоменклатуры
	|ИЗ
	|	Документ.СборкаТоваров КАК СборкаТоваров
	|ГДЕ
	|	СборкаТоваров.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	1 КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок КАК НаборУпаковок,
	|	ТаблицаТовары.Количество КАК Количество
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.СборкаТоваров КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И НЕ ТаблицаТовары.СтатусУказанияСерий В (2, 4, 6, 8, 10)
	|	И ВЫБОР
	|			КОГДА ТаблицаТовары.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|				ТОГДА &ИмяФормы = ""ЗаданиеНаОтбор""
	|			КОГДА ТаблицаТовары.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|				ТОГДА &ИмяФормы = ""ЗаданиеНаРазмещение""
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Ссылка,
	|	1,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ВЫРАЗИТЬ(ТаблицаСерии.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок,
	|	ТаблицаСерии.Количество
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|ГДЕ
	|	ТаблицаСерии.Ссылка В(&МассивОбъектов)
	|	И ВЫБОР
	|			КОГДА ТаблицаСерии.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|				ТОГДА &ИмяФормы = ""ЗаданиеНаОтбор""
	|			КОГДА ТаблицаСерии.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|				ТОГДА &ИмяФормы = ""ЗаданиеНаРазмещение""
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Ссылка,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (2, 4, 6, 8, 10)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок,
	|	ТаблицаТовары.Количество
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И НЕ ТаблицаТовары.СтатусУказанияСерий В (2, 4, 6, 8)
	|	И ВЫБОР
	|			КОГДА ТаблицаТовары.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|				ТОГДА &ИмяФормы = ""ЗаданиеНаРазмещение""
	|			КОГДА ТаблицаТовары.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|				ТОГДА &ИмяФормы = ""ЗаданиеНаОтбор""
	|		КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Ссылка,
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки),
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ВЫРАЗИТЬ(ТаблицаСерии.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок,
	|	ТаблицаСерии.Количество
	|ИЗ
	|	Документ.СборкаТоваров.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|ГДЕ
	|	ТаблицаСерии.Ссылка В(&МассивОбъектов)
	|	И ТаблицаСерии.Номенклатура <> ТаблицаСерии.Ссылка.Номенклатура
	|	И ВЫБОР
	|			КОГДА ТаблицаСерии.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|				ТОГДА &ИмяФормы = ""ЗаданиеНаРазмещение""
	|			КОГДА ТаблицаСерии.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|				ТОГДА &ИмяФормы = ""ЗаданиеНаОтбор""
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Ссылка,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (2, 4, 6, 8)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Склад КАК Склад,
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА NULL
	|		ИНАЧЕ ТаблицаТовары.Серия
	|	КОНЕЦ КАК Серия,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Упаковка,
	|	ТаблицаТовары.НаборУпаковок КАК НаборУпаковок,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаТоваровСуммированная
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.НаборУпаковок,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА NULL
	|		ИНАЧЕ ТаблицаТовары.Серия
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ТаблицаТовары.Ссылка.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваровСуммированная.Ссылка КАК Ссылка,
	|	ТаблицаТоваровСуммированная.Склад КАК Склад,
	|	ТаблицаТоваровСуммированная.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваровСуммированная.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваровСуммированная.Характеристика КАК Характеристика,
	|	ТаблицаТоваровСуммированная.Серия КАК Серия,
	|	ТаблицаТоваровСуммированная.Номенклатура.Код КАК Код,
	|	ТаблицаТоваровСуммированная.Номенклатура.Артикул КАК Артикул,
	|	ТаблицаТоваровСуммированная.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
	|	ТаблицаТоваровСуммированная.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
	|	ТаблицаТоваровСуммированная.Серия.Наименование КАК ПредставлениеСерии,
	|	ТаблицаТоваровСуммированная.Количество КАК Количество,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТоваровСуммированная.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбхода,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка, ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка)) КАК ОсновнаяЯчейка,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбходаДополнительнаяЯчейка,
	|	ПРЕДСТАВЛЕНИЕ(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток) КАК ПредставлениеРабочегоУчастка,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.Код, """") КАК ОсновнаяЯчейкаПредставление,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.Код, """") КАК ЯчейкаПредставление,
	|	ТаблицаТоваровСуммированная.Количество КАК КоличествоУпаковок,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТоваровСуммированная.Упаковка) КАК ПредставлениеЕдининицыИзмеренияУпаковки,
	|	ТаблицаТоваровСуммированная.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий КАК НастройкаИспользованияСерий
	|ИЗ
	|	ТаблицаТоваровСуммированная КАК ТаблицаТоваровСуммированная
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТоваровСуммированная.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТоваровСуммированная.Ссылка.Склад)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОстальныеЯчейки
	|		ПО ТаблицаТоваровСуммированная.Номенклатура = РазмещениеОстальныеЯчейки.Номенклатура
	|			И (РазмещениеОстальныеЯчейки.ОсновнаяЯчейка = ЛОЖЬ)
	|			И (РазмещениеОстальныеЯчейки.Склад = ТаблицаТоваровСуммированная.Ссылка.Склад)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ТаблицаТоваровСуммированная.Склад,
	|	РабочийУчасток,
	|	НомерСтроки,
	|	Номенклатура,
	|	Характеристика,
	|	Серия
	|ИТОГИ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваровСуммированная.Ссылка КАК Ссылка,
	|	ТаблицаТоваровСуммированная.Склад КАК Склад,
	|	ТаблицаТоваровСуммированная.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоличествоВУпаковке,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ЕдиницаИзмерения.Представление, ПРЕДСТАВЛЕНИЕ(ТаблицаТоваровСуммированная.Номенклатура.ЕдиницаИзмерения)) КАК ПредставлениеЕдининицыИзмеренияУпаковки
	|ИЗ
	|	ТаблицаТоваровСуммированная КАК ТаблицаТоваровСуммированная
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|		ПО (ТаблицаТоваровСуммированная.Номенклатура = УпаковкиНоменклатуры.Владелец
	|				ИЛИ ТаблицаТоваровСуммированная.НаборУпаковок = УпаковкиНоменклатуры.Владелец)
	|			И (НЕ УпаковкиНоменклатуры.ПометкаУдаления)
	|			И ТаблицаТоваровСуммированная.Количество >= &ТекстЗапросаКоэффициентУпаковки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТоваровСуммированная.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТоваровСуммированная.Ссылка.Склад)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки,
	|	КоличествоВУпаковке УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия.Наименование КАК ПредставлениеСерии,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТовары.Ссылка.Склад)
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|	И НЕ ТаблицаТовары.Серия ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"УпаковкиНоменклатуры",
			"ТаблицаТоваровСуммированная.Номенклатура"));
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ИмяФормы", ПараметрыПечати.ИмяФормы);
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[0];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[3];
	РезультатПоУпаковкам 		= МассивРезультатов[4];
	РезультатПоСериям 			= МассивРезультатов[5];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти, РезультатПоУпаковкам, РезультатПоСериям",
													РезультатПоШапке,
													РезультатПоТабличнойЧасти,
													РезультатПоУпаковкам,
													РезультатПоСериям);
	
	Возврат СтруктураДанныхДляПечати;
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы


Функция ПолноеИмяОбъекта()
	Возврат "Документ.СборкаТоваров";
КонецФункции

Процедура ПерезаполнитьНазначениеВТЧСерии_ДанныеДляОбновления(Параметры) Экспорт
	ОбеспечениеСервер.ПерезаполнитьНазначениеВТЧСерии_ДанныеДляОбновления("СборкаТоваров", Параметры);
КонецПроцедуры

// Обработчик обновления УТ 3.2.1
// Перезаполняет "Назначение" в табличной части "Серии"
Процедура ПерезаполнитьНазначениеВТЧСерии(Параметры) Экспорт
	ОбеспечениеСервер.ПерезаполнитьНазначениеВТЧСерии("СборкаТоваров", Параметры);
КонецПроцедуры



Процедура ПеренестиСерии10ВТЧТовары_ЗаполнитьДанныеДляОбновления(Параметры) Экспорт
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗаказТовары.Ссылка,
	|	ЗаказТовары.КодСтроки
	|ПОМЕСТИТЬ ЗаказыСоСтрокамиКДелениюПоФинсериям
	|ИЗ
	|	Документ.ЗаказНаСборку.Товары КАК ЗаказТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Товары КАК НакладнаяТовары
	|		ПО ЗаказТовары.Ссылка = НакладнаяТовары.Ссылка.ЗаказНаСборку
	|			И ЗаказТовары.КодСтроки = НакладнаяТовары.КодСтроки
	|			И (ЗаказТовары.Ссылка.Проведен)
	|			И (ЗаказТовары.СтатусУказанияСерий = 15)
	|			И (НакладнаяТовары.Ссылка.Проведен)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаказТовары.Ссылка,
	|	ЗаказТовары.КодСтроки
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НакладнаяТовары.Серия) > 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НакладнаяТовары.Ссылка
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК НакладнаяТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗаказыСоСтрокамиКДелениюПоФинсериям КАК ЗаказыСоСтрокамиКДелениюПоФинсериям
	|		ПО НакладнаяТовары.Ссылка.ЗаказНаСборку = ЗаказыСоСтрокамиКДелениюПоФинсериям.Ссылка
	|			И НакладнаяТовары.КодСтроки = ЗаказыСоСтрокамиКДелениюПоФинсериям.КодСтроки
	|ГДЕ
	|	НакладнаяТовары.Ссылка.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументТовары.Ссылка
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК ДокументТовары
	|ГДЕ
	|	ДокументТовары.Ссылка.Проведен
	|	И ДокументТовары.СтатусУказанияСерий = 10
	|	И ДокументТовары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

// Обработчик обновления УТ 3.2.2
// Переносит серии, указываемые при планировании отгрузки в ТЧ Товары
Процедура ПеренестиСерии10ВТЧТовары(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь,
		ПолноеИмяОбъекта(), МенеджерВТ);
        
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(Параметры.Очередь,
		"Документ.ЗаказНаСборку", МенеджерВТ);
        
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Заказы.Ссылка,
	|	Заказы.ВерсияДанных,
	|	ВЫБОР
	|		КОГДА Заказы.МаксимальныйКодСтроки > МАКСИМУМ(ВсеНакладныеТовары.КодСтроки)
	|			ТОГДА Заказы.МаксимальныйКодСтроки
	|		ИНАЧЕ МАКСИМУМ(ВсеНакладныеТовары.КодСтроки)
	|	КОНЕЦ КАК МаксимальныйКодСтроки
	|ПОМЕСТИТЬ ВТЗаказы
	|ИЗ
	|	Документ.ЗаказНаСборку КАК Заказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК НакладныеФильтр
	|		ПО (НакладныеФильтр.ЗаказНаСборку = Заказы.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляОбработкиСборкаТоваров КАК ВТДляОбработкиСборкаТоваров
	|		ПО (ВТДляОбработкиСборкаТоваров.Ссылка = НакладныеФильтр.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированоЗаказНаСборку КАК ВТЗаблокированоЗаказ
	|		ПО (ВТЗаблокированоЗаказ.Ссылка = Заказы.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Товары КАК ВсеНакладныеТовары
	|		ПО (ВсеНакладныеТовары.Ссылка.ЗаказНаСборку = Заказы.Ссылка)
	|ГДЕ
	|	ВТЗаблокированоЗаказ.Ссылка ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	Заказы.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Накладные.Ссылка КАК Ссылка,
	|	ВТЗаказы.Ссылка КАК ЗаказСсылка,
	|	Накладные.ВерсияДанных КАК ВерсияДанных,
	|	ВТЗаказы.ВерсияДанных КАК ЗаказВерсияДанных,
	|	НакладнаяТовары.НомерСтроки,
	|	НакладнаяТовары.Ссылка ЕСТЬ NULL  КАК УдалитьИзОчереди,
	|	ВТЗаказы.МаксимальныйКодСтроки КАК МаксимальныйКодСтроки,
	|	ЕСТЬNULL(НакладнаяТовары.КодСтроки, 0) > 0
	|		И ВТЗаказы.Ссылка ЕСТЬ NULL  КАК ЕстьЗаблокированныйЗаказ
	|ИЗ
	|	ВТДляОбработкиСборкаТоваров КАК ДокументыФильтр
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК Накладные
	|		ПО (Накладные.Ссылка = ДокументыФильтр.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Товары КАК НакладнаяТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку.Товары КАК ЗаказТовары
	|			ПО ЗаказТовары.Ссылка = НакладнаяТовары.Ссылка.ЗаказНаСборку
	|			И ЗаказТовары.КодСтроки = НакладнаяТовары.КодСтроки
	|		ПО (Накладные.Ссылка = НакладнаяТовары.Ссылка)
	|			И (Накладные.Проведен)
	|			И (НакладнаяТовары.СтатусУказанияСерий = 10
	|					И НакладнаяТовары.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|				ИЛИ ЗаказТовары.СтатусУказанияСерий = 15
	|					И НакладнаяТовары.УдалитьСтарыйКодСтроки = 0)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаказы КАК ВТЗаказы
	|		ПО (Накладные.ЗаказНаСборку = ВТЗаказы.Ссылка)
	|			И (НакладнаяТовары.КодСтроки > 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаказСсылка
	|ИТОГИ
	|	МАКСИМУМ(УдалитьИзОчереди),
	|	МАКСИМУМ(ЕстьЗаблокированныйЗаказ)
	|ПО
	|	Ссылка";
	
	ВыборкаПоСсылкам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	МаксимальныеКодыСтрок = Новый Соответствие;
	
	Пока ВыборкаПоСсылкам.Следующий() Цикл
		
		Если ВыборкаПоСсылкам.УдалитьИзОчереди Тогда
			// Документы, которые перестали удовлетворять условиям для обработки, нужно удалить из очереди
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ВыборкаПоСсылкам.Ссылка);
			Продолжить;
		ИначеЕсли ВыборкаПоСсылкам.ЕстьЗаблокированныйЗаказ Тогда
			Продолжить;
		КонецЕсли;
		
		Выборка = ВыборкаПоСсылкам.Выбрать();
		
		НачатьТранзакцию();
		
		Блокировка = ЗаказыСервер.БлокировкаСвязанныхОбъектов(Выборка, , "Заказ");
		
		Попытка
			Блокировка.Заблокировать();
		Исключение
			ОтменитьТранзакцию();
			ЗаказыСервер.СообщитьОНеудачнойБлокировке(ВыборкаПоСсылкам.Ссылка);
			Продолжить;
		КонецПопытки;
		
		НакладнаяОбъект = ЗаказыСервер.ПроверитьПолучитьОбъект(ВыборкаПоСсылкам.Ссылка, ВыборкаПоСсылкам.ВерсияДанных, Параметры.Очередь);
		Если НакладнаяОбъект = Неопределено Тогда
			ОтменитьТранзакцию();
			Продолжить;
		КонецЕсли;
		
		Если Не ЗаказыСервер.ПроверитьИзменениеВерсий(Выборка, "Заказ") Тогда
			ОтменитьТранзакцию();
			Продолжить;
		КонецЕсли;
		Если НакладнаяОбъект.Статус = Перечисления.СтатусыСборокТоваров.УдалитьКСборкеРазборке Тогда
			НакладнаяОбъект.Статус = Перечисления.СтатусыСборокТоваров.ВРаботе;
		КонецЕсли;
		ЗаказыСервер.ОбработатьСерииНакладной(НакладнаяОбъект, Выборка, МаксимальныеКодыСтрок);
		
		Попытка
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(НакладнаяОбъект);
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ЗаказыСервер.СообщитьОНеудачнойОбработке(НакладнаяОбъект.Ссылка);
			ВызватьИсключение;
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта());
	
КонецПроцедуры

Функция ПеренестиСерии10ВТЧТовары_ПроверитьДанныеОбновлены(МетаданныеИОтбор) Экспорт
	
	Если МетаданныеИОтбор.Метаданные = Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъекта()) Тогда
		Возврат ОбновлениеИнформационнойБазы.ДанныеОбновленыНаНовуюВерсиюПрограммы(МетаданныеИОтбор);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Документ.Ссылка
	|ИЗ
	|	Документ.СборкаТоваров КАК Документ
	|ГДЕ
	|	Документ.ЗаказНаСборку = &Ссылка";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка",МетаданныеИОтбор.Отбор);
	
	Ссылки = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Возврат ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Неопределено, ПолноеИмяОбъекта(), Ссылки);
	
КонецФункции

Процедура ПеренестиРасхожденияВКорректировкиЗаписейРегистровЗаполнитьДанныеДляОбновления(Параметры) Экспорт
	
	// Расхождения можно было ввести только для сборок не по заказам
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Накладная.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СборкаТоваров.УдалитьРасхожденияТовары КАК ТоварыРасхождения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК Накладная
	|		ПО (Накладная.Ссылка = ТоварыРасхождения.Ссылка)
	|			И (Накладная.Проведен)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.Товары КАК ТоварыНакладной
	|		ПО (ТоварыНакладной.Ссылка = ТоварыРасхождения.Ссылка)
	|			И (ТоварыНакладной.ИдентификаторСтроки = ТоварыРасхождения.ИдентификаторСтроки)
	|ГДЕ
	|	Накладная.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
	|		И Накладная.Дата >= Накладная.Склад.ДатаНачалаОрдернойСхемыПриОтгрузке
	|	И (ТоварыРасхождения.КоличествоРасхождение <> 0
	|			ИЛИ ТоварыРасхождения.ЕстьРасхождениеПоСериям = 1)
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.2
Процедура ПеренестиРасхожденияВКорректировкиЗаписейРегистровОтложенно(Параметры) Экспорт
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(
		Параметры.Очередь,
		ПолноеИмяОбъекта(),
		МенеджерВТ);
		
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина; // Проверка в ЕстьДанныеДляОбработки уже выполнена в СоздатьВременнуюТаблицуСсылокДляОбработки
		Возврат;
    КонецЕсли;
    
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь; // Проверка в ЕстьДанныеДляОбработки уже выполнена в СоздатьВременнуюТаблицуСсылокДляОбработки
		Возврат;
	КонецЕсли; 
		
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Накладная.Ссылка КАК Ссылка,
	|	Накладная.ВерсияДанных КАК ВерсияДанных,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	Накладная.Дата КАК Период,
	|	Накладная.Склад,
	|	Накладная.Склад КАК Получатель,
	|	Накладная.Ссылка КАК ДокументОтгрузки,
	|	ТоварыРасхождения.Номенклатура,
	|	ТоварыРасхождения.Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТоварыРасхождения.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТоварыРасхождения.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТоварыРасхождения.Серия,
	|	ТоварыРасхождения.КоличествоРасхождение КАК Количество,
	|	ТоварыРасхождения.НомерСтроки КАК НомерСтроки,
	|	ТоварыРасхождения.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	&ВТДокументыДляОбработки КАК СсылкиДляОбработки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров.УдалитьРасхожденияТовары КАК ТоварыРасхождения
	|		ПО СсылкиДляОбработки.Ссылка = ТоварыРасхождения.Ссылка 
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК Накладная
	|		ПО Накладная.Ссылка = СсылкиДляОбработки.Ссылка
	|ГДЕ
	|	ТоварыРасхождения.КоличествоРасхождение <> 0
	|	ИЛИ ТоварыРасхождения.ЕстьРасхождениеПоСериям = 1
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка, ТоварыРасхождения.НомерСтроки УБЫВ";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВТДокументыДляОбработки", Результат.ИмяВременнойТаблицы);
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	
	РасхожденияСервер.ПеренестиРасхожденияВКорректировкиРегистров(Выборка, Параметры, Метаданные.Документы.СборкаТоваров);
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта());
	
КонецПроцедуры

Функция ПеренестиРасхожденияВКорректировкиЗаписейРегистровМожноЧитатьИМенять(Данные) Экспорт

	МетаданныеИОтбор = ОбновлениеИнформационнойБазы.МетаданныеИОтборПоДанным(Данные);
	Если МетаданныеИОтбор.ЭтоНовый Тогда
		Возврат Истина;
	КонецЕсли; 
	
	Если ТипЗнч(МетаданныеИОтбор.Отбор) = Тип("ДокументСсылка.СборкаТоваров") Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ТаблицаИзменения.Ссылка
		|ИЗ
		|	Документ.СборкаТоваров.Изменения КАК ТаблицаИзменения
		|ГДЕ
		|	ТаблицаИзменения.Узел ССЫЛКА ПланОбмена.ОбновлениеИнформационнойБазы
		|	И ТаблицаИзменения.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", МетаданныеИОтбор.Отбор);
		
		УстановитьПривилегированныйРежим(Истина);
		Результат = Запрос.Выполнить();
		
		Возврат Результат.Пустой();
	
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ДокументыДляОбновленияОчиститьСтатусКОтгрузке()
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ИсправляемыйДокумент.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СборкаТоваров КАК ИсправляемыйДокумент
	|ГДЕ
	|	ИсправляемыйДокумент.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.УдалитьКСборкеРазборке))");
	
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат.ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Процедура ОчиститьСтатусКОтгрузкеОтметитьКОтработке(Параметры) Экспорт
    
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ИсправляемыйДокумент.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.СборкаТоваров КАК ИсправляемыйДокумент
	|ГДЕ
	|	ИсправляемыйДокумент.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.УдалитьКСборкеРазборке))");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(
		Параметры,
		Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка")
    );
	
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.2
// Очищает статус "К сборке".
Процедура ОчиститьСтатусКСборкеОтложенно(Параметры) Экспорт
	
	ПолноеИмяДокумента = "Документ.СборкаТоваров";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Статус,
	|	ТаблицаДокумента.Ссылка
	|ИЗ
	|	&ВТДляОбработкиСсылка КАК СсылкиДляОбработки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК ТаблицаДокумента
	|		ПО ТаблицаДокумента.Ссылка = СсылкиДляОбработки.Ссылка";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь, ПолноеИмяДокумента, МенеджерВременныхТаблиц);
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
	КонецЕсли;
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли; 
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВТДляОбработкиСсылка", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.Статус <> Перечисления.СтатусыСборокТоваров.УдалитьКСборкеРазборке Тогда
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
			Продолжить;
		КонецЕсли;
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить("Документ.СборкаТоваров");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			
			Блокировка.Заблокировать();
			
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			
			// Если объект ранее был удален или обработан другими сеансами, пропускаем его.
			Если ДокументОбъект = Неопределено
				Или ДокументОбъект.Статус <> Перечисления.СтатусыСборокТоваров.УдалитьКСборкеРазборке Тогда
				ОтменитьТранзакцию();
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				Продолжить;
				
			КонецЕсли;
			
			ДокументОбъект.Статус = Перечисления.СтатусыСборокТоваров.ВРаботе;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru='Не удалось обработать документ: %Ссылка% по причине: %Причина%';uk='Не вдалося обробити документ: %Ссылка% з причини: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Документы.СборкаТоваров, Выборка.Ссылка, ТекстСообщения);
			ВызватьИсключение;
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяОбъекта());
	
КонецПроцедуры



#КонецОбласти

#Область ТекущиеДела

// Заполняет список текущих дел пользователя.
// Описание параметров процедуры см. в ТекущиеДелаСлужебный.НоваяТаблицаТекущихДел()
//
Процедура ПриЗаполненииСпискаТекущихДел(ТекущиеДела) Экспорт
	
	ИмяФормы = "РегистрСведений.ДанныеВнутреннихДокументов.Форма.ФормаСписка";
	
	ОбщиеПараметрыЗапросов = ТекущиеДелаСлужебный.ОбщиеПараметрыЗапросов();
	
	// Определим доступны ли текущему пользователю показатели группы
	Доступность =
		(ОбщиеПараметрыЗапросов.ЭтоПолноправныйПользователь
			Или ПравоДоступа("Просмотр", Метаданные.Документы.СборкаТоваров))
		И (ПравоДоступа("Добавление", Метаданные.Документы.СборкаТоваров)
			ИЛИ ПравоДоступа("Изменение", Метаданные.Документы.СборкаТоваров))
		И ПравоДоступа("Просмотр", Метаданные.Документы.ЗаказНаСборку)
		И ПравоДоступа("Чтение",   Метаданные.РегистрыНакопления.ЗаказыНаСборку)
		И ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыНаСборку")
		И ПолучитьФункциональнуюОпцию("ИспользоватьСтатусыЗаказовНаСборку");
	
	Если НЕ Доступность Тогда
		Возврат;
	КонецЕсли;
	
	// Расчет показателей
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗапросПоРаспоряжениямВсего.ДокументОтгрузки КАК Распоряжение,
	|	ЛОЖЬ КАК НаСегодня
	|ПОМЕСТИТЬ ВтРаспоряжения
	|ИЗ
	|	РегистрНакопления.ТоварыКОтгрузке.Остатки(, ТИПЗНАЧЕНИЯ(ДокументОтгрузки) В (&ДоступныеТипы)) КАК ЗапросПоРаспоряжениямВсего
	|ГДЕ
	|	ЗапросПоРаспоряжениямВсего.КОтгрузкеОстаток - ЗапросПоРаспоряжениямВсего.СобраноОстаток <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗапросПоРаспоряжениямНаСегодня.ДокументОтгрузки,
	|	ИСТИНА
	|ИЗ
	|	РегистрНакопления.ТоварыКОтгрузке.Остатки(&ДатаОтгрузки, ТИПЗНАЧЕНИЯ(ДокументОтгрузки) В (&ДоступныеТипы)) КАК ЗапросПоРаспоряжениямНаСегодня
	|ГДЕ
	|	ЗапросПоРаспоряжениямНаСегодня.КОтгрузкеОстаток - ЗапросПоРаспоряжениямНаСегодня.СобраноОстаток <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗапросПоРаспоряжениямВсего.ДокументПоступления,
	|	ЛОЖЬ
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюПоступления.Остатки(, ТИПЗНАЧЕНИЯ(ДокументПоступления) В (&ДоступныеТипы)) КАК ЗапросПоРаспоряжениямВсего
	|ГДЕ
	|	ЗапросПоРаспоряжениямВсего.КОформлениюОстаток <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗапросПоРаспоряжениямНаСегодня.ДокументПоступления,
	|	ИСТИНА
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюПоступления.Остатки(&ДатаОтгрузки, ТИПЗНАЧЕНИЯ(ДокументПоступления) В (&ДоступныеТипы)) КАК ЗапросПоРаспоряжениямНаСегодня
	|ГДЕ
	|	ЗапросПоРаспоряжениямНаСегодня.КОформлениюОстаток <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗапросПоРаспоряжениямВсего.ЗаказНаСборку,
	|	ЛОЖЬ
	|ИЗ
	|	РегистрНакопления.ЗаказыНаСборку.Остатки КАК ЗапросПоРаспоряжениямВсего
	|ГДЕ
	|	ВЫБОР КОГДА ЗапросПоРаспоряжениямВсего.ТипСборки = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Отгрузка) ТОГДА
	|		ЗапросПоРаспоряжениямВсего.КОформлениюОстаток
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗапросПоРаспоряжениямНаСегодня.ЗаказНаСборку,
	|	ИСТИНА
	|ИЗ
	|	РегистрНакопления.ЗаказыНаСборку.Остатки(&ДатаОтгрузки, ) КАК ЗапросПоРаспоряжениямНаСегодня
	|ГДЕ
	|	ВЫБОР КОГДА ЗапросПоРаспоряжениямНаСегодня.ТипСборки = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Отгрузка) ТОГДА
	|		ЗапросПоРаспоряжениямНаСегодня.КОформлениюОстаток
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВтРаспоряжения.Распоряжение) КАК ДокументыСборкиРазборкиРаспоряженияНаОформлениеВсегоВРаботе,
	|	0 КАК ДокументыСборкиРазборкиРаспоряженияНаОформлениеНаСегодня
	|ПОМЕСТИТЬ ВтКоличествоРаспоряжений
	|ИЗ
	|	ВтРаспоряжения КАК ВтРаспоряжения
	|ГДЕ
	|	НЕ ВтРаспоряжения.НаСегодня
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВтРаспоряжения.Распоряжение)
	|ИЗ
	|	ВтРаспоряжения КАК ВтРаспоряжения
	|ГДЕ
	|	ВтРаспоряжения.НаСегодня
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(КоличествоРаспоряжений.ДокументыСборкиРазборкиРаспоряженияНаОформлениеВсегоВРаботе) КАК ДокументыСборкиРазборкиРаспоряженияНаОформлениеВсегоВРаботе,
	|	МАКСИМУМ(КоличествоРаспоряжений.ДокументыСборкиРазборкиРаспоряженияНаОформлениеНаСегодня) КАК ДокументыСборкиРазборкиРаспоряженияНаОформлениеНаСегодня
	|ИЗ
	|	ВтКоличествоРаспоряжений КАК КоличествоРаспоряжений";
	
	ДоступныеТипы = Новый Массив();
	ДоступныеТипы.Добавить(Тип("ДокументСсылка.СборкаТоваров"));
	ДоступныеТипы.Добавить(Тип("ДокументСсылка.ЗаказНаСборку"));
	
	Запрос.УстановитьПараметр("ДоступныеТипы", ДоступныеТипы);
	Запрос.УстановитьПараметр("ДатаОтгрузки", КонецДня(ОбщиеПараметрыЗапросов.ТекущаяДата));
	
	Результат = ТекущиеДелаСлужебный.ЧисловыеПоказателиТекущихДел(Запрос, ОбщиеПараметрыЗапросов);
	
	// Заполнение дел.
	// ДокументыСборкиРазборки
	ДелоРодитель = ТекущиеДела.Добавить();
	ДелоРодитель.Идентификатор  = "ДокументыСборкиРазборки";
	ДелоРодитель.Представление  = НСтр("ru='Документы сборки разборки';uk='Документи збирання розбирання'");
	ДелоРодитель.ЕстьДела       = Результат.ДокументыСборкиРазборкиРаспоряженияНаОформлениеВсегоВРаботе > 0;
	ДелоРодитель.Владелец       = Метаданные.Подсистемы.Склад;
	
	// ДокументыСборкиРазборкиРаспоряженияНаОформлениеВсегоВРаботе
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ДатаОтгрузки", ОбщиеПараметрыЗапросов.ПустаяДата);
	ПараметрыОтбора.Вставить("Склад", Справочники.Склады.ПустаяСсылка());
	ПараметрыОтбора.Вставить("ТипНакладной", Тип("ДокументСсылка.СборкаТоваров"));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СтруктураБыстрогоОтбора", ПараметрыОтбора);
	ПараметрыФормы.Вставить("ИмяТекущейСтраницы", "ГруппаКОформлению");
	
	Дело = ТекущиеДела.Добавить();
	Дело.Идентификатор  = "ДокументыСборкиРазборкиРаспоряженияНаОформлениеВсегоВРаботе";
	Дело.ЕстьДела       = Результат.ДокументыСборкиРазборкиРаспоряженияНаОформлениеВсегоВРаботе > 0;
	Дело.Представление  = НСтр("ru='Распоряжения на оформление документов в работе';uk='Розпорядження на оформлення документів у роботі'");
	Дело.Количество     = Результат.ДокументыСборкиРазборкиРаспоряженияНаОформлениеВсегоВРаботе;
	Дело.Важное         = Ложь;
	Дело.Форма          = ИмяФормы;
	Дело.ПараметрыФормы = ПараметрыФормы;
	Дело.Владелец       = "ДокументыСборкиРазборки";
	
	// ДокументыСборкиРазборкиРаспоряженияНаОформлениеНаСегодня
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("ДатаОтгрузки", ОбщиеПараметрыЗапросов.ТекущаяДата);
	ПараметрыОтбора.Вставить("Склад", Справочники.Склады.ПустаяСсылка());
	ПараметрыОтбора.Вставить("ТипНакладной", Тип("ДокументСсылка.СборкаТоваров"));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СтруктураБыстрогоОтбора", ПараметрыОтбора);
	ПараметрыФормы.Вставить("ИмяТекущейСтраницы", "ГруппаКОформлению");
	
	Дело = ТекущиеДела.Добавить();
	Дело.Идентификатор  = "ДокументыСборкиРазборкиРаспоряженияНаОформлениеНаСегодня";
	Дело.ЕстьДела       = Результат.ДокументыСборкиРазборкиРаспоряженияНаОформлениеНаСегодня > 0;
	Дело.Представление  = НСтр("ru='Распоряжения на оформление документов на сегодня';uk='Розпорядження на оформлення документів на сьогодні'");
	Дело.Количество     = Результат.ДокументыСборкиРазборкиРаспоряженияНаОформлениеНаСегодня;
	Дело.Важное         = Ложь;
	Дело.Форма          = ИмяФормы;
	Дело.ПараметрыФормы = ПараметрыФормы;
	Дело.Владелец       = "ДокументыСборкиРазборки";
	
КонецПроцедуры

#КонецОбласти

#Область Серии

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийШапкиСборки()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерий.Номенклатура,
	|	ТаблицаСерий.Характеристика,
	|	ТаблицаСерий.Назначение,
	|	СУММА(ТаблицаСерий.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК ТаблицаСерий
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерий.Номенклатура,
	|	ТаблицаСерий.Характеристика,
	|	ТаблицаСерий.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА Склады.ИспользоватьОрдернуюСхемуПриПоступлении
	|				И &Дата >= Склады.ДатаНачалаОрдернойСхемыПриПоступлении
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 8
	|					ИНАЧЕ 7
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке
	|				И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеСобранныхКомплектов
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 4
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|								ТОГДА 2
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|				ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|			ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийШапкиРазборки()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерий.Номенклатура,
	|	ТаблицаСерий.Характеристика,
	|	ТаблицаСерий.Назначение,
	|	СУММА(ТаблицаСерий.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК ТаблицаСерий
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерий.Номенклатура,
	|	ТаблицаСерий.Характеристика,
	|	ТаблицаСерий.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА Склады.ИспользоватьОрдернуюСхемуПриОтгрузке
	|				И &Дата >= Склады.ДатаНачалаОрдернойСхемыПриОтгрузке
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 6
	|								ИНАЧЕ 5
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|								ТОГДА 8
	|							ИНАЧЕ 7
	|						КОНЕЦ
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПоФактуОтбора
	|				И &ФактОтбора
	|				И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеКомплектовДляРазборки
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 4
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|								ТОГДА 2
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|				ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|			ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийТЧСборки()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерий.Номенклатура,
	|	ТаблицаСерий.Характеристика,
	|	ТаблицаСерий.Назначение,
	|	СУММА(ТаблицаСерий.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК ТаблицаСерий
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерий.Номенклатура,
	|	ТаблицаСерий.Характеристика,
	|	ТаблицаСерий.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА Склады.ИспользоватьОрдернуюСхемуПриОтгрузке
	|				И &Дата >= Склады.ДатаНачалаОрдернойСхемыПриОтгрузке
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 6
	|								ИНАЧЕ 5
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|								ТОГДА 8
	|							ИНАЧЕ 7
	|						КОНЕЦ
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПоФактуОтбора
	|				И &ФактОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 4
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|								ТОГДА 2
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|				ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|			ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийТЧРазборки()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Серия,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.Назначение,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСерий.Номенклатура,
	|	ТаблицаСерий.Характеристика,
	|	ТаблицаСерий.Назначение,
	|	СУММА(ТаблицаСерий.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК ТаблицаСерий
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерий.Номенклатура,
	|	ТаблицаСерий.Характеристика,
	|	ТаблицаСерий.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА Склады.ИспользоватьОрдернуюСхемуПриПоступлении
	|				И &Дата >= Склады.ДатаНачалаОрдернойСхемыПриПоступлении
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И ТоварыДляЗапроса.Количество > 0
	|						ТОГДА 8
	|					ИНАЧЕ 7
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке
	|				И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемкеКомплектующихПослеРазборки
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И ТоварыДляЗапроса.Количество > 0
	|									ТОГДА 4
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыДляЗапроса.Количество = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И ТоварыДляЗапроса.Количество > 0
	|								ТОГДА 2
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.Назначение = СерииДляЗапроса.Назначение
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|				ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|			ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.Назначение = ТоварыДляЗапроса.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	Возврат ТекстЗапроса;
КонецФункции

#КонецОбласти

#Область ЗаполнениеДокумента

Процедура ПараметрыЗапросаДляСозданияНаОсновании(ПараметрыЗапросов, ИменаЗапросов, ИменаПодзапросов, ДанныеОтбора)
	
	ПараметрыЗапросов.Вставить("МассивЗаказов",    ДанныеОтбора.МассивЗаказов);
	ПараметрыЗапросов.Вставить("ОтобратьПоЗаказу", Истина);
	
	Если ДанныеОтбора.ЗаполнятьПоОрдеру Тогда
		
		ИменаЗапросов.Добавить("ВтЗаказыОтбор");
		ИменаЗапросов.Добавить("ТаблицаСобраноРазобраноКомплект");
		ИменаЗапросов.Добавить("ТаблицаСобраноРазобраноКомплектующие");
		ИменаЗапросов.Добавить("ТаблицаКомплект");
		
		ИменаЗапросов.Добавить("ТаблицаКомплектующие");
		ИменаПодзапросов.Добавить("БлокРегистрЗаказыКомплектующие");
		
		Если ДанныеОтбора.РеквизитыШапки.ТипОперации = Перечисления.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие Тогда
			ИменаЗапросов.Добавить("ТаблицаСерииРазборано");
		КонецЕсли;
		
	Иначе
		
		ИменаЗапросов.Добавить("ВтЗаказыОтбор");
		ИменаЗапросов.Добавить("ТаблицаКомплект");
		
		ИменаЗапросов.Добавить("ТаблицаКомплектующие");
		ИменаПодзапросов.Добавить("БлокРегистрЗаказыКомплектующие");
		
		Если ДанныеОтбора.РеквизитыШапки.ТипОперации = Перечисления.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие Тогда
			ИменаЗапросов.Добавить("ТаблицаСерии");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПараметрыЗапросаДляПодбора(ПараметрыЗапросов, ИменаЗапросов, ИменаПодзапросов, ДанныеОтбора)
	
	ПараметрыЗапросов.Вставить("МассивЗаказов",    ДанныеОтбора.МассивЗаказов);
	ПараметрыЗапросов.Вставить("ОтобратьПоЗаказу", ДанныеОтбора.МассивЗаказов.Количество() = 1);
	ПараметрыЗапросов.Вставить("Регистратор",      ДанныеОтбора.РеквизитыШапки.Ссылка);
	ПараметрыЗапросов.Вставить("Организация",      ДанныеОтбора.РеквизитыШапки.Организация);
	ПараметрыЗапросов.Вставить("Подразделение",    ДанныеОтбора.РеквизитыШапки.Подразделение);
	ПараметрыЗапросов.Вставить("Склад",            ДанныеОтбора.РеквизитыШапки.Склад);
	ПараметрыЗапросов.Вставить("ТипОперации",      ДанныеОтбора.РеквизитыШапки.ТипОперации);
	ПараметрыЗапросов.Вставить("ТоварыНакладной",  ДанныеОтбора.ТоварыНакладной);
	ПараметрыЗапросов.Вставить("УчитыватьСобирается", Истина);
	ПараметрыЗапросов.Вставить("НаправлениеДеятельности", ДанныеОтбора.РеквизитыШапки.НаправлениеДеятельности);
	
	ИменаЗапросов.Добавить("ВтЗаказыОтбор");
	ИменаЗапросов.Добавить("ВтНакладная");
	ИменаЗапросов.Добавить("ТаблицаСобраноРазобраноКомплектующие");
	ИменаЗапросов.Добавить("ТаблицаКомплект");
	ИменаЗапросов.Добавить("ТаблицаСобраноРазобраноКомплект");
	
	ИменаЗапросов.Добавить("ТаблицаКомплектующие");
	ИменаПодзапросов.Добавить("БлокРегистрЗаказыКомплектующие");
	ИменаПодзапросов.Добавить("БлокСторноНакладнаяКомплектующие");
	ИменаПодзапросов.Добавить("БлокРегистрЗаказыКомплект");
	ИменаПодзапросов.Добавить("БлокСторноНакладнаяКомплект");
	ИменаПодзапросов.Добавить("БлокНовыеДвиженияНакладнаяКомплектующие");
	
КонецПроцедуры

Процедура ПараметрыЗапросаДляПерезаполнения(ПараметрыЗапросов, ИменаЗапросов, ИменаПодзапросов, ДанныеОтбора)
	
	ПараметрыЗапросов.Вставить("МассивЗаказов",    ДанныеОтбора.МассивЗаказов);
	ПараметрыЗапросов.Вставить("ОтобратьПоЗаказу", Истина);
	ПараметрыЗапросов.Вставить("Регистратор",      ДанныеОтбора.РеквизитыШапки.Ссылка);
	ПараметрыЗапросов.Вставить("ТоварыНакладной",  ДанныеОтбора.ТоварыНакладной);
	ПараметрыЗапросов.Вставить("УчитыватьСобирается", Истина);
	ПараметрыЗапросов.Вставить("ЗаполнятьПоСобирается", Истина);
	
	ИменаЗапросов.Добавить("ВтЗаказыОтбор");
	ИменаЗапросов.Добавить("ВтНакладная");
	ИменаЗапросов.Добавить("ТаблицаСобраноРазобраноКомплект");
	ИменаЗапросов.Добавить("ТаблицаСобраноРазобраноКомплектующие");
	ИменаЗапросов.Добавить("ТаблицаКомплект");
	
	ИменаЗапросов.Добавить("ТаблицаКомплектующие");
	ИменаПодзапросов.Добавить("БлокРегистрЗаказыКомплектующие");
	ИменаПодзапросов.Добавить("БлокСторноНакладнаяКомплектующие");
	ИменаПодзапросов.Добавить("БлокНовыеДвиженияНакладнаяКомплектующие");
	
	Если ДанныеОтбора.РеквизитыШапки.ТипОперации = Перечисления.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие Тогда
		ИменаЗапросов.Добавить("ТаблицаСерииРазборано");
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаВременнойТаблицыРаспоряжений()
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ЗаказНаСборку.Ссылка КАК Заказ,
		|	ВЫБОР КОГДА ЗаказНаСборку.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих) ТОГДА
		|				ИСТИНА
		|			ИНАЧЕ
		|				ЛОЖЬ
		|		КОНЕЦ            КАК ЭтоСборка,
		|	ВЫБОР КОГДА ЗаказНаСборку.СтатусУказанияСерий = 10
		|		И ЗаказНаСборку.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие) ТОГДА
		|				ИСТИНА
		|			ИНАЧЕ
		|				ЛОЖЬ
		|		КОНЕЦ            КАК СерииУказываютсяВОтдельнойТабличнойЧасти
		|ПОМЕСТИТЬ ВТЗаказыОтбор
		|ИЗ
		|	Документ.ЗаказНаСборку КАК ЗаказНаСборку
		|ГДЕ
		|	ВЫБОР
		|		КОГДА &ОтобратьПоЗаказу ТОГДА
		|			ЗаказНаСборку.Ссылка В (&МассивЗаказов)
		|		ИНАЧЕ
		|			ЗаказНаСборку.Подразделение = &Подразделение
		|			И ЗаказНаСборку.Организация = &Организация
		|			И ЗаказНаСборку.Склад       = &Склад
		|			И ЗаказНаСборку.ТипОперации = &ТипОперации
		|			И ЗаказНаСборку.НаправлениеДеятельности = &НаправлениеДеятельности
		|	КОНЕЦ
		|	И ЗаказНаСборку.Проведен
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Регистратор КАК Заказ,
		|	ВЫБОР КОГДА ДанныеДокумента.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих) ТОГДА
		|				ИСТИНА
		|			ИНАЧЕ
		|				ЛОЖЬ
		|		КОНЕЦ            КАК ЭтоСборка,
		|	ВЫБОР КОГДА ДанныеДокумента.СтатусУказанияСерий = 10
		|		И ДанныеДокумента.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие) ТОГДА
		|				ИСТИНА
		|			ИНАЧЕ
		|				ЛОЖЬ
		|		КОНЕЦ            КАК СерииУказываютсяВОтдельнойТабличнойЧасти
		|ИЗ
		|	Документ.СборкаТоваров КАК ДанныеДокумента
		|ГДЕ
		|	ДанныеДокумента.Ссылка = &Регистратор
		|;
		|
		|//////////////////////////////////////////////////
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВременнойТаблицыНакладной()
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Таблица.Количество            КАК Количество,
		|
		|	Таблица.НомерСтроки           КАК НомерСтроки,
		|	Таблица.Номенклатура          КАК Номенклатура,
		|	Таблица.Характеристика        КАК Характеристика,
		|	Таблица.Назначение            КАК Назначение,
		|	Таблица.Серия                 КАК Серия,
		|
		|	Таблица.КодСтроки             КАК КодСтроки,
		|	Таблица.Упаковка              КАК Упаковка,
		|
		|	Таблица.Заказ                 КАК Заказ
		|
		|ПОМЕСТИТЬ ВТНакладная
		|ИЗ
		|	&ТоварыНакладной КАК Таблица
		|;
		|
		|//////////////////////////////////////////////////
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОстаткиРегистраЗаказыКомплектующие()
	
	ТекстЗапроса =
		"	ВЫБРАТЬ
		|		ТаблицаОстатки.ЗаказНаСборку КАК Заказ,
		|		ТаблицаОстатки.КодСтроки     КАК КодСтроки,
		|
		|		ТаблицаОстатки.КОформлениюОстаток КАК КоличествоВЗаказе,
		|		0                                 КАК КоличествоВНакладной,
		|
		|		// Справочная информация.
		|		ТаблицаОстатки.Номенклатура        КАК Номенклатура,
		|		ТаблицаОстатки.Характеристика      КАК Характеристика,
		|
		|		ВЫБОР КОГДА Таблица.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие) ТОГДА
		|
		|					Таблица.Назначение
		|
		|				КОГДА Таблица.ВариантОбеспечения В(
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)) ТОГДА
		|
		|						ВЫБОР КОГДА Таблица.Ссылка.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ТОГДА
		|									Таблица.Ссылка.НазначениеТовары
		|								ИНАЧЕ
		|									Таблица.Ссылка.Назначение
		|							КОНЕЦ
		|
		|				ИНАЧЕ
		|
		|					ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|
		|			КОНЕЦ                            КАК Назначение,
		|
		|		ТаблицаОстатки.Серия                 КАК Серия,
		|
		|		ДанныеДокумента.Дата                 КАК Дата,
		|		Таблица.НомерСтроки                  КАК НомерСтроки,
		|		ДанныеДокумента.НачалоСборкиРазборки КАК ДатаОтгрузки,
		|		ЛОЖЬ                                 КАК ПрисутствуетВДокументе,
		|
		|		Таблица.Упаковка                          КАК Упаковка,
		|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК УпаковкаКоэффициент
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаСборку.Остатки(,
		|				ЗаказНаСборку В(
		|					ВЫБРАТЬ
		|						Таблица.Заказ КАК Заказ
		|					ИЗ
		|						ВТЗаказыОтбор КАК Таблица)) КАК ТаблицаОстатки
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку.Товары КАК Таблица
		|			ПО ТаблицаОстатки.ЗаказНаСборку = Таблица.Ссылка
		|			 И ТаблицаОстатки.КодСтроки = Таблица.КодСтроки
		|
		|			// Использование связи по номенклатуре позволяет всегда получать остатки комплектующих, а не комплектов.
		|			 И ТаблицаОстатки.Номенклатура = Таблица.Номенклатура
		|			 И ТаблицаОстатки.Характеристика = Таблица.Характеристика
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку КАК ДанныеДокумента
		|			ПО ТаблицаОстатки.ЗаказНаСборку = ДанныеДокумента.Ссылка";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Таблица.Упаковка",
			"Таблица.Номенклатура"));
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОстаткиРегистраЗаказыКомплект()
	
	ТекстЗапроса =
		"	ВЫБРАТЬ
		|		ТаблицаОстатки.ЗаказНаСборку КАК Заказ,
		|		ТаблицаОстатки.КодСтроки     КАК КодСтроки,
		|
		|		ТаблицаОстатки.КОформлениюОстаток КАК КоличествоВЗаказе,
		|		0                                 КАК КоличествоВНакладной,
		|
		|		// Справочная информация.
		|		ТаблицаОстатки.Номенклатура        КАК Номенклатура,
		|		ТаблицаОстатки.Характеристика      КАК Характеристика,
		|
		|		ВЫБОР КОГДА ДанныеДокумента.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих) ТОГДА
		|
		|					ДанныеДокумента.Назначение
		|
		|				КОГДА ДанныеДокумента.ВариантОбеспечения В(
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)) ТОГДА
		|
		|					ДанныеДокумента.Назначение
		|
		|				ИНАЧЕ
		|
		|					ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|
		|			КОНЕЦ                            КАК Назначение,
		|
		|		ВЫБОР КОГДА ДанныеДокумента.СтатусУказанияСерий = 10 ТОГДА
		|					ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|				ИНАЧЕ
		|					ТаблицаОстатки.Серия
		|			КОНЕЦ                            КАК Серия,
		|
		|		ДанныеДокумента.Дата                 КАК Дата,
		|		0                                    КАК НомерСтроки,
		|		ДанныеДокумента.НачалоСборкиРазборки КАК ДатаОтгрузки,
		|		ЛОЖЬ                                 КАК ПрисутствуетВДокументе,
		|
		|		ДанныеДокумента.Упаковка             КАК Упаковка,
		|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК УпаковкаКоэффициент
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаСборку.Остатки(,
		|				ЗаказНаСборку В(
		|					ВЫБРАТЬ
		|						Таблица.Заказ КАК Заказ
		|					ИЗ
		|						ВТЗаказыОтбор КАК Таблица)) КАК ТаблицаОстатки
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку КАК ДанныеДокумента
		|			ПО ТаблицаОстатки.ЗаказНаСборку = ДанныеДокумента.Ссылка
		|
		|			// Использование связи по номенклатуре позволяет всегда получать остатки комплектов, а не комплектующих.
		|			 И ТаблицаОстатки.Номенклатура   = ДанныеДокумента.Номенклатура
		|			 И ТаблицаОстатки.Характеристика = ДанныеДокумента.Характеристика";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ДанныеДокумента.Упаковка",
			"ДанныеДокумента.Номенклатура"));
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСторноДвиженийНакладнаяКомплектующие()
	
	ТекстЗапроса =
		"	ВЫБРАТЬ
		|		ТаблицаСторно.ЗаказНаСборку      КАК Заказ,
		|		ТаблицаСторно.КодСтроки          КАК КодСтроки,
		|
		|		ТаблицаСторно.КОформлению        КАК КоличествоВЗаказе,
		|		0                                КАК КоличествоВНакладной,
		|
		|		// Справочная информация.
		|		ТаблицаСторно.Номенклатура       КАК Номенклатура,
		|		ТаблицаСторно.Характеристика     КАК Характеристика,
		|
		|		ВЫБОР КОГДА Таблица.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие) ТОГДА
		|
		|					Таблица.Назначение
		|
		|				КОГДА Таблица.ВариантОбеспечения В(
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)) ТОГДА
		|
		|						Таблица.Ссылка.НазначениеТовары
		|
		|				ИНАЧЕ
		|
		|					ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|
		|			КОНЕЦ                            КАК Назначение,
		|
		|		ТаблицаСторно.Серия              КАК Серия,
		|		ДанныеДокумента.Дата             КАК Дата,
		|		Таблица.НомерСтроки                  КАК НомерСтроки,
		|		ДанныеДокумента.НачалоСборкиРазборки КАК ДатаОтгрузки,
		|		ЛОЖЬ                                 КАК ПрисутствуетВДокументе,
		|
		|		Таблица.Упаковка                          КАК Упаковка,
		|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК УпаковкаКоэффициент
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаСборку КАК ТаблицаСторно
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку.Товары КАК Таблица
		|			ПО ТаблицаСторно.ЗаказНаСборку = Таблица.Ссылка
		|			 И ТаблицаСторно.КодСтроки = Таблица.КодСтроки
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку КАК ДанныеДокумента
		|			ПО ТаблицаСторно.ЗаказНаСборку = ДанныеДокумента.Ссылка
		|
		|	ГДЕ
		|		ТаблицаСторно.Регистратор = &Регистратор
		|		И ТаблицаСторно.ЗаказНаСборку В(
		|			ВЫБРАТЬ
		|				Таблица.Заказ КАК Заказ
		|			ИЗ
		|				ВТЗаказыОтбор КАК Таблица)
		|
		|		// Необходимо получать сторно только комплектующих.
		|		И(
		|			ТаблицаСторно.ЗаказНаСборку.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
		|				И ТаблицаСторно.ТипСборки = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Отгрузка)
		|
		|			ИЛИ ТаблицаСторно.ЗаказНаСборку.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
		|				И ТаблицаСторно.ТипСборки = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Поступление))
		|
		|		И ТаблицаСторно.Активность";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Таблица.Упаковка",
			"Таблица.Номенклатура"));
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСторноДвиженийНакладнаяКомплект()
	
	ТекстЗапроса =
		"	ВЫБРАТЬ
		|		ТаблицаСторно.ЗаказНаСборку      КАК Заказ,
		|		ТаблицаСторно.КодСтроки          КАК КодСтроки,
		|
		|		ТаблицаСторно.КОформлению        КАК КоличествоВЗаказе,
		|		0                                КАК КоличествоВНакладной,
		|
		|		// Справочная информация.
		|		ТаблицаСторно.Номенклатура       КАК Номенклатура,
		|		ТаблицаСторно.Характеристика     КАК Характеристика,
		|
		|		ВЫБОР КОГДА ДанныеДокумента.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих) ТОГДА
		|
		|					ДанныеДокумента.Назначение
		|
		|				КОГДА ДанныеДокумента.ВариантОбеспечения В(
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)) ТОГДА
		|
		|					ДанныеДокумента.Назначение
		|
		|				ИНАЧЕ
		|
		|					ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|
		|			КОНЕЦ                            КАК Назначение,
		|
		|		ВЫБОР КОГДА ДанныеДокумента.СтатусУказанияСерий = 10 ТОГДА
		|					ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|				ИНАЧЕ
		|					ТаблицаСторно.Серия
		|			КОНЕЦ                            КАК Серия,
		|
		|		ДанныеДокумента.Дата                 КАК Дата,
		|		0                                    КАК НомерСтроки,
		|		ДанныеДокумента.НачалоСборкиРазборки КАК ДатаОтгрузки,
		|		ЛОЖЬ                                 КАК ПрисутствуетВДокументе,
		|
		|		ДанныеДокумента.Упаковка             КАК Упаковка,
		|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК УпаковкаКоэффициент
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаСборку КАК ТаблицаСторно
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку КАК ДанныеДокумента
		|			ПО ТаблицаСторно.ЗаказНаСборку = ДанныеДокумента.Ссылка
		|
		|	ГДЕ
		|		ТаблицаСторно.Регистратор = &Регистратор
		|		И ТаблицаСторно.ЗаказНаСборку В(
		|			ВЫБРАТЬ
		|				Таблица.Заказ КАК Заказ
		|			ИЗ
		|				ВТЗаказыОтбор КАК Таблица)
		|
		|		// Необходимо получать сторно только комплектов.
		|		И(
		|			ТаблицаСторно.ЗаказНаСборку.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
		|				И ТаблицаСторно.ТипСборки = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Поступление)
		|
		|			ИЛИ ТаблицаСторно.ЗаказНаСборку.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
		|				И ТаблицаСторно.ТипСборки = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Отгрузка))
		|
		|		И ТаблицаСторно.Активность";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ДанныеДокумента.Упаковка",
			"ДанныеДокумента.Номенклатура"));
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаНовыеДвиженияНакладнаяКомплектующие()
	
	ТекстЗапроса =
		"	ВЫБРАТЬ
		|		Таблица.Заказ       КАК Заказ,
		|		Таблица.КодСтроки   КАК КодСтроки,
		|		0                   КАК КоличествоВЗаказе,
		|		Таблица.Количество  КАК КоличествоВНакладной,
		|
		|		// Справочная информация.
		|		Таблица.Номенклатура          КАК Номенклатура,
		|		Таблица.Характеристика        КАК Характеристика,
		|		Таблица.Назначение            КАК Назначение,
		|		Таблица.Серия                 КАК Серия,
		|		НЕОПРЕДЕЛЕНО                  КАК Дата,
		|		Таблица.НомерСтроки           КАК НомерСтроки,
		|		НЕОПРЕДЕЛЕНО                  КАК ДатаОтгрузки,
		|		ИСТИНА                        КАК ПрисутствуетВДокументе,
		|
		|		Таблица.Упаковка              КАК Упаковка,
		|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК УпаковкаКоэффициент
		|	ИЗ
		|		ВтНакладная КАК Таблица";
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ВЫРАЗИТЬ(Таблица.Упаковка КАК Справочник.УпаковкиЕдиницыИзмерения)",
			"ВЫРАЗИТЬ(Таблица.Номенклатура КАК Справочник.Номенклатура)"));
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОстаткиРегистраЗаказыИСторноДокументаКомплект()
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	МАКСИМУМ(Набор.Номенклатура)   КАК Номенклатура,
		|	МАКСИМУМ(Набор.Характеристика) КАК Характеристика,
		|
		|	МАКСИМУМ(Набор.Назначение)     КАК Назначение,
		|	МАКСИМУМ(Набор.Упаковка)       КАК Упаковка,
		|
		|	СУММА(Набор.Количество)                   КАК Количество,
		|	СУММА(Набор.Количество)
		|		/ МАКСИМУМ(Набор.УпаковкаКоэффициент) КАК КоличествоУпаковок,
		|	МАКСИМУМ(Набор.УпаковкаКоэффициент) КАК УпаковкаКоэффициент
		|ИЗ(
		|	ВЫБРАТЬ
		|		ТаблицаОстатки.Номенклатура   КАК Номенклатура,
		|		ТаблицаОстатки.Характеристика КАК Характеристика,
		|
		|		ВЫБОР КОГДА ДанныеДокумента.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих) ТОГДА
		|
		|					ДанныеДокумента.Назначение
		|
		|				КОГДА ДанныеДокумента.ВариантОбеспечения В(
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)) ТОГДА
		|
		|					ДанныеДокумента.Назначение
		|
		|				ИНАЧЕ
		|
		|					ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|
		|			КОНЕЦ                            КАК Назначение,
		|
		|		ДанныеДокумента.Упаковка                          КАК Упаковка,
		|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК УпаковкаКоэффициент,
		|
		|		ТаблицаОстатки.КОформлениюОстаток КАК Количество
		|
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаСборку.Остатки(,
		|				ЗаказНаСборку В(
		|					ВЫБРАТЬ
		|						Таблица.Заказ КАК Заказ
		|					ИЗ
		|						ВТЗаказыОтбор КАК Таблица)) КАК ТаблицаОстатки
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку КАК ДанныеДокумента
		|			ПО ТаблицаОстатки.ЗаказНаСборку = ДанныеДокумента.Ссылка
		|
		|			// Использование связи по номенклатуре позволяет всегда получать остатки комплектов, а не комплектующих.
		|			 И ТаблицаОстатки.Номенклатура   = ДанныеДокумента.Номенклатура
		|			 И ТаблицаОстатки.Характеристика = ДанныеДокумента.Характеристика
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		ТаблицаСторно.Номенклатура   КАК Номенклатура,
		|		ТаблицаСторно.Характеристика КАК Характеристика,
		|
		|		ВЫБОР КОГДА ДанныеДокумента.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих) ТОГДА
		|
		|					ДанныеДокумента.Назначение
		|
		|				КОГДА ДанныеДокумента.ВариантОбеспечения В(
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Обособленно),
		|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)) ТОГДА
		|
		|					ДанныеДокумента.Назначение
		|
		|				ИНАЧЕ
		|
		|					ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|
		|			КОНЕЦ                            КАК Назначение,
		|
		|		ДанныеДокумента.Упаковка  КАК Упаковка,
		|		ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК УпаковкаКоэффициент,
		|
		|		ТаблицаСторно.КОформлению КАК Количество
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаСборку КАК ТаблицаСторно
		|
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаСборку КАК ДанныеДокумента
		|			ПО ДанныеДокумента.Ссылка = &Регистратор
		|
		|			// Использование связи по номенклатуре позволяет всегда получать остатки комплектов, а не комплектующих.
		|			 И ТаблицаСторно.Номенклатура   = ДанныеДокумента.Номенклатура
		|			 И ТаблицаСторно.Характеристика = ДанныеДокумента.Характеристика
		|	ГДЕ
		|		ТаблицаСторно.Регистратор = &Регистратор
		|		И ТаблицаСторно.ЗаказНаСборку В(
		|			ВЫБРАТЬ
		|				Таблица.Заказ КАК Заказ
		|			ИЗ
		|				ВТЗаказыОтбор КАК Таблица)
		|		И ТаблицаСторно.Активность) КАК Набор
		|;
		|
		|///////////////////////////////////////////////////////
		|";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ДанныеДокумента.Упаковка",
			"ДанныеДокумента.Номенклатура"));
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОстаткиСерийРазбираемогоКомплектаИСторноДокумента()
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Набор.Номенклатура   КАК Номенклатура,
		|	Набор.Характеристика КАК Характеристика,
		|	Набор.Серия          КАК Серия,
		|
		|	СУММА(Набор.Количество) КАК Количество
		|ИЗ(
		|	ВЫБРАТЬ
		|		ТаблицаОстатки.Номенклатура       КАК Номенклатура,
		|		ТаблицаОстатки.Характеристика     КАК Характеристика,
		|		ТаблицаОстатки.Серия              КАК Серия,
		|		ТаблицаОстатки.КОформлениюОстаток КАК Количество
		|
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаСборку.Остатки(,
		|				ЗаказНаСборку В(
		|					ВЫБРАТЬ
		|						Таблица.Заказ КАК Заказ
		|					ИЗ
		|						ВТЗаказыОтбор КАК Таблица)
		|				И ТипСборки = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Отгрузка)
		|				И Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК ТаблицаОстатки
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		ТаблицаСторно.Номенклатура   КАК Номенклатура,
		|		ТаблицаСторно.Характеристика КАК Характеристика,
		|		ТаблицаСторно.Серия          КАК Серия,
		|		ТаблицаСторно.КОформлению    КАК Количество
		|	ИЗ
		|		РегистрНакопления.ЗаказыНаСборку КАК ТаблицаСторно
		|	ГДЕ
		|		ТаблицаСторно.Регистратор = &Регистратор
		|		И ТипСборки = ЗНАЧЕНИЕ(Перечисление.ТипыДвиженияЗапасов.Отгрузка)
		|		И Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|		И ТаблицаСторно.ЗаказНаСборку В(
		|			ВЫБРАТЬ
		|				Таблица.Заказ КАК Заказ
		|			ИЗ
		|				ВТЗаказыОтбор КАК Таблица)
		|		И ТаблицаСторно.Активность) КАК Набор
		|СГРУППИРОВАТЬ ПО
		|	Набор.Номенклатура, Набор.Характеристика, Набор.Серия
		|;
		|
		|////////////////////////////////////////////
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСбораноРазобраноКомплектующие()
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаОстатки.ДокументОтгрузки       КАК ЗаказНаСборку,
		|	ТаблицаОстатки.Номенклатура           КАК Номенклатура,
		|	ТаблицаОстатки.Характеристика         КАК Характеристика,
		|	ТаблицаОстатки.Назначение             КАК Назначение,
		|	ТаблицаОстатки.Серия                  КАК Серия,
		|	1                                     КАК УпаковкаКоэффициент,
		|	
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ДокументОтгрузки = &Регистратор ТОГДА
		|					ТаблицаОстатки.Собирается
		|				ИНАЧЕ
		|					0
		|		КОНЕЦ)                            КАК Собирается,
		|	
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|					ТаблицаОстатки.КОтгрузке
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ТаблицаОстатки.Регистратор <> &Регистратор ТОГДА
		|					- ТаблицаОстатки.КОформлению
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА &ЗаполнятьПоСобирается И ТаблицаОстатки.ДокументОтгрузки = &Регистратор ТОГДА
		|					ТаблицаОстатки.Собирается
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ТаблицаОстатки.Собрано)         КАК Количество
		|ИЗ
		|	ВТЗаказыОтбор КАК Таблица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке КАК ТаблицаОстатки
		|		ПО Таблица.Заказ = ТаблицаОстатки.ДокументОтгрузки
		|		 И ТаблицаОстатки.Активность
		|		 И Таблица.ЭтоСборка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаОстатки.ДокументОтгрузки,
		|	ТаблицаОстатки.Номенклатура, ТаблицаОстатки.Характеристика, ТаблицаОстатки.Назначение, ТаблицаОстатки.Серия
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|					ТаблицаОстатки.КОтгрузке
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ТаблицаОстатки.Регистратор <> &Регистратор ТОГДА
		|					- ТаблицаОстатки.КОформлению
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА &УчитыватьСобирается И ТаблицаОстатки.ДокументОтгрузки = &Регистратор ТОГДА
		|					ТаблицаОстатки.Собирается
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ТаблицаОстатки.Собрано) > 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаОстатки.ДокументПоступления    КАК ЗаказНаСборку,
		|	ТаблицаОстатки.Номенклатура           КАК Номенклатура,
		|	ТаблицаОстатки.Характеристика         КАК Характеристика,
		|	ТаблицаОстатки.Назначение             КАК Назначение,
		|	ТаблицаОстатки.Серия                  КАК Серия,
		|	1                                     КАК УпаковкаКоэффициент,
		|	
		|	0                                     КАК Собирается,
		|	
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|					ТаблицаОстатки.КОформлению
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ТаблицаОстатки.Регистратор <> &Регистратор ТОГДА
		|					- ТаблицаОстатки.КОформлению
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ)                        КАК Количество
		|ИЗ
		|	ВТЗаказыОтбор КАК Таблица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОформлениюПоступления КАК ТаблицаОстатки
		|		ПО Таблица.Заказ = ТаблицаОстатки.ДокументПоступления
		|		 И ТаблицаОстатки.Активность
		|		 И НЕ Таблица.ЭтоСборка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаОстатки.ДокументПоступления,
		|	ТаблицаОстатки.Номенклатура, ТаблицаОстатки.Характеристика, ТаблицаОстатки.Назначение, ТаблицаОстатки.Склад, ТаблицаОстатки.Серия
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|						ТаблицаОстатки.КОформлению
		|					ИНАЧЕ
		|						0
		|				КОНЕЦ
		|			+ ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ТаблицаОстатки.Регистратор <> &Регистратор ТОГДА
		|						- ТаблицаОстатки.КОформлению
		|					ИНАЧЕ
		|						0
		|				КОНЕЦ) > 0
		|
		|;
		|
		|///////////////////////////////////////////////////////////////////
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСбораноРазобраноКомплект()
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаОстатки.ДокументОтгрузки       КАК ЗаказНаСборку,
		|	ТаблицаОстатки.Номенклатура           КАК Номенклатура,
		|	ТаблицаОстатки.Характеристика         КАК Характеристика,
		|	ТаблицаОстатки.Назначение             КАК Назначение,
		|	ВЫБОР КОГДА Таблица.СерииУказываютсяВОтдельнойТабличнойЧасти ТОГДА
		|				ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|			ИНАЧЕ
		|				ТаблицаОстатки.Серия
		|		КОНЕЦ КАК Серия,
		|	1                                     КАК УпаковкаКоэффициент,
		|	
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ДокументОтгрузки = &Регистратор ТОГДА
		|					ТаблицаОстатки.Собирается
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ)                        КАК Собирается,
		|	
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|					ТаблицаОстатки.КОтгрузке
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ТаблицаОстатки.Регистратор <> &Регистратор ТОГДА
		|					- ТаблицаОстатки.КОформлению
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА &ЗаполнятьПоСобирается И ТаблицаОстатки.ДокументОтгрузки = &Регистратор ТОГДА
		|					ТаблицаОстатки.Собирается
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ТаблицаОстатки.Собрано)         КАК Количество
		|ИЗ
		|	ВТЗаказыОтбор КАК Таблица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке КАК ТаблицаОстатки
		|		ПО Таблица.Заказ = ТаблицаОстатки.ДокументОтгрузки
		|		 И ТаблицаОстатки.Активность
		|		 И НЕ Таблица.ЭтоСборка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаОстатки.ДокументОтгрузки,
		|	ТаблицаОстатки.Номенклатура, ТаблицаОстатки.Характеристика, ТаблицаОстатки.Назначение,
		|	ВЫБОР КОГДА Таблица.СерииУказываютсяВОтдельнойТабличнойЧасти ТОГДА
		|				ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
		|			ИНАЧЕ
		|				ТаблицаОстатки.Серия
		|		КОНЕЦ
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|					ТаблицаОстатки.КОтгрузке
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ТаблицаОстатки.Регистратор <> &Регистратор ТОГДА
		|					- ТаблицаОстатки.КОформлению
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА &УчитыватьСобирается И ТаблицаОстатки.ДокументОтгрузки = &Регистратор ТОГДА
		|					ТаблицаОстатки.Собирается
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ТаблицаОстатки.Собрано) > 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаОстатки.ДокументПоступления    КАК ЗаказНаСборку,
		|	ТаблицаОстатки.Номенклатура           КАК Номенклатура,
		|	ТаблицаОстатки.Характеристика         КАК Характеристика,
		|	ТаблицаОстатки.Назначение             КАК Назначение,
		|	ТаблицаОстатки.Серия                  КАК Серия,
		|	1                                     КАК УпаковкаКоэффициент,
		|	
		|	0                                     КАК Собирается,
		|	
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|					ТаблицаОстатки.КОформлению
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ТаблицаОстатки.Регистратор <> &Регистратор ТОГДА
		|					- ТаблицаОстатки.КОформлению
		|				ИНАЧЕ
		|					0
		|		КОНЕЦ)                            КАК Количество
		|ИЗ
		|	ВТЗаказыОтбор КАК Таблица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОформлениюПоступления КАК ТаблицаОстатки
		|		ПО Таблица.Заказ = ТаблицаОстатки.ДокументПоступления
		|		 И ТаблицаОстатки.Активность
		|		 И Таблица.ЭтоСборка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаОстатки.ДокументПоступления,
		|	ТаблицаОстатки.Номенклатура, ТаблицаОстатки.Характеристика, ТаблицаОстатки.Назначение, ТаблицаОстатки.Склад, ТаблицаОстатки.Серия
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|						ТаблицаОстатки.КОформлению
		|					ИНАЧЕ
		|						0
		|				КОНЕЦ
		|			+ ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ТаблицаОстатки.Регистратор <> &Регистратор ТОГДА
		|						- ТаблицаОстатки.КОформлению
		|					ИНАЧЕ
		|						0
		|				КОНЕЦ) > 0
		|
		|;
		|
		|///////////////////////////////////////////////////////////////////
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаРазбораноСерии()
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаОстатки.ДокументОтгрузки       КАК ЗаказНаСборку,
		|	ТаблицаОстатки.Номенклатура           КАК Номенклатура,
		|	ТаблицаОстатки.Характеристика         КАК Характеристика,
		|	ТаблицаОстатки.Назначение             КАК Назначение,
		|	ТаблицаОстатки.Серия                  КАК Серия,
		|	
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ДокументОтгрузки = &Регистратор ТОГДА
		|					ТаблицаОстатки.Собирается
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ)                        КАК Собирается,
		|	
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|					ТаблицаОстатки.КОтгрузке
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ТаблицаОстатки.Регистратор <> &Регистратор ТОГДА
		|					- ТаблицаОстатки.КОформлению
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА &ЗаполнятьПоСобирается И ТаблицаОстатки.ДокументОтгрузки = &Регистратор ТОГДА
		|					ТаблицаОстатки.Собирается
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ТаблицаОстатки.Собрано)         КАК Количество
		|ИЗ
		|	ВТЗаказыОтбор КАК Таблица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКОтгрузке КАК ТаблицаОстатки
		|		ПО Таблица.Заказ = ТаблицаОстатки.ДокументОтгрузки
		|		 И ТаблицаОстатки.Активность
		|		 И Таблица.СерииУказываютсяВОтдельнойТабличнойЧасти
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаОстатки.ДокументОтгрузки,
		|	ТаблицаОстатки.Номенклатура, ТаблицаОстатки.Характеристика, ТаблицаОстатки.Назначение,
		|	ТаблицаОстатки.Серия
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|					ТаблицаОстатки.КОтгрузке
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА ТаблицаОстатки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И ТаблицаОстатки.Регистратор <> &Регистратор ТОГДА
		|					- ТаблицаОстатки.КОформлению
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ВЫБОР КОГДА &УчитыватьСобирается И ТаблицаОстатки.ДокументОтгрузки = &Регистратор ТОГДА
		|					ТаблицаОстатки.Собирается
		|				ИНАЧЕ
		|					0
		|			КОНЕЦ
		|		+ ТаблицаОстатки.Собрано) > 0
		|
		|;
		|
		|///////////////////////////////////////////////////////////////////
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОбъединения(Имена, Тексты)
	
	ТекстОбъединения = "";
	ЭтоПервыйБлок = Истина;
	
	Для Каждого Имя Из Имена Цикл
		
		Если ЭтоПервыйБлок Тогда
			ЭтоПервыйБлок = Ложь;
		Иначе
			
			ТекстОбъединения = ТекстОбъединения + "
			                                      |
			                                      |	ОБЪЕДИНИТЬ ВСЕ
			                                      |
			                                      |";
			
		КонецЕсли;
		
		ТекстОбъединения = ТекстОбъединения + Тексты[Имя];
		
	КонецЦикла;
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Набор.Заказ             КАК ЗаказНаСборку,
		|	Набор.КодСтроки         КАК КодСтроки,
		|
		|	Набор.Номенклатура          КАК Номенклатура,
		|	Набор.Характеристика        КАК Характеристика,
		|	Набор.Серия                 КАК Серия,
		|	МАКСИМУМ(Набор.Назначение)  КАК Назначение,
		|	МАКСИМУМ(Набор.Дата)                  КАК Дата,
		|	МАКСИМУМ(Набор.НомерСтроки)           КАК НомерСтроки,
		|	МАКСИМУМ(Набор.ДатаОтгрузки)          КАК ДатаОтгрузки,
		|	МАКСИМУМ(Набор.ПрисутствуетВДокументе) КАК ПрисутствуетВДокументе,
		|
		|	МАКСИМУМ(ВЫБОР КОГДА Набор.ПрисутствуетВДокументе ТОГДА
		|				Набор.Упаковка
		|			ИНАЧЕ
		|				НЕОПРЕДЕЛЕНО
		|		КОНЕЦ)                             КАК УпаковкаНакладной,
		|
		|	МАКСИМУМ(ВЫБОР КОГДА Набор.ПрисутствуетВДокументе ТОГДА
		|				НЕОПРЕДЕЛЕНО
		|			ИНАЧЕ
		|				Набор.Упаковка
		|		КОНЕЦ)                             КАК УпаковкаЗаказа,
		|
		|	МАКСИМУМ(ВЫБОР КОГДА Набор.ПрисутствуетВДокументе ТОГДА
		|				Набор.УпаковкаКоэффициент
		|			ИНАЧЕ
		|				НЕОПРЕДЕЛЕНО
		|		КОНЕЦ)                             КАК УпаковкаНакладнойКоэффициент,
		|
		|	МАКСИМУМ(ВЫБОР КОГДА Набор.ПрисутствуетВДокументе ТОГДА
		|				НЕОПРЕДЕЛЕНО
		|			ИНАЧЕ
		|				Набор.УпаковкаКоэффициент
		|		КОНЕЦ)                             КАК УпаковкаЗаказаКоэффициент,
		|
		|
		|	СУММА(Набор.КоличествоВЗаказе)        КАК КоличествоВЗаказе,
		|	СУММА(Набор.КоличествоВНакладной)     КАК КоличествоВНакладной
		|
		|ИЗ ТекстОбъединения КАК Набор
		|
		|СГРУППИРОВАТЬ ПО
		|	Набор.Заказ, Набор.КодСтроки,
		|	Набор.Номенклатура, Набор.Характеристика, Набор.Серия,
		|	ВЫБОР КОГДА Набор.КодСтроки <> 0 ТОГДА
		|				0
		|			ИНАЧЕ
		|				Набор.НомерСтроки
		|		КОНЕЦ
		|
		|ИМЕЮЩИЕ
		|	СУММА(Набор.КоличествоВЗаказе) > 0 ИЛИ СУММА(Набор.КоличествоВНакладной) > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата, Заказ, НомерСтроки
		|;
		|
		|/////////////////////////////////////////////////////////////////////
		|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТекстОбъединения", "(" + ТекстОбъединения + ")");
	Возврат ТекстЗапроса;
	
КонецФункции

Функция СозданиеНаОснованииПроверкаОтгрузить()
	
	ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	Документ.ЗаказНаСборку.Товары КАК ТоварыЗаказа
		|ГДЕ
		|	ТоварыЗаказа.ВариантОбеспечения В(
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
		|	И ТоварыЗаказа.Ссылка В(&МассивСсылок)
		|	И ТоварыЗаказа.Ссылка.Проведен
		|	И ТоварыЗаказа.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
		|	И НЕ ТоварыЗаказа.Отменено
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	Документ.ЗаказНаСборку КАК ТоварыЗаказа
		|ГДЕ
		|	ТоварыЗаказа.ВариантОбеспечения В(
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить),
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно))
		|	И ТоварыЗаказа.Ссылка В(&МассивСсылок)
		|	И ТоварыЗаказа.Проведен
		|	И ТоварыЗаказа.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	Документ.СборкаТоваров.Товары КАК ТоварыЗаказа
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК Документ
		|			ПО Документ.Ссылка = ТоварыЗаказа.Ссылка
		|ГДЕ
		|	Документ.ЗаказНаСборку = ЗНАЧЕНИЕ(Документ.ЗаказНаСборку.ПустаяСсылка)
		|	И Документ.Ссылка В(&МассивСсылок)
		|	И Документ.Проведен
		|;
		|
		|///////////////////////////////////////////////////////////////////
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция СозданиеНаОснованииПроверкаРеквизитовШапки()
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	МИНИМУМ(Заказ.Статус)                   КАК Статус,
		|	МИНИМУМ(Заказ.Проведен)                 КАК Проведен,
		|	МИНИМУМ(Заказ.Организация)              КАК Организация,
		|	МИНИМУМ(Заказ.ВариантКомплектации)      КАК ВариантКомплектации,
		|	МИНИМУМ(Заказ.Склад)                    КАК Склад,
		|	МИНИМУМ(Заказ.Подразделение)            КАК Подразделение,
		|	МИНИМУМ(Заказ.ТипОперации)              КАК ТипОперации,
		|	МИНИМУМ(Заказ.Сделка)                   КАК Сделка,
		|	МИНИМУМ(Заказ.НаправлениеДеятельности)  КАК НаправлениеДеятельности
		|ИЗ
		|	Документ.ЗаказНаСборку КАК Заказ
		|ГДЕ
		|	Заказ.Ссылка В(&МассивСсылок)
		|;
		|
		|/////////////////////////////////////////////////////////////////////////////////////////
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция СозданиеНаОснованииПроверкаНаличияОрдеров()

	ТекстЗапроса =
		// Или есть хотя бы один расходный или приходный ордер или склад неордерный на приемку и отгрузку одновременно.
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	РегистрНакопления.ТоварыКОтгрузке.ОстаткиИОбороты(,,,, ДокументОтгрузки В (&МассивСсылок)) КАК ТаблицаОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
		|		ПО СпрСклады.Ссылка = ТаблицаОбороты.Склад
		|ГДЕ
		|	ТаблицаОбороты.КОтгрузкеПриход > 0 И(
		|		ТаблицаОбороты.КОтгрузкеРасход > 0
		|		ИЛИ (НЕ СпрСклады.ИспользоватьОрдернуюСхемуПриОтгрузке
		|				ИЛИ СпрСклады.ДатаНачалаОрдернойСхемыПриОтгрузке > &НачалоТекущегоДня)
		|			И (НЕ СпрСклады.ИспользоватьОрдернуюСхемуПриПоступлении
		|				ИЛИ СпрСклады.ДатаНачалаОрдернойСхемыПриПоступлении > &НачалоТекущегоДня))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению.ОстаткиИОбороты(,,,, ДокументПоступления В (&МассивСсылок)) КАК ТаблицаОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК СпрСклады
		|		ПО СпрСклады.Ссылка = ТаблицаОбороты.Склад
		|ГДЕ
		|	ТаблицаОбороты.КПоступлениюПриход > 0 И(
		|		ТаблицаОбороты.КПоступлениюРасход > 0
		|		ИЛИ (НЕ СпрСклады.ИспользоватьОрдернуюСхемуПриОтгрузке
		|				ИЛИ СпрСклады.ДатаНачалаОрдернойСхемыПриОтгрузке > &НачалоТекущегоДня)
		|			И (НЕ СпрСклады.ИспользоватьОрдернуюСхемуПриПоступлении
		|				ИЛИ СпрСклады.ДатаНачалаОрдернойСхемыПриПоступлении > &НачалоТекущегоДня))";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ОтчетСостояниеВыполненияДокумента

Функция ВременнаяТаблицаТоварыРаспоряжениеНакладнаяОтгруженоДляОтчетаСостояниеВыполнения()
	
	ТекстЗапроса = "
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокументТовары.Номенклатура КАК Номенклатура,
		|	ДокументТовары.Характеристика КАК Характеристика,
		|	СУММА(ДокументТовары.Количество) КАК Количество,
		|	0 КАК СуммаСНДС,
		|	ДокументТовары.Серия КАК Серия,
		|	ДокументТовары.Ссылка.Склад КАК Склад,
		|	ВтДокументы.ДокументСсылка КАК Ссылка
		|ПОМЕСТИТЬ ВТТоварыРаспоряженияОтгружено
		|ИЗ
		|	Документ.СборкаТоваров.Товары КАК ДокументТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументы КАК ВтДокументы
		|		ПО (ВтДокументы.ДокументСсылка = ДокументТовары.Ссылка)
		|ГДЕ
		|	ДокументТовары.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
		|	И ВтДокументы.Проведен
		|	И ДокументТовары.Ссылка.ЗаказНаСборку = ЗНАЧЕНИЕ(Документ.ЗаказНаСборку.ПустаяСсылка)
		|СГРУППИРОВАТЬ ПО
		|	ДокументТовары.Номенклатура,
		|	ДокументТовары.Характеристика,
		|	ДокументТовары.Серия,
		|	ДокументТовары.Ссылка.Склад,
		|	ВтДокументы.ДокументСсылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДокументТовары.Номенклатура КАК Номенклатура,
		|	ДокументТовары.Характеристика КАК Характеристика,
		|	ДокументТовары.Количество КАК Количество,
		|	0 КАК СуммаСНДС,
		|	ДокументТовары.Серия КАК Серия,
		|	ДокументТовары.Склад КАК Склад,
		|	ВтДокументы.ДокументСсылка КАК Ссылка
		|ИЗ
		|	Документ.СборкаТоваров КАК ДокументТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументы КАК ВтДокументы
		|		ПО (ВтДокументы.ДокументСсылка = ДокументТовары.Ссылка)
		|ГДЕ
		|	ВтДокументы.Проведен
		|	И ДокументТовары.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
		|	И ДокументТовары.ЗаказНаСборку = ЗНАЧЕНИЕ(Документ.ЗаказНаСборку.ПустаяСсылка)
		|;
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ВременнаяТаблицаТоварыПоступлениеДляОтчетаСостояниеВыполнения()
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Набор.ДокументПоступления КАК ДокументПоступления,
		|	Набор.Номенклатура        КАК Номенклатура,
		|	Набор.Характеристика      КАК Характеристика,
		|	Набор.Склад               КАК Склад,
		|
		|	СУММА(Набор.Принимается) КАК Принимается,
		|	СУММА(Набор.Принято)     КАК Принято,
		|	СУММА(Набор.Принять)     КАК Принять,
		|	СУММА(Набор.Поступило)   КАК Поступило,
		|
		|	СУММА(Набор.КПоступлению) КАК КПоступлению,
		|	СУММА(Набор.Оформить)     КАК Оформить,
		|	СУММА(Набор.Оформлено)    КАК Оформлено,
		|
		|	МАКСИМУМ(Набор.ОрдернаяСхемаПриПоступлении) КАК ОрдернаяСхемаПриПоступлении
		|
		|ПОМЕСТИТЬ ВТТоварыПоступление
		|ИЗ(
		|	ВЫБРАТЬ
		|		ТоварыКПоступлению.ДокументПоступления КАК ДокументПоступления,
		|		ТоварыКПоступлению.Номенклатура        КАК Номенклатура,
		|		ТоварыКПоступлению.Характеристика      КАК Характеристика,
		|		ТоварыКПоступлению.Склад               КАК Склад,
		|
		|		ТоварыКПоступлению.ПринимаетсяКонечныйОстаток  КАК Принимается,
		|		ТоварыКПоступлению.КПоступлениюРасход          КАК Принято,
		|		ТоварыКПоступлению.КПоступлениюКонечныйОстаток КАК Принять,
		|		ТоварыКПоступлению.КПоступлениюРасход          КАК Поступило,
		|
		|		0                                              КАК КПоступлению,
		|		0                                              КАК Оформить,
		|		0                                              КАК Оформлено,
		|
		|		ВЫБОР КОГДА ТоварыКПоступлению.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
		|						И &ТекущаяДата >= ТоварыКПоступлению.Склад.ДатаНачалаОрдернойСхемыПриПоступлении ТОГДА
		|					ИСТИНА
		|				ИНАЧЕ
		|					ЛОЖЬ
		|			КОНЕЦ                                      КАК ОрдернаяСхемаПриПоступлении
		|	ИЗ
		|		РегистрНакопления.ТоварыКПоступлению.ОстаткиИОбороты( , , , ,
		|				ДокументПоступления В(
		|					ВЫБРАТЬ
		|						ВтДокументы.ДокументСсылка
		|					ИЗ
		|						ВтДокументы КАК ВтДокументы)) КАК ТоварыКПоступлению
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		ТоварыКОформлению.Ссылка             КАК ДокументПоступления,
		|		ТоварыКОформлению.Номенклатура       КАК Номенклатура,
		|		ТоварыКОформлению.Характеристика     КАК Характеристика,
		|		ТоварыКОформлению.Ссылка.Склад       КАК Склад,
		|
		|		0                                    КАК Принимается,
		|		0                                    КАК Принято,
		|		0                                    КАК Принять,
		|		0                                    КАК Поступило,
		|
		|		ТоварыКОформлению.Количество         КАК КПоступлению,
		|		0                                    КАК Оформить,
		|		ТоварыКОформлению.Количество         КАК Оформлено,
		|
		|		ВЫБОР КОГДА ТоварыКОформлению.Ссылка.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
		|						И &ТекущаяДата >= ТоварыКОформлению.Ссылка.Склад.ДатаНачалаОрдернойСхемыПриПоступлении ТОГДА
		|					ИСТИНА
		|				ИНАЧЕ
		|					ЛОЖЬ
		|			КОНЕЦ                                      КАК ОрдернаяСхемаПриПоступлении
		|ИЗ
		|	Документ.СборкаТоваров.Товары КАК ТоварыКОформлению
		|ГДЕ
		|	ТоварыКОформлению.Ссылка.ЗаказНаСборку = ЗНАЧЕНИЕ(Документ.ЗаказНаСборку.ПустаяСсылка)
		|	И ТоварыКОформлению.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
		|	И ТоварыКОформлению.Ссылка В(
		|		ВЫБРАТЬ
		|			ВтДокументы.ДокументСсылка
		|		ИЗ
		|			ВтДокументы КАК ВтДокументы)
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		ТоварыКОформлению.Ссылка             КАК ДокументПоступления,
		|		ТоварыКОформлению.Номенклатура       КАК Номенклатура,
		|		ТоварыКОформлению.Характеристика     КАК Характеристика,
		|		ТоварыКОформлению.Склад              КАК Склад,
		|
		|		0                                    КАК Принимается,
		|		0                                    КАК Принято,
		|		0                                    КАК Принять,
		|		0                                    КАК Поступило,
		|
		|		ТоварыКОформлению.Количество         КАК КПоступлению,
		|		0                                    КАК Оформить,
		|		ТоварыКОформлению.Количество         КАК Оформлено,
		|
		|		ВЫБОР КОГДА ТоварыКОформлению.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
		|						И &ТекущаяДата >= ТоварыКОформлению.Склад.ДатаНачалаОрдернойСхемыПриПоступлении ТОГДА
		|					ИСТИНА
		|				ИНАЧЕ
		|					ЛОЖЬ
		|			КОНЕЦ                                      КАК ОрдернаяСхемаПриПоступлении
		|ИЗ
		|	Документ.СборкаТоваров КАК ТоварыКОформлению
		|ГДЕ
		|	ТоварыКОформлению.ЗаказНаСборку = ЗНАЧЕНИЕ(Документ.ЗаказНаСборку.ПустаяСсылка)
		|	И ТоварыКОформлению.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
		|	И ТоварыКОформлению.Ссылка В(
		|		ВЫБРАТЬ
		|			ВтДокументы.ДокументСсылка
		|		ИЗ
		|			ВтДокументы КАК ВтДокументы)) КАК Набор
		|СГРУППИРОВАТЬ ПО
		|	Набор.ДокументПоступления,
		|	Набор.Номенклатура, Набор.Характеристика, Набор.Склад
		|
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ВременнаяТаблицаТоварыРаспоряженияПоступлениеНакладнаяДляОтчетаСостояниеВыполнения()
	
	ТекстЗапроса = "
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокументТовары.Номенклатура КАК Номенклатура,
		|	ДокументТовары.Характеристика КАК Характеристика,
		|	СУММА(ДокументТовары.Количество) КАК Количество,
		|	0 КАК СуммаСНДС,
		|	ДокументТовары.Ссылка.Склад КАК Склад,
		|	ВтДокументы.ДокументСсылка КАК Ссылка
		|ПОМЕСТИТЬ ВТТоварыРаспоряженияПоступление
		|ИЗ
		|	Документ.СборкаТоваров.Товары КАК ДокументТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументы КАК ВтДокументы
		|		ПО (ВтДокументы.ДокументСсылка = ДокументТовары.Ссылка)
		|ГДЕ
		|	ВтДокументы.Проведен
		|	И ДокументТовары.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
		|	И ДокументТовары.Ссылка.ЗаказНаСборку = ЗНАЧЕНИЕ(Документ.ЗаказНаСборку.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДокументТовары.Номенклатура,
		|	ДокументТовары.Характеристика,
		|	ДокументТовары.Ссылка.Склад,
		|	ВтДокументы.ДокументСсылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДокументТовары.Номенклатура КАК Номенклатура,
		|	ДокументТовары.Характеристика КАК Характеристика,
		|	ДокументТовары.Количество КАК Количество,
		|	0 КАК СуммаСНДС,
		|	ДокументТовары.Склад КАК Склад,
		|	ВтДокументы.ДокументСсылка КАК Ссылка
		|ИЗ
		|	Документ.СборкаТоваров КАК ДокументТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтДокументы КАК ВтДокументы
		|		ПО (ВтДокументы.ДокументСсылка = ДокументТовары.Ссылка)
		|ГДЕ
		|	ВтДокументы.Проведен
		|	И ДокументТовары.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
		|	И ДокументТовары.ЗаказНаСборку = ЗНАЧЕНИЕ(Документ.ЗаказНаСборку.ПустаяСсылка)
		|;
		|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли