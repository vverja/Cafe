#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы


Функция ПолноеИмяРегистра()
	Возврат "РегистрНакопления.ДвиженияСерийТоваров";
КонецФункции 

Процедура ПерезаполнитьРегистр_ДанныеДляОбновления(Параметры) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движения.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ДвиженияСерийТоваров КАК Движения
    |";
    
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
    
    ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(
        Параметры, 
        Регистраторы, 
        ПолноеИмяРегистра()
    );
    
КонецПроцедуры    

// Обработчик обновления BAS УТ 3.2.3
// Перезаполняются все движения всех регистраторов регистра 
Процедура ПерезаполнитьРегистр(Параметры) Экспорт
    
	ТипыРегистраторов = Новый Массив;
	ТипыРегистраторов.Добавить("Документ.АктОРасхожденияхПослеОтгрузки");
	ТипыРегистраторов.Добавить("Документ.АктОРасхожденияхПослеПеремещения");
    ТипыРегистраторов.Добавить("Документ.АктОРасхожденияхПослеПриемки");
    ТипыРегистраторов.Добавить("Документ.ВводОстатков");
    ТипыРегистраторов.Добавить("Документ.ВнутреннееПотреблениеТоваров");
    ТипыРегистраторов.Добавить("Документ.ВозвратТоваровОтКлиента");
    ТипыРегистраторов.Добавить("Документ.ВозвратТоваровПоставщику");
    ТипыРегистраторов.Добавить("Документ.КорректировкаПоОрдеруНаТовары");
    ТипыРегистраторов.Добавить("Документ.ОприходованиеИзлишковТоваров");
    ТипыРегистраторов.Добавить("Документ.ОрдерНаОтражениеИзлишковТоваров");
    ТипыРегистраторов.Добавить("Документ.ОрдерНаОтражениеНедостачТоваров");
    ТипыРегистраторов.Добавить("Документ.ОрдерНаОтражениеПорчиТоваров");
    ТипыРегистраторов.Добавить("Документ.ОрдерНаПеремещениеТоваров");
    ТипыРегистраторов.Добавить("Документ.ОтчетОРозничныхПродажах");
    ТипыРегистраторов.Добавить("Документ.ПеремещениеТоваров");
    ТипыРегистраторов.Добавить("Документ.ПересортицаТоваров");
    ТипыРегистраторов.Добавить("Документ.ПересчетТоваров");
    ТипыРегистраторов.Добавить("Документ.ПорчаТоваров");
    ТипыРегистраторов.Добавить("Документ.ПоступлениеТоваровУслуг");
    ТипыРегистраторов.Добавить("Документ.ПриходныйОрдерНаТовары");
    ТипыРегистраторов.Добавить("Документ.ПрочееОприходованиеТоваров");
    ТипыРегистраторов.Добавить("Документ.РасходныйОрдерНаТовары");
    ТипыРегистраторов.Добавить("Документ.РеализацияТоваровУслуг");
    ТипыРегистраторов.Добавить("Документ.СборкаТоваров");
    ТипыРегистраторов.Добавить("Документ.СписаниеНедостачТоваров");
    ТипыРегистраторов.Добавить("Документ.ЧекККМ");
    ТипыРегистраторов.Добавить("Документ.ЧекККМВозврат");
    
	ОбработкаЗавершена = ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
		ТипыРегистраторов,
	    ПолноеИмяРегистра(),
		Параметры.Очередь
    );
    
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
	
КонецПроцедуры



#КонецОбласти

#КонецОбласти

#КонецЕсли