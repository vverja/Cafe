#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область ОбновлениеИнформационнойБазы

Функция ПолноеИмяРегистра()
	Возврат "РегистрНакопления.ДвиженияНоменклатураДоходыРасходы";
КонецФункции


Процедура КорректироватьДвиженияОтчетаКомиcсионераОСписании_ДанныеДляОбновления(Параметры) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ДвиженияНоменклатураДоходыРасходы КАК ДанныеРегистра
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДанныеРегистра.Регистратор) = ТИП(Документ.ОтчетКомиссионераОСписании)
	|	И ДанныеРегистра.Склад = НЕОПРЕДЕЛЕНО
	|
    |";
    
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
    
    ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(
        Параметры, 
        Регистраторы, 
        ПолноеИмяРегистра()
    );
    
КонецПроцедуры    

// Обработчик обновления BAS УТ 3.2.1
// Заполняется поле "Склад" в движениях регистра по документам ОтчетКомиссионераОСписании
Процедура КорректироватьДвиженияОтчетаКомиcсионераОСписании(Параметры) Экспорт
    
    Запрос = Новый Запрос();
    Запрос.Текст = "
	|ВЫБРАТЬ 
	|	ДанныеРегистра.Регистратор КАК Ссылка,
	|	ДанныеРегистра.МоментВремени КАК МоментВремени,
	|	ДанныеРегистра.Период,
	|	ДанныеРегистра.Регистратор,
	|	ДанныеРегистра.НомерСтроки,
	|	ДанныеРегистра.Активность,
    |
	|	ДанныеРегистра.ХозяйственнаяОперация,
	|	ДанныеРегистра.Организация,
	|	ДанныеРегистра.Подразделение,
	|	ДанныеРегистра.АналитикаУчетаНоменклатуры,
	|	ВЫРАЗИТЬ(ДанныеРегистра.Регистратор КАК Документ.ОтчетКомиссионераОСписании).Партнер КАК Склад,
	|	ДанныеРегистра.ТипЗапасов,
	|	ДанныеРегистра.ВидЗапасов,
	|	ДанныеРегистра.СтатьяДоходовРасходов,
	|	ДанныеРегистра.АналитикаДоходов,
	|	ДанныеРегистра.АналитикаРасходов,
    |	ДанныеРегистра.АналитикаАктивовПассивов,
    |
	|	ДанныеРегистра.Количество,
	|	ДанныеРегистра.Стоимость,
	|	ДанныеРегистра.СтоимостьБезНДС,
	|	ДанныеРегистра.СтоимостьРегл,
    |
	|	ДанныеРегистра.ИсточникГФУНоменклатуры,
	|	ДанныеРегистра.ДокументДвижения
	|ИЗ
	|	РегистрНакопления.ДвиженияНоменклатураДоходыРасходы КАК ДанныеРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втДляОбработкиДвиженияНоменклатураДоходыРасходы КАК РегистраторыДляОбработки
	|		ПО ДанныеРегистра.Регистратор = РегистраторыДляОбработки.Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	МоментВремени УБЫВ
    |
	|ИТОГИ ПО
	|	Ссылка
    |";
    
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуРегистраторовРегистраДляОбработки(
        Параметры.Очередь,
        "Документ.ОтчетКомиссионераОСписании", // ПолноеИмяДокумента
		ПолноеИмяРегистра(),
		Запрос.МенеджерВременныхТаблиц
    );
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
    КонецЕсли;
    
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
    КонецЕсли;
	
	ВыборкаПоДокументу = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    Пока ВыборкаПоДокументу.Следующий() Цикл
        
		НачатьТранзакцию();
		
		Попытка
            
            Регистратор = ВыборкаПоДокументу.Ссылка;
            
			Блокировка = Новый БлокировкаДанных;
            
			БлокировкаДокумента = Блокировка.Добавить("Документ.ОтчетКомиссионераОСписании");
			БлокировкаДокумента.УстановитьЗначение("Ссылка", Регистратор);
			БлокировкаДокумента.Режим = РежимБлокировкиДанных.Разделяемый;
            
            БлокировкаРегистра = Блокировка.Добавить("РегистрНакопления.ДвиженияНоменклатураДоходыРасходы.НаборЗаписей");
			БлокировкаРегистра.УстановитьЗначение("Регистратор", Регистратор);
			
			Блокировка.Заблокировать();
            
    		Набор = РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы.СоздатьНаборЗаписей();
    		Набор.Отбор.Регистратор.Установить(Регистратор);
			Выборка = ВыборкаПоДокументу.Выбрать();
            Пока Выборка.Следующий() Цикл
    			Запись = Набор.Добавить();
    			ЗаполнитьЗначенияСвойств(Запись, Выборка);
            КонецЦикла;    
            
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
            
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru='Не удалось обработать движения документа %Документ% по регистру ""Движения Номенклатура - Доходы/Расходы"". Причина: %Причина%';uk='Не вдалося обробити рухи документа %Документ% регістру ""Рухи Номенклатура - Доходи/Витрати"". Причина: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", Регистратор);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(
                ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
                УровеньЖурналаРегистрации.Предупреждение,
				Регистратор.Метаданные(), 
                Регистратор, 
                ТекстСообщения
            );
            
		КонецПопытки;
        
    КонецЦикла;
    
	ОбработкаЗавершена = НЕ ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(
        Параметры.Очередь, 
        ПолноеИмяРегистра()
    );
    
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
    
КонецПроцедуры



Процедура КорректироватьДвиженияОтчетаПоКомиссииМеждуОрганизациямиОСписании_ДанныеДляОбновления(Параметры) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Строки.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ДвиженияНоменклатураДоходыРасходы КАК Строки
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(Строки.Регистратор) = ТИП(Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании)
	|");
	
	СписокРегистраторов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ДополнительныеПараметрыОтметки = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметрыОтметки.ЭтоДвижения = Истина;
	ДополнительныеПараметрыОтметки.ПолноеИмяРегистра = ПолноеИмяРегистра();
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, СписокРегистраторов, ДополнительныеПараметрыОтметки);
	
КонецПроцедуры

// Обработчик обновления BAS 3.2.3
// Перезаполняет по новым правилам on-line движения под документами
//    - ОтчетПоКомиссииМеждуОрганизациямиОСписании
Процедура КорректироватьДвиженияОтчетаПоКомиссииМеждуОрганизациямиОСписании(Параметры) Экспорт
	
	ИмяРегистра = "ДвиженияНоменклатураДоходыРасходы";
	ПолноеИмяДокумента = "Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании";
	ВыборкаПоРегистраторам = ОбновлениеИнформационнойБазы.ВыбратьРегистраторыРегистраДляОбработки(
								Параметры.Очередь,
								ПолноеИмяДокумента,
								ПолноеИмяРегистра());
	
	Пока ВыборкаПоРегистраторам.Следующий() Цикл
		
		МенеджерДокумента = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ПолноеИмяДокумента);
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяДокумента);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаПоРегистраторам.Регистратор);
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра() + ".НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", ВыборкаПоРегистраторам.Регистратор);
			
			Блокировка.Заблокировать();
			
			НаборЗаписей = РегистрыНакопления[ИмяРегистра].СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаПоРегистраторам.Регистратор);
			НаборЗаписей.Прочитать();
			
			ДопСвойства = Новый Структура;
			ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(ВыборкаПоРегистраторам.Регистратор, ДопСвойства);
			МенеджерДокумента.ИнициализироватьДанныеДокумента(ВыборкаПоРегистраторам.Регистратор, ДопСвойства, ИмяРегистра);
			НовыеДвижения = ДопСвойства.ТаблицыДляДвижений[СтрШаблон("Таблица%1", ИмяРегистра)];
			НовыеДвижения.Колонки.Добавить("РасчетСебестоимости", Новый ОписаниеТипов("Булево"));
			
			Подразделение = НовыеДвижения[0].Подразделение;
			Для Каждого Запись Из НаборЗаписей Цикл
				Если Запись.РасчетСебестоимости Тогда
					НоваяСтрока = НовыеДвижения.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, Запись);
					НоваяСтрока.Подразделение = Подразделение;
				КонецЕсли;
			КонецЦикла;
			НаборЗаписей.Загрузить(НовыеДвижения);
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			
			ЗафиксироватьТранзакцию();
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru='Не удалось обработать движения документа %Документ% по регистру ""Движения Номенклатура - Доходы\Расходы"". Причина: %Причина%';uk='Не вдалося обробити рухи документа %Документ% регістру ""Рухи Номенклатура - Доходи\Витрати"". Причина: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", ВыборкаПоРегистраторам.Регистратор);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				ВыборкаПоРегистраторам.Регистратор.Метаданные(), ВыборкаПоРегистраторам.Регистратор, ТекстСообщения);
			
			ВызватьИсключение;
			
		КонецПопытки;
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра());
	
КонецПроцедуры



#КонецОбласти

#КонецЕсли