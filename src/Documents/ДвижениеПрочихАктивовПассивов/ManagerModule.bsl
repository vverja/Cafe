#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт



КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.ДвижениеПрочихАктивовПассивов) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ДвижениеПрочихАктивовПассивов.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.ДвижениеПрочихАктивовПассивов);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьУчетПрочихАктивовПассивов,ИспользоватьУчетПрочихДоходовРасходов";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

КонецПроцедуры


#Область Заполнение

Функция ПолучитьРезультатЗапросаПоОстаткамВРегистре(ДанныеОтбора)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// Пересчет суммы
	Запрос.УстановитьПараметр("Валюта",			ДанныеОтбора.Валюта);
	Запрос.УстановитьПараметр("ВалютаУпр",		Константы.ВалютаУправленческогоУчета.Получить());
	// Параметры отбора
	Запрос.УстановитьПараметр("ТипСтатьи",		ДанныеОтбора.ТипСтатьи);
	Запрос.УстановитьПараметр("Ссылка",			ДанныеОтбора.Ссылка);
	Запрос.УстановитьПараметр("Организация",	ДанныеОтбора.Организация);
	Запрос.УстановитьПараметр("Граница",		Новый Граница(КонецДня(ДанныеОтбора.Дата), ВидГраницы.Включая));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	""Актив"" КАК АктивПассив,
	|	Т.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВтСтатьи
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиАктивовПассивов КАК Т
	|ГДЕ
	|	Т.АктивПассив = ЗНАЧЕНИЕ(Перечисление.ВидыСтатейУправленческогоБаланса.Актив)
	|	И &ТипСтатьи = ЗНАЧЕНИЕ(Перечисление.ТипыСтатейАктивовПассивов.СтатьяАктивов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Пассив"" КАК АктивПассив,
	|	Т.Ссылка
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиАктивовПассивов КАК Т
	|ГДЕ
	|	Т.АктивПассив = ЗНАЧЕНИЕ(Перечисление.ВидыСтатейУправленческогоБаланса.Пассив)
	|	И &ТипСтатьи = ЗНАЧЕНИЕ(Перечисление.ТипыСтатейАктивовПассивов.СтатьяПассивов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Организация					КАК Организация,
	|	ВложенныйЗапрос.Подразделение				КАК Подразделение,
	|	ВложенныйЗапрос.Статья						КАК Статья,
	|	ВложенныйЗапрос.АналитикаРасходов			КАК АналитикаРасходов,
	|	ВложенныйЗапрос.АналитикаДоходов			КАК АналитикаДоходов,
	|	ВложенныйЗапрос.АналитикаАктивовПассивов	КАК АналитикаАктивовПассивов,
	|	СУММА(ВложенныйЗапрос.Сумма)				КАК Сумма
	|ПОМЕСТИТЬ ВтРасходы
	|ИЗ
	|	(
	//	Прочие расходы
	|	ВЫБРАТЬ
	|		Регистр.Организация				КАК Организация,
	|		Регистр.Подразделение			КАК Подразделение,
	|		Регистр.СтатьяРасходов			КАК Статья,
	|		Регистр.АналитикаРасходов		КАК АналитикаРасходов,
	|		НЕОПРЕДЕЛЕНО					КАК АналитикаДоходов,
	|		НЕОПРЕДЕЛЕНО					КАК АналитикаАктивовПассивов,
	|		Регистр.СуммаОстаток			КАК Сумма
	|	ИЗ
	|		РегистрНакопления.ПрочиеРасходы.Остатки(
	|			&Граница,
	|			Организация = &Организация
	|			И &ТипСтатьи = ЗНАЧЕНИЕ(Перечисление.ТипыСтатейАктивовПассивов.СтатьяРасходов)) КАК Регистр
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Регистр.Организация				КАК Организация,
	|		Регистр.Подразделение			КАК Подразделение,
	|		Регистр.СтатьяРасходов			КАК Статья,
	|		Регистр.АналитикаРасходов		КАК АналитикаРасходов,
	|		НЕОПРЕДЕЛЕНО					КАК АналитикаДоходов,
	|		НЕОПРЕДЕЛЕНО					КАК АналитикаАктивовПассивов,
	|		ВЫБОР КОГДА Регистр.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
	|			Регистр.Сумма
	|		ИНАЧЕ
	|			-Регистр.Сумма
	|		КОНЕЦ							КАК Сумма
	|	ИЗ
	|		РегистрНакопления.ПрочиеРасходы КАК Регистр
	|	ГДЕ
	|		Регистр.Регистратор = &Ссылка
	|		И &ТипСтатьи = ЗНАЧЕНИЕ(Перечисление.ТипыСтатейАктивовПассивов.СтатьяРасходов)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	//	Прочие доходы
	|	ВЫБРАТЬ
	|		Регистр.Организация				КАК Организация,
	|		Регистр.Подразделение			КАК Подразделение,
	|		Регистр.СтатьяДоходов			КАК Статья,
	|		НЕОПРЕДЕЛЕНО					КАК АналитикаРасходов,
	|		Регистр.АналитикаДоходов		КАК АналитикаДоходов,
	|		НЕОПРЕДЕЛЕНО					КАК АналитикаАктивовПассивов,
	|		Регистр.СуммаОстаток			КАК Сумма
	|	ИЗ
	|		РегистрНакопления.ПрочиеДоходы.Остатки(
	|			&Граница,
	|			Организация = &Организация
	|			И &ТипСтатьи = ЗНАЧЕНИЕ(Перечисление.ТипыСтатейАктивовПассивов.СтатьяДоходов)) КАК Регистр
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Регистр.Организация				КАК Организация,
	|		Регистр.Подразделение			КАК Подразделение,
	|		Регистр.СтатьяДоходов			КАК Статья,
	|		НЕОПРЕДЕЛЕНО					КАК АналитикаРасходов,
	|		Регистр.АналитикаДоходов		КАК АналитикаДоходов,
	|		НЕОПРЕДЕЛЕНО					КАК АналитикаАктивовПассивов,
	|		ВЫБОР КОГДА Регистр.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
	|			Регистр.Сумма
	|		ИНАЧЕ
	|			-Регистр.Сумма
	|		КОНЕЦ							КАК Сумма
	|	ИЗ
	|		РегистрНакопления.ПрочиеДоходы КАК Регистр
	|	ГДЕ
	|		Регистр.Регистратор = &Ссылка
	|		И &ТипСтатьи = ЗНАЧЕНИЕ(Перечисление.ТипыСтатейАктивовПассивов.СтатьяДоходов)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	//	Прочие активы и пассивы
	|	ВЫБРАТЬ
	|		Регистр.Организация				КАК Организация,
	|		НЕОПРЕДЕЛЕНО					КАК Подразделение,
	|		Регистр.Статья					КАК Статья,
	|		НЕОПРЕДЕЛЕНО					КАК АналитикаРасходов,
	|		НЕОПРЕДЕЛЕНО					КАК АналитикаДоходов,
	|		Регистр.Аналитика				КАК АналитикаАктивовПассивов,
	|		Регистр.СуммаОстаток			КАК Сумма
	|	ИЗ
	|		РегистрНакопления.ПрочиеАктивыПассивы.Остатки(
	|			&Граница,
	|			Организация = &Организация
	|			И Статья В (ВЫБРАТЬ Т.Ссылка ИЗ ВтСтатьи КАК Т)) КАК Регистр
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Регистр.Организация				КАК Организация,
	|		НЕОПРЕДЕЛЕНО					КАК Подразделение,
	|		Регистр.Статья					КАК Статья,
	|		НЕОПРЕДЕЛЕНО					КАК АналитикаРасходов,
	|		НЕОПРЕДЕЛЕНО					КАК АналитикаДоходов,
	|		Регистр.Аналитика				КАК АналитикаАктивовПассивов,
	|		ВЫБОР КОГДА Регистр.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) И Т.АктивПассив = ""Актив"" ТОГДА
	|			Регистр.Сумма // Актив
	|		КОГДА Регистр.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) И Т.АктивПассив = ""Актив"" ТОГДА
	|			-Регистр.Сумма // Актив
	|		КОГДА Регистр.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			Регистр.Сумма // Пассив
	|		ИНАЧЕ
	|			-Регистр.Сумма // Пассив
	|		КОНЕЦ							КАК Сумма
	|	ИЗ
	|		РегистрНакопления.ПрочиеАктивыПассивы КАК Регистр
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			ВтСтатьи КАК Т
	|		ПО
	|			Регистр.Статья = Т.Ссылка
	|	ГДЕ
	|		Регистр.Регистратор = &Ссылка
	|
	|	) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.Подразделение,
	|	ВложенныйЗапрос.Статья,
	|	ВложенныйЗапрос.АналитикаРасходов,
	|	ВложенныйЗапрос.АналитикаДоходов,
	|	ВложенныйЗапрос.АналитикаАктивовПассивов
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.Сумма) <> 0
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтРасходы.Организация				КАК Организация,
	|	ВтРасходы.Подразделение				КАК Подразделение,
	|	ВтРасходы.Статья					КАК Статья,
	|	ВтРасходы.АналитикаРасходов			КАК АналитикаРасходов,
	|	ВтРасходы.АналитикаДоходов			КАК АналитикаДоходов,
	|	ВтРасходы.АналитикаАктивовПассивов	КАК АналитикаАктивовПассивов,
	|
	|	ЕСТЬNULL(СтатьиРасходов.ВариантРаспределенияРасходов, ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.ПустаяСсылка)) КАК ВариантРаспределения,
	|
	|	ВЫБОР КОГДА &ВалютаУпр = &Валюта
	|			ИЛИ КурсыУпр.Валюта ЕСТЬ NULL
	|			ИЛИ Курсы.Валюта ЕСТЬ NULL
	|			ИЛИ Курсы.Курс * КурсыУпр.Кратность = 0 ТОГДА
	|		ВтРасходы.Сумма
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ((ВтРасходы.Сумма * КурсыУпр.Курс * Курсы.Кратность) / (Курсы.Курс * КурсыУпр.Кратность) КАК ЧИСЛО(15,2))
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	ВтРасходы КАК ВтРасходы
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ПО СтатьиРасходов.Ссылка = ВтРасходы.Статья
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Граница, НЕ &ВалютаУпр = &Валюта И Валюта = &ВалютаУпр) КАК КурсыУпр
	|		ПО ИСТИНА
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&Граница, НЕ &ВалютаУпр = &Валюта И Валюта = &Валюта) КАК Курсы
	|		ПО ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Подразделение,
	|	Статья,
	|	АналитикаРасходов,
	|	АналитикаДоходов,
	|	АналитикаАктивовПассивов
	|";
	
	УстановитьПривилегированныйРежим(Истина);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

// Заполняет таблицу прочих расходов по остаткам расходов на строительство ОС
//
// Параметры:
//	ДанныеОтбора			 - Структура - поля, по которым будут отобраны остатки для заполнения документа
//	ДанныеОтбора.Дата		 - Дата - дата среза, на которую будут получены остатки
//	ДанныеОтбора.Валюта		 - СправочникСсылка.Валюта - валюта документа
//	ДанныеОтбора.Ссылка		 - ДокументСсылка.РаспределениеРасходовНаПрочиеАктивы, Неопределено - документ, который необходимо обновить
//	ДанныеОтбора.Организация - СправочникСсылка.Организации, Неопределено - Организация, по которой будет осуществляться отбор остатков
//	ДанныеОтбора.ТипСтатьи	 - ПеречислениеСсылка.ТипыСтатейАктивовПассивов - тип регистра, из которого будут получены остатки
//	Расходы					 - ДанныеФормыКоллекция - таблица расходов, в которую будут помещены данные
//
Процедура ЗаполнитьПоОстаткамВРегистре(ДанныеОтбора, Расходы) Экспорт
	
	// Данные по остаткам товаров заказа
	ВыборкаРасходы = ПолучитьРезультатЗапросаПоОстаткамВРегистре(ДанныеОтбора).Выбрать();
	
	Пока ВыборкаРасходы.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Расходы.Добавить(), ВыборкаРасходы);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

// Заполняет массивы реквизитов, зависимых от хозяйственной операции документа.
//
// Параметры:
//	Источник - ПеречислениеСсылка.ТипыСтатейАктивовПассивов - Выбранный тип статей
//	Получатель - ПеречислениеСсылка.ТипыСтатейАктивовПассивов - Выбранный тип статей
//	МассивВсехРеквизитов - Массив - Массив всех имен реквизитов, зависимых от хозяйственной операции
//	МассивРеквизитовОперации - Массив - Массив имен реквизитов, используемых в выбранной хозяйственной операции
//
Процедура ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(Источник, Получатель, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("ДанныеОтражения.АналитикаАктивовПассивовПолучатель");
	МассивВсехРеквизитов.Добавить("ДанныеОтражения.АналитикаДоходовПолучатель");
	МассивВсехРеквизитов.Добавить("ДанныеОтражения.АналитикаРасходовПолучатель");
	МассивВсехРеквизитов.Добавить("ДанныеОтражения.ПодразделениеПолучатель");
	
	МассивВсехРеквизитов.Добавить("ДанныеОтражения.АналитикаАктивовПассивовИсточник");
	МассивВсехРеквизитов.Добавить("ДанныеОтражения.АналитикаДоходовИсточник");
	МассивВсехРеквизитов.Добавить("ДанныеОтражения.АналитикаРасходовИсточник");
	МассивВсехРеквизитов.Добавить("ДанныеОтражения.ПодразделениеИсточник");
	
	МассивРеквизитовОперации = Новый Массив;
	Если Получатель = Перечисления.ТипыСтатейАктивовПассивов.СтатьяДоходов Тогда
		МассивРеквизитовОперации.Добавить("ДанныеОтражения.АналитикаДоходовПолучатель");
		МассивРеквизитовОперации.Добавить("ДанныеОтражения.ПодразделениеПолучатель");
	ИначеЕсли Получатель = Перечисления.ТипыСтатейАктивовПассивов.СтатьяРасходов Тогда
		МассивРеквизитовОперации.Добавить("ДанныеОтражения.АналитикаРасходовПолучатель");
		МассивРеквизитовОперации.Добавить("ДанныеОтражения.ПодразделениеПолучатель");
	ИначеЕсли Получатель = Перечисления.ТипыСтатейАктивовПассивов.СтатьяПассивов Тогда
		МассивРеквизитовОперации.Добавить("ДанныеОтражения.АналитикаАктивовПассивовПолучатель");
	Иначе
		МассивРеквизитовОперации.Добавить("ДанныеОтражения.АналитикаАктивовПассивовПолучатель");
	КонецЕсли;
	
	Если Источник = Перечисления.ТипыСтатейАктивовПассивов.СтатьяДоходов Тогда
		МассивРеквизитовОперации.Добавить("ДанныеОтражения.АналитикаДоходовИсточник");
		МассивРеквизитовОперации.Добавить("ДанныеОтражения.ПодразделениеИсточник");
	ИначеЕсли Источник = Перечисления.ТипыСтатейАктивовПассивов.СтатьяРасходов Тогда
		МассивРеквизитовОперации.Добавить("ДанныеОтражения.АналитикаРасходовИсточник");
		МассивРеквизитовОперации.Добавить("ДанныеОтражения.ПодразделениеИсточник");
	ИначеЕсли Источник = Перечисления.ТипыСтатейАктивовПассивов.СтатьяПассивов Тогда
		МассивРеквизитовОперации.Добавить("ДанныеОтражения.АналитикаАктивовПассивовИсточник");
	Иначе
		МассивРеквизитовОперации.Добавить("ДанныеОтражения.АналитикаАктивовПассивовИсточник");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры);
	
	////////////////////////////////////////////////////////////////////////////
	// Поместим результаты запроса в дополнительные свойства
	
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР КОГДА Документ.Источник В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыСтатейАктивовПассивов.СтатьяАктивов),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыСтатейАктивовПассивов.СтатьяРасходов))
	|	ТОГДА ИСТИНА
	|	ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ					КАК ИсточникАктив,
	|	ВЫБОР КОГДА Документ.Получатель В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыСтатейАктивовПассивов.СтатьяАктивов),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыСтатейАктивовПассивов.СтатьяРасходов))
	|	ТОГДА ИСТИНА
	|	ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ					КАК ПолучательАктив,
	|	Документ.Дата			КАК Дата,
	|	Документ.Валюта			КАК Валюта,
	|	Документ.Источник		КАК Источник,
	|	Документ.Получатель		КАК Получатель,
	|	Документ.Увеличение		КАК Увеличение,
	|	Документ.Организация	КАК Организация
	|ИЗ
	|	Документ.ДвижениеПрочихАктивовПассивов КАК Документ
	|ГДЕ
	|	Документ.Ссылка = &Ссылка";

	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
		Реквизиты.Валюта,
		Неопределено,
		Реквизиты.Дата);
	
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр",	Коэффициенты.КоэффициентПересчетаВВалютуУпр);
	Запрос.УстановитьПараметр("Ссылка",					ДокументСсылка);
	Запрос.УстановитьПараметр("Организация",			Реквизиты.Организация);
	Запрос.УстановитьПараметр("ДатаДокумента",			Реквизиты.Дата);
	Запрос.УстановитьПараметр("ИсточникАктив",			Реквизиты.ИсточникАктив);
	Запрос.УстановитьПараметр("ПолучательАктив",		Реквизиты.ПолучательАктив);
	Запрос.УстановитьПараметр("Источник",				Реквизиты.Источник);
	Запрос.УстановитьПараметр("Получатель",				Реквизиты.Получатель);
	Запрос.УстановитьПараметр("Увеличение",				Реквизиты.Увеличение);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",	Перечисления.ХозяйственныеОперации.ОтражениеПрочихАктивовПассивов);
	
КонецПроцедуры

Функция ТекстЗапросаВтДанные(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтДанные"; 
	
	ТекстЗапроса = "
	// Получатель
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА РАЗНОСТЬДАТ(Строки.ДатаОтражения, &ДатаДокумента, ДЕНЬ) = 0
	|				ИЛИ Строки.ДатаОтражения = ДАТАВРЕМЯ(1, 1, 1) ТОГДА
	|		&ДатаДокумента
	|	ИНАЧЕ
	|		Строки.ДатаОтражения
	|	КОНЕЦ											КАК Период,
	|	&Организация									КАК Организация,
	|	&ХозяйственнаяОперация							КАК ХозяйственнаяОперация,
	|	Строки.ПодразделениеПолучатель					КАК Подразделение,
	|	ВЫБОР КОГДА &Увеличение ТОГДА
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ											КАК ВидДвижения,
	|	Строки.НомерСтроки								КАК НомерСтроки,
	|
	|	// Получатель
	|	Строки.СтатьяПолучатель							КАК Статья,
	|	ВЫБОР КОГДА &Получатель = ЗНАЧЕНИЕ(Перечисление.ТипыСтатейАктивовПассивов.СтатьяРасходов) ТОГДА
	|		Строки.АналитикаРасходовПолучатель
	|	КОГДА &Получатель = ЗНАЧЕНИЕ(Перечисление.ТипыСтатейАктивовПассивов.СтатьяДоходов) ТОГДА
	|		Строки.АналитикаДоходовПолучатель
	|	ИНАЧЕ
	|		Строки.АналитикаАктивовПассивовПолучатель
	|	КОНЕЦ											КАК Аналитика,
	|
	|	// Сумма
	|	Строки.Сумма * &КоэффициентПересчетаВВалютуУпр	КАК СуммаУпр,
	|	Строки.Сумма									КАК Сумма,
	|
	|	// Тип регистра
	|	ВЫБОР КОГДА &Получатель = ЗНАЧЕНИЕ(Перечисление.ТипыСтатейАктивовПассивов.СтатьяРасходов) ТОГДА
	|		""Расходы""
	|	КОГДА &Получатель = ЗНАЧЕНИЕ(Перечисление.ТипыСтатейАктивовПассивов.СтатьяДоходов) ТОГДА
	|		""Доходы""
	|	ИНАЧЕ
	|		""АктивыПассивы""
	|	КОНЕЦ											КАК ТипРегистра,
	|	&Получатель										КАК ТипСтатьи
	|ПОМЕСТИТЬ ВтДанные
	|
	|ИЗ
	|	Документ.ДвижениеПрочихАктивовПассивов.ДанныеОтражения КАК Строки
	|ГДЕ 
	|	Строки.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Источник
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА РАЗНОСТЬДАТ(Строки.ДатаОтражения, &ДатаДокумента, ДЕНЬ) = 0
	|				ИЛИ Строки.ДатаОтражения = ДАТАВРЕМЯ(1, 1, 1) ТОГДА
	|		&ДатаДокумента
	|	ИНАЧЕ
	|		Строки.ДатаОтражения
	|	КОНЕЦ											КАК Период,
	|	&Организация									КАК Организация,
	|	&ХозяйственнаяОперация							КАК ХозяйственнаяОперация,
	|	Строки.ПодразделениеИсточник					КАК Подразделение,
	|	ВЫБОР КОГДА (&Увеличение И &ПолучательАктив = &ИсточникАктив)
	|			ИЛИ (НЕ &Увеличение И НЕ &ПолучательАктив = &ИсточникАктив) ТОГДА
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ											КАК ВидДвижения,
	|	Строки.НомерСтроки								КАК НомерСтроки,
	|
	|	// Источник
	|	Строки.СтатьяИсточник							КАК Статья,
	|	ВЫБОР КОГДА &Источник = ЗНАЧЕНИЕ(Перечисление.ТипыСтатейАктивовПассивов.СтатьяРасходов) ТОГДА
	|		Строки.АналитикаРасходовИсточник
	|	КОГДА &Источник = ЗНАЧЕНИЕ(Перечисление.ТипыСтатейАктивовПассивов.СтатьяДоходов) ТОГДА
	|		Строки.АналитикаДоходовИсточник
	|	ИНАЧЕ
	|		Строки.АналитикаАктивовПассивовИсточник
	|	КОНЕЦ											КАК Аналитика,
	|
	|	// Сумма
	|	Строки.Сумма * &КоэффициентПересчетаВВалютуУпр	КАК СуммаУпр,
	|	Строки.Сумма									КАК Сумма,
	|
	|	// Тип регистра
	|	ВЫБОР КОГДА &Источник = ЗНАЧЕНИЕ(Перечисление.ТипыСтатейАктивовПассивов.СтатьяРасходов) ТОГДА
	|		""Расходы""
	|	КОГДА &Источник = ЗНАЧЕНИЕ(Перечисление.ТипыСтатейАктивовПассивов.СтатьяДоходов) ТОГДА
	|		""Доходы""
	|	ИНАЧЕ
	|		""АктивыПассивы""
	|	КОНЕЦ											КАК ТипРегистра,
	|	&Источник										КАК ТипСтатьи
	|
	|ИЗ
	|	Документ.ДвижениеПрочихАктивовПассивов.ДанныеОтражения КАК Строки
	|ГДЕ 
	|	Строки.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеАктивыПассивы(Запрос, ТекстыЗапроса, Регистры)
		
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтДанные", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанные(Запрос, ТекстыЗапроса);
	КонецЕсли; 

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА Строки.ТипСтатьи = ЗНАЧЕНИЕ(Перечисление.ТипыСтатейАктивовПассивов.СтатьяПассивов) ТОГДА
	|		// У статей пассивов знак изменяется на противоположный, т.е. ""увеличение пассивов"" - это ""Расход"" в регистре, и наоборот
	|		ВЫБОР КОГДА Строки.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КОНЕЦ
	|	ИНАЧЕ
	|		Строки.ВидДвижения
	|	КОНЕЦ				КАК ВидДвижения,
	|	Строки.Период		КАК Период,
	|	Строки.Организация	КАК Организация,
	|	Строки.НомерСтроки	КАК НомерСтроки,
	|	Строки.Статья		КАК Статья,
	|	Строки.Аналитика	КАК Аналитика,
	|	Строки.СуммаУпр		КАК Сумма
	|ИЗ
	|	ВтДанные КАК Строки
	|ГДЕ 
	|	Строки.ТипРегистра = ""АктивыПассивы""
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидДвижения, НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеДоходы";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтДанные", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанные(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Строки.Период					КАК Период,
	|	Строки.ВидДвижения				КАК ВидДвижения,
	|	Строки.Организация				КАК Организация,
	|	Строки.Подразделение			КАК Подразделение,
	|	Строки.НомерСтроки				КАК НомерСтроки,
	|	Строки.ХозяйственнаяОперация	КАК ХозяйственнаяОперация,
	|	Строки.Статья					КАК СтатьяДоходов,
	|	Строки.Аналитика				КАК АналитикаДоходов,
	|	Строки.СуммаУпр					КАК Сумма
	|ИЗ
	|	ВтДанные КАК Строки
	|ГДЕ 
	|	Строки.ТипРегистра = ""Доходы""
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидДвижения, НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтДанные", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанные(Запрос, ТекстыЗапроса);
	КонецЕсли; 

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Строки.Период					КАК Период,
	|	Строки.ВидДвижения				КАК ВидДвижения,
	|	Строки.Организация				КАК Организация,
	|	Строки.Подразделение			КАК Подразделение,
	|	Строки.НомерСтроки				КАК НомерСтроки,
	|	Строки.ХозяйственнаяОперация	КАК ХозяйственнаяОперация,
	|	Строки.Статья					КАК СтатьяРасходов,
	|	Строки.Аналитика				КАК АналитикаРасходов,
	|	Строки.СуммаУпр					КАК Сумма
	|ИЗ
	|	ВтДанные КАК Строки
	|ГДЕ 
	|	Строки.ТипРегистра = ""Расходы""
	|УПОРЯДОЧИТЬ ПО
	|	ВидДвижения, НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтДанные", ТекстыЗапроса) Тогда
		ТекстЗапросаВтДанные(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Строки.Период			КАК Период,
	|	Строки.ВидДвижения		КАК ВидДвижения,
	|	Строки.Организация		КАК Организация,
	|	Строки.Подразделение	КАК Подразделение,
	|	&Ссылка					КАК ДокументПоступленияРасходов,
	|	Строки.Статья			КАК СтатьяРасходов,
	|	Строки.Аналитика		КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО			КАК АналитикаУчетаПартий,
	|	
	|	Строки.СуммаУпр	КАК Стоимость,
	|	0				КАК СтоимостьБезНДС,
	|	0				КАК СтоимостьРегл,
	|	0				КАК НДСРегл,
	|	0				КАК ПостояннаяРазница,
	|	0				КАК ВременнаяРазница
	|	
	|ИЗ
	|	ВтДанные КАК Строки
	|ГДЕ 
	|	Строки.ТипРегистра = ""Расходы""
	|	И Строки.Статья.ВариантРаспределенияРасходов В (ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров))
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#КонецОбласти

#КонецЕсли