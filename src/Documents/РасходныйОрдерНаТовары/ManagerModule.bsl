 #Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Документы.ОтборРазмещениеТоваров.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
    
	Документы.ОрдерНаОтражениеПорчиТоваров.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	
	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);
	
КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.РасходныйОрдерНаТовары) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.РасходныйОрдерНаТовары.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.РасходныйОрдерНаТовары);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьОрдернуюСхемуПриОтгрузке";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ДобавитьКомандуСоздатьНаОснованииРасходныйОрдерНаТовары(КомандыСоздатьНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.РасходныйОрдерНаТовары) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "ВводНаОснованииУТКлиент.СоздатьНаОснованииРасходныйОрдерНаТовары";
		КомандаСоздатьНаОсновании.Идентификатор = "СоздатьНаОснованииРасходныйОрдерНаТовары";
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.РасходныйОрдерНаТовары);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "РасходныеОрдераФормируютсяМенеджером";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ДобавитьКомандуСоздатьНаОснованииРасходныйОрдерНаТоварыПоЗаданиюНаПеревозку(КомандыСоздатьНаОсновании) Экспорт
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.РасходныйОрдерНаТовары) Тогда
		
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Обработчик = "ВводНаОснованииУТКлиент.СоздатьНаОснованииРасходныйОрдерНаТовары";
		КомандаСоздатьНаОсновании.Идентификатор = "СоздатьНаОснованииРасходныйОрдерНаТоварыПоЗаданиюНаПеревозку";
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.РасходныйОрдерНаТовары);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "РасходныеОрдераФормируютсяМенеджером";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

КонецПроцедуры


//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад,Помещение,Статус,СкладскаяОперация,Распоряжение,ДатаОтгрузки";
	
	Возврат ИменаРеквизитов;
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение
//			Тип Структура
//				Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = Новый Структура;	
	ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Склад, Ложь);
	
	
	ОтгружаемыеТовары = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ОтгружаемыеТовары.ПолноеИмяОбъекта = "Документ.РасходныйОрдерНаТовары";
	ОтгружаемыеТовары.ЭтоОрдер = Истина;
	
	ОтгружаемыеТовары.ИспользоватьСерииНоменклатуры  = ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры;
	ОтгружаемыеТовары.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	
	ОтгружаемыеТовары.СкладскиеОперации.Добавить(Объект.СкладскаяОперация);
	ОтгружаемыеТовары.ИспользоватьАдресноеХранение = СкладыСервер.ИспользоватьАдресноеХранение(Объект.Склад, Объект.Помещение, Объект.ДатаОтгрузки);
	
	ОтгружаемыеТовары.ИмяТЧТовары = "ОтгружаемыеТовары";
	ОтгружаемыеТовары.ИмяТЧСерии = "ОтгружаемыеТовары";
	ОтгружаемыеТовары.ИмяПоляПомещение = "Помещение";
	
	Если Объект.Статус = Перечисления.СтатусыРасходныхОрдеров.Подготовлено Тогда
		
		ОтгружаемыеТовары.ПодготовкаОрдера = Истина;
		ОтгружаемыеТовары.ПланированиеОтгрузки = Ложь;
		ОтгружаемыеТовары.ПланированиеОтбора = Ложь;
		ОтгружаемыеТовары.ПроверкаОтбора = Ложь;
		ОтгружаемыеТовары.ФактОтбора = Ложь;
		
	ИначеЕсли Объект.Статус = Перечисления.СтатусыРасходныхОрдеров.КОтбору Тогда
		
		ОтгружаемыеТовары.ПодготовкаОрдера = Ложь;
		ОтгружаемыеТовары.ПланированиеОтгрузки = Ложь;
		ОтгружаемыеТовары.ПланированиеОтбора = Истина;
		ОтгружаемыеТовары.ПроверкаОтбора = Ложь;
		ОтгружаемыеТовары.ФактОтбора = Ложь;
		
	ИначеЕсли Объект.Статус = Перечисления.СтатусыРасходныхОрдеров.КПроверке Тогда	
		
		Если ОтгружаемыеТовары.ИспользоватьАдресноеХранение Тогда
			ОтгружаемыеТовары.ПоляСвязи.Добавить("Упаковка");
			ОтгружаемыеТовары.ИмяПоляКоличество = "КоличествоУпаковок";
		КонецЕсли;
		
		ОтгружаемыеТовары.ПодготовкаОрдера = Ложь;
		ОтгружаемыеТовары.ПланированиеОтгрузки = Ложь;
		ОтгружаемыеТовары.ПланированиеОтбора = Ложь;
		ОтгружаемыеТовары.ПроверкаОтбора = Истина;
		ОтгружаемыеТовары.ФактОтбора = Ложь;
		
	ИначеЕсли Объект.Статус = Перечисления.СтатусыРасходныхОрдеров.КОтгрузке
		Или Объект.Статус = Перечисления.СтатусыРасходныхОрдеров.Отгружен Тогда
		
		Если ОтгружаемыеТовары.ИспользоватьАдресноеХранение Тогда
			ОтгружаемыеТовары.ПоляСвязи.Добавить("Упаковка");
			ОтгружаемыеТовары.ИмяПоляКоличество = "КоличествоУпаковок";
		КонецЕсли;
		
		ОтгружаемыеТовары.ПодготовкаОрдера = Ложь;
		ОтгружаемыеТовары.ПланированиеОтгрузки = Ложь;
		ОтгружаемыеТовары.ПланированиеОтбора = Ложь;
		ОтгружаемыеТовары.ПроверкаОтбора = Ложь;
		ОтгружаемыеТовары.ФактОтбора = Истина;
		
	КонецЕсли;
	
	ОтгружаемыеТовары.РегистрироватьСерии = НоменклатураКлиентСервер.НеобходимоРегистрироватьСерии(ОтгружаемыеТовары);
	ОтгружаемыеТовары.ОсобеннаяПроверкаСтатусовУказанияСерий = Истина;
	
	ОтгружаемыеТовары.ПоляСвязи.Добавить("Действие");
	ОтгружаемыеТовары.ПоляСвязи.Добавить("УпаковочныйЛистРодитель");
	ОтгружаемыеТовары.ПоляСвязи.Добавить("Назначение");
	
	ОтгружаемыеТовары.ЭтоОрдер = Истина;
	ОтгружаемыеТовары.ИмяПоляПомещение = "Помещение";
	ОтгружаемыеТовары.Дата = Объект.ДатаОтгрузки;
	
	ТоварыПоРаспоряжениям = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ТоварыПоРаспоряжениям.ПолноеИмяОбъекта = "Документ.РасходныйОрдерНаТовары";
	ТоварыПоРаспоряжениям.ЭтоНакладная = Истина;
	ТоварыПоРаспоряжениям.ПланированиеОтгрузки = Истина;
	
	ТоварыПоРаспоряжениям.ИспользоватьСерииНоменклатуры  = ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры;
	ТоварыПоРаспоряжениям.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	
	ТоварыПоРаспоряжениям.СкладскиеОперации.Добавить(Объект.СкладскаяОперация);
	ТоварыПоРаспоряжениям.ИспользоватьАдресноеХранение = СкладыСервер.ИспользоватьАдресноеХранение(Объект.Склад, Объект.Помещение, Объект.ДатаОтгрузки);
	
	ТоварыПоРаспоряжениям.ИмяТЧТовары = "ТоварыПоРаспоряжениям";
	ТоварыПоРаспоряжениям.ИмяТЧСерии = "ТоварыПоРаспоряжениям";
	ТоварыПоРаспоряжениям.ИмяПоляПомещение = "Помещение";
	ТоварыПоРаспоряжениям.ИмяПоляКоличество = "Количество";
	ТоварыПоРаспоряжениям.ИменаПолейДляОпределенияРаспоряжения.Добавить("ТоварыПоРаспоряжениям_Распоряжение");
	
	ТоварыПоРаспоряжениям.ПоляСвязи.Добавить("Распоряжение");
	ТоварыПоРаспоряжениям.ОсобеннаяПроверкаСтатусовУказанияСерий = Ложь;
	
	ПараметрыУказанияСерий.Вставить("ОтгружаемыеТовары", ОтгружаемыеТовары);
	ПараметрыУказанияСерий.Вставить("ТоварыПоРаспоряжениям", ТоварыПоРаспоряжениям);
	
	Возврат ПараметрыУказанияСерий;
КонецФункции

//Возвращает значение распоряжения на поступление или отгрузку
//
//	Параметры:
//		ЗначенияПолейДляОпределенияРаспоряжения - Структура - состав полей определяется значением
//				поля ИменаПолейДляОпределенияРаспоряжения параметров указания серий этого документа
//	Возвращаемое значение:
//      ДокументСсылка	
Функция РаспоряжениеНаВыполнениеСкладскойОперации(ЗначенияПолейДляОпределенияРаспоряжения) Экспорт
	Возврат ЗначенияПолейДляОпределенияРаспоряжения.ТоварыПоРаспоряжениям_Распоряжение;	
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	Если ПараметрыУказанияСерий.ИмяТЧТовары = "ОтгружаемыеТовары" Тогда
		ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийОтгружаемыеТовары(ПараметрыУказанияСерий);
	Иначе
		ТекстЗапроса = ТекстЗапросаЗаполненияСтатусовУказанияСерийТоварыПоРаспоряжениям(ПараметрыУказанияСерий);
	КонецЕсли;	
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийОтгружаемыеТовары(Знач ПараметрыУказанияСерий)
                                   
    Перем ТекстЗапроса;
    
    Если ПараметрыУказанияСерий.ПоляСвязи.Найти("Упаковка") <> Неопределено Тогда
        ТекстЗапроса = 
        "ВЫБРАТЬ
        |	Товары.Действие,
        |	Товары.Номенклатура,
        |	Товары.Серия,
        |	Товары.КоличествоУпаковок КАК Количество,
        |	Товары.СтатусУказанияСерий,
        |	Товары.НомерСтроки
        |ПОМЕСТИТЬ Товары
        |ИЗ
        |	&Товары КАК Товары";
    Иначе
        ТекстЗапроса = 
        "ВЫБРАТЬ
        |	Товары.Действие,
		|	Товары.Номенклатура,
		|	Товары.Серия,
		|	Товары.Количество,
		|	Товары.СтатусУказанияСерий,
		|	Товары.НомерСтроки
        |ПОМЕСТИТЬ Товары
        |ИЗ
        |	&Товары КАК Товары";
    КонецЕсли; 
    
    ТекстЗапроса = 	ТекстЗапроса + "
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |";
    
    ТекстЗапроса = 	ТекстЗапроса +
    "ВЫБРАТЬ
    |	Товары.НомерСтроки КАК НомерСтроки,
    |	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
    |	ВЫБОР
    |		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
    |			ТОГДА 0
    |		ИНАЧЕ ВЫБОР
    |				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
    |					ТОГДА ВЫБОР
    |							КОГДА Товары.Количество > 0
    |									И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
    |								ТОГДА ВЫБОР
    |										КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
    |											ТОГДА 14
    |										ИНАЧЕ 10
    |									КОНЕЦ
    |							ИНАЧЕ ВЫБОР
    |									КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
    |										ТОГДА 13
    |									ИНАЧЕ 9
    |								КОНЕЦ
    |						КОНЕЦ
    |				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
    |					ТОГДА ВЫБОР
    |							КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO
    |								ТОГДА ВЫБОР
    |										КОГДА Товары.Количество > 0
    |												И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
    |											ТОГДА 6
    |										ИНАЧЕ 5
    |									КОНЕЦ
	|							ИНАЧЕ ВЫБОР
	|									КОГДА Товары.Количество > 0
	|												И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|										ТОГДА 8
	|									КОГДА &ПодготовкаОрдера
	|										ТОГДА 27
    |									ИНАЧЕ 7
    |								КОНЕЦ
    |						КОНЕЦ
    |				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПоФактуОтбора
    |						И (ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеКлиенту
    |								И &ОтгрузкаКлиенту
    |							ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеВРозницу
    |								И &ОтгрузкаВРозницу
    |							ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеКомплектующихДляСборки
    |								И &ОтгрузкаКомплектующихДляСборки
    |							ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеКомплектовДляРазборки
    |								И &ОтгрузкаКомплектовДляРазборки
    |							ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеНаВнутренниеНужды
    |								И &ОтгрузкаНаВнутренниеНужды
    |							ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеПоВозвратуПоставщику
    |								И &ОтгрузкаПоВозвратуПоставщику
    |							ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеПоПеремещению
    |								И &ОтгрузкаПоПеремещению)
    |					ТОГДА ВЫБОР
    |							КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
    |								ТОГДА ВЫБОР
    |										КОГДА Товары.Количество > 0
    |												И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
    |											ТОГДА 4
    |										КОГДА Товары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отобрать)
    |												И (НЕ &ИспользоватьАдресноеХранение
    |													ИЛИ &ИспользоватьАдресноеХранение
    |														И (&ПланированиеОтбора
    |															ИЛИ &ПодготовкаОрдера))
    |											ТОГДА 0
    |										ИНАЧЕ 3
    |									КОНЕЦ
    |							ИНАЧЕ ВЫБОР
    |									КОГДА Товары.Количество > 0
    |											И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
    |											И Товары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить)
    |										ТОГДА 2
    |									КОГДА Товары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить)
    |										ТОГДА 1
    |									ИНАЧЕ 0
    |								КОНЕЦ
    |						КОНЕЦ
    |				ИНАЧЕ 0
    |			КОНЕЦ
    |	КОНЕЦ КАК СтатусУказанияСерий
    |ПОМЕСТИТЬ ТаблицаСтатусов
    |ИЗ
    |	Товары КАК Товары
    |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
    |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
    |			ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
    |		ПО (ПолитикиУчетаСерий.Склад = &Склад)
    |			И Товары.Номенклатура.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
    |	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
    |ИЗ
    |	ТаблицаСтатусов КАК ТаблицаСтатусов
    |ГДЕ
    |	ТаблицаСтатусов.СтатусУказанияСерий <> ТаблицаСтатусов.СтарыйСтатусУказанияСерий
    |
    |УПОРЯДОЧИТЬ ПО
    |	НомерСтроки";
    Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийТоварыПоРаспоряжениям(Знач ПараметрыУказанияСерий)
    
	Перем ТекстЗапроса;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Серия,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|					ТОГДА ВЫБОР
	|							КОГДА Товары.Количество > 0
	|									И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА ВЫБОР
	|										КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|											ТОГДА 14
	|										ИНАЧЕ 10
	|									КОНЕЦ
	|							ИНАЧЕ ВЫБОР
	|									КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|										ТОГДА 13
	|									ИНАЧЕ 9
	|								КОНЕЦ
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ ТаблицаСтатусов
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|			ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|		ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|			И (ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	ТаблицаСтатусов КАК ТаблицаСтатусов
	|ГДЕ
	|	ТаблицаСтатусов.СтатусУказанияСерий <> ТаблицаСтатусов.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;

КонецФункции

// Возвращает текст запроса для получениях доступных назначений
//	Параметры:
//		ПараметрыФормированияЗапроса - Структура - параметры для формирования текстов запросов
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаДоступныхНазначений(ПараметрыФормированияЗапроса) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДанныеРегистраТоварыКОтгрузке.Номенклатура,
	|	ДанныеРегистраТоварыКОтгрузке.Характеристика,
	|	СУММА(ДанныеРегистраТоварыКОтгрузке.Потребность) КАК Потребность,
	|	СУММА(0) КАК Обеспечено,
	|	Назначения.Ссылка КАК Назначение,
	|	Назначения.ДвиженияПоСкладскимРегистрам КАК ДвиженияПоСкладскимРегистрам,
	|	СУММА(ДанныеРегистраТоварыКОтгрузке.Потребность) - МАКСИМУМ(ЕСТЬNULL(ДанныеДокумента.Количество, 0)) КАК Остаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыКОтгрузкеОстатки.Номенклатура КАК Номенклатура,
	|		ТоварыКОтгрузкеОстатки.Характеристика КАК Характеристика,
	|		ТоварыКОтгрузкеОстатки.Назначение КАК Назначение,
	|		ТоварыКОтгрузкеОстатки.КОтгрузкеОстаток КАК Потребность
	|	ИЗ
	|		РегистрНакопления.ТоварыКОтгрузке.Остатки(
	|				,
	|				(&ПоВсемРаспоряжениям ИЛИ ДокументОтгрузки = &Распоряжение)
	|					И (Номенклатура, Характеристика) В (&ОтборПоТоварам)
	|					И Склад = &Склад
	|					И Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)) КАК ТоварыКОтгрузкеОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыКОтгрузке.Номенклатура,
	|		ТоварыКОтгрузке.Характеристика,
	|		ТоварыКОтгрузке.Назначение,
	|		ВЫБОР
	|			КОГДА ТоварыКОтгрузке.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА 0
	|			ИНАЧЕ ТоварыКОтгрузке.КОтгрузке
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ТоварыКОтгрузке КАК ТоварыКОтгрузке
	|	ГДЕ
	|		(ТоварыКОтгрузке.Номенклатура, ТоварыКОтгрузке.Характеристика) В (&ОтборПоТоварам)
	|		И ТоварыКОтгрузке.Склад = &Склад
	|		И ТоварыКОтгрузке.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		И ТоварыКОтгрузке.Регистратор = &Регистратор
	|		И (&ПоВсемРаспоряжениям ИЛИ ТоварыКОтгрузке.ДокументОтгрузки = &Распоряжение)) КАК ДанныеРегистраТоварыКОтгрузке
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДокументаСгруппированные КАК ДанныеДокумента
	|		ПО ДанныеРегистраТоварыКОтгрузке.Номенклатура = ДанныеДокумента.Номенклатура
	|			И ДанныеРегистраТоварыКОтгрузке.Характеристика = ДанныеДокумента.Характеристика
	|			И ДанныеРегистраТоварыКОтгрузке.Назначение = ДанныеДокумента.Назначение
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
	|		ПО ДанныеРегистраТоварыКОтгрузке.Назначение = Назначения.Ссылка
	|ГДЕ
	|	ДанныеРегистраТоварыКОтгрузке.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И ДанныеРегистраТоварыКОтгрузке.Назначение.ДвиженияПоСкладскимРегистрам
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРегистраТоварыКОтгрузке.Номенклатура,
	|	ДанныеРегистраТоварыКОтгрузке.Характеристика,
	|	Назначения.Ссылка
	|ИМЕЮЩИЕ
	| СУММА(ДанныеРегистраТоварыКОтгрузке.Потребность) - МАКСИМУМ(ЕСТЬNULL(ДанныеДокумента.Количество, 0))>=0";
	
	Если ПараметрыФормированияЗапроса.УчестьУжеПодобранные Тогда
		// Запрос не для динамических списков
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТоварыДокумента.Номенклатура,
		|	ТоварыДокумента.Характеристика,
		|	ТоварыДокумента.Назначение,
		|	ТоварыДокумента.Количество
		|ПОМЕСТИТЬ ТаблицаТоваровДокумента
		|ИЗ
		|	&ТоварыДокумента КАК ТоварыДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваровДокумента.Номенклатура КАК Номенклатура,
		|	ТаблицаТоваровДокумента.Характеристика КАК Характеристика,
		|	ТаблицаТоваровДокумента.Назначение КАК Назначение,
		|	СУММА(ТаблицаТоваровДокумента.Количество) КАК Количество
		|ПОМЕСТИТЬ ТоварыДокументаСгруппированные
		|ИЗ
		|	ТаблицаТоваровДокумента КАК ТаблицаТоваровДокумента
		|ГДЕ
		|	(ТаблицаТоваровДокумента.Номенклатура, ТаблицаТоваровДокумента.Характеристика) В (&ОтборПоТоварам)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваровДокумента.Номенклатура,
		|	ТаблицаТоваровДокумента.Характеристика,
		|	ТаблицаТоваровДокумента.Назначение
		|;" + ТекстЗапроса;
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТоварыДокументаСгруппированные", "(" +
			"ВЫБРАТЬ
			|	ИСТИНА КАК Номенклатура,
			|	ИСТИНА КАК Характеристика,
			|	ИСТИНА КАК Назначение,
			|	0 КАК Количество" + ")");
	КонецЕсли;
	
	Если ПараметрыФормированияЗапроса.ПоНесколькимТоварам Тогда
		// Запрос не для динамических списков
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаТоваров.Номенклатура,
		|	ТаблицаТоваров.Характеристика
		|ПОМЕСТИТЬ ТаблицаОтбораПоТоварам
		|ИЗ
		|	&ТаблицаТоваров КАК ТаблицаТоваров
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОтбораПоТоварам.Номенклатура,
		|	ТаблицаОтбораПоТоварам.Характеристика
		|ПОМЕСТИТЬ ТоварыОтборСгруппированные
		|ИЗ
		|	ТаблицаОтбораПоТоварам КАК ТаблицаОтбораПоТоварам
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаОтбораПоТоварам.Номенклатура,
		|	ТаблицаОтбораПоТоварам.Характеристика
		|;" + ТекстЗапроса;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоТоварам",
			"ВЫБРАТЬ
			|	ТоварыОтборСгруппированные.Номенклатура,
			|	ТоварыОтборСгруппированные.Характеристика
			|ИЗ
			|	ТоварыОтборСгруппированные КАК ТоварыОтборСгруппированные");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборПоТоварам",
			"ВЫБРАТЬ
			|	&Номенклатура,
			|	&Характеристика");
	КонецЕсли;
		
	Если ПараметрыФормированияЗапроса.УпорядочитьПоДатеЗаказаНазначения Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|УПОРЯДОЧИТЬ ПО
		|	Назначения.Заказ.Дата";
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст запроса для проверки заполнения серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаПроверкиЗаполненияСерий(ПараметрыУказанияСерий) Экспорт
	
	Если ПараметрыУказанияСерий.ИспользоватьАдресноеХранение Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаСерий.НомерСтроки КАК НомерСтроки,
		|	ТаблицаСерий.Серия КАК Серия,
		|	ТаблицаСерий.Номенклатура КАК Номенклатура,
		|	ТаблицаСерий.Характеристика КАК Характеристика,
		|	ВЫБОР
		|		КОГДА ТаблицаСерий.Действие <> ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отобрать)
		|			ТОГДА ТаблицаСерий.Упаковка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|	КОНЕЦ КАК Упаковка,
		|	ВЫБОР
		|		КОГДА ТаблицаСерий.Действие <> ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отобрать)
		|			ТОГДА ТаблицаСерий.КоличествоУпаковок
		|		ИНАЧЕ ТаблицаСерий.Количество
		|	КОНЕЦ КАК КоличествоУпаковок
		|ПОМЕСТИТЬ ТаблицаСерийДляЗапроса
		|ИЗ
		|	&ТаблицаСерий КАК ТаблицаСерий
		|ГДЕ
		|	ТаблицаСерий.СтатусУказанияСерий > 0
		|	И НЕ ТаблицаСерий.СтатусУказанияСерий В (&СтатусыСерийМожноУказывать)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";
	Иначе
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаСерий.НомерСтроки КАК НомерСтроки,
		|	ТаблицаСерий.Серия КАК Серия,
		|	ТаблицаСерий.Номенклатура КАК Номенклатура,
		|	ТаблицаСерий.Характеристика КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
		|	ТаблицаСерий.Количество КАК КоличествоУпаковок
		|ПОМЕСТИТЬ ТаблицаСерийДляЗапроса
		|ИЗ
		|	&ТаблицаСерий КАК ТаблицаСерий
		|ГДЕ
		|	ТаблицаСерий.СтатусУказанияСерий > 0
		|	И НЕ ТаблицаСерий.СтатусУказанияСерий В (&СтатусыСерийМожноУказывать)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаСерий.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаСерий.Номенклатура КАК Номенклатура,
	|	СУММА(ТаблицаСерий.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТаблицаСерий
	|ИЗ
	|	ТаблицаСерийДляЗапроса КАК ТаблицаСерий
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерий.Серия,
	|	ТаблицаСерий.Номенклатура,
	|	ТаблицаСерий.Упаковка,
	|	ТаблицаСерий.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.ТоварПредставление,
	|	""Серия"" КАК ИмяПоляСерия,
	|	МАКСИМУМ(ВложенныйЗапрос.СерияНеЗаполнена) КАК СерияНеЗаполнена,
	|	МАКСИМУМ(ВложенныйЗапрос.ОшибкаКоличества) КАК ОшибкаКоличества,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПРЕДСТАВЛЕНИЕ(ТаблицаСерий.Номенклатура) КАК ТоварПредставление,
	|		ВЫБОР
	|			КОГДА ТаблицаСерий.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК СерияНеЗаполнена,
	|		ЛОЖЬ КАК ОшибкаКоличества,
	|		ТаблицаСерий.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		ТаблицаСерийДляЗапроса КАК ТаблицаСерий
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПРЕДСТАВЛЕНИЕ(ТаблицаСерий.Номенклатура),
	|		ЛОЖЬ,
	|		ВЫБОР
	|			КОГДА НЕ ВЫРАЗИТЬ(ТаблицаСерий.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры.ИспользоватьКоличествоСерии
	|					И ТаблицаСерий.КоличествоУпаковок <> 1
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ,
	|		ТаблицаСерий.НомерСтроки
	|	ИЗ
	|		ТаблицаСерий КАК ТаблицаСерий) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.НомерСтроки,
	|	ВложенныйЗапрос.ТоварПредставление
	|
	|ИМЕЮЩИЕ
	|	(МАКСИМУМ(ВложенныйЗапрос.СерияНеЗаполнена) = ИСТИНА
	|		ИЛИ МАКСИМУМ(ВложенныйЗапрос.ОшибкаКоличества) = ИСТИНА)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.НомерСтроки";
	
	СтатусыСерийМожноУказывать = НоменклатураКлиентСервер.СтатусыСерийСериюМожноУказать();
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СтатусыСерийМожноУказывать", СтрСоединить(СтатусыСерийМожноУказывать, ",")); 	
	
	Возврат ТекстЗапроса;
КонецФункции

// Разбивает расходный ордер на два, перенося в приемки строки. Если склад адресный - формируются сторнирующие
//  документы для переброски уже отобранных по ордеру товаров
//
// Параметры:
//  ИсточникОбъект		 - ДокументОбъект.РасходныйОрдерНаТовары 
//  СтрокиДляПриемника	 - Массив - массив номеров строк, переносимых в новый ордер.
//  										Строки с упаковочными листами будут перенесены рекурсивно
//  ПриемникСсылка		 - ДокументСсылка.РасходныйОрдерНаТовары, Неопределено	 - приемник переносимых строк.
//  	Если Неопределено - будет создан новый ордер. Значение по умолчанию Неопределено.
//  ЗаданиеНаПеревозку	 - ДокументСсылка.ЗаданиеНаПеревозку, Неопределено - если значение не равно Неопределено
//										- в приемнике будет заполнено задание на перевозку
// 
// Возвращаемое значение:
//  ДокументСсылка.РасходныйОрдерНаТовары, Неопределено - ссылка ордер-приемник или Неопределено, если произошла ошибка
//
Функция РазбитьОрдер(ИсточникОбъект, СтрокиДляПриемника, ПриемникСсылка = Неопределено, ЗаданиеНаПеревозку = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(ПриемникСсылка) Тогда
		ПриемникОбъект = Документы.РасходныйОрдерНаТовары.СоздатьДокумент();
		ЗаполнитьЗначенияСвойств(ПриемникОбъект, ИсточникОбъект,, "Дата,Номер");
		
		Если Не ЗначениеЗаполнено(ЗаданиеНаПеревозку) Тогда
			ПриемникОбъект.ЗаданиеНаПеревозку = ЗаданиеНаПеревозку;
		КонецЕсли;
		
		ПриемникОбъект.Дата = ТекущаяДата();
	Иначе
		ПриемникОбъект = ПриемникСсылка.ПолучитьОбъект();
		Попытка
			ПриемникОбъект.Заблокировать();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			Возврат Неопределено;
		КонецПопытки;
	КонецЕсли;
	
	
	РезультатРасчетаПереносимыхСтрок = ПереносимыеСтроки(ИсточникОбъект, СтрокиДляПриемника); 
	
	Если РезультатРасчетаПереносимыхСтрок.ЕстьОшибка Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если СкладыСервер.ИспользоватьАдресноеХранение(ИсточникОбъект.Склад, ИсточникОбъект.Помещение, ИсточникОбъект.ДатаОтгрузки) Тогда
		КорректировкаОбъект = Документы.КорректировкаПоОрдеруНаТовары.СоздатьДокумент();
		ЗаполнитьЗначенияСвойств(КорректировкаОбъект, ИсточникОбъект, "Склад,Помещение");
		КорректировкаОбъект.Дата = ТекущаяДата();
		КорректировкаОбъект.Ордер = ИсточникОбъект.Ссылка;
	Иначе
		КорректировкаОбъект = Неопределено;
	КонецЕсли;
	
	Для Каждого СтрМас Из РезультатРасчетаПереносимыхСтрок.СтрокиДляПереноса Цикл
		
		НоваяСтрока = ПриемникОбъект.ОтгружаемыеТовары.Добавить();	
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрМас); 
		
		Если КорректировкаОбъект <> Неопределено
			И Не СтрМас.ЭтоУпаковочныйЛист Тогда
			НоваяСтрокаКорректировки = КорректировкаОбъект.Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаКорректировки, СтрМас); 
			НоваяСтрокаКорректировки.ВидОперации = Перечисления.ВидыОперацийКорректировкиОрдераНаТовары.ПеренестиВДругойОрдер;
		КонецЕсли;
			
		ИсточникОбъект.ОтгружаемыеТовары.Удалить(СтрМас);
	КонецЦикла;
	
	ИсточникОбъект.ВсегоМест = УпаковочныеЛистыСервер.КоличествоМестВТЧ(ИсточникОбъект.ОтгружаемыеТовары);	
	ПриемникОбъект.ВсегоМест = УпаковочныеЛистыСервер.КоличествоМестВТЧ(ПриемникОбъект.ОтгружаемыеТовары);	
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварыПоРаспоряжениям.НомерСтроки,
	|	ТоварыПоРаспоряжениям.Распоряжение,
	|	ТоварыПоРаспоряжениям.Номенклатура,
	|	ТоварыПоРаспоряжениям.Характеристика,
	|	ТоварыПоРаспоряжениям.Назначение,
	|	ТоварыПоРаспоряжениям.Серия,
	|	ТоварыПоРаспоряжениям.Количество
	|ПОМЕСТИТЬ ТоварыПоРаспоряжениямДляЗапроса
	|ИЗ
	|	&ТоварыПоРаспоряжениям КАК ТоварыПоРаспоряжениям
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтгружаемыеТовары.Номенклатура,
	|	ОтгружаемыеТовары.Характеристика,
	|	ОтгружаемыеТовары.Назначение,
	|	ВЫБОР
	|		КОГДА ОтгружаемыеТовары.СтатусУказанияСерий В (10, 14)
	|			ТОГДА ОтгружаемыеТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Серия,
	|	ОтгружаемыеТовары.Количество
	|ПОМЕСТИТЬ ОтгружаемыеТовары
	|ИЗ
	|	&ОтгружаемыеТовары КАК ОтгружаемыеТовары
	|ГДЕ
	|	НЕ ОтгружаемыеТовары.ЭтоУпаковочныйЛист
	|	И ОтгружаемыеТовары.Действие <> ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.НеОтгружать)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаданиеНаПеревозкуРаспоряжения.Распоряжение
	|ПОМЕСТИТЬ РаспоряженияЗадания
	|ИЗ
	|	Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения
	|ГДЕ
	|	ЗаданиеНаПеревозкуРаспоряжения.Ссылка = &ЗаданиеНаПеревозку
	|	И ЗаданиеНаПеревозкуРаспоряжения.ПолучательОтправитель = &Получатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыПоРаспоряжениям.НомерСтроки,
	|	ТоварыПоРаспоряжениям.Распоряжение,
	|	ВЫБОР
	|		КОГДА РаспоряженияЗадания.Распоряжение ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК РаспоряжениеЕстьВЗадании,
	|	ТоварыПоРаспоряжениям.Номенклатура,
	|	ТоварыПоРаспоряжениям.Характеристика,
	|	ТоварыПоРаспоряжениям.Назначение,
	|	ТоварыПоРаспоряжениям.Серия,
	|	ТоварыПоРаспоряжениям.Количество
	|ПОМЕСТИТЬ ТоварыПоРаспоряжениям
	|ИЗ
	|	ТоварыПоРаспоряжениямДляЗапроса КАК ТоварыПоРаспоряжениям
	|		ЛЕВОЕ СОЕДИНЕНИЕ РаспоряженияЗадания КАК РаспоряженияЗадания
	|		ПО ТоварыПоРаспоряжениям.Распоряжение = РаспоряженияЗадания.Распоряжение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеТовары.Номенклатура,
	|	ВсеТовары.Характеристика,
	|	ВсеТовары.Назначение,
	|	ВсеТовары.Серия,
	|	СУММА(ВсеТовары.КоличествоПоРаспоряжениям) - СУММА(ВсеТовары.КоличествоОтгружается) КАК РасхождениеСРаспоряжениями
	|ПОМЕСТИТЬ РасхожденияПоТоварам
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыПоРаспоряжениям.Номенклатура КАК Номенклатура,
	|		ТоварыПоРаспоряжениям.Характеристика КАК Характеристика,
	|		ТоварыПоРаспоряжениям.Назначение КАК Назначение,
	|		ТоварыПоРаспоряжениям.Серия КАК Серия,
	|		0 КАК КоличествоОтгружается,
	|		ТоварыПоРаспоряжениям.Количество КАК КоличествоПоРаспоряжениям
	|	ИЗ
	|		ТоварыПоРаспоряжениям КАК ТоварыПоРаспоряжениям
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОтгружаемыеТовары.Номенклатура,
	|		ОтгружаемыеТовары.Характеристика,
	|		ОтгружаемыеТовары.Назначение,
	|		ОтгружаемыеТовары.Серия,
	|		ОтгружаемыеТовары.Количество,
	|		0
	|	ИЗ
	|		ОтгружаемыеТовары КАК ОтгружаемыеТовары) КАК ВсеТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ВсеТовары.Номенклатура,
	|	ВсеТовары.Назначение,
	|	ВсеТовары.Характеристика,
	|	ВсеТовары.Серия
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВсеТовары.КоличествоОтгружается) < СУММА(ВсеТовары.КоличествоПоРаспоряжениям)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасхожденияПоТоварам.Номенклатура КАК Номенклатура,
	|	РасхожденияПоТоварам.Характеристика КАК Характеристика,
	|	РасхожденияПоТоварам.Назначение КАК Назначение,
	|	РасхожденияПоТоварам.Серия КАК Серия,
	|	РасхожденияПоТоварам.РасхождениеСРаспоряжениями,
	|	ТоварыПоРаспоряжениям.НомерСтроки КАК НомерСтрокиРаспоряжений
	|ИЗ
	|	ТоварыПоРаспоряжениям КАК ТоварыПоРаспоряжениям
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РасхожденияПоТоварам КАК РасхожденияПоТоварам
	|		ПО ТоварыПоРаспоряжениям.Номенклатура = РасхожденияПоТоварам.Номенклатура
	|			И ТоварыПоРаспоряжениям.Характеристика = РасхожденияПоТоварам.Характеристика
	|			И ТоварыПоРаспоряжениям.Назначение = РасхожденияПоТоварам.Назначение
	|			И ТоварыПоРаспоряжениям.Серия = РасхожденияПоТоварам.Серия
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Назначение,
	|	Серия,
	|	ТоварыПоРаспоряжениям.РаспоряжениеЕстьВЗадании УБЫВ";
	
	Запрос.УстановитьПараметр("ТоварыПоРаспоряжениям",ИсточникОбъект.ТоварыПоРаспоряжениям.Выгрузить());
	Запрос.УстановитьПараметр("ОтгружаемыеТовары",ИсточникОбъект.ОтгружаемыеТовары.Выгрузить());
	Запрос.УстановитьПараметр("ОтгружаемыеТовары",ИсточникОбъект.ОтгружаемыеТовары.Выгрузить());
	Запрос.УстановитьПараметр("ЗаданиеНаПеревозку",ПриемникОбъект.ЗаданиеНаПеревозку);
	Запрос.УстановитьПараметр("Получатель",ПриемникОбъект.Получатель);
	
	ТекНоменклатура   = Неопределено;
	ТекХарактеристика = Неопределено;
	ТекНазначение     = Неопределено;
	ТекСерия          = Неопределено;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтрокиДляУдаления = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		
		Если ТекНоменклатура <> Выборка.Номенклатура
			Или ТекХарактеристика <> Выборка.Характеристика
			Или ТекНазначение <> Выборка.Назначение
			Или ТекСерия <> Выборка.Серия Тогда
			
			КоличествоКРаспределению = Выборка.РасхождениеСРаспоряжениями;
			
			ТекНоменклатура   = Выборка.Номенклатура;
			ТекХарактеристика = Выборка.Характеристика;
			ТекНазначение     = Выборка.Назначение;
			ТекСерия          = Выборка.Серия;
			
		КонецЕсли;
		
		Если КоличествоКРаспределению = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаРаспоряжений = ИсточникОбъект.ТоварыПоРаспоряжениям[Выборка.НомерСтрокиРаспоряжений - 1];
		НоваяСтрока        = ПриемникОбъект.ТоварыПоРаспоряжениям.Добавить();	
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРаспоряжений); 
		
		Если КоличествоКРаспределению >= СтрокаРаспоряжений.Количество Тогда
			КоличествоКРаспределению = КоличествоКРаспределению - СтрокаРаспоряжений.Количество;
			СтрокиДляУдаления.Добавить(СтрокаРаспоряжений);
		Иначе
			СтрокаРаспоряжений.Количество = СтрокаРаспоряжений.Количество - КоличествоКРаспределению;
			НоваяСтрока.Количество        = КоличествоКРаспределению;
			КоличествоКРаспределению      = 0;
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого СтрМас Из СтрокиДляУдаления Цикл
		
		ИсточникОбъект.ТоварыПоРаспоряжениям.Удалить(СтрМас);
		
	КонецЦикла;
	
	НачатьТранзакцию();
	
	Попытка
		ИсточникОбъект.ДополнительныеСвойства.Вставить("ОтключитьКонтрольПриПроведении");
		
		Если ИсточникОбъект.ОтгружаемыеТовары.Количество() > 0 Тогда
			ИсточникОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Иначе
			ИсточникОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		КонецЕсли;
			
		ПриемникОбъект.ДополнительныеСвойства.Вставить("ОтключитьКонтрольПриПроведении");
		ПриемникОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
		Если КорректировкаОбъект <> Неопределено Тогда
			КорректировкаОбъект.ОрдерПолучатель = ПриемникОбъект.Ссылка;
			КорректировкаОбъект.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
		Возврат ПриемникОбъект.Ссылка;
	Исключение
		ОтменитьТранзакцию();
		ТекстСообщения = НСтр("ru='Не удалось разбить ордер %Источник%';uk='Не вдалося розбити ордер %Источник%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Источник%", ИсточникОбъект.Ссылка);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Возврат Неопределено;
	КонецПопытки;
		
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.РасходныйОрдерНаТовары"; 
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("ИспользоватьАдресноеХранение", 
											"ВЫБОР
											|		КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьСкладскиеПомещения
											|				И ТаблицаТовары.Ссылка.ДатаОтгрузки >= ТаблицаТовары.Ссылка.Склад.ДатаНачалаИспользованияСкладскихПомещений
											|			ТОГДА ВЫБОР
											|					КОГДА ТаблицаТовары.Ссылка.Помещение.ИспользоватьАдресноеХранение
											|							И ТаблицаТовары.Ссылка.ДатаОтгрузки >= ТаблицаТовары.Ссылка.Помещение.ДатаНачалаАдресногоХраненияОстатков
											|						ТОГДА ИСТИНА
											|					ИНАЧЕ ЛОЖЬ
											|				КОНЕЦ
											|		ИНАЧЕ ВЫБОР
											|				КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьАдресноеХранение
											|						И ТаблицаТовары.Ссылка.ДатаОтгрузки >= ТаблицаТовары.Ссылка.Склад.ДатаНачалаАдресногоХраненияОстатков
											|					ТОГДА ИСТИНА
											|				ИНАЧЕ ЛОЖЬ
											|			КОНЕЦ
											|	КОНЕЦ");
	ПереопределениеРасчетаПараметров.Вставить("Статус", "ТаблицаТовары.Ссылка.Статус");  
	
	Если ИмяРегистра = "ТоварыКОтгрузке" Тогда
	
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыКОтгрузке(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	ИначеЕсли ИмяРегистра = "ТоварыНаСкладах" Тогда
	
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	ИначеЕсли ИмяРегистра = "ТоварыВЯчейках" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыВЯчейках(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	ИначеЕсли ИмяРегистра = "ТоварыКОтбору" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыКОтбору(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	ИначеЕсли ИмяРегистра = "ДвиженияСерийТоваров" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаСерии";
		
	Иначе
		ТекстИсключения = НСтр("ru='В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';uk='У документі %ПолноеИмяДокумента% не реалізована адаптація тексту запиту формування рухів по регістру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(ТекстЗапроса,
																								ПолноеИмяДокумента,
																								СинонимТаблицыДокумента,
																								ПереопределениеРасчетаПараметров);

	Возврат Результат;

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	// Создание запроса инициализации движений и заполенение его параметров.
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	// Формирование текста запроса.
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОтгрузке(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОтбору(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыВЯчейках(Запрос, ТекстыЗапроса, Регистры);
	
	// Исполнение запроса и выгрузка полученных таблиц для движений.
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);

КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеШапки.ДатаОтгрузки      КАК Период,
	|	ДанныеШапки.Склад             КАК Склад,
	|	ДанныеШапки.Получатель        КАК Получатель,
	|	ДанныеШапки.Статус            КАК Статус,
	|	ДанныеШапки.СкладскаяОперация КАК СкладскаяОперация,
	|	ВЫБОР
	|		КОГДА ДанныеШапки.Склад.ИспользоватьСкладскиеПомещения
	|				И ДанныеШапки.ДатаОтгрузки >= ДанныеШапки.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|			ТОГДА ВЫБОР
	|					КОГДА ДанныеШапки.Помещение.ИспользоватьАдресноеХранение
	|							И ДанныеШапки.ДатаОтгрузки >= ДанныеШапки.Помещение.ДатаНачалаАдресногоХраненияОстатков
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДанныеШапки.Склад.ИспользоватьАдресноеХранение
	|						И ДанныеШапки.ДатаОтгрузки >= ДанныеШапки.Склад.ДатаНачалаАдресногоХраненияОстатков
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|	КОНЕЦ                    КАК ИспользоватьАдресноеХранение,
	|	ДанныеШапки.Помещение    КАК Помещение,
	|	ДанныеШапки.ЗонаОтгрузки КАК ЗонаОтгрузки,
	|	ВЫБОР
	|		КОГДА ДанныеШапки.Склад.ИспользоватьСкладскиеПомещения
	|				И ДанныеШапки.ДатаОтгрузки >= ДанныеШапки.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                          КАК ИспользоватьСкладскиеПомещения,
	|	ДанныеШапки.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары КАК ДанныеШапки
	|ГДЕ
	|	ДанныеШапки.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();

	Запрос.УстановитьПараметр("Статус",                         Реквизиты.Статус);
	Запрос.УстановитьПараметр("Период",                         Реквизиты.Период);
	Запрос.УстановитьПараметр("Получатель",                     Реквизиты.Получатель);
	Запрос.УстановитьПараметр("Склад",                          Реквизиты.Склад);
	Запрос.УстановитьПараметр("Помещение",                      Реквизиты.Помещение);
	Запрос.УстановитьПараметр("ЗонаОтгрузки",                   Реквизиты.ЗонаОтгрузки);
	Запрос.УстановитьПараметр("ИспользоватьАдресноеХранение",   Реквизиты.ИспользоватьАдресноеХранение);
 	Запрос.УстановитьПараметр("СкладскаяОперация",              Реквизиты.СкладскаяОперация);
 	Запрос.УстановитьПараметр("ИспользоватьСкладскиеПомещения", Реквизиты.ИспользоватьСкладскиеПомещения);
	Запрос.УстановитьПараметр("ЗаданиеНаПеревозку",             Реквизиты.ЗаданиеНаПеревозку);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыНаСкладах";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Склад КАК Склад,
	|	&Помещение КАК Помещение,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Количество КАК ВНаличии,
	|	0 КАК КОтгрузке,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10, 14)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПУстаяСсылка)
	|	КОНЕЦ КАК Серия,
	|	ИСТИНА КАК КонтролироватьОстатки,
	|	ТаблицаТовары.Назначение КАК Назначение
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК ТаблицаТовары
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отгружен)
	|	И ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ ТаблицаТовары.ЭтоУпаковочныйЛист
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Склад,
	|	&Помещение,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	0,
	|	ТаблицаТовары.Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (6, 8, 10, 14)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	ИСТИНА,
	|	ТаблицаТовары.Назначение
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК ТаблицаТовары
	|ГДЕ
	|	(&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КПроверке)
	|			ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КОтгрузке)
	|			ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КОтбору)
	|			ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Подготовлено))
	|	И (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отобрать)
	|	ИЛИ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить))
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ ТаблицаТовары.ЭтоУпаковочныйЛист";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОтгрузке(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОтгрузке";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Склад КАК Склад,
	|	&ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку,
	|	&Получатель КАК Получатель,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (10, 14)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяССылка)
	|	КОНЕЦ КАК Серия,
	|	ТаблицаТовары.Распоряжение КАК ДокументОтгрузки,
	|	ТаблицаТовары.Количество КАК КОтгрузке,
	|	0 КАК КСборке,
	|	0 КАК Собирается,
	|	0 КАК Собрано,
	|   ТаблицаТовары.Назначение КАК Назначение
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК ТаблицаТовары
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отгружен)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Склад,
	|	&ЗаданиеНаПеревозку,
	|	&Получатель,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (10, 14)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяССылка)
	|	КОНЕЦ,
	|	ТаблицаТовары.Распоряжение,
	|	0,
	|	ТаблицаТовары.Количество,
	|	0,
	|	0,
	|   ТаблицаТовары.Назначение КАК Назначение								    
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК ТаблицаТовары
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Подготовлено)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Склад,
	|	&ЗаданиеНаПеревозку,
	|	&Получатель,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (10, 14)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяССылка)
	|	КОНЕЦ,
	|	ТаблицаТовары.Распоряжение,
	|	0,
	|	0,
	|	ТаблицаТовары.Количество,
	|	0,
	|   ТаблицаТовары.Назначение КАК Назначение								    
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК ТаблицаТовары
	|ГДЕ
	|	(&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КПроверке)
	|		ИЛИ &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КОтбору))
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Склад,
	|	&ЗаданиеНаПеревозку,
	|	&Получатель,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (10, 14)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяССылка)
	|	КОНЕЦ,
	|	ТаблицаТовары.Распоряжение,
	|	0,
	|	0,
	|	0,
	|	ТаблицаТовары.Количество,
	|   ТаблицаТовары.Назначение КАК Назначение								   
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК ТаблицаТовары
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КОтгрузке)
	|	И ТаблицаТовары.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОтбору(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОтбору";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (6, 8, 10, 14)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяССылка)
	|	КОНЕЦ КАК Серия,
	|	&Ссылка КАК Распоряжение,
	|	ТаблицаТовары.Количество КАК Отобрано,
	|	0 КАК КОтбору,
	|   ТаблицаТовары.Назначение КАК Назначение
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ИспользоватьАдресноеХранение
	|	И ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ ТаблицаТовары.ЭтоУпаковочныйЛист
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (6, 8, 10, 14)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяССылка)
	|	КОНЕЦ КАК Серия,
	|	&Ссылка,
	|	0,
	|	ТаблицаТовары.Количество,
	|   ТаблицаТовары.Назначение КАК Назначение								    
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ИспользоватьАдресноеХранение
	|	И ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отобрать)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ ТаблицаТовары.ЭтоУпаковочныйЛист
	|	И &Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Подготовлено)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (6, 8, 10, 14)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяССылка)
	|	КОНЕЦ КАК Серия,
	|	&Ссылка КАК Распоряжение,
	|	-ТаблицаТовары.Количество КАК Отобрано,
	|	0 КАК КОтбору,
	|   ТаблицаТовары.Назначение КАК Назначение						    
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ИспользоватьАдресноеХранение
	|	И ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.НеОтгружать)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ ТаблицаТовары.ЭтоУпаковочныйЛист";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&Склад КАК Отправитель,
	|	&Помещение КАК ПомещениеОтправителя,
	|	&Получатель КАК Получатель,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка) КАК ПомещениеПолучателя,
	|	&Ссылка КАК Документ,
	|	&СкладскаяОперация КАК СкладскаяОперация,
	|	ИСТИНА КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И ТаблицаСерии.Действие <> ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.НеОтгружать)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период,
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаСерии.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаСерии.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество,
	|	&Склад,
	|	&Помещение,
	|	&Склад,
	|	&Помещение,
	|	&Ссылка,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.РазмещениеВЯчейки),
	|	ИСТИНА
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И ТаблицаСерии.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.НеОтгружать)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыВЯчейках(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыВЯчейках";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&ЗонаОтгрузки КАК Ячейка,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10, 14)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Серия,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|			ТОГДА ТаблицаТовары.Упаковка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|	КОНЕЦ КАК Упаковка,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|			ТОГДА ТаблицаТовары.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаТовары.Количество
	|	КОНЕЦ КАК ВНаличии,
	|	0 КАК КРазмещению,
	|	ТаблицаТовары.Назначение КАК Назначение
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ИспользоватьАдресноеХранение
	|	И ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.НеОтгружать)
	|	И ТаблицаТовары.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	Если ПравоДоступа("Изменение", Метаданные.Документы.РасходныйОрдерНаТовары) Тогда
		// Расходный ордер на товары
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "РасходныйОрдерНаТовары";
		КомандаПечати.Представление = НСтр("ru='Расходный ордер на товары';uk='Видатковий ордер на товари'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;

	// Задание на отбор товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьЗаданияНаОтборРазмещениеТоваров";
	КомандаПечати.Идентификатор = "ЗаданиеНаОтборРазмещениеТовара";
	КомандаПечати.Представление = НСтр("ru='Задание на отбор товаров';uk='Завдання на відбір товарів'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ИмяФормы", "ЗаданиеНаОтбор");
	
КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РасходныйОрдерНаТовары") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"РасходныйОрдерНаТовары",
			НСтр("ru='Расходный ордер на товары';uk='Видатковий ордер на товари'"),
 			ПечатьРасходногоОрдераНаТовары(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),,,,Истина);
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьДанныеДляПечатнойФормыОтборРазмещениеТоваров(ПараметрыПечати, МассивДокументов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасходныйОрдерНаТовары.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТовары.Ссылка) КАК СсылкаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТовары.Склад) КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТовары.Помещение) КАК ПомещениеПредставление,
	|	РасходныйОрдерНаТовары.Склад КАК Склад,
	|	РасходныйОрдерНаТовары.Дата КАК Дата,
	|	РасходныйОрдерНаТовары.Номер КАК Номер,
	|	ЛОЖЬ КАК НарушенаОрдернаяСхема,
	|	ВЫБОР
	|		КОГДА РасходныйОрдерНаТовары.Склад.ИспользоватьСкладскиеПомещения
	|				И РасходныйОрдерНаТовары.ДатаОтгрузки >= РасходныйОрдерНаТовары.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|			ТОГДА ВЫБОР
	|					КОГДА РасходныйОрдерНаТовары.Помещение.ИспользоватьАдресноеХранениеСправочно
	|							И (НЕ РасходныйОрдерНаТовары.Помещение.ИспользоватьАдресноеХранение
	|								ИЛИ РасходныйОрдерНаТовары.ДатаОтгрузки < РасходныйОрдерНаТовары.Помещение.ДатаНачалаАдресногоХраненияОстатков)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РасходныйОрдерНаТовары.Склад.ИспользоватьАдресноеХранениеСправочно
	|						И (НЕ РасходныйОрдерНаТовары.Склад.ИспользоватьАдресноеХранение
	|							ИЛИ РасходныйОрдерНаТовары.ДатаОтгрузки < РасходныйОрдерНаТовары.Склад.ДатаНачалаАдресногоХраненияОстатков)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|	КОНЕЦ КАК ИспользуетсяСправочноеХранение,
	|	NULL КАК ВидОперации,
	|	РасходныйОрдерНаТовары.Склад.ИспользоватьСерииНоменклатуры КАК ИспользоватьСерииНоменклатуры,
	|	ВЫБОР
	|		КОГДА РасходныйОрдерНаТовары.Склад.ИспользоватьСкладскиеПомещения
	|				И РасходныйОрдерНаТовары.ДатаОтгрузки >= РасходныйОрдерНаТовары.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|			ТОГДА РасходныйОрдерНаТовары.Помещение.ИспользованиеРабочихУчастков
	|		ИНАЧЕ РасходныйОрдерНаТовары.Склад.ИспользованиеРабочихУчастков
	|	КОНЕЦ КАК ИспользованиеРабочихУчастков,
	|	ВЫБОР
	|		КОГДА РасходныйОрдерНаТовары.Склад.ИспользоватьСкладскиеПомещения
	|				И РасходныйОрдерНаТовары.Дата >= РасходныйОрдерНаТовары.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|			ТОГДА ВЫБОР
	|					КОГДА РасходныйОрдерНаТовары.Помещение.ИспользоватьАдресноеХранение
	|							И РасходныйОрдерНаТовары.Дата >= РасходныйОрдерНаТовары.Помещение.ДатаНачалаАдресногоХраненияОстатков
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РасходныйОрдерНаТовары.Склад.ИспользоватьАдресноеХранение
	|						И РасходныйОрдерНаТовары.Дата >= РасходныйОрдерНаТовары.Склад.ДатаНачалаАдресногоХраненияОстатков
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|	КОНЕЦ КАК ИспользуетсяАдресноеХранение,
	|	ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТовары.ЗаданиеНаПеревозку.Ссылка) КАК ЗаданиеНаПеревозкуПредставление,
	|	РасходныйОрдерНаТовары.ЗаданиеНаПеревозку.Дата КАК ЗаданиеНаПеревозкуДата,
	|	РасходныйОрдерНаТовары.ЗаданиеНаПеревозку.Номер КАК ЗаданиеНаПеревозкуНомер,
	|	РасходныйОрдерНаТовары.ПорядокДоставки КАК ПорядокДоставки,
	|	РасходныйОрдерНаТовары.ОтгрузкаПоЗаданиюНаПеревозку КАК ОтгрузкаПоЗаданиюНаПеревозку
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
	|ГДЕ
	|	РасходныйОрдерНаТовары.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок КАК НаборУпаковок,
	|	ТаблицаТовары.Количество КАК Количество
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И НЕ ТаблицаТовары.ЭтоУпаковочныйЛист
	|	И ТаблицаТовары.Действие <> ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.НеОтгружать)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Склад КАК Склад,
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА NULL
	|		ИНАЧЕ ТаблицаТовары.Серия
	|	КОНЕЦ КАК Серия,
	|	ТаблицаТовары.НаборУпаковок КАК НаборУпаковок,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Упаковка,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаТоваровСуммированная
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.НаборУпаковок,
	|	ТаблицаТовары.Ссылка.Склад,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА NULL
	|		ИНАЧЕ ТаблицаТовары.Серия
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваровСуммированная.Ссылка КАК Ссылка,
	|	ТаблицаТоваровСуммированная.Склад КАК Склад,
	|	ТаблицаТоваровСуммированная.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваровСуммированная.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваровСуммированная.Характеристика КАК Характеристика,
	|	ТаблицаТоваровСуммированная.Серия КАК Серия,
	|	ТаблицаТоваровСуммированная.Номенклатура.Код КАК Код,
	|	ТаблицаТоваровСуммированная.Номенклатура.Артикул КАК Артикул,
	|	ТаблицаТоваровСуммированная.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
	|	ТаблицаТоваровСуммированная.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
	|	ТаблицаТоваровСуммированная.Серия.Наименование КАК ПредставлениеСерии,
	|	ТаблицаТоваровСуммированная.Количество КАК Количество,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТоваровСуммированная.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбхода,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка, ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка)) КАК ОсновнаяЯчейка,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбходаДополнительнаяЯчейка,
	|	ПРЕДСТАВЛЕНИЕ(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток) КАК ПредставлениеРабочегоУчастка,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.Код, """") КАК ОсновнаяЯчейкаПредставление,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.Код, """") КАК ЯчейкаПредставление,
	|	ТаблицаТоваровСуммированная.Количество КАК КоличествоУпаковок,
	|	ТаблицаТоваровСуммированная.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий КАК НастройкаИспользованияСерий,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТоваровСуммированная.Упаковка) КАК ПредставлениеЕдининицыИзмеренияУпаковки
	|ИЗ
	|	ТаблицаТоваровСуммированная КАК ТаблицаТоваровСуммированная
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТоваровСуммированная.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТоваровСуммированная.Ссылка.Склад)
	|			И (ВЫБОР
	|				КОГДА ТаблицаТоваровСуммированная.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|						И ТаблицаТоваровСуммированная.Ссылка.ДатаОтгрузки >= ТаблицаТоваровСуммированная.Ссылка.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|					ТОГДА РазмещениеОсновнаяЯчейка.Помещение = ТаблицаТоваровСуммированная.Ссылка.Помещение
	|				ИНАЧЕ РазмещениеОсновнаяЯчейка.Помещение = ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОстальныеЯчейки
	|		ПО ТаблицаТоваровСуммированная.Номенклатура = РазмещениеОстальныеЯчейки.Номенклатура
	|			И (РазмещениеОстальныеЯчейки.ОсновнаяЯчейка = ЛОЖЬ)
	|			И (РазмещениеОстальныеЯчейки.Склад = ТаблицаТоваровСуммированная.Ссылка.Склад)
	|			И (ВЫБОР
	|				КОГДА ТаблицаТоваровСуммированная.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|						И ТаблицаТоваровСуммированная.Ссылка.ДатаОтгрузки >= ТаблицаТоваровСуммированная.Ссылка.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|					ТОГДА РазмещениеОстальныеЯчейки.Помещение = ТаблицаТоваровСуммированная.Ссылка.Помещение
	|				ИНАЧЕ РазмещениеОстальныеЯчейки.Помещение = ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)
	|			КОНЕЦ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ТаблицаТоваровСуммированная.Склад,
	|	РабочийУчасток,
	|	НомерСтроки,
	|	Номенклатура,
	|	Характеристика,
	|	Серия
	|ИТОГИ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваровСуммированная.Ссылка КАК Ссылка,
	|	ТаблицаТоваровСуммированная.Склад КАК Склад,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ТаблицаТоваровСуммированная.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоличествоВУпаковке,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ЕдиницаИзмерения.Представление, ПРЕДСТАВЛЕНИЕ(ТаблицаТоваровСуммированная.Номенклатура.ЕдиницаИзмерения)) КАК ПредставлениеЕдининицыИзмеренияУпаковки
	|ИЗ
	|	ТаблицаТоваровСуммированная КАК ТаблицаТоваровСуммированная
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|		ПО (ТаблицаТоваровСуммированная.Номенклатура = УпаковкиНоменклатуры.Владелец
	|				ИЛИ ТаблицаТоваровСуммированная.НаборУпаковок = УпаковкиНоменклатуры.Владелец)
	|			И (НЕ УпаковкиНоменклатуры.ПометкаУдаления)
	|			И ТаблицаТоваровСуммированная.Количество >= &ТекстЗапросаКоэффициентУпаковки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТоваровСуммированная.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТоваровСуммированная.Ссылка.Склад)
	|			И (ВЫБОР
	|				КОГДА ТаблицаТоваровСуммированная.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|						И ТаблицаТоваровСуммированная.Ссылка.ДатаОтгрузки >= ТаблицаТоваровСуммированная.Ссылка.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|					ТОГДА РазмещениеОсновнаяЯчейка.Помещение = ТаблицаТоваровСуммированная.Ссылка.Помещение
	|				ИНАЧЕ РазмещениеОсновнаяЯчейка.Помещение = ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)
	|			КОНЕЦ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки,
	|	КоличествоВУпаковке УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия.Наименование КАК ПредставлениеСерии,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТовары.Ссылка.Склад)
	|			И (ВЫБОР
	|				КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|						И ТаблицаТовары.Ссылка.ДатаОтгрузки >= ТаблицаТовары.Ссылка.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|					ТОГДА РазмещениеОсновнаяЯчейка.Помещение = ТаблицаТовары.Ссылка.Помещение
	|				ИНАЧЕ РазмещениеОсновнаяЯчейка.Помещение = ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)
	|			КОНЕЦ)
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|	И НЕ ТаблицаТовары.Серия ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка КАК Ссылка,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Распоряжение.Ссылка КАК ОснованиеСсылка,
	|	МИНИМУМ(РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК РасходныйОрдерНаТоварыТоварыПоРаспоряжениям
	|ГДЕ
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Распоряжение.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"УпаковкиНоменклатуры",
			"ТаблицаТоваровСуммированная.Номенклатура"));
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивДокументов); 
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[0];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[3];
	РезультатПоУпаковкам		= МассивРезультатов[4];
	РезультатПоСериям			= МассивРезультатов[5];
	РезультатПоРаспоряжениям    = МассивРезультатов[6];
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти, РезультатПоУпаковкам, РезультатПоСериям, РезультатПоРаспоряжениям",
													РезультатПоШапке,
													РезультатПоТабличнойЧасти,
													РезультатПоУпаковкам,
													РезультатПоСериям,
													РезультатПоРаспоряжениям);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

Функция ПечатьРасходногоОрдераНаТовары(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасходныйОрдерНаТовары_РасходныйОрдерНаТовары";
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
	
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс,Представление");
	СинонимДокумента = НСтр("ru='Расходный ордер на товары';uk= 'Видатковий ордер на товари'", КодЯзыкаПечать);
	
	ИспользоватьУпаковкиНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	
	ЗапросПоШапке = Новый Запрос;
	ЗапросПоШапке.Текст = 
	"ВЫБРАТЬ
	|	РасходныйОрдерНаТовары.Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТовары.Склад) КАК ПредставлениеСклада,
	|	ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТовары.Помещение) КАК ПредставлениеПомещения,
	|	ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТовары.ЗонаОтгрузки) КАК ПредставлениеЗоныОтгрузки,
	|	ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТовары.Получатель) КАК ПредставлениеПолучателя,
	|	РасходныйОрдерНаТовары.Дата КАК Дата,
	|	РасходныйОрдерНаТовары.ДатаОтгрузки КАК ДатаОтгрузки,
	|	РасходныйОрдерНаТовары.Номер КАК Номер,
	|	РасходныйОрдерНаТовары.Ответственный.ФизическоеЛицо КАК Ответственный,
	|	РасходныйОрдерНаТовары.Склад КАК Склад,
	|	РасходныйОрдерНаТовары.Помещение КАК Помещение,
	|	РасходныйОрдерНаТовары.Склад.ИспользоватьСерииНоменклатуры КАК ИспользоватьСерииНоменклатуры,
	|	РасходныйОрдерНаТовары.ОтгрузкаПоЗаданиюНаПеревозку КАК ОтгрузкаПоЗаданиюНаПеревозку,
	|	РасходныйОрдерНаТовары.ПорядокДоставки КАК ПорядокДоставки,
	|	РасходныйОрдерНаТовары.ЗаданиеНаПеревозку КАК ЗаданиеНаПеревозку
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
	|ГДЕ
	|	РасходныйОрдерНаТовары.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РасходныйОрдерНаТовары.Ссылка
	|ИТОГИ ПО
	|	ИспользоватьСерииНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка КАК Ссылка,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Распоряжение КАК Распоряжение,
	|	ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Распоряжение.Организация) КАК ПредставлениеОрганизации,
	|	МИНИМУМ(РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК РасходныйОрдерНаТоварыТоварыПоРаспоряжениям
	|ГДЕ
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка В(&МассивОбъектов)
	|
	|СГРУППИРОВАТЬ ПО
 	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Ссылка,
	|	РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Распоряжение,
	|	ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТоварыТоварыПоРаспоряжениям.Распоряжение.Организация)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
		
	ЗапросПоШапке.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	УстановитьПривилегированныйРежим(Истина);
	МассивРезультатов     = ЗапросПоШапке.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	ДеревоОбъектов        = МассивРезультатов[0].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаРаспоряжений   = МассивРезультатов[1].Выбрать();
	
	Для Каждого ИспользованиеСерий Из ДеревоОбъектов.Строки Цикл
		
		ЗапросПоТоварам = Новый Запрос;
		МассивОбъектовИспользованиеСерий = ИспользованиеСерий.Строки.ВыгрузитьКолонку("Ссылка");
		ЗапросПоТоварам.УстановитьПараметр("МассивОбъектов", МассивОбъектовИспользованиеСерий);
		
		Если ИспользованиеСерий.ИспользоватьСерииНоменклатуры Тогда
			
			ТекстЗапросаПоТоварам = 
			"ВЫБРАТЬ
			|	РасходныйОрдерНаТоварыОтгружаемыеТовары.Ссылка КАК Ссылка,
			|	РасходныйОрдерНаТоварыОтгружаемыеТовары.НомерСтроки КАК НомерСтроки,
			|	РасходныйОрдерНаТоварыОтгружаемыеТовары.Номенклатура.Код КАК Код,
			|	РасходныйОрдерНаТоварыОтгружаемыеТовары.Номенклатура КАК Номенклатура,
			|	РасходныйОрдерНаТоварыОтгружаемыеТовары.Характеристика КАК Характеристика,
			|	РасходныйОрдерНаТоварыОтгружаемыеТовары.Серия КАК Серия,
			|	РасходныйОрдерНаТоварыОтгружаемыеТовары.УпаковочныйЛистРодитель,
			|	РасходныйОрдерНаТоварыОтгружаемыеТовары.УпаковочныйЛистРодитель.Код КАК УпаковочныйЛистРодительКод,
			|	РасходныйОрдерНаТоварыОтгружаемыеТовары.КоличествоУпаковок,
			|	РасходныйОрдерНаТоварыОтгружаемыеТовары.Количество,
			|	ВЫБОР
			|		КОГДА РасходныйОрдерНаТоварыОтгружаемыеТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.НеОтгружать)
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК НеОтгружать,
			|	РасходныйОрдерНаТоварыОтгружаемыеТовары.Упаковка
			|ПОМЕСТИТЬ ТаблицаТоваров
			|ИЗ
			|	Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК РасходныйОрдерНаТоварыОтгружаемыеТовары
			|ГДЕ
			|	РасходныйОрдерНаТоварыОтгружаемыеТовары.Ссылка В(&МассивОбъектов)
			|	И НЕ РасходныйОрдерНаТоварыОтгружаемыеТовары.ЭтоУпаковочныйЛист
			|
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТоваров.Ссылка,
			|	Максимум(ТаблицаТоваров.НомерСтроки) КАК НомерСтроки,
			|	ТаблицаТоваров.Номенклатура,
			|	ТаблицаТоваров.Характеристика,
			|	ВЫБОР
			|		КОГДА ТаблицаТоваров.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
			|			ТОГДА NULL
			|		ИНАЧЕ ТаблицаТоваров.Серия
			|	КОНЕЦ КАК Серия,
			|	ТаблицаТоваров.УпаковочныйЛистРодитель,
			|	ТаблицаТоваров.УпаковочныйЛистРодительКод,
			|	СУММА(ТаблицаТоваров.КоличествоУпаковок) КАК КоличествоУпаковок,
			|	СУММА(ТаблицаТоваров.Количество) КАК Количество,
			|	ТаблицаТоваров.НеОтгружать,
			|	ТаблицаТоваров.Упаковка
			|ПОМЕСТИТЬ СуммированнаяТаблицаТоваров
			|ИЗ
			|	ТаблицаТоваров КАК ТаблицаТоваров
			|
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаТоваров.Ссылка,
			|	ТаблицаТоваров.Номенклатура,
			|	ТаблицаТоваров.Характеристика,
			|	ТаблицаТоваров.НеОтгружать,
			|	ТаблицаТоваров.Упаковка,
			|	ВЫБОР
			|		КОГДА ТаблицаТоваров.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
			|			ТОГДА NULL
			|		ИНАЧЕ ТаблицаТоваров.Серия
			|	КОНЕЦ,
			|	ТаблицаТоваров.УпаковочныйЛистРодитель,
			|	ТаблицаТоваров.УпаковочныйЛистРодительКод
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТоваров.Ссылка КАК Ссылка,
			|	" + ?(ВыводитьКоды, "ТаблицаТоваров.Номенклатура." + КолонкаКодов +" КАК Артикул,", "") + "
			|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
			|	ТаблицаТоваров.Номенклатура.Код КАК Код,
			|	ТаблицаТоваров.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
			|	ТаблицаТоваров.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
			|	ТаблицаТоваров.Серия.Наименование КАК ПредставлениеСерии,
			|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
			|	ТаблицаТоваров.Характеристика КАК Характеристика,
			|	ТаблицаТоваров.УпаковочныйЛистРодитель,
			|	ТаблицаТоваров.УпаковочныйЛистРодительКод,
			|	ТаблицаТоваров.КоличествоУпаковок,
			|	ТаблицаТоваров.Количество,
			|	ТаблицаТоваров.НеОтгружать КАК НеОтгружать,
			|	ПРЕДСТАВЛЕНИЕ(ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
			|	ВЫБОР
			|		КОГДА ТаблицаТоваров.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
			|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаТоваров.Упаковка)
			|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения)
			|	КОНЕЦ КАК ПредставлениеЕдининицыИзмеренияУпаковки,
			|	ТаблицаТоваров.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий КАК НастройкаИспользованияСерий
			|ИЗ
			|	СуммированнаяТаблицаТоваров КАК ТаблицаТоваров
			|
			|УПОРЯДОЧИТЬ ПО
			|	Ссылка,
			|	НомерСтроки
			|ИТОГИ ПО
			|	Ссылка,
			|	НеОтгружать,
			|	УпаковочныйЛистРодитель,
			|	Номенклатура,
			|	Характеристика
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ТаблицаТоваров.Ссылка КАК Ссылка,
			|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
			|	ТаблицаТоваров.Характеристика КАК Характеристика,
			|	ТаблицаТоваров.Серия.Наименование КАК ПредставлениеСерии,
			|	ТаблицаТоваров.УпаковочныйЛистРодитель,
			|	ТаблицаТоваров.НеОтгружать КАК НеОтгружать
			|ИЗ
			|	ТаблицаТоваров КАК ТаблицаТоваров
			|ГДЕ
			|	ТаблицаТоваров.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
			|	И НЕ ТаблицаТоваров.Серия ЕСТЬ NULL 
			|
			|УПОРЯДОЧИТЬ ПО
			|	ТаблицаТоваров.Ссылка,
			|	ТаблицаТоваров.НеОтгружать,
			|	ТаблицаТоваров.УпаковочныйЛистРодитель,
			|	ТаблицаТоваров.Номенклатура,
			|	ТаблицаТоваров.Характеристика,
			|	ПредставлениеСерии";
			
			ЗапросПоТоварам.Текст = ТекстЗапросаПоТоварам;
			РезультатЗапроса   = ЗапросПоТоварам.ВыполнитьПакет();
			ВыборкаТЧПоСсылкам = РезультатЗапроса[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			ВыборкаПоСериям    = РезультатЗапроса[3].Выбрать();
			
		Иначе
			
			ТекстЗапросаПоТоварам = 
			"ВЫБРАТЬ
			|	РасходныйОрдерНаТоварыОтгружаемыеТовары.Ссылка КАК Ссылка,
			|	РасходныйОрдерНаТоварыОтгружаемыеТовары.Номенклатура.Код КАК Код,
			|	" + ?(ВыводитьКоды, "РасходныйОрдерНаТоварыОтгружаемыеТовары.Номенклатура." + КолонкаКодов +" КАК Артикул,", "") + "
			|	РасходныйОрдерНаТоварыОтгружаемыеТовары.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
			|	РасходныйОрдерНаТоварыОтгружаемыеТовары.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
			|	РасходныйОрдерНаТоварыОтгружаемыеТовары.Серия КАК ПредставлениеСерии,
			|	РасходныйОрдерНаТоварыОтгружаемыеТовары.КоличествоУпаковок,
			|	РасходныйОрдерНаТоварыОтгружаемыеТовары.Количество,
			|	ВЫБОР
			|		КОГДА РасходныйОрдерНаТоварыОтгружаемыеТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.НеОтгружать)
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК НеОтгружать,
			|	ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТоварыОтгружаемыеТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
			|	ВЫБОР
			|		КОГДА РасходныйОрдерНаТоварыОтгружаемыеТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
			|			ТОГДА ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТоварыОтгружаемыеТовары.Упаковка)
			|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(РасходныйОрдерНаТоварыОтгружаемыеТовары.Номенклатура.ЕдиницаИзмерения)
			|	КОНЕЦ КАК ПредставлениеЕдининицыИзмеренияУпаковки,
			|	РасходныйОрдерНаТоварыОтгружаемыеТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий КАК НастройкаИспользованияСерий,
			|	РасходныйОрдерНаТоварыОтгружаемыеТовары.УпаковочныйЛистРодитель КАК УпаковочныйЛистРодитель,
			|	РасходныйОрдерНаТоварыОтгружаемыеТовары.УпаковочныйЛистРодитель.Код КАК УпаковочныйЛистРодительКод
			|ИЗ
			|	Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК РасходныйОрдерНаТоварыОтгружаемыеТовары
			|
			|ГДЕ
			|	РасходныйОрдерНаТоварыОтгружаемыеТовары.Ссылка В(&МассивОбъектов)
			|	И НЕ РасходныйОрдерНаТоварыОтгружаемыеТовары.ЭтоУпаковочныйЛист
			|
			|УПОРЯДОЧИТЬ ПО
			|	Ссылка,
			|	РасходныйОрдерНаТоварыОтгружаемыеТовары.НомерСтроки
			|ИТОГИ ПО
			|	Ссылка,
			|	НеОтгружать,
			|	УпаковочныйЛистРодитель,
			|	Номенклатура,
			|	Характеристика";
			
			ЗапросПоТоварам.Текст = ТекстЗапросаПоТоварам;
			РезультатЗапроса   = ЗапросПоТоварам.ВыполнитьПакет();
			ВыборкаТЧПоСсылкам = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА РасходныйОрдерНаТоварыОтгружаемыеТовары.УпаковочныйЛистРодитель = ЗНАЧЕНИЕ(Документ.УпаковочныйЛист.ПустаяСсылка)
		|			ТОГДА РасходныйОрдерНаТоварыОтгружаемыеТовары.Ссылка
		|		ИНАЧЕ РасходныйОрдерНаТоварыОтгружаемыеТовары.УпаковочныйЛистРодитель
		|	КОНЕЦ КАК УпаковочныйЛистРодитель,
		|	РасходныйОрдерНаТоварыОтгружаемыеТовары.УпаковочныйЛист КАК УпаковочныйЛист,
		|	РасходныйОрдерНаТоварыОтгружаемыеТовары.Ссылка КАК Ссылка,
		|	РасходныйОрдерНаТоварыОтгружаемыеТовары.УпаковочныйЛист.Дата КАК Дата,
		|	РасходныйОрдерНаТоварыОтгружаемыеТовары.УпаковочныйЛист.Код КАК Код,
		|	ВЫБОР
		|		КОГДА РасходныйОрдерНаТоварыОтгружаемыеТовары.УпаковочныйЛистРодитель = ЗНАЧЕНИЕ(Документ.УпаковочныйЛист.ПустаяСсылка)
		|			ТОГДА Ложь
		|		ИНАЧЕ Истина
		|	КОНЕЦ КАК ЕстьВложенность
		|ИЗ
		|	Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК РасходныйОрдерНаТоварыОтгружаемыеТовары
		|ГДЕ
		|	РасходныйОрдерНаТоварыОтгружаемыеТовары.Ссылка В(&МассивОбъектов)
		|	И РасходныйОрдерНаТоварыОтгружаемыеТовары.ЭтоУпаковочныйЛист";
		
		Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектовИспользованиеСерий);
		УпаковочныеЛистыПоДокументам = Запрос.Выполнить().Выгрузить();
		
		ПервыйДокумент = Истина;
	
		Для Каждого ВыборкаПоДокументам Из ИспользованиеСерий.Строки Цикл
			
			Если НЕ ВыборкаТЧПоСсылкам.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
				Продолжить;
			КонецЕсли;
			
			УпаковочныеЛистыДокумента = УпаковочныеЛистыПоДокументам.Скопировать(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка));
		
			ИспользуетсяАдресноеХранение = СкладыСервер.ИспользоватьАдресноеХранение(ВыборкаПоДокументам.Склад, ВыборкаПоДокументам.Помещение, ВыборкаПоДокументам.ДатаОтгрузки);
			ВыводитьУпаковочныеЛисты = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковочныеЛисты")
				И УпаковочныеЛистыДокумента.Количество() > 0;
			
			ВыводитьУпаковки = ИспользоватьУпаковкиНоменклатуры Или ИспользуетсяАдресноеХранение;
			
			//Макет получаем в цикле,т.к. ширина колонок зависит от склада и помещения в документе
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РасходныйОрдерНаТовары.ПФ_MXL_РасходныйОрдерНаТовары", КодЯзыкаПечать);
			
			ОбластьЗаголовок 		  = Макет.ПолучитьОбласть("Заголовок");
			ОбластьЗаданиеНаПеревозку = Макет.ПолучитьОбласть("ЗаданиеНаПеревозку");
			ОбластьШапка 			  = Макет.ПолучитьОбласть("Шапка");
			ОбластьПокупатель	 	  = Макет.ПолучитьОбласть("Покупатель");
			
			ОбластьШапкаТаблицыУпаковочныеЛисты  = Макет.ПолучитьОбласть("ШапкаТаблицыУпаковочныеЛисты");  
			ОбластьСтрокаТаблицыУпаковочныеЛисты = Макет.ПолучитьОбласть("СтрокаТаблицыУпаковочныеЛисты");
			ОбластьПодвалТаблицыУпаковочныеЛисты = Макет.ПолучитьОбласть("ПодвалТаблицыУпаковочныеЛисты");
			
			ОбластьШапкаТаблицы   = Неопределено;
			ОбластьСтрокаТаблицы  = Неопределено;
			ОбластьПодвалТаблицы  = Неопределено;
			
			Если Не ВыводитьУпаковочныеЛисты И Не ВыводитьКоды И Не ВыводитьУпаковки Тогда
				ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицы");
				ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
				ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");
			ИначеЕсли ВыводитьУпаковочныеЛисты И Не ВыводитьКоды И Не ВыводитьУпаковки Тогда 
				ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицыУпаковочныйЛист");
				ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицыУпаковочныйЛист");
				ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицыУпаковочныйЛист");
			ИначеЕсли Не ВыводитьУпаковочныеЛисты И ВыводитьКоды И Не ВыводитьУпаковки Тогда
				ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицыКолонкаКодов");
				ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицыКолонкаКодов");
				ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицыКолонкаКодов");
			ИначеЕсли Не ВыводитьУпаковочныеЛисты И Не ВыводитьКоды И ВыводитьУпаковки Тогда
				ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицыУпаковки");
				ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицыУпаковки");
				ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицыУпаковки");
			ИначеЕсли ВыводитьУпаковочныеЛисты И ВыводитьКоды И Не ВыводитьУпаковки Тогда
				ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицыУпаковочныйЛистКолонкаКодов");
				ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицыУпаковочныйЛистКолонкаКодов");
				ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицыУпаковочныйЛистКолонкаКодов");
			ИначеЕсли Не ВыводитьУпаковочныеЛисты И ВыводитьКоды И ВыводитьУпаковки Тогда
				ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицыКолонкаКодовУпаковки");
				ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицыКолонкаКодовУпаковки");
				ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицыКолонкаКодовУпаковки");
			ИначеЕсли ВыводитьУпаковочныеЛисты И Не ВыводитьКоды И ВыводитьУпаковки Тогда
				ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицыУпаковочныйЛистУпаковки");
				ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицыУпаковочныйЛистУпаковки");
				ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицыУпаковочныйЛистУпаковки");
			ИначеЕсли ВыводитьУпаковочныеЛисты И ВыводитьКоды И ВыводитьУпаковки Тогда
				ОбластьШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицыВсе");
				ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицыВсе");
				ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицыВсе");
			КонецЕсли;
						
			Если ВыводитьКоды Тогда 
				ОбластьШапкаТаблицы.Параметры.ИмяКолонкиКодов = КолонкаКодов;
			КонецЕсли;
			
			ОбластьПодписей = Макет.ПолучитьОбласть("Подписи");
			
			ОбластьЗаголовокНеОтгружать = Макет.ПолучитьОбласть("ЗаголовокНеОтгружать");
														
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			// Выведем шапку табличного документа
			ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьЗаголовок, ВыборкаПоДокументам.Ссылка);
			
			ПервыйДокумент = Ложь;
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
					
			Если ИспользуетсяАдресноеХранение Тогда
				
				ТекстЗоны = НСтр("ru='Зона отгрузки:';uk= 'Зона відвантаження:'", КодЯзыкаПечать);
				ЗонаПредставление = ВыборкаПоДокументам.ПредставлениеЗоныОтгрузки;
				
			Иначе
				
				ТекстЗоны = "";
				ЗонаПредставление = "";
				
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаПоДокументам);
			
			ОбластьЗаголовок.Параметры.ТекстЗаголовка = 
				ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента, КодЯзыкаПечать);
			
			ТабличныйДокумент.Вывести(ОбластьЗаголовок);
						
			Если ЗначениеЗаполнено(ВыборкаПоДокументам.ПредставлениеПолучателя) Тогда //если не перемещение или оприходование
				ОбластьПокупатель.Параметры.Заполнить(ВыборкаПоДокументам);
				ТабличныйДокумент.Вывести(ОбластьПокупатель);		
			КонецЕсли;
									
			ОбластьШапка.Параметры.ПредставлениеСклада			=
				СкладыСервер.ПолучитьПредставлениеСклада(ВыборкаПоДокументам.ПредставлениеСклада,ВыборкаПоДокументам.ПредставлениеПомещения);
			ОбластьШапка.Параметры.ТекстЗоны 					= ТекстЗоны;
			ОбластьШапка.Параметры.ПредставлениеЗоныОтгрузки	= ЗонаПредставление;
				
			Счетчик = 0;
			ПредставлениеРаспоряжений = "";
			ПервоеРаспоряжение = Истина;
			Пока ВыборкаРаспоряжений.НайтиСледующий(Новый Структура("Ссылка", ВыборкаПоДокументам.Ссылка)) Цикл
				
				ПредставлениеРаспоряжения =	Локализация.ПолучитьЛокализованноеПредставление(ВыборкаРаспоряжений.Распоряжение, КодЯзыкаПечать);
				
				Если Не ПервоеРаспоряжение Тогда
					ПредставлениеРаспоряжений = ПредставлениеРаспоряжений + ", ";		
				КонецЕсли;
				
				ПервоеРаспоряжение = Ложь;
				
				ПредставлениеРаспоряжений = ПредставлениеРаспоряжений + ПредставлениеРаспоряжения;
				
				Счетчик = Счетчик + 1;
				
			КонецЦикла;
			
			ЗаголовокРаспоряжения = "";
			Если Счетчик > 1 Тогда 
				ЗаголовокРаспоряжения = НСтр("ru='Распоряжения:';uk= 'Розпорядження:'", КодЯзыкаПечать);
			Иначе
				ЗаголовокРаспоряжения = НСтр("ru='Распоряжение:';uk= 'Розпорядження:'", КодЯзыкаПечать);
			КонецЕсли;
			
			ОбластьШапка.Параметры.ПредставлениеРаспоряжений = ПредставлениеРаспоряжений;
			ОбластьШапка.Параметры.ЗаголовокРаспоряжения     = ЗаголовокРаспоряжения;
						
			ОбластьШапка.Параметры.ДатаОтгрузки	= ВыборкаПоДокументам.ДатаОтгрузки;
					
			ТабличныйДокумент.Вывести(ОбластьШапка);
			
			Если ВыборкаПоДокументам.ОтгрузкаПоЗаданиюНаПеревозку Тогда
				
					
				ОбластьЗаданиеНаПеревозку.Параметры.ПредставлениеЗаданияНаПеревозку	 =					
					Локализация.ПолучитьЛокализованноеПредставление(ВыборкаПоДокументам.ЗаданиеНаПеревозку, КодЯзыкаПечать);
				ОбластьЗаданиеНаПеревозку.Параметры.ПорядокДоставки = ВыборкаПоДокументам.ПорядокДоставки;
			
				ТабличныйДокумент.Вывести(ОбластьЗаданиеНаПеревозку);
				
			КонецЕсли;
			
			// Выведем шапку таблицы номенклатуры
			ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
			
			ВсегоНаименований = 0;
			
			// Создадим табличный документ для неотгружаемой номенклатуры
			ТабличныйДокументНеОтгружать = Новый ТабличныйДокумент;
			ВсегоНаименованийНеОтгружать = 0;
			
			ВыборкаПоПараметруНеОтгружать = ВыборкаТЧПоСсылкам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаПоПараметруНеОтгружать.Следующий() Цикл
				
				ВыборкаТЧПоУпаковочнымЛистам = ВыборкаПоПараметруНеОтгружать.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаТЧПоУпаковочнымЛистам.Следующий() Цикл
					
					ВыборкаПоНоменклатуреТЧ = ВыборкаТЧПоУпаковочнымЛистам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Пока ВыборкаПоНоменклатуреТЧ.Следующий() Цикл
						
						ВыборкаПоХарактеристикамТЧ = ВыборкаПоНоменклатуреТЧ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока ВыборкаПоХарактеристикамТЧ.Следующий() Цикл
							ВыборкаПоСтрокамТЧ = ВыборкаПоХарактеристикамТЧ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							
							ПерваяСтрока = Истина;
							СтрокаУпаковок = "";
							СтрокаКоличесткаУпаковок = "";
							СтрокаЕдиницИзмерений = "";
							СтрокаКоличества = "";
							
							Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
								
								Если ВыборкаПоНоменклатуреТЧ.НастройкаИспользованияСерий = Перечисления.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара Тогда
									
									Если ПерваяСтрока Тогда
										
										// Определим, в какой табличный документ выводим номенклатуру
										Если ВыборкаПоСтрокамТЧ.НеОтгружать = 0 Тогда
											ТабличныйДокументДляВыводаСтроки = ТабличныйДокумент;
											ВсегоНаименований 				 = ВсегоНаименований + 1;
											НомерСтроки 					 = ВсегоНаименований;
										Иначе
											ТабличныйДокументДляВыводаСтроки = ТабличныйДокументНеОтгружать;
											ВсегоНаименованийНеОтгружать 	 = ВсегоНаименованийНеОтгружать + 1;
											НомерСтроки 					 = ВсегоНаименованийНеОтгружать;
										КонецЕсли;
										
										ОбластьСтрокаТаблицы.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
										ОбластьСтрокаТаблицы.Параметры.НомерСтроки = НомерСтроки;
										
										Если ВыводитьУпаковочныеЛисты Тогда
											ОбластьСтрокаТаблицы.Параметры.УпаковочныйЛистРодитель = ВыборкаПоСтрокамТЧ.УпаковочныйЛистРодительКод; 
										КонецЕсли;
										
										Если ВыводитьКоды Тогда
											ОбластьСтрокаТаблицы.Параметры.Артикул = ВыборкаПоСтрокамТЧ[КолонкаКодов];
										КонецЕсли;
										
										СтруктураПоиска = Новый Структура;
										СтруктураПоиска.Вставить("Ссылка", ВыборкаПоСтрокамТЧ.Ссылка);
										СтруктураПоиска.Вставить("Номенклатура", ВыборкаПоСтрокамТЧ.Номенклатура);
										СтруктураПоиска.Вставить("Характеристика", ВыборкаПоСтрокамТЧ.Характеристика);
										СтруктураПоиска.Вставить("НеОтгружать", ВыборкаПоСтрокамТЧ.НеОтгружать);
										СтруктураПоиска.Вставить("УпаковочныйЛистРодитель", ВыборкаПоСтрокамТЧ.УпаковочныйЛистРодитель);
										
										СтрокаСерий = "";
										Пока ВыборкаПоСериям.НайтиСледующий(СтруктураПоиска) Цикл
											СтрокаСерий = СтрокаСерий + ВыборкаПоСериям.ПредставлениеСерии + ", ";
										КонецЦикла;
										
										Если СтрДлина(СтрокаСерий) <> 0 Тогда
											СтрокаСерий = Лев(СтрокаСерий, СтрДлина(СтрокаСерий) - 2);
										КонецЕсли;
										
										ОбластьСтрокаТаблицы.Параметры.Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
											ВыборкаПоСтрокамТЧ.ПредставлениеНоменклатуры,
											ВыборкаПоСтрокамТЧ.ПредставлениеХарактеристики,
											, // Упаковка
											СтрокаСерий);
										
										ПерваяСтрока = Ложь;
										
										ТоварССериямиЭкземплярами = Истина;
										
									КонецЕсли;
									
									Если ВыводитьУпаковки Тогда
										СтрокаУпаковок = СтрокаУпаковок + ВыборкаПоСтрокамТЧ.ПредставлениеЕдининицыИзмеренияУпаковки + Символы.ПС;
										СтрокаКоличесткаУпаковок = СтрокаКоличесткаУпаковок + ВыборкаПоСтрокамТЧ.КоличествоУпаковок + Символы.ПС;
									КонецЕсли;
									
									СтрокаЕдиницИзмерений = СтрокаЕдиницИзмерений + ВыборкаПоСтрокамТЧ.ПредставлениеБазовойЕдиницыИзмерения + Символы.ПС;
									СтрокаКоличества = СтрокаКоличества + ВыборкаПоСтрокамТЧ.Количество + Символы.ПС;
									
								Иначе
									// Определим, в какой табличный документ выводим номенклатуру
									Если ВыборкаПоСтрокамТЧ.НеОтгружать = 0 Тогда
										ТабличныйДокументДляВыводаСтроки = ТабличныйДокумент;
										ВсегоНаименований 				 = ВсегоНаименований + 1;
										НомерСтроки 					 = ВсегоНаименований;
									Иначе
										ТабличныйДокументДляВыводаСтроки = ТабличныйДокументНеОтгружать;
										ВсегоНаименованийНеОтгружать 	 = ВсегоНаименованийНеОтгружать + 1;
										НомерСтроки 					 = ВсегоНаименованийНеОтгружать;
									КонецЕсли;
									
									ОбластьСтрокаТаблицы.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
									ОбластьСтрокаТаблицы.Параметры.НомерСтроки = НомерСтроки;
									
									Если ВыводитьУпаковочныеЛисты Тогда
										ОбластьСтрокаТаблицы.Параметры.УпаковочныйЛистРодитель = ВыборкаПоСтрокамТЧ.УпаковочныйЛистРодительКод; 
									КонецЕсли;
									
									Если ВыводитьКоды Тогда
										ОбластьСтрокаТаблицы.Параметры.Артикул = ВыборкаПоСтрокамТЧ[КолонкаКодов];
									КонецЕсли;
									
									ОбластьСтрокаТаблицы.Параметры.Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
										ВыборкаПоСтрокамТЧ.ПредставлениеНоменклатуры,
										ВыборкаПоСтрокамТЧ.ПредставлениеХарактеристики,
										, // Упаковка
										ВыборкаПоСтрокамТЧ.ПредставлениеСерии);
									
									ТабличныйДокументДляВыводаСтроки.Вывести(ОбластьСтрокаТаблицы);
									
									ТоварССериямиЭкземплярами = Ложь;
									
								КонецЕсли;
								
							КонецЦикла;
							
							Если ТоварССериямиЭкземплярами Тогда
								
								Если ВыводитьУпаковки Тогда
									ОбластьСтрокаТаблицы.Параметры.КоличествоУпаковок = СтрокаКоличесткаУпаковок;
									ОбластьСтрокаТаблицы.Параметры.ПредставлениеЕдининицыИзмеренияУпаковки = СтрокаУпаковок;
								КонецЕсли;
								
								ОбластьСтрокаТаблицы.Параметры.Количество = СтрокаКоличества;
								ОбластьСтрокаТаблицы.Параметры.ПредставлениеБазовойЕдиницыИзмерения = СтрокаЕдиницИзмерений;
								
								ТабличныйДокументДляВыводаСтроки.Вывести(ОбластьСтрокаТаблицы);
								
							КонецЕсли;
							
						КонецЦикла;
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЦикла;
			
			// Выведем подвал таблицы и подписи
			ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы);
			
			ТекстИтоговойСтроки = НСтр("ru='Всего наименований %ВсегоНаименований%';uk= 'Всього найменувань %ВсегоНаименований%'", КодЯзыкаПечать);
			ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки, "%ВсегоНаименований%", ВсегоНаименований);
			ОбластьПодписей.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;
			
			ОбластьПодписей.Параметры.ПредставлениеОтветсвенного = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Ответственный, ВыборкаПоДокументам.Дата);
			
			ТабличныйДокумент.Вывести(ОбластьПодписей);
			
			// Дополним основной табличный документ таблицей неотгружаемой номенклатуры
			Если ВсегоНаименованийНеОтгружать > 0 Тогда
				
				// Выведем заголовок и шапку таблицы неотгружаемой номенклатуры
				ТекстЗаголовка = НСтр("ru='В зоне отгрузки необходимо оставить следующие позиции товаров';uk='В зоні відвантаження необхідно залишити наступні позиції товарів'");
				ОбластьЗаголовокНеОтгружать.Параметры.ТекстЗаголовка = ТекстЗаголовка;
				ТабличныйДокумент.Вывести(ОбластьЗаголовокНеОтгружать);
				
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
								
				// Присоединим таблицу неотгружаемой номенклатуры к основному табличному документу
				ТабличныйДокумент.Вывести(ТабличныйДокументНеОтгружать);
				
				// Выведем подвал таблицы неотгружаемой номенклатуры
				ТабличныйДокумент.Вывести(ОбластьПодвалТаблицы);
				
			КонецЕсли;
					
			#Область ПечатьИерархииУпаковочныхЛистов
						
			Если ВыводитьУпаковочныеЛисты
				И УпаковочныеЛистыДокумента.НайтиСтроки(Новый Структура("ЕстьВложенность", Истина)).Количество() > 0 Тогда
				
				ТабличныйДокумент.Вывести(ОбластьШапкаТаблицыУпаковочныеЛисты);
				
				Документы.УпаковочныйЛист.РекурсивноВывестиИерархиюУпаковочныхЛистов(ТабличныйДокумент, ОбластьСтрокаТаблицыУпаковочныеЛисты, УпаковочныеЛистыДокумента, ВыборкаПоДокументам.Ссылка,, КодЯзыкаПечать);
				
				ТабличныйДокумент.Вывести(ОбластьПодвалТаблицыУпаковочныеЛисты);
				
			КонецЕсли;
			
			#КонецОбласти
		
			ТабличныйДокумент.ЗакончитьАвтогруппировкуСтрок();
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ВывестиСтрокуДереваУпаковочныхЛистов(ТабДокумент, Макет, СтрокаДерева, Уровень)
	
	ОбластьМакета = Макет.ПолучитьОбласть("СтрокаДереваУпаковочныйЛист");
	ОбластьМакета.Параметры.УпаковочныйЛист = СтрокаДерева.Ссылка;
	
	ОбластьСтрока = ТабДокумент.Вывести(ОбластьМакета, Уровень);
	ТабДокумент.Область(ОбластьСтрока.Верх, 1+1).Отступ = Уровень - 1;
	
	Если СтрокаДерева.Строки.Количество() > 0 Тогда
		
		Уровень = Уровень + 1;
		
		Для Каждого Строка Из СтрокаДерева.Строки Цикл
			
			ВывестиСтрокуДереваУпаковочныхЛистов(ТабДокумент, Макет, Строка, Уровень);
			
		КонецЦикла;
		
		Уровень = Уровень - 1;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Функция ОрдерныеСкладыПриОтгрузке(Знач Распоряжение, Знач Склад) Экспорт
	Запрос = Новый Запрос;
	МассивСкладов = Новый Массив;
	ТипДокумента = Распоряжение.Метаданные().Имя;
	Запрос.УстановитьПараметр("Ссылка", Распоряжение);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Товары.Склад КАК Склад
	|ИЗ
	|	Документ." + ТипДокумента + ".Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И Товары.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке
	|	И Товары.Ссылка.Склад.ЭтоГруппа
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Распоряжение.Склад
	|ИЗ
	|	Документ." + ТипДокумента + " КАК Распоряжение
	|ГДЕ
	|	Распоряжение.Ссылка = &Ссылка
	|	И (НЕ Распоряжение.Склад.ЭтоГруппа)
	|	И Распоряжение.Склад.ИспользоватьОрдернуюСхемуПриОтгрузке";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивСкладов.Добавить(Выборка.Склад);
	КонецЦикла;
	Если ЗначениеЗаполнено(Склад) 
		И МассивСкладов.Найти(Склад) = Неопределено Тогда
		МассивСкладов.Добавить(Склад);
	КонецЕсли;
	Возврат МассивСкладов
КонецФункции

Процедура РазбитьПоУпаковкамСправочно(Объект) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Номенклатура КАК Номенклатура,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.Назначение КАК Назначение,
	|	Таблица.НомерСтроки КАК НомерСтроки,
	|	Таблица.Количество КАК Количество,
	|	Таблица.Серия КАК Серия
	|ПОМЕСТИТЬ ТаблицаНоменклатурыДляЗапроса
	|ИЗ
	|	&Таблица КАК Таблица
	|ГДЕ
	|	Таблица.УпаковочныйЛистРодитель = ЗНАЧЕНИЕ(Документ.УпаковочныйЛист.ПустаяСсылка)
	|	И Таблица.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отобрать)
	|	И НЕ Таблица.ЭтоУпаковочныйЛист
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Номенклатура КАК Номенклатура,
	|	МИНИМУМ(Таблица.НомерСтроки) КАК НомерСтроки,
	|	ВЫРАЗИТЬ(Таблица.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок КАК НаборУпаковок,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.Назначение КАК Назначение,
	|	Таблица.Серия КАК Серия,
	|	СУММА(Таблица.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	ТаблицаНоменклатурыДляЗапроса КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Серия,
	|	Таблица.Номенклатура,
	|	ВЫРАЗИТЬ(Таблица.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок,
	|	Таблица.Характеристика,
	|	Таблица.Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТаблицаНоменклатуры.Количество,
	|	ТаблицаНоменклатуры.НомерСтроки КАК НомерСтроки,
	|	ТаблицаНоменклатуры.Характеристика КАК Характеристика,
	|	ТаблицаНоменклатуры.Серия КАК Серия,
	|	ТаблицаНоменклатуры.Назначение КАК Назначение,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоличествоВУпаковке,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка,
	|	ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отобрать) КАК Действие
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|		ПО (ТаблицаНоменклатуры.Номенклатура = УпаковкиНоменклатуры.Владелец
	|				ИЛИ ТаблицаНоменклатуры.НаборУпаковок = УпаковкиНоменклатуры.Владелец)
	|			И (НЕ УпаковкиНоменклатуры.ПометкаУдаления)
	|			И ТаблицаНоменклатуры.Количество >= &ТекстЗапросаКоэффициентУпаковки
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	КоличествоВУпаковке УБЫВ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"УпаковкиНоменклатуры",
			"ТаблицаНоменклатуры.Номенклатура"));
	
	ТаблицаНоменклатуры = Объект.ОтгружаемыеТовары.Выгрузить();
	Запрос.УстановитьПараметр("Таблица",ТаблицаНоменклатуры);
	
	УдаляемыеСтроки = Новый Массив;
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для Каждого СтрТабл из Объект.ОтгружаемыеТовары Цикл
		Если СтрТабл.Действие = Перечисления.ДействияСоСтрокамиОрдеровНаОтгрузку.Отобрать
			И Не ЗначениеЗаполнено(СтрТабл.УпаковочныйЛистРодитель) Тогда
			УдаляемыеСтроки.Добавить(СтрТабл);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрМас из УдаляемыеСтроки Цикл
		Объект.ОтгружаемыеТовары.Удалить(СтрМас);
	КонецЦикла;
	
	ТекущиеЗначения = Новый Структура;
	ТекущиеЗначения.Вставить("НомерСтроки", Неопределено);
	ТекущиеЗначения.Вставить("Номенклатура", Неопределено);
	ТекущиеЗначения.Вставить("Характеристика", Неопределено);
	ТекущиеЗначения.Вставить("Назначение", Неопределено);
	ТекущиеЗначения.Вставить("Серия", Неопределено);
	
	Количество = 0;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.НомерСтроки <> ТекущиеЗначения.НомерСтроки Тогда
			
			Если Количество <> 0 Тогда
				НоваяСтрока = Объект.ОтгружаемыеТовары.Добавить();
				НоваяСтрока.Количество = Количество;
				НоваяСтрока.КоличествоУпаковок = Количество;
				
				НоваяСтрока.Номенклатура = ТекущиеЗначения.Номенклатура;
				НоваяСтрока.Характеристика = ТекущиеЗначения.Характеристика;
				НоваяСтрока.Назначение = ТекущиеЗначения.Назначение;
				НоваяСтрока.Серия = ТекущиеЗначения.Серия;
				НоваяСтрока.Действие = Перечисления.ДействияСоСтрокамиОрдеровНаОтгрузку.Отобрать;
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(ТекущиеЗначения, Выборка);
			
			Количество = Выборка.Количество;
			
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Выборка.Упаковка) Тогда
			Продолжить;
		КонецЕсли;
		
		КоличествоВДокумент = Цел(Количество / Выборка.КоличествоВУпаковке);
		
		Если КоличествоВДокумент > 0 Тогда
		
			НоваяСтрока = Объект.ОтгружаемыеТовары.Добавить();
			НоваяСтрока.Количество = КоличествоВДокумент * Выборка.КоличествоВУпаковке;
			НоваяСтрока.КоличествоУпаковок = КоличествоВДокумент;
			НоваяСтрока.Упаковка = Выборка.Упаковка;
			
			НоваяСтрока.Номенклатура = ТекущиеЗначения.Номенклатура;
			НоваяСтрока.Характеристика = ТекущиеЗначения.Характеристика;
			НоваяСтрока.Назначение = ТекущиеЗначения.Назначение;
			НоваяСтрока.Серия = ТекущиеЗначения.Серия;
			НоваяСтрока.Действие = Перечисления.ДействияСоСтрокамиОрдеровНаОтгрузку.Отобрать;

			Количество = Количество - КоличествоВДокумент * Выборка.КоличествоВУпаковке;
		КонецЕсли;
	КонецЦикла;
	
	Если Количество <> 0 Тогда
		НоваяСтрока = Объект.ОтгружаемыеТовары.Добавить();
		НоваяСтрока.Количество = Количество;
		НоваяСтрока.КоличествоУпаковок = Количество;
		
		НоваяСтрока.Номенклатура = ТекущиеЗначения.Номенклатура;
		НоваяСтрока.Характеристика = ТекущиеЗначения.Характеристика;
		НоваяСтрока.Назначение = ТекущиеЗначения.Назначение;	
		НоваяСтрока.Серия = ТекущиеЗначения.Серия;
		НоваяСтрока.Действие = Перечисления.ДействияСоСтрокамиОрдеровНаОтгрузку.Отобрать;
	КонецЕсли;
	
	Объект.ВсегоМест = УпаковочныеЛистыСервер.КоличествоМестВТЧ(Объект.ОтгружаемыеТовары);

КонецПроцедуры

Процедура ЗаполнитьОтгружаемыеТоварыПоТоварамПоРаспоряжениям(Объект) Экспорт
	
	Объект.ОтгружаемыеТовары.Очистить();
	
	Для Каждого СтрТабл из Объект.ТоварыПоРаспоряжениям Цикл
		
		НоваяСтрока = Объект.ОтгружаемыеТовары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрТабл);
		НоваяСтрока.КоличествоУпаковок = СтрТабл.Количество;
		
		Если ПолучитьФункциональнуюОпцию("ИспользоватьСтатусыРасходныхОрдеров", Новый Структура("Склад", Объект.Склад)) Тогда
			НоваяСтрока.Действие = Перечисления.ДействияСоСтрокамиОрдеровНаОтгрузку.Отобрать;
		Иначе
			НоваяСтрока.Действие = Перечисления.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить;
		КонецЕсли;
		
	КонецЦикла;
	
	ОтгружаемыеТовары = Объект.ОтгружаемыеТовары.Выгрузить();
	ОтгружаемыеТовары.Свернуть(
		"Номенклатура, Характеристика, Назначение, Серия, СтатусУказанияСерий, ЭтоУпаковочныйЛист, УпаковочныйЛистРодитель, УпаковочныйЛист, Упаковка, Действие", 
		"Количество, КоличествоУпаковок");
	Объект.ОтгружаемыеТовары.Загрузить(ОтгружаемыеТовары);
	
	Объект.ВсегоМест = УпаковочныеЛистыСервер.КоличествоМестВТЧ(Объект.ОтгружаемыеТовары);

КонецПроцедуры

Процедура ИзменитьТоварыПоРаспоряжениямПоОтгружаемымТоварам(Объект, ВыводитьСообщения = Ложь) Экспорт
	
	Выборка = ВыборкаИзЗапросаПоПревышениюРаспоряжений(Объект);
	
	Если Выборка.Количество() > 0 Тогда
		
		Пока Выборка.Следующий() Цикл
			
			КоличествоКРаспределению = Выборка.РасхождениеСРаспоряжением;
			
			Если Выборка.ЕстьСтрокаРаспоряжений Тогда
				
				УсловияОтбора = Новый Структура("Номенклатура,Характеристика,Серия,Назначение");
				ЗаполнитьЗначенияСвойств(УсловияОтбора,Выборка);
				
				НайденныеРаспоряжения = Объект.ТоварыПоРаспоряжениям.НайтиСтроки(УсловияОтбора);
				
				
				Для Каждого СтрМас из НайденныеРаспоряжения Цикл
					
					Если КоличествоКРаспределению > 0 Тогда
						Если КоличествоКРаспределению >= СтрМас.Количество Тогда
							КоличествоКРаспределению = КоличествоКРаспределению - СтрМас.Количество;
							Объект.ТоварыПоРаспоряжениям.Удалить(СтрМас);
						Иначе
							СтрМас.Количество = СтрМас.Количество - КоличествоКРаспределению;
							КоличествоКРаспределению = 0;
						КонецЕсли;
					Иначе
						СтрМас.Количество = СтрМас.Количество - КоличествоКРаспределению; 
						КоличествоКРаспределению = 0;
					КонецЕсли;
					
					Если КоличествоКРаспределению = 0 Тогда
						Прервать;
					КонецЕсли;
					
				КонецЦикла;
			Иначе
				НоваяСтрока = Объект.ТоварыПоРаспоряжениям.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				НоваяСтрока.Количество = - КоличествоКРаспределению;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ВыводитьСообщения Тогда
		ТекстСообщения = НСтр("ru='Заполнение табличной части ""Товары по распоряжениям"" соотвествует заполнению табличной части ""Отгружаемые товары"". Перезаполнение не требуется.';uk='Заповнення табличної частини ""Товари за розпорядженням"" відповідає заповненню табличної частини ""Товари, що відвантажуються"". Перезаповнення не потрібно.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);  	
	КонецЕсли;
	
КонецПроцедуры

Функция ВыборкаИзЗапросаПоПревышениюРаспоряжений(Объект) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварыПоРаспоряжениям.Номенклатура,
	|	ТоварыПоРаспоряжениям.Характеристика,
	|	ТоварыПоРаспоряжениям.Назначение,
	|	ТоварыПоРаспоряжениям.Серия,
	|	ТоварыПоРаспоряжениям.Количество
	|ПОМЕСТИТЬ ТоварыПоРаспоряжениям
	|ИЗ
	|	&ТоварыПоРаспоряжениям КАК ТоварыПоРаспоряжениям
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтгружаемыеТовары.Номенклатура,
	|	ОтгружаемыеТовары.Характеристика,
	|	ОтгружаемыеТовары.Назначение,
	|	ВЫБОР
	|		КОГДА ОтгружаемыеТовары.СтатусУказанияСерий В (10, 14)
	|			ТОГДА ОтгружаемыеТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Серия,
	|	ОтгружаемыеТовары.Количество
	|ПОМЕСТИТЬ ОтгружаемыеТовары
	|ИЗ
	|	&ОтгружаемыеТовары КАК ОтгружаемыеТовары
	|ГДЕ
	|	НЕ ОтгружаемыеТовары.ЭтоУпаковочныйЛист
	|	И ОтгружаемыеТовары.Действие <> ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.НеОтгружать)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеТовары.Номенклатура,
	|	ВсеТовары.Характеристика,
	|	ВсеТовары.Назначение,
	|	ВсеТовары.Серия,
	|	МАКСИМУМ(ВсеТовары.СтрокаИзРаспоряжений) КАК ЕстьСтрокаРаспоряжений,
	|	СУММА(ВсеТовары.КоличествоПоРаспоряжениям) - СУММА(ВсеТовары.КоличествоОтгружается) КАК РасхождениеСРаспоряжением
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыПоРаспоряжениям.Номенклатура КАК Номенклатура,
	|		ТоварыПоРаспоряжениям.Характеристика КАК Характеристика,
	|		ТоварыПоРаспоряжениям.Назначение КАК Назначение,
	|		ТоварыПоРаспоряжениям.Серия КАК Серия,
	|		ИСТИНА КАК СтрокаИзРаспоряжений,
	|		0 КАК КоличествоОтгружается,
	|		ТоварыПоРаспоряжениям.Количество КАК КоличествоПоРаспоряжениям
	|	ИЗ
	|		ТоварыПоРаспоряжениям КАК ТоварыПоРаспоряжениям
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОтгружаемыеТовары.Номенклатура,
	|		ОтгружаемыеТовары.Характеристика,
	|		ОтгружаемыеТовары.Назначение,
	|		ОтгружаемыеТовары.Серия,
	|		ЛОЖЬ,
	|		ОтгружаемыеТовары.Количество,
	|		0
	|	ИЗ
	|		ОтгружаемыеТовары КАК ОтгружаемыеТовары) КАК ВсеТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ВсеТовары.Номенклатура,
	|	ВсеТовары.Назначение,
	|	ВсеТовары.Характеристика,
	|	ВсеТовары.Серия
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВсеТовары.КоличествоОтгружается) <> СУММА(ВсеТовары.КоличествоПоРаспоряжениям)";
	
	Запрос.УстановитьПараметр("ТоварыПоРаспоряжениям",Объект.ТоварыПоРаспоряжениям.Выгрузить());
	Запрос.УстановитьПараметр("ОтгружаемыеТовары",Объект.ОтгружаемыеТовары.Выгрузить());
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Процедура ЗаполнитьДействиеВСтроках(Объект) Экспорт
	
	Если Объект.Статус = Перечисления.СтатусыРасходныхОрдеров.КОтгрузке
		Или Объект.Статус = Перечисления.СтатусыРасходныхОрдеров.Отгружен Тогда
		НайденныеСтроки = Объект.ОтгружаемыеТовары.НайтиСтроки(Новый Структура("Действие",
		 														Перечисления.ДействияСоСтрокамиОрдеровНаОтгрузку.Отобрать));
		
		Для Каждого СтрМас из НайденныеСтроки Цикл
			СтрМас.Действие = Перечисления.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить;
		КонецЦикла;
		
	КонецЕсли;
		
КонецПроцедуры

Функция ПереносимыеСтроки(ИсточникОбъект, СтрокиДляПриемника)
	
	Результат = Новый Структура("СтрокиДляПереноса,ЕстьОшибка", Новый Массив, Ложь);
	
	Для Каждого СтрМас из СтрокиДляПриемника Цикл
		
		ТекущаяСтрока = ИсточникОбъект.ОтгружаемыеТовары[СтрМас - 1];
		
		Если Не СкладыКлиентСервер.СтрокуРасходногоОрдераМожноПереноситьВДругойОрдер(ТекущаяСтрока) Тогда
			Результат.ЕстьОшибка = Истина;
			Возврат Результат;
		КонецЕсли;
				
		Результат.СтрокиДляПереноса.Добавить(ТекущаяСтрока);
		
		Если ТекущаяСтрока.ЭтоУпаковочныйЛист Тогда
			
			ПодчиненныеСтроки = Новый Массив;
			УпаковочныеЛистыСервер.РекурсивноОбойтиПодчиненныеСтроки(ИсточникОбъект.ОтгружаемыеТовары, ТекущаяСтрока.УпаковочныйЛист, ,ПодчиненныеСтроки);
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Результат.СтрокиДляПереноса, ПодчиненныеСтроки);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы


Процедура ЗаполнитьРаспоряжениеВРасходномОрдереОтложенноДанныеДляОбновления(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасходныйОрдерНаТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
	|ГДЕ
	|	РасходныйОрдерНаТовары.Получатель В(&ПустоеЗначениеПолучателя)
	|	И РасходныйОрдерНаТовары.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	РасходныйОрдерНаТовары.Дата УБЫВ";
	Запрос.УстановитьПараметр("ПустоеЗначениеПолучателя", СкладыСервер.ПустойПолучательОтправитель());
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));	
	
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.2
// Заполняет реквизит "Задание на перевозку" и реквизит "Распоряжение" в табличных частях расходных ордеров отложенно.
&НаСервере
Процедура ЗаполнитьРаспоряжениеВРасходномОрдереОтложенно(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь,
		"Документ.РасходныйОрдерНаТовары", МенеджерВТ);
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыВыборкиДанныхДляОбработки();
	ДополнительныеПараметры.ВыбиратьПорциями = Ложь;
	
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(Параметры.Очередь,
		"Документ.РеализацияТоваровУслуг", МенеджерВТ, ДополнительныеПараметры);
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(Параметры.Очередь,
		"Документ.ВнутреннееПотреблениеТоваров", МенеджерВТ, ДополнительныеПараметры);
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(Параметры.Очередь,
		"Документ.ПеремещениеТоваров", МенеджерВТ, ДополнительныеПараметры);
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(Параметры.Очередь,
		"Документ.СборкаТоваров", МенеджерВТ, ДополнительныеПараметры);
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(Параметры.Очередь,
		"Документ.ВозвратТоваровПоставщику", МенеджерВТ, ДополнительныеПараметры);
	
	Запрос.Текст = ТекстЗапросаЗаполненияРаспоряженияВРасходномОрдереОтложенно();
	Запрос.УстановитьПараметр("ПустыеЗначенияЗаказовВнутреннееПотреблениеТоваров", Документы.ВнутреннееПотреблениеТоваров.ПустыеЗначенияЗаказов());	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ОтгружаемыеТовары = МассивРезультатов[4].Выбрать();
	Выборка = МассивРезультатов[8].Выбрать();
	ВыборкаРасходныеОрдераПоНакладным = МассивРезультатов[9].Выбрать();
	
	Пока Выборка.СледующийПоЗначениюПоля("РаспоряжениеРасходногоОрдера") Цикл
		
		НачатьТранзакцию();
		Попытка	
						
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Документ." + Выборка.РаспоряжениеРасходногоОрдера.Метаданные().Имя);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.РаспоряжениеРасходногоОрдера);
			Блокировка.Заблокировать();
			
			СтруктрураПоиска = Новый Структура("РаспоряжениеРасходногоОрдера", Выборка.РаспоряжениеРасходногоОрдера);
			
			РасходныеОрдераЗаблокированы = Истина;
			
			Пока ВыборкаРасходныеОрдераПоНакладным.НайтиСледующий(СтруктрураПоиска) Цикл
				
				Блокировка = Новый БлокировкаДанных;
				ЭлементБлокировки = Блокировка.Добавить("Документ.РасходныйОрдерНаТовары");
				ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаРасходныеОрдераПоНакладным.РасходныйОрдер);
				Блокировка.Заблокировать();
				
			КонецЦикла;
			
			Если РасходныеОрдераЗаблокированы Тогда
				ОбработатьРасходныеОрдераТекущегоРаспоряжения(Выборка, ОтгружаемыеТовары, Параметры.Очередь);
				ЗафиксироватьТранзакцию();
			КонецЕсли;
				
		Исключение
			ОтменитьТранзакцию();
			ТекстСообщения = НСтр("ru='Не удалось обработать документ: %Регистратор% по причине: %Причина%';uk='Не вдалося обробити документ: %Регистратор% по причині: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", Выборка.РаспоряжениеРасходногоОрдера);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
				УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.Документы[Выборка.РаспоряжениеРасходногоОрдера.Метаданные().Имя],
				Выборка.РаспоряжениеРасходногоОрдера,
				ТекстСообщения);
			ВызватьИсключение;
		КонецПопытки;
			
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, "Документ.РасходныйОрдерНаТовары");
	
КонецПроцедуры

Функция ТекстЗапросаЗаполненияРаспоряженияВРасходномОрдереОтложенно()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РасходныйОрдерНаТовары.Ссылка КАК РасходныйОрдер,
	|	РасходныйОрдерНаТовары.УдалитьРаспоряжение КАК Накладная,
	|	РасходныйОрдерНаТовары.Дата КАК Дата,
	|	РеализацияТоваровУслуг.Партнер КАК Получатель
	|ПОМЕСТИТЬ НакладныеДляОбработкиИБлокировки
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированоРеализацияТоваровУслуг КАК ВТЗаблокированоРеализацияТоваровУслуг
	|		ПО РасходныйОрдерНаТовары.УдалитьРаспоряжение = ВТЗаблокированоРеализацияТоваровУслуг.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО РасходныйОрдерНаТовары.УдалитьРаспоряжение = РеализацияТоваровУслуг.Ссылка
	|ГДЕ
	|	ВТЗаблокированоРеализацияТоваровУслуг.Ссылка Есть NULL
	|	И РасходныйОрдерНаТовары.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходныйОрдерНаТовары.Ссылка,
	|	РасходныйОрдерНаТовары.УдалитьРаспоряжение,
	|	РасходныйОрдерНаТовары.Дата,
	|	ВнутреннееПотреблениеТоваров.Подразделение КАК Получатель
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированоВнутреннееПотреблениеТоваров КАК ВТЗаблокированоВнутреннееПотреблениеТоваров
	|		ПО РасходныйОрдерНаТовары.УдалитьРаспоряжение = ВТЗаблокированоВнутреннееПотреблениеТоваров.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров КАК ВнутреннееПотреблениеТоваров
	|		ПО РасходныйОрдерНаТовары.УдалитьРаспоряжение = ВнутреннееПотреблениеТоваров.Ссылка
	|ГДЕ
	|	ВТЗаблокированоВнутреннееПотреблениеТоваров.Ссылка Есть NULL
	|	И РасходныйОрдерНаТовары.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходныйОрдерНаТовары.Ссылка,
	|	РасходныйОрдерНаТовары.УдалитьРаспоряжение,
	|	РасходныйОрдерНаТовары.Дата,
	|	ПеремещениеТоваров.СкладПолучатель КАК Получатель
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированоПеремещениеТоваров КАК ВТЗаблокированоПеремещениеТоваров
	|		ПО РасходныйОрдерНаТовары.УдалитьРаспоряжение = ВТЗаблокированоПеремещениеТоваров.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|		ПО РасходныйОрдерНаТовары.УдалитьРаспоряжение = ПеремещениеТоваров.Ссылка
	|ГДЕ
	|	ВТЗаблокированоПеремещениеТоваров.Ссылка Есть NULL
	|	И РасходныйОрдерНаТовары.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходныйОрдерНаТовары.Ссылка,
	|	РасходныйОрдерНаТовары.УдалитьРаспоряжение,
	|	РасходныйОрдерНаТовары.Дата,
	|	СборкаТоваров.Склад КАК Получатель
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированоСборкаТоваров КАК ВТЗаблокированоСборкаТоваров
	|		ПО РасходныйОрдерНаТовары.УдалитьРаспоряжение = ВТЗаблокированоСборкаТоваров.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК СборкаТоваров
	|		ПО РасходныйОрдерНаТовары.УдалитьРаспоряжение = СборкаТоваров.Ссылка
	|ГДЕ
	|	ВТЗаблокированоСборкаТоваров.Ссылка Есть NULL
	|	И РасходныйОрдерНаТовары.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходныйОрдерНаТовары.Ссылка,
	|	РасходныйОрдерНаТовары.УдалитьРаспоряжение,
	|	РасходныйОрдерНаТовары.Дата,
	|	ВозвратТоваровПоставщику.Партнер КАК Получатель
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаблокированоВозвратТоваровПоставщику КАК ВТЗаблокированоВозвратТоваровПоставщику
	|		ПО РасходныйОрдерНаТовары.УдалитьРаспоряжение = ВТЗаблокированоВозвратТоваровПоставщику.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|		ПО РасходныйОрдерНаТовары.УдалитьРаспоряжение = ВозвратТоваровПоставщику.Ссылка
	|ГДЕ
	|	ВТЗаблокированоВозвратТоваровПоставщику.Ссылка Есть NULL
	|	И РасходныйОрдерНаТовары.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НакладныеДляОбработкиИБлокировки.Накладная,
	|	НакладныеДляОбработкиИБлокировки.Получатель
	|ПОМЕСТИТЬ НакладныеДляОбработки
	|ИЗ
	|	НакладныеДляОбработкиИБлокировки КАК НакладныеДляОбработкиИБлокировки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДляОбработкиРасходныйОрдерНаТовары КАК ВТДляОбработкиРасходныйОрдерНаТовары
	|		ПО НакладныеДляОбработкиИБлокировки.РасходныйОрдер = ВТДляОбработкиРасходныйОрдерНаТовары.Ссылка
	|СГРУППИРОВАТЬ ПО
	|	НакладныеДляОбработкиИБлокировки.Накладная,
	|	НакладныеДляОбработкиИБлокировки.Получатель
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ВТДляОбработкиРасходныйОрдерНаТовары.Ссылка ЕСТЬ NULL) = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВнутреннийЗапрос.Номенклатура,
	|	ВнутреннийЗапрос.Характеристика,
	|	ВнутреннийЗапрос.Склад,
	|	ВнутреннийЗапрос.Накладная,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВнутреннийЗапрос.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ВнутреннийЗапрос.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ВнутреннийЗапрос.Заказ,
	|	ВнутреннийЗапрос.Серия,
	|	СУММА(ВнутреннийЗапрос.Количество) КАК Количество
	|ПОМЕСТИТЬ НакладныеТовары
	|ИЗ
	|	(ВЫБРАТЬ
	|		НакладнаяТовары.Номенклатура КАК Номенклатура,
	|		НакладнаяТовары.Характеристика КАК Характеристика,
	|		НакладнаяТовары.Склад КАК Склад,
	|		НакладнаяТовары.Ссылка КАК Накладная,
	|		НакладнаяТовары.Назначение КАК Назначение,
	|		НакладнаяТовары.ЗаказКлиента КАК Заказ,
	|		НакладнаяТовары.Серия КАК Серия,
	|		НакладнаяТовары.Количество КАК Количество
	|	ИЗ
	|		Документ.РеализацияТоваровУслуг.Товары КАК НакладнаяТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ НакладныеДляОбработки КАК НакладныеДляОбработки
	|			ПО (НакладныеДляОбработки.Накладная = НакладнаяТовары.Ссылка)
	|	ГДЕ
	|		НакладнаяТовары.Ссылка.РеализацияПоЗаказам
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НакладнаяТовары.Номенклатура,
	|		НакладнаяТовары.Характеристика,
	|		НакладнаяТовары.Склад,
	|		НакладнаяТовары.Реализация,
	|		НакладнаяТовары.Назначение,
	|		НакладнаяТовары.ЗаказКлиента,
	|		НакладнаяТовары.Серия,
	|		НакладнаяТовары.КоличествоПоДокументу - НакладнаяТовары.Количество
	|	ИЗ
	|		Документ.АктОРасхожденияхПослеОтгрузки.Товары КАК НакладнаяТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ НакладныеДляОбработки КАК НакладныеДляОбработки
	|			ПО (НакладныеДляОбработки.Накладная = НакладнаяТовары.Реализация)
	|	ГДЕ
	|		НакладнаяТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ДопоставкаНеТребуется)
	|		И НакладнаяТовары.Реализация.РеализацияПоЗаказам
	|		И НакладнаяТовары.Ссылка.Проведен
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НакладнаяТовары.Номенклатура,
	|		НакладнаяТовары.Характеристика,
	|		НакладнаяТовары.Ссылка.Склад,
	|		НакладнаяТовары.Ссылка,
	|		НакладнаяТовары.Назначение,
	|		ВЫБОР
	|			КОГДА НакладнаяТовары.ЗаказНаВнутреннееПотребление В (&ПустыеЗначенияЗаказовВнутреннееПотреблениеТоваров)
	|				ТОГДА НакладнаяТовары.Ссылка
	|			ИНАЧЕ НакладнаяТовары.ЗаказНаВнутреннееПотребление
	|		КОНЕЦ,
	|		НакладнаяТовары.Серия,
	|		НакладнаяТовары.Количество
	|	ИЗ
	|		Документ.ВнутреннееПотреблениеТоваров.Товары КАК НакладнаяТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ НакладныеДляОбработки КАК НакладныеДляОбработки
	|			ПО (НакладныеДляОбработки.Накладная = НакладнаяТовары.Ссылка)
	|	ГДЕ
	|		НакладнаяТовары.Ссылка.ПотреблениеПоЗаказам
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НакладнаяТовары.Номенклатура,
	|		НакладнаяТовары.Характеристика,
	|		НакладнаяТовары.Ссылка.СкладОтправитель,
	|		НакладнаяТовары.Ссылка,
	|		НакладнаяТовары.НазначениеОтправителя,
	|		НакладнаяТовары.ЗаказНаПеремещение,
	|		НакладнаяТовары.Серия,
	|		НакладнаяТовары.Количество
	|	ИЗ
	|		Документ.ПеремещениеТоваров.Товары КАК НакладнаяТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ НакладныеДляОбработки КАК НакладныеДляОбработки
	|			ПО (НакладныеДляОбработки.Накладная = НакладнаяТовары.Ссылка)
	|	ГДЕ
	|		НакладнаяТовары.Ссылка.ПеремещениеПоЗаказам
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НакладнаяТовары.Номенклатура,
	|		НакладнаяТовары.Характеристика,
	|		НакладнаяТовары.Ссылка.Склад,
	|		НакладнаяТовары.Ссылка,
	|		НакладнаяТовары.Назначение,
	|		НакладнаяТовары.Ссылка.ЗаказНаСборку,
	|		НакладнаяТовары.Серия,
	|		НакладнаяТовары.Количество
	|	ИЗ
	|		Документ.СборкаТоваров.Товары КАК НакладнаяТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ НакладныеДляОбработки КАК НакладныеДляОбработки
	|			ПО (НакладныеДляОбработки.Накладная = НакладнаяТовары.Ссылка)
	|	ГДЕ
	|		НакладнаяТовары.Ссылка.ЗаказНаСборку <> ЗНАЧЕНИЕ(Документ.ЗаказНаСборку.ПустаяСсылка)
	|		И НакладнаяТовары.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НакладнаяТовары.Номенклатура,
	|		НакладнаяТовары.Характеристика,
	|		НакладнаяТовары.Склад,
	|		НакладнаяТовары.Ссылка,
	|		НакладнаяТовары.Назначение,
	|		НакладнаяТовары.ЗаказНаСборку,
	|		НакладнаяТовары.Серия,
	|		НакладнаяТовары.Количество
	|	ИЗ
	|		Документ.СборкаТоваров КАК НакладнаяТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ НакладныеДляОбработки КАК НакладныеДляОбработки
	|			ПО (НакладныеДляОбработки.Накладная = НакладнаяТовары.Ссылка)
	|	ГДЕ
	|		НакладнаяТовары.ЗаказНаСборку <> ЗНАЧЕНИЕ(Документ.ЗаказНаСборку.ПустаяСсылка)
	|		И НакладнаяТовары.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|	
	|	) КАК ВнутреннийЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВнутреннийЗапрос.Номенклатура,
	|	ВнутреннийЗапрос.Характеристика,
	|	ВнутреннийЗапрос.Склад,
	|	ВнутреннийЗапрос.Накладная,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВнутреннийЗапрос.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ВнутреннийЗапрос.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВнутреннийЗапрос.Заказ,
	|	ВнутреннийЗапрос.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходныйОрдерНаТоварыСерии.Ссылка,
	|	РасходныйОрдерНаТоварыСерии.Ссылка.Статус,
	|	РасходныйОрдерНаТоварыТовары.Ссылка.УдалитьРаспоряжение КАК Распоряжение,
	|	НакладныеДляОбработки.Получатель КАК Получатель,
	|	РасходныйОрдерНаТоварыТовары.Ссылка.Склад КАК Склад,
	|	РасходныйОрдерНаТоварыСерии.Номенклатура,
	|	РасходныйОрдерНаТоварыСерии.Характеристика,
	|	РасходныйОрдерНаТоварыСерии.Упаковка КАК Упаковка,
	|	РасходныйОрдерНаТоварыСерии.Назначение,
	|	РасходныйОрдерНаТоварыСерии.Серия,
	|	РасходныйОрдерНаТоварыТовары.СтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА РасходныйОрдерНаТоварыТовары.Ссылка.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КОтгрузке), ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КПроверке), ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отгружен))
	|				И ВЫБОР
	|					КОГДА РасходныйОрдерНаТоварыТовары.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|							И РасходныйОрдерНаТоварыТовары.Ссылка.ДатаОтгрузки >= РасходныйОрдерНаТоварыТовары.Ссылка.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|						ТОГДА ВЫБОР
	|								КОГДА РасходныйОрдерНаТоварыТовары.Ссылка.Помещение.ИспользоватьАдресноеХранение
	|										И РасходныйОрдерНаТоварыТовары.Ссылка.ДатаОтгрузки >= РасходныйОрдерНаТоварыТовары.Ссылка.Помещение.ДатаНачалаАдресногоХраненияОстатков
	|									ТОГДА ИСТИНА
	|								ИНАЧЕ ЛОЖЬ
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА РасходныйОрдерНаТоварыТовары.Ссылка.Склад.ИспользоватьАдресноеХранение
	|									И РасходныйОрдерНаТоварыТовары.Ссылка.ДатаОтгрузки >= РасходныйОрдерНаТоварыТовары.Ссылка.Склад.ДатаНачалаАдресногоХраненияОстатков
	|								ТОГДА ИСТИНА
	|							ИНАЧЕ ЛОЖЬ
	|						КОНЕЦ
	|				КОНЕЦ
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьУпаковкиВТЧСерии,
	|	РасходныйОрдерНаТоварыСерии.УпаковочныйЛистРодитель,
	|	РасходныйОрдерНаТоварыТовары.УпаковочныйЛист,
	|	ЛОЖЬ КАК ЭтоУпаковочныйЛист,
	|	РасходныйОрдерНаТоварыСерии.НеОтгружать,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА РасходныйОрдерНаТоварыСерии.КоличествоУпаковок = 0
	|					И РасходныйОрдерНаТоварыСерии.Количество <> 0
	|				ТОГДА РасходныйОрдерНаТоварыСерии.Количество
	|			ИНАЧЕ РасходныйОрдерНаТоварыСерии.КоличествоУпаковок
	|		КОНЕЦ) КАК КоличествоУпаковок,
	|	МАКСИМУМ(РасходныйОрдерНаТоварыСерии.Количество) КАК Количество
	|ПОМЕСТИТЬ РасходныйОрдерТовары
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.УдалитьТовары КАК РасходныйОрдерНаТоварыТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерНаТовары.УдалитьСерии КАК РасходныйОрдерНаТоварыСерии
	|		ПО (РасходныйОрдерНаТоварыСерии.Ссылка = РасходныйОрдерНаТоварыТовары.Ссылка)
	|			И (РасходныйОрдерНаТоварыСерии.Номенклатура = РасходныйОрдерНаТоварыТовары.Номенклатура)
	|			И (РасходныйОрдерНаТоварыСерии.Характеристика = РасходныйОрдерНаТоварыТовары.Характеристика)
	|			И (РасходныйОрдерНаТоварыСерии.Назначение = РасходныйОрдерНаТоварыТовары.Назначение)
	|			И (РасходныйОрдерНаТоварыСерии.УпаковочныйЛистРодитель = РасходныйОрдерНаТоварыТовары.УпаковочныйЛистРодитель)
	|			И (РасходныйОрдерНаТоварыСерии.Упаковка = РасходныйОрдерНаТоварыТовары.Упаковка
	|				ИЛИ НЕ(РасходныйОрдерНаТоварыТовары.Ссылка.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КОтгрузке), ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КПроверке), ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отгружен))
	|						И ВЫБОР
	|							КОГДА РасходныйОрдерНаТоварыТовары.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|									И РасходныйОрдерНаТоварыТовары.Ссылка.ДатаОтгрузки >= РасходныйОрдерНаТоварыТовары.Ссылка.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|								ТОГДА ВЫБОР
	|										КОГДА РасходныйОрдерНаТоварыТовары.Ссылка.Помещение.ИспользоватьАдресноеХранение
	|												И РасходныйОрдерНаТоварыТовары.Ссылка.ДатаОтгрузки >= РасходныйОрдерНаТоварыТовары.Ссылка.Помещение.ДатаНачалаАдресногоХраненияОстатков
	|											ТОГДА ИСТИНА
	|										ИНАЧЕ ЛОЖЬ
	|									КОНЕЦ
	|							ИНАЧЕ ВЫБОР
	|									КОГДА РасходныйОрдерНаТоварыТовары.Ссылка.Склад.ИспользоватьАдресноеХранение
	|											И РасходныйОрдерНаТоварыТовары.Ссылка.ДатаОтгрузки >= РасходныйОрдерНаТоварыТовары.Ссылка.Склад.ДатаНачалаАдресногоХраненияОстатков
	|										ТОГДА ИСТИНА
	|									ИНАЧЕ ЛОЖЬ
	|								КОНЕЦ
	|						КОНЕЦ))
	|			И РасходныйОрдерНаТоварыТовары.УпаковочныйЛистРодитель = РасходныйОрдерНаТоварыСерии.УпаковочныйЛистРодитель
	|			И РасходныйОрдерНаТоварыТовары.НеОтгружать = РасходныйОрдерНаТоварыСерии.НеОтгружать
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НакладныеДляОбработки КАК НакладныеДляОбработки
	|		ПО (НакладныеДляОбработки.Накладная = РасходныйОрдерНаТоварыТовары.Ссылка.УдалитьРаспоряжение)
	|ГДЕ
	|	РасходныйОрдерНаТоварыТовары.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходныйОрдерНаТоварыСерии.Назначение,
	|	РасходныйОрдерНаТоварыСерии.Номенклатура,
	|	НакладныеДляОбработки.Получатель,
	|	РасходныйОрдерНаТоварыТовары.Ссылка.Склад,
	|	РасходныйОрдерНаТоварыСерии.Серия,
	|	РасходныйОрдерНаТоварыСерии.Характеристика,
	|	РасходныйОрдерНаТоварыСерии.Упаковка,
	|	РасходныйОрдерНаТоварыСерии.Ссылка,
	|	РасходныйОрдерНаТоварыСерии.Ссылка.Статус,
	|	РасходныйОрдерНаТоварыСерии.НомерСтроки,
	|	РасходныйОрдерНаТоварыТовары.Ссылка.УдалитьРаспоряжение,
	|	РасходныйОрдерНаТоварыТовары.СтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА РасходныйОрдерНаТоварыТовары.Ссылка.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КОтгрузке), ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.КПроверке), ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отгружен))
	|				И ВЫБОР
	|					КОГДА РасходныйОрдерНаТоварыТовары.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|							И РасходныйОрдерНаТоварыТовары.Ссылка.ДатаОтгрузки >= РасходныйОрдерНаТоварыТовары.Ссылка.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|						ТОГДА ВЫБОР
	|								КОГДА РасходныйОрдерНаТоварыТовары.Ссылка.Помещение.ИспользоватьАдресноеХранение
	|										И РасходныйОрдерНаТоварыТовары.Ссылка.ДатаОтгрузки >= РасходныйОрдерНаТоварыТовары.Ссылка.Помещение.ДатаНачалаАдресногоХраненияОстатков
	|									ТОГДА ИСТИНА
	|								ИНАЧЕ ЛОЖЬ
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА РасходныйОрдерНаТоварыТовары.Ссылка.Склад.ИспользоватьАдресноеХранение
	|									И РасходныйОрдерНаТоварыТовары.Ссылка.ДатаОтгрузки >= РасходныйОрдерНаТоварыТовары.Ссылка.Склад.ДатаНачалаАдресногоХраненияОстатков
	|								ТОГДА ИСТИНА
	|							ИНАЧЕ ЛОЖЬ
	|						КОНЕЦ
	|				КОНЕЦ
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	РасходныйОрдерНаТоварыСерии.УпаковочныйЛистРодитель,
	|	РасходныйОрдерНаТоварыТовары.УпаковочныйЛист,
	|	РасходныйОрдерНаТоварыСерии.НеОтгружать
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходныйОрдерНаТоварыТовары.Ссылка,
	|	РасходныйОрдерНаТоварыТовары.Ссылка.Статус,
	|	РасходныйОрдерНаТоварыТовары.Ссылка.УдалитьРаспоряжение,
	|	НакладныеДляОбработки.Получатель,
	|	РасходныйОрдерНаТоварыТовары.Ссылка.Склад,
	|	РасходныйОрдерНаТоварыТовары.Номенклатура,
	|	РасходныйОрдерНаТоварыТовары.Характеристика,
	|	РасходныйОрдерНаТоварыТовары.Упаковка,
	|	РасходныйОрдерНаТоварыТовары.Назначение,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка),
	|	РасходныйОрдерНаТоварыТовары.СтатусУказанияСерий,
	|	ЛОЖЬ,
	|	РасходныйОрдерНаТоварыТовары.УпаковочныйЛистРодитель,
	|	РасходныйОрдерНаТоварыТовары.УпаковочныйЛист,
	|	РасходныйОрдерНаТоварыТовары.ЭтоУпаковочныйЛист,
	|	РасходныйОрдерНаТоварыТовары.НеОтгружать,
	|	СУММА(РасходныйОрдерНаТоварыТовары.КоличествоУпаковок),
	|	СУММА(РасходныйОрдерНаТоварыТовары.Количество)
	|ИЗ
	|	Документ.РасходныйОрдерНаТовары.УдалитьТовары КАК РасходныйОрдерНаТоварыТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НакладныеДляОбработки КАК НакладныеДляОбработки
	|		ПО (НакладныеДляОбработки.Накладная = РасходныйОрдерНаТоварыТовары.Ссылка.УдалитьРаспоряжение)
	|ГДЕ
	|	НЕ РасходныйОрдерНаТоварыТовары.СтатусУказанияСерий В (2, 4, 6, 8, 10, 14)
	|	И РасходныйОрдерНаТоварыТовары.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходныйОрдерНаТоварыТовары.Упаковка,
	|	РасходныйОрдерНаТоварыТовары.Номенклатура,
	|	РасходныйОрдерНаТоварыТовары.УпаковочныйЛистРодитель,
	|	РасходныйОрдерНаТоварыТовары.УпаковочныйЛист,
	|	РасходныйОрдерНаТоварыТовары.ЭтоУпаковочныйЛист,
	|	НакладныеДляОбработки.Получатель,
	|	РасходныйОрдерНаТоварыТовары.Ссылка,
	|	РасходныйОрдерНаТоварыТовары.Ссылка.Статус,
	|	РасходныйОрдерНаТоварыТовары.Назначение,
	|	РасходныйОрдерНаТоварыТовары.Характеристика,
	|	РасходныйОрдерНаТоварыТовары.НеОтгружать,
	|	РасходныйОрдерНаТоварыТовары.СтатусУказанияСерий,
	|	РасходныйОрдерНаТоварыТовары.Ссылка.УдалитьРаспоряжение,
	|	РасходныйОрдерНаТоварыТовары.Ссылка.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходныйОрдерТовары.Ссылка,
	|	РасходныйОрдерТовары.Статус,
	|	РасходныйОрдерТовары.Распоряжение,
	|	РасходныйОрдерТовары.Получатель,
	|	РасходныйОрдерТовары.Склад,
	|	РасходныйОрдерТовары.Номенклатура,
	|	РасходныйОрдерТовары.Характеристика,
	|	РасходныйОрдерТовары.Упаковка,
	|	РасходныйОрдерТовары.Назначение,
	|	РасходныйОрдерТовары.Серия,
	|	РасходныйОрдерТовары.СтатусУказанияСерий,
	|	РасходныйОрдерТовары.ЕстьУпаковкиВТЧСерии,
	|	РасходныйОрдерТовары.ЭтоУпаковочныйЛист,
	|	РасходныйОрдерТовары.УпаковочныйЛистРодитель,
	|	РасходныйОрдерТовары.УпаковочныйЛист,
	|	РасходныйОрдерТовары.НеОтгружать,
	|	РасходныйОрдерТовары.КоличествоУпаковок,
	|	РасходныйОрдерТовары.Количество
	|ИЗ
	|	РасходныйОрдерТовары КАК РасходныйОрдерТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходныйОрдерТовары.Ссылка,
	|	РасходныйОрдерТовары.Распоряжение,
	|	РасходныйОрдерТовары.Склад,
	|	РасходныйОрдерТовары.Номенклатура,
	|	РасходныйОрдерТовары.Характеристика,
	|	РасходныйОрдерТовары.Назначение,
	|	ВЫБОР
	|		КОГДА РасходныйОрдерТовары.СтатусУказанияСерий В (10, 14)
	|			ТОГДА РасходныйОрдерТовары.СтатусУказанияСерий
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА РасходныйОрдерТовары.СтатусУказанияСерий В (10, 14)
	|			ТОГДА РасходныйОрдерТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК Серия,
	|	СУММА(ВЫБОР
	|		КОГДА РасходныйОрдерТовары.НеОтгружать = 0
	|			ТОГДА РасходныйОрдерТовары.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ) КАК Количество
	|ПОМЕСТИТЬ ТоварыПоРаспоряжениям
	|ИЗ
	|	РасходныйОрдерТовары КАК РасходныйОрдерТовары
	|ГДЕ
	|	НЕ РасходныйОрдерТовары.ЭтоУпаковочныйЛист
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходныйОрдерТовары.Ссылка,
	|	РасходныйОрдерТовары.Номенклатура,
	|	РасходныйОрдерТовары.Распоряжение,
	|	ВЫБОР
	|		КОГДА РасходныйОрдерТовары.СтатусУказанияСерий В (10, 14)
	|			ТОГДА РасходныйОрдерТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	РасходныйОрдерТовары.Назначение,
	|	ВЫБОР
	|		КОГДА РасходныйОрдерТовары.СтатусУказанияСерий В (10, 14)
	|			ТОГДА РасходныйОрдерТовары.СтатусУказанияСерий
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	РасходныйОрдерТовары.Склад,
	|	РасходныйОрдерТовары.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыПоРаспоряжениям.Распоряжение КАК РаспоряжениеРасходногоОрдера,
	|	ТоварыПоРаспоряжениям.Ссылка КАК РасходныйОрдер,
	|	ЕСТЬNULL(НакладныеТовары.Заказ, ТоварыПоРаспоряжениям.Распоряжение) КАК Распоряжение,
	|	ЕСТЬNULL(НакладныеТовары.Количество, 0) КАК Количество,
	|	ТоварыПоРаспоряжениям.Количество КАК КоличествоОрдер,
	|	ТоварыПоРаспоряжениям.Номенклатура КАК Номенклатура,
	|	ТоварыПоРаспоряжениям.Характеристика КАК Характеристика,
	|	ТоварыПоРаспоряжениям.Назначение КАК Назначение,
	|	ТоварыПоРаспоряжениям.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	ТоварыПоРаспоряжениям.Серия КАК Серия
	|ПОМЕСТИТЬ ТоварыПоРаспоряжениямНакладные
	|ИЗ
	|	ТоварыПоРаспоряжениям КАК ТоварыПоРаспоряжениям
	|		ЛЕВОЕ СОЕДИНЕНИЕ НакладныеТовары КАК НакладныеТовары
	|		ПО (НакладныеТовары.Номенклатура = ТоварыПоРаспоряжениям.Номенклатура)
	|			И (НакладныеТовары.Характеристика = ТоварыПоРаспоряжениям.Характеристика)
	|			И (НакладныеТовары.Назначение = ТоварыПоРаспоряжениям.Назначение)
	|			И (НакладныеТовары.Накладная = ТоварыПоРаспоряжениям.Распоряжение)
	|			И (НакладныеТовары.Склад = ТоварыПоРаспоряжениям.Склад)
	|			И (ВЫБОР
	|				КОГДА ТоварыПоРаспоряжениям.СтатусУказанияСерий В (10, 14)
	|					ТОГДА НакладныеТовары.Серия = ТоварыПоРаспоряжениям.Серия
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыПоРаспоряжениям.РаспоряжениеРасходногоОрдера КАК РаспоряжениеРасходногоОрдера,
	|	ТоварыПоРаспоряжениям.РасходныйОрдер КАК РасходныйОрдер,
	|	ТоварыПоРаспоряжениям.Распоряжение КАК Распоряжение,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ТоварыПоРаспоряжениям.Распоряжение.СпособДоставки В (ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.ДоКлиента), ЗНАЧЕНИЕ(Перечисление.СпособыДоставки.СиламиПеревозчикаПоАдресу))
	|				ТОГДА ЕСТЬNULL(ЗаданиеНаПеревозкуРаспоряжения_Приоритет1.Ссылка,
	|						ЕСТЬNULL(ЗаданиеНаПеревозкуРаспоряжения_Приоритет2.Ссылка,
	|						ЕСТЬNULL(ЗаданиеНаПеревозкуРаспоряжения_Приоритет3.Ссылка,
	|						ЕСТЬNULL(ЗаданиеНаПеревозкуРаспоряжения_Приоритет4.Ссылка,
	|						ЕСТЬNULL(ЗаданиеНаПеревозкуРаспоряжения_Приоритет5.Ссылка,
	|						ЕСТЬNULL(ЗаданиеНаПеревозкуРаспоряжения_Приоритет6.Ссылка,
	|						ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка)))))))
	|			ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаданиеНаПеревозку.ПустаяСсылка)
	|		КОНЕЦ) КАК ЗаданиеНаПеревозку,
	|	ТоварыПоРаспоряжениям.Количество КАК Количество,
	|	ТоварыПоРаспоряжениям.КоличествоОрдер КАК КоличествоОрдер,
	|	ТоварыПоРаспоряжениям.Номенклатура КАК Номенклатура,
	|	ТоварыПоРаспоряжениям.Характеристика КАК Характеристика,
	|	ТоварыПоРаспоряжениям.Назначение КАК Назначение,
	|	ТоварыПоРаспоряжениям.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	ТоварыПоРаспоряжениям.Серия КАК Серия
	|ПОМЕСТИТЬ ТоварыПоРаспоряжениямЗаданиеНаПеревозку
	|ИЗ
	|	ТоварыПоРаспоряжениямНакладные КАК ТоварыПоРаспоряжениям
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения_Приоритет1
	|		ПО ТоварыПоРаспоряжениям.РаспоряжениеРасходногоОрдера = ЗаданиеНаПеревозкуРаспоряжения_Приоритет1.Распоряжение
	|			И (ЗаданиеНаПеревозкуРаспоряжения_Приоритет1.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданийНаПеревозку.Закрыто))
	|			И (ЗаданиеНаПеревозкуРаспоряжения_Приоритет1.Доставлено)
	|			И (ЗаданиеНаПеревозкуРаспоряжения_Приоритет1.Ссылка.Проведен)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения_Приоритет2
	|		ПО ТоварыПоРаспоряжениям.Распоряжение = ЗаданиеНаПеревозкуРаспоряжения_Приоритет2.Распоряжение
	|			И (ЗаданиеНаПеревозкуРаспоряжения_Приоритет2.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданийНаПеревозку.Закрыто))
	|			И (ЗаданиеНаПеревозкуРаспоряжения_Приоритет2.Доставлено)
	|			И (ЗаданиеНаПеревозкуРаспоряжения_Приоритет2.Ссылка.Проведен)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения_Приоритет3
	|		ПО ТоварыПоРаспоряжениям.РаспоряжениеРасходногоОрдера = ЗаданиеНаПеревозкуРаспоряжения_Приоритет3.Распоряжение
	|			И (ЗаданиеНаПеревозкуРаспоряжения_Приоритет3.Ссылка.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданийНаПеревозку.Закрыто))
	|			И (ЗаданиеНаПеревозкуРаспоряжения_Приоритет3.Ссылка.Проведен)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения_Приоритет4
	|		ПО ТоварыПоРаспоряжениям.Распоряжение = ЗаданиеНаПеревозкуРаспоряжения_Приоритет4.Распоряжение
	|			И (ЗаданиеНаПеревозкуРаспоряжения_Приоритет4.Ссылка.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданийНаПеревозку.Закрыто))
	|			И (ЗаданиеНаПеревозкуРаспоряжения_Приоритет4.Ссылка.Проведен)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения_Приоритет5
	|		ПО ТоварыПоРаспоряжениям.РаспоряжениеРасходногоОрдера = ЗаданиеНаПеревозкуРаспоряжения_Приоритет5.Распоряжение
	|			И (ЗаданиеНаПеревозкуРаспоряжения_Приоритет5.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданийНаПеревозку.Закрыто))
	|			И (НЕ ЗаданиеНаПеревозкуРаспоряжения_Приоритет5.Доставлено)
	|			И (ЗаданиеНаПеревозкуРаспоряжения_Приоритет5.Ссылка.Проведен)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаПеревозку.Распоряжения КАК ЗаданиеНаПеревозкуРаспоряжения_Приоритет6
	|		ПО ТоварыПоРаспоряжениям.Распоряжение = ЗаданиеНаПеревозкуРаспоряжения_Приоритет6.Распоряжение
	|			И (ЗаданиеНаПеревозкуРаспоряжения_Приоритет6.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаданийНаПеревозку.Закрыто))
	|			И (НЕ ЗаданиеНаПеревозкуРаспоряжения_Приоритет6.Доставлено)
	|			И (ЗаданиеНаПеревозкуРаспоряжения_Приоритет6.Ссылка.Проведен)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыПоРаспоряжениям.РаспоряжениеРасходногоОрдера,
	|	ТоварыПоРаспоряжениям.РасходныйОрдер,
	|	ТоварыПоРаспоряжениям.Распоряжение,
	|	ТоварыПоРаспоряжениям.Количество,
	|	ТоварыПоРаспоряжениям.КоличествоОрдер,
	|	ТоварыПоРаспоряжениям.Номенклатура,
	|	ТоварыПоРаспоряжениям.Характеристика,
	|	ТоварыПоРаспоряжениям.Назначение,
	|	ТоварыПоРаспоряжениям.СтатусУказанияСерий,
	|	ТоварыПоРаспоряжениям.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыПоРаспоряжениямЗаданиеНаПеревозку.РаспоряжениеРасходногоОрдера,
	|	ТоварыПоРаспоряжениямЗаданиеНаПеревозку.РасходныйОрдер,
	|	ТоварыПоРаспоряжениямЗаданиеНаПеревозку.Распоряжение,
	|	ТоварыПоРаспоряжениямЗаданиеНаПеревозку.ЗаданиеНаПеревозку,
	|	ТоварыПоРаспоряжениямЗаданиеНаПеревозку.ЗаданиеНаПеревозку.Статус КАК ЗаданиеНаПеревозкуСтатус,
	|	ТоварыПоРаспоряжениямЗаданиеНаПеревозку.Количество,
	|	ТоварыПоРаспоряжениямЗаданиеНаПеревозку.КоличествоОрдер,
	|	ТоварыПоРаспоряжениямЗаданиеНаПеревозку.Номенклатура,
	|	ТоварыПоРаспоряжениямЗаданиеНаПеревозку.Характеристика,
	|	ТоварыПоРаспоряжениямЗаданиеНаПеревозку.Назначение,
	|	ТоварыПоРаспоряжениямЗаданиеНаПеревозку.СтатусУказанияСерий,
	|	ТоварыПоРаспоряжениямЗаданиеНаПеревозку.Серия
	|ИЗ
	|	ТоварыПоРаспоряжениямЗаданиеНаПеревозку КАК ТоварыПоРаспоряжениямЗаданиеНаПеревозку
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыПоРаспоряжениямЗаданиеНаПеревозку.РаспоряжениеРасходногоОрдера,
	|	ТоварыПоРаспоряжениямЗаданиеНаПеревозку.РасходныйОрдер,
	|	ТоварыПоРаспоряжениямЗаданиеНаПеревозку.Номенклатура,
	|	ТоварыПоРаспоряжениямЗаданиеНаПеревозку.Характеристика,
	|	ТоварыПоРаспоряжениямЗаданиеНаПеревозку.Назначение,
	|	ТоварыПоРаспоряжениямЗаданиеНаПеревозку.Серия,
	|	ТоварыПоРаспоряжениямЗаданиеНаПеревозку.Распоряжение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасходныйОрдерТовары.Распоряжение КАК РаспоряжениеРасходногоОрдера,
	|	РасходныйОрдерТовары.Ссылка КАК РасходныйОрдер
	|ИЗ
	|	РасходныйОрдерТовары КАК РасходныйОрдерТовары
	|
	|УПОРЯДОЧИТЬ ПО
	|	РаспоряжениеРасходногоОрдера,
	|	РасходныйОрдер";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ОбработатьРасходныеОрдераТекущегоРаспоряжения(Выборка, ОтгружаемыеТовары, Очередь)
	
	ТаблицаКоличестваПоРаспоряжению = Новый ТаблицаЗначений;
	ТаблицаКоличестваПоРаспоряжению.Колонки.Добавить("Распоряжение");
	ТаблицаКоличестваПоРаспоряжению.Колонки.Добавить("Номенклатура");
	ТаблицаКоличестваПоРаспоряжению.Колонки.Добавить("Характеристика");
	ТаблицаКоличестваПоРаспоряжению.Колонки.Добавить("Назначение");
	ТаблицаКоличестваПоРаспоряжению.Колонки.Добавить("Серия");
	ТаблицаКоличестваПоРаспоряжению.Колонки.Добавить("Количество");
	
	ПараметрыОтбораОтгружаемыеТовары = Новый Структура("Номенклатура,Характеристика,Назначение,Серия");
	ПараметрыОтбораТоварыПоРаспоряжениям = Новый Структура("Номенклатура,Характеристика,Назначение,Серия,Распоряжение");
	
	Пока Выборка.СледующийПоЗначениюПоля("РасходныйОрдер") Цикл
		
		ДокументОбъект = Выборка.РасходныйОрдер.ПолучитьОбъект();
		
		// Если объект ранее был удален или обработан другими сеансами, пропускаем его.
		Если ДокументОбъект = Неопределено 
			Или ЗначениеЗаполнено(ДокументОбъект.Получатель) Тогда
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.РасходныйОрдер);
			Продолжить;
		КонецЕсли;
		
		ЗаданиеНаПеревозкуЗаполнено = Ложь;
					
		ПараметрыОтбораОтгружаемыеТовары = Новый Структура("Номенклатура,Характеристика,Назначение,Серия");
		
		ПараметрыОтбора	= Новый Структура();
		ПараметрыОтбора.Вставить("Распоряжение",Выборка.РаспоряжениеРасходногоОрдера);
		ПараметрыОтбора.Вставить("Ссылка",Выборка.РасходныйОрдер);
		ОтгружаемыеТовары.Сбросить();
		Пока ОтгружаемыеТовары.НайтиСледующий(ПараметрыОтбора) Цикл			
			НоваяСтрока = ДокументОбъект.ОтгружаемыеТовары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОтгружаемыеТовары);
			
			Если ОтгружаемыеТовары.НеОтгружать Тогда
				
				НоваяСтрока.Действие = Перечисления.ДействияСоСтрокамиОрдеровНаОтгрузку.НеОтгружать;
				
			ИначеЕсли ОтгружаемыеТовары.Статус = Перечисления.СтатусыРасходныхОрдеров.Подготовлено
				ИЛИ ОтгружаемыеТовары.Статус = Перечисления.СтатусыРасходныхОрдеров.КОтбору 
				ИЛИ ОтгружаемыеТовары.Статус = Перечисления.СтатусыРасходныхОрдеров.КПроверке 
				ИЛИ ОтгружаемыеТовары.Статус = Перечисления.СтатусыРасходныхОрдеров.ВПроцессеПроверки Тогда
				
				Если ОтгружаемыеТовары.ЭтоУпаковочныйЛист ИЛИ ЗначениеЗаполнено(ОтгружаемыеТовары.УпаковочныйЛистРодитель) Тогда
					НоваяСтрока.Действие = Перечисления.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить;
				Иначе
					НоваяСтрока.Действие = Перечисления.ДействияСоСтрокамиОрдеровНаОтгрузку.Отобрать;
				КонецЕсли;
				
			Иначе
				
				НоваяСтрока.Действие = Перечисления.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить;
				
			КонецЕсли;
			
			Получатель = ОтгружаемыеТовары.Получатель;
		КонецЦикла;
		
		ДокументОбъект.Получатель = Получатель;
		
		Пока Выборка.СледующийПоЗначениюПоля("Номенклатура") Цикл
			
			Если ЗначениеЗаполнено(Выборка.ЗаданиеНаПеревозку) И Не ЗначениеЗаполнено(ДокументОбъект.ЗаданиеНаПеревозку) Тогда
				ДокументОбъект.ЗаданиеНаПеревозку = Выборка.ЗаданиеНаПеревозку;
				ДокументОбъект.ОтгрузкаПоЗаданиюНаПеревозку = Истина;
				ЗаданиеНаПеревозкуЗаполнено = Истина;
				// Если задание на перевозку отправлено или закрыто, а ордер в статусе "К отгрузке", 
				// то ордер можно перевести в статус "Отгружен"
				Если ДокументОбъект.Статус = Перечисления.СтатусыРасходныхОрдеров.КОтгрузке
					И (Выборка.ЗаданиеНаПеревозкуСтатус = Перечисления.СтатусыЗаданийНаПеревозку.Отправлено
					Или Выборка.ЗаданиеНаПеревозкуСтатус = Перечисления.СтатусыЗаданийНаПеревозку.Закрыто) Тогда
					ДокументОбъект.Статус = Перечисления.СтатусыРасходныхОрдеров.Отгружен;
				КонецЕсли;		
			КонецЕсли;
			
			Пока Выборка.СледующийПоЗначениюПоля("Характеристика") Цикл
				Пока Выборка.СледующийПоЗначениюПоля("Назначение") Цикл
					Пока Выборка.СледующийПоЗначениюПоля("Серия") Цикл
						
						КоличествоВОрдере = Выборка.КоличествоОрдер;
						
						Пока Выборка.Следующий() И КоличествоВОрдере > 0 Цикл
							
							//Вычисление распределенного количества по заказу
							ЗаполнитьЗначенияСвойств(ПараметрыОтбораТоварыПоРаспоряжениям,Выборка); 
							НайденыеСтроки = ТаблицаКоличестваПоРаспоряжению.НайтиСтроки(ПараметрыОтбораТоварыПоРаспоряжениям);
							Если НайденыеСтроки.Количество() <> 0 Тогда 
								КоличествоПоРаспоряжениюЗаполнено = НайденыеСтроки[0].Количество;
							Иначе
								КоличествоПоРаспоряжениюЗаполнено = 0;
							КонецЕсли;
							
							СвободноеКоличество = Выборка.Количество - КоличествоПоРаспоряжениюЗаполнено;
							
							Если Выборка.Количество <> 0 И СвободноеКоличество = 0 Тогда
								Продолжить;
							КонецЕсли;
							
							НоваяСтрока = ДокументОбъект.ТоварыПоРаспоряжениям.Добавить(); 
							ЗаполнитьЗначенияСвойств(НоваяСтрока,Выборка);
																
							РаспределенноеКоличество = 0;
							Если Выборка.Количество = 0 Тогда
								НоваяСтрока.Количество = КоличествоВОрдере;
								НоваяСтрока.Распоряжение = Выборка.РаспоряжениеРасходногоОрдера;						
							ИначеЕсли КоличествоВОрдере > СвободноеКоличество Тогда
								НоваяСтрока.Количество = СвободноеКоличество;
								НоваяСтрока.Распоряжение = Выборка.Распоряжение;
								РаспределенноеКоличество = НоваяСтрока.Количество;
							Иначе
								НоваяСтрока.Количество = КоличествоВОрдере;
								НоваяСтрока.Распоряжение = Выборка.Распоряжение;
								РаспределенноеКоличество = НоваяСтрока.Количество;
							КонецЕсли;
							
							КоличествоВОрдере = КоличествоВОрдере - НоваяСтрока.Количество;
							
							//Коррекировка распределенного количества по заказу    
							Если НайденыеСтроки.Количество() = 0 Тогда 
								НоваяСтрока = ТаблицаКоличестваПоРаспоряжению.Добавить();
								ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
								НоваяСтрока.Количество = РаспределенноеКоличество;
							Иначе
								НайденыеСтроки[0].Количество = РаспределенноеКоличество+НайденыеСтроки[0].Количество;
							КонецЕсли;
							
						КонецЦикла;
						
					КонецЦикла;
				КонецЦикла;
			КонецЦикла; 
		КонецЦикла;
		
		Если Не ЗаданиеНаПеревозкуЗаполнено Тогда
			ДокументОбъект.ОтгрузкаПоЗаданиюНаПеревозку = Ложь;
			ДокументОбъект.ПорядокДоставки = "";
			ДокументОбъект.ЗаданиеНаПеревозку = Неопределено;
		КонецЕсли;
		
		НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ДокументОбъект,
														НоменклатураСервер.ПараметрыУказанияСерий(ДокументОбъект,
																									Документы.РасходныйОрдерНаТовары).ОтгружаемыеТовары);
																																																		
		Для Каждого Строка Из ДокументОбъект.ОтгружаемыеТовары Цикл
			Если Строка.СтатусУказанияСерий = 3 Тогда
				ВидНоменклатуры = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Строка.Номенклатура, "ВидНоменклатуры");
				УникальныйИдентификаторСерии = ВидНоменклатуры.УникальныйИдентификатор();
				СерияСсылка = Справочники.СерииНоменклатуры.ПолучитьСсылку(УникальныйИдентификаторСерии);
				Если СерияСсылка.ПолучитьОбъект() = Неопределено Тогда
					СерияОбъект = Справочники.СерииНоменклатуры.СоздатьЭлемент();
					СерияОбъект.УстановитьСсылкуНового(СерияСсылка);
					СерияОбъект.Наименование = НСтр("ru='<Неизвестная серия>';uk='<Невідома cерія>'");
					НастройкиИспользованияСерий = Справочники.ВидыНоменклатуры.НастройкиИспользованияСерий(ВидНоменклатуры);
					Если НастройкиИспользованияСерий.ИспользоватьНомерСерии Тогда
						СерияОбъект.Номер = НСтр("ru='<Неизвестная серия>';uk='<Невідома cерія>'");
					КонецЕсли;
					СерияОбъект.ВидНоменклатуры = ВидНоменклатуры;
					ОбновлениеИнформационнойБазы.ЗаписатьДанные(СерияОбъект);
				КонецЕсли;
				Строка.Серия = СерияСсылка;
				Строка.СтатусУказанияСерий = 4;
			КонецЕсли;
		КонецЦикла;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
		
	КонецЦикла;
	
КонецПроцедуры

Функция РасходныеОрдераОбновленыНаНовуюВерсию(МетаданныеИОтбор) Экспорт
	
	Если МетаданныеИОтбор.ЭтоНовый Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если МетаданныеИОтбор.Метаданные = Метаданные.Документы.РасходныйОрдерНаТовары Тогда
		Возврат Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Неопределено, МетаданныеИОтбор.Метаданные, МетаданныеИОтбор.Отбор);
	Иначе
		Запрос = новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходныйОрдерНаТовары.Ссылка,
		|	РасходныйОрдерНаТовары.Получатель,
		|	РасходныйОрдерНаТовары.УдалитьРаспоряжение
		|ИЗ
		|	Документ.РасходныйОрдерНаТовары КАК РасходныйОрдерНаТовары
		|ГДЕ
		|	РасходныйОрдерНаТовары.УдалитьРаспоряжение = &Распоряжение
		|	И РасходныйОрдерНаТовары.Получатель В (&ПустоеЗначениеПолучателя)";
		
		Запрос.УстановитьПараметр("ПустоеЗначениеПолучателя", СкладыСервер.ПустойПолучательОтправитель());
		Запрос.УстановитьПараметр("Распоряжение", МетаданныеИОтбор.Отбор);
		
		Возврат Запрос.Выполнить().Пустой();
	КонецЕсли;
	
КонецФункции



#КонецОбласти

#КонецОбласти

#КонецЕсли
