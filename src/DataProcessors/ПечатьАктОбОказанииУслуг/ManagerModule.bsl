#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
// 		ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
// 		МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
// 		ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
// 		КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
// 		ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Акт") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"Акт", 
			НСтр("ru='Акт об оказании услуг';uk='Акт про надання послуг'"),
			СформироватьПечатнуюФормуАктОбОказанииУслуг(СтруктураТипов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода),
			,
			,
			,
			Истина // ЭтоМногоязычнаяПечатнаяФорма
		);
		
	КонецЕсли;
	
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, СтруктураТипов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуАктОбОказанииУслуг(СтруктураТипов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода, КомплектыПечати = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АктОбОказанииУслуг";
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		
		ЭтаПечатнаяФормаДоступна = Ложь;
		КомандыПечати = УправлениеПечатью.СоздатьКоллекциюКомандПечати();
		МенеджерОбъекта.ДобавитьКомандыПечати(КомандыПечати);
		Для Каждого ДоступнаяПечатнаяФорма Из КомандыПечати Цикл
			Если ДоступнаяПечатнаяФорма.Идентификатор = "Акт" Тогда
				ЭтаПечатнаяФормаДоступна = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если Не ЭтаПечатнаяФормаДоступна Тогда
			Продолжить;
		КонецЕсли;
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыАктОбОказанииУслуг(ПараметрыПечати, СтруктураОбъектов.Значение);
		ЗаполнитьТабличныйДокументАктОбОказанииУслуг(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, КомплектыПечати, ПараметрыВывода);
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументАктОбОказанииУслуг(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, КомплектыПечати, ПараметрыВывода)	
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;	

	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьАктОбОказанииУслуг.ПФ_MXL_Акт", КодЯзыкаПечать);	
	
	ИспользоватьРучныеСкидки = ПолучитьФункциональнуюОпцию("ИспользоватьРучныеСкидкиВПродажах");
	ИспользоватьАвтоматическиеСкидки = ПолучитьФункциональнуюОпцию("ИспользоватьАвтоматическиеСкидкиВПродажах");
	ПоказыватьНДС = Константы.ВыводитьДопКолонкиНДС.Получить();
	
	ДанныеПечати = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ПервыйДокумент = Истина;
	СтруктураПоиска = Новый Структура("Ссылка");
	СсылкиБезСтрок = Новый Соответствие;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		// Для печати комплектов
		Если КомплектыПечати <> Неопределено И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено Тогда
			КомплектПечатиПоСсылке = КомплектыПечати.Найти(ДанныеПечати.Ссылка,"Ссылка");
			Если КомплектПечатиПоСсылке = Неопределено Тогда
				КомплектПечатиПоСсылке = КомплектыПечати[0];
			КонецЕсли;
			Если КомплектПечатиПоСсылке.Экземпляров = 0 Тогда
				Продолжить
			КонецЕсли;
		КонецЕсли;
		
		СтруктураПоиска.Ссылка = ДанныеПечати.Ссылка;
		ВыборкаПоДокументам.Сбросить();
		Если НЕ ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска) Тогда
			Если СсылкиБезСтрок[ДанныеПечати.Ссылка] = Неопределено Тогда
				Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='В документе %1 отсутствуют услуги. Печать акта об оказании услуг не требуется.';uk='У документі %1 відсутні послуги. Друк акту про надання послуг не потрібний.'"), ДанныеПечати.Ссылка);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст, ДанныеПечати.Ссылка);
			КонецЕсли;
			СсылкиБезСтрок.Вставить(ДанныеПечати.Ссылка,ДанныеПечати.Ссылка);
			Продолжить;
		КонецЕсли;
		ВыборкаПоУслугам = ВыборкаПоДокументам.Выбрать();
		ЗаголовокСкидки = ФормированиеПечатныхФорм.НужноВыводитьСкидки(ВыборкаПоУслугам, ИспользоватьРучныеСкидки Или ИспользоватьАвтоматическиеСкидки, КодЯзыкаПечать);
		ЕстьСкидки = ЗаголовокСкидки.ЕстьСкидки;
		
		ЕстьНДС = ДанныеПечати.УчитыватьНДС;
		ВыборкаПоУслугам.Сбросить();
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Выводим шапку акта
		СведенияОПоставщике	= ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата, , ДанныеПечати.БанковскийСчетОрганизации);	
		СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Контрагент,  ДанныеПечати.Дата, , ДанныеПечати.БанковскийСчетКонтрагента);

		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
		
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		
		ОбластьМакета.Параметры.РуководительПоставщика 			= ДанныеПечати.РуководительОрганизации;
		ОбластьМакета.Параметры.ДолжностьРуководителяПоставщика = ДанныеПечати.ДолжностьРуководителяОрганизации;
		ОбластьМакета.Параметры.ПредставлениеПоставщика 		= ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,",,КодЯзыкаПечать);
		
		ОбластьМакета.Параметры.РуководительПокупателя 			= ДанныеПечати.РуководительКонтрагента;
		ОбластьМакета.Параметры.ДолжностьРуководителяПокупателя = ?(ЗначениеЗаполнено(ДанныеПечати.ДолжностьРуководителяКонтрагента), ДанныеПечати.ДолжностьРуководителяКонтрагента, ?(ПартнерыИКонтрагенты.ЭтоЮрЛицо(СведенияОПокупателе.ЮрФизЛицо), "Директор", ""));
		ОбластьМакета.Параметры.ПредставлениеПокупателя 		= ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование,",,КодЯзыкаПечать);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");

		ТекстЗаголовка = ПолучитьТекстЗаголовка(ДанныеПечати, КодЯзыкаПечать);
		СтруктураДанныхШапки = Новый Структура;
		СтруктураДанныхШапки.Вставить("ТекстЗаголовка", ТекстЗаголовка);
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхШапки);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		
		Если ЗначениеЗаполнено(ДанныеПечати.ДополнительнаяИнформацияШапки) Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("ДополнительнаяИнформацияШапки");
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		
		СведенияОбОтветсвенныхЛицах = ФормированиеПечатныхФорм.СведенияОбОтветсвенныхЛицах(ДанныеПечати, КодЯзыкаПечать);
			
		// Формирование текста акта
		ОбластьМакета = Макет.ПолучитьОбласть("ТекстАктаНачало");
		ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
		ОбластьМакета.Параметры.Заполнить(СведенияОбОтветсвенныхЛицах);
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,",,КодЯзыкаПечать);
		ОбластьМакета.Параметры.ПредставлениеПокупателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование,",,КодЯзыкаПечать);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим сведения о договоре и сделке
		СписокДополнительныхПараметров = "ДоговорНаименованиеДляПечати,";	
		Если ДанныеПечати.ПечататьЗаказ Тогда
			СписокДополнительныхПараметров = СписокДополнительныхПараметров + "Заказ,";
		КонецЕсли;
		МассивСтруктурСтрок = ФормированиеПечатныхФорм.ДополнительнаяИнформация(ДанныеПечати, СписокДополнительныхПараметров, КодЯзыкаПечать);
		Если МассивСтруктурСтрок.Количество() = 0 Тогда
			// Если нет ни договора ни заказа, выводим торговое соглашение (типовое/индивидуалоьное)
			СписокДополнительныхПараметров = "Соглашение,";	
			МассивСтруктурСтрок = ФормированиеПечатныхФорм.ДополнительнаяИнформация(ДанныеПечати, СписокДополнительныхПараметров, КодЯзыкаПечать);			
		КонецЕсли;
		
		ОбластьМакета = Макет.ПолучитьОбласть("ДопИнформация");
	    Для каждого СтруктураСтроки Из МассивСтруктурСтрок Цикл
			ОбластьМакета.Параметры.Заполнить(СтруктураСтроки);
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
				
		// Заканчиваем формировать текст акта
		ОбластьМакета = Макет.ПолучитьОбласть("ТекстАктаКонец");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим заголовок таблицы Услуги
		
		СуффиксОбласти = ?(ЕстьСкидки, "СоСкидкой", "") + ?(ЕстьНДС И ПоказыватьНДС, "СНДС", "");
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы" + СуффиксОбласти);
		ОбластьСтроки = Макет.ПолучитьОбласть("Строка" + СуффиксОбласти);
		ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры, ФормированиеПечатныхФорм.СформироватьЗаголовкиДляСуммовыхПоказателей(ДанныеПечати, КодЯзыкаПечать));
		Если ЕстьСкидки Тогда
			СтруктураЗаголовокСкидки = Новый Структура("Скидка, СуммаБезСкидки", 
				ЗаголовокСкидки.Скидка,
				ЗаголовокСкидки.СуммаСкидки);
			ОбластьМакета.Параметры.Заполнить(СтруктураЗаголовокСкидки);
		КонецЕсли; 
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		Сумма       = 0;
		СуммаНДС    = 0;
		НомерСтроки = 0;
		
		// Выводим строки таблицы Услуги
		
		Пока ВыборкаПоУслугам.Следующий() Цикл
		
			НомерСтроки = НомерСтроки + 1;
			
			ОбластьСтроки.Параметры.Заполнить(ВыборкаПоУслугам);
			
			СтруктураДанныхСтроки = Новый Структура;
			СтруктураДанныхСтроки.Вставить("НомерСтроки", НомерСтроки);
			СтруктураДанныхСтроки.Вставить("Товар", НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
				ВыборкаПоУслугам.УслугаНаименованиеПолное,
				ВыборкаПоУслугам.ХарактеристикаНаименованиеПолное));
			
			Если ЕстьСкидки Тогда
				СтруктураДанныхСтроки.Вставить("Скидка", ?(ЗаголовокСкидки.ТолькоНаценка,- ВыборкаПоУслугам.СуммаСкидки,ВыборкаПоУслугам.СуммаСкидки));
				СтруктураДанныхСтроки.Вставить("СуммаБезСкидки", ФормированиеПечатныхФорм.ФорматСумм(ВыборкаПоУслугам.Сумма + ВыборкаПоУслугам.СуммаСкидки));
			КонецЕсли;
			
			Если ЕстьНДС Тогда
				СтруктураДанныхСтроки.Вставить("СтавкаНДС", Локализация.ПолучитьЛокализованноеПредставление(ВыборкаПоУслугам.СтавкаНДС, КодЯзыкаПечать));
			КонецЕсли;

			ОбластьСтроки.Параметры.Заполнить(СтруктураДанныхСтроки);
			Сумма    = Сумма    + ВыборкаПоУслугам.Сумма;
			СуммаНДС = СуммаНДС + ВыборкаПоУслугам.СуммаНДС;
			
			ТабличныйДокумент.Вывести(ОбластьСтроки);
		
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");
		СтруктураДанныхВсего = Новый Структура("Всего", ФормированиеПечатныхФорм.ФорматСумм(Сумма));
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхВсего);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ИтогоНДС");
		СтруктураДанныхИтогоНДС = Новый Структура;
		СтруктураДанныхИтогоНДС.Вставить("ВсегоНДС", СуммаНДС);
		Если ЕстьНДС Тогда
			СтруктураДанныхИтогоНДС.Вставить("НДС", ?(ДанныеПечати.ЦенаВключаетНДС, НСтр("ru='В том числе НДС:';uk= 'У тому числі ПДВ:'", КодЯзыкаПечать), НСтр("ru='Сумма НДС:';uk= 'Сума ПДВ:'", КодЯзыкаПечать)));
			Если Не ДанныеПечати.ЦенаВключаетНДС Тогда
				ОбластьМакета.Параметры.Заполнить(СтруктураДанныхИтогоНДС);
				ТабличныйДокумент.Вывести(ОбластьМакета);
				СтруктураДанныхИтогоНДС.Вставить("НДС", НСтр("ru='Всего с НДС:';uk='Усього з ПДВ:'", КодЯзыкаПечать));
				СтруктураДанныхИтогоНДС.Вставить("ВсегоНДС", Сумма + СуммаНДС);
			КонецЕсли;
		Иначе
			СтруктураДанныхИтогоНДС.Вставить("НДС", НСтр("ru='Без налога (НДС)';uk= 'Без податку (ПДВ)'", КодЯзыкаПечать));
		КонецЕсли;
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхИтогоНДС);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		СуммаКПрописи = Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СуммаНДС);
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		
		ИтоговаяСтрока = НСтр("ru='Всего оказано услуг %КоличествоНаименований%, на сумму %СуммаДокумента% ';uk= 'Всього надано послуг %КоличествоНаименований%, на суму %СуммаДокумента% '", КодЯзыкаПечать);
		ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%КоличествоНаименований%", НомерСтроки);
		ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%СуммаДокумента%", ФормированиеПечатныхФорм.ФорматСумм(СуммаКПрописи, ДанныеПечати.Валюта));
		
		СтруктураДанныхСуммаПрописью = Новый Структура;
		СтруктураДанныхСуммаПрописью.Вставить("ИтоговаяСтрока", ИтоговаяСтрока);
		СтруктураДанныхСуммаПрописью.Вставить("СуммаПрописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаКПрописи, ДанныеПечати.Валюта,,КодЯзыкаПечать));
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхСуммаПрописью);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		Если ЗначениеЗаполнено(ДанныеПечати.ДополнительнаяИнформация) Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("ДополнительнаяИнформация");
			ОбластьМакета.Параметры.ДополнительнаяИнформация = ДанныеПечати.ДополнительнаяИнформация;
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		Если ЗначениеЗаполнено(ДанныеПечати.МестоСоставленияДокумента) Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("МестоСоставления");
			ОбластьМакета.Параметры.МестоСоставления = СокрЛП(ДанныеПечати.МестоСоставленияДокумента);
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Заполнить(СведенияОбОтветсвенныхЛицах);
		ОбластьМакета.Параметры.Дата                    = ДанныеПечати.Дата;
		ОбластьМакета.Параметры.РеквизитыПоставщика     = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,/,КодПоЕДРПОУ,КодПоДРФО,Телефоны,/,ИНН,НомерСвидетельства,/,НомерСчета,Банк,МФО,/,ЮридическийАдрес,/,ИнформацияОСтатусеПлательщикаНалогов",,КодЯзыкаПечать);
		ОбластьМакета.Параметры.РеквизитыПокупателя     = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование,/,КодПоЕДРПОУ,КодПоДРФО,Телефоны,/,ИНН,НомерСвидетельства,/,НомерСчета,Банк,МФО,/,ЮридическийАдрес,/,ИнформацияОСтатусеПлательщикаНалогов",,КодЯзыкаПечать);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выведем нужное количество экземпляров (при печати комплектов)
		Если КомплектыПечати <> Неопределено И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено И КомплектПечатиПоСсылке.Экземпляров > 1 Тогда
			ОбластьКопирования = ТабличныйДокумент.ПолучитьОбласть(НомерСтрокиНачало,,ТабличныйДокумент.ВысотаТаблицы);
			Для Итератор = 2 По КомплектПечатиПоСсылке.Экземпляров Цикл
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабличныйДокумент.Вывести(ОбластьКопирования);
			КонецЦикла;
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ПечатьWord

Функция ПолучитьДанныеПечати(знач МассивДокументов, знач МассивИменМакетов, ПараметрыВывода) Экспорт
	
	ДанныеПоВсемОбъектам = Новый Соответствие;
		
	СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивДокументов);
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);		
		
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыАктОбОказанииУслуг(Неопределено, МассивДокументов);	
		
		ПолучитьДанныеОбъектаПоМакетам(ДанныеПоВсемОбъектам, ДанныеДляПечати, МассивИменМакетов, ПараметрыВывода);		
	КонецЦикла;
		
	Возврат Новый Структура("Данные,Макеты",
				ДанныеПоВсемОбъектам,
				ПолучитьМакетыИОписанияСекций(МассивИменМакетов, ПараметрыВывода));
	
КонецФункции

Процедура ПолучитьДанныеОбъектаПоМакетам(ДанныеПоВсемОбъектам, ДанныеДляПечати, знач МассивИменМакетов, ПараметрыВывода) Экспорт
	
	ДанныеПечати = ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ДанныеПечати.Следующий() Цикл
		ДанныеОбъектаПоМакетам = Новый Структура;
		// Найдем в выборке услуги по текущему документу
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		НайденСледующий = ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
		// Если в документе пустая табличная часть услуги - перейдем к следующему документу
		Если НайденСледующий Тогда
			ВыборкаПоУслугам = ВыборкаПоДокументам.Выбрать();
		Иначе
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='В документе %1 отсутствуют услуги. Печать акта об оказании услуг не требуется.';uk='У документі %1 відсутні послуги. Друк акту про надання послуг не потрібний.'"),
				ДанныеПечати.Ссылка
				);
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ДанныеПечати.Ссылка
			);
			
			Продолжить;
		КонецЕсли;

		ДанныеОбъекта = ПолучитьДанныеОбъектаПоВыборке(ДанныеПечати, ВыборкаПоУслугам, ПараметрыВывода);
		Для Каждого ИмяМакета Из МассивИменМакетов Цикл
			ДанныеОбъектаПоМакетам.Вставить(ИмяМакета, ДанныеОбъекта);
		КонецЦикла;
		ДанныеПоВсемОбъектам.Вставить(ДанныеПечати.Ссылка, ДанныеОбъектаПоМакетам);
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьМакетыИОписанияСекций(знач МассивИменМакетов, ПараметрыВывода) Экспорт
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;	
	
	ОписаниеСекций = Новый Структура;
	ДвоичныеДанныеМакетов = Новый Структура;
	
	Для Каждого ИмяМакета Из МассивИменМакетов Цикл
		
		Макет = Неопределено;
		ОписаниеСекцийМакета = Неопределено;
		
		Если ИмяМакета = "ПФ_DOC_Акт" Тогда
			ОписаниеСекцийМакета = ПолучитьОписаниеОбластейАктВыполненныхРабот();
			Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьАктОбОказанииУслуг.ПФ_DOC_Акт", КодЯзыкаПечать);
		КонецЕсли;
		
		Если ОписаниеСекцийМакета <> Неопределено И Макет <> Неопределено Тогда
			
			ОписаниеСекций.Вставить(ИмяМакета, ОписаниеСекцийМакета);
			ДвоичныеДанныеМакетов.Вставить(ИмяМакета, Макет);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Новый Структура(
						"ОписаниеСекций,ДвоичныеДанныеМакетов",
						ОписаниеСекций,
						ДвоичныеДанныеМакетов
					);
	
КонецФункции
				
Функция ПолучитьДанныеОбъектаПоВыборке(ДанныеПечати, ВыборкаПоУслугам, ПараметрыВывода)
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;	
	
	ДанныеОбъекта = Новый Структура;
	
	ДанныеОбъекта.Вставить("ТекстЗаголовка", ПолучитьТекстЗаголовка(ДанныеПечати, КодЯзыкаПечать));
	
	СведенияОПоставщике = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
		ДанныеПечати.Организация, 
		ДанныеПечати.Дата,
		,
		ДанныеПечати.БанковскийСчетОрганизации
	);
	СведенияОПокупателе 	 = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(
		ДанныеПечати.Контрагент,
		ДанныеПечати.Дата,
		,
		ДанныеПечати.БанковскийСчетКонтрагента
	);
	
	ЗаголовокСкидки = ФормированиеПечатныхФорм.НужноВыводитьСкидки(ВыборкаПоУслугам, Истина, КодЯзыкаПечать);
	ЗаголовкиДляСуммовыхПоказателей = ФормированиеПечатныхФорм.СформироватьЗаголовкиДляСуммовыхПоказателей(ДанныеПечати, КодЯзыкаПечать);
	
	СведенияОбОтветсвенныхЛицах = ФормированиеПечатныхФорм.СведенияОбОтветсвенныхЛицах(ДанныеПечати, КодЯзыкаПечать);			
	
	ДанныеОбъекта.Вставить("Дата",                            Формат(ДанныеПечати.Дата, "ДФ=dd.MM.yyyy"));
	
	ДанныеОбъекта.Вставить("ДополнительнаяИнформацияШапки",   ДанныеПечати.ДополнительнаяИнформацияШапки);
	ДанныеОбъекта.Вставить("ДополнительнаяИнформация",        ДанныеПечати.ДополнительнаяИнформация);
		
	ДанныеОбъекта.Вставить("РуководительПоставщика",          ДанныеПечати.РуководительОрганизации);
	ДанныеОбъекта.Вставить("ДолжностьРуководителяПоставщика", ДанныеПечати.ДолжностьРуководителяОрганизации);
	ДанныеОбъекта.Вставить("ПредставлениеПоставщика",         ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,",,КодЯзыкаПечать));
	
	ДанныеОбъекта.Вставить("РуководительПокупателя",          ДанныеПечати.РуководительКонтрагента);
	ДанныеОбъекта.Вставить("ДолжностьРуководителяПокупателя", ?(ЗначениеЗаполнено(ДанныеПечати.ДолжностьРуководителяКонтрагента), ДанныеПечати.ДолжностьРуководителяКонтрагента, ?(ПартнерыИКонтрагенты.ЭтоЮрЛицо(СведенияОПокупателе.ЮрФизЛицо), "Директор", "")));
	ДанныеОбъекта.Вставить("ПредставлениеПокупателя",         ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование,",,КодЯзыкаПечать));
	
	ДанныеОбъекта.Вставить("ПредставительПоставщика",         СведенияОбОтветсвенныхЛицах.ДолжностьИФИОПредставителяОрганизации);
	ДанныеОбъекта.Вставить("ПредставительПокупателя",         СведенияОбОтветсвенныхЛицах.ДолжностьИФИОПредставителяКонтрагента);
	
	ДанныеОбъекта.Вставить("УчитыватьНДС",                    ДанныеПечати.УчитыватьНДС);
	ДанныеОбъекта.Вставить("ЕстьСкидки",                      ЗаголовокСкидки.ЕстьСкидки);
	ДанныеОбъекта.Вставить("ЗаголовокСкидки",                 СтрЗаменить(ЗаголовокСкидки.Скидка, Символы.ПС,""));
	ДанныеОбъекта.Вставить("ЗаголовокСуммаБезСкидки",         СтрЗаменить(ЗаголовокСкидки.СуммаСкидки, Символы.ПС,""));
	ДанныеОбъекта.Вставить("ТолькоНаценка",                   СтрЗаменить(ЗаголовокСкидки.ТолькоНаценка, Символы.ПС,""));
	ДанныеОбъекта.Вставить("ЦенаВключаетНДС",                 ДанныеПечати.ЦенаВключаетНДС);
	ДанныеОбъекта.Вставить("Цена",                            ЗаголовкиДляСуммовыхПоказателей.Цена);
	ДанныеОбъекта.Вставить("Сумма",                           ЗаголовкиДляСуммовыхПоказателей.Сумма);

	
	СписокДополнительныхПараметров = "ДоговорНаименованиеДляПечати,";	
	Если ДанныеПечати.ПечататьЗаказ Тогда
		СписокДополнительныхПараметров = СписокДополнительныхПараметров + "Заказ,";
	КонецЕсли;
	МассивСтруктурСтрок = ФормированиеПечатныхФорм.ДополнительнаяИнформация(ДанныеПечати, СписокДополнительныхПараметров, КодЯзыкаПечать);
	Если МассивСтруктурСтрок.Количество() = 0 Тогда
		// Если нет ни договора ни заказа, выводим торговое соглашение (типовое/индивидуалоьное)
		СписокДополнительныхПараметров = "Соглашение,";	
		МассивСтруктурСтрок = ФормированиеПечатныхФорм.ДополнительнаяИнформация(ДанныеПечати, СписокДополнительныхПараметров, КодЯзыкаПечать);			
	КонецЕсли;
	
	ДанныеОбъекта.Вставить("ДопИнформация", Новый Массив);
	Для каждого СтруктураСтроки Из МассивСтруктурСтрок Цикл
		СтрокаТаблицыДопИнформация = Новый Структура;
		СтрокаТаблицыДопИнформация.Вставить("НазваниеПараметра", СтруктураСтроки.НазваниеПараметра);
		СтрокаТаблицыДопИнформация.Вставить("ЗначениеПараметра", СтруктураСтроки.ЗначениеПараметра);
		ДанныеОбъекта.ДопИнформация.Добавить(СтрокаТаблицыДопИнформация);
	КонецЦикла;
	
	Если ДанныеПечати.УчитыватьНДС Тогда
		ДанныеОбъекта.Вставить("НДС", ?(ДанныеПечати.ЦенаВключаетНДС, НСтр("ru='В том числе НДС:';uk= 'У тому числі ПДВ:'", КодЯзыкаПечать), НСтр("ru='Сумма НДС:';uk= 'Сума ПДВ:'", КодЯзыкаПечать)));
	Иначе
		ДанныеОбъекта.Вставить("НДС", НСтр("ru='Без налога (НДС)';uk= 'Без податку (ПДВ)'", КодЯзыкаПечать));
	КонецЕсли;

	ДанныеОбъекта.Вставить("Услуги", Новый Массив);
	
	Сумма    	= 0;
	СуммаНДС 	= 0;
	НомерСтроки = 0;
	
	ВыборкаПоУслугам.Сбросить();
	
	Пока ВыборкаПоУслугам.Следующий() Цикл
		
		НомерСтроки = НомерСтроки + 1;
		СтрокаТаблицыУслуги = Новый Структура;
		СтрокаТаблицыУслуги.Вставить("НомерСтроки",      НомерСтроки);
		СтрокаТаблицыУслуги.Вставить("Товар",          	 ВыборкаПоУслугам.УслугаНаименованиеПолное);
		СтрокаТаблицыУслуги.Вставить("Количество",       ВыборкаПоУслугам.Количество);
		СтрокаТаблицыУслуги.Вставить("ЕдиницаИзмерения", ВыборкаПоУслугам.ЕдиницаИзмерения);
		СтрокаТаблицыУслуги.Вставить("Цена",             Формат(ВыборкаПоУслугам.Цена,"ЧДЦ=2; ЧРД=,"));
		СтрокаТаблицыУслуги.Вставить("Скидка",           Формат(ВыборкаПоУслугам.СуммаСкидки,"ЧДЦ=2; ЧРД=,"));
		СтрокаТаблицыУслуги.Вставить("Сумма",            Формат(ВыборкаПоУслугам.Сумма,"ЧДЦ=2; ЧРД=,"));
		СтрокаТаблицыУслуги.Вставить("СтавкаНДС",        Локализация.ПолучитьЛокализованноеПредставление(ВыборкаПоУслугам.СтавкаНДС, КодЯзыкаПечать));
		СтрокаТаблицыУслуги.Вставить("СуммаНДС",         Формат(ВыборкаПоУслугам.СуммаНДС,"ЧДЦ=2; ЧРД=,; ЧН="));
		СтрокаТаблицыУслуги.Вставить("СуммаБезСкидки",   Формат(ВыборкаПоУслугам.СуммаБезСкидки,"ЧДЦ=2; ЧРД=,"));
		Если ДанныеОбъекта.ЕстьСкидки Тогда
			СтрокаТаблицыУслуги.Скидка = ?(ДанныеОбъекта.ТолькоНаценка,- СтрокаТаблицыУслуги.Скидка,СтрокаТаблицыУслуги.Скидка);
			СтрокаТаблицыУслуги.Скидка = Формат(СтрокаТаблицыУслуги.Скидка,"ЧДЦ=2; ЧРД=,");
		КонецЕсли; 
		ДанныеОбъекта.Услуги.Добавить(СтрокаТаблицыУслуги);
		
		Сумма    = Сумма + ВыборкаПоУслугам.Сумма;
		СуммаНДС = СуммаНДС + ВыборкаПоУслугам.СуммаНДС;
		
	КонецЦикла;
	
	ДанныеОбъекта.Вставить("Всего",		Формат(Сумма,"ЧДЦ=2; ЧРД=,; ЧН="));
	ДанныеОбъекта.Вставить("ВсегоНДС",	Формат(СуммаНДС,"ЧДЦ=2; ЧРД=,; ЧН="));
	Если ДанныеПечати.ЦенаВключаетНДС Тогда
		ДанныеОбъекта.Вставить("ВсегоСНДС",	Формат(Сумма,"ЧДЦ=2; ЧРД=,; ЧН="));
	Иначе
		ДанныеОбъекта.Вставить("ВсегоСНДС",	Формат(Сумма+СуммаНДС,"ЧДЦ=2; ЧРД=,; ЧН="));		
	КонецЕсли;

	СуммаКПрописи = Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СуммаНДС);
	
	ИтоговаяСтрока = НСтр("ru='Всего оказано услуг %КоличествоНаименований%, на сумму %СуммаДокумента% ';uk= 'Всього надано послуг %КоличествоНаименований%, на суму %СуммаДокумента% '", КодЯзыкаПечать);
	ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%КоличествоНаименований%", НомерСтроки);
	ИтоговаяСтрока = СтрЗаменить(ИтоговаяСтрока, "%СуммаДокумента%", ФормированиеПечатныхФорм.ФорматСумм(СуммаКПрописи, ДанныеПечати.Валюта));
	
	ДанныеОбъекта.Вставить("ИтоговаяСтрока", ИтоговаяСтрока);
	ДанныеОбъекта.Вставить("СуммаПрописью",  РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаКПрописи, ДанныеПечати.Валюта, , КодЯзыкаПечать));
	
	ДанныеОбъекта.Вставить("МестоСоставления", СокрЛП(ДанныеПечати.МестоСоставленияДокумента));
	
	ДанныеОбъекта.Вставить("РеквизитыПоставщика", ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,КодПоЕДРПОУ,КодПоДРФО,Телефоны,ИНН,НомерСвидетельства,НомерСчета,Банк,МФО,ЮридическийАдрес,ИнформацияОСтатусеПлательщикаНалогов",,КодЯзыкаПечать));
	ДанныеОбъекта.Вставить("РеквизитыПокупателя", ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование,КодПоЕДРПОУ,КодПоДРФО,Телефоны,ИНН,НомерСвидетельства,НомерСчета,Банк,МФО,ЮридическийАдрес,ИнформацияОСтатусеПлательщикаНалогов",,КодЯзыкаПечать));
	
	ДанныеОбъекта.Вставить("ПоказыватьНДС",            Константы.ВыводитьДопКолонкиНДС.Получить());	
	
	Возврат ДанныеОбъекта;
	
КонецФункции

Функция ПолучитьОписаниеОбластейАктВыполненныхРабот()

	Секции = Новый Структура;
	
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "Шапка",							"Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "Заголовок",						"Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "ДополнительнаяИнформацияШапки",  "Список");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "ТекстАктаНачало",				"Список");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "ДопИнформация",					"СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "ТекстАктаКонец",					"Список");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "ШапкаТаблицы",					"СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "Строка",							"СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "ШапкаТаблицыСоСкидкой",			"СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "СтрокаСоСкидкой",				"СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "ШапкаТаблицыСоСкидкойСНДС",		"СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "СтрокаСоСкидкойСНДС",			"СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "ШапкаТаблицыСНДС",				"СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "СтрокаСНДС",						"СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "Итого",							"СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "ИтогоНДС",						"СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "ИтогоСНДС",						"СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "СуммаПрописью",					"Список");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "ДополнительнаяИнформация",       "Список");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "Подвал",                         "Список");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "МестоСоставления",				"Список");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "Подписи",						"Список");
		
	Возврат Секции;

КонецФункции				

Функция ПолучитьТекстЗаголовка(ДанныеПечати, КодЯзыка)
	
	// Печатное название документов с различными нумераторами должно различаться
	Если ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.ОтчетКомитенту") Тогда
		НазваниеДокумента = НСтр("ru='Акт об оказании услуг комиссии';uk='Акт про надання послуг комісії'", КодЯзыка);
		
	ИначеЕсли ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями") Тогда
		НазваниеДокумента = НСтр("ru='Акт оказания услуг комиссии';uk='Акт надання послуг комісії'", КодЯзыка);
		
	ИначеЕсли ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.РеализацияУслугПрочихАктивов") Тогда
		НазваниеДокумента = НСтр("ru='Акт оказания услуг';uk='Акт надання послуг'", КодЯзыка);
		
	ИначеЕсли ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.АктВыполненныхРабот") Тогда
		НазваниеДокумента = НСтр("ru='АКТ';uk='АКТ'", КодЯзыка);
		
	Иначе
		// РеализацияТоваровУслуг и ПередачаТоваровМеждуОрганизациями
		НазваниеДокумента = НСтр("ru='Акт об оказании услуг';uk='Акт про надання послуг'", КодЯзыка);
		
	КонецЕсли;
	
	Возврат ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(ДанныеПечати, НазваниеДокумента, КодЯзыка);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
