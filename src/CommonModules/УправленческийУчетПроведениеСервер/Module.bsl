////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции формирования движений по 
// оборотным регистрам управленческого учета
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ПроцедурыИФункцииФормированияДвиженийВРежимеОнлайн

// Процедура формирования движений по регистру "Движения Денежные средства - Контрагент".
//
// Параметры:
//	ДополнительныеСвойства - Структура - дополнительные свойства документа.
//	Движения - КоллекцияДвижений - коллекция наборов записей движений документа.
//	Отказ - Булево - Признак отказа от проведения документа.
//
Процедура ОтразитьДвиженияДенежныеСредстваКонтрагент(ДополнительныеСвойства, Движения, Отказ) Экспорт

	ТаблицаДвиженияДенежныеСредстваКонтрагент = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДвиженияДенежныеСредстваКонтрагент;
	
	Если Отказ ИЛИ ТаблицаДвиженияДенежныеСредстваКонтрагент.Количество() = 0 Тогда
	
		Возврат;
		
	КонецЕсли;
	
	ДвиженияДенежныеСредстваКонтрагент = Движения.ДвиженияДенежныеСредстваКонтрагент;
	ДвиженияДенежныеСредстваКонтрагент.Записывать = Истина;
	ДвиженияДенежныеСредстваКонтрагент.Загрузить(ТаблицаДвиженияДенежныеСредстваКонтрагент);
	
КонецПроцедуры

// Процедура формирования движений по регистру "Движения Денежные средства - Денежные средства".
//
// Параметры:
//	ДополнительныеСвойства - Структура - дополнительные свойства документа.
//	Движения - КоллекцияДвижений - коллекция наборов записей движений документа.
//	Отказ - Булево - Признак отказа от проведения документа.
//
Процедура ОтразитьДвиженияДенежныхСредств(ДополнительныеСвойства, Движения, Отказ) Экспорт

	ТаблицаДвиженияДенежныхСредств = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДвиженияДенежныхСредств;
	
	Если Отказ ИЛИ ТаблицаДвиженияДенежныхСредств.Количество() = 0 Тогда
	
		Возврат;
		
	КонецЕсли;
	
	ДвиженияДенежныхСредств = Движения.ДвиженияДенежныхСредств;
	ДвиженияДенежныхСредств.Записывать = Истина;
	ДвиженияДенежныхСредств.Загрузить(ТаблицаДвиженияДенежныхСредств);
	
КонецПроцедуры

// Процедура формирования движений по регистру "Движения Денежные средства - Доходы/Расходы".
//
// Параметры:
//	ДополнительныеСвойства - Структура - дополнительные свойства документа.
//	Движения - КоллекцияДвижений - коллекция наборов записей движений документа.
//	Отказ - Булево - Признак отказа от проведения документа.
//
Процедура ОтразитьДвиженияДенежныеСредстваДоходыРасходы(ДополнительныеСвойства, Движения, Отказ) Экспорт

	ТаблицаДвиженияДенежныеСредстваДоходыРасходы = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДвиженияДенежныеСредстваДоходыРасходы;
	
	Если Отказ ИЛИ ТаблицаДвиженияДенежныеСредстваДоходыРасходы.Количество() = 0 Тогда
	
		Возврат;
		
	КонецЕсли;
	
	ДвиженияДенежныеСредстваДоходыРасходы = Движения.ДвиженияДенежныеСредстваДоходыРасходы;
	ДвиженияДенежныеСредстваДоходыРасходы.Записывать = Истина;
	ДвиженияДенежныеСредстваДоходыРасходы.Загрузить(ТаблицаДвиженияДенежныеСредстваДоходыРасходы);
	
КонецПроцедуры

// Процедура формирования движений по регистру "Закупки".
//
// Параметры:
//	ДополнительныеСвойства - Структура - дополнительные свойства документа.
//	Движения - КоллекцияДвижений - коллекция наборов записей движений документа.
//	Отказ - Булево - Признак отказа от проведения документа.
//
Процедура ОтразитьЗакупки(ДополнительныеСвойства, Движения, Отказ) Экспорт

	ТаблицаЗакупки = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаЗакупки;
	
	Если Отказ ИЛИ ТаблицаЗакупки.Количество() = 0 Тогда
	
		Возврат;
		
	КонецЕсли;
	
	Закупки = Движения.Закупки;
	Закупки.Записывать = Истина;
	Закупки.Загрузить(ТаблицаЗакупки);
	
КонецПроцедуры

// Процедура формирования движений по регистру "Движения Доходы\Расходы - Прочие активы/пассивы".
//
// Параметры:
//	ДополнительныеСвойства - Структура - дополнительные свойства документа.
//	Движения - КоллекцияДвижений - коллекция наборов записей движений документа.
//	Отказ - Булево - Признак отказа от проведения документа.
//
Процедура ОтразитьДвиженияДоходыРасходыПрочиеАктивыПассивы(ДополнительныеСвойства, Движения, Отказ) Экспорт

	ТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы;
	
	Если Отказ ИЛИ ТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы.Количество() = 0 Тогда
	
		Возврат;
		
	КонецЕсли;
	
	ДвиженияДоходыРасходыПрочиеАктивыПассивы = Движения.ДвиженияДоходыРасходыПрочиеАктивыПассивы;
	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Записывать = Истина;
	ДвиженияДоходыРасходыПрочиеАктивыПассивы.Загрузить(ТаблицаДвиженияДоходыРасходыПрочиеАктивыПассивы);
	
КонецПроцедуры

// Процедура формирования движений по регистру "Движения Номенклатура - Доходы\Расходы".
//
// Параметры:
//	ДополнительныеСвойства - Структура - дополнительные свойства документа.
//	Движения - КоллекцияДвижений - коллекция наборов записей движений документа.
//	Отказ - Булево - Признак отказа от проведения документа.
//
Процедура ОтразитьДвиженияНоменклатураДоходыРасходы(ДополнительныеСвойства, Движения, Отказ) Экспорт

	ТаблицаДвиженияНоменклатураДоходыРасходы = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДвиженияНоменклатураДоходыРасходы;
	
	Если Отказ ИЛИ ТаблицаДвиженияНоменклатураДоходыРасходы.Количество() = 0 Тогда
	
		Возврат;
		
	КонецЕсли;
	
	ДвиженияНоменклатураДоходыРасходы = Движения.ДвиженияНоменклатураДоходыРасходы;
	ДвиженияНоменклатураДоходыРасходы.Записывать = Истина;
	ДвиженияНоменклатураДоходыРасходы.Загрузить(ТаблицаДвиженияНоменклатураДоходыРасходы);
	
КонецПроцедуры

// Процедура формирования движений по регистру "Движения Номенклатура - Номенклатура".
//
// Параметры:
//	ДополнительныеСвойства - Структура - дополнительные свойства документа.
//	Движения - КоллекцияДвижений - коллекция наборов записей движений документа.
//	Отказ - Булево - Признак отказа от проведения документа.
//
Процедура ОтразитьДвиженияНоменклатураНоменклатура(ДополнительныеСвойства, Движения, Отказ) Экспорт

	ТаблицаДвиженияНоменклатураНоменклатура = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДвиженияНоменклатураНоменклатура;
	
	Если Отказ ИЛИ ТаблицаДвиженияНоменклатураНоменклатура.Количество() = 0 Тогда
	
		Возврат;
		
	КонецЕсли;
	
	ДвиженияНоменклатураНоменклатура = Движения.ДвиженияНоменклатураНоменклатура;
	ДвиженияНоменклатураНоменклатура.Записывать = Истина;
	ДвиженияНоменклатураНоменклатура.Загрузить(ТаблицаДвиженияНоменклатураНоменклатура);
	
КонецПроцедуры

// Процедура формирования движений по регистру "Движения Контрагент - Доходы/Расходы".
//
// Параметры:
//	ДополнительныеСвойства - Структура - дополнительные свойства документа.
//	Движения - КоллекцияДвижений - коллекция наборов записей движений документа.
//	Отказ - Булево - Признак отказа от проведения документа.
//
Процедура ОтразитьДвиженияКонтрагентДоходыРасходы(ДополнительныеСвойства, Движения, Отказ) Экспорт

	ТаблицаДвиженияКонтрагентДоходыРасходы = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДвиженияКонтрагентДоходыРасходы;
	
	Если Отказ ИЛИ ТаблицаДвиженияКонтрагентДоходыРасходы.Количество() = 0 Тогда
	
		Возврат;
		
	КонецЕсли;
	
	ДвиженияКонтрагентДоходыРасходы = Движения.ДвиженияКонтрагентДоходыРасходы;
	ДвиженияКонтрагентДоходыРасходы.Записывать = Истина;
	ДвиженияКонтрагентДоходыРасходы.Загрузить(ТаблицаДвиженияКонтрагентДоходыРасходы);
	
КонецПроцедуры

// Процедура формирования движений по регистру "Движения Контрагент - Контрагент".
//
// Параметры:
//	ДополнительныеСвойства - Структура - дополнительные свойства документа.
//	Движения - КоллекцияДвижений - коллекция наборов записей движений документа.
//	Отказ - Булево - Признак отказа от проведения документа.
//
Процедура ОтразитьДвиженияКонтрагентКонтрагент(ДополнительныеСвойства, Движения, Отказ) Экспорт

	ТаблицаДвиженияКонтрагентКонтрагент = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДвиженияКонтрагентКонтрагент;
	
	Если Отказ ИЛИ ТаблицаДвиженияКонтрагентКонтрагент.Количество() = 0 Тогда
	
		Возврат;
		
	КонецЕсли;
	
	ДвиженияКонтрагентКонтрагент = Движения.ДвиженияКонтрагентКонтрагент;
	ДвиженияКонтрагентКонтрагент.Записывать = Истина;
	ДвиженияКонтрагентКонтрагент.Загрузить(ТаблицаДвиженияКонтрагентКонтрагент);
	
КонецПроцедуры

// Процедура формирования движений по регистру "Отражение зарплаты в финансовом учете".
//
// Параметры:
//	ДополнительныеСвойства - Структура - дополнительные свойства документа.
//	Движения - КоллекцияДвижений - коллекция наборов записей движений документа.
//	Отказ - Булево - Признак отказа от проведения документа.
//
Процедура ОтразитьДвиженияОтражениеЗарплатыВФинансовомУчете(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	ТаблицаОтражениеЗарплатыВФинансовомУчете = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаОтражениеЗарплатыВФинансовомУчете;
	
	Если Отказ ИЛИ ТаблицаОтражениеЗарплатыВФинансовомУчете.Количество() = 0 Тогда
		
		Возврат;
		
	КонецЕсли;
	
	НаборЗаписей = Движения.ОтражениеЗарплатыВФинансовомУчете;
	НаборЗаписей.Записывать = Истина;
	НаборЗаписей.Загрузить(ТаблицаОтражениеЗарплатыВФинансовомУчете);
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииФормированияОтложенныхДвижений

// Формирование отложенных движений в регистре "Движения Денежные средства - Контрагент".
//
// Параметры:
//	Документ - ДокументСсылка - документ, для которого необходимо сформировать движения.
//	ТаблицыДляДвижений - Структура - структура таблиц движений.
//
Процедура СформироватьДвиженияДенежныеСредстваКонтрагент(Документ, Период, ТаблицыДляДвижений) Экспорт

	ДанныеДвижений = ДанныеДляФормированияДвиженийДенежныеСредстваКонтрагент(Документ, Период, ТаблицыДляДвижений);
	
	Движения = Новый Структура;
	Движения.Вставить("ДвиженияДенежныеСредстваКонтрагент", РегистрыНакопления.ДвиженияДенежныеСредстваКонтрагент.СоздатьНаборЗаписей());
	Движения.ДвиженияДенежныеСредстваКонтрагент.Отбор.Регистратор.Установить(Документ);
	Движения.ДвиженияДенежныеСредстваКонтрагент.Загрузить(ДанныеДвижений);
	
	ЗаписатьНаборыЗаписей(Движения);

КонецПроцедуры

// Формирование отложенных движений в регистре "Движения Денежные средства - Контрагент" по клиентам.
//
// Параметры:
//	МассивДокументов - Массив - массив документов.
//	ТаблицаРасчетыПоДокументам - ТаблицаЗначений - таблица расчетов с клиентами по документам.
//
Процедура СформироватьДвиженияДенежныеСредстваКонтрагентПоКлиентам(МассивДокументов) Экспорт
	НачатьТранзакцию();
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ПолучитьРасчетыСКлиентами(МенеджерВременныхТаблиц, МассивДокументов);
	ПолучитьДвиженияДенежныеСредстваКонтрагент(МенеджерВременныхТаблиц, МассивДокументов);
	ДанныеДвижений = ДвиженияДенежныеСредстваКонтрагент(МенеджерВременныхТаблиц);
	
	ЗаписатьДвиженияДенежныеСредстваКонтрагент(ДанныеДвижений);
	
	ЗафиксироватьТранзакцию();

КонецПроцедуры

// Формирование отложенных движений в регистре "Движения Денежные средства - Контрагент" по поставщикам.
//
// Параметры:
//	МассивДокументов - Массив - массив документов.
//	ТаблицаРасчетыПоДокументам - ТаблицаЗначений - таблица расчетов с поставщиками по документам.
//
Процедура СформироватьДвиженияДенежныеСредстваКонтрагентПоПоставщикам(МассивДокументов) Экспорт

	НачатьТранзакцию();
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ПолучитьРасчетыСПоставщиками(МенеджерВременныхТаблиц, МассивДокументов);
	ПолучитьДвиженияДенежныеСредстваКонтрагент(МенеджерВременныхТаблиц, МассивДокументов);
	ДанныеДвижений = ДвиженияДенежныеСредстваКонтрагент(МенеджерВременныхТаблиц);
	
	ЗаписатьДвиженияДенежныеСредстваКонтрагент(ДанныеДвижений);
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

// Формирование отложенных движений в регистре "Движения Денежные средства - Контрагент" по поставщикам.
//
// Параметры:
//	МассивДокументов - Массив - массив документов для которых неоходимо сформировать движения
//
Процедура СформироватьДвиженияКонтрагентКонтрагент(МассивДокументовРасчетов) Экспорт
	
	НачатьТранзакцию();
	
	Попытка
		
		// Проведем взаимозачет кредиторской задолжености
		Запрос = Новый Запрос(ТекстЗапросаРасчетыСПартнерами());
		Запрос.УстановитьПараметр("МассивДокументов", МассивДокументовРасчетов);
		РасчетыСПартнерами = Запрос.ВыполнитьПакет();
		ДокументыДебета  = РасчетыСПартнерами[2].Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
		ДокументыКредита = РасчетыСПартнерами[3].Выгрузить();
		ТаблицаДвижений = РегистрыНакопления.ДвиженияКонтрагентКонтрагент.СоздатьНаборЗаписей().ВыгрузитьКолонки();
		// Распределим дебиторскую задолженность по кредиторской
		Отбор = Новый Структура("Регистратор,ГоловнаяОрганизация");
		Для Каждого Документ Из ДокументыДебета.Строки Цикл
			Взаимозачет = ТипЗнч(Документ.Регистратор) = Тип("ДокументСсылка.ВзаимозачетЗадолженности");
			Для Каждого Дебет Из Документ.Строки Цикл
				ЗаполнитьЗначенияСвойств(Отбор, Дебет);
				Если НЕ Взаимозачет Тогда
					Отбор.Вставить("ВладелецОбъектаРасчета", Дебет.ВладелецОбъектаРасчета);
				КонецЕсли;
				СтрокиКредита = ДокументыКредита.НайтиСтроки(Отбор);
				Если ЗначениеЗаполнено(СтрокиКредита) Тогда
					ВзаиморасчетыСервер.ПровестиВзаимозачет(Дебет.Строки, СтрокиКредита, ТаблицаДвижений);
				КонецЕсли;
			КонецЦикла;// по организациям
		КонецЦикла;// по регистраторам
		
		// Подготовим наборы для записи
		Если ТаблицаДвижений.Количество() > 0 Тогда
			Запрос = Новый Запрос(ТекстЗапросаДвиженияКонтрагентКонтрагент());
			Запрос.УстановитьПараметр("ТаблицаДвижений", ТаблицаДвижений);
			Запрос.УстановитьПараметр("МассивДокументов", МассивДокументовРасчетов);
			ВыборкаПоДокументам = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоДокументам.Следующий() Цикл
				НаборЗаписей = РегистрыНакопления.ДвиженияКонтрагентКонтрагент.СоздатьНаборЗаписей();
				НаборЗаписей.ДополнительныеСвойства.Вставить("ОтложенноеПроведение");
				НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаПоДокументам.Регистратор);
				Выборка = ВыборкаПоДокументам.Выбрать();
				Пока Выборка.Следующий() Цикл
					ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
				КонецЦикла;
				НаборЗаписей.Записать();
			КонецЦикла;
		КонецЕсли;
	
	Исключение
			
		ОтменитьТранзакцию();
		
		ТекстСообщения = НСтр("ru='Не удалось выполнить отложенное проведение по регистру ""Движения Контрагент - Контрагент""
                                    |по причине: %Причина%'
                                    |;uk='Не вдалося виконати відкладене проведення по регістру ""Рухи Контрагент - Контрагент""
                                    |через: %Причина%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации(
			НСтр("ru='Отложенное проведение взаимозачета';uk='Відкладене проведення взаємозаліку'"),
			УровеньЖурналаРегистрации.Ошибка,
			,
			,
			ТекстСообщения);
		Возврат;
	КонецПопытки;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

Функция ТекстЗапросаРасчетыСПартнерами()
	
	Возврат
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движения.Регистратор КАК Ссылка
	|ПОМЕСТИТЬ втРегистраторы
	|ИЗ
	|	РегистрНакопления.ДвиженияКонтрагентКонтрагент КАК Движения
	|ГДЕ
	|	Движения.Регистратор В (&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыСПоставщиками.Период,
	|	РасчетыСПоставщиками.ВидДвижения КАК ВидДвиженияРег,
	|	ВЫБОР
	|		КОГДА (РасчетыСПоставщиками.Долг < 0 ИЛИ РасчетыСПоставщиками.Предоплата + РасчетыСПоставщиками.КВозврату < 0)
	|			И РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		КОГДА (РасчетыСПоставщиками.Долг < 0 ИЛИ РасчетыСПоставщиками.Предоплата + РасчетыСПоставщиками.КВозврату < 0)
	|			И РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ
	|			РасчетыСПоставщиками.ВидДвижения
	|	КОНЕЦ КАК ВидДвижения,
	|	РасчетыСПоставщиками.Регистратор КАК Регистратор,
	|	КлючиАналитики.Организация,
	|	КлючиАналитики.Партнер,
	|	КлючиАналитики.Контрагент КАК Контрагент,
	|	КлючиАналитики.Договор КАК Договор,
	|	РасчетыСПоставщиками.ЗаказПоставщику КАК ОбъектРасчетов,
	|	РасчетыСПоставщиками.Валюта,
	|	СУММА(ВЫБОР КОГДА РасчетыСПоставщиками.Долг <> 0
	|		ТОГДА ВЫБОР КОГДА РасчетыСПоставщиками.Долг < 0 ТОГДА -РасчетыСПоставщиками.Долг ИНАЧЕ РасчетыСПоставщиками.Долг КОНЕЦ
	|		ИНАЧЕ ВЫБОР КОГДА РасчетыСПоставщиками.Предоплата + РасчетыСПоставщиками.КВозврату < 0 ТОГДА -(РасчетыСПоставщиками.Предоплата + РасчетыСПоставщиками.КВозврату) ИНАЧЕ РасчетыСПоставщиками.Предоплата + РасчетыСПоставщиками.КВозврату КОНЕЦ
	|	КОНЕЦ) КАК Сумма,
	|	СУММА(ВЫБОР КОГДА РасчетыСПоставщиками.ДолгУпр <> 0
	|		ТОГДА ВЫБОР КОГДА РасчетыСПоставщиками.ДолгУпр < 0 ТОГДА -РасчетыСПоставщиками.ДолгУпр ИНАЧЕ РасчетыСПоставщиками.ДолгУпр КОНЕЦ
	|		ИНАЧЕ ВЫБОР КОГДА РасчетыСПоставщиками.ПредоплатаУпр < 0 ТОГДА -РасчетыСПоставщиками.ПредоплатаУпр ИНАЧЕ РасчетыСПоставщиками.ПредоплатаУпр КОНЕЦ
	|	КОНЕЦ) КАК СуммаУпр,
	|	СУММА(ВЫБОР КОГДА РасчетыСПоставщиками.ДолгРегл <> 0
	|		ТОГДА ВЫБОР КОГДА РасчетыСПоставщиками.ДолгРегл < 0 ТОГДА -РасчетыСПоставщиками.ДолгРегл ИНАЧЕ РасчетыСПоставщиками.ДолгРегл КОНЕЦ
	|		ИНАЧЕ ВЫБОР КОГДА РасчетыСПоставщиками.ПредоплатаРегл < 0 ТОГДА -РасчетыСПоставщиками.ПредоплатаРегл ИНАЧЕ РасчетыСПоставщиками.ПредоплатаРегл КОНЕЦ
	|	КОНЕЦ) КАК СуммаРегл,
	|
	|	ВЫБОР КОГДА РасчетыСПоставщиками.ДолгРегл <> 0
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыСуммЗадолженности.ДолгПоставщику)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыСуммЗадолженности.АвансВыданный)
	|	КОНЕЦ КАК ТипСуммы,
	|
	|	ВЫБОР КОГДА КлючиАналитики.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НашеПредприятие,
	|	ВЫБОР КОГДА РасчетыСПоставщиками.ДолгРегл < 0 ИЛИ РасчетыСПоставщиками.ПредоплатаРегл < 0
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Сторно,
	|	РасчетыСПоставщиками.ХозяйственнаяОперация КАК ХозОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности) КАК ХозяйственнаяОперация
	|	
	|ПОМЕСТИТЬ РасчетыСПартнерами
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК РасчетыСПоставщиками
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ  втРегистраторы КАК Т
	|			ПО РасчетыСПоставщиками.Регистратор = Т.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК КлючиАналитики
	|			ПО РасчетыСПоставщиками.АналитикаУчетаПоПартнерам = КлючиАналитики.КлючАналитики
	|ГДЕ
	|	НЕ РасчетыСПоставщиками.ХозяйственнаяОперация В 
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеНедостачЗаСчетПоставщикаПриПоступленииТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеНедостачЗаСчетСтороннейКомпанииПриПоступленииТоваров))
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСПоставщиками.Период,
	|	РасчетыСПоставщиками.ВидДвижения,
	|	ВЫБОР
	|		КОГДА (РасчетыСПоставщиками.Долг < 0 ИЛИ РасчетыСПоставщиками.Предоплата + РасчетыСПоставщиками.КВозврату < 0)
	|			И РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		КОГДА (РасчетыСПоставщиками.Долг < 0 ИЛИ РасчетыСПоставщиками.Предоплата + РасчетыСПоставщиками.КВозврату < 0)
	|			И РасчетыСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ
	|			РасчетыСПоставщиками.ВидДвижения
	|	КОНЕЦ,
	|	РасчетыСПоставщиками.Регистратор,
	|	КлючиАналитики.Организация,
	|	КлючиАналитики.Партнер,
	|	КлючиАналитики.Контрагент,
	|	КлючиАналитики.Договор,
	|	РасчетыСПоставщиками.ЗаказПоставщику,
	|	РасчетыСПоставщиками.Валюта,
	|	ВЫБОР КОГДА РасчетыСПоставщиками.ДолгРегл <> 0
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыСуммЗадолженности.ДолгПоставщику)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыСуммЗадолженности.АвансВыданный)
	|	КОНЕЦ,
	|	ВЫБОР КОГДА КлючиАналитики.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР КОГДА РасчетыСПоставщиками.ДолгРегл < 0 ИЛИ РасчетыСПоставщиками.ПредоплатаРегл < 0
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	РасчетыСПоставщиками.ХозяйственнаяОперация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасчетыСКлиентами.Период,
	|	РасчетыСКлиентами.ВидДвижения КАК ВидДвиженияРег,
	|	ВЫБОР
	|		КОГДА (РасчетыСКлиентами.Долг < 0 ИЛИ РасчетыСКлиентами.Предоплата + РасчетыСКлиентами.КВозврату < 0)
	|			И РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		КОГДА (РасчетыСКлиентами.Долг < 0 ИЛИ РасчетыСКлиентами.Предоплата + РасчетыСКлиентами.КВозврату < 0)
	|			И РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ
	|			РасчетыСКлиентами.ВидДвижения
	|	КОНЕЦ КАК ВидДвижения,
	|	РасчетыСКлиентами.Регистратор КАК Регистратор,
	|	КлючиАналитики.Организация,
	|	КлючиАналитики.Партнер,
	|	КлючиАналитики.Контрагент КАК Контрагент,
	|	КлючиАналитики.Договор КАК Договор,
	|	РасчетыСКлиентами.ЗаказКлиента КАК ОбъектРасчетов,
	|	РасчетыСКлиентами.Валюта,
	|	СУММА(ВЫБОР КОГДА РасчетыСКлиентами.Долг <> 0
	|		ТОГДА ВЫБОР КОГДА РасчетыСКлиентами.Долг < 0 ТОГДА -РасчетыСКлиентами.Долг ИНАЧЕ РасчетыСКлиентами.Долг КОНЕЦ
	|		ИНАЧЕ ВЫБОР КОГДА РасчетыСКлиентами.Предоплата + РасчетыСКлиентами.КВозврату < 0 ТОГДА -(РасчетыСКлиентами.Предоплата + РасчетыСКлиентами.КВозврату) ИНАЧЕ РасчетыСКлиентами.Предоплата + РасчетыСКлиентами.КВозврату КОНЕЦ
	|	КОНЕЦ) КАК Сумма,
	|	СУММА(ВЫБОР КОГДА РасчетыСКлиентами.ДолгУпр <> 0
	|		ТОГДА ВЫБОР КОГДА РасчетыСКлиентами.ДолгУпр < 0 ТОГДА -РасчетыСКлиентами.ДолгУпр ИНАЧЕ РасчетыСКлиентами.ДолгУпр КОНЕЦ
	|		ИНАЧЕ ВЫБОР КОГДА РасчетыСКлиентами.ПредоплатаУпр < 0 ТОГДА -РасчетыСКлиентами.ПредоплатаУпр ИНАЧЕ РасчетыСКлиентами.ПредоплатаУпр КОНЕЦ
	|	КОНЕЦ) КАК СуммаУпр,
	|	СУММА(ВЫБОР КОГДА РасчетыСКлиентами.ДолгРегл <> 0
	|		ТОГДА ВЫБОР КОГДА РасчетыСКлиентами.ДолгРегл < 0 ТОГДА -РасчетыСКлиентами.ДолгРегл ИНАЧЕ РасчетыСКлиентами.ДолгРегл КОНЕЦ
	|		ИНАЧЕ ВЫБОР КОГДА РасчетыСКлиентами.ПредоплатаРегл < 0 ТОГДА -РасчетыСКлиентами.ПредоплатаРегл ИНАЧЕ РасчетыСКлиентами.ПредоплатаРегл КОНЕЦ
	|	КОНЕЦ) КАК СуммаРегл,
	|	
	|	ВЫБОР КОГДА РасчетыСКлиентами.ДолгРегл <> 0
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыСуммЗадолженности.ДолгКлиента)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыСуммЗадолженности.АвансПолученный)
	|	КОНЕЦ КАК ТипСуммы,
	|
	|	ВЫБОР КОГДА КлючиАналитики.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НашеПредприятие,
	|	ВЫБОР КОГДА РасчетыСКлиентами.ДолгРегл < 0 ИЛИ РасчетыСКлиентами.ПредоплатаРегл < 0
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Сторно,
	|	РасчетыСКлиентами.ХозяйственнаяОперация КАК ХозОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности) КАК ХозяйственнаяОперация
	|	
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК РасчетыСКлиентами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ  втРегистраторы КАК Т
	|			ПО РасчетыСКлиентами.Регистратор = Т.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК КлючиАналитики
	|			ПО РасчетыСКлиентами.АналитикаУчетаПоПартнерам = КлючиАналитики.КлючАналитики
	|ГДЕ
	|	НЕ РасчетыСКлиентами.ХозяйственнаяОперация В 
	|		(ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеНедостачЗаСчетПоставщикаПриПоступленииТоваров),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеНедостачЗаСчетСтороннейКомпанииПриПоступленииТоваров))
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСКлиентами.Период,
	|	РасчетыСКлиентами.ВидДвижения,
	|	ВЫБОР
	|		КОГДА (РасчетыСКлиентами.Долг < 0 ИЛИ РасчетыСКлиентами.Предоплата + РасчетыСКлиентами.КВозврату < 0)
	|			И РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		КОГДА (РасчетыСКлиентами.Долг < 0 ИЛИ РасчетыСКлиентами.Предоплата + РасчетыСКлиентами.КВозврату < 0)
	|			И РасчетыСКлиентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ
	|			РасчетыСКлиентами.ВидДвижения
	|	КОНЕЦ,
	|	РасчетыСКлиентами.Регистратор,
	|	КлючиАналитики.Организация,
	|	КлючиАналитики.Партнер,
	|	КлючиАналитики.Контрагент,
	|	КлючиАналитики.Договор,
	|	РасчетыСКлиентами.ЗаказКлиента,
	|	РасчетыСКлиентами.Валюта,
	|	ВЫБОР КОГДА РасчетыСКлиентами.ДолгРегл <> 0
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыСуммЗадолженности.ДолгКлиента)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыСуммЗадолженности.АвансПолученный)
	|	КОНЕЦ,
	|	ВЫБОР КОГДА КлючиАналитики.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР КОГДА РасчетыСКлиентами.ДолгРегл < 0 ИЛИ РасчетыСКлиентами.ПредоплатаРегл < 0
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	РасчетыСКлиентами.ХозяйственнаяОперация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	Контрагент,
	|	ОбъектРасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|//Таблица Расхода задолженности
	|ВЫБРАТЬ
	|	РасчетыСПартнерами.Период,
	|	РасчетыСПартнерами.ВидДвижения КАК ВидДвижения,
	|	РасчетыСПартнерами.Регистратор КАК Регистратор,
	|	РасчетыСПартнерами.Организация КАК Организация,
	|	РасчетыСПартнерами.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	РасчетыСПартнерами.Организация КАК ВладелецОбъектаРасчета,
	|	РасчетыСПартнерами.Партнер,
	|	РасчетыСПартнерами.Контрагент КАК Контрагент,
	|	РасчетыСПартнерами.Договор КАК Договор,
	|	РасчетыСПартнерами.ОбъектРасчетов КАК ОбъектРасчетов,
	|	РасчетыСПартнерами.Валюта,
	|	РасчетыСПартнерами.Сумма КАК СуммаВВалюте,
	|	РасчетыСПартнерами.СуммаУпр КАК Сумма,
	|	РасчетыСПартнерами.СуммаРегл КАК СуммаРегл,
	|	РасчетыСПартнерами.ТипСуммы КАК ТипСуммы,
	|	РасчетыСПартнерами.ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	РасчетыСПартнерами.Валюта КАК ВалютаВзаиморасчетов,
	|	РасчетыСПартнерами.СуммаРегл / 
	|		ВЫБОР КОГДА РасчетыСПартнерами.Сумма = 0 
	|			ТОГДА ВЫБОР КОГДА РасчетыСПартнерами.СуммаРегл = 0 ТОГДА 1 ИНАЧЕ РасчетыСПартнерами.СуммаРегл КОНЕЦ
	|			ИНАЧЕ РасчетыСПартнерами.Сумма 
	|		КОНЕЦ КАК КурсВалютыВзаиморасчетов,
	|	РасчетыСПартнерами.Сумма КАК СуммаВВалютеВзаиморасчетов,
	|	РасчетыСПартнерами.ОбъектРасчетов КАК ИсточникГФУРасчетов
	|ИЗ
	|	РасчетыСпартнерами КАК РасчетыСПартнерами
	|ГДЕ
	|	РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ТИПЗНАЧЕНИЯ(РасчетыСПартнерами.Регистратор) = ТИП(Документ.ВзаимозачетЗадолженности)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|//При получении денег за филиал закроем задолженность филиала
	|ВЫБРАТЬ
	|	РасчетыСПартнерами.Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	РасчетыСПартнерами.Регистратор КАК Регистратор,
	|	РасчетыСПартнерами.Организация,
	|	РасчетыСПартнерами.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	РасчетыСПартнерами.Организация КАК ВладелецОбъектаРасчета,
	|	РасчетыСПартнерами.Партнер КАК КорПартнер,
	|	РасчетыСПартнерами.Контрагент КАК КорКонтрагент,
	|	РасчетыСПартнерами.Договор КАК КорДоговор,
	|	РасчетыСПартнерами.ОбъектРасчетов КАК КорОбъектРасчетов,
	|	РасчетыСПартнерами.Валюта,
	|	РасчетыСПартнерами.Сумма КАК СуммаВВалюте,
	|	РасчетыСПартнерами.СуммаУпр КАК Сумма,
	|	РасчетыСПартнерами.СуммаРегл КАК СуммаРегл,
	|	РасчетыСПартнерами.ТипСуммы КАК КорТипСуммы,
	|	РасчетыСПартнерами.ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	РасчетыСПартнерами.Валюта КАК КорВалютаВзаиморасчетов,
	|	РасчетыСПартнерами.СуммаРегл / 
	|		ВЫБОР КОГДА РасчетыСПартнерами.Сумма = 0 
	|			ТОГДА ВЫБОР КОГДА РасчетыСПартнерами.СуммаРегл = 0 ТОГДА 1 ИНАЧЕ РасчетыСПартнерами.СуммаРегл КОНЕЦ
	|			ИНАЧЕ РасчетыСПартнерами.Сумма 
	|		КОНЕЦ КАК КурсВалютыВзаиморасчетов,
	|	РасчетыСПартнерами.Сумма КАК КорСуммаВВалютеВзаиморасчетов,
	|	РасчетыСПартнерами.ОбъектРасчетов КАК КорИсточникГФУРасчетов
	|ИЗ
	|	РасчетыСпартнерами КАК РасчетыСПартнерами
	|ГДЕ
	|	РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ТИПЗНАЧЕНИЯ(РасчетыСПартнерами.Регистратор) В (
	|		ТИП(Документ.ПриходныйКассовыйОрдер),
	|		ТИП(Документ.ПоступлениеБезналичныхДенежныхСредств))
	|	И РасчетыСПартнерами.Организация <> РасчетыСПартнерами.Организация.ГоловнаяОрганизация
	|		
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|//При оплате за филиал под приход в документах СписаниеБДС и РКО подставим Расход в головной организации
	|ВЫБРАТЬ
	|	РасчетыСПартнерами.Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	РасчетыСПартнерами.Регистратор КАК Регистратор,
	|	РасчетыСПартнерами.Организация.ГоловнаяОрганизация,
	|	РасчетыСПартнерами.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	РасчетыСПартнерами.Организация КАК ВладелецОбъектаРасчета,
	|	РасчетыСПартнерами.Партнер КАК КорПартнер,
	|	РасчетыСПартнерами.Контрагент КАК КорКонтрагент,
	|	РасчетыСПартнерами.Договор КАК КорДоговор,
	|	РасчетыСПартнерами.ОбъектРасчетов КАК КорОбъектРасчетов,
	|	РасчетыСПартнерами.Валюта,
	|	РасчетыСПартнерами.Сумма КАК СуммаВВалюте,
	|	РасчетыСПартнерами.СуммаУпр КАК Сумма,
	|	РасчетыСПартнерами.СуммаРегл КАК СуммаРегл,
	|	РасчетыСПартнерами.ТипСуммы КАК КорТипСуммы,
	|	РасчетыСПартнерами.ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	РасчетыСПартнерами.Валюта КАК КорВалютаВзаиморасчетов,
	|	РасчетыСПартнерами.СуммаРегл / 
	|		ВЫБОР КОГДА РасчетыСПартнерами.Сумма = 0 
	|			ТОГДА ВЫБОР КОГДА РасчетыСПартнерами.СуммаРегл = 0 ТОГДА 1 ИНАЧЕ РасчетыСПартнерами.СуммаРегл КОНЕЦ
	|			ИНАЧЕ РасчетыСПартнерами.Сумма 
	|		КОНЕЦ КАК КурсВалютыВзаиморасчетов,
	|	РасчетыСПартнерами.Сумма КАК КорСуммаВВалютеВзаиморасчетов,
	|	РасчетыСПартнерами.ОбъектРасчетов КАК КорИсточникГФУРасчетов
	|ИЗ
	|	РасчетыСпартнерами КАК РасчетыСПартнерами
	|ГДЕ
	|	РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ТИПЗНАЧЕНИЯ(РасчетыСПартнерами.Регистратор) В (
	|		ТИП(Документ.РасходныйКассовыйОрдер),
	|		ТИП(Документ.СписаниеБезналичныхДенежныхСредств))
	|	И РасчетыСПартнерами.Организация <> РасчетыСПартнерами.Организация.ГоловнаяОрганизация
	|
	|УПОРЯДОЧИТЬ ПО
	|	РасчетыСПартнерами.Регистратор,
	|	РасчетыСПартнерами.Организация,
	|	РасчетыСПартнерами.Валюта,
	|	РасчетыСПартнерами.Сумма УБЫВ
	|ИТОГИ ПО
	|	РасчетыСПартнерами.Регистратор,
	|	РасчетыСПартнерами.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|//Таблица Прихода задолженности
	|ВЫБРАТЬ
	|	РасчетыСПартнерами.Период,
	|	РасчетыСПартнерами.ВидДвижения КАК ВидДвижения,
	|	РасчетыСПартнерами.Регистратор КАК Регистратор,
	|	РасчетыСПартнерами.Организация,
	|	РасчетыСПартнерами.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	РасчетыСПартнерами.Организация КАК ВладелецОбъектаРасчета,
	|	РасчетыСПартнерами.Партнер КАК КорПартнер,
	|	РасчетыСПартнерами.Контрагент КАК КорКонтрагент,
	|	РасчетыСПартнерами.Договор КАК КорДоговор,
	|	РасчетыСПартнерами.ОбъектРасчетов КАК КорОбъектРасчетов,
	|	РасчетыСПартнерами.Валюта,
	|	РасчетыСПартнерами.Сумма КАК СуммаВВалюте,
	|	РасчетыСПартнерами.СуммаУпр КАК Сумма,
	|	РасчетыСПартнерами.СуммаРегл КАК СуммаРегл,
	|	РасчетыСПартнерами.ТипСуммы КАК КорТипСуммы,
	|	РасчетыСПартнерами.ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	РасчетыСПартнерами.Валюта КАК КорВалютаВзаиморасчетов,
	|	РасчетыСПартнерами.СуммаРегл / 
	|		ВЫБОР КОГДА РасчетыСПартнерами.Сумма = 0 
	|			ТОГДА ВЫБОР КОГДА РасчетыСПартнерами.СуммаРегл = 0 ТОГДА 1 ИНАЧЕ РасчетыСПартнерами.СуммаРегл КОНЕЦ
	|			ИНАЧЕ РасчетыСПартнерами.Сумма 
	|		КОНЕЦ КАК КурсВалютыВзаиморасчетов,
	|	РасчетыСПартнерами.Сумма КАК КорСуммаВВалютеВзаиморасчетов,
	|	РасчетыСПартнерами.ОбъектРасчетов КАК КорИсточникГФУРасчетов
	|ИЗ
	|	РасчетыСпартнерами КАК РасчетыСПартнерами
	|ГДЕ
	|	РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ТИПЗНАЧЕНИЯ(РасчетыСПартнерами.Регистратор) = ТИП(Документ.ВзаимозачетЗадолженности)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|//При оплате за филиал закроем задолженность филиала
	|ВЫБРАТЬ
	|	РасчетыСПартнерами.Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	РасчетыСПартнерами.Регистратор КАК Регистратор,
	|	РасчетыСПартнерами.Организация,
	|	РасчетыСПартнерами.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	РасчетыСПартнерами.Организация КАК ВладелецОбъектаРасчета,
	|	РасчетыСПартнерами.Партнер,
	|	РасчетыСПартнерами.Контрагент КАК Контрагент,
	|	РасчетыСПартнерами.Договор КАК Договор,
	|	РасчетыСПартнерами.ОбъектРасчетов КАК ОбъектРасчетов,
	|	РасчетыСПартнерами.Валюта,
	|	РасчетыСПартнерами.Сумма КАК СуммаВВалюте,
	|	РасчетыСПартнерами.СуммаУпр КАК Сумма,
	|	РасчетыСПартнерами.СуммаРегл КАК СуммаРегл,
	|	РасчетыСПартнерами.ТипСуммы КАК ТипСуммы,
	|	РасчетыСПартнерами.ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	РасчетыСПартнерами.Валюта КАК ВалютаВзаиморасчетов,
	|	РасчетыСПартнерами.СуммаРегл / 
	|		ВЫБОР КОГДА РасчетыСПартнерами.Сумма = 0 
	|			ТОГДА ВЫБОР КОГДА РасчетыСПартнерами.СуммаРегл = 0 ТОГДА 1 ИНАЧЕ РасчетыСПартнерами.СуммаРегл КОНЕЦ
	|			ИНАЧЕ РасчетыСПартнерами.Сумма 
	|		КОНЕЦ КАК КурсВалютыВзаиморасчетов,
	|	РасчетыСПартнерами.Сумма КАК СуммаВВалютеВзаиморасчетов,
	|	РасчетыСПартнерами.ОбъектРасчетов КАК ИсточникГФУРасчетов
	|ИЗ
	|	РасчетыСпартнерами КАК РасчетыСПартнерами
	|ГДЕ
	|	РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ТИПЗНАЧЕНИЯ(РасчетыСПартнерами.Регистратор) В (
	|		ТИП(Документ.РасходныйКассовыйОрдер),
	|		ТИП(Документ.СписаниеБезналичныхДенежныхСредств))
	|	И РасчетыСПартнерами.Организация <> РасчетыСПартнерами.Организация.ГоловнаяОрганизация
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|//При получение денег за филиал под расход в документах ПоступлениеБДС и ПКО подставим Приход в головную организацию
	|ВЫБРАТЬ
	|	РасчетыСПартнерами.Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	РасчетыСПартнерами.Регистратор КАК Регистратор,
	|	РасчетыСПартнерами.Организация.ГоловнаяОрганизация,
	|	РасчетыСПартнерами.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	РасчетыСПартнерами.Организация КАК ВладелецОбъектаРасчета,
	|	РасчетыСПартнерами.Партнер,
	|	РасчетыСПартнерами.Контрагент КАК Контрагент,
	|	РасчетыСПартнерами.Договор КАК Договор,
	|	РасчетыСПартнерами.ОбъектРасчетов КАК ОбъектРасчетов,
	|	РасчетыСПартнерами.Валюта,
	|	РасчетыСПартнерами.Сумма КАК СуммаВВалюте,
	|	РасчетыСПартнерами.СуммаУпр КАК Сумма,
	|	РасчетыСПартнерами.СуммаРегл КАК СуммаРегл,
	|	РасчетыСПартнерами.ТипСуммы КАК ТипСуммы,
	|	РасчетыСПартнерами.ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	РасчетыСПартнерами.Валюта КАК ВалютаВзаиморасчетов,
	|	РасчетыСПартнерами.СуммаРегл / 
	|		ВЫБОР КОГДА РасчетыСПартнерами.Сумма = 0 
	|			ТОГДА ВЫБОР КОГДА РасчетыСПартнерами.СуммаРегл = 0 ТОГДА 1 ИНАЧЕ РасчетыСПартнерами.СуммаРегл КОНЕЦ
	|			ИНАЧЕ РасчетыСПартнерами.Сумма 
	|		КОНЕЦ КАК КурсВалютыВзаиморасчетов,
	|	РасчетыСПартнерами.Сумма КАК СуммаВВалютеВзаиморасчетов,
	|	РасчетыСПартнерами.ОбъектРасчетов КАК ИсточникГФУРасчетов
	|ИЗ
	|	РасчетыСпартнерами КАК РасчетыСПартнерами
	|ГДЕ
	|	РасчетыСПартнерами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ТИПЗНАЧЕНИЯ(РасчетыСПартнерами.Регистратор) В (
	|		ТИП(Документ.ПриходныйКассовыйОрдер),
	|		ТИП(Документ.ПоступлениеБезналичныхДенежныхСредств))
	|	И РасчетыСПартнерами.Организация <> РасчетыСПартнерами.Организация.ГоловнаяОрганизация
	|
	|УПОРЯДОЧИТЬ ПО
	|	РасчетыСПартнерами.Регистратор,
	|	РасчетыСПартнерами.Организация,
	|	РасчетыСпартнерами.Валюта,
	|	РасчетыСпартнерами.Сумма УБЫВ
	|;
	|";
	
КонецФункции

Функция ТекстЗапросаДвиженияКонтрагентКонтрагент()
	
	Возврат
	"ВЫБРАТЬ
	|	НовыеДвижения.Период,
	|	НовыеДвижения.НомерСтроки,
	|	НовыеДвижения.Регистратор КАК Регистратор,
	|
	|	НовыеДвижения.ХозяйственнаяОперация,
	|	НовыеДвижения.Организация,
	|	НовыеДвижения.Подразделение,
	|
	|	НовыеДвижения.Партнер,
	|	НовыеДвижения.Контрагент КАК Контрагент,
	|	НовыеДвижения.ОбъектРасчетов КАК ОбъектРасчетов,
	|	НовыеДвижения.Договор,
	|
	|	НовыеДвижения.КорПартнер,
	|	НовыеДвижения.КорКонтрагент КАК КорКонтрагент,
	|	НовыеДвижения.КорОбъектРасчетов КАК КорОбъектРасчетов,
	|	НовыеДвижения.КорДоговор,
	|
	|	НовыеДвижения.ТипСуммы,
	|	НовыеДвижения.КорТипСуммы,
	|
	|	НовыеДвижения.Сумма КАК Сумма,
	|	НовыеДвижения.СуммаБезНДС КАК СуммаБезНДС,
	|	НовыеДвижения.СуммаРегл КАК СуммаРегл,
	|	НовыеДвижения.СуммаРеглБезНДС КАК СуммаРеглБезНДС,
	|
	|	НовыеДвижения.Валюта,
	|	НовыеДвижения.СуммаВВалюте КАК СуммаВВалюте,
	|	НовыеДвижения.СуммаБезНДСВВалюте КАК СуммаБезНДСВВалюте,
	|
	|	НовыеДвижения.ВалютаВзаиморасчетов,
	|	НовыеДвижения.СуммаВВалютеВзаиморасчетов КАК СуммаВВалютеВзаиморасчетов,
	|	НовыеДвижения.СуммаБезНДСВВалютеВзаиморасчетов КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	НовыеДвижения.КорВалютаВзаиморасчетов,
	|	НовыеДвижения.КорСуммаВВалютеВзаиморасчетов КАК КорСуммаВВалютеВзаиморасчетов,
	|	НовыеДвижения.КорСуммаБезНДСВВалютеВзаиморасчетов КАК КорСуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	НовыеДвижения.ИсточникГФУРасчетов,
	|	НовыеДвижения.КорИсточникГФУРасчетов
	|
	|ПОМЕСТИТЬ втНовыеДвижения
	|ИЗ
	|	&ТаблицаДвижений КАК НовыеДвижения
	|ГДЕ
	|	НовыеДвижения.Регистратор <> НЕОПРЕДЕЛЕНО
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НовыеДвижения.Организация,
	|	НовыеДвижения.Партнер,
	|	Контрагент,
	|	ОбъектРасчетов,
	|	НовыеДвижения.КорПартнер,
	|	КорКонтрагент,
	|	КорОбъектРасчетов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписиРегистра.Регистратор,
	|
	|	ЗаписиРегистра.Организация,
	|	ЗаписиРегистра.Подразделение
	|
	|ПОМЕСТИТЬ втПодразделения
	|ИЗ
	|	РегистрНакопления.ДвиженияКонтрагентКонтрагент КАК ЗаписиРегистра
	|ГДЕ
	|	ЗаписиРегистра.Регистратор В (&МассивДокументов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НовыеДвижения.Период,
	|	НовыеДвижения.НомерСтроки КАК НомерСтроки,
	|	НовыеДвижения.Регистратор КАК Регистратор,
	|	НовыеДвижения.ХозяйственнаяОперация,
	|
	|	НовыеДвижения.Организация,
	|	ЗаписиРегистра.Подразделение,
	|
	|	НовыеДвижения.Партнер,
	|	НовыеДвижения.Контрагент КАК Контрагент,
	|	НовыеДвижения.ОбъектРасчетов КАК ОбъектРасчетов,
	|	НовыеДвижения.Договор,
	|
	|	НовыеДвижения.КорПартнер,
	|	НовыеДвижения.КорКонтрагент КАК КорКонтрагент,
	|	НовыеДвижения.КорОбъектРасчетов КАК КорОбъектРасчетов,
	|	НовыеДвижения.КорДоговор,
	|
	|	НовыеДвижения.ТипСуммы,
	|	НовыеДвижения.КорТипСуммы,
	|
	|	НовыеДвижения.Сумма КАК Сумма,
	|	НовыеДвижения.СуммаБезНДС КАК СуммаБезНДС,
	|	НовыеДвижения.СуммаРегл КАК СуммаРегл,
	|	НовыеДвижения.СуммаРеглБезНДС КАК СуммаРеглБезНДС,
	|
	|	НовыеДвижения.Валюта,
	|	НовыеДвижения.СуммаВВалюте КАК СуммаВВалюте,
	|	НовыеДвижения.СуммаБезНДСВВалюте КАК СуммаБезНДСВВалюте,
	|
	|	НовыеДвижения.ВалютаВзаиморасчетов,
	|	НовыеДвижения.СуммаВВалютеВзаиморасчетов КАК СуммаВВалютеВзаиморасчетов,
	|	НовыеДвижения.СуммаБезНДСВВалютеВзаиморасчетов КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	НовыеДвижения.КорВалютаВзаиморасчетов,
	|	НовыеДвижения.КорСуммаВВалютеВзаиморасчетов КАК КорСуммаВВалютеВзаиморасчетов,
	|	НовыеДвижения.КорСуммаБезНДСВВалютеВзаиморасчетов КАК КорСуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	НовыеДвижения.ИсточникГФУРасчетов,
	|	НовыеДвижения.КорИсточникГФУРасчетов
	|ИЗ
	|	втНовыеДвижения КАК НовыеДвижения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПодразделения КАК ЗаписиРегистра
	|		ПО НовыеДвижения.Регистратор = ЗаписиРегистра.Регистратор
	|			И НовыеДвижения.Организация = ЗаписиРегистра.Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаписиРегистра.Период,
	|	ЗаписиРегистра.НомерСтроки,
	|	ЗаписиРегистра.Регистратор,
	|	ЗаписиРегистра.ХозяйственнаяОперация,
	|
	|	ЗаписиРегистра.Организация,
	|	ЗаписиРегистра.Подразделение,
	|
	|	ЗаписиРегистра.Партнер,
	|	ЗаписиРегистра.Контрагент,
	|	ЗаписиРегистра.ОбъектРасчетов,
	|	ЗаписиРегистра.Договор,
	|
	|	ЗаписиРегистра.КорПартнер,
	|	ЗаписиРегистра.КорКонтрагент,
	|	ЗаписиРегистра.КорОбъектРасчетов,
	|	ЗаписиРегистра.КорДоговор,
	|
	|	ЗаписиРегистра.ТипСуммы,
	|	ЗаписиРегистра.КорТипСуммы,
	|
	|	ЗаписиРегистра.Сумма,
	|	ЗаписиРегистра.СуммаБезНДС,
	|	ЗаписиРегистра.СуммаРегл,
	|	ЗаписиРегистра.СуммаРеглБезНДС,
	|
	|	ЗаписиРегистра.Валюта,
	|	ЗаписиРегистра.СуммаВВалюте,
	|	ЗаписиРегистра.СуммаБезНДСВВалюте,
	|
	|	ЗаписиРегистра.ВалютаВзаиморасчетов,
	|	ЗаписиРегистра.СуммаВВалютеВзаиморасчетов,
	|	ЗаписиРегистра.СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ЗаписиРегистра.КорВалютаВзаиморасчетов,
	|	ЗаписиРегистра.КорСуммаВВалютеВзаиморасчетов,
	|	ЗаписиРегистра.КорСуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ЗаписиРегистра.ИсточникГФУРасчетов,
	|	ЗаписиРегистра.КорИсточникГФУРасчетов
	|ИЗ
	|	РегистрНакопления.ДвиженияКонтрагентКонтрагент КАК ЗаписиРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ втНовыеДвижения КАК НовыеДвижения
	|		ПО ЗаписиРегистра.Регистратор = НовыеДвижения.Регистратор
	|			И ЗаписиРегистра.Организация = НовыеДвижения.Организация
	|ГДЕ
	|	НовыеДвижения.Регистратор ЕСТЬ NULL
	|	И ЗаписиРегистра.Регистратор В (&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Регистратор,
	|	НомерСтроки
	|
	|ИТОГИ ПО
	|	Регистратор";
	
КонецФункции

#КонецОбласти

#Область ОбработчикиПодписокНаСобытия

// Обработчик подписки на событие ПолучитьИсходныеДвиженияРегистров.
//
Процедура ПолучитьИсходныеДвиженияРегистровПередЗаписью(Источник, Отказ, Замещение) Экспорт
	
	Если НеКонтролироватьИзмененияРегистра(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	ИмяРегистра = Источник.Метаданные().Имя;
	ТекстЗапроса = ТекстЗапросаПередЗаписью(ИмяРегистра);
	Источник.ДополнительныеСвойства.Вставить("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц);
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Источник.ДополнительныеСвойства.МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Регистратор", Источник.Отбор.Регистратор.Значение);
	Запрос.Выполнить();

	Если ИмяРегистра = "ДвиженияКонтрагентКонтрагент" Тогда
		ВосстановитьОтложенноеПроведение(Источник);
	КонецЕсли;

КонецПроцедуры

// Обработчик подписки на событие ПолучитьПризнакИзмененияДвиженийРегистров.
//
Процедура ПолучитьПризнакИзмененияДвиженийРегистровПриЗаписи(Источник, Отказ, Замещение) Экспорт

	Если НеКонтролироватьИзмененияРегистра(Источник) Тогда
		Источник.ДополнительныеСвойства.Вставить("ИзменилисьДанныеРегистра", Истина);
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапросаПриЗаписи(Источник.Метаданные().Имя);
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Источник.ДополнительныеСвойства.МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Регистратор", Источник.Отбор.Регистратор.Значение);
	Источник.ДополнительныеСвойства.Вставить("ИзменилисьДанныеРегистра", НЕ Запрос.Выполнить().Пустой());

КонецПроцедуры

#КонецОбласти

Функция МассивРегистраторовРегистра(ИмяРегистра) Экспорт

	МассивДокументов = Новый Массив;
	ТипыРегистраторов = Метаданные.РегистрыНакопления[ИмяРегистра].СтандартныеРеквизиты.Регистратор.Тип.Типы();
	Для Каждого ТипРегистратора Из ТипыРегистраторов Цикл
		Регистратор = Метаданные.НайтиПоТипу(ТипРегистратора);
		Если Регистратор <> Неопределено  Тогда
			МассивДокументов.Добавить(Регистратор.Имя);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивДокументов;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеДляФормированияДвиженийДенежныеСредстваКонтрагент(Документ, Период, ТаблицыДляДвижений)
	
	Если ТаблицыДляДвижений.Свойство("ТаблицаРасчетыСКлиентамиПоДокументам") Тогда
		РасчетыСПартнерами = ТаблицыДляДвижений.ТаблицаРасчетыСКлиентамиПоДокументам;
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	РасчетыСПартнерами.Регистратор КАК Регистратор,
		|	РасчетыСПартнерами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		|   РасчетыСПартнерами.ЗаказКлиента КАК Заказ,
		|	РасчетыСПартнерами.РасчетныйДокумент КАК РасчетныйДокумент,
		|	ВЫБОР
		|		КОГДА РасчетыСПартнерами.Долг < 0
		|			ТОГДА -РасчетыСПартнерами.Долг
		|		ИНАЧЕ РасчетыСПартнерами.Долг
		|	КОНЕЦ КАК Долг,
		|	ВЫБОР
		|		КОГДА РасчетыСПартнерами.ДолгУпр < 0
		|			ТОГДА -РасчетыСПартнерами.ДолгУпр
		|		ИНАЧЕ РасчетыСПартнерами.ДолгУпр
		|	КОНЕЦ КАК ДолгУпр,
		|	ВЫБОР
		|		КОГДА РасчетыСПартнерами.ДолгРегл < 0
		|			ТОГДА -РасчетыСПартнерами.ДолгРегл
		|		ИНАЧЕ РасчетыСПартнерами.ДолгРегл
		|	КОНЕЦ КАК ДолгРегл,
		|	ВЫБОР
		|	    КОГДА РасчетыСПартнерами.Предоплата < 0
		|			ТОГДА -РасчетыСПартнерами.Предоплата
		|		ИНАЧЕ РасчетыСПартнерами.Предоплата
		|	КОНЕЦ КАК Предоплата,
		|	ВЫБОР
		|	    КОГДА РасчетыСПартнерами.ПредоплатаУпр < 0
		|			ТОГДА -РасчетыСПартнерами.ПредоплатаУпр
		|		ИНАЧЕ РасчетыСПартнерами.ПредоплатаУпр
		|	КОНЕЦ КАК ПредоплатаУпр,
		|	ВЫБОР
		|		КОГДА РасчетыСПартнерами.ПредоплатаРегл < 0
		|			ТОГДА -РасчетыСПартнерами.ПредоплатаРегл
		|		ИНАЧЕ РасчетыСПартнерами.ПредоплатаРегл
		|	КОНЕЦ КАК ПредоплатаРегл
		|ПОМЕСТИТЬ РасчетыСКлиентами
		|ИЗ
		|	&РасчетыСПартнерами КАК РасчетыСПартнерами
		|ГДЕ
		|	РасчетыСПартнерами.Долг <> 0
		|   ИЛИ РасчетыСПартнерами.Предоплата <> 0
		|	ИЛИ РасчетыСПартнерами.КВозврату <> 0
		|;
		|
		|ВЫБРАТЬ
		|	РасчетыСКлиентами.Регистратор КАК Регистратор,
		|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		|   РасчетыСКлиентами.Заказ КАК Заказ,
		|	РасчетыСКлиентами.РасчетныйДокумент КАК РасчетныйДокумент,
		|	СУММА(РасчетыСКлиентами.Долг) КАК Долг,
		|	СУММА(РасчетыСКлиентами.ДолгУпр) КАК ДолгУпр,
		|	СУММА(РасчетыСКлиентами.ДолгРегл) КАК ДолгРегл,
		|	СУММА(РасчетыСКлиентами.Предоплата) КАК Предоплата,
		|	СУММА(РасчетыСКлиентами.ПредоплатаУпр) КАК ПредоплатаУпр,
		|	СУММА(РасчетыСКлиентами.ПредоплатаРегл) КАК ПредоплатаРегл
		|ПОМЕСТИТЬ РасчетыСПартнерами
		|ИЗ
		|	РасчетыСКлиентами КАК РасчетыСКлиентами
		|СГРУППИРОВАТЬ ПО
		|	РасчетыСКлиентами.Регистратор,
		|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам,
		|	РасчетыСКлиентами.Заказ,
		|	РасчетыСКлиентами.РасчетныйДокумент
		|";
	Иначе
		РасчетыСПартнерами = ТаблицыДляДвижений.ТаблицаРасчетыСПоставщикамиПоДокументам;
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	РасчетыСПартнерами.Регистратор КАК Регистратор,
		|	РасчетыСПартнерами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		|   РасчетыСПартнерами.ЗаказПоставщику КАК Заказ,
		|	РасчетыСПартнерами.РасчетныйДокумент КАК РасчетныйДокумент,
		|	ВЫБОР
		|		КОГДА РасчетыСПартнерами.Долг < 0
		|			ТОГДА -РасчетыСПартнерами.Долг
		|		ИНАЧЕ РасчетыСПартнерами.Долг
		|	КОНЕЦ КАК Долг,
		|	ВЫБОР
		|		КОГДА РасчетыСПартнерами.ДолгУпр < 0
		|			ТОГДА -РасчетыСПартнерами.ДолгУпр
		|		ИНАЧЕ РасчетыСПартнерами.ДолгУпр
		|	КОНЕЦ КАК ДолгУпр,
		|	ВЫБОР
		|		КОГДА РасчетыСПартнерами.ДолгРегл < 0
		|			ТОГДА -РасчетыСПартнерами.ДолгРегл
		|		ИНАЧЕ РасчетыСПартнерами.ДолгРегл
		|	КОНЕЦ КАК ДолгРегл,
		|	ВЫБОР
		|		КОГДА РасчетыСПартнерами.Предоплата < 0
		|			ТОГДА -РасчетыСПартнерами.Предоплата
		|		ИНАЧЕ РасчетыСПартнерами.Предоплата
		|	КОНЕЦ КАК Предоплата,
		|	ВЫБОР
		|		КОГДА РасчетыСПартнерами.ПредоплатаУпр < 0
		|			ТОГДА -РасчетыСПартнерами.ПредоплатаУпр
		|		ИНАЧЕ РасчетыСПартнерами.ПредоплатаУпр
		|	КОНЕЦ КАК ПредоплатаУпр,
		|	ВЫБОР
		|		КОГДА РасчетыСПартнерами.ПредоплатаРегл < 0
		|			ТОГДА -РасчетыСПартнерами.ПредоплатаРегл
		|		ИНАЧЕ РасчетыСПартнерами.ПредоплатаРегл
		|	КОНЕЦ КАК ПредоплатаРегл
		|ПОМЕСТИТЬ РасчетыСПоставщиками
		|ИЗ
		|	&РасчетыСПартнерами КАК РасчетыСПартнерами
		|ГДЕ
		|	РасчетыСПартнерами.Долг <> 0
		|   ИЛИ РасчетыСПартнерами.Предоплата <> 0
		|	ИЛИ РасчетыСПартнерами.КВозврату <> 0
		|;
		|
		|ВЫБРАТЬ
		|	РасчетыСПоставщиками.Регистратор КАК Регистратор,
		|	РасчетыСПоставщиками.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
		|   РасчетыСПоставщиками.Заказ КАК Заказ,
		|	РасчетыСПоставщиками.РасчетныйДокумент КАК РасчетныйДокумент,
		|	СУММА(РасчетыСПоставщиками.Долг) КАК Долг,
		|	СУММА(РасчетыСПоставщиками.ДолгУпр) КАК ДолгУпр,
		|	СУММА(РасчетыСПоставщиками.ДолгРегл) КАК ДолгРегл,
		|	СУММА(РасчетыСПоставщиками.Предоплата) КАК Предоплата,
		|	СУММА(РасчетыСПоставщиками.ПредоплатаУпр) КАК ПредоплатаУпр,
		|	СУММА(РасчетыСПоставщиками.ПредоплатаРегл) КАК ПредоплатаРегл
		|ПОМЕСТИТЬ РасчетыСПартнерами
		|ИЗ
		|	РасчетыСПоставщиками КАК РасчетыСПоставщиками
		|СГРУППИРОВАТЬ ПО
		|	РасчетыСПоставщиками.Регистратор,
		|	РасчетыСПоставщиками.АналитикаУчетаПоПартнерам,
		|	РасчетыСПоставщиками.Заказ,
		|	РасчетыСПоставщиками.РасчетныйДокумент
		|";
	КонецЕсли;
	Запрос.УстановитьПараметр("РасчетыСПартнерами", РасчетыСПартнерами);
	Запрос.Выполнить();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Активность КАК Активность,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.Подразделение КАК Подразделение,
	|
	|	ДанныеРегистра.ДенежныеСредства КАК ДенежныеСредства,
	|	ДанныеРегистра.ТипДенежныхСредств КАК ТипДенежныхСредств,
	|	ДанныеРегистра.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеРегистра.ВалютаПлатежа КАК ВалютаПлатежа,
	|	ДанныеРегистра.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|
	|	ДанныеРегистра.Партнер КАК Партнер,
	|	ДанныеРегистра.Контрагент КАК Контрагент,
	|	ДанныеРегистра.Договор КАК Договор,
	|	ДанныеРегистра.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ДанныеРегистра.РасчетныйДокумент КАК РасчетныйДокумент,
	|
	|	ДанныеРегистра.СуммаОплаты КАК СуммаОплаты,
	|	ДанныеРегистра.СуммаОплатыРегл КАК СуммаОплатыРегл,
	|	ДанныеРегистра.СуммаОплатыВВалютеПлатежа КАК СуммаОплатыВВалютеПлатежа,
	|	
	|	ДанныеРегистра.СуммаПостоплаты КАК СуммаПостоплаты,
	|	ДанныеРегистра.СуммаПостоплатыРегл КАК СуммаПостоплатыРегл,
	|	ДанныеРегистра.СуммаПостоплатыВВалютеПлатежа КАК СуммаПостоплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.СуммаПредоплаты КАК СуммаПредоплаты,
	|	ДанныеРегистра.СуммаПредоплатыРегл КАК СуммаПредоплатыРегл,
	|	ДанныеРегистра.СуммаПредоплатыВВалютеПлатежа КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДанныеРегистра.СуммаОплатыВВалютеВзаиморасчетов КАК СуммаОплатыВВалютеВзаиморасчетов,
	|	ДанныеРегистра.СуммаПостоплатыВВалютеВзаиморасчетов КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|	ДанныеРегистра.СуммаПредоплатыВВалютеВзаиморасчетов КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|	ДанныеРегистра.ИсточникГФУДенежныхСредств КАК ИсточникГФУДенежныхСредств,
	|	ДанныеРегистра.ИсточникГФУРасчетов КАК ИсточникГФУРасчетов,
	|	ДанныеРегистра.ОтложенноеПроведение КАК ОтложенноеПроведение
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.Регистратор = &Документ
	|	И НЕ ДанныеРегистра.ОтложенноеПроведение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Активность КАК Активность,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.Подразделение КАК Подразделение,
	|
	|	ДанныеРегистра.ДенежныеСредства КАК ДенежныеСредства,
	|	ДанныеРегистра.ТипДенежныхСредств КАК ТипДенежныхСредств,
	|	ДанныеРегистра.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеРегистра.ВалютаПлатежа КАК ВалютаПлатежа,
	|	ДанныеРегистра.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|
	|	ДанныеРегистра.Партнер КАК Партнер,
	|	ДанныеРегистра.Контрагент КАК Контрагент,
	|	ДанныеРегистра.Договор КАК Договор,
	|	ДанныеРегистра.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ДанныеРегистра.РасчетныйДокумент КАК РасчетныйДокумент,
	|
	|	ДанныеРегистра.СуммаОплаты КАК СуммаОплаты,
	|	ДанныеРегистра.СуммаОплатыРегл КАК СуммаОплатыРегл,
	|	ДанныеРегистра.СуммаОплатыВВалютеПлатежа КАК СуммаОплатыВВалютеПлатежа,
	|	
	|	ДанныеРегистра.СуммаПостоплаты КАК СуммаПостоплаты,
	|	ДанныеРегистра.СуммаПостоплатыРегл КАК СуммаПостоплатыРегл,
	|	ДанныеРегистра.СуммаПостоплатыВВалютеПлатежа КАК СуммаПостоплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.СуммаПредоплаты КАК СуммаПредоплаты,
	|	ДанныеРегистра.СуммаПредоплатыРегл КАК СуммаПредоплатыРегл,
	|	ДанныеРегистра.СуммаПредоплатыВВалютеПлатежа КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДанныеРегистра.СуммаОплатыВВалютеВзаиморасчетов КАК СуммаОплатыВВалютеВзаиморасчетов,
	|	ДанныеРегистра.СуммаПостоплатыВВалютеВзаиморасчетов КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|	ДанныеРегистра.СуммаПредоплатыВВалютеВзаиморасчетов КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|	ДанныеРегистра.ИсточникГФУДенежныхСредств КАК ИсточникГФУДенежныхСредств,
	|	ДанныеРегистра.ИсточникГФУРасчетов КАК ИсточникГФУРасчетов,
	|	ДанныеРегистра.ОтложенноеПроведение КАК ОтложенноеПроведение
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РасчетыСПартнерами КАК РасчетыСПартнерами
	|	ПО 
	|		ДанныеРегистра.Организация <> РасчетыСПартнерами.АналитикаУчетаПоПартнерам.Организация
	|ГДЕ
	|	ДанныеРегистра.Регистратор = &Документ
	|	И ДанныеРегистра.ОтложенноеПроведение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Активность КАК Активность,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.Подразделение КАК Подразделение,
	|	
	|	ДанныеРегистра.ДенежныеСредства КАК ДенежныеСредства,
	|	ДанныеРегистра.ТипДенежныхСредств КАК ТипДенежныхСредств,
	|	ДанныеРегистра.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеРегистра.ВалютаПлатежа КАК ВалютаПлатежа,
	|	ДанныеРегистра.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|
	|	ДанныеРегистра.Партнер КАК Партнер,
	|	ДанныеРегистра.Контрагент КАК Контрагент,
	|	ДанныеРегистра.Договор КАК Договор,
	|	ДанныеРегистра.ОбъектРасчетов КАК ОбъектРасчетов,
	|	РасчетыСПартнерами.РасчетныйДокумент КАК РасчетныйДокумент,
	|
	|	0 КАК СуммаОплаты,
	|	0 КАК СуммаОплатыРегл,
	|	0 КАК СуммаОплатыВВалютеПлатежа,
	|
	|	РасчетыСПартнерами.ДолгУпр КАК СуммаПостоплаты,
	|	РасчетыСПартнерами.ДолгРегл КАК СуммаПостоплатыРегл,
	|	
	|	ВЫБОР
	|		КОГДА РасчетыСПартнерами.Долг = ДанныеРегистра.СуммаОплатыВВалютеВзаиморасчетов
	|			ТОГДА ДанныеРегистра.СуммаОплатыВВалютеПлатежа
	|	ИНАЧЕ ВЫРАЗИТЬ(РасчетыСПартнерами.Долг * КурсВалютыВзаиморасчетов.Курс * КурсВалютыПлатежа.Кратность /
	|				  (КурсВалютыВзаиморасчетов.Кратность * КурсВалютыПлатежа.Курс) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаПостоплатыВВалютеПлатежа,
	|
	|	РасчетыСПартнерами.ПредоплатаУпр КАК СуммаПредоплаты,
	|	РасчетыСПартнерами.ПредоплатаРегл КАК СуммаПредоплатыРегл,
	|
	|	ВЫБОР
	|		КОГДА РасчетыСПартнерами.Предоплата = ДанныеРегистра.СуммаОплатыВВалютеВзаиморасчетов
	|			ТОГДА ДанныеРегистра.СуммаОплатыВВалютеПлатежа
	|	ИНАЧЕ ВЫРАЗИТЬ(РасчетыСПартнерами.Предоплата * КурсВалютыВзаиморасчетов.Курс * КурсВалютыПлатежа.Кратность /
	|				  (КурсВалютыВзаиморасчетов.Кратность * КурсВалютыПлатежа.Курс) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	0 КАК СуммаОплатыВВалютеВзаиморасчетов,
	|   РасчетыСПартнерами.Долг КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|	РасчетыСПартнерами.Предоплата КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|	ДанныеРегистра.ИсточникГФУДенежныхСредств КАК ИсточникГФУДенежныхСредств,
	|	ДанныеРегистра.ИсточникГФУРасчетов КАК ИсточникГФУРасчетов,
	|	ИСТИНА
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РасчетыСПартнерами КАК РасчетыСПартнерами
	|	ПО 
	|		ДанныеРегистра.Партнер = РасчетыСПартнерами.АналитикаУчетаПоПартнерам.Партнер
	|		И ДанныеРегистра.Контрагент = РасчетыСПартнерами.АналитикаУчетаПоПартнерам.Контрагент
	|		И ДанныеРегистра.ОбъектРасчетов = РасчетыСПартнерами.Заказ
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(&Период) КАК КурсВалютыВзаиморасчетов
	|	ПО
	|		ДанныеРегистра.ВалютаВзаиморасчетов = КурсВалютыВзаиморасчетов.Валюта
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(&Период) КАК КурсВалютыПлатежа
	|	ПО
	|		ДанныеРегистра.ВалютаПлатежа = КурсВалютыПлатежа.Валюта
	|ГДЕ
	|	ДанныеРегистра.Регистратор = &Документ
	|	И НЕ ДанныеРегистра.ОтложенноеПроведение
	|";
	
	Запрос.УстановитьПараметр("Документ", Документ);
	Запрос.УстановитьПараметр("Период", Период);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ЗаписатьНаборыЗаписей(СтруктураНаборыЗаписей)
	
	Для Каждого СтрокаСтруктуры Из СтруктураНаборыЗаписей Цикл
		
		НаборЗаписей = СтрокаСтруктуры.Значение;
		Если НаборЗаписей <> Неопределено И НаборЗаписей.Количество() > 0 Тогда
			НаборЗаписей.Записать();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПолучитьРасчетыСКлиентами(МенеджерВременныхТаблиц, СписокДокументов)

	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	РасчетыСПартнерами.Регистратор КАК Регистратор,
	|	РасчетыСПартнерами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	РасчетыСПартнерами.ЗаказКлиента КАК Заказ,
	|	РасчетыСПартнерами.РасчетныйДокумент КАК РасчетныйДокумент,
	|	РасчетыСПартнерами.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ВЫБОР
	|		КОГДА РасчетыСПартнерами.Долг < 0
	|			ТОГДА -РасчетыСПартнерами.Долг
	|		ИНАЧЕ РасчетыСПартнерами.Долг
	|	КОНЕЦ КАК Долг,
	|	ВЫБОР
	|		КОГДА РасчетыСПартнерами.ДолгУпр < 0
	|			ТОГДА -РасчетыСПартнерами.ДолгУпр
	|		ИНАЧЕ РасчетыСПартнерами.ДолгУпр
	|	КОНЕЦ КАК ДолгУпр,
	|	ВЫБОР
	|		КОГДА РасчетыСПартнерами.ДолгРегл < 0
	|			ТОГДА -РасчетыСПартнерами.ДолгРегл
	|		ИНАЧЕ РасчетыСПартнерами.ДолгРегл
	|	КОНЕЦ КАК ДолгРегл,
	|	ВЫБОР
	|	    КОГДА РасчетыСПартнерами.Предоплата < 0
	|			ТОГДА -РасчетыСПартнерами.Предоплата
	|		ИНАЧЕ РасчетыСПартнерами.Предоплата
	|	КОНЕЦ КАК Предоплата,
	|	ВЫБОР
	|	    КОГДА РасчетыСПартнерами.ПредоплатаУпр < 0
	|			ТОГДА -РасчетыСПартнерами.ПредоплатаУпр
	|		ИНАЧЕ РасчетыСПартнерами.ПредоплатаУпр
	|	КОНЕЦ КАК ПредоплатаУпр,
	|	ВЫБОР
	|		КОГДА РасчетыСПартнерами.ПредоплатаРегл < 0
	|			ТОГДА -РасчетыСПартнерами.ПредоплатаРегл
	|		ИНАЧЕ РасчетыСПартнерами.ПредоплатаРегл
	|	КОНЕЦ КАК ПредоплатаРегл
	|ПОМЕСТИТЬ РасчетыСКлиентами
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК РасчетыСПартнерами
	|ГДЕ
	|	РасчетыСПартнерами.Регистратор В (&СписокДокументов)
	|	И (РасчетыСПартнерами.Долг <> 0
	|		ИЛИ РасчетыСПартнерами.Предоплата <> 0
	|		ИЛИ РасчетыСПартнерами.КВозврату <> 0
	|	)
	|;
	|////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыСКлиентами.Регистратор КАК Регистратор,
	|	Аналитика.Организация КАК Организация,
	|	Аналитика.Партнер КАК Партнер,
	|	Аналитика.Контрагент КАК Контрагент,
	|	РасчетыСКлиентами.Заказ КАК Заказ,
	|	РасчетыСКлиентами.РасчетныйДокумент КАК РасчетныйДокумент,
	|	РасчетыСКлиентами.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	СУММА(РасчетыСКлиентами.Долг) КАК Долг,
	|	СУММА(РасчетыСКлиентами.ДолгУпр) КАК ДолгУпр,
	|	СУММА(РасчетыСКлиентами.ДолгРегл) КАК ДолгРегл,
	|	СУММА(РасчетыСКлиентами.Предоплата) КАК Предоплата,
	|	СУММА(РасчетыСКлиентами.ПредоплатаУпр) КАК ПредоплатаУпр,
	|	СУММА(РасчетыСКлиентами.ПредоплатаРегл) КАК ПредоплатаРегл
	|ПОМЕСТИТЬ РасчетыСПартнерами
	|ИЗ
	|	РасчетыСКлиентами КАК РасчетыСКлиентами
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		РасчетыСКлиентами.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСКлиентами.Регистратор,
	|	Аналитика.Организация,
	|	Аналитика.Партнер,
	|	Аналитика.Контрагент,
	|	РасчетыСКлиентами.Заказ,
	|	РасчетыСКлиентами.РасчетныйДокумент,
	|	РасчетыСКлиентами.СтатьяДвиженияДенежныхСредств
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	Организация,
	|	Партнер,
	|	Контрагент,
	|	Заказ,
	|	СтатьяДвиженияДенежныхСредств
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;;
	Запрос.УстановитьПараметр("СписокДокументов", СписокДокументов);
	Запрос.Выполнить();

КонецПроцедуры

Процедура ПолучитьРасчетыСПоставщиками(МенеджерВременныхТаблиц, СписокДокументов)

	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	РасчетыСПартнерами.Регистратор КАК Регистратор,
	|	РасчетыСПартнерами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|   РасчетыСПартнерами.ЗаказПоставщику КАК Заказ,
	|	РасчетыСПартнерами.РасчетныйДокумент КАК РасчетныйДокумент,
	|	РасчетыСПартнерами.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ВЫБОР
	|		КОГДА РасчетыСПартнерами.Долг < 0
	|			ТОГДА -РасчетыСПартнерами.Долг
	|		ИНАЧЕ РасчетыСПартнерами.Долг
	|	КОНЕЦ КАК Долг,
	|	ВЫБОР
	|		КОГДА РасчетыСПартнерами.ДолгУпр < 0
	|			ТОГДА -РасчетыСПартнерами.ДолгУпр
	|		ИНАЧЕ РасчетыСПартнерами.ДолгУпр
	|	КОНЕЦ КАК ДолгУпр,
	|	ВЫБОР
	|		КОГДА РасчетыСПартнерами.ДолгРегл < 0
	|			ТОГДА -РасчетыСПартнерами.ДолгРегл
	|		ИНАЧЕ РасчетыСПартнерами.ДолгРегл
	|	КОНЕЦ КАК ДолгРегл,
	|	ВЫБОР
	|		КОГДА РасчетыСПартнерами.Предоплата < 0
	|			ТОГДА -РасчетыСПартнерами.Предоплата
	|		ИНАЧЕ РасчетыСПартнерами.Предоплата
	|	КОНЕЦ КАК Предоплата,
	|	ВЫБОР
	|		КОГДА РасчетыСПартнерами.ПредоплатаУпр < 0
	|			ТОГДА -РасчетыСПартнерами.ПредоплатаУпр
	|		ИНАЧЕ РасчетыСПартнерами.ПредоплатаУпр
	|	КОНЕЦ КАК ПредоплатаУпр,
	|	ВЫБОР
	|		КОГДА РасчетыСПартнерами.ПредоплатаРегл < 0
	|			ТОГДА -РасчетыСПартнерами.ПредоплатаРегл
	|		ИНАЧЕ РасчетыСПартнерами.ПредоплатаРегл
	|	КОНЕЦ КАК ПредоплатаРегл
	|ПОМЕСТИТЬ РасчетыСПоставщиками
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК РасчетыСПартнерами
	|ГДЕ
	|	РасчетыСПартнерами.Регистратор В (&СписокДокументов)
	|	И (РасчетыСПартнерами.Долг <> 0
	|		ИЛИ РасчетыСПартнерами.Предоплата <> 0
	|		ИЛИ РасчетыСПартнерами.КВозврату <> 0
	|	)
	|;
	|///////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыСПоставщиками.Регистратор КАК Регистратор,
	|	Аналитика.Организация КАК Организация,
	|	Аналитика.Партнер КАК Партнер,
	|	Аналитика.Контрагент КАК Контрагент,
	|   РасчетыСПоставщиками.Заказ КАК Заказ,
	|	РасчетыСПоставщиками.РасчетныйДокумент КАК РасчетныйДокумент,
	|	РасчетыСПоставщиками.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	СУММА(РасчетыСПоставщиками.Долг) КАК Долг,
	|	СУММА(РасчетыСПоставщиками.ДолгУпр) КАК ДолгУпр,
	|	СУММА(РасчетыСПоставщиками.ДолгРегл) КАК ДолгРегл,
	|	СУММА(РасчетыСПоставщиками.Предоплата) КАК Предоплата,
	|	СУММА(РасчетыСПоставщиками.ПредоплатаУпр) КАК ПредоплатаУпр,
	|	СУММА(РасчетыСПоставщиками.ПредоплатаРегл) КАК ПредоплатаРегл
	|ПОМЕСТИТЬ РасчетыСПартнерами
	|ИЗ
	|	РасчетыСПоставщиками КАК РасчетыСПоставщиками
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		РасчетыСПоставщиками.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
	|СГРУППИРОВАТЬ ПО
	|	РасчетыСПоставщиками.Регистратор,
	|	Аналитика.Организация,
	|	Аналитика.Партнер,
	|	Аналитика.Контрагент,
	|	РасчетыСПоставщиками.Заказ,
	|	РасчетыСПоставщиками.РасчетныйДокумент,
	|	РасчетыСПоставщиками.СтатьяДвиженияДенежныхСредств
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	Организация,
	|	Партнер,
	|	Контрагент,
	|	Заказ,
	|	СтатьяДвиженияДенежныхСредств
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СписокДокументов", СписокДокументов);
	Запрос.Выполнить();

КонецПроцедуры

Процедура ПолучитьДвиженияДенежныеСредстваКонтрагент(МенеджерВременныхТаблиц, СписокДокументов)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Активность КАК Активность,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.Подразделение КАК Подразделение,
	|
	|	ДанныеРегистра.ДенежныеСредства КАК ДенежныеСредства,
	|	ДанныеРегистра.ТипДенежныхСредств КАК ТипДенежныхСредств,
	|	ДанныеРегистра.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеРегистра.ВалютаПлатежа КАК ВалютаПлатежа,
	|	ДанныеРегистра.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|
	|	ДанныеРегистра.Партнер КАК Партнер,
	|	ДанныеРегистра.Контрагент КАК Контрагент,
	|	ДанныеРегистра.Договор КАК Договор,
	|	ДанныеРегистра.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ДанныеРегистра.РасчетныйДокумент КАК РасчетныйДокумент,
	|
	|	ДанныеРегистра.СуммаОплаты КАК СуммаОплаты,
	|	ДанныеРегистра.СуммаОплатыРегл КАК СуммаОплатыРегл,
	|	ДанныеРегистра.СуммаОплатыВВалютеПлатежа КАК СуммаОплатыВВалютеПлатежа,
	|	
	|	ДанныеРегистра.СуммаПостоплаты КАК СуммаПостоплаты,
	|	ДанныеРегистра.СуммаПостоплатыРегл КАК СуммаПостоплатыРегл,
	|	ДанныеРегистра.СуммаПостоплатыВВалютеПлатежа КАК СуммаПостоплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.СуммаПредоплаты КАК СуммаПредоплаты,
	|	ДанныеРегистра.СуммаПредоплатыРегл КАК СуммаПредоплатыРегл,
	|	ДанныеРегистра.СуммаПредоплатыВВалютеПлатежа КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДанныеРегистра.СуммаОплатыВВалютеВзаиморасчетов КАК СуммаОплатыВВалютеВзаиморасчетов,
	|	ДанныеРегистра.СуммаПостоплатыВВалютеВзаиморасчетов КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|	ДанныеРегистра.СуммаПредоплатыВВалютеВзаиморасчетов КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|	ДанныеРегистра.ИсточникГФУДенежныхСредств КАК ИсточникГФУДенежныхСредств,
	|	ДанныеРегистра.ИсточникГФУРасчетов КАК ИсточникГФУРасчетов,
	|	ДанныеРегистра.ОтложенноеПроведение КАК ОтложенноеПроведение
	|ПОМЕСТИТЬ ДанныеРегистра
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.Регистратор В (&СписокДокументов)
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	ВалютаВзаиморасчетов,
	|	ВалютаПлатежа
	|;
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДанныеРегистра.Период КАК Период
	|ИЗ 
	|	ДанныеРегистра КАК ДанныеРегистра
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеРегистра.Период ВОЗР
	|";
	
	Запрос.УстановитьПараметр("СписокДокументов", СписокДокументов);
	Выборка = Запрос.Выполнить().Выбрать();
	ДатаНачала = '00010101';
	Если Выборка.Следующий() Тогда
		ДатаНачала = Выборка.Период;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КурсыВалют.Период КАК Период,
	|	КурсыВалют.Валюта КАК Валюта,
	|	КурсыВалют.Курс КАК Курс,
	|	КурсыВалют.Кратность КАК Кратность
	|ПОМЕСТИТЬ КурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&ДатаНачала, ) КАК КурсыВалют
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КурсыВалют.Период,
	|	КурсыВалют.Валюта,
	|	КурсыВалют.Курс,
	|	КурсыВалют.Кратность
	|ИЗ
	|	РегистрСведений.КурсыВалют КАК КурсыВалют
	|ГДЕ
	|	КурсыВалют.Период > &ДатаНачала
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КурсыВалют.Период,
	|	КурсыВалют.Валюта
	|;
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	МАКСИМУМ(КурсыВалют.Период) КАК ДатаКурсаВалютыВзаиморасчетов
	|ПОМЕСТИТЬ ДатыКурсовВалютыВзаиморасчетов
	|ИЗ
	|	ДанныеРегистра КАК ДанныеРегистра
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсыВалют
	|	ПО
	|		ДанныеРегистра.ВалютаВзаиморасчетов = КурсыВалют.Валюта
	|		И ДанныеРегистра.Период >= КурсыВалют.Период
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРегистра.Регистратор,
	|	ДанныеРегистра.ВалютаВзаиморасчетов
	|;
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ВалютаПлатежа КАК ВалютаПлатежа,
	|	МАКСИМУМ(КурсыВалют.Период) КАК ДатаКурсаВалютыПлатежа
	|ПОМЕСТИТЬ ДатыКурсовВалютыПлатежа
	|ИЗ
	|	ДанныеРегистра КАК ДанныеРегистра
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		КурсыВалют КАК КурсыВалют
	|	ПО
	|		ДанныеРегистра.ВалютаПлатежа = КурсыВалют.Валюта
	|		И ДанныеРегистра.Период >= КурсыВалют.Период
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРегистра.Регистратор,
	|	ДанныеРегистра.ВалютаПлатежа
	|
	|";
    Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ДвиженияДенежныеСредстваКонтрагент(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Активность КАК Активность,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.Подразделение КАК Подразделение,
	|
	|	ДанныеРегистра.ДенежныеСредства КАК ДенежныеСредства,
	|	ДанныеРегистра.ТипДенежныхСредств КАК ТипДенежныхСредств,
	|	ДанныеРегистра.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеРегистра.ВалютаПлатежа КАК ВалютаПлатежа,
	|	ДанныеРегистра.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|
	|	ДанныеРегистра.Партнер КАК Партнер,
	|	ДанныеРегистра.Контрагент КАК Контрагент,
	|	ДанныеРегистра.Договор КАК Договор,
	|	ДанныеРегистра.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ДанныеРегистра.РасчетныйДокумент КАК РасчетныйДокумент,
	|
	|	ДанныеРегистра.СуммаОплаты КАК СуммаОплаты,
	|	ДанныеРегистра.СуммаОплатыРегл КАК СуммаОплатыРегл,
	|	ДанныеРегистра.СуммаОплатыВВалютеПлатежа КАК СуммаОплатыВВалютеПлатежа,
	|	
	|	ДанныеРегистра.СуммаПостоплаты КАК СуммаПостоплаты,
	|	ДанныеРегистра.СуммаПостоплатыРегл КАК СуммаПостоплатыРегл,
	|	ДанныеРегистра.СуммаПостоплатыВВалютеПлатежа КАК СуммаПостоплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.СуммаПредоплаты КАК СуммаПредоплаты,
	|	ДанныеРегистра.СуммаПредоплатыРегл КАК СуммаПредоплатыРегл,
	|	ДанныеРегистра.СуммаПредоплатыВВалютеПлатежа КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДанныеРегистра.СуммаОплатыВВалютеВзаиморасчетов КАК СуммаОплатыВВалютеВзаиморасчетов,
	|	ДанныеРегистра.СуммаПостоплатыВВалютеВзаиморасчетов КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|	ДанныеРегистра.СуммаПредоплатыВВалютеВзаиморасчетов КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|	ДанныеРегистра.ИсточникГФУДенежныхСредств КАК ИсточникГФУДенежныхСредств,
	|	ДанныеРегистра.ИсточникГФУРасчетов КАК ИсточникГФУРасчетов,
	|	ДанныеРегистра.ОтложенноеПроведение КАК ОтложенноеПроведение
	|ИЗ
	|	ДанныеРегистра КАК ДанныеРегистра
	|ГДЕ
	|	НЕ ДанныеРегистра.ОтложенноеПроведение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Активность КАК Активность,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.Подразделение КАК Подразделение,
	|
	|	ДанныеРегистра.ДенежныеСредства КАК ДенежныеСредства,
	|	ДанныеРегистра.ТипДенежныхСредств КАК ТипДенежныхСредств,
	|	ДанныеРегистра.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеРегистра.ВалютаПлатежа КАК ВалютаПлатежа,
	|	ДанныеРегистра.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|
	|	ДанныеРегистра.Партнер КАК Партнер,
	|	ДанныеРегистра.Контрагент КАК Контрагент,
	|	ДанныеРегистра.Договор КАК Договор,
	|	ДанныеРегистра.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ДанныеРегистра.РасчетныйДокумент КАК РасчетныйДокумент,
	|
	|	ДанныеРегистра.СуммаОплаты КАК СуммаОплаты,
	|	ДанныеРегистра.СуммаОплатыРегл КАК СуммаОплатыРегл,
	|	ДанныеРегистра.СуммаОплатыВВалютеПлатежа КАК СуммаОплатыВВалютеПлатежа,
	|	
	|	ДанныеРегистра.СуммаПостоплаты КАК СуммаПостоплаты,
	|	ДанныеРегистра.СуммаПостоплатыРегл КАК СуммаПостоплатыРегл,
	|	ДанныеРегистра.СуммаПостоплатыВВалютеПлатежа КАК СуммаПостоплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.СуммаПредоплаты КАК СуммаПредоплаты,
	|	ДанныеРегистра.СуммаПредоплатыРегл КАК СуммаПредоплатыРегл,
	|	ДанныеРегистра.СуммаПредоплатыВВалютеПлатежа КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДанныеРегистра.СуммаОплатыВВалютеВзаиморасчетов КАК СуммаОплатыВВалютеВзаиморасчетов,
	|	ДанныеРегистра.СуммаПостоплатыВВалютеВзаиморасчетов КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|	ДанныеРегистра.СуммаПредоплатыВВалютеВзаиморасчетов КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|	ДанныеРегистра.ИсточникГФУДенежныхСредств КАК ИсточникГФУДенежныхСредств,
	|	ДанныеРегистра.ИсточникГФУРасчетов КАК ИсточникГФУРасчетов,
	|	ДанныеРегистра.ОтложенноеПроведение КАК ОтложенноеПроведение
	|ИЗ
	|	ДанныеРегистра КАК ДанныеРегистра
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РасчетыСПартнерами КАК РасчетыСПартнерами
	|	ПО 
	|		ДанныеРегистра.Регистратор = РасчетыСПартнерами.Регистратор
	|		И ДанныеРегистра.Организация = РасчетыСПартнерами.Организация
	|ГДЕ
	|	РасчетыСПартнерами.Организация ЕСТЬ NULL
	|	И ДанныеРегистра.ОтложенноеПроведение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеРегистра.Период КАК Период,
	|	ДанныеРегистра.Активность КАК Активность,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	ДанныеРегистра.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеРегистра.Организация КАК Организация,
	|	ДанныеРегистра.Подразделение КАК Подразделение,
	|	
	|	ДанныеРегистра.ДенежныеСредства КАК ДенежныеСредства,
	|	ДанныеРегистра.ТипДенежныхСредств КАК ТипДенежныхСредств,
	|	ДанныеРегистра.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеРегистра.ВалютаПлатежа КАК ВалютаПлатежа,
	|	ДанныеРегистра.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|
	|	ДанныеРегистра.Партнер КАК Партнер,
	|	ДанныеРегистра.Контрагент КАК Контрагент,
	|	ДанныеРегистра.Договор КАК Договор,
	|	ДанныеРегистра.ОбъектРасчетов КАК ОбъектРасчетов,
	|	РасчетыСПартнерами.РасчетныйДокумент КАК РасчетныйДокумент,
	|
	|	0 КАК СуммаОплаты,
	|	0 КАК СуммаОплатыРегл,
	|	0 КАК СуммаОплатыВВалютеПлатежа,
	|
	|	РасчетыСПартнерами.ДолгУпр КАК СуммаПостоплаты,
	|	РасчетыСПартнерами.ДолгРегл КАК СуммаПостоплатыРегл,
	|	
	|	ВЫБОР
	|		КОГДА РасчетыСПартнерами.Долг = ДанныеРегистра.СуммаОплатыВВалютеВзаиморасчетов
	|			ТОГДА ДанныеРегистра.СуммаОплатыВВалютеПлатежа
	|	ИНАЧЕ ВЫРАЗИТЬ(РасчетыСПартнерами.Долг * КурсВалютыВзаиморасчетов.Курс * КурсВалютыПлатежа.Кратность /
	|				  (КурсВалютыВзаиморасчетов.Кратность * КурсВалютыПлатежа.Курс) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаПостоплатыВВалютеПлатежа,
	|
	|	РасчетыСПартнерами.ПредоплатаУпр КАК СуммаПредоплаты,
	|	РасчетыСПартнерами.ПредоплатаРегл КАК СуммаПредоплатыРегл,
	|
	|	ВЫБОР
	|		КОГДА РасчетыСПартнерами.Предоплата = ДанныеРегистра.СуммаОплатыВВалютеВзаиморасчетов
	|			ТОГДА ДанныеРегистра.СуммаОплатыВВалютеПлатежа
	|	ИНАЧЕ ВЫРАЗИТЬ(РасчетыСПартнерами.Предоплата * КурсВалютыВзаиморасчетов.Курс * КурсВалютыПлатежа.Кратность /
	|				  (КурсВалютыВзаиморасчетов.Кратность * КурсВалютыПлатежа.Курс) КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|	ДанныеРегистра.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	0 КАК СуммаОплатыВВалютеВзаиморасчетов,
	|   РасчетыСПартнерами.Долг КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|	РасчетыСПартнерами.Предоплата КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|	ДанныеРегистра.ИсточникГФУДенежныхСредств КАК ИсточникГФУДенежныхСредств,
	|	ДанныеРегистра.ИсточникГФУРасчетов КАК ИсточникГФУРасчетов,
	|	ИСТИНА
	|ИЗ
	|	ДанныеРегистра КАК ДанныеРегистра
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РасчетыСПартнерами КАК РасчетыСПартнерами
	|	ПО 
	|		ДанныеРегистра.Регистратор = РасчетыСПартнерами.Регистратор
	|		И ДанныеРегистра.Организация = РасчетыСПартнерами.Организация
	|		И ДанныеРегистра.Партнер = РасчетыСПартнерами.Партнер
	|		И ДанныеРегистра.Контрагент = РасчетыСПартнерами.Контрагент
	|		И ДанныеРегистра.ОбъектРасчетов = РасчетыСПартнерами.Заказ
	|		И ДанныеРегистра.СтатьяДвиженияДенежныхСредств = РасчетыСПартнерами.СтатьяДвиженияДенежныхСредств
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ДатыКурсовВалютыВзаиморасчетов КАК ДатыКурсовВалютыВзаиморасчетов
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			КурсыВалют КАК КурсВалютыВзаиморасчетов
	|		ПО
	|			ДатыКурсовВалютыВзаиморасчетов.ВалютаВзаиморасчетов = КурсВалютыВзаиморасчетов.Валюта
	|			И ДатыКурсовВалютыВзаиморасчетов.ДатаКурсаВалютыВзаиморасчетов = КурсВалютыВзаиморасчетов.Период
	|	ПО
	|		ДанныеРегистра.Регистратор = ДатыКурсовВалютыВзаиморасчетов.Регистратор
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ДатыКурсовВалютыПлатежа КАК ДатыКурсовВалютыПлатежа
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			КурсыВалют КАК КурсВалютыПлатежа
	|		ПО
	|			ДатыКурсовВалютыПлатежа.ВалютаПлатежа = КурсВалютыПлатежа.Валюта
	|			И ДатыКурсовВалютыПлатежа.ДатаКурсаВалютыПлатежа = КурсВалютыПлатежа.Период
	|	ПО
	|		ДанныеРегистра.Регистратор = ДатыКурсовВалютыПлатежа.Регистратор
	|ГДЕ
	|	НЕ ДанныеРегистра.ОтложенноеПроведение
	|
	|ИТОГИ ПО
	|	Регистратор
	|";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Процедура ЗаписатьДвиженияДенежныеСредстваКонтрагент(ДанныеДвижений)

	ВыборкаПоДокументам = ДанныеДвижений.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоДокументам.Следующий() Цикл
		НаборЗаписей = РегистрыНакопления.ДвиженияДенежныеСредстваКонтрагент.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаПоДокументам.Регистратор);
		Выборка = ВыборкаПоДокументам.Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
		КонецЦикла;
		НаборЗаписей.Записать();
	КонецЦикла;

КонецПроцедуры

Функция ТекстЗапросаПередЗаписью(ИмяРегистра)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Таблица.Период,
	|	Таблица.Регистратор,
	|	%ТекстИзмерения%,
	|	%ТекстРеквизиты%,
	|	%ТекстРесурсы%
	|ПОМЕСТИТЬ ИсходнаяТаблица
	|ИЗ 
	|	%ИмяРегистра% КАК Таблица
	|ГДЕ
	|	Таблица.Регистратор = &Регистратор
	|";
	
	Измерения = Метаданные.РегистрыНакопления[ИмяРегистра].Измерения;
	КоличествоИзмерений = Измерения.Количество();
	ТекстИзмерения = "";
	Для каждого Измерение Из Измерения Цикл
		ТекстИзмерения = ТекстИзмерения + Символы.ПС + Символы.Таб + "Таблица." + Измерение.Имя;
		ТекстИзмерения = ТекстИзмерения + ?(Измерения.Индекс(Измерение) = КоличествоИзмерений - 1, "", ",");
	КонецЦикла;
	Реквизиты = Метаданные.РегистрыНакопления[ИмяРегистра].Реквизиты;
	КоличествоРеквизитов = Реквизиты.Количество();
	ТекстРеквизиты = "";
	Для каждого Реквизит Из Реквизиты Цикл
		ТекстРеквизиты = ТекстРеквизиты + Символы.ПС + Символы.Таб + "Таблица." + Реквизит.Имя;
		ТекстРеквизиты = ТекстРеквизиты + ?(Реквизиты.Индекс(Реквизит) = КоличествоРеквизитов - 1, "", ",");
	КонецЦикла;
	Ресурсы = Метаданные.РегистрыНакопления[ИмяРегистра].Ресурсы;
	КоличествоРесурсов = Ресурсы.Количество();
	ТекстРесурсы = "";
	Для каждого Ресурс Из Ресурсы Цикл
		ТекстРесурсы = ТекстРесурсы + Символы.ПС + Символы.Таб + "Таблица." + Ресурс.Имя;
		ТекстРесурсы = ТекстРесурсы + ?(Ресурсы.Индекс(Ресурс) = КоличествоРесурсов - 1, "", ",");
	КонецЦикла;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТекстИзмерения%", ТекстИзмерения);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТекстРеквизиты%", ТекстРеквизиты);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТекстРесурсы%", ТекстРесурсы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИмяРегистра%", "РегистрНакопления." + ИмяРегистра);

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПриЗаписи(ИмяРегистра)

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Таблица.Период,
	|	Таблица.Регистратор,
	|	%ТекстИзмерения%,
	|	%ТекстРеквизиты%,
	|	%ТекстРесурсы%
	|ИЗ 
	|	(
	|	ВЫБРАТЬ
	|		Таблица.Период,
	|		Таблица.Регистратор,
	|		%ТекстИзмерения%,
	|		%ТекстРеквизиты%,
	|		%ТекстРесурсыИсходнойТаблицы%
	|	ИЗ
	|		ИсходнаяТаблица КАК Таблица
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Таблица.Период,
	|		Таблица.Регистратор,
	|		%ТекстИзмерения%,
	|		%ТекстРеквизиты%,
	|		%ТекстРесурсыНовойТаблицы%
	|	ИЗ
	|		%ИмяРегистра% КАК Таблица
	|	ГДЕ
	|		Таблица.Регистратор = &Регистратор
	|	) КАК Таблица
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Период,
	|	Таблица.Регистратор,
	|	%ТекстИзмерения%,
	|	%ТекстРеквизиты%
	|ИМЕЮЩИЕ
	|	%ТекстИмеющие%
	|";
	
	Измерения = Метаданные.РегистрыНакопления[ИмяРегистра].Измерения;
	КоличествоИзмерений = Измерения.Количество();
	ТекстИзмерения = "";
	Для каждого Измерение Из Измерения Цикл
		ТекстИзмерения = ТекстИзмерения + Символы.ПС + Символы.Таб + Символы.Таб + "Таблица." + Измерение.Имя;
		ТекстИзмерения = ТекстИзмерения + ?(Измерения.Индекс(Измерение) = КоличествоИзмерений - 1, "", ",");
	КонецЦикла;
	Реквизиты = Метаданные.РегистрыНакопления[ИмяРегистра].Реквизиты;
	КоличествоРеквизитов = Реквизиты.Количество();
	ТекстРеквизиты = "";
	Для каждого Реквизит Из Реквизиты Цикл
		ТекстРеквизиты = ТекстРеквизиты + Символы.ПС + Символы.Таб + Символы.Таб + "Таблица." + Реквизит.Имя;
		ТекстРеквизиты = ТекстРеквизиты + ?(Реквизиты.Индекс(Реквизит) = КоличествоРеквизитов - 1, "", ",");
	КонецЦикла;
	Ресурсы = Метаданные.РегистрыНакопления[ИмяРегистра].Ресурсы;
	КоличествоРесурсов = Ресурсы.Количество();
	ТекстРесурсы = "";
	ТекстРесурсыИсходнойТаблицы = "";
	ТекстРесурсыНовойТаблицы = "";
	ТекстИмеющие = "";
	Для каждого Ресурс Из Ресурсы Цикл
		ТекстРесурсы = ТекстРесурсы + Символы.ПС + Символы.Таб + "Сумма(Таблица." + Ресурс.Имя + ")";
		ТекстРесурсы = ТекстРесурсы + ?(Ресурсы.Индекс(Ресурс) = КоличествоРесурсов - 1, "", ",");
		ТекстРесурсыИсходнойТаблицы = ТекстРесурсыИсходнойТаблицы + Символы.ПС + Символы.Таб + Символы.Таб + "Таблица." + Ресурс.Имя;
		ТекстРесурсыИсходнойТаблицы = ТекстРесурсыИсходнойТаблицы + ?(Ресурсы.Индекс(Ресурс) = КоличествоРесурсов - 1, "", ",");
		ТекстРесурсыНовойТаблицы = ТекстРесурсыНовойТаблицы + Символы.ПС + Символы.Таб + Символы.Таб + "-Таблица." + Ресурс.Имя;
		ТекстРесурсыНовойТаблицы = ТекстРесурсыНовойТаблицы + ?(Ресурсы.Индекс(Ресурс) = КоличествоРесурсов - 1, "", ",");
		ТекстИмеющие = ТекстИмеющие + Символы.ПС + Символы.Таб + ?(ТекстИмеющие = "", "Сумма(Таблица." + Ресурс.Имя + ") <> 0",
			"ИЛИ Сумма(Таблица." + Ресурс.Имя + ") <> 0");
	КонецЦикла;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТекстИзмерения%", ТекстИзмерения);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТекстРеквизиты%", ТекстРеквизиты);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТекстРесурсы%", ТекстРесурсы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТекстРесурсыИсходнойТаблицы%", ТекстРесурсыИсходнойТаблицы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТекстРесурсыНовойТаблицы%", ТекстРесурсыНовойТаблицы);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ТекстИмеющие%", ТекстИмеющие);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИмяРегистра%", "РегистрНакопления." + ИмяРегистра);

	Возврат ТекстЗапроса;
	
КонецФункции

// Процедура возвращает исходный набор записей регистра если нет изменений в текущем (записываемом) наборе.
// Цель сохранить отложенные движения при повторном перепроведении документа.
//
Процедура ВосстановитьОтложенноеПроведение(Источник)
	
	Если Источник.ДополнительныеСвойства.Свойство("ОтложенноеПроведение") ИЛИ Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапросаСравнения());
	Запрос.МенеджерВременныхТаблиц = Источник.ДополнительныеСвойства.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НовыеДвижения", Источник.Выгрузить());
	
	// Запрос вернет исходную таблицу набора если в новом наборе нет изменений относительно предыдущего
	Исходная = Запрос.Выполнить().Выгрузить();
	Если Исходная.Количество() > 0 Тогда
		Источник.Загрузить(Исходная);
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаСравнения()
	
	// Если нет изменений - вернуть исходную таблицу
	Возврат
	"ВЫБРАТЬ
	|	Таблица.Период,
	|	Таблица.ХозяйственнаяОперация,
	|	Таблица.Организация,
	|	Таблица.Подразделение,
	|	Таблица.Партнер,
	|	Таблица.Контрагент,
	|	Таблица.Договор,
	|	Таблица.ОбъектРасчетов,
	|	Таблица.КорПартнер,
	|	Таблица.КорКонтрагент,
	|	Таблица.КорДоговор,
	|	Таблица.КорОбъектРасчетов,
	|	Таблица.Валюта,
	|	Таблица.СуммаВВалюте
	|ПОМЕСТИТЬ втНовыеДвижения
	|ИЗ
	|	&НовыеДвижения КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Период,
	|	Таблица.ХозяйственнаяОперация,
	|	Таблица.Организация,
	|	Таблица.Подразделение,
	|	Таблица.Партнер,
	|	Таблица.Контрагент,
	|	Таблица.Договор,
	|	Таблица.ОбъектРасчетов,
	|	Таблица.КорПартнер,
	|	Таблица.КорКонтрагент,
	|	Таблица.КорДоговор,
	|	Таблица.КорОбъектРасчетов,
	|	Таблица.Валюта,
	|	СУММА(Таблица.СуммаВВалюте) КАК СуммаВВалюте
	|ПОМЕСТИТЬ втИзменения
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИсходнаяТаблица.Период КАК Период,
	|		ИсходнаяТаблица.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		ИсходнаяТаблица.Организация КАК Организация,
	|		ИсходнаяТаблица.Подразделение КАК Подразделение,
	|		ИсходнаяТаблица.Партнер КАК Партнер,
	|		ИсходнаяТаблица.Контрагент КАК Контрагент,
	|		ИсходнаяТаблица.Договор КАК Договор,
	|		ИсходнаяТаблица.ОбъектРасчетов КАК ОбъектРасчетов,
	|		ИсходнаяТаблица.КорПартнер КАК КорПартнер,
	|		ИсходнаяТаблица.КорКонтрагент КАК КорКонтрагент,
	|		ИсходнаяТаблица.КорДоговор КАК КорДоговор,
	|		ИсходнаяТаблица.КорОбъектРасчетов КАК КорОбъектРасчетов,
	|		ИсходнаяТаблица.Валюта КАК Валюта,
	|		ИсходнаяТаблица.СуммаВВалюте КАК СуммаВВалюте
	|	ИЗ
	|		ИсходнаяТаблица КАК ИсходнаяТаблица
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НовыеДвижения.Период,
	|		НовыеДвижения.ХозяйственнаяОперация,
	|		НовыеДвижения.Организация,
	|		НовыеДвижения.Подразделение,
	|		ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(НовыеДвижения.Контрагент) = ТИП(Справочник.Организации)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ НовыеДвижения.Партнер
	|		КОНЕЦ,
	|		НовыеДвижения.Контрагент,
	|		НовыеДвижения.Договор,
	|		НовыеДвижения.ОбъектРасчетов,
	|		ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(НовыеДвижения.КорКонтрагент) = ТИП(Справочник.Организации)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ НовыеДвижения.КорПартнер
	|		КОНЕЦ,
	|		НовыеДвижения.КорКонтрагент,
	|		НовыеДвижения.КорДоговор,
	|		НовыеДвижения.КорОбъектРасчетов,
	|		НовыеДвижения.Валюта,
	|		-НовыеДвижения.СуммаВВалюте
	|	ИЗ
	|		втНовыеДвижения КАК НовыеДвижения) КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Период,
	|	Таблица.ХозяйственнаяОперация,
	|	Таблица.Организация,
	|	Таблица.Подразделение,
	|	Таблица.Партнер,
	|	Таблица.Контрагент,
	|	Таблица.Договор,
	|	Таблица.ОбъектРасчетов,
	|	Таблица.КорПартнер,
	|	Таблица.КорКонтрагент,
	|	Таблица.КорДоговор,
	|	Таблица.КорОбъектРасчетов,
	|	Таблица.Валюта
	|
	|ИМЕЮЩИЕ
	|	СУММА(Таблица.СуммаВВалюте) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Период,
	|	Таблица.Регистратор,
	|	
	|	Таблица.ХозяйственнаяОперация,
	|	Таблица.Организация,
	|	Таблица.Подразделение,
	|	Таблица.Партнер,
	|	Таблица.Контрагент,
	|	Таблица.Договор,
	|	Таблица.ОбъектРасчетов,
	|	Таблица.КорПартнер,
	|	Таблица.КорКонтрагент,
	|	Таблица.КорДоговор,
	|	Таблица.КорОбъектРасчетов,
	|	Таблица.ТипСуммы,
	|	Таблица.КорТипСуммы,
	|	
	|	Таблица.Валюта,
	|	Таблица.СуммаВВалюте,
	|	Таблица.СуммаБезНДСВВалюте,
	|	Таблица.ВалютаВзаиморасчетов,
	|	Таблица.СуммаВВалютеВзаиморасчетов,
	|	Таблица.СуммаБезНДСВВалютеВзаиморасчетов,
	|	Таблица.КорВалютаВзаиморасчетов,
	|	Таблица.КорСуммаВВалютеВзаиморасчетов,
	|	Таблица.КорСуммаБезНДСВВалютеВзаиморасчетов,
	|	Таблица.ИсточникГФУРасчетов,
	|	Таблица.КорИсточникГФУРасчетов,
	|	
	|	Таблица.Сумма,
	|	Таблица.СуммаБезНДС,
	|	Таблица.СуммаРегл,
	|	Таблица.СуммаРеглБезНДС
	|ИЗ
	|	ИсходнаяТаблица КАК Таблица
	|ГДЕ
	|	НЕ (ИСТИНА В (ВЫБРАТЬ ПЕРВЫЕ 1 ИСТИНА ИЗ втИзменения))";
	
КонецФункции

Функция НеКонтролироватьИзмененияРегистра(Источник)
	
	Возврат РасчетСебестоимости.ДвиженияЗаписываютсяРасчетомСебестоимости(Источник)
			 ИЛИ Источник.ДополнительныеСвойства.Свойство("ИзменилисьДанныеРегистра");
	
КонецФункции

#Область ОбновлениеИнформационнойБазы


// Сервисная процедура, используемая в обработчиках обновления.
// Добавляет отбор по хозяйственным операциям в текст запроса.
//
Процедура ДобавитьВключаемыеХозоперации(ТекстЗапросаПоДокументу, ВключаемыеХозоперации) Экспорт

	Если ВключаемыеХозоперации.Количество() > 0 Тогда
		Хозоперации = "";
		Для Каждого Хозоперация Из ВключаемыеХозоперации Цикл
			Хозоперации = Хозоперации + ?(Не ПустаяСтрока(Хозоперации), ", ", "") + "ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации." + Хозоперация + ")";
		КонецЦикла;
		ТекстЗапросаПоДокументу = СтрЗаменить(ТекстЗапросаПоДокументу, "%ВключаемыеХозоперации%",
			"ДанныеДокумента.ХозяйственнаяОперация В (" + Хозоперации + ")");
	Иначе
		ТекстЗапросаПоДокументу = СтрЗаменить(ТекстЗапросаПоДокументу, "%ВключаемыеХозоперации%", "ИСТИНА");
	КонецЕсли;

КонецПроцедуры

// Запись параметров отложенного обновления в константу для передачи в обработку следующей порции данных.
//
// Параметры:
//	ПараметрыОбработчиковОбновления - Структура - параметры обработчика обновления
//
Процедура ЗаписатьИнформациюОбОтложенномОбновлении(ПараметрыОбработчиковОбновления) Экспорт

	МенеджерКонстанты = Константы.ПараметрыОбработчиковОбновления.СоздатьМенеджерЗначения();
	МенеджерКонстанты.Значение = Новый ХранилищеЗначения(ПараметрыОбработчиковОбновления);
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(МенеджерКонстанты);

КонецПроцедуры

// Записывет набор если количество записей в наборе больше 10 000.
//
// Параметры:
//	НаборЗаписей - НаборЗаписейРегистра - Записываемый набор записей регистра накопления, сведений, бухгалтерии
//	КоличествоЗаписей - Число - Количество записей в наборе
//	ЗаписатьЕслиЕстьЗаписи - Булево - Принудительная запись не пустого набора
//
Процедура ЗаписатьНаборЗаписей(НаборЗаписей, КоличествоЗаписей, ЗаписатьЕслиЕстьЗаписи = Ложь) Экспорт

	Если КоличествоЗаписей = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если КоличествоЗаписей > 10000 ИЛИ ЗаписатьЕслиЕстьЗаписи  Тогда
		
		КоличествоЗаписей = 0;
		
		НаборЗаписей.ДополнительныеСвойства.Вставить("ОтключитьМеханизмРегистрацииОбъектов"); 
		НаборЗаписей.ОбменДанными.Получатели.АвтоЗаполнение = Ложь;
		НаборЗаписей.Записать(Ложь);
		
	КонецЕсли;

КонецПроцедуры

// Загружает коллекцию движений в набор записей и записывает набор с признаком ОбменДанными.Загрузка = Истина.
//
// Параметры:
//  Регистратор - ДокументСсылка - Регистратор записываемого набора записей регистра накопления, сведений, бухгалтерии
//  ИмяРегистра - Строка - Имя регистра накопления, сведений, бухгалтерии
//  КоллекцияДвижений - ВыборкаИзРезультатаЗапроса,ТаблицаЗначений,Массив - коллекция содержащая записи регистра
//  ДолнительныеПараметры - Структура - дополнительные параметры и флаги уточняющие загрузку движений
//    может содержать следующие ключи:
//    Регистры - КоллекцияРегистрыНакопления,КоллекцияРегистрыБухгалтерии,КоллекцияРегистрыСведений - Коллекция регистров по умолчанию <РегистрыНакопления>
//    НеЗаписыватьПустойНабор - Булево - по умолчанию пустые наборы не записываются
//    РегистрироватьНаУзлахПлановОбмена - Булево - включает регистрацию на узлах планов обмена при записи объекта по умолчанию изменения Регистрируются не узлах обмена.
//
Процедура ЗагрузитьДвижения(Регистратор, ИмяРегистра, КоллекцияДвижений = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	// Определимся со значения дополнительных параметров
	Регистры = РегистрыНакопления;
	НеЗаписыватьПустойНабор = Ложь;
	РегистрироватьНаУзлахПлановОбмена = Ложь;
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") Тогда
		Если ДополнительныеПараметры.Свойство("Регистры") Тогда
			Регистры = ДополнительныеПараметры.Регистры;
		КонецЕсли;
		Если ДополнительныеПараметры.Свойство("НеЗаписыватьПустойНабор") Тогда
			НеЗаписыватьПустойНабор = ДополнительныеПараметры.НеЗаписыватьПустойНабор;
		КонецЕсли;
		Если ДополнительныеПараметры.Свойство("РегистрироватьНаУзлахПлановОбмена") Тогда
			РегистрироватьНаУзлахПлановОбмена = ДополнительныеПараметры.Свойство("РегистрироватьНаУзлахПлановОбмена");
		КонецЕсли;
	КонецЕсли;
	
	Если НеЗаписыватьПустойНабор И КоллекцияДвижений.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Набор = Регистры[ИмяРегистра].СоздатьНаборЗаписей();
	Набор.Отбор.Регистратор.Установить(Регистратор);
	Если КоллекцияДвижений <> Неопределено Тогда
		Если ТипЗнч(КоллекцияДвижений) = Тип("ТаблицаЗначений") Тогда
			Набор.Загрузить(КоллекцияДвижений);
			
		ИначеЕсли ТипЗнч(КоллекцияДвижений) = Тип("ВыборкаИзРезультатаЗапроса") Тогда
			Пока КоллекцияДвижений.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(Набор.Добавить(), КоллекцияДвижений);
			КонецЦикла;
			
		Иначе
			Для Каждого Движение Из КоллекцияДвижений Цикл
				ЗаполнитьЗначенияСвойств(Набор.Добавить(), Движение);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;// КоллекцияДвижений определена
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор, РегистрироватьНаУзлахПлановОбмена);
	
КонецПроцедуры


#КонецОбласти

#КонецОбласти
