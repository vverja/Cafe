#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область СлужебныйПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - УправляемаяФорма - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - Структура - см. возвращаемое значение ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	Настройки.События.ПриСозданииНаСервере = Истина;
	Настройки.События.ПриОпределенииПараметровВыбора = Истина;
	Настройки.События.ПередЗагрузкойНастроекВКомпоновщик = Истина;
КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   Форма - УправляемаяФорма - Форма отчета.
//   Отказ - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Передается из параметров обработчика "как есть".
//
// См. также:
//   "УправляемаяФорма.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
	Параметры = ЭтаФорма.Параметры;
	КомпоновщикНастроекФормы = ЭтаФорма.Отчет.КомпоновщикНастроек;
	НастройкиОтчета = ЭтаФорма.НастройкиОтчета;
	
	Схема = ПолучитьИзВременногоХранилища(ЭтаФорма.НастройкиОтчета.АдресСхемы);
	Поля = Схема.НаборыДанных.КонтрольОформленияДокументов.Поля;
	ПолеСклад = Поля.Найти("Склад");
	Если ПолеСклад <> Неопределено Тогда
		ПараметрыРедактирования = ПолеСклад.ПараметрыРедактирования.Элементы;
	КонецЕсли;
КонецПроцедуры

// Вызывается перед загрузкой новых настроек. Используется для изменения схемы компоновки.
//   Например, если схема отчета зависит от ключа варианта или параметров отчета.
//   Чтобы изменения схемы вступили в силу следует вызывать метод ОтчетыСервер.ПодключитьСхему().
//
// Параметры:
//   Контекст - Произвольный - 
//       Параметры контекста, в котором используется отчет.
//       Используется для передачи в параметрах метода ОтчетыСервер.ПодключитьСхему().
//   КлючСхемы - Строка -
//       Идентификатор текущей схемы компоновщика настроек.
//       По умолчанию не заполнен (это означает что компоновщик инициализирован на основании основной схемы).
//       Используется для оптимизации, чтобы переинициализировать компоновщик как можно реже).
//       Может не использоваться если переинициализация выполняется безусловно.
//   КлючВарианта - Строка, Неопределено -
//       Имя предопределенного или уникальный идентификатор пользовательского варианта отчета.
//       Неопределено когда вызов для варианта расшифровки или без контекста.
//   НовыеНастройкиКД - НастройкиКомпоновкиДанных, Неопределено -
//       Настройки варианта отчета, которые будут загружены в компоновщик настроек после его инициализации.
//       Неопределено когда настройки варианта не надо загружать (уже загружены ранее).
//   НовыеПользовательскиеНастройкиКД - ПользовательскиеНастройкиКомпоновкиДанных, Неопределено -
//       Пользовательские настройки, которые будут загружены в компоновщик настроек после его инициализации.
//       Неопределено когда пользовательские настройки не надо загружать (уже загружены ранее).
//
// Примеры:
// 1. Компоновщик отчета инициализируется на основании схемы из общих макетов:
//	Если КлючСхемы <> "1" Тогда
//		КлючСхемы = "1";
//		СхемаКД = ПолучитьОбщийМакет("МояОбщаяСхемаКомпоновки");
//		ОтчетыСервер.ПодключитьСхему(ЭтотОбъект, Контекст, СхемаКД, КлючСхемы);
//	КонецЕсли;
//
// 2. Схема зависит от значения параметра, выведенного в пользовательские настройки отчета:
//	Если ТипЗнч(НовыеПользовательскиеНастройкиКД) = Тип("ПользовательскиеНастройкиКомпоновкиДанных") Тогда
//		ПолноеИмяОбъектаМетаданных = "";
//		Для Каждого ЭлементКД Из НовыеПользовательскиеНастройкиКД.Элементы Цикл
//			Если ТипЗнч(ЭлементКД) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
//				ИмяПараметра = Строка(ЭлементКД.Параметр);
//				Если ИмяПараметра = "ОбъектМетаданных" Тогда
//					ПолноеИмяОбъектаМетаданных = ЭлементКД.Значение;
//				КонецЕсли;
//			КонецЕсли;
//		КонецЦикла;
//		Если КлючСхемы <> ПолноеИмяОбъектаМетаданных Тогда
//			КлючСхемы = ПолноеИмяОбъектаМетаданных;
//			СхемаКД = Новый СхемаКомпоновкиДанных;
//			// Наполнение схемы...
//			ОтчетыСервер.ПодключитьСхему(ЭтотОбъект, Контекст, СхемаКД, КлючСхемы);
//		КонецЕсли;
//	КонецЕсли;
//
Процедура ПередЗагрузкойНастроекВКомпоновщик(Контекст, КлючСхемы, КлючВарианта, НовыеНастройкиКД, НовыеПользовательскиеНастройкиКД) Экспорт
	Если КлючСхемы <> "ОграничениеВыбораОрдерныхСкладов" Тогда
		КлючСхемы = "ОграничениеВыбораОрдерныхСкладов";
		
		ПолеНабораДанныхСклад = СхемаКомпоновкиДанных.НаборыДанных.КонтрольОформленияДокументов.Поля.Найти("Склад");
		Если ТипЗнч(ПолеНабораДанныхСклад) = Тип("ПолеНабораДанныхСхемыКомпоновкиДанных") Тогда
			ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрВыбора(ПолеНабораДанныхСклад, "Ссылка", ОрдерныеСклады());
		КонецЕсли;
		
		ОтчетыСервер.ПодключитьСхему(ЭтотОбъект, Контекст, СхемаКомпоновкиДанных, КлючСхемы);
	КонецЕсли;
КонецПроцедуры

// Вызывается в форме отчета перед выводом настройки.
//
// Параметры:
//   Форма - УправляемаяФорма - Форма отчета.
//   СвойстваНастройки - Структура - Описание настройки отчета, которая будет выведена в форме отчета.
//       * ОписаниеТипов - ОписаниеТипов -
//           Тип настройки.
//       * ЗначенияДляВыбора - СписокЗначений -
//           Объекты, которые будут предложены пользователю в списке выбора.
//           Дополняет список объектов, уже выбранных пользователем ранее.
//       * ЗапросЗначенийВыбора - Запрос -
//           Возвращает объекты, которыми необходимо дополнить ЗначенияДляВыбора.
//           Первой колонкой (с 0м индексом) должен выбираться объект,
//           который следует добавить в ЗначенияДляВыбора.Значение.
//           Для отключения автозаполнения
//           в свойство ЗапросЗначенийВыбора.Текст следует записать пустую строку.
//       * ОграничиватьВыборУказаннымиЗначениями - Булево -
//           Когда Истина, то выбор пользователя будет ограничен значениями,
//           указанными в ЗначенияДляВыбора (его конечным состоянием).
//
Процедура ПриОпределенииПараметровВыбора(Форма, СвойстваНастройки) Экспорт
	Если СвойстваНастройки.ПолеКД = Новый ПолеКомпоновкиДанных("ВидОперации") Тогда
		Доступные = ДоступныеВидыОперацийИЗапросы();
		ВидыОпераций = Доступные.ВыгрузитьКолонку("ВидОперации");
		СвойстваНастройки.ЗначенияДляВыбора.ЗагрузитьЗначения(ВидыОпераций);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	СхемаКомпоновкиДанных.НаборыДанных.КонтрольОформленияДокументов.Запрос = ТекстЗапросаКонтрольОформленияДокументовТовародвижений();
	
	// Сформируем отчет
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);

	// Удалим отборы по пустым полям из запроса по излишкам / недостачам
	ИсходныйЗапросМакета = МакетКомпоновки.НаборыДанных.КонтрольОформленияДокументов.Запрос;
	МакетКомпоновки.НаборыДанных.КонтрольОформленияДокументов.Запрос = 
		ТекстЗапросаОформлениеИзлишковНедостачБезОтоборов(ИсходныйЗапросМакета);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТекстЗапросаПродажи()
	// Строковые литералы локализуются в настройках СКД отчета
	// Наборы данных - Поля - Доступные значения
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""Отгрузка клиентам"" КАК ВидОперации,
	|	""Оформление складских документов"" КАК ТипОтклонения,
	|	ВЫБОР
	|		КОГДА ТоварыКОтгрузке.КОтгрузкеОстаток - ТоварыКОтгрузке.КОформлениюОстаток <> 0
	|			ТОГДА ""Завершите оформление расходных ордеров на товары""
	|	КОНЕЦ КАК Рекомендация,
	|	ВЫБОР
	|		КОГДА ТоварыКОтгрузке.КОтгрузкеОстаток - ТоварыКОтгрузке.КОформлениюОстаток <> 0
	|			ТОГДА -ТоварыКОтгрузке.КОтгрузкеОстаток
	|	КОНЕЦ КАК НезавершеннаяСкладскаяОперация,
	|	0 КАК НезавершеннаяФинансоваяОперация,
	|	ТоварыКОтгрузке.ДокументОтгрузки.Дата КАК ДатаОперации,
	|	ТоварыКОтгрузке.ДокументОтгрузки КАК Распоряжение,
	|	ТоварыКОтгрузке.Склад КАК Склад,
	|	ТоварыКОтгрузке.Номенклатура КАК Номенклатура,
	|	ТоварыКОтгрузке.Характеристика КАК Характеристика,
	|	ТоварыКОтгрузке.Серия,
	|	ТоварыКОтгрузке.Назначение
	|{ВЫБРАТЬ
	|	Склад.*,
	|	Номенклатура.*,
	|	Характеристика.*,
	|	Серия.*,
	|	Назначение.*}
	|ИЗ
	|	РегистрНакопления.ТоварыКОтгрузке.Остатки(
	|		&Период, 
	|		ТИПЗНАЧЕНИЯ(ДокументОтгрузки) В (ТИП(Документ.ЗаказКлиента), 
	|			ТИП(Документ.РеализацияТоваровУслуг), 
	|			ТИП(Документ.ЗаявкаНаВозвратТоваровОтКлиента)) 
	|		{(ДокументОтгрузки).* КАК Распоряжение, (Склад).*, (Номенклатура).*, (Характеристика).*, (Серия).*, (Назначение).*}
	|	) КАК ТоварыКОтгрузке
	|ГДЕ
	|	ТоварыКОтгрузке.КОтгрузкеОстаток - ТоварыКОтгрузке.КОформлениюОстаток <> 0
	|{ГДЕ
	|	(""Отгрузка клиентам"") КАК ВидОперации,
	|	(""Оформление складских документов"") КАК ТипОтклонения,
	|	(ВЫБОР
	|			КОГДА ТоварыКОтгрузке.КОтгрузкеОстаток - ТоварыКОтгрузке.КОформлениюОстаток <> 0
	|				ТОГДА ""Завершите оформление расходных ордеров на товары""
	|		КОНЕЦ) КАК Рекомендация,
	|	(ВЫБОР
	|			КОГДА ТоварыКОтгрузке.КОтгрузкеОстаток - ТоварыКОтгрузке.КОформлениюОстаток <> 0
	|				ТОГДА -ТоварыКОтгрузке.КОтгрузкеОстаток
	|		КОНЕЦ) КАК НезавершеннаяСкладскаяОперация}";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаВозвратыТоваровОтКлиентов()
	// Строковые литералы локализуются в настройках СКД отчета
	// Наборы данных - Поля - Доступные значения
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""Возвраты товаров от клиентов"" КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|			ТОГДА ""Оформление финансовых документов""
	|		ИНАЧЕ ""Оформление складских документов""
	|	КОНЕЦ КАК ТипОтклонения,
	|	ВЫБОР
	|		КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|			ТОГДА ""Оформите возврат товаров от клиента""
	|		ИНАЧЕ ""Оформите приходные ордера на товары""
	|	КОНЕЦ КАК Рекомендация,
	|	ВЫБОР
	|		КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ТоварыКОформлениюПоступления.КОформлениюОстаток
	|	КОНЕЦ КАК НезавершеннаяСкладскаяОперация,
	|	ВЫБОР
	|		КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|			ТОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НезавершеннаяФинансоваяОперация,
	|	ТоварыКОформлениюПоступления.ДокументПоступления.Дата КАК ДатаОперации,
	|	ТоварыКОформлениюПоступления.ДокументПоступления КАК Распоряжение,
	|	ТоварыКОформлениюПоступления.Склад КАК Склад,
	|	ТоварыКОформлениюПоступления.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлениюПоступления.Характеристика КАК Характеристика,
	|	ТоварыКОформлениюПоступления.Серия КАК Серия,
	|	ТоварыКОформлениюПоступления.Назначение КАК Назначение
	|{ВЫБРАТЬ
	|	Склад.*,
	|	Номенклатура.*,
	|	Характеристика.*,
	|	Серия.*,
	|	Назначение.*}
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюПоступления.Остатки(
	|		&Период, 
	|		ТИПЗНАЧЕНИЯ(ДокументПоступления) В (ТИП(Документ.ЗаявкаНаВозвратТоваровОтКлиента), 
	|			ТИП(Документ.ВозвратТоваровОтКлиента)) 
	|		{(ДокументПоступления).* КАК Распоряжение, (Склад).*, (Номенклатура).*, (Характеристика).*, (Серия).*, (Назначение).*}
	|	) КАК ТоварыКОформлениюПоступления
	|{ГДЕ
	|	(""Возвраты товаров от клиентов"") КАК ВидОперации,
	|	(ВЫБОР
	|			КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|				ТОГДА ""Оформление финансовых документов""
	|			ИНАЧЕ ""Оформление складских документов""
	|		КОНЕЦ) КАК ТипОтклонения,
	|	(ВЫБОР
	|			КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|				ТОГДА ""Оформите возврат товаров от клиента""
	|			ИНАЧЕ ""Оформите приходные ордера на товары""
	|		КОНЕЦ) КАК Рекомендация,
	|	(ВЫБОР
	|			КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|				ТОГДА 0
	|			ИНАЧЕ -ТоварыКОформлениюПоступления.КОформлениюОстаток
	|		КОНЕЦ) КАК НезавершеннаяСкладскаяОперация,
	|	(ВЫБОР
	|			КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|				ТОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НезавершеннаяФинансоваяОперация}";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаЗакупки()
	// Строковые литералы локализуются в настройках СКД отчета
	// Наборы данных - Поля - Доступные значения
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""Приемка от поставщиков"" КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|			ТОГДА ""Оформление финансовых документов""
	|		ИНАЧЕ ""Оформление складских документов""
	|	КОНЕЦ КАК ТипОтклонения,
	|	ВЫБОР
	|		КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|			ТОГДА ""Оформите поступление товаров и услуг""
	|		ИНАЧЕ ""Оформите приходные ордера на товары""
	|	КОНЕЦ КАК Рекомендация,
	|	ВЫБОР
	|		КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ТоварыКОформлениюПоступления.КОформлениюОстаток
	|	КОНЕЦ КАК НезавершеннаяСкладскаяОперация,
	|	ВЫБОР
	|		КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|			ТОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НезавершеннаяФинансоваяОперация,
	|	ТоварыКОформлениюПоступления.ДокументПоступления.Дата КАК ДатаОперации,
	|	ТоварыКОформлениюПоступления.ДокументПоступления КАК Распоряжение,
	|	ТоварыКОформлениюПоступления.Склад КАК Склад,
	|	ТоварыКОформлениюПоступления.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлениюПоступления.Характеристика КАК Характеристика,
	|	ТоварыКОформлениюПоступления.Серия,
	|	ТоварыКОформлениюПоступления.Назначение
	|{ВЫБРАТЬ
	|	Склад.*,
	|	Номенклатура.*,
	|	Характеристика.*,
	|	Серия.*,
	|	Назначение.*}
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюПоступления.Остатки(
	|		&Период, 
	|		ТИПЗНАЧЕНИЯ(ДокументПоступления) В (ТИП(Документ.ЗаказПоставщику), 
	|			ТИП(Документ.ПоступлениеТоваровУслуг), 
	|			ТИП(Справочник.СоглашенияСПоставщиками)) 
	|		{(ДокументПоступления).* КАК Распоряжение, (Склад).*, (Номенклатура).*, (Характеристика).*, (Серия).*, (Назначение).*}
	|	) КАК ТоварыКОформлениюПоступления
	|{ГДЕ
	|	(""Приемка от поставщиков"") КАК ВидОперации,
	|	(ВЫБОР
	|			КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|				ТОГДА ""Оформление финансовых документов""
	|			ИНАЧЕ ""Оформление складских документов""
	|		КОНЕЦ) КАК ТипОтклонения,
	|	(ВЫБОР
	|			КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|				ТОГДА ""Оформите поступление товаров и услуг""
	|			ИНАЧЕ ""Оформите приходные ордера на товары""
	|		КОНЕЦ) КАК Рекомендация,
	|	(ВЫБОР
	|			КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|				ТОГДА 0
	|			ИНАЧЕ -ТоварыКОформлениюПоступления.КОформлениюОстаток
	|		КОНЕЦ) КАК НезавершеннаяСкладскаяОперация,
	|	(ВЫБОР
	|			КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|				ТОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НезавершеннаяФинансоваяОперация}";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаВозвратыТоваровПоставщикам()
	// Строковые литералы локализуются в настройках СКД отчета
	// Наборы данных - Поля - Доступные значения
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""Возвраты товаров поставщикам"" КАК ВидОперации,
	|	""Оформление складских документов"" КАК ТипОтклонения,
	|	ВЫБОР
	|		КОГДА ТоварыКОтгрузке.КОтгрузкеОстаток - ТоварыКОтгрузке.КОформлениюОстаток <> 0
	|			ТОГДА ""Завершите оформление расходных ордеров на товары""
	|	КОНЕЦ КАК Рекомендация,
	|	ВЫБОР
	|		КОГДА ТоварыКОтгрузке.КОтгрузкеОстаток - ТоварыКОтгрузке.КОформлениюОстаток <> 0
	|			ТОГДА -ТоварыКОтгрузке.КОтгрузкеОстаток
	|	КОНЕЦ КАК НезавершеннаяСкладскаяОперация,
	|	0 КАК НезавершеннаяФинансоваяОперация,
	|	ТоварыКОтгрузке.ДокументОтгрузки.Дата КАК ДатаОперации,
	|	ТоварыКОтгрузке.ДокументОтгрузки КАК Распоряжение,
	|	ТоварыКОтгрузке.Склад КАК Склад,
	|	ТоварыКОтгрузке.Номенклатура КАК Номенклатура,
	|	ТоварыКОтгрузке.Характеристика КАК Характеристика,
	|	ТоварыКОтгрузке.Серия,
	|	ТоварыКОтгрузке.Назначение
	|{ВЫБРАТЬ
	|	Склад.*,
	|	Номенклатура.*,
	|	Характеристика.*,
	|	Серия.*,
	|	Назначение.*}
	|ИЗ
	|	РегистрНакопления.ТоварыКОтгрузке.Остатки(
	|		&Период, 
	|		ТИПЗНАЧЕНИЯ(ДокументОтгрузки) В (ТИП(Документ.ВозвратТоваровПоставщику)) 
	|		{(ДокументОтгрузки).* КАК Распоряжение, (Склад).*, (Номенклатура).*, (Характеристика).*, (Серия).*, (Назначение).*}
	|	) КАК ТоварыКОтгрузке
	|ГДЕ
	|	ТоварыКОтгрузке.КОтгрузкеОстаток - ТоварыКОтгрузке.КОформлениюОстаток <> 0
	|{ГДЕ
	|	(""Возвраты товаров поставщикам"") КАК ВидОперации,
	|	(""Оформление складских документов"") КАК ТипОтклонения,
	|	(ВЫБОР
	|			КОГДА ТоварыКОтгрузке.КОтгрузкеОстаток - ТоварыКОтгрузке.КОформлениюОстаток <> 0
	|				ТОГДА ""Завершите оформление расходных ордеров на товары""
	|		КОНЕЦ) КАК Рекомендация,
	|	(ВЫБОР
	|			КОГДА ТоварыКОтгрузке.КОтгрузкеОстаток - ТоварыКОтгрузке.КОформлениюОстаток <> 0
	|				ТОГДА -ТоварыКОтгрузке.КОтгрузкеОстаток
	|		КОНЕЦ) КАК НезавершеннаяСкладскаяОперация}";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаВнутреннееПотребление()
	// Строковые литералы локализуются в настройках СКД отчета
	// Наборы данных - Поля - Доступные значения
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""Внутреннее потребление товаров"" КАК ВидОперации,
	|	""Оформление складских документов"" КАК ТипОтклонения,
	|	ВЫБОР
	|		КОГДА ТоварыКОтгрузке.КОтгрузкеОстаток - ТоварыКОтгрузке.КОформлениюОстаток <> 0
	|			ТОГДА ""Завершите оформление расходных ордеров на товары""
	|	КОНЕЦ КАК Рекомендация,
	|	ВЫБОР
	|		КОГДА ТоварыКОтгрузке.КОтгрузкеОстаток - ТоварыКОтгрузке.КОформлениюОстаток <> 0
	|			ТОГДА -ТоварыКОтгрузке.КОтгрузкеОстаток
	|	КОНЕЦ КАК НезавершеннаяСкладскаяОперация,
	|	0 КАК НезавершеннаяФинансоваяОперация,
	|	ТоварыКОтгрузке.ДокументОтгрузки.Дата КАК ДатаОперации,
	|	ТоварыКОтгрузке.ДокументОтгрузки КАК Распоряжение,
	|	ТоварыКОтгрузке.Склад КАК Склад,
	|	ТоварыКОтгрузке.Номенклатура КАК Номенклатура,
	|	ТоварыКОтгрузке.Характеристика КАК Характеристика,
	|	ТоварыКОтгрузке.Серия,
	|	ТоварыКОтгрузке.Назначение
	|{ВЫБРАТЬ
	|	Склад.*,
	|	Номенклатура.*,
	|	Характеристика.*,
	|	Серия.*,
	|	Назначение.*}
	|ИЗ
	|	РегистрНакопления.ТоварыКОтгрузке.Остатки(
	|		&Период, 
	|		ТИПЗНАЧЕНИЯ(ДокументОтгрузки) В (ТИП(Документ.ЗаказНаВнутреннееПотребление), 
	|			ТИП(Документ.ВнутреннееПотреблениеТоваров)
	|		) 
	|		{(ДокументОтгрузки).* КАК Распоряжение, (Склад).*, (Номенклатура).*, (Характеристика).*, (Серия).*, (Назначение).*}
	|	) КАК ТоварыКОтгрузке
	|ГДЕ
	|	ТоварыКОтгрузке.КОтгрузкеОстаток - ТоварыКОтгрузке.КОформлениюОстаток <> 0
	|{ГДЕ
	|	(""Внутреннее потребление товаров"") КАК ВидОперации,
	|	(""Оформление складских документов"") КАК ТипОтклонения,
	|	(ВЫБОР
	|			КОГДА ТоварыКОтгрузке.КОтгрузкеОстаток - ТоварыКОтгрузке.КОформлениюОстаток <> 0
	|				ТОГДА ""Завершите оформление расходных ордеров на товары""
	|		КОНЕЦ) КАК Рекомендация,
	|	(ВЫБОР
	|			КОГДА ТоварыКОтгрузке.КОтгрузкеОстаток - ТоварыКОтгрузке.КОформлениюОстаток <> 0
	|				ТОГДА -ТоварыКОтгрузке.КОтгрузкеОстаток
	|		КОНЕЦ) КАК НезавершеннаяСкладскаяОперация}";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаПеремещениеТоваров()
	// Строковые литералы локализуются в настройках СКД отчета
	// Наборы данных - Поля - Доступные значения
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""Перемещение товаров"" КАК ВидОперации,
	|	""Оформление складских документов"" КАК ТипОтклонения,
	|	ВЫБОР
	|		КОГДА ТоварыКОтгрузке.КОтгрузкеОстаток - ТоварыКОтгрузке.КОформлениюОстаток <> 0
	|			ТОГДА ""Завершите оформление расходных ордеров на товары""
	|	КОНЕЦ КАК Рекомендация,
	|	ВЫБОР
	|		КОГДА ТоварыКОтгрузке.КОтгрузкеОстаток - ТоварыКОтгрузке.КОформлениюОстаток <> 0
	|			ТОГДА -ТоварыКОтгрузке.КОтгрузкеОстаток
	|	КОНЕЦ КАК НезавершеннаяСкладскаяОперация,
	|	0 КАК НезавершеннаяФинансоваяОперация,
	|	ТоварыКОтгрузке.ДокументОтгрузки.Дата КАК ДатаОперации,
	|	ТоварыКОтгрузке.ДокументОтгрузки КАК Распоряжение,
	|	ТоварыКОтгрузке.Склад КАК Склад,
	|	ТоварыКОтгрузке.Номенклатура КАК Номенклатура,
	|	ТоварыКОтгрузке.Характеристика КАК Характеристика,
	|	ТоварыКОтгрузке.Серия,
	|	ТоварыКОтгрузке.Назначение
	|ИЗ
	|	РегистрНакопления.ТоварыКОтгрузке.Остатки(
	|		&Период, 
	|		ТИПЗНАЧЕНИЯ(ДокументОтгрузки) В (ТИП(Документ.ЗаказНаПеремещение), 
	|			ТИП(Документ.ПеремещениеТоваров)) 
	|		{(ДокументОтгрузки).* КАК Распоряжение, (Склад).*, (Номенклатура).*, (Характеристика).*, (Серия).*, (Назначение).*}
	|	) КАК ТоварыКОтгрузке
	|ГДЕ
	|	ТоварыКОтгрузке.КОтгрузкеОстаток - ТоварыКОтгрузке.КОформлениюОстаток <> 0
	|{ГДЕ
	|	(""Перемещение товаров"") КАК ВидОперации,
	|	(""Оформление складских документов"") КАК ТипОтклонения,
	|	(ВЫБОР
	|			КОГДА ТоварыКОтгрузке.КОтгрузкеОстаток - ТоварыКОтгрузке.КОформлениюОстаток <> 0
	|				ТОГДА ""Завершите оформление расходных ордеров на товары""
	|		КОНЕЦ) КАК Рекомендация,
	|	(ВЫБОР
	|			КОГДА ТоварыКОтгрузке.КОтгрузкеОстаток - ТоварыКОтгрузке.КОформлениюОстаток <> 0
	|				ТОГДА -ТоварыКОтгрузке.КОтгрузкеОстаток
	|		КОНЕЦ) КАК НезавершеннаяСкладскаяОперация}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Перемещение товаров"",
	|	ВЫБОР
	|		КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|			ТОГДА ""Оформление финансовых документов""
	|		ИНАЧЕ ""Оформление складских документов""
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|			ТОГДА ""Оформите перемещение товаров в статусе """"Принято""""""
	|		ИНАЧЕ ""Оформите приходные ордера на товары""
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ТоварыКОформлениюПоступления.КОформлениюОстаток
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|			ТОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТоварыКОформлениюПоступления.ДокументПоступления.Дата,
	|	ТоварыКОформлениюПоступления.ДокументПоступления,
	|	ТоварыКОформлениюПоступления.Склад,
	|	ТоварыКОформлениюПоступления.Номенклатура,
	|	ТоварыКОформлениюПоступления.Характеристика,
	|	ТоварыКОформлениюПоступления.Серия,
	|	ТоварыКОформлениюПоступления.Назначение
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюПоступления.Остатки(
	|		&Период, 
	|		ТИПЗНАЧЕНИЯ(ДокументПоступления) В (ТИП(Документ.ЗаказНаПеремещение), 
	|			ТИП(Документ.ПеремещениеТоваров)) 
	|		{(ДокументПоступления).* КАК Распоряжение, (Склад).*, (Номенклатура).*, (Характеристика).*, (Серия).*, (Назначение).*}
	|	) КАК ТоварыКОформлениюПоступления
	|{ГДЕ
	|	(""Перемещение товаров"") КАК ВидОперации,
	|	(ВЫБОР
	|			КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|				ТОГДА ""Оформление финансовых документов""
	|			ИНАЧЕ ""Оформление складских документов""
	|		КОНЕЦ) КАК ТипОтклонения,
	|	(ВЫБОР
	|			КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|				ТОГДА ""Оформите перемещение товаров в статусе """"Принято""""""
	|			ИНАЧЕ ""Оформите приходные ордера на товары""
	|		КОНЕЦ) КАК Рекомендация,
	|	(ВЫБОР
	|			КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|				ТОГДА 0
	|			ИНАЧЕ -ТоварыКОформлениюПоступления.КОформлениюОстаток
	|		КОНЕЦ) КАК НезавершеннаяСкладскаяОперация,
	|	(ВЫБОР
	|			КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|				ТОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НезавершеннаяФинансоваяОперация}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Перемещение товаров"",
	|	""Оформление складских документов"",
	|	""Оформите перемещение товаров в статусе """"Принято"""""",
	|	ПеремещениеТоваров.Количество,
	|	ПеремещениеТоваров.Количество,
	|	ВЫБОР
	|		КОГДА НЕ ПеремещениеТоваров.Ссылка.ЗаказНаПеремещение.Ссылка ЕСТЬ NULL 
	|			ТОГДА ПеремещениеТоваров.Ссылка.ЗаказНаПеремещение.Дата
	|		ИНАЧЕ ПеремещениеТоваров.Ссылка.Дата
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ПеремещениеТоваров.Ссылка.ЗаказНаПеремещение.Ссылка ЕСТЬ NULL 
	|			ТОГДА ПеремещениеТоваров.Ссылка.ЗаказНаПеремещение
	|		ИНАЧЕ ПеремещениеТоваров.Ссылка
	|	КОНЕЦ,
	|	ПеремещениеТоваров.Ссылка.СкладПолучатель,
	|	ПеремещениеТоваров.Номенклатура,
	|	ПеремещениеТоваров.Характеристика,
	|	ПеремещениеТоваров.Серия,
	|	ПеремещениеТоваров.Назначение
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка.Проведен
	|	И ПеремещениеТоваров.Ссылка.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыПеремещенийТоваров.Принято)
	|	И ПеремещениеТоваров.Ссылка.Дата <= КОНЕЦПЕРИОДА(&Период, ДЕНЬ)
	|{ГДЕ
	|	(""Перемещение товаров"") КАК ВидОперации,
	|	(""Оформление складских документов"") КАК ТипОтклонения,
	|	(""Оформите перемещение товаров в статусе """"Принято"""""") КАК Рекомендация,
	|	ПеремещениеТоваров.Количество КАК НезавершеннаяСкладскаяОперация,
	|	ПеремещениеТоваров.Количество КАК НезавершеннаяФинансоваяОперация}";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаСборкаРазборка()
	// Строковые литералы локализуются в настройках СКД отчета
	// Наборы данных - Поля - Доступные значения
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""Сборка (разборка) товаров"" КАК ВидОперации,
	|	""Оформление складских документов"" КАК ТипОтклонения,
	|	ВЫБОР
	|		КОГДА ТоварыКОтгрузке.КОтгрузкеОстаток - ТоварыКОтгрузке.КОформлениюОстаток <> 0
	|			ТОГДА ""Завершите оформление расходных ордеров на товары""
	|	КОНЕЦ КАК Рекомендация,
	|	ВЫБОР
	|		КОГДА ТоварыКОтгрузке.КОтгрузкеОстаток - ТоварыКОтгрузке.КОформлениюОстаток <> 0
	|			ТОГДА -ТоварыКОтгрузке.КОтгрузкеОстаток
	|	КОНЕЦ КАК НезавершеннаяСкладскаяОперация,
	|	0 КАК НезавершеннаяФинансоваяОперация,
	|	ТоварыКОтгрузке.ДокументОтгрузки.Дата КАК ДатаОперации,
	|	ТоварыКОтгрузке.ДокументОтгрузки КАК Распоряжение,
	|	ТоварыКОтгрузке.Склад КАК Склад,
	|	ТоварыКОтгрузке.Номенклатура КАК Номенклатура,
	|	ТоварыКОтгрузке.Характеристика КАК Характеристика,
	|	ТоварыКОтгрузке.Серия,
	|	ТоварыКОтгрузке.Назначение
	|{ВЫБРАТЬ
	|	Склад.*,
	|	Номенклатура.*,
	|	Характеристика.*,
	|	Серия.*,
	|	Назначение.*}
	|ИЗ
	|	РегистрНакопления.ТоварыКОтгрузке.Остатки(
	|		&Период, 
	|		ТИПЗНАЧЕНИЯ(ДокументОтгрузки) В (ТИП(Документ.ЗаказНаСборку), 
	|			ТИП(Документ.СборкаТоваров)) 
	|		{(ДокументОтгрузки).* КАК Распоряжение, (Склад).*, (Номенклатура).*, (Характеристика).*, (Серия).*, (Назначение).*}
	|	) КАК ТоварыКОтгрузке
	|ГДЕ
	|	ТоварыКОтгрузке.КОтгрузкеОстаток - ТоварыКОтгрузке.КОформлениюОстаток <> 0
	|{ГДЕ
	|	(""Сборка (разборка) товаров"") КАК ВидОперации,
	|	(""Оформление складских документов"") КАК ТипОтклонения,
	|	(ВЫБОР
	|			КОГДА ТоварыКОтгрузке.КОтгрузкеОстаток - ТоварыКОтгрузке.КОформлениюОстаток <> 0
	|				ТОГДА ""Завершите оформление расходных ордеров на товары""
	|		КОНЕЦ) КАК Рекомендация,
	|	(ВЫБОР
	|			КОГДА ТоварыКОтгрузке.КОтгрузкеОстаток - ТоварыКОтгрузке.КОформлениюОстаток <> 0
	|				ТОГДА -ТоварыКОтгрузке.КОтгрузкеОстаток
	|		КОНЕЦ) КАК НезавершеннаяСкладскаяОперация}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Сборка (разборка) товаров"",
	|	ВЫБОР
	|		КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|			ТОГДА ""Оформление финансовых документов""
	|		ИНАЧЕ ""Оформление складских документов""
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыКОформлениюПоступления.ДокументПоступления.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|						ТОГДА ""Оформите документ разборки в статусе """"Собрано (разобрано)""""""
	|					КОГДА ТоварыКОформлениюПоступления.ДокументПоступления.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|						ТОГДА ""Оформите документ сборки в статусе """"Собрано (разобрано)""""""
	|				КОНЕЦ
	|		ИНАЧЕ ""Оформите приходные ордера на товары""
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ТоварыКОформлениюПоступления.КОформлениюОстаток
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|			ТОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ТоварыКОформлениюПоступления.ДокументПоступления.Дата,
	|	ТоварыКОформлениюПоступления.ДокументПоступления,
	|	ТоварыКОформлениюПоступления.Склад,
	|	ТоварыКОформлениюПоступления.Номенклатура,
	|	ТоварыКОформлениюПоступления.Характеристика,
	|	ТоварыКОформлениюПоступления.Серия,
	|	ТоварыКОформлениюПоступления.Назначение
	|{ВЫБРАТЬ
	|	Склад.*,
	|	Номенклатура.*,
	|	Характеристика.*,
	|	Серия.*,
	|	Назначение.*}
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюПоступления.Остатки(
	|		&Период, 
	|		ТИПЗНАЧЕНИЯ(ДокументПоступления) В (ТИП(Документ.ЗаказНаСборку), 
	|			ТИП(Документ.СборкаТоваров)) 
	|		{(ДокументПоступления).* КАК Распоряжение, (Склад).*, (Номенклатура).*, (Характеристика).*, (Серия).*, (Назначение).*}
	|	) КАК ТоварыКОформлениюПоступления
	|{ГДЕ
	|	(""Сборка (разборка) товаров"") КАК ВидОперации,
	|	(ВЫБОР
	|			КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|				ТОГДА ""Оформление финансовых документов""
	|			ИНАЧЕ ""Оформление складских документов""
	|		КОНЕЦ) КАК ТипОтклонения,
	|	(ВЫБОР
	|			КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|				ТОГДА ВЫБОР
	|						КОГДА ТоварыКОформлениюПоступления.ДокументПоступления.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|							ТОГДА ""Оформите документ разборки в статусе """"Собрано (разобрано)""""""
	|						КОГДА ТоварыКОформлениюПоступления.ДокументПоступления.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|							ТОГДА ""Оформите документ сборки в статусе """"Собрано (разобрано)""""""
	|					КОНЕЦ
	|			ИНАЧЕ ""Оформите приходные ордера на товары""
	|		КОНЕЦ) КАК Рекомендация,
	|	(ВЫБОР
	|			КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|				ТОГДА 0
	|			ИНАЧЕ -ТоварыКОформлениюПоступления.КОформлениюОстаток
	|		КОНЕЦ) КАК НезавершеннаяСкладскаяОперация,
	|	(ВЫБОР
	|			КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|				ТОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НезавершеннаяФинансоваяОперация}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Сборка (разборка) товаров"",
	|	""Оформление финансовых документов"",
	|	""Оформите документ разборки в статусе """"Собрано (разобрано)"""""",
	|	0,
	|	СборкаРазборкаТоваров.Количество,
	|	ВЫБОР
	|		КОГДА НЕ СборкаРазборкаТоваров.Ссылка.ЗаказНаСборку.Ссылка ЕСТЬ NULL 
	|			ТОГДА СборкаРазборкаТоваров.Ссылка.ЗаказНаСборку.Дата
	|		ИНАЧЕ СборкаРазборкаТоваров.Ссылка.Дата
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ СборкаРазборкаТоваров.Ссылка.ЗаказНаСборку.Ссылка ЕСТЬ NULL 
	|			ТОГДА СборкаРазборкаТоваров.Ссылка.ЗаказНаСборку
	|		ИНАЧЕ СборкаРазборкаТоваров.Ссылка
	|	КОНЕЦ,
	|	СборкаРазборкаТоваров.Ссылка.Склад,
	|	СборкаРазборкаТоваров.Номенклатура,
	|	СборкаРазборкаТоваров.Характеристика,
	|	СборкаРазборкаТоваров.Серия,
	|	СборкаРазборкаТоваров.Назначение
	|{ВЫБРАТЬ
	|	Склад.*,
	|	Номенклатура.*,
	|	Характеристика.*,
	|	Серия.*,
	|	Назначение.*}
	|ИЗ
	|	Документ.СборкаТоваров.Товары КАК СборкаРазборкаТоваров
	|ГДЕ
	|	СборкаРазборкаТоваров.Ссылка.Проведен
	|	И СборкаРазборкаТоваров.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.РазборкаНаКомплектующие)
	|	И СборкаРазборкаТоваров.Ссылка.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано)
	|	И СборкаРазборкаТоваров.Ссылка.Дата <= КОНЕЦПЕРИОДА(&Период, ДЕНЬ)
	|{ГДЕ
	|	(""Сборка (разборка) товаров"") КАК ВидОперации,
	|	(""Оформление финансовых документов"") КАК ТипОтклонения,
	|	(""Оформите документ разборки в статусе """"Собрано (разобрано)"""""") КАК Рекомендация,
	|	СборкаРазборкаТоваров.Количество КАК НезавершеннаяСкладскаяОперация,
	|	СборкаРазборкаТоваров.Количество КАК НезавершеннаяФинансоваяОперация}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	""Сборка (разборка) товаров"",
	|	""Оформление финансовых документов"",
	|	""Оформите документ сборки в статусе """"Собрано (разобрано)"""""",
	|	0,
	|	СборкаРазборкаТоваров.Количество,
	|	ВЫБОР
	|		КОГДА НЕ СборкаРазборкаТоваров.ЗаказНаСборку.Ссылка ЕСТЬ NULL 
	|			ТОГДА СборкаРазборкаТоваров.ЗаказНаСборку.Дата
	|		ИНАЧЕ СборкаРазборкаТоваров.Ссылка.Дата
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ СборкаРазборкаТоваров.ЗаказНаСборку.Ссылка ЕСТЬ NULL 
	|			ТОГДА СборкаРазборкаТоваров.ЗаказНаСборку
	|		ИНАЧЕ СборкаРазборкаТоваров.Ссылка
	|	КОНЕЦ,
	|	СборкаРазборкаТоваров.Склад,
	|	СборкаРазборкаТоваров.Номенклатура,
	|	СборкаРазборкаТоваров.Характеристика,
	|	СборкаРазборкаТоваров.Серия,
	|	СборкаРазборкаТоваров.Назначение
	|{ВЫБРАТЬ
	|	Склад.*,
	|	Номенклатура.*,
	|	Характеристика.*,
	|	Серия.*,
	|	Назначение.*}
	|ИЗ
	|	Документ.СборкаТоваров КАК СборкаРазборкаТоваров
	|ГДЕ
	|	СборкаРазборкаТоваров.Проведен
	|	И СборкаРазборкаТоваров.Ссылка.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих)
	|	И СборкаРазборкаТоваров.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыСборокТоваров.СобраноРазобрано)
	|	И СборкаРазборкаТоваров.Дата <= КОНЕЦПЕРИОДА(&Период, ДЕНЬ)
	|{ГДЕ
	|	(""Сборка (разборка) товаров"") КАК ВидОперации,
	|	(""Оформление финансовых документов"") КАК ТипОтклонения,
	|	(""Оформите документ сборки в статусе """"Собрано (разобрано)"""""") КАК Рекомендация,
	|	СборкаРазборкаТоваров.Количество КАК НезавершеннаяФинансоваяОперация}";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаПрочиеОприходования()
	// Строковые литералы локализуются в настройках СКД отчета
	// Наборы данных - Поля - Доступные значения
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""Прочее оприходование товаров"" КАК ВидОперации,
	|	ВЫБОР
	|		КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|			ТОГДА ""Оформление финансовых документов""
	|		ИНАЧЕ ""Оформление складских документов""
	|	КОНЕЦ КАК ТипОтклонения,
	|	ВЫБОР
	|		КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|			ТОГДА ""Оформите прочее оприходование товаров""
	|		ИНАЧЕ ""Оформите приходные ордера на товары""
	|	КОНЕЦ КАК Рекомендация,
	|	ВЫБОР
	|		КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|			ТОГДА 0
	|		ИНАЧЕ -ТоварыКОформлениюПоступления.КОформлениюОстаток
	|	КОНЕЦ КАК НезавершеннаяСкладскаяОперация,
	|	ВЫБОР
	|		КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|			ТОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НезавершеннаяФинансоваяОперация,
	|	ТоварыКОформлениюПоступления.ДокументПоступления.Дата КАК ДатаОперации,
	|	ТоварыКОформлениюПоступления.ДокументПоступления КАК Распоряжение,
	|	ТоварыКОформлениюПоступления.Склад КАК Склад,
	|	ТоварыКОформлениюПоступления.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлениюПоступления.Характеристика КАК Характеристика,
	|	ТоварыКОформлениюПоступления.Серия,
	|	ТоварыКОформлениюПоступления.Назначение
	|{ВЫБРАТЬ
	|	Склад.*,
	|	Номенклатура.*,
	|	Характеристика.*,
	|	Серия.*,
	|	Назначение.*}
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюПоступления.Остатки(
	|		&Период, 
	|		ТИПЗНАЧЕНИЯ(ДокументПоступления) В (ТИП(Документ.ПрочееОприходованиеТоваров)) 
	|		{(ДокументПоступления).* КАК Распоряжение, (Склад).*, (Номенклатура).*, (Характеристика).*, (Серия).*, (Назначение).*}
	|	) КАК ТоварыКОформлениюПоступления
	|{ГДЕ
	|	(""Прочее оприходование товаров"") КАК ВидОперации,
	|	(ВЫБОР
	|			КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|				ТОГДА ""Оформление финансовых документов""
	|			ИНАЧЕ ""Оформление складских документов""
	|		КОНЕЦ) КАК ТипОтклонения,
	|	(ВЫБОР
	|			КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|				ТОГДА ""Оформите прочее оприходование товаров""
	|			ИНАЧЕ ""Оформите приходные ордера на товары""
	|		КОНЕЦ) КАК Рекомендация,
	|	(ВЫБОР
	|			КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|				ТОГДА 0
	|			ИНАЧЕ -ТоварыКОформлениюПоступления.КОформлениюОстаток
	|		КОНЕЦ) КАК НезавершеннаяСкладскаяОперация,
	|	(ВЫБОР
	|			КОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток > 0
	|				ТОГДА ТоварыКОформлениюПоступления.КОформлениюОстаток
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК НезавершеннаяФинансоваяОперация}";
	
	Возврат ТекстЗапроса;
КонецФункции

Функция ТекстЗапросаОформлениеИзлишковНедостач()
	// Строковые литералы локализуются в настройках СКД отчета
	// Наборы данных - Поля - Доступные значения
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	""Оформление излишков и недостач"" КАК ВидОперации,
	|	""Оформление финансовых документов"" КАК ТипОтклонения,
	|	ВЫБОР
	|		КОГДА НедоофомленныеИзлишкиИНедостачи.КОформлениюАктовОстаток > 0
	|			ТОГДА ""Оформите складские акты для отражения излишков""
	|		ИНАЧЕ ""Оформите складские акты для отражения недостач""
	|	КОНЕЦ КАК Рекомендация,
	|	0 КАК НезавершеннаяСкладскаяОперация,
	|	НедоофомленныеИзлишкиИНедостачи.КОформлениюАктовОстаток КАК НезавершеннаяФинансоваяОперация,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаОперации,
	|	Неопределено КАК Распоряжение,
	|	НедоофомленныеИзлишкиИНедостачи.Склад КАК Склад,
	|	НедоофомленныеИзлишкиИНедостачи.Номенклатура КАК Номенклатура,
	|	НедоофомленныеИзлишкиИНедостачи.Характеристика КАК Характеристика,
	|	НедоофомленныеИзлишкиИНедостачи.Серия,
	|	НедоофомленныеИзлишкиИНедостачи.Назначение
	|{ВЫБРАТЬ
	|	Склад.*,
	|	Номенклатура.*,
	|	Характеристика.*,
	|	Серия.*,
	|	Назначение.*}
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюИзлишковНедостач.Остатки(
	|		&Период, 
	|		{(Склад).*, (Номенклатура).*, (Характеристика).*, (Серия).*, (Назначение).*}
	|	) КАК НедоофомленныеИзлишкиИНедостачи
	|{ГДЕ
	|	(""Оформление излишков и недостач"") КАК ВидОперации,
	|	(""Оформление финансовых документов"") КАК ТипОтклонения,
	|	(ВЫБОР
	|			КОГДА НедоофомленныеИзлишкиИНедостачи.КОформлениюАктовОстаток > 0
	|				ТОГДА ""Оформите складские акты для отражения излишков""
	|			ИНАЧЕ ""Оформите складские акты для отражения недостач""
	|		КОНЕЦ) КАК Рекомендация,
	|	НедоофомленныеИзлишкиИНедостачи.КОформлениюАктовОстаток КАК НезавершеннаяФинансоваяОперация}";
	
	Возврат ТекстЗапроса;
КонецФункции



Функция ТекстЗапросаКонтрольОформленияДокументовТовародвижений()
	КоличествоПодключенныхЗапросов = 0;
	ТекстЗапроса = "";
	
	Доступные = ДоступныеВидыОперацийИЗапросы();
	ТекстыЗапроса = Новый Структура; 
	Для Каждого Доступный Из Доступные Цикл 
		ТекстыЗапроса.Вставить(Доступный.ИмяТекстаЗапроса, Истина);
	КонецЦикла;
	
	// Проверим права чтения документов
	ПравоЧтениеЗаказКлиента						= ПравоДоступа("Чтение", Метаданные.Документы.ЗаказКлиента);
	ПравоЧтениеРеализацияТоваровУслуг			= ПравоДоступа("Чтение", Метаданные.Документы.РеализацияТоваровУслуг);
	ПравоЧтениеЗаявкаНаВозвратТоваровОтКлиента	= ПравоДоступа("Чтение", Метаданные.Документы.ЗаявкаНаВозвратТоваровОтКлиента);
	ПравоЧтениеВозвратТоваровОтКлиента			= ПравоДоступа("Чтение", Метаданные.Документы.ВозвратТоваровОтКлиента);
	
	ПравоЧтениеЗаказПоставщику					= ПравоДоступа("Чтение", Метаданные.Документы.ЗаказПоставщику);
	ПравоЧтениеПоступлениеТоваровУслуг			= ПравоДоступа("Чтение", Метаданные.Документы.ПоступлениеТоваровУслуг);
	ПравоЧтениеСоглашенияСПоставщиками			= ПравоДоступа("Чтение", Метаданные.Справочники.СоглашенияСПоставщиками);
	ПравоЧтениеВозвратТоваровПоставщику			= ПравоДоступа("Чтение", Метаданные.Документы.ВозвратТоваровПоставщику);
	
	ПравоЧтениеЗаказНаВнутреннееПотребление		= ПравоДоступа("Чтение", Метаданные.Документы.ЗаказНаВнутреннееПотребление);
	ПравоЧтениеВнутреннееПотреблениеТоваров		= ПравоДоступа("Чтение", Метаданные.Документы.ВнутреннееПотреблениеТоваров);
	
	ПравоЧтениеЗаказНаПеремещение				= ПравоДоступа("Чтение", Метаданные.Документы.ЗаказНаПеремещение);
	ПравоЧтениеПеремещениеТоваров				= ПравоДоступа("Чтение", Метаданные.Документы.ПеремещениеТоваров);
	
	ПравоЧтениеЗаказНаСборку					= ПравоДоступа("Чтение", Метаданные.Документы.ЗаказНаСборку);
	ПравоЧтениеСборкаТоваров					= ПравоДоступа("Чтение", Метаданные.Документы.СборкаТоваров);
	
	ПравоЧтениеПрочееОприходованиеТоваров		= ПравоДоступа("Чтение", Метаданные.Документы.ПрочееОприходованиеТоваров);
	
	
	// Проверим права чтения регистров
	ПравоЧтениеТоварыКОтгрузке					= ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ТоварыКОтгрузке);
	ПравоЧтениеТоварыКОформлениюПоступления		= ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ТоварыКОформлениюПоступления);
	ПравоЧтениеТоварыКОформлениюИзлишковНедостач= ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ТоварыКОформлениюИзлишковНедостач);
	
	// Продажи
	Если ПравоЧтениеТоварыКОтгрузке
		И ПравоЧтениеЗаказКлиента
		И ПравоЧтениеРеализацияТоваровУслуг 
		И ПравоЧтениеЗаявкаНаВозвратТоваровОтКлиента
		И ТекстыЗапроса.Свойство("ТекстЗапросаПродажи") Тогда
		ПодключитьЗапрос(ТекстЗапроса, ТекстЗапросаПродажи(), КоличествоПодключенныхЗапросов);
	КонецЕсли;
	Если ПравоЧтениеТоварыКОформлениюПоступления
		И ПравоЧтениеЗаявкаНаВозвратТоваровОтКлиента
		И ПравоЧтениеВозвратТоваровОтКлиента
		И ТекстыЗапроса.Свойство("ТекстЗапросаВозвратыТоваровОтКлиентов") Тогда
		ПодключитьЗапрос(ТекстЗапроса, ТекстЗапросаВозвратыТоваровОтКлиентов(), КоличествоПодключенныхЗапросов);
	КонецЕсли;
	
	// Закупки
	Если ПравоЧтениеТоварыКОформлениюПоступления
		И ПравоЧтениеЗаказПоставщику
		И ПравоЧтениеПоступлениеТоваровУслуг 
		И ПравоЧтениеСоглашенияСПоставщиками
		И ТекстыЗапроса.Свойство("ТекстЗапросаЗакупки") Тогда
		ПодключитьЗапрос(ТекстЗапроса, ТекстЗапросаЗакупки(), КоличествоПодключенныхЗапросов);
	КонецЕсли;
	Если ПравоЧтениеТоварыКОтгрузке
		И ПравоЧтениеВозвратТоваровПоставщику
		И ТекстыЗапроса.Свойство("ТекстЗапросаВозвратыТоваровПоставщикам") Тогда
		ПодключитьЗапрос(ТекстЗапроса, ТекстЗапросаВозвратыТоваровПоставщикам(), КоличествоПодключенныхЗапросов);
	КонецЕсли;
	
	// Внутреннее потребление
	Если ПравоЧтениеТоварыКОтгрузке
		И ПравоЧтениеЗаказНаВнутреннееПотребление
		И ПравоЧтениеВнутреннееПотреблениеТоваров
		И ТекстыЗапроса.Свойство("ТекстЗапросаВнутреннееПотребление") Тогда
		ПодключитьЗапрос(ТекстЗапроса, ТекстЗапросаВнутреннееПотребление(), КоличествоПодключенныхЗапросов);
	КонецЕсли;
	
	// Перемещение товаров
	Если ПравоЧтениеТоварыКОтгрузке
		И ПравоЧтениеТоварыКОформлениюПоступления
		И ПравоЧтениеЗаказНаПеремещение
		И ПравоЧтениеПеремещениеТоваров
		И ТекстыЗапроса.Свойство("ТекстЗапросаПеремещениеТоваров") Тогда
		ПодключитьЗапрос(ТекстЗапроса, ТекстЗапросаПеремещениеТоваров(), КоличествоПодключенныхЗапросов);
	КонецЕсли;
	
	// Сборка (разборка)
	Если ПравоЧтениеТоварыКОтгрузке
		И ПравоЧтениеТоварыКОформлениюПоступления
		И ПравоЧтениеЗаказНаСборку
		И ПравоЧтениеСборкаТоваров
		И ТекстыЗапроса.Свойство("ТекстЗапросаСборкаРазборка") Тогда
		ПодключитьЗапрос(ТекстЗапроса, ТекстЗапросаСборкаРазборка(), КоличествоПодключенныхЗапросов);
	КонецЕсли;
	
	// Прочее оприходование
	Если ПравоЧтениеТоварыКОформлениюПоступления
		И ПравоЧтениеПрочееОприходованиеТоваров
		И ТекстыЗапроса.Свойство("ТекстЗапросаПрочиеОприходования") Тогда
		ПодключитьЗапрос(ТекстЗапроса, ТекстЗапросаПрочиеОприходования(), КоличествоПодключенныхЗапросов);
	КонецЕсли;
	
	// Оформление излишков и недостач
	Если ПравоЧтениеТоварыКОформлениюИзлишковНедостач
		И ТекстыЗапроса.Свойство("ТекстЗапросаОформлениеИзлишковНедостач") Тогда
		ПодключитьЗапрос(ТекстЗапроса, ТекстЗапросаОформлениеИзлишковНедостач(), КоличествоПодключенныхЗапросов);
	КонецЕсли;
	
	
	
	Возврат ТекстЗапроса;
КонецФункции

Процедура ПодключитьЗапрос(ДинамическийТекстЗапроса, ПодключаемыйЗапрос, КоличествоПодключенныхЗапросов)
	Если КоличествоПодключенныхЗапросов = 0 Тогда
		ДинамическийТекстЗапроса = ДинамическийТекстЗапроса + ПодключаемыйЗапрос;
	Иначе
		ДинамическийТекстЗапроса = ДинамическийТекстЗапроса + Символы.ПС + Символы.ПС 
			+ "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС + Символы.ПС;
			
		СтрокаПолейКомпоновки = "{ВЫБРАТЬ
			|	Склад.*,
			|	Номенклатура.*,
			|	Характеристика.*,
			|	Серия.*,
			|	Назначение.*}";

		ПодключаемыйЗапросПодготовка = СтрЗаменить(ПодключаемыйЗапрос, "РАЗРЕШЕННЫЕ", "");
		ПодключаемыйЗапросПодготовка = СтрЗаменить(ПодключаемыйЗапросПодготовка, СтрокаПолейКомпоновки, "");
		
		ДинамическийТекстЗапроса = ДинамическийТекстЗапроса + ПодключаемыйЗапросПодготовка;
	КонецЕсли;
		
	КоличествоПодключенныхЗапросов = КоличествоПодключенныхЗапросов + 1;
КонецПроцедуры

Функция ТекстЗапросаОформлениеИзлишковНедостачБезОтоборов(ТекстЗапроса)
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
	ИндексОператора = Неопределено;
	Для Каждого ОператорСхемыЗапроса Из СхемаЗапроса.ПакетЗапросов[0].Операторы Цикл
		Если Строка(ОператорСхемыЗапроса.ВыбираемыеПоля[0]) = """Оформление излишков и недостач""" Тогда
			ИндексОператора = СхемаЗапроса.ПакетЗапросов[0].Операторы.Индекс(ОператорСхемыЗапроса);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ИндексОператора <> Неопределено Тогда
		ОтборыОператора = СхемаЗапроса.ПакетЗапросов[0].Операторы[ИндексОператора].Отбор;
		ИндексыУдаляемыхОператоров = Новый Массив;
		
		Для Каждого ОтборОператора Из ОтборыОператора Цикл 
			ОтборОператораСтрока = Строка(ОтборОператора);
			Если СтрНайти(ОтборОператораСтрока, "ДАТАВРЕМЯ(1, 1, 1)") > 0 
				Или СтрНайти(ОтборОператораСтрока, "NULL") > 0 Тогда
				ИндексыУдаляемыхОператоров.Добавить(ОтборыОператора.Индекс(ОтборОператора));
			КонецЕсли;
		КонецЦикла;
		
		КорректировкаИндекса = 0;
		Для Каждого ИндексУдаляемогоОператора Из ИндексыУдаляемыхОператоров Цикл 
			ОтборыОператора.Удалить(ИндексУдаляемогоОператора + КорректировкаИндекса);
			КорректировкаИндекса = КорректировкаИндекса - 1; 
		КонецЦикла;
	КонецЕсли;
	
	Возврат СхемаЗапроса.ПолучитьТекстЗапроса();
КонецФункции

Функция ДоступныеВидыОперацийИЗапросы()
	Доступные = Новый ТаблицаЗначений;
	Доступные.Колонки.Добавить("ВидОперации", ОбщегоНазначения.ОписаниеТипаСтрока(200));
	Доступные.Колонки.Добавить("ИмяТекстаЗапроса", ОбщегоНазначения.ОписаниеТипаСтрока(200));
	
	// Не отключаются комбинацией функциональных опций
	ДобавитьВидОперацииИЗапрос(Доступные, "Отгрузка клиентам", "ТекстЗапросаПродажи");
	ДобавитьВидОперацииИЗапрос(Доступные, "Возвраты товаров от клиентов", "ТекстЗапросаВозвратыТоваровОтКлиентов");
	ДобавитьВидОперацииИЗапрос(Доступные, "Приемка от поставщиков", "ТекстЗапросаЗакупки");
	ДобавитьВидОперацииИЗапрос(Доступные, "Возвраты товаров поставщикам", "ТекстЗапросаВозвратыТоваровПоставщикам");
	ДобавитьВидОперацииИЗапрос(Доступные, "Оформление излишков и недостач", "ТекстЗапросаОформлениеИзлишковНедостач");
	
	// Отключаются комбинацией функциональных опций
	Если ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыНаВнутреннееПотребление")
		Или ПолучитьФункциональнуюОпцию("ИспользоватьВнутреннееПотребление") Тогда
		ДобавитьВидОперацииИЗапрос(Доступные, "Внутреннее потребление товаров", "ТекстЗапросаВнутреннееПотребление");
	КонецЕсли;
	Если ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыНаПеремещение")
		Или ПолучитьФункциональнуюОпцию("ИспользоватьПеремещениеТоваров") Тогда
		ДобавитьВидОперацииИЗапрос(Доступные, "Перемещение товаров", "ТекстЗапросаПеремещениеТоваров");
	КонецЕсли;
	Если ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыНаСборку")
		Или ПолучитьФункциональнуюОпцию("ИспользоватьСборкуРазборку") Тогда
		ДобавитьВидОперацииИЗапрос(Доступные, "Сборка (разборка) товаров", "ТекстЗапросаСборкаРазборка");
	КонецЕсли;
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПрочееОприходованиеТоваров") Тогда
		ДобавитьВидОперацииИЗапрос(Доступные, "Прочее оприходование товаров", "ТекстЗапросаПрочиеОприходования");
	КонецЕсли;
	
	
	Возврат Доступные;
КонецФункции

Процедура ДобавитьВидОперацииИЗапрос(Таблица, ВидОперации, ИмяТекстаЗапроса)
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ВидОперации = ВидОперации;
	НоваяСтрока.ИмяТекстаЗапроса = ИмяТекстаЗапроса;
КонецПроцедуры

Функция ОрдерныеСклады()
	СписокОрдерныхСкладов = Новый СписокЗначений;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Склады.Ссылка КАК Склад
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	(Склады.ИспользоватьОрдернуюСхемуПриОтгрузке
	|			ИЛИ Склады.ИспользоватьОрдернуюСхемуПриПоступлении)
	|	И Склады.ЭтоГруппа = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Склады.Наименование");
	
	СписокОрдерныхСкладов.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Склад"));
	
	Возврат СписокОрдерныхСкладов;
КонецФункции
#КонецОбласти

#КонецЕсли