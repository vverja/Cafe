#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс


// Возвращает регламентное, соответствующее объекту
//
// Параметры:
// нет
// 
// Возвращаемое значение:
// РегламентноеЗадание
//
Функция РегламентноеЗадание() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Задание = РегламентныеЗадания.НайтиПоУникальномуИдентификатору(ИдентификаторРегламентногоЗадания);
	УстановитьПривилегированныйРежим(Ложь);
	Возврат Задание;
	
КонецФункции

// Удаляет регламентное задание, соответствующее объекту
//
// Параметры:
// нет
// 
// Возвращаемое значение:
// нет
//
Процедура УдалитьРегламентноеЗадание() Экспорт
	
	Задание = РегламентноеЗадание();
	Если НЕ Задание = НеОпределено Тогда
		УстановитьПривилегированныйРежим(Истина);
		Задание.Удалить();
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКопировании(ОбъектКопирования)
	Код = "";
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ПустаяСтрока(Код) Тогда
		УстановитьНовыйКод();
	КонецЕсли;
	
	Если ПустаяСтрока(Наименование) Тогда
		СформироватьНаименование()
	КонецЕсли;
	
	Если НЕ ОбменТоварами
		И НЕ ОбменЗаказами Тогда
		
		Отказ = Истина;
		Сообщение = НСтр("ru='Режим обмена не выбран!';uk='Режим обміну не вибрано!'");
		Поле = "ОбменТоварами";
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Сообщение, ЭтотОбъект, Поле);
		
	КонецЕсли;

	СкорректироватьПроверяемыеРеквизиты(ПроверяемыеРеквизиты);
	
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеПроцедурыИФункции

// Формирует уникальное наименование объекта
//
// Параметры:
// нет
// 
// Возвращаемое значение:
// нет
//
Процедура СформироватьНаименование()
	
	Если ОбменТоварами И ОбменЗаказами Тогда
		
		Префикс = НСтр("ru='Обмен товарами и заказами';uk='Обмін товарами і замовленнями'");
		
	ИначеЕсли ОбменЗаказами Тогда
		
		Префикс = НСтр("ru='Обмен заказами';uk='Обмін замовленнями'");
		
	Иначе
		
		Префикс = НСтр("ru='Выгрузка товаров';uk='Вивантаження товарів'");
		
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	МАКСИМУМ(ОбменССайтом.Наименование) КАК Наименование
	               |ИЗ
	               |	ПланОбмена.ОбменССайтом КАК ОбменССайтом
	               |ГДЕ
	               |	ОбменССайтом.Наименование ПОДОБНО &Шаблон
	               |
	               |ИМЕЮЩИЕ
	               |	НЕ МАКСИМУМ(ОбменССайтом.Наименование) ЕСТЬ NULL ";

	
	Запрос.УстановитьПараметр("Шаблон", Префикс + "%");
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Наименование = Префикс;
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	Суффикс = Прав(СокрЛП(Выборка.Наименование), 4);
	
	Попытка
		СуффиксЧислом = Число(Суффикс);
	Исключение
		Наименование = Префикс + " 0001";
		Возврат;
	КонецПопытки;
		
	Наименование = Префикс + " " + Формат(СуффиксЧислом + 1, "ЧЦ=4; ЧВН=; ЧГ=");
	
КонецПроцедуры

Процедура СкорректироватьПроверяемыеРеквизиты(ПроверяемыеРеквизиты)
	
	// В зависимости от настроек формы из проверяемых реквизитов удаляем непроверяемые реквизиты.
	
	НеПроверяемыеРеквизиты = Новый Массив;
	
	Если ВыгружатьНаСайт Тогда
		
		НеПроверяемыеРеквизиты.Добавить("КаталогВыгрузки");
		
		Если Не ОбменЗаказами Тогда
			НеПроверяемыеРеквизиты.Добавить("ФайлЗагрузки");
		КонецЕсли;
	Иначе
		
		НеПроверяемыеРеквизиты.Добавить("АдресСайта");
		НеПроверяемыеРеквизиты.Добавить("ИмяПользователя");
		
		Если Не ОбменТоварами Тогда
			НеПроверяемыеРеквизиты.Добавить("КаталогВыгрузки");
		КонецЕсли;
		
		
	КонецЕсли;
	
	Если Не ОбменТоварами Тогда
		
		НеПроверяемыеРеквизиты.Добавить("ВладелецКаталога");
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НеПроверяемыеРеквизиты);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
