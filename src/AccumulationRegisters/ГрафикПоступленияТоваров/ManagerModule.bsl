#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Текст запроса оборотов товаров по варианту обеспечения "Резервировать к дате"
// в разрезе дат, номенклатуры, характеристики и склада.
//
// Параметры:
//  ИспользоватьКорректировку - Булево - признак необходимости скорректировать движения регистра перед получением оборотов.
//  Разделы - Массив - массив в который будет добавлена информация о временных таблицах, создаваемых при выполнении запроса.
//
// Возвращаемое значение:
//  Строка - Текст запроса временной таблицы оборотов товаров по варианту обеспечения "Резервировать к дате"
//           в разрезе дат, номенклатуры, характеристики и склада.
//
Функция ТекстЗапросаОборотов(ИспользоватьКорректировку, Разделы = Неопределено) Экспорт

	Шаблоны = Новый Массив();
	ШаблонПоступление =
		"ВЫБРАТЬ
		|	Таблица.Номенклатура        КАК Номенклатура,
		|	Таблица.Характеристика      КАК Характеристика,
		|	Таблица.Склад               КАК Склад,
		|
		|	ВЫБОР КОГДА Таблица.ДатаСобытия <= &НачалоТекущегоДня ТОГДА
		|				&НачалоТекущегоДня
		|			ИНАЧЕ
		|				Таблица.ДатаСобытия
		|		КОНЕЦ                         КАК Период,
		|
		|	Таблица.КоличествоИзЗаказов       КАК Количество
		|ИЗ
		|	РегистрНакопления.ГрафикПоступленияТоваров КАК Таблица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТовары КАК Отбор
		|		ПО Таблица.Номенклатура   = Отбор.Номенклатура
		|		 И Таблица.Характеристика = Отбор.Характеристика
		|		 И Таблица.Склад          = Отбор.Склад
		|ГДЕ
		|	Таблица.Активность
		|	И Таблица.КоличествоИзЗаказов <> 0";

	ШаблонОтгрузка =
		"ВЫБРАТЬ
		|	Таблица.Номенклатура       КАК Номенклатура,
		|	Таблица.Характеристика     КАК Характеристика,
		|	Таблица.Склад              КАК Склад,
		|
		|	ВЫБОР КОГДА Таблица.ДатаОтгрузки <= &НачалоТекущегоДня ТОГДА
		|				&НачалоТекущегоДня
		|			ИНАЧЕ
		|				Таблица.ДатаОтгрузки
		|		КОНЕЦ                           КАК Период,
		|
		|	-Таблица.КоличествоИзЗаказовОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.ГрафикОтгрузкиТоваров.Остатки(,
		|		(Номенклатура, Характеристика, Склад) В(
		|			ВЫБРАТЬ
		|				Отбор.Номенклатура   КАК Номенклатура,
		|				Отбор.Характеристика КАК Характеристика,
		|				Отбор.Склад          КАК Склад
		|			ИЗ
		|				ВтТовары КАК Отбор)) КАК Таблица";

	ШаблонКорректировка =
		"ВЫБРАТЬ
		|	Таблица.Номенклатура          КАК Номенклатура,
		|	Таблица.Характеристика        КАК Характеристика,
		|	Таблица.Склад                 КАК Склад,
		|
		|	ВЫБОР КОГДА Таблица.ДатаСобытия <= &НачалоТекущегоДня ТОГДА
		|				&НачалоТекущегоДня
		|			ИНАЧЕ
		|				Таблица.ДатаСобытия
		|		КОНЕЦ                          КАК Период,
		|
		|	Таблица.КоличествоИзЗаказов        КАК Количество
		|ИЗ
		|	ВтГрафикПоступленияТоваровКорректировка КАК Таблица
		|ГДЕ
		|	Таблица.КоличествоИзЗаказов <> 0";

	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Набор.Номенклатура             КАК Номенклатура,
		|	Набор.Характеристика           КАК Характеристика,
		|	Набор.Склад                    КАК Склад,
		|
		|	Набор.Период                   КАК Период,
		|	СУММА(Набор.Количество)        КАК Количество
		|
		|ПОМЕСТИТЬ ВтОборотыГрафика
		|ИЗ
		|	ОбъединениеШаблонов КАК Набор
		|
		|СГРУППИРОВАТЬ ПО
		|	Набор.Номенклатура, Набор.Характеристика, Набор.Склад,
		|	Набор.Период
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад,
		|	Период
		|;
		|
		|///////////////////////////////////////////////////
		|";

	Шаблоны.Добавить(ШаблонПоступление);
	Шаблоны.Добавить(ШаблонОтгрузка);

	Если ИспользоватьКорректировку Тогда
		Шаблоны.Добавить(ШаблонКорректировка);
	КонецЕсли;

	ОбъединениеШаблонов = ОбъединитьТекстыЗапроса(Шаблоны);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ОбъединениеШаблонов", ОбъединениеШаблонов);

	Если Разделы <> Неопределено Тогда
		Разделы.Добавить("ТаблицаОборотыГрафика");
	КонецЕсли;

	Возврат ТекстЗапроса;

КонецФункции

// Текст запроса оборотов товаров по варианту обеспечения "Обособленно"
// в разрезе назначений, дат, номенклатуры, характеристики и склада.
//
// Параметры:
//  ИспользоватьКорректировку - Булево - признак необходимости скорректировать движения регистра перед получением оборотов.
//  Разделы - Массив - массив в который будет добавлена информация о временных таблицах, создаваемых при выполнении запроса.
//
// Возвращаемое значение:
//  Строка - Текст запроса временной таблицы оборотов товаров по варианту обеспечения "Обособленно"
//           в разрезе назначений, дат, номенклатуры, характеристики и склада.
//
Функция ТекстЗапросаОборотовОбособленных(ИспользоватьКорректировку, Разделы = Неопределено) Экспорт

	Шаблоны = Новый Массив();
	ШаблонПоступление =
		"ВЫБРАТЬ
		|	Таблица.Номенклатура        КАК Номенклатура,
		|	Таблица.Характеристика      КАК Характеристика,
		|	Таблица.Склад               КАК Склад,
		|	Таблица.Назначение          КАК Назначение,
		|
		|	ВЫБОР КОГДА Таблица.ДатаСобытия <= &НачалоТекущегоДня ТОГДА
		|				&НачалоТекущегоДня
		|			ИНАЧЕ
		|				Таблица.ДатаСобытия
		|		КОНЕЦ                         КАК Период,
		|
		|	Таблица.КоличествоПодЗаказ        КАК Количество
		|ИЗ
		|	РегистрНакопления.ГрафикПоступленияТоваров КАК Таблица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтТоварыОбособленные КАК Отбор
		|		ПО Таблица.Номенклатура   = Отбор.Номенклатура
		|		 И Таблица.Характеристика = Отбор.Характеристика
		|		 И Таблица.Склад          = Отбор.Склад
		|		 И Таблица.Назначение     = Отбор.Назначение
		|ГДЕ
		|	Таблица.Активность
		|	И Таблица.КоличествоПодЗаказ <> 0";

	ШаблонКорректировка =
		"ВЫБРАТЬ
		|	Таблица.Номенклатура          КАК Номенклатура,
		|	Таблица.Характеристика        КАК Характеристика,
		|	Таблица.Склад                 КАК Склад,
		|	Таблица.Назначение            КАК Назначение,
		|
		|	ВЫБОР КОГДА Таблица.ДатаСобытия <= &НачалоТекущегоДня ТОГДА
		|				&НачалоТекущегоДня
		|			ИНАЧЕ
		|				Таблица.ДатаСобытия
		|		КОНЕЦ                          КАК Период,
		|
		|	Таблица.КоличествоПодЗаказ         КАК Количество
		|ИЗ
		|	ВтГрафикПоступленияТоваровКорректировка КАК Таблица
		|ГДЕ
		|	Таблица.КоличествоПодЗаказ <> 0";

	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Набор.Номенклатура             КАК Номенклатура,
		|	Набор.Характеристика           КАК Характеристика,
		|	Набор.Склад                    КАК Склад,
		|	Набор.Назначение               КАК Назначение,
		|
		|	Набор.Период                   КАК Период,
		|	СУММА(Набор.Количество)        КАК Количество
		|
		|ПОМЕСТИТЬ ВтОборотыГрафикаОбособленные
		|ИЗ
		|	ОбъединениеШаблонов КАК Набор
		|
		|СГРУППИРОВАТЬ ПО
		|	Набор.Номенклатура, Набор.Характеристика, Набор.Склад, Набор.Назначение,
		|	Набор.Период
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение,
		|	Период
		|;
		|
		|///////////////////////////////////////////////////
		|";

	Шаблоны.Добавить(ШаблонПоступление);

	Если ИспользоватьКорректировку Тогда
		Шаблоны.Добавить(ШаблонКорректировка);
	КонецЕсли;

	ОбъединениеШаблонов = ОбъединитьТекстыЗапроса(Шаблоны);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ОбъединениеШаблонов", ОбъединениеШаблонов);

	Если Разделы <> Неопределено Тогда
		Разделы.Добавить("ТаблицаОборотыГрафикаОбособленные");
	КонецЕсли;

	Возврат ТекстЗапроса;

КонецФункции

// Текст запроса остатков товаров по варианту обеспечения "Резервировать к дате".
// в разрезе номенклатуры, характеристики и склада.
//
// Параметры:
//  ИспользоватьКорректировку - Булево - признак необходимости скорректировать движения регистра перед получением остатков.
//  Разделы - Массив - массив в который будет добавлена информация о временных таблицах создаваемых при выполнении запроса.
//
// Возвращаемое значение:
//  Строка - Текст запроса временной таблицы остатков товаров по варианту обеспечения "Резервировать к дате"
//           в разрезе номенклатуры, характеристики и склада.
//
Функция ТекстЗапросаОстатков(ИспользоватьКорректировку, Разделы = Неопределено) Экспорт

	Шаблоны = Новый Массив();
	ШаблонПоступление =
		"ВЫБРАТЬ
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад          КАК Склад,
		|
		|	Таблица.КоличествоИзЗаказовОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.ГрафикПоступленияТоваров.Остатки(,
		|		(Номенклатура, Характеристика, Склад) В(
		|			ВЫБРАТЬ
		|				Отбор.Номенклатура    КАК Номенклатура,
		|				Отбор.Характеристика  КАК Характеристика,
		|				Отбор.Склад           КАК Склад
		|			ИЗ
		|				ВтТовары КАК Отбор)) КАК Таблица";

	ШаблонОтгрузка =
		"ВЫБРАТЬ
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад          КАК Склад,
		|
		|	-Таблица.КоличествоИзЗаказовОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.ГрафикОтгрузкиТоваров.Остатки(,
		|		(Номенклатура, Характеристика, Склад) В(
		|			ВЫБРАТЬ
		|				Отбор.Номенклатура    КАК Номенклатура,
		|				Отбор.Характеристика  КАК Характеристика,
		|				Отбор.Склад           КАК Склад
		|			ИЗ
		|				ВтТовары КАК Отбор)) КАК Таблица";

	ШаблонКорректировка =
		"ВЫБРАТЬ
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад          КАК Склад,
		|
		|	Таблица.КоличествоИзЗаказов КАК Количество
		|ИЗ
		|	ВтГрафикПоступленияТоваровКорректировка КАК Таблица
		|ГДЕ
		|	Таблица.КоличествоИзЗаказов <> 0";

	ТекстЗапроса =
		"ВЫБРАТЬ
		|	НаборДанных.Номенклатура      КАК Номенклатура,
		|	НаборДанных.Характеристика    КАК Характеристика,
		|	НаборДанных.Склад             КАК Склад,
		|	СУММА(НаборДанных.Количество) КАК Количество
		|ПОМЕСТИТЬ ВтОстаткиГрафика
		|ИЗ
		|	ОбъединениеШаблонов КАК НаборДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	НаборДанных.Номенклатура, НаборДанных.Характеристика, НаборДанных.Склад
		|ИМЕЮЩИЕ
		|	СУММА(НаборДанных.Количество) <> 0
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад
		|;
		|
		|///////////////////////////////////////////////////
		|";

	Шаблоны.Добавить(ШаблонПоступление);
	Шаблоны.Добавить(ШаблонОтгрузка);

	Если ИспользоватьКорректировку Тогда
		Шаблоны.Добавить(ШаблонКорректировка);
	КонецЕсли;

	ОбъединениеШаблонов = ОбъединитьТекстыЗапроса(Шаблоны);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ОбъединениеШаблонов", ОбъединениеШаблонов);


	Если Разделы <> Неопределено Тогда
		Разделы.Добавить("ТаблицаОстаткиГрафика");
	КонецЕсли;

	Возврат ТекстЗапроса;

КонецФункции

// Текст запроса остатков товаров по варианту обеспечения "Обособленно".
// в разрезе назначений, номенклатуры, характеристики и склада.
//
// Параметры:
//  ИспользоватьКорректировку - Булево - признак необходимости скорректировать движения регистра перед получением остатков.
//  Разделы - Массив - массив в который будет добавлена информация о временных таблицах создаваемых при выполнении запроса.
//
// Возвращаемое значение:
//  Строка - Текст запроса временной таблицы остатков товаров по варианту обеспечения "Обособленно"
//           в разрезе назначений, номенклатуры, характеристики и склада.
//
Функция ТекстЗапросаОстатковОбособленных(ИспользоватьКорректировку, Разделы = Неопределено) Экспорт

	Шаблоны = Новый Массив();
	ШаблонПоступление =
		"ВЫБРАТЬ
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад          КАК Склад,
		|	Таблица.Назначение     КАК Назначение,
		|
		|	Таблица.КоличествоПодЗаказОстаток КАК Количество
		|ИЗ
		|	РегистрНакопления.ГрафикПоступленияТоваров.Остатки(,
		|		(Номенклатура, Характеристика, Склад, Назначение) В(
		|			ВЫБРАТЬ
		|				Отбор.Номенклатура    КАК Номенклатура,
		|				Отбор.Характеристика  КАК Характеристика,
		|				Отбор.Склад           КАК Склад,
		|				Отбор.Назначение      КАК Назначение
		|			ИЗ
		|				ВтТоварыОбособленные КАК Отбор)) КАК Таблица";

	ШаблонКорректировка =
		"ВЫБРАТЬ
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад          КАК Склад,
		|	Таблица.Назначение     КАК Назначение,
		|
		|	Таблица.КоличествоПодЗаказ КАК Количество
		|ИЗ
		|	ВтГрафикПоступленияТоваровКорректировка КАК Таблица
		|ГДЕ
		|	Таблица.КоличествоПодЗаказ <> 0";

	ТекстЗапроса =
		"ВЫБРАТЬ
		|	НаборДанных.Номенклатура      КАК Номенклатура,
		|	НаборДанных.Характеристика    КАК Характеристика,
		|	НаборДанных.Склад             КАК Склад,
		|	НаборДанных.Назначение        КАК Назначение,
		|	СУММА(НаборДанных.Количество) КАК Количество
		|ПОМЕСТИТЬ ВтОстаткиГрафикаОбособленные
		|ИЗ
		|	ОбъединениеШаблонов КАК НаборДанных
		|
		|СГРУППИРОВАТЬ ПО
		|	НаборДанных.Номенклатура, НаборДанных.Характеристика, НаборДанных.Склад, НаборДанных.Назначение
		|ИМЕЮЩИЕ
		|	СУММА(НаборДанных.Количество) <> 0
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение
		|;
		|
		|///////////////////////////////////////////////////
		|";

	Шаблоны.Добавить(ШаблонПоступление);

	Если ИспользоватьКорректировку Тогда
		Шаблоны.Добавить(ШаблонКорректировка);
	КонецЕсли;

	ОбъединениеШаблонов = ОбъединитьТекстыЗапроса(Шаблоны);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ОбъединениеШаблонов", ОбъединениеШаблонов);

	Если Разделы <> Неопределено Тогда
		Разделы.Добавить("ТаблицаОстаткиГрафикаОбособленные");
	КонецЕсли;

	Возврат ТекстЗапроса;

КонецФункции

// Текст запроса оборотов товаров по датам и итогового остатка с учетом свободного остатка товара на складе
// в разрезе номенклатуры, характеристики и склада.
//
// Параметры:
//  ИспользоватьКорректировку - Булево - признак необходимости скорректировать движения регистров перед получением остатков.
//  Разделы - Массив - массив в который будет добавлена информация о временных таблицах создаваемых при выполнении запроса.
//
// Возвращаемое значение:
//  Строка - Текст запроса временной таблицы оборотов товаров по датам и итогового остатка товара.
//           в разрезе номенклатуры, характеристики и склада.
//
Функция ТекстЗапросаОстатковИОборотов(ИспользоватьКорректировку, Разделы = Неопределено) Экспорт

	ТекстЗапроса =
		РегистрыНакопления.СвободныеОстатки.ТекстЗапросаОстатков(ИспользоватьКорректировку, Разделы)
		+ ТекстЗапросаОборотов(ИспользоватьКорректировку, Разделы)
		+ ТекстЗапросаОстатков(ИспользоватьКорректировку, Разделы)
		+ "ВЫБРАТЬ
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад          КАК Склад,
		|
		|	ЕСТЬNULL(ОборотыГрафика.Период, ДАТАВРЕМЯ(1,1,1)) КАК Период,
		|	ЕСТЬNULL(ОборотыГрафика.Количество, 0)            КАК Оборот,
		|
		|	ЕСТЬNULL(ОстаткиГрафика.Количество, 0) + ЕСТЬNULL(ОстаткиСклада.Количество,0) КАК Остаток
		|ИЗ
		|	ВтТовары КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОстаткиСклада КАК ОстаткиСклада
		|		ПО Таблица.Номенклатура   = ОстаткиСклада.Номенклатура
		|		 И Таблица.Характеристика = ОстаткиСклада.Характеристика
		|		 И Таблица.Склад          = ОстаткиСклада.Склад
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОстаткиГрафика КАК ОстаткиГрафика
		|		ПО Таблица.Номенклатура   = ОстаткиГрафика.Номенклатура
		|		 И Таблица.Характеристика = ОстаткиГрафика.Характеристика
		|		 И Таблица.Склад          = ОстаткиГрафика.Склад
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОборотыГрафика КАК ОборотыГрафика
		|		ПО Таблица.Номенклатура   = ОборотыГрафика.Номенклатура
		|		 И Таблица.Характеристика = ОборотыГрафика.Характеристика
		|		 И Таблица.Склад          = ОборотыГрафика.Склад
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура, Характеристика, Склад,
		|	Период УБЫВ
		|;
		|
		|/////////////////////////////////////////////////////
		|";

	Если Разделы <> Неопределено Тогда
		Разделы.Добавить("ТаблицаОстаткиИОборотыГрафика");
	КонецЕсли;

	Возврат ТекстЗапроса;

КонецФункции

// Текст запроса оборотов обособленных товаров по датам и итогового остатка с учетом обособленного остатка товара на складе
// в разрезе назначений, номенклатуры, характеристики и склада.
//
// Параметры:
//  ИспользоватьКорректировку - Булево - признак необходимости скорректировать движения регистров перед получением остатков.
//  Разделы - Массив - массив в который будет добавлена информация о временных таблицах создаваемых при выполнении запроса.
//
// Возвращаемое значение:
//  Строка - Текст запроса временной таблицы оборотов обособленных товаров по датам и итогового обособленного остатка товара.
//           в разрезе назначений, номенклатуры, характеристики и склада.
//
Функция ТекстЗапросаОстатковИОборотовОбособленных(ИспользоватьКорректировку, Разделы = Неопределено) Экспорт

	ТекстЗапроса =
		РегистрыНакопления.ОбеспечениеЗаказов.ТекстЗапросаОстатков(ИспользоватьКорректировку, Разделы)
		+ ТекстЗапросаОборотовОбособленных(ИспользоватьКорректировку, Разделы)
		+ ТекстЗапросаОстатковОбособленных(ИспользоватьКорректировку, Разделы)
		+ "ВЫБРАТЬ
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад          КАК Склад,
		|	Таблица.Назначение     КАК Назначение,
		|
		|	ЕСТЬNULL(ОборотыГрафика.Период, ДАТАВРЕМЯ(1,1,1)) КАК Период,
		|	ЕСТЬNULL(ОборотыГрафика.Количество, 0)            КАК Оборот,
		|
		|	ЕСТЬNULL(ОстаткиГрафика.Количество, 0) + ЕСТЬNULL(ОстаткиСклада.Количество, 0) КАК Остаток
		|ИЗ
		|	ВтТоварыОбособленные КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОбеспечениеЗаказов КАК ОстаткиСклада
		|		ПО Таблица.Номенклатура   = ОстаткиСклада.Номенклатура
		|		 И Таблица.Характеристика = ОстаткиСклада.Характеристика
		|		 И Таблица.Склад          = ОстаткиСклада.Склад
		|		 И Таблица.Назначение     = ОстаткиСклада.Назначение
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОстаткиГрафикаОбособленные КАК ОстаткиГрафика
		|		ПО Таблица.Номенклатура   = ОстаткиГрафика.Номенклатура
		|		 И Таблица.Характеристика = ОстаткиГрафика.Характеристика
		|		 И Таблица.Склад          = ОстаткиГрафика.Склад
		|		 И Таблица.Назначение     = ОстаткиГрафика.Назначение
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОборотыГрафикаОбособленные КАК ОборотыГрафика
		|		ПО Таблица.Номенклатура   = ОборотыГрафика.Номенклатура
		|		 И Таблица.Характеристика = ОборотыГрафика.Характеристика
		|		 И Таблица.Склад          = ОборотыГрафика.Склад
		|		 И Таблица.Назначение     = ОборотыГрафика.Назначение
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение,
		|	Период УБЫВ
		|;
		|
		|/////////////////////////////////////////////////////
		|";

	Если Разделы <> Неопределено Тогда
		Разделы.Добавить("ТаблицаОстаткиИОборотыГрафикаОбособленные");
	КонецЕсли;

	Возврат ТекстЗапроса;

КонецФункции

// Таблица доступных остатков, полученая по данным об остатках и оборотах номенклатуры из выборки.
//
// Параметры:
//  Выборка - ВыборкаДанных - Выборка оборотов номенклатуры в порядке убывания периода,
//                            каждая запись содержит также конченый остаток номенклатуры.
//  ТолькоПоложительные - Булево - Если истина, то в результат попадут только положительные остатки
//                                 (для заполнения обеспечения в заказах).
//  Обособление - Строка - Если "Товар", то выборка содержит данные обособленных товаров, если "Работа",
//                         то выборка содержит данные работ.
//
Функция ТаблицаДоступныеОстатки(Выборка, ТолькоПоложительные = Ложь, Обособление = Неопределено) Экспорт

	ДоступныеОстатки = Новый ТаблицаЗначений();
	ДоступныеОстатки.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ДоступныеОстатки.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ДоступныеОстатки.Колонки.Добавить("ДатаДоступности");
	ДоступныеОстатки.Колонки.Добавить("Количество", ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(15, 3));

	Если Обособление = Неопределено Тогда

		ДоступныеОстатки.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"));
		КлючСтроки = ОбеспечениеКлиентСервер.КлючНоменклатураХарактеристикаСклад();

	ИначеЕсли Обособление = "Товар" Тогда

		ДоступныеОстатки.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"));
		ДоступныеОстатки.Колонки.Добавить("Назначение", Новый ОписаниеТипов("СправочникСсылка.Назначения"));
		КлючСтроки = ОбеспечениеКлиентСервер.КлючНоменклатураХарактеристикаСкладНазначение();

	ИначеЕсли Обособление = "Работа" Тогда

		ДоступныеОстатки.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
		ДоступныеОстатки.Колонки.Добавить("Назначение", Новый ОписаниеТипов("СправочникСсылка.Назначения"));
		КлючСтроки = ОбеспечениеКлиентСервер.КлючНоменклатураХарактеристикаПодразделениеНазначение();

	КонецЕсли;

	ЕстьЗаписи = Выборка.Следующий();
	Пока ЕстьЗаписи Цикл

		ЗаполнитьЗначенияСвойств(КлючСтроки, Выборка);

		НарастающийИтог          = Выборка.Остаток;
		МинимальноеЗначение      = НарастающийИтог;

		ИзмениласьЗапись         = Ложь;

		// Цикл по сочетанию номенклатура\характеристика\склад.
		Пока Не ИзмениласьЗапись Цикл

			НарастающийИтог = НарастающийИтог - Выборка.Оборот;

			Если МинимальноеЗначение > НарастающийИтог И (Не ТолькоПоложительные Или МинимальноеЗначение > 0) Тогда

				СтрокаТаблицы = ДоступныеОстатки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Выборка);

				СтрокаТаблицы.ДатаДоступности = Выборка.Период; //доступно на дату.
				СтрокаТаблицы.Количество = МинимальноеЗначение;
				МинимальноеЗначение = НарастающийИтог;

			КонецЕсли;

			// Переход к следующей записи.
			ЕстьЗаписи = Выборка.Следующий();

			ИзмениласьЗапись = Не ЕстьЗаписи Или ОбеспечениеКлиентСервер.ИзменилсяКлюч(КлючСтроки, Выборка);

		КонецЦикла;

		Если Не ТолькоПоложительные Или МинимальноеЗначение > 0 Тогда

			СтрокаТаблицы = ДоступныеОстатки.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, КлючСтроки);

			СтрокаТаблицы.ДатаДоступности = '00010101'; //доступно сейчас.
			СтрокаТаблицы.Количество = МинимальноеЗначение;

		КонецЕсли;

	КонецЦикла;

	Возврат ДоступныеОстатки;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы


Процедура ИсправитьДвижения_ДанныеДляОбновления(Параметры) Экспорт
    
	ПолноеИмяРегистра = "РегистрНакопления.ГрафикПоступленияТоваров";
	
	// Алгоритм вычисления регистраторов, по которым необходимо пересчитать "График поступления товаров":
	// - Распоряжения, по которым в текущей версии обновляется "Движение товаров" (могут появиться или исчезнуть из графика)
	//   (см. обработчик РегистрыНакопления.ДвижениеТоваров.ИсправитьДвижения).
	// - Распоряжения, по которым есть обороты по регистру "Движение товаров" (должны быть в графике).
	// - Регистраторы, по которым есть движения по регистру "График поступления товаров" (есть в графике по факту).
	
#Область РегистрацияРаспоряженийИзОбновленияРегистраДвижениеТоваров

	ПолноеИмяРегистраДвижениеТоваров = "РегистрНакопления.ДвижениеТоваров";
	ИмяРегистраДвижениеТоваров = "ДвижениеТоваров";
    
// #Область УдалениеИнформацииОПланируемойОтгрузке   
	Запрос = Новый Запрос();
	Запрос.Текст = "
	|//Документы в которых есть отгрузка
	|ВЫБРАТЬ
	|   ВЫБОР 
    |       КОГДА Таблица.Регистратор ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
    |           ТОГДА Таблица.Регистратор 
    |       КОГДА Таблица.Регистратор ССЫЛКА Документ.ЗаказНаПеремещение
    |           ТОГДА Таблица.Регистратор 
    |       КОГДА Таблица.Регистратор ССЫЛКА Документ.ЗаказНаСборку
    |           ТОГДА Таблица.Регистратор 
    |       КОГДА Таблица.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
    |           ТОГДА ПеремещениеТоваровТовары.ЗаказНаПеремещение
    |       КОГДА Таблица.Регистратор ССЫЛКА Документ.СборкаТоваров
    |           ТОГДА СборкаТоваров.ЗаказНаСборку
    |   КОНЕЦ КАК Заказ
    |ИЗ
    |	РегистрНакопления.ДвижениеТоваров КАК Таблица
    |	    ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
    |		ПО ПеремещениеТоваровТовары.Ссылка = Таблица.Регистратор
    |	    ЛЕВОЕ СОЕДИНЕНИЕ Документ.СборкаТоваров КАК СборкаТоваров
    |		ПО СборкаТоваров.Ссылка = Таблица.Регистратор
    |
    |ГДЕ
    |	(Таблица.Регистратор ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента
    |		ИЛИ Таблица.Регистратор ССЫЛКА Документ.ЗаказНаПеремещение
    |		ИЛИ Таблица.Регистратор ССЫЛКА Документ.ЗаказНаСборку
    |		ИЛИ Таблица.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
    |		ИЛИ Таблица.Регистратор ССЫЛКА Документ.СборкаТоваров)
    |
    |	// Старые записи о планируемой отгрузке, не нужны, так как ресурсы были удалены.
    |	И Таблица.ПланируемоеПоступление = 0 И Таблица.ПланируемоеПоступлениеПодЗаказ = 0
    |
    |ОБЪЕДИНИТЬ ВСЕ
    |
    |//Отклоненные заявки на возврат
    |ВЫБРАТЬ РАЗЛИЧНЫЕ
    |	ЗаявкаНаВозврат.Ссылка КАК Заказ
    |ИЗ
    |	Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозврат
    |		
    |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвижениеТоваров КАК РегистрДвижениеТоваров
    |		ПО ЗаявкаНаВозврат.Ссылка = РегистрДвижениеТоваров.Регистратор
    |ГДЕ
    |	ЗаявкаНаВозврат.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.Отклонена)
    |	И НЕ РегистрДвижениеТоваров.Регистратор ЕСТЬ NULL
    |";
    
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Заказ");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(
        Параметры, 
        Регистраторы, 
        ПолноеИмяРегистра
    );
    
// #Область СборкаТоваров
	Регистраторы = Документы.ЗаказНаСборку.РазборкиКоторыеНужноПривязатьКНовымЗаказамПослеРазбиенияЗаказов();
    
    Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	СборкаТоваров.ЗаказНаСборку КАК Заказ
		|ИЗ
		|	Документ.СборкаТоваров КАК СборкаТоваров
		|ГДЕ
		|	СборкаТоваров.Ссылка В(&Регистраторы)";
	Запрос.УстановитьПараметр("Регистраторы", Регистраторы);
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Заказ");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
    
// #Область ЗаказНаСборку
	Регистраторы = Документы.ЗаказНаСборку.ЗаказыНаРазборкуКоторыеНужноРазбитьПередЗаполнениемСерий();
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
	Регистраторы = Документы.ЗаказНаСборку.РазборкиКоторыеНужноРазбитьПоВариантуОбеспечения();
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
    
// #Область АктОРасхожденияхПослеПеремещения	
	ТекстЗапросаМеханизмаПроведения = Документы.АктОРасхожденияхПослеПеремещения.АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистраДвижениеТоваров);
	Регистраторы = ОбновлениеИнформационнойБазыУТ.РегистраторыДляПерепроведения(
		ТекстЗапросаМеханизмаПроведения,
		ПолноеИмяРегистраДвижениеТоваров,
		"Документ.АктОРасхожденияхПослеПеремещения"
    );
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТоварыАкта.Заказ КАК Заказ
		|ИЗ
		|	Документ.АктОРасхожденияхПослеПеремещения.Товары КАК ТоварыАкта
		|ГДЕ
		|	ТоварыАкта.Ссылка В(&Регистраторы)";
	Запрос.УстановитьПараметр("Регистраторы", Регистраторы);
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Заказ");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
    
    
#КонецОбласти
	
#Область РегистрацияРаспоряженийИзОборотовРегистраДвижениеТоваров

	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.Распоряжение КАК Распоряжение
		|ИЗ(
		|	ВЫБРАТЬ
		|		Таблица.Распоряжение   КАК Распоряжение,
		|		Таблица.Номенклатура   КАК Номенклатура,
		|		Таблица.Характеристика КАК Характеристика,
		|		Таблица.Склад          КАК Склад,
		|		Таблица.Назначение     КАК Назначение,
		|		СУММА(Таблица.ПланируемоеПоступление)         КАК ПланируемоеПоступление,
		|		СУММА(Таблица.ПланируемоеПоступлениеПодЗаказ) КАК ПланируемоеПоступлениеПодЗаказ
		|	ИЗ(
		|		ВЫБРАТЬ
		|			ДвижениеТоваров.Распоряжение   КАК Распоряжение,
		|			ДвижениеТоваров.Номенклатура   КАК Номенклатура,
		|			ДвижениеТоваров.Характеристика КАК Характеристика,
		|			ДвижениеТоваров.Склад          КАК Склад,
		|			ДвижениеТоваров.Назначение     КАК Назначение,
		|			
		|			ВЫБОР КОГДА ДвижениеТоваров.Корректировка ТОГДА
		|						-ДвижениеТоваров.ПланируемоеПоступление
		|					ИНАЧЕ
		|						ДвижениеТоваров.ПланируемоеПоступление
		|				КОНЕЦ КАК ПланируемоеПоступление,
		|			
		|			ВЫБОР КОГДА ДвижениеТоваров.Корректировка ТОГДА
		|						-ДвижениеТоваров.ПланируемоеПоступлениеПодЗаказ
		|					ИНАЧЕ
		|						ДвижениеТоваров.ПланируемоеПоступлениеПодЗаказ
		|				КОНЕЦ КАК ПланируемоеПоступлениеПодЗаказ
		|		ИЗ
		|			РегистрНакопления.ДвижениеТоваров КАК ДвижениеТоваров
		|		ГДЕ
		|			ДвижениеТоваров.Активность) КАК Таблица
		|		
		|	СГРУППИРОВАТЬ ПО
		|		Таблица.Распоряжение, Таблица.Номенклатура, Таблица.Характеристика, Таблица.Склад, Таблица.Назначение
		|	ИМЕЮЩИЕ
		|		СУММА(Таблица.ПланируемоеПоступление) > 0 ИЛИ СУММА(Таблица.ПланируемоеПоступлениеПодЗаказ) > 0) КАК Таблица";
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Распоряжение");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
#КонецОбласти
	
#Область РегистрацияРегистраторовРегистраГрафикПоступленияТоваров
	
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ГрафикПоступленияТоваров.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрНакопления.ГрафикПоступленияТоваров КАК ГрафикПоступленияТоваров
		|ГДЕ
		|	ГрафикПоступленияТоваров.Активность";
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
#КонецОбласти

КонецПроцедуры

Процедура ИсправитьДвижения(Параметры) Экспорт
	
	ЕстьЗаблокированные = ОбновлениеИнформационнойБазы.ЕстьЗаблокированныеПредыдущимиОчередямиДанные(Параметры.Очередь, "РегистрНакопления.ДвижениеТоваров");
	
	Если ЕстьЗаблокированные Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ИмяРегистра = "ГрафикПоступленияТоваров";
	ПолноеИмяРегистра = "РегистрНакопления.ГрафикПоступленияТоваров";
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьРегистраторыРегистраДляОбработки(
        Параметры.Очередь, 
        Неопределено, 
        ПолноеИмяРегистра
    );
    
	Пока Выборка.Следующий() Цикл
		
		Если ТипЗнч(Выборка.Регистратор) = Тип("ДокументСсылка.КорректировкаРегистров") Тогда
			
			НаборЗаписей = РегистрыНакопления.ГрафикПоступленияТоваров.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей);
			
			Продолжить;
			
		КонецЕсли;
		
		// Блокировка читаемых и записываемых наборов.
		
		НачатьТранзакцию();
		
		Блокировка = Новый БлокировкаДанных;
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ГрафикПоступленияТоваров.НаборЗаписей");
		ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Регистратор);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ДвижениеТоваров");
		ЭлементБлокировки.УстановитьЗначение("Распоряжение", Выборка.Регистратор);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
		
		Попытка
			Блокировка.Заблокировать();
		Исключение
			ОтменитьТранзакцию();
			Продолжить;
		КонецПопытки;
		
		// Перерасчет движений
		НаборЗаписей = РегистрыНакопления.ДвижениеТоваров.РассчитатьИтогиРегистраОстаткиТоваровПоГрафикуДляОбновленияИБ(Выборка.Регистратор);
		
		// Запись.
		Если ЕстьИзмененияВНаборе(Выборка, НаборЗаписей) Тогда
			
			Попытка
				ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
				ЗафиксироватьТранзакцию();
			Исключение
				ОтменитьТранзакцию();
				
				ТекстСообщения = НСтр("ru='Не удалось обработать документ: %Регистратор% по причине: %Причина%';uk='Не вдалося обробити документ: %Регистратор% по причині: %Причина%'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", Выборка.Регистратор);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
				ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
					УровеньЖурналаРегистрации.Предупреждение,
					Выборка.Регистратор.Метаданные(),
					Выборка.Регистратор,
					ТекстСообщения);
				
				ВызватьИсключение;
			КонецПопытки;
			
		Иначе
			
			ОтменитьТранзакцию();
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(НаборЗаписей);
			
			Продолжить;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяРегистра);
    
КонецПроцедуры



Функция ЕстьИзмененияВНаборе(Выборка, НаборЗаписей)
	
	Таблица = НаборЗаписей.Выгрузить();
	Запрос = Новый Запрос();
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад          КАК Склад,
		|	Таблица.ДатаСобытия    КАК ДатаСобытия,
		|	Таблица.Назначение     КАК Назначение,
		|	Таблица.КоличествоИзЗаказов КАК КоличествоИзЗаказов,
		|	Таблица.КоличествоПодЗаказ  КАК КоличествоПодЗаказ
		|ПОМЕСТИТЬ ВтТаблицаИзменений
		|ИЗ
		|	&Таблица КАК Таблица
		|;
		|
		|///////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	1
		|ИЗ(
		|	ВЫБРАТЬ
		|		ТаблицаИзменений.Номенклатура   КАК Номенклатура,
		|		ТаблицаИзменений.Характеристика КАК Характеристика,
		|		ТаблицаИзменений.Склад          КАК Склад,
		|		ТаблицаИзменений.ДатаСобытия    КАК ДатаСобытия,
		|		ТаблицаИзменений.Назначение     КАК Назначение,
		|		ТаблицаИзменений.КоличествоИзЗаказов КАК КоличествоИзЗаказов,
		|		ТаблицаИзменений.КоличествоПодЗаказ  КАК КоличествоПодЗаказ
		|	ИЗ
		|		ВтТаблицаИзменений КАК ТаблицаИзменений
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ГрафикПоступленияТоваров.Номенклатура   КАК Номенклатура,
		|		ГрафикПоступленияТоваров.Характеристика КАК Характеристика,
		|		ГрафикПоступленияТоваров.Склад          КАК Склад,
		|		ГрафикПоступленияТоваров.ДатаСобытия    КАК ДатаСобытия,
		|		ГрафикПоступленияТоваров.Назначение     КАК Назначение,
		|		-ГрафикПоступленияТоваров.КоличествоИзЗаказов КАК КоличествоИзЗаказов,
		|		-ГрафикПоступленияТоваров.КоличествоПодЗаказ  КАК КоличествоПодЗаказ
		|	ИЗ
		|		РегистрНакопления.ГрафикПоступленияТоваров КАК ГрафикПоступленияТоваров
		|	ГДЕ
		|		ГрафикПоступленияТоваров.Регистратор = &Регистратор) КАК Набор
		|СГРУППИРОВАТЬ ПО
		|	Набор.Номенклатура, Набор.Характеристика, Набор.Склад, Набор.ДатаСобытия, Набор.Назначение
		|ИМЕЮЩИЕ
		|	СУММА(Набор.КоличествоИзЗаказов) <> 0 ИЛИ СУММА(Набор.КоличествоПодЗаказ) <> 0";
		
	Запрос.УстановитьПараметр("Таблица",     НаборЗаписей.Выгрузить());
	Запрос.УстановитьПараметр("Регистратор", Выборка.Регистратор);
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

#КонецОбласти

Функция ОбъединитьТекстыЗапроса(Тексты)

	Результат = "";
	ВГраница = Тексты.Количество() - 1;
	Для Индекс = 0 По ВГраница Цикл
		Результат = Результат + Тексты[Индекс];
		Если Индекс < ВГраница Тогда
			Результат = Результат + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|";
		КонецЕсли;
	КонецЦикла;
	
	Возврат "(" + Результат + ")";

КонецФункции

#КонецОбласти

#КонецЕсли
