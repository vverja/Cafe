&НаКлиенте
Перем КэшированныеЗначения; //используется механизмом обработки изменения реквизитов ТЧ

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	Отбор = 2; // По умолчанию показываем все позиции, которые могут быть сопоставлены
	Номенклатура = Справочники.Номенклатура.ПустаяСсылка();
	
	Если Параметры.Свойство("Отбор") Тогда
		
		Если Параметры.Отбор.Свойство("Владелец") Тогда
			Партнер = Параметры.Отбор.Владелец;
		КонецЕсли;
		
		Если Параметры.Отбор.Свойство("Номенклатура") И ЗначениеЗаполнено(Параметры.Отбор.Номенклатура) Тогда
			
			Номенклатура = Параметры.Отбор.Номенклатура;
			Параметры.Отбор.Удалить("Номенклатура");
			
			Если Параметры.Отбор.Свойство("Характеристика") Тогда
				Характеристика = Параметры.Отбор.Характеристика;
				Параметры.Отбор.Удалить("Характеристика");
			КонецЕсли;
			
			Если Параметры.Отбор.Свойство("Упаковка") Тогда
				
				Упаковка = Параметры.Отбор.Упаковка;
				Параметры.Отбор.Удалить("Упаковка");
				
			КонецЕсли;
			
		Иначе
			
			Параметры.Отбор.Удалить("Номенклатура");
			Параметры.Отбор.Удалить("Характеристика");
			Параметры.Отбор.Удалить("Упаковка");
			
		КонецЕсли;
	
	КонецЕсли;
	
	Список.Параметры.УстановитьЗначениеПараметра("НоменклатураОтбор",   Номенклатура);
	Список.Параметры.УстановитьЗначениеПараметра("ХарактеристикаОтбор", Характеристика);
	Список.Параметры.УстановитьЗначениеПараметра("УпаковкаОтбор",       Упаковка);
	
	Подсказка1 = НСтр("ru='Номенклатура поставщика не сопоставлена с номенклатурой';uk='Номенклатура постачальника не зіставлена з номенклатурою'");
	Подсказка2 = НСтр("ru='Номенклатура поставщика сопоставлена с другой номенклатурой';uk='Номенклатура постачальника зіставлена з іншою номенклатурою'");
	Подсказка3 = НСтр("ru='Номенклатура поставщика сопоставлена с номенклатурой';uk='Номенклатура постачальника зіставлена з номенклатурою'");
	
	Список.Параметры.УстановитьЗначениеПараметра("Подсказка1", Подсказка1);
	Список.Параметры.УстановитьЗначениеПараметра("Подсказка2", Подсказка2);
	Список.Параметры.УстановитьЗначениеПараметра("Подсказка3", Подсказка3);
	
	Если Параметры.Свойство("Отбор") Тогда
	
		Если Параметры.Отбор.Свойство("ТипНоменклатуры") Тогда
			
			Если ТипЗнч(Параметры.Отбор.ТипНоменклатуры) = Тип("ПеречислениеСсылка.ТипыНоменклатуры") Тогда
				ОтборНоменклатуры = Новый Массив();
				ОтборНоменклатуры.Добавить(Параметры.Отбор.ТипНоменклатуры);
			ИначеЕсли ТипЗнч(Параметры.Отбор.ТипНоменклатуры) = Тип("ФиксированныйМассив") Тогда
				ОтборНоменклатуры = Параметры.Отбор.ТипНоменклатуры;
			КонецЕсли;
			
			Список.Параметры.УстановитьЗначениеПараметра("ТипыНоменклатуры", ОтборНоменклатуры);
			Параметры.Отбор.Удалить("ТипНоменклатуры");
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Параметры.Свойство("ТипНоменклатуры") Тогда
		Если ТипЗнч(Параметры.ТипНоменклатуры) = Тип("ПеречислениеСсылка.ТипыНоменклатуры") Тогда
			ОтборНоменклатуры = Новый Массив();
			ОтборНоменклатуры.Добавить(Параметры.ТипНоменклатуры);
		ИначеЕсли ТипЗнч(Параметры.ТипНоменклатуры) = Тип("ФиксированныйМассив") Тогда
			ОтборНоменклатуры = Параметры.ТипНоменклатуры;
		ИначеЕсли ТипЗнч(Параметры.ТипНоменклатуры) = Тип("СписокЗначений") Тогда
			ОтборНоменклатуры = Параметры.ТипНоменклатуры.ВыгрузитьЗначения();
		КонецЕсли;
		Если ЗначениеЗаполнено(ОтборНоменклатуры) Тогда
			Список.Параметры.УстановитьЗначениеПараметра("ТипыНоменклатуры", ОтборНоменклатуры);
		КонецЕсли;
	КонецЕсли;
		
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		
		ПредставлениеНоменклатуры = Строка(Номенклатура) + ?(ЗначениеЗаполнено(Характеристика), ", " + Характеристика, "") + ?(ЗначениеЗаполнено(Упаковка), ", " + Упаковка, ""); 
		
		ПредставлениеЭлемента = НСтр("ru='Все позиции, которые могут быть сопоставлены с ""%ПредставлениеНоменклатуры%""';uk='Всі позиції, які можуть бути зіставлені з ""%ПредставлениеНоменклатуры%""'");
		ПредставлениеЭлемента = СтрЗаменить(ПредставлениеЭлемента, "%ПредставлениеНоменклатуры%", ПредставлениеНоменклатуры);
		НовыйЭлемент = Элементы.Отбор.СписокВыбора.Добавить("2", ПредставлениеЭлемента);
		
		ПредставлениеЭлемента = НСтр("ru='Все позиции, которые сопоставлены с ""%ПредставлениеНоменклатуры%""';uk='Всі позиції, які зіставлені з ""%ПредставлениеНоменклатуры%""'");
		ПредставлениеЭлемента = СтрЗаменить(ПредставлениеЭлемента, "%ПредставлениеНоменклатуры%", ПредставлениеНоменклатуры);
		Элементы.Отбор.СписокВыбора.Добавить("1", ПредставлениеЭлемента);
		
		Элементы.Отбор.СписокВыбора.Добавить("", НСтр("ru='Все позиции';uk='Всі позиції'"));
		
		УстановитьОтборПоСопоставленнойНоменклатуре(Отбор="2");
		
	Иначе
		
		Элементы.Отбор.Видимость = Ложь;
		
	КонецЕсли;

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Отбор) Тогда
		УстановитьОтборПоСопоставленнойНоменклатуре(Отбор="2");
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ПризнакВариантаОтбора1", , ВидСравненияКомпоновкиДанных.Равно,, Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ПризнакВариантаОтбора2", , ВидСравненияКомпоновкиДанных.Равно,, Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Копирование Тогда
		Возврат;
	КонецЕсли;

	Отказ = Истина;
	
	Если Группа Тогда
		
		ОткрытьФорму(
			"Справочник.НоменклатураПоставщиков.ФормаГруппы",
			Новый Структура("Владелец,ЭтоГруппа", Партнер, Истина),
			,
			,);
		
	Иначе
		
		ОткрытьФорму(
			"Справочник.НоменклатураПоставщиков.ФормаОбъекта",
			Новый Структура("Владелец,Номенклатура,Характеристика,Упаковка", Партнер, Номенклатура, Характеристика, Упаковка),
			,
			,);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОтборПоСопоставленнойНоменклатуре(ПоказыватьНесопоставленные = Ложь)
	
	Если ПоказыватьНесопоставленные Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ПризнакВариантаОтбора1", Истина, ВидСравненияКомпоновкиДанных.Равно,, Истина);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ПризнакВариантаОтбора2", , ВидСравненияКомпоновкиДанных.Равно,, Ложь);
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ПризнакВариантаОтбора1", , ВидСравненияКомпоновкиДанных.Равно,, Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ПризнакВариантаОтбора2", Истина, ВидСравненияКомпоновкиДанных.Равно,, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
