#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Документы.ВозвратТоваровМеждуОрганизациями.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	
	Документы.ЗаявкаНаРасходованиеДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	
	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);
	
КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.ПередачаТоваровМеждуОрганизациями) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ПередачаТоваровМеждуОрганизациями.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.ПередачаТоваровМеждуОрганизациями);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьПередачиТоваровМеждуОрганизациями";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуКонтрольПередачТоваров(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуОстаткиТоваровОрганизаций(КомандыОтчетов);

КонецПроцедуры


// Процедура заполняет массивы реквизитов, зависимых от хозяйственной операции документа.
//
// Параметры:
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Выбранная хозяйственная операция
//	МассивВсехРеквизитов - Массив - Массив всех имен реквизитов, зависимых от хозяйственной операции
//	МассивРеквизитовОперации - Массив - Массив имен реквизитов, используемых в выбранной хозяйственной операции
//
Процедура ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(ХозяйственнаяОперация, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("ДатаПлатежа");
	МассивВсехРеквизитов.Добавить("ФормаОплаты");
	МассивВсехРеквизитов.Добавить("ВалютаВзаиморасчетов");
	МассивВсехРеквизитов.Добавить("УказыватьНомераГТД");
	МассивВсехРеквизитов.Добавить("Товары.СтатьяРасходов");
	МассивВсехРеквизитов.Добавить("Товары.АналитикаРасходов");
	МассивВсехРеквизитов.Добавить("Товары.Подразделение");
	МассивВсехРеквизитов.Добавить("Товары.СписатьНаРасходы");
	
	МассивРеквизитовОперации = Новый Массив;
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию Тогда
		МассивРеквизитовОперации.Добавить("ДатаПлатежа");
		МассивРеквизитовОперации.Добавить("ФормаОплаты");
		МассивРеквизитовОперации.Добавить("ВалютаВзаиморасчетов");
		МассивРеквизитовОперации.Добавить("УказыватьНомераГТД");
		МассивРеквизитовОперации.Добавить("Товары.СтатьяРасходов");
		МассивРеквизитовОперации.Добавить("Товары.АналитикаРасходов");
		МассивРеквизитовОперации.Добавить("Товары.Подразделение");
		МассивРеквизитовОперации.Добавить("Товары.СписатьНаРасходы");
	КонецЕсли;
	
КонецПроцедуры

// Функция определяет реквизиты документа.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ПередачаТоваровМеждуОрганизациями - Ссылка на документ
//
// Возвращаемое значение:
//	Структура - Реквизиты выбранного документа
//
Функция РеквизитыДокумента(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	ДанныеДокумента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаДокумента,
	|	ДанныеДокумента.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента КАК РасчетыЧерезОтдельногоКонтрагента,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.ПоТоварамКОформлению КАК ПоТоварамКОформлению,
	|	ДанныеДокумента.Проведен КАК Проведен
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Дата = Выборка.Дата;
		Организация = Выборка.ОрганизацияПолучатель;
		ОрганизацияОтправитель = Выборка.Организация;
		ОрганизацияПолучатель = Выборка.ОрганизацияПолучатель;
		ВалютаВзаиморасчетов = Выборка.ВалютаВзаиморасчетов;
		ХозяйственнаяОперация = Выборка.ХозяйственнаяОперация;
		СуммаДокумента = Выборка.СуммаДокумента;
		СуммаВзаиморасчетов = ?(Выборка.Проведен, Выборка.СуммаВзаиморасчетов, 0);
		РасчетыЧерезОтдельногоКонтрагента = Выборка.РасчетыЧерезОтдельногоКонтрагента;
		Партнер = ?(РасчетыЧерезОтдельногоКонтрагента, Выборка.Партнер, Справочники.Партнеры.НашеПредприятие);
		Контрагент = ?(РасчетыЧерезОтдельногоКонтрагента, Выборка.Контрагент, Выборка.Организация);
		ПоТоварамКОформлению = Выборка.ПоТоварамКОформлению;
	Иначе
		Дата = Дата(1,1,1);
		Организация = Справочники.Организации.ПустаяСсылка();
		ОрганизацияОтправитель = Справочники.Организации.ПустаяСсылка();
		ОрганизацияПолучатель = Справочники.Организации.ПустаяСсылка();
		Контрагент = Справочники.Контрагенты.ПустаяСсылка();
		ВалютаВзаиморасчетов = Справочники.Валюты.ПустаяСсылка();
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПустаяСсылка();
		СуммаДокумента = 0;
		СуммаВзаиморасчетов = 0;
		РасчетыЧерезОтдельногоКонтрагента = Ложь;
		Партнер = Справочники.Партнеры.ПустаяСсылка();
		ПоТоварамКОформлению = Ложь;
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Дата, Организация, ВалютаВзаиморасчетов, ХозяйственнаяОперация, СуммаДокумента, СуммаВзаиморасчетов,
	|ОрганизацияОтправитель, ОрганизацияПолучатель, РасчетыЧерезОтдельногоКонтрагента, Партнер, Контрагент, ПоТоварамКОформлению",
		Дата,
		Организация,
		ВалютаВзаиморасчетов,
		ХозяйственнаяОперация,
		СуммаДокумента,
		СуммаВзаиморасчетов,
		ОрганизацияОтправитель,
		ОрганизацияПолучатель,
		РасчетыЧерезОтдельногоКонтрагента,
		Партнер,
		Контрагент,
		ПоТоварамКОформлению);
	
	Возврат СтруктураРеквизитов;

КонецФункции

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад,Дата";
	
	Возврат ИменаРеквизитов;
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение
//			Тип Структура
//				Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ПередачаТоваровМеждуОрганизациями";
	
	ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Склад, Ложь);
	
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПустаяСсылка());
	
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;            
	
	ПараметрыУказанияСерий.ТолькоСерииДляСебестоимости = Истина;
	ПараметрыУказанияСерий.Дата = Объект.Дата;
	
	Возврат ПараметрыУказанияСерий;
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|					ТОГДА ВЫБОР
	|							КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 14
	|							ИНАЧЕ 13
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|			ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|		ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|			И (ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;

КонецФункции






// Возвращает текст запроса для получениях доступных назначений
//	Параметры:
//		ПараметрыФормированияЗапроса - Структура - параметры для формирования текстов запросов
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаДоступныхНазначений(ПараметрыФормированияЗапроса) Экспорт

	Возврат Справочники.Назначения.ТекстЗапросаНазначенийРасширенный();

КонецФункции

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("Ссылка");
	Поля.Добавить("Номер");
	Поля.Добавить("Дата");
	Поля.Добавить("ВариантОформленияПродажи");
	
КонецПроцедуры

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	Если Данные.ВариантОформленияПродажи = ПредопределенноеЗначение("Перечисление.ВариантыОформленияПродажи.АктНаПередачуПрав") Тогда
		СтандартнаяОбработка = Ложь;
		Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Акт на передачу прав между организациями %1 от %2';uk='Акт на передачу прав між організаціями %1 від %2'"),
			Данные.Номер,
			Данные.Дата);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаВыручкаИСебестоимостьПродаж(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииПроизводственныхЗатрат(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаЗакупки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияКонтрагентДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладныхТовары(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладныхВидыЗапасов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСРасчетНалоговыхОбязательств(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСРасчетНалоговогоКредита(Запрос, ТекстыЗапроса, Регистры);
 	
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
    Если ПроведениеСервер.ТребуетсяТаблицаДляДвижений("НДСНоменклатурныйСоставДляНалоговыхНакладных", Регистры) Тогда

    	ДополнительныеСвойства.ТаблицыДляДвижений.Вставить("ТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладных", 
    		ДополнитьТаблицуНомеромГТД(
    			ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладныхТовары,
    			ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладныхВидыЗапасов
    		)
    	);
    
    КонецЕсли; 
 	
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата                              КАК Период,
	|	ДанныеДокумента.Ссылка                            КАК Ссылка,
	|	ДанныеДокумента.Организация                       КАК Организация,
	|	ДанныеДокумента.ОрганизацияПолучатель             КАК ОрганизацияПолучатель,
	|	ДанныеДокумента.Склад                             КАК Склад,
	|	ДанныеДокумента.Валюта                            КАК Валюта,
	|	ДанныеДокумента.ВалютаВзаиморасчетов              КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.ДатаПлатежа                       КАК ДатаПлатежа,
	|	ДанныеДокумента.Подразделение                     КАК Подразделение,
	|	ДанныеДокумента.ЦенаВключаетНДС                   КАК ЦенаВключаетНДС,
	|	ДанныеДокумента.ХозяйственнаяОперация             КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.УказыватьНомераГТД                КАК УказыватьНомераГТД,
	|	ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента КАК РасчетыЧерезОтдельногоКонтрагента,
	|	ДанныеДокумента.Контрагент                        КАК Контрагент,
	|	ДанныеДокумента.ПоТоварамКОформлению              КАК ПоТоварамКОформлению,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Поставка) КАК ВидПоставки,
	|
	|	ДанныеДокумента.Организация                       КАК Поставщик,
	|	ДанныеДокумента.Менеджер                          КАК Менеджер,
	|	Неопределено                                      КАК Сделка,
	|	Неопределено                                      КАК ВариантОбособленногоУчетаТоваров,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаФинансовогоУчета,
	|	Ложь                                              КАК ОбособленныйУчетТоваровПоСделке,
	|	Неопределено                                      КАК Соглашение,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента ТОГДА
	|		ДанныеДокумента.Партнер
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	КОНЕЦ                                             КАК Партнер,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию) ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ                                             КАК ЭтоПередачаНаКомиссию,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.КонецПериода = ДАТАВРЕМЯ(1, 1, 1)
	|		ИЛИ ДанныеДокумента.КонецПериода > ДанныеДокумента.Дата
	|	ТОГДА
	|		ДанныеДокумента.Дата
	|	ИНАЧЕ
	|		ДанныеДокумента.КонецПериода
	|	КОНЕЦ                                             КАК КонецПериода,
	|	ДанныеДокумента.НаправлениеДеятельности 		  КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	ПересчитатьТаблицуТоваровВВалютуРегл(Реквизиты, Запрос.МенеджерВременныхТаблиц);
	
	Запрос.УстановитьПараметр("Ссылка",                            ДокументСсылка);
	Запрос.УстановитьПараметр("Период",                            Реквизиты.Период);
	Запрос.УстановитьПараметр("КонецПериода",                      КонецДня(Реквизиты.КонецПериода));
	Запрос.УстановитьПараметр("Склад",                             Реквизиты.Склад);
	Запрос.УстановитьПараметр("Валюта",                            Реквизиты.Валюта);
	Запрос.УстановитьПараметр("Партнер",                           Реквизиты.Партнер);
	Запрос.УстановитьПараметр("ДатаПлатежа",                       Реквизиты.ДатаПлатежа);
	Запрос.УстановитьПараметр("Организация",                       Реквизиты.Организация);
	Запрос.УстановитьПараметр("ОрганизацияПолучатель",             Реквизиты.ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("Подразделение",                     Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС",                   ?(Реквизиты.ЦенаВключаетНДС, 0, 1));
	Запрос.УстановитьПараметр("УказыватьНомераГТД",                Реквизиты.УказыватьНомераГТД);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",             Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("ЭтоПередачаНаКомиссию",             Реквизиты.ЭтоПередачаНаКомиссию);
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов", ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("ИспользоватьУчетПрочихДоходовРасходов", ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов"));
	Запрос.УстановитьПараметр("ПоТоварамКОформлению",              Реквизиты.ПоТоварамКОформлению);
	Запрос.УстановитьПараметр("ВалютаВзаиморасчетов",              Реквизиты.ВалютаВзаиморасчетов);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",    Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("РасчетыЧерезОтдельногоКонтрагента", Реквизиты.РасчетыЧерезОтдельногоКонтрагента);
	Запрос.УстановитьПараметр("Контрагент",                        Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("Менеджер",                          Реквизиты.Менеджер);
	Запрос.УстановитьПараметр("ГруппаФинансовогоУчета",            Реквизиты.ГруппаФинансовогоУчета);
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Запрос.УстановитьПараметр("ИспользоватьПартионныйУчет",        ПолучитьФункциональнуюОпцию("ИспользоватьПартионныйУчет"));
	Запрос.УстановитьПараметр("НаправлениеДеятельности",           Реквизиты.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("ОрганизацияПлательщикНДСПоставщик", НДСОбщегоНазначенияСервер.ОрганизацияКонтрагентПлательщикНДС(Реквизиты.Организация, Реквизиты.Период));
	Запрос.УстановитьПараметр("ОрганизацияПлательщикНДСКлиент",    НДСОбщегоНазначенияСервер.ОрганизацияКонтрагентПлательщикНДС(Реквизиты.ОрганизацияПолучатель, Реквизиты.Период));	
	Запрос.УстановитьПараметр("ВидПоставки",                       Реквизиты.ВидПоставки);
	Запрос.УстановитьПараметр("МоментОпределенияБазыНДСПоставщик", НДСИсходящийСервер.ОпределитьМоментОпределенияБазыНДС(Реквизиты.ВидПоставки, Реквизиты.ХозяйственнаяОперация, Реквизиты.Валюта, Реквизиты.Организация));
	Запрос.УстановитьПараметр("МоментОпределенияБазыНДСКлиент",    НДСВходящийСервер.ОпределитьМоментОпределенияБазыНДС(Реквизиты.ВидПоставки, Реквизиты.ХозяйственнаяОперация, Реквизиты.ОрганизацияПолучатель));
	Запрос.УстановитьПараметр("НалоговоеНазначениеОрганизации",    Справочники.Организации.НалоговоеНазначениеНДС(Реквизиты.Организация, Реквизиты.Период));
	
	СоответствиеВидовЗапасов = ИнициализироватьВидыЗапасов(Реквизиты);
	Запрос.УстановитьПараметр("СоответствиеВидовЗапасов", СоответствиеВидовЗапасов);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос;
	ЗапросАналитик.УстановитьПараметр("Ссылка"                , Запрос.Параметры.Ссылка);
	ЗапросАналитик.УстановитьПараметр("ОрганизацияПолучатель" , Запрос.Параметры.ОрганизацияПолучатель);
	ЗапросАналитик.УстановитьПараметр("ПустаяСерия"           , Справочники.СерииНоменклатуры.ПустаяСсылка());
	ЗапросАналитик.УстановитьПараметр("Организация"           , Запрос.Параметры.Организация);
	ЗапросАналитик.УстановитьПараметр("ЭтоПередачаНаКомиссию" , Запрос.Параметры.ЭтоПередачаНаКомиссию);

	ЗапросАналитик.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Ключи.Номенклатура     КАК Номенклатура,
	|	Ключи.Характеристика   КАК Характеристика,
	|	&ПустаяСерия           КАК Серия,
	|	&ОрганизацияПолучатель КАК Склад
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК Товары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
	|	ПО
	|		Товары.АналитикаУчетаНоменклатуры = Ключи.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		  Ключи.Номенклатура     = Аналитика.Номенклатура
	|		И Ключи.Характеристика   = Аналитика.Характеристика
	|		И &ПустаяСерия           = Аналитика.Серия
	|		И &ОрганизацияПолучатель = Аналитика.Склад
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И Аналитика.Номенклатура ЕСТЬ NULL
	|	И &ЭтоПередачаНаКомиссию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Ключи.Номенклатура         КАК Номенклатура,
	|	Ключи.Характеристика       КАК Характеристика,
	|	&ПустаяСерия               КАК Серия,
	|	Товары.ВидЗапасов.Комитент КАК Склад
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК Товары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
	|	ПО
	|		Товары.АналитикаУчетаНоменклатуры = Ключи.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		  Ключи.Номенклатура         = Аналитика.Номенклатура
	|		И Ключи.Характеристика       = Аналитика.Характеристика
	|		И &ПустаяСерия               = Аналитика.Серия
	|		И Товары.ВидЗапасов.Комитент = Аналитика.Склад
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|	И Аналитика.Номенклатура ЕСТЬ NULL
	|	И Товары.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Работы.Номенклатура КАК Номенклатура,
	|	Работы.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА Работы.СтатусУказанияСерий = 14
	|		ТОГДА Работы.Серия
	|		ИНАЧЕ &ПустаяСерия
	|	КОНЕЦ КАК Серия,
	|	Работы.Подразделение КАК Склад
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК Работы
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО СпрНоменклатура.Ссылка = Работы.Номенклатура
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО Работы.Номенклатура = Аналитика.Номенклатура
	|		И Работы.Характеристика = Аналитика.Характеристика
	|		И Работы.Подразделение = Аналитика.Склад
	|		И ВЫБОР
	|			КОГДА Работы.СтатусУказанияСерий = 14
	|			ТОГДА Работы.Серия = Аналитика.Серия
	|			ИНАЧЕ Аналитика.Серия = &ПустаяСерия
	|		   КОНЕЦ
	|ГДЕ
	|	Работы.Ссылка = &Ссылка
	|	И Аналитика.КлючАналитики ЕСТЬ NULL
	|	И СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры

Процедура УстановитьПараметрыВидЗапасов(Запрос)
	
	Если Запрос.Параметры.Свойство("ВидЗапасовРаботыОтправителя")
			И Запрос.Параметры.Свойство("ВидЗапасовРаботыПолучателя") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросТоваров = Новый Запрос;
	ЗапросТоваров.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросТоваров.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	1
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК Работы
	|ГДЕ
	|	Работы.Ссылка = &Ссылка
	|	И Работы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)";
	
	Если ЗапросТоваров.Выполнить().Пустой() Тогда
		
		ПустойВЗ = Справочники.ВидыЗапасов.ПустаяСсылка();
		Запрос.УстановитьПараметр("ВидЗапасовРаботыОтправителя", ПустойВЗ);
		Запрос.УстановитьПараметр("ВидЗапасовРаботыПолучателя",  ПустойВЗ);
		Возврат;
		
	КонецЕсли;
	
	ДопКолонки = Новый Структура("Комитент, Соглашение, Валюта, НалоговоеНазначение, НалоговоеНазначениеОрганизации, 
	                             |Поставщик, Подразделение, Менеджер, Сделка");
	ДопКолонки.Вставить("ОбособленныйУчетТоваровПоСделке",  Ложь);
	ДопКолонки.Вставить("ВидЗапасов",                       Справочники.ВидыЗапасов.ПустаяСсылка());
	ДопКолонки.Вставить("ГруппаФинансовогоУчета",           Справочники.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка());
	ДопКолонки.Вставить("Организация",                      Запрос.Параметры.Организация);
	ДопКолонки.Вставить("ТипЗапасов",                       Перечисления.ТипыЗапасов.Услуга);
	ДопКолонки.Вставить("ВариантОбособленногоУчетаТоваров", Перечисления.ВариантыОбособленногоУчетаТоваров.НеВедется);
	ДопКолонки.Вставить("ХозяйственнаяОперация",            Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
	ДопКолонки.Вставить("Назначение",                       Справочники.Назначения.ПустаяСсылка());
	
	// Вид запасов отправителя
    ДопКолонки.Вставить("НалоговоеНазначениеОрганизации",   Справочники.Организации.НалоговоеНазначениеНДС(Запрос.Параметры.Организация, Запрос.Параметры.Период));
	ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
		ДопКолонки.Организация,
		ДопКолонки.ХозяйственнаяОперация,
		ДопКолонки);
	
	// Вид запасов получателя
	ДопКолонки.Вставить("Организация", Запрос.Параметры.ОрганизацияПолучатель);
    ДопКолонки.Вставить("НалоговоеНазначениеОрганизации",   Справочники.Организации.НалоговоеНазначениеНДС(Запрос.Параметры.ОрганизацияПолучатель, Запрос.Параметры.Период));
	НовыйВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
		ДопКолонки.Организация,
		ДопКолонки.ХозяйственнаяОперация,
		ДопКолонки);
	
	Запрос.УстановитьПараметр("ВидЗапасовРаботыОтправителя", ВидЗапасов);
	Запрос.УстановитьПараметр("ВидЗапасовРаботыПолучателя",  НовыйВидЗапасов);
	
КонецПроцедуры

Функция ТекстЗапросаВтТаблицаПоступленияТоваров(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаПоступленияТоваров";
	
	ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                КАК НомерСтроки,
	|	Ключи.Номенклатура                       КАК Номенклатура,
	|	Ключи.Номенклатура.ТипНоменклатуры       КАК ТипНоменклатуры,
	|	Ключи.Характеристика                     КАК Характеристика,
	|	Ключи.Серия                              КАК Серия,
	|	ТаблицаТовары.ВидЗапасовПолучателя       КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД                   КАК НомерГТД,
	|	ТаблицаТовары.Количество                 КАК Количество,
	|	АналитикиПартий.АналитикаУчетаПартий     КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|
	|	ТаблицаТовары.ВидЗапасовПолучателя.НалоговоеНазначение КАК НалоговоеНазначениеПолучателя
	|
	|ПОМЕСТИТЬ ВтТаблицаПоступленияТоваров
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Ключи
	|	ПО
	|		ТаблицаТовары.АналитикаУчетаНоменклатуры = Ключи.КлючАналитики
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			Товары.Номенклатура,
	|			Товары.СтавкаНДС,
	|			Товары.АналитикаУчетаПартий
	|		ИЗ
	|			Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК Товары
	|		ГДЕ
	|			Товары.Ссылка = &Ссылка
	|	) КАК АналитикиПартий
	|	ПО
	|		АналитикиПартий.Номенклатура = Ключи.Номенклатура
	|		И АналитикиПартий.СтавкаНДС = ТаблицаТовары.СтавкаНДС
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И Не &УказыватьНомераГТД
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                   КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура                  КАК Номенклатура,
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры  КАК ТипНоменклатуры,
	|	ТаблицаТовары.Характеристика                КАК Характеристика,
	|	ТаблицаТовары.Серия                         КАК Серия,
	|	ТаблицаТовары.ВидЗапасов                    КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД                      КАК НомерГТД,
	|	ТаблицаТовары.Количество                    КАК Количество,
	|	ТаблицаТовары.АналитикаУчетаПартий          КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|
	|	ТаблицаТовары.НалоговоеНазначение КАК НалоговоеНазначениеПолучателя
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &УказыватьНомераГТД
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуУпр")
		И Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуРегл") 
		И Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуВзаиморасчетов") Тогда
		Возврат;
	КонецЕсли;
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Запрос.Параметры.Валюта,
	                                                                         Запрос.Параметры.Валюта,
	                                                                         Запрос.Параметры.Период);
	
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр",            Коэффициенты.КоэффициентПересчетаВВалютуУпр);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл",           Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуВзаиморасчетов", Коэффициенты.КоэффициентПересчетаВВалютуВзаиморасчетов);
	
КонецПроцедуры

Функция ИнициализироватьВидыЗапасов(Реквизиты)
	
	СоответствиеВидовЗапасов = Новый ТаблицаЗначений;
	СоответствиеВидовЗапасов.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число")); 
	СоответствиеВидовЗапасов.Колонки.Добавить("ВидЗапасов",  Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов")); 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|   ВЫБОР 
	|   	КОГДА НЕ &ОрганизацияПлательщикНДС 
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|		КОГДА ТаблицаТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) 
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|		КОГДА ТаблицаТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НеНДС) 
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|		ИНАЧЕ
	|   		ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая)
	|	КОНЕЦ КАК ЦелевоеНалоговоеНазначение,
	|	ТаблицаТовары.Назначение КАК Назначение
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|ИТОГИ ПО
	|	Назначение
	|	, ЦелевоеНалоговоеНазначение
	|";
	
	Запрос.УстановитьПараметр("Ссылка", Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("ОрганизацияПлательщикНДС", НДСОбщегоНазначенияСервер.ОрганизацияКонтрагентПлательщикНДС(Реквизиты.Организация, Реквизиты.Период));
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		
		ДопКолонки = Новый Структура;
		ДопКолонки.Вставить("Организация",						Реквизиты.Организация);
		ДопКолонки.Вставить("ТипЗапасов",						Перечисления.ТипыЗапасов.Услуга);
		ДопКолонки.Вставить("Контрагент",						Реквизиты.Контрагент);
		ДопКолонки.Вставить("Соглашение",						Реквизиты.Соглашение);
		ДопКолонки.Вставить("Валюта",							Реквизиты.Валюта);
		ДопКолонки.Вставить("Менеджер",							Реквизиты.Менеджер);
		ДопКолонки.Вставить("Сделка", 							Реквизиты.Сделка);
		ДопКолонки.Вставить("ОбособленныйУчетТоваровПоСделке",	Реквизиты.ОбособленныйУчетТоваровПоСделке);
		ДопКолонки.Вставить("ВариантОбособленногоУчетаТоваров",	Реквизиты.ВариантОбособленногоУчетаТоваров);
		ДопКолонки.Вставить("ГруппаФинансовогоУчета",			Реквизиты.ГруппаФинансовогоУчета);
		ДопКолонки.Вставить("ХозяйственнаяОперация",			Реквизиты.ХозяйственнаяОперация);
		
		ВыборкаПоНазначениям = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоНазначениям.Следующий() Цикл
		
			Выборка = ВыборкаПоНазначениям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока Выборка.Следующий() Цикл
		
			ДопКолонки.Вставить("Назначение", Выборка.Назначение);
			ДопКолонки.Вставить("НалоговоеНазначение", Выборка.ЦелевоеНалоговоеНазначение);
            ДопКолонки.Вставить("НалоговоеНазначениеОрганизации", Справочники.Организации.НалоговоеНазначениеНДС(Реквизиты.Организация, Реквизиты.Период));
			
			ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
				ДопКолонки.Организация,
				ДопКолонки.ХозяйственнаяОперация,
				ДопКолонки);
			
			ВыборкаДетальная = Выборка.Выбрать();
			Пока ВыборкаДетальная.Следующий() Цикл
				
				НоваяСтрока = СоответствиеВидовЗапасов.Добавить();
				НоваяСтрока.НомерСтроки	= ВыборкаДетальная.НомерСтроки;
				НоваяСтрока.ВидЗапасов	= ВидЗапасов;
				
			КонецЦикла;
			
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат СоответствиеВидовЗапасов;
КонецФункции

Функция ТекстЗапросаВтСоответствиеВидовЗапасов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтСоответствиеВидовЗапасов";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	СоответствиеВидовЗапасов.НомерСтроки КАК НомерСтроки,
	|	СоответствиеВидовЗапасов.ВидЗапасов  КАК ВидЗапасов
	|ПОМЕСТИТЬ ВтСоответствиеВидовЗапасов
	|ИЗ
	|	&СоответствиеВидовЗапасов КАК СоответствиеВидовЗапасов";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтВидыЗапасов";
	
	ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос);
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                     КАК НомерСтроки,
	|	АналитикаПоставщик.Номенклатура.ТипНоменклатуры    КАК ТипНоменклатуры,
	|	АналитикаПоставщик.Номенклатура                    КАК Номенклатура,
	|	АналитикаПоставщик.Характеристика                  КАК Характеристика,
	|
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры      КАК АналитикаНоменклатурыПоставщик,
	|	КлючиКомитента.КлючАналитики                       КАК АналитикаНоменклатурыКомитента,
	|	АналитикаКомиссионер.КлючАналитики                 КАК АналитикаНоменклатурыКомиссионера,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры      КАК АналитикаНоменклатурыКлиент,
	|
	|	ТаблицаВидыЗапасов.СтавкаНДС                       КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.ВидЗапасов                      КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов           КАК ТипЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Валюта               КАК ВидЗапасовВалюта,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя            КАК ВидЗапасовПолучателя,
	|	ТаблицаВидыЗапасов.НомерГТД                        КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество                      КАК Количество,
	|	ТаблицаВидыЗапасов.СуммаСНДС                       КАК СуммаСНДС,
	|
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК СуммаСНДСУпр,
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))  КАК СуммаНДСУпр,
	|
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл,
	|		ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	)                                                  КАК СуммаБезНДСРегл,
	|	ЕСТЬNULL(Суммы.СуммаНДСРегл,
	|		ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	)                                                  КАК СуммаНДСРегл,
	|
	|	ТаблицаВидыЗапасов.СуммаВзаиморасчетов             КАК СуммаВзаиморасчетов,
	|	ТаблицаВидыЗапасов.СуммаНДСВзаиморасчетов          КАК СуммаНДСВзаиморасчетов,
	|
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки             КАК ИдентификаторСтроки,
	|	ТаблицаВидыЗапасов.СуммаНДС                        КАК СуммаНДС,
	|	АналитикиПартий.АналитикаУчетаПартий               КАК АналитикаУчетаПартий,
	|	АналитикаПоставщик.Склад                           КАК СкладПоставщика,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя.ТипЗапасов КАК ТипЗапасовПолучателя,
	|
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя.НалоговоеНазначение КАК НалоговоеНазначениеПолучателя,
	|	ТаблицаВидыЗапасов.ВидЗапасов.НалоговоеНазначение 			КАК НалоговоеНазначение,
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение     			КАК ЦелевоеНалоговоеНазначение
	|
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПоставщик
	|	ПО
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = АналитикаПоставщик.КлючАналитики
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ РАЗЛИЧНЫЕ Товары.Номенклатура, Товары.СтавкаНДС, Товары.АналитикаУчетаПартий
	|		ИЗ Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК Товары
	|		ГДЕ Товары.Ссылка = &Ссылка
	|	) КАК АналитикиПартий
	|	ПО
	|		АналитикиПартий.Номенклатура = АналитикаПоставщик.Номенклатура
	|		И АналитикиПартий.СтавкаНДС = ТаблицаВидыЗапасов.СтавкаНДС
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		ТаблицаВидыЗапасов.Ссылка = Суммы.Регистратор
	|		И ТаблицаВидыЗапасов.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|		И (ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС) = Суммы.СуммаБезНДС
	|		И ТаблицаВидыЗапасов.СуммаНДС = Суммы.СуммаНДС
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомиссионер
	|	ПО
	|		АналитикаПоставщик.Номенклатура = АналитикаКомиссионер.Номенклатура
	|		И АналитикаПоставщик.Характеристика = АналитикаКомиссионер.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = АналитикаКомиссионер.Серия
	|		И &ОрганизацияПолучатель = АналитикаКомиссионер.Склад
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиКомитента
	|	ПО
	|		АналитикаПоставщик.Номенклатура = КлючиКомитента.Номенклатура
	|		И АналитикаПоставщик.Характеристика = КлючиКомитента.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = КлючиКомитента.Серия
	|		И ТаблицаВидыЗапасов.ВидЗапасов.Комитент = КлючиКомитента.Склад
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	
	Возврат ТекстЗапроса;
	
КонецФункции


Функция ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтКурсыВалют";
	
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КурсыВалют.Валюта КАК Валюта,
	|
	|	(КурсВалютыДокумента.Курс * КурсыВалют.Кратность)
	|	/ (КурсВалютыДокумента.Кратность * КурсыВалют.Курс) КАК КоэффициентПересчета
	|
	|ПОМЕСТИТЬ ВтКурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Период,
	|		Валюта В (
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ТаблицаВидыЗапасов.ВидЗапасовВалюта КАК Валюта
	|			ИЗ
	|				ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|			ГДЕ
	|				ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			
	|			)
	|	) КАК КурсыВалют
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &Валюта) КАК КурсВалютыДокумента
	|	ПО
	|		Истина
	|
	|ГДЕ
	|	КурсВалютыДокумента.Кратность <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтРаботыУслуги(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтРаботыУслуги";
	
	
	ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос);
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                                 КАК НомерСтроки,
	|	СпрНоменклатура.ТипНоменклатуры                           КАК ТипНоменклатуры,
	|	ТаблицаТовары.Номенклатура                                КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                              КАК Характеристика,
	|
	|	(ВЫБОР ТаблицаТовары.Номенклатура.ТипНоменклатуры
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) ТОГДА ТаблицаТовары.АналитикаУчетаНоменклатуры
	|		ИНАЧЕ АналитикаРаботы.КлючАналитики КОНЕЦ)              КАК АналитикаНоменклатурыПолучатель,
	|
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры                  КАК АналитикаНоменклатуры,
	|
	|	ТаблицаТовары.СтавкаНДС                                   КАК СтавкаНДС,
	|	ТаблицаТовары.НалоговоеНазначение КАК НалоговоеНазначениеПолучателя,
	|   ВЫБОР 
	|		КОГДА НЕ &ОрганизацияПлательщикНДСПоставщик  
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|		КОГДА ТаблицаТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|		КОГДА ТаблицаТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НеНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая)
	|	КОНЕЦ КАК ЦелевоеНалоговоеНазначение,
	|	ТаблицаТовары.СтатьяРасходов                              КАК СтатьяРасходов,
	|	ТаблицаТовары.СтатьяРасходов.ВариантРаспределенияРасходов КАК ВариантРаспределенияРасходов,
	|	ТаблицаТовары.АналитикаРасходов                           КАК АналитикаРасходов,
	|	ТаблицаТовары.АналитикаУчетаПартий                        КАК АналитикаУчетаПартий,
	|	ТаблицаТовары.ВидЗапасов                                  КАК ВидЗапасов,
	|
	|	ТаблицаТовары.Количество                                  КАК Количество,
	|	ТаблицаТовары.СуммаСНДС                                   КАК СуммаСНДС,
	|
	|	ВЫРАЗИТЬ(ТаблицаТовары.СуммаСНДС
	|		* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))      КАК СуммаСНДСУпр,
	|	ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС)
	|		* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))      КАК СуммаБезНДСУпр,
	|	ВЫРАЗИТЬ(ТаблицаТовары.СуммаНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК СуммаНДСУпр,
	|	ЕСТЬNULL(Суммы.СуммаБезНДСРегл,
	|		ВЫРАЗИТЬ((ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	)                                                         КАК СуммаБезНДСРегл,
	|	ЕСТЬNULL(Суммы.СуммаНДСРегл,
	|		ВЫРАЗИТЬ(ТаблицаТовары.СуммаНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	)                                                         КАК СуммаНДСРегл,
	|
	|	ТаблицаТовары.ИдентификаторСтроки                         КАК ИдентификаторСтроки,
	|	ТаблицаТовары.СуммаНДС                                    КАК СуммаНДС,
	|	ТаблицаТовары.СуммаВзаиморасчетов                         КАК СуммаВзаиморасчетов,
	|	ТаблицаТовары.СуммаНДСВзаиморасчетов                      КАК СуммаНДСВзаиморасчетов,
	|
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры                  КАК Склад,
	|
	|	ТаблицаТовары.Подразделение                               КАК Подразделение,
	|	ТаблицаТовары.СписатьНаРасходы                            КАК СписатьНаРасходы
	|
	|ПОМЕСТИТЬ ВтРаботыУслуги
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТаблицаТовары
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО СпрНоменклатура.Ссылка = ТаблицаТовары.Номенклатура
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК Суммы
	|	ПО
	|		ТаблицаТовары.Ссылка = Суммы.Регистратор
	|		И ТаблицаТовары.ИдентификаторСтроки = Суммы.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|		И (ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) = Суммы.СуммаБезНДС
	|		И ТаблицаТовары.СуммаНДС = Суммы.СуммаНДС
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаРаботы
	|	ПО
	|		  АналитикаРаботы.Номенклатура   = ТаблицаТовары.Номенклатура
	|		И АналитикаРаботы.Характеристика = ТаблицаТовары.Характеристика
	|		И АналитикаРаботы.Склад          = ТаблицаТовары.Подразделение
	|		И ВЫБОР
	|			КОГДА ТаблицаТовары.СтатусУказанияСерий = 14
	|			ТОГДА ТаблицаТовары.Серия = АналитикаРаботы.Серия
	|			ИНАЧЕ АналитикаРаботы.Серия = Значение(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		   КОНЕЦ
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И СпрНоменклатура.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаПоступленияТоваров", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаПоступленияТоваров(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки)           КАК НомерСтроки,
	|	&Период                                      КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)       КАК ВидДвижения,
	|	&Организация                                 КАК Организация,
	|	&Организация                                 КАК ОрганизацияОтгрузки,
	|	ТаблицаТовары.Номенклатура                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                 КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов                     КАК ВидЗапасов,
	|	ТаблицаТовары.ВидЗапасовПолучателя           КАК КорВидЗапасов,
	|	ТаблицаТовары.НомерГТД                       КАК НомерГТД,
	|	СУММА(ТаблицаТовары.Количество)              КАК Количество,
	|	ТаблицаТовары.АналитикаНоменклатурыПоставщик КАК АналитикаУчетаНоменклатуры,
	|	&ХозяйственнаяОперация                       КАК ХозяйственнаяОперация,
	|
	|   ТаблицаТовары.ЦелевоеНалоговоеНазначение 	 КАК НалоговоеНазначение,
	|	ТаблицаТовары.АналитикаНоменклатурыКлиент    КАК КорАналитикаУчетаНоменклатуры,
	|	ЛОЖЬ                                         КАК Первичное
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаТовары
	|ГДЕ
	|	НЕ &ПоТоварамКОформлению
	|	И ТаблицаТовары.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.ВидЗапасовПолучателя,
	|	ТаблицаТовары.НомерГТД,
	|	ТаблицаТовары.АналитикаНоменклатурыПоставщик,
	|	ТаблицаТовары.АналитикаНоменклатурыКлиент,
	|	ТаблицаТовары.ЦелевоеНалоговоеНазначение 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки)       КАК НомерСтроки,
	|	&Период                                  КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)   КАК ВидДвижения,
	|	&ОрганизацияПолучатель                   КАК Организация,
	|	&Организация                             КАК ОрганизацияОтгрузки,
	|	ТаблицаТовары.Номенклатура               КАК Номенклатура,
	|	ТаблицаТовары.Характеристика             КАК Характеристика,
	|	ТаблицаТовары.ВидЗапасов                 КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО                             КАК КорВидЗапасов,
	|	ТаблицаТовары.НомерГТД                   КАК НомерГТД,
	|	СУММА(ТаблицаТовары.Количество)          КАК Количество,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&ХозяйственнаяОперация                   КАК ХозяйственнаяОперация,
	|   ТаблицаТовары.НалоговоеНазначениеПолучателя КАК НалоговоеНазначение,
	|	НЕОПРЕДЕЛЕНО                             КАК КорАналитикаУчетаНоменклатуры,
	|	ИСТИНА                                   КАК Первичное
	|ИЗ
	|	ВтТаблицаПоступленияТоваров КАК ТаблицаТовары
	|ГДЕ
	|	НЕ &ПоТоварамКОформлению
	|	И ТаблицаТовары.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.НомерГТД,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.НалоговоеНазначениеПолучателя
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаДатыПоступленияТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДатыПоступленияТоваровОрганизаций";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаПоступленияТоваров", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаПоступленияТоваров(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период                      КАК ДатаПоступления,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия          КАК Серия,
	|	ТаблицаТовары.ВидЗапасов     КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД       КАК НомерГТД
	|ИЗ
	|	ВтТаблицаПоступленияТоваров КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ПоступленияТоваров
	|	ПО
	|		  ТаблицаТовары.ВидЗапасов     = ПоступленияТоваров.ВидЗапасов
	|		И ТаблицаТовары.Номенклатура   = ПоступленияТоваров.Номенклатура
	|		И ТаблицаТовары.Характеристика = ПоступленияТоваров.Характеристика 
	|		И ТаблицаТовары.Серия          = ПоступленияТоваров.Серия 
	|		И ТаблицаТовары.НомерГТД       = ПоступленияТоваров.НомерГТД 
	|
	|ГДЕ
	|	Не &ПоТоварамКОформлению
	|	И ТаблицаТовары.ТипНоменклатуры В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И (ПоступленияТоваров.ДатаПоступления ЕСТЬ NULL
	|		ИЛИ ПоступленияТоваров.ДатаПоступления < &Период)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.НомерГТД";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрЗапросаАналитикаУчетаПоПартнерамПоставщик(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаУчетаПоПартнерамПоставщик") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПоставщик = Новый Структура;
	СтруктураПоставщик.Вставить("Организация", Запрос.Параметры.ОрганизацияПолучатель);
	СтруктураПоставщик.Вставить("Партнер",     Справочники.Партнеры.НашеПредприятие);
	СтруктураПоставщик.Вставить("Контрагент",  Запрос.Параметры.Организация);
	СтруктураПоставщик.Вставить("Договор",     Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	СтруктураПоставщик.Вставить("НаправлениеДеятельности", Запрос.Параметры.НаправлениеДеятельности);
	
	АналитикаУчетаПоПартнерамПоставщик = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураПоставщик);
	
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерамПоставщик", АналитикаУчетаПоПартнерамПоставщик);
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаАналитикаУчетаПоПартнерамКлиент(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаУчетаПоПартнерамКлиент") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураКлиент = Новый Структура;
	СтруктураКлиент.Вставить("Организация", Запрос.Параметры.Организация);
	СтруктураКлиент.Вставить("Партнер",     Справочники.Партнеры.НашеПредприятие);
	СтруктураКлиент.Вставить("Контрагент",  Запрос.Параметры.ОрганизацияПолучатель);
	СтруктураКлиент.Вставить("Договор",     Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	СтруктураКлиент.Вставить("НаправлениеДеятельности", Запрос.Параметры.НаправлениеДеятельности);
	
	АналитикаУчетаПоПартнерамКлиент = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураКлиент);
	
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерамКлиент", АналитикаУчетаПоПартнерамКлиент);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтРаботыУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРаботыУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтСоответствиеВидовЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтСоответствиеВидовЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерамПоставщик(Запрос);
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерамКлиент(Запрос);
	УстановитьПараметрыВидЗапасов(Запрос);
	
	ТекстЗапроса =
	// Продажа товаров
	"ВЫБРАТЬ 
	|	МИНИМУМ(ТаблицаВидыЗапасов.НомерСтроки)           КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)            КАК ВидДвижения,
	|	&Период                                           КАК Период,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                      КАК Организация,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ                                             КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                             КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НалоговоеНазначение 			  КАК НалоговоеНазначение,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасовПолучателя
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                             КАК КорВидЗапасов,
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение     КАК КорНалоговоеНазначение,
	|
	|	СУММА(ТаблицаВидыЗапасов.Количество)              КАК Количество,
	|	0                                                 КАК Стоимость,
	|	0                                                 КАК СтоимостьБезНДС,
	|	0                                                 КАК СтоимостьРегл,
	|	0                                                 КАК СтоимостьРеглБезНДС,
	|	0                                                 КАК НДСРегл,
	|	&ХозяйственнаяОперация                            КАК ХозяйственнаяОперация,
	|
	|	(ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КОНЕЦ) КАК КорРазделУчета,
	|	&ОрганизацияПолучатель                            КАК КорОрганизация,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик КАК КорАналитикаУчетаНоменклатуры,
	|	&АналитикаУчетаПоПартнерамКлиент                  КАК АналитикаУчетаПоПартнерам,
	|	&Подразделение                                    КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                      КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                                      КАК АналитикаРасходов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|	И Не &ЭтоПередачаНаКомиссию
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик,
	|	(ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА ТаблицаВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ),
	|	ТаблицаВидыЗапасов.НалоговоеНазначение,
	|	(ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА ТаблицаВидыЗапасов.ВидЗапасовПолучателя
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ),
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыКлиент,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ,
	|	(ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПустаяСсылка)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КОНЕЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	//продажа товаров
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаВидыЗапасов.НомерСтроки)           КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)            КАК ВидДвижения,
	|	&Период                                           КАК Период,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик КАК АналитикаУчетаНоменклатуры,
	|	&ОрганизацияПолучатель                            КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасовПолучателя
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                             КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НалоговоеНазначениеПолучателя  КАК НалоговоеНазначение,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО     								  КАК КорНалоговоеНазначение,
	|
	|	СУММА(ТаблицаВидыЗапасов.Количество)              КАК Количество,
	|	СУММА(ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ТаблицаВидыЗапасов.СуммаСНДСУпр
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ)                                            КАК Стоимость,
	|	СУММА(ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ТаблицаВидыЗапасов.СуммаСНДСУпр - ТаблицаВидыЗапасов.СуммаНДСУпр
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ)                                            КАК СтоимостьБезНДС,
	|	СУММА(
	|		ВЫБОР КОГДА ТаблицаВидыЗапасов.НалоговоеНазначениеПолучателя.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая)
	|		ТОГДА
	|			ТаблицаВидыЗапасов.СуммаБезНДСРегл + ТаблицаВидыЗапасов.СуммаНДСРегл
	|		ИНАЧЕ
	|			ТаблицаВидыЗапасов.СуммаБезНДСРегл
	|		КОНЕЦ
	|	)                                                 КАК СтоимостьРегл,
	|	СУММА(ТаблицаВидыЗапасов.СуммаБезНДСРегл)         КАК СтоимостьРеглБезНДС,
	|	СУММА(ТаблицаВидыЗапасов.СуммаНДСРегл)            КАК НДСРегл,
	|
	|	&ХозяйственнаяОперация                            КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                      КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО                                      КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                      КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                                      КАК АналитикаРасходов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|	И Не &ЭтоПередачаНаКомиссию
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик,
	|	ТаблицаВидыЗапасов.НалоговоеНазначениеПолучателя,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасовПолучателя
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	//передача на комиссию товаров
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаВидыЗапасов.НомерСтроки)           КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)            КАК ВидДвижения,
	|	&Период                                           КАК Период,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик КАК АналитикаУчетаНоменклатуры,
	|	&Организация                                      КАК Организация,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ                                             КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                             КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НалоговоеНазначение 			  КАК НалоговоеНазначение,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                             КАК КорВидЗапасов,
	|	ТаблицаВидыЗапасов.НалоговоеНазначение     		  КАК КорНалоговоеНазначение,
	|
	|	СУММА(ТаблицаВидыЗапасов.Количество)              КАК Количество,
	|	0                                                 КАК Стоимость,
	|	0                                                 КАК СтоимостьБезНДС,
	|	0                                                 КАК СтоимостьРегл,
	|	0                                                 КАК СтоимостьРеглБезНДС,
	|	0                                                 КАК НДСРегл,
	|	&ХозяйственнаяОперация                            КАК ХозяйственнаяОперация,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	КОНЕЦ                                             КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО                                      КАК КорОрганизация,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыКомиссионера КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                      КАК АналитикаУчетаПоПартнерам,
	|	&Подразделение                                    КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО                                      КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО                                      КАК АналитикаРасходов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|	И &ЭтоПередачаНаКомиссию
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаВидыЗапасов.НалоговоеНазначение,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыКомиссионера,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаВидыЗапасов.НомерСтроки) КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыКомиссионера КАК АналитикаУчетаНоменклатуры,
	|	&Организация КАК Организация,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	КОНЕЦ КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НалоговоеНазначение     		  КАК НалоговоеНазначение,
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО     		  КАК КорНалоговоеНазначение,
	|
	|	СУММА(ТаблицаВидыЗапасов.Количество) КАК Количество,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК СтоимостьРегл,
	|	0                                                 КАК СтоимостьРеглБезНДС,
	|	0                                                 КАК НДСРегл,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПоПартнерам,
	|	&Подразделение КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|	И &ЭтоПередачаНаКомиссию
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыКомиссионера,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию)
	|	КОНЕЦ,
	|	ТаблицаВидыЗапасов.НалоговоеНазначение,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|
	|
	//передача на комиссию товаров
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаВидыЗапасов.НомерСтроки) КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыКлиент КАК АналитикаУчетаНоменклатуры,
	|	&ОрганизацияПолучатель КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасовПолучателя
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НалоговоеНазначениеПолучателя КАК НалоговоеНазначение,
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО     		  КАК КорНалоговоеНазначение,
	|
	|	СУММА(ТаблицаВидыЗапасов.Количество) КАК Количество,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	СУММА(
	|		ВЫБОР КОГДА ТаблицаВидыЗапасов.НалоговоеНазначениеПолучателя.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая)
	|		ТОГДА
	|			ТаблицаВидыЗапасов.СуммаБезНДСРегл + ТаблицаВидыЗапасов.СуммаНДСРегл
	|		ИНАЧЕ
	|			ТаблицаВидыЗапасов.СуммаБезНДСРегл
	|		КОНЕЦ
	|	) КАК СтоимостьРегл,
	|	СУММА(ТаблицаВидыЗапасов.СуммаБезНДСРегл) КАК СтоимостьРеглБезНДС,
	|	СУММА(ТаблицаВидыЗапасов.СуммаНДСРегл) КАК НДСРегл,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПоПартнерам,
	|	&Подразделение КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
	|	И &ЭтоПередачаНаКомиссию
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыКлиент,
	|	ТаблицаВидыЗапасов.НалоговоеНазначениеПолучателя,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасовПолучателя
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	//продажа работ
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки) КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.АналитикаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВтСоответствиеВидовЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|	ТаблицаТовары.ЦелевоеНалоговоеНазначение КАК НалоговоеНазначение,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		&ВидЗапасовРаботыПолучателя
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорВидЗапасов,
	|	ТаблицаТовары.ЦелевоеНалоговоеНазначение КАК КорНалоговоеНазначение,
	|
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК СтоимостьРегл,
	|	0                                                 КАК СтоимостьРеглБезНДС,
	|	0                                                 КАК НДСРегл,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.СписатьНаРасходы ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КОНЕЦ) КАК КорРазделУчета,
	|	&ОрганизацияПолучатель КАК КорОрганизация,
	|	ТаблицаТовары.АналитикаНоменклатурыПолучатель КАК КорАналитикаУчетаНоменклатуры,
	|	&АналитикаУчетаПоПартнерамКлиент КАК АналитикаУчетаПоПартнерам,
	|	&Подразделение КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
	|ИЗ
	|	ВтРаботыУслуги КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСоответствиеВидовЗапасов КАК ВтСоответствиеВидовЗапасов
	|	ПО
	|		ТаблицаТовары.НомерСтроки = ВтСоответствиеВидовЗапасов.НомерСтроки
	|		И НЕ ВтСоответствиеВидовЗапасов.НомерСтроки = 0
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И Не &ЭтоПередачаНаКомиссию
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВтСоответствиеВидовЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		&ВидЗапасовРаботыПолучателя
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ТаблицаТовары.ЦелевоеНалоговоеНазначение,
	|	ТаблицаТовары.АналитикаНоменклатуры,
	|	ТаблицаТовары.АналитикаНоменклатурыПолучатель,
	|	(ВЫБОР
	|		КОГДА ТаблицаТовары.СписатьНаРасходы ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КОНЕЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	//продажа работ
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки) КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.АналитикаНоменклатурыПолучатель КАК АналитикаУчетаНоменклатуры,
	|	&ОрганизацияПолучатель КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|	ТаблицаТовары.НалоговоеНазначениеПолучателя КАК НалоговоеНазначение,
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО     		  КАК КорНалоговоеНазначение,
	|
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	СУММА(
	|		ВЫБОР КОГДА ТаблицаТовары.НалоговоеНазначениеПолучателя.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая)
	|		ТОГДА
	|			ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл
	|		ИНАЧЕ
	|			ТаблицаТовары.СуммаБезНДСРегл
	|		КОНЕЦ
	|	) КАК СтоимостьРегл,
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл) КАК СтоимостьРеглБезНДС,
	|	СУММА(ТаблицаТовары.СуммаНДСРегл) КАК НДСРегл,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО КАК КорОрганизация,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	&АналитикаУчетаПоПартнерамПоставщик КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов
	|ИЗ
	|	ВтРаботыУслуги КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И НЕ ТаблицаТовары.СписатьНаРасходы
	|	И Не &ЭтоПередачаНаКомиссию
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.АналитикаНоменклатуры,
	|	ТаблицаТовары.АналитикаНоменклатурыПолучатель,
	|	ТаблицаТовары.НалоговоеНазначениеПолучателя,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизацийКПередаче";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&КонецПериода                                     КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)            КАК ВидДвижения,
	|	&Организация                                      КАК ОрганизацияВладелец,
	|	&ОрганизацияПолучатель                            КАК ОрганизацияОтгрузки,
	|	&Склад                                            КАК Склад,
	|	ТаблицаВидыЗапасов.Номенклатура                   КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика                 КАК Характеристика,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя           КАК ВидЗапасовПродавца,
	|	ТаблицаВидыЗапасов.НомерГТД                       КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество                     КАК Количество,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик КАК АналитикаУчетаНоменклатуры,
	|	&ХозяйственнаяОперация                            КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение     КАК НалоговоеНазначение,
	|	ИСТИНА                                            КАК Первичное
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	&ПоТоварамКОформлению
	|	И ТаблицаВидыЗапасов.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаВидыЗапасов.НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюОтчетовКомитенту";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтКурсыВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                    КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)            КАК ВидДвижения,
	|	&Период                                           КАК Период,
	|	ТаблицаВидыЗапасов.ВидЗапасовВалюта               КАК Валюта,
	|	ТаблицаВидыЗапасов.ВидЗапасов                     КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Номенклатура                   КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика                 КАК Характеристика,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыКомитента КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.НомерГТД                       КАК НомерГТД,
	|	&Ссылка                                           КАК ДокументРеализации,
	|	&ХозяйственнаяОперация                            КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.Количество                     КАК Количество,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасов.Валюта = &Валюта ТОГДА
	|		ТаблицаВидыЗапасов.СуммаСНДС
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.СуммаСНДС * КурсыВалют.КоэффициентПересчета
	|	КОНЕЦ                                             КАК СуммаВыручки
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтКурсыВалют КАК КурсыВалют
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасовВалюта = КурсыВалют.Валюта
	|ГДЕ
	|	Не &ЭтоПередачаНаКомиссию
	|	И ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВыручкаИСебестоимостьПродаж(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ВыручкаИСебестоимостьПродаж";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтРаботыУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРаботыУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтСоответствиеВидовЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтСоответствиеВидовЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерамКлиент(Запрос);
	УстановитьПараметрыВидЗапасов(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаВидыЗапасов.НомерСтроки) КАК НомерСтроки,
	|	&Период                                 КАК Период,
	|	&Подразделение                          КАК Подразделение,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик КАК АналитикаУчетаНоменклатуры,
	|	&АналитикаУчетаПоПартнерамКлиент        КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО                            КАК ЗаказКлиента,
	|	ТаблицаВидыЗапасов.ТипЗапасов           КАК ТипЗапасов,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                   КАК ВидЗапасов,
	|
	|	&Менеджер                               КАК Менеджер,
	|
	|	СУММА(ТаблицаВидыЗапасов.Количество)    КАК Количество,
	|
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДСУпр)  КАК СуммаВыручки,
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДСУпр - ТаблицаВидыЗапасов.СуммаНДСУпр) КАК СуммаВыручкиБезНДС,
	|	СУММА(ТаблицаВидыЗапасов.СуммаБезНДСРегл) КАК СуммаВыручкиРегл,
	|	СУММА(ТаблицаВидыЗапасов.СуммаБезНДСРегл + ТаблицаВидыЗапасов.СуммаНДСРегл) КАК СуммаВыручкиСНДСРегл,
	|
	|	СУММА(ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) Тогда
	|		ТаблицаВидыЗапасов.СуммаСНДСУпр
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ)                                  КАК Себестоимость,
	|
	|	СУММА(ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) Тогда
	|		ТаблицаВидыЗапасов.СуммаСНДСУпр - ТаблицаВидыЗапасов.СуммаНДСУпр
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ)                                  КАК СебестоимостьБезНДС,
	|
	|	СУММА(ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) Тогда
	|		ТаблицаВидыЗапасов.СуммаБезНДСРегл
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ)                                  КАК СебестоимостьРегл,
	|
	|	0                                       КАК СуммаРучнойСкидки,
	|	0                                       КАК СуммаАвтоматическойСкидки,
	|
	|	&Склад                                  КАК Склад,
	|	НЕОПРЕДЕЛЕНО                            КАК Договор,
	|	НЕОПРЕДЕЛЕНО                            КАК Соглашение,
	|
	|	&ВалютаВзаиморасчетов                   КАК ВалютаВзаиморасчетов,
	|	СУММА(ТаблицаВидыЗапасов.СуммаВзаиморасчетов) КАК СуммаВВалютеВзаиморасчетов,
	|	СУММА(ТаблицаВидыЗапасов.СуммаВзаиморасчетов - ТаблицаВидыЗапасов.СуммаНДСВзаиморасчетов) КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	&Валюта                                 КАК ВалютаДокумента,
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДС) КАК СуммаВВалютеДокумента,
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС) КАК СуммаБезНДСВВалютеДокумента,
	|
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение КАК НалоговоеНазначение,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияКомиссионногоТовара)
	|	ИНАЧЕ
	|		&ХозяйственнаяОперация
	|	КОНЕЦ                                   КАК ХозяйственнаяОперация,
	|
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.Номенклатура
	|	КОНЕЦ                                   КАК ИсточникГФУНоменклатуры,
	|	&Ссылка                                 КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	НЕ &ЭтоПередачаНаКомиссию
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик,
	|	ТаблицаВидыЗапасов.ТипЗапасов,
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение,
	|	(ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ),
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.Номенклатура
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки)  КАК НомерСтроки,
	|	&Период                             КАК Период,
	|	&Подразделение                      КАК Подразделение,
	|	ТаблицаТовары.АналитикаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&АналитикаУчетаПоПартнерамКлиент    КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО                        КАК ЗаказКлиента,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга) КАК ТипЗапасов,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВтСоответствиеВидовЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	&Менеджер                           КАК Менеджер,
	|
	|	СУММА(ТаблицаТовары.Количество)     КАК Количество,
	|
	|	СУММА(ТаблицаТовары.СуммаСНДСУпр)   КАК СуммаВыручки,
	|	СУММА(ТаблицаТовары.СуммаСНДСУпр - ТаблицаТовары.СуммаНДСУпр) КАК СуммаВыручкиБезНДС,
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл) КАК СуммаВыручкиРегл,
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл) КАК СуммаВыручкиСНДСРегл,
	|
	|	0 КАК Себестоимость,
	|	0 КАК СебестоимостьБезНДС,
	|	0 КАК СебестоимостьРегл,
	|
	|	0                                   КАК СуммаРучнойСкидки,
	|	0                                   КАК СуммаАвтоматическойСкидки,
	|
	|	ТаблицаТовары.Склад                 КАК Склад,
	|	НЕОПРЕДЕЛЕНО                        КАК Договор,
	|	НЕОПРЕДЕЛЕНО                        КАК Соглашение,
	|
	|	&ВалютаВзаиморасчетов               КАК ВалютаВзаиморасчетов,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК СуммаВВалютеВзаиморасчетов,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаНДСВзаиморасчетов) КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	&Валюта                             КАК ВалютаДокумента,
	|	СУММА(ТаблицаТовары.СуммаСНДС)      КАК СуммаВВалютеДокумента,
	|	СУММА(ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) КАК СуммаБезНДСВВалютеДокумента,
	|
	|	ТаблицаТовары.ЦелевоеНалоговоеНазначение КАК НалоговоеНазначение,
	|	&ХозяйственнаяОперация              КАК ХозяйственнаяОперация,
	|
	|	ТаблицаТовары.Номенклатура          КАК ИсточникГФУНоменклатуры,
	|	&Ссылка                             КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтРаботыУслуги КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтСоответствиеВидовЗапасов КАК ВтСоответствиеВидовЗапасов
	|	ПО
	|		ТаблицаТовары.НомерСтроки = ВтСоответствиеВидовЗапасов.НомерСтроки
	|		И НЕ ВтСоответствиеВидовЗапасов.НомерСтроки = 0
	|ГДЕ
	|	Не &ЭтоПередачаНаКомиссию
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.АналитикаНоменклатуры,
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.ЦелевоеНалоговоеНазначение,
	|	ТаблицаТовары.Номенклатура,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВтСоответствиеВидовЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);

	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрЗапросаАналитикаВзаиморасчетовКлиент(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаВзаиморасчетовКлиент") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерамКлиент(Запрос);
	
	Если Запрос.Параметры.РасчетыЧерезОтдельногоКонтрагента Тогда
		
		СтруктураКлиент = Новый Структура;
		СтруктураКлиент.Вставить("Организация", Запрос.Параметры.Организация);
		СтруктураКлиент.Вставить("Партнер",     Запрос.Параметры.Партнер);
		СтруктураКлиент.Вставить("Контрагент",  Запрос.Параметры.Контрагент);
		СтруктураКлиент.Вставить("Договор",     Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
		СтруктураКлиент.Вставить("НаправлениеДеятельности", Запрос.Параметры.НаправлениеДеятельности);
		
		АналитикаВзаиморасчетовКлиент = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураКлиент);
	Иначе
		АналитикаВзаиморасчетовКлиент = Запрос.Параметры.АналитикаУчетаПоПартнерамКлиент;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("АналитикаВзаиморасчетовКлиент", АналитикаВзаиморасчетовКлиент);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСКлиентами";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	УстановитьПараметрЗапросаАналитикаВзаиморасчетовКлиент(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата                   КАК Период,
	|	ДанныеДокумента.Дата                   КАК ДатаРегистратора,
	|	&ДатаПлатежа                           КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&АналитикаВзаиморасчетовКлиент         КАК АналитикаУчетаПоПартнерам,
	|	&Ссылка                                КАК ЗаказКлиента,
	|	&Ссылка                                КАК РасчетныйДокумент,
	|	ДанныеДокумента.ВалютаВзаиморасчетов   КАК Валюта,
	|	
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	
	|	ДанныеДокумента.СуммаВзаиморасчетов    КАК Сумма,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))  КАК СуммаУпр,
	|	0                                      КАК КОплате,
	|	ДанныеДокумента.СуммаВзаиморасчетов    КАК Долг,
	|	&Организация                           КАК Организация
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И Не &ЭтоПередачаНаКомиссию
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаПлатежа, День) КАК Период,
	|	ДанныеДокумента.Дата                            КАК ДатаРегистратора,
	|	&ДатаПлатежа                                    КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)          КАК ВидДвижения,
	|	&АналитикаВзаиморасчетовКлиент                  КАК АналитикаУчетаПоПартнерам,
	|	&Ссылка                                         КАК ЗаказКлиента,
	|	&Ссылка                                         КАК РасчетныйДокумент,
	|	ДанныеДокумента.ВалютаВзаиморасчетов            КАК Валюта,
	|	
	|	&ХозяйственнаяОперация                          КАК ХозяйственнаяОперация,
	|	
	|	0                                               КАК Сумма,
	|	0                                               КАК СуммаРегл,
	|	0                                               КАК СуммаУпр,
	|	ДанныеДокумента.СуммаВзаиморасчетов             КАК КОплате,
	|	0                                               КАК Долг,
	|	&Организация                                    КАК Организация
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И Не &ЭтоПередачаНаКомиссию";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрЗапросаАналитикаВзаиморасчетовПоставщик(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаВзаиморасчетовПоставщик") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерамПоставщик(Запрос);
	
	Если Запрос.Параметры.РасчетыЧерезОтдельногоКонтрагента Тогда
		
		СтруктураПоставщик = Новый Структура;
		СтруктураПоставщик.Вставить("Организация", Запрос.Параметры.ОрганизацияПолучатель);
		СтруктураПоставщик.Вставить("Партнер",     Запрос.Параметры.Партнер);
		СтруктураПоставщик.Вставить("Контрагент",  Запрос.Параметры.Контрагент);
		СтруктураПоставщик.Вставить("Договор",     Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
		СтруктураПоставщик.Вставить("НаправлениеДеятельности", Запрос.Параметры.НаправлениеДеятельности);
		
		АналитикаВзаиморасчетовПоставщик = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураПоставщик);
		
	Иначе
		АналитикаВзаиморасчетовПоставщик = Запрос.Параметры.АналитикаУчетаПоПартнерамПоставщик;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("АналитикаВзаиморасчетовПоставщик", АналитикаВзаиморасчетовПоставщик);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСПоставщиками";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	УстановитьПараметрЗапросаАналитикаВзаиморасчетовПоставщик(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата                   КАК Период,
	|	ДанныеДокумента.Дата                   КАК ДатаРегистратора,
	|	&ДатаПлатежа                           КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&АналитикаВзаиморасчетовПоставщик      КАК АналитикаУчетаПоПартнерам,
	|	&Ссылка                                КАК ЗаказПоставщику,
	|	&Ссылка                                КАК РасчетныйДокумент,
	|	ДанныеДокумента.ВалютаВзаиморасчетов   КАК Валюта,
	|	
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	
	|	ДанныеДокумента.СуммаВзаиморасчетов    КАК Сумма,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КАК СуммаУпр,
	|	0                                      КАК КОплате,
	|	ДанныеДокумента.СуммаВзаиморасчетов    КАК Долг,
	|	&Организация                           КАК Организация
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И Не &ЭтоПередачаНаКомиссию
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаПлатежа, День) КАК Период,
	|	ДанныеДокумента.Дата                            КАК ДатаРегистратора,
	|	&ДатаПлатежа                                    КАК ДатаПлатежа,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)          КАК ВидДвижения,
	|	&АналитикаВзаиморасчетовПоставщик               КАК АналитикаУчетаПоПартнерам,
	|	&Ссылка                                         КАК ЗаказПоставщику,
	|	&Ссылка                                         КАК РасчетныйДокумент,
	|	ДанныеДокумента.ВалютаВзаиморасчетов            КАК Валюта,
	|	
	|	&ХозяйственнаяОперация                          КАК ХозяйственнаяОперация,
	|	
	|	0                                               КАК Сумма,
	|	0                                               КАК СуммаРегл,
	|	0                                               КАК СуммаУпр,
	|	ДанныеДокумента.СуммаВзаиморасчетов             КАК КОплате,
	|	0                                               КАК Долг,
	|	&Организация                                    КАК Организация
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И Не &ЭтоПередачаНаКомиссию";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтРаботыУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРаботыУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки)     КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&ОрганизацияПолучатель                 КАК Организация,
	|	ТаблицаТовары.Подразделение            КАК Подразделение,
	|	ТаблицаТовары.СтатьяРасходов           КАК СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов        КАК АналитикаРасходов,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаТовары.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))) КАК Сумма,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.АналитикаНоменклатуры    КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтРаботыУслуги КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.СписатьНаРасходы
	|	И ТаблицаТовары.ВариантРаспределенияРасходов <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	И НЕ &ЭтоПередачаНаКомиссию
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов,
	|	ТаблицаТовары.АналитикаНоменклатуры,
	|	ТаблицаТовары.Подразделение
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);

	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МатериалыИРаботыВПроизводстве";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтРаботыУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРаботыУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Период                                КАК ДатаРегистратора,
	|	&Организация                           КАК Организация,
	|	&Подразделение                         КАК Подразделение,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.АналитикаНоменклатуры    КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.Количество               КАК Количество,
	|	ТаблицаТовары.ЦелевоеНалоговоеНазначение КАК НалоговоеНазначение,
	|	ЛОЖЬ                                   КАК Первичное
	|ИЗ
	|	ВтРаботыУслуги КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                     КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|	&Период                                       КАК Период,
	|	&Период                                       КАК ДатаРегистратора,
	|	&ОрганизацияПолучатель                        КАК Организация,
	|	ТаблицаТовары.Подразделение                   КАК Подразделение,
	|	ТаблицаТовары.Номенклатура                    КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                  КАК Характеристика,
	|	ТаблицаТовары.АналитикаНоменклатурыПолучатель КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.Количество                      КАК Количество,
	|	ТаблицаТовары.НалоговоеНазначениеПолучателя КАК НалоговоеНазначение,
	|	ИСТИНА                                        КАК Первичное
	|ИЗ
	|	ВтРаботыУслуги КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И НЕ ТаблицаТовары.СписатьНаРасходы
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииПроизводственныхЗатрат(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПроизводственныхЗатрат";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтРаботыУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРаботыУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки                     КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|	&Период                                       КАК Период,
	|	&ОрганизацияПолучатель                        КАК Организация,
	|	ТаблицаТовары.АналитикаНоменклатурыПолучатель КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.АналитикаУчетаПартий            КАК АналитикаУчетаПартий,
	|	&Ссылка                                       КАК ДокументПоступления,
	|	ТаблицаТовары.ВидЗапасов                      КАК ВидЗапасов,
	|	ТаблицаТовары.Количество                      КАК Количество,
	|	0                                             КАК Стоимость,
	|	0                                             КАК СтоимостьБезНДС,
	|	ТаблицаТовары.СуммаБезНДСРегл                 КАК СтоимостьРегл,
	|	ТаблицаТовары.СуммаНДСРегл                    КАК НДСРегл
	|
	|ИЗ
	|	ВтРаботыУслуги КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И Не ТаблицаТовары.СписатьНаРасходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Движения.НомерСтроки,
	|	Движения.ВидДвижения,
	|	Движения.Период,
	|	Движения.Организация,
	|	Движения.АналитикаУчетаНоменклатуры,
	|	Движения.АналитикаУчетаПартий,
	|	Движения.ДокументПоступления,
	|	Движения.ВидЗапасов,
	|	Движения.Количество,
	|	Движения.Стоимость,
	|	Движения.СтоимостьБезНДС,
	|	Движения.СтоимостьРегл,
	|	Движения.НДСРегл
	|
	|ИЗ
	|	РегистрНакопления.ПартииПроизводственныхЗатрат КАК Движения
	|
	|ГДЕ
	|	Движения.Регистратор = &Ссылка
	|	И ((Движения.Количество = 0 И Движения.Стоимость <> 0)
	|		ИЛИ
	|		Движения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	    )
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции


Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтРаботыУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРаботыУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	1                                                КАК Порядок,
	|	ТаблицаТовары.НомерСтроки                        КАК НомерСтроки,
	|	&Период                                          КАК Период,
	|	&Валюта                                          КАК Валюта,
	|	ТаблицаТовары.ИдентификаторСтроки                КАК ИдентификаторСтроки,
	|	ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаТовары.СтавкаНДС                          КАК СтавкаНДС,
	|	ТаблицаТовары.СуммаНДС                           КАК СуммаНДС,
	|
	|	ТаблицаТовары.СуммаБезНДСРегл                    КАК СуммаБезНДСРегл,
	|	ТаблицаТовары.СуммаНДСРегл                       КАК СуммаНДСРегл,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом) КАК ТипРасчетов
	|ИЗ
	|	ВтРаботыУслуги КАК ТаблицаТовары
	|ГДЕ
	|	&Валюта <> &ВалютаРегламентированногоУчета
	|	И НЕ &ЭтоПередачаНаКомиссию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2                                      КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки         КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	&Валюта                                КАК Валюта,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаВидыЗапасов.СтавкаНДС           КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС            КАК СуммаНДС,
	|
	|	ТаблицаВидыЗапасов.СуммаБезНДСРегл     КАК СуммаБезНДСРегл,
	|	ТаблицаВидыЗапасов.СуммаНДСРегл        КАК СуммаНДСРегл,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом) КАК ТипРасчетов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	&Валюта <> &ВалютаРегламентированногоУчета
	|	И НЕ &ЭтоПередачаНаКомиссию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1                                                КАК Порядок,
	|	ТаблицаТовары.НомерСтроки                        КАК НомерСтроки,
	|	&Период                                          КАК Период,
	|	&Валюта                                          КАК Валюта,
	|	ТаблицаТовары.ИдентификаторСтроки                КАК ИдентификаторСтроки,
	|	ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаТовары.СтавкаНДС                          КАК СтавкаНДС,
	|	ТаблицаТовары.СуммаНДС                           КАК СуммаНДС,
	|	ТаблицаДокументаРегл.СуммаБезНДС                 КАК СуммаБезНДСРегл,
	|	ТаблицаДокументаРегл.СуммаНДС                    КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО                                     КАК ТипРасчетов
	|ИЗ
	|	ВтРаботыУслуги КАК ТаблицаТовары
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаТоваровПредварительная КАК ТаблицаДокументаРегл
	|	ПО
	|		ТаблицаТовары.ИдентификаторСтроки = ТаблицаДокументаРегл.ИдентификаторСтроки
	|
	|ГДЕ
	|	&Валюта <> &ВалютаРегламентированногоУчета
	|	И &ЭтоПередачаНаКомиссию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2                                      КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки         КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	&Валюта                                КАК ВалютаДокумента,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаВидыЗапасов.СтавкаНДС           КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС            КАК СуммаНДС,
	|	ТаблицаДокументаРегл.СуммаБезНДС       КАК СуммаБезНДСРегл,
	|	ТаблицаДокументаРегл.СуммаНДС          КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО                           КАК ТипРасчетов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаТоваровПредварительная КАК ТаблицаДокументаРегл
	|	ПО
	|		ТаблицаВидыЗапасов.ИдентификаторСтроки = ТаблицаДокументаРегл.ИдентификаторСтроки
	|
	|ГДЕ
	|	&Валюта <> &ВалютаРегламентированногоУчета
	|	И &ЭтоПередачаНаКомиссию
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ПересчитатьТаблицуТоваровВВалютуРегл(Реквизиты, МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                           КАК НомерСтроки,
	|	ТаблицаДокумента.ИдентификаторСтроки                   КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СтавкаНДС                             КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаСНДС                             КАК СуммаСНДС,
	|	ТаблицаДокумента.СуммаНДС                              КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС КАК СуммаБезНДС,
	|	&Валюта                                                КАК Валюта,
	|	&Период                                                КАК Дата
	|
	|ПОМЕСТИТЬ ТаблицаТоваровПредварительная
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И ТаблицаДокумента.Номенклатура.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	)
	|	И &Валюта <> &ВалютаРегламентированногоУчета
	|	И &ЭтоПередачаНаКомиссию
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                           КАК НомерСтроки,
	|	ТаблицаДокумента.ИдентификаторСтроки                   КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СтавкаНДС                             КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаСНДС                             КАК СуммаСНДС,
	|	ТаблицаДокумента.СуммаНДС                              КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС КАК СуммаБезНДС,
	|	&Валюта                                                КАК Валюта,
	|	&Период                                                КАК Дата
	|
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И &Валюта <> &ВалютаРегламентированногоУчета
	|	И &ЭтоПередачаНаКомиссию
	|";
	Запрос.УстановитьПараметр("Ссылка",                         Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("Период",                         Реквизиты.Период);
	Запрос.УстановитьПараметр("Валюта",                         Реквизиты.Валюта);
	Запрос.УстановитьПараметр("ЭтоПередачаНаКомиссию",          Реквизиты.ЭтоПередачаНаКомиссию);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	
	Запрос.Выполнить();
	
	ОбщегоНазначенияУТ.ПересчитатьТаблицуТоваровВВалютуРегл(МенеджерВременныхТаблиц);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаПартииПрочихРасходов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтРаботыУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРаботыУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки)     КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&ОрганизацияПолучатель                 КАК Организация,
	|	ТаблицаТовары.Подразделение            КАК Подразделение,
	|	ТаблицаТовары.СтатьяРасходов           КАК СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов        КАК АналитикаРасходов,
	|
	|	СУММА(
	|		ВЫБОР КОГДА ТаблицаТовары.ВариантРаспределенияРасходов <>
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|		ТОГДА 0
	|		ИНАЧЕ ТаблицаТовары.СуммаСНДСУпр
	|	КОНЕЦ)                                 КАК Стоимость,
	|	СУММА(
	|		ВЫБОР КОГДА ТаблицаТовары.СтатьяРасходов.ВариантРаспределенияРасходов <>
	|			ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|		ТОГДА 0
	|		ИНАЧЕ ТаблицаТовары.СуммаБезНДСУпр
	|	КОНЕЦ)                                 КАК СтоимостьБезНДС,
	|
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл)   КАК СтоимостьРегл,
	|	СУММА(ТаблицаТовары.СуммаНДСРегл)      КАК НДСРегл,
	|
	|	&Ссылка                                КАК ДокументПоступленияРасходов,
	|	ТаблицаТовары.АналитикаУчетаПартий     КАК АналитикаУчетаПартий
	|ИЗ
	|	ВтРаботыУслуги КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.СписатьНаРасходы
	|	И (ТаблицаТовары.ВариантРаспределенияРасходов = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	)
	|	И НЕ &ЭтоПередачаНаКомиссию
	|	И &ИспользоватьУчетПрочихДоходовРасходов
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов,
	|	ТаблицаТовары.АналитикаУчетаПартий,
	|	ТаблицаТовары.Подразделение
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииТоваровОрганизаций";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки)           КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)       КАК ВидДвижения,
	|	&Период                                      КАК Период,
	|	&ОрганизацияПолучатель                       КАК Организация,
	|	ТаблицаТовары.АналитикаНоменклатурыПоставщик КАК АналитикаУчетаНоменклатуры,
	|	&Ссылка                                      КАК ДокументПоступления,
	|	ТаблицаТовары.ВидЗапасовПолучателя           КАК ВидЗапасов,
	|	ТаблицаТовары.АналитикаУчетаПартий           КАК АналитикаУчетаПартий,
	|	СУММА(ТаблицаТовары.Количество)              КАК Количество,
	|	0                                            КАК Стоимость,
	|	0                                            КАК СтоимостьБезНДС,
	|
	|	СУММА(
	|		ТаблицаТовары.СуммаБезНДСРегл) КАК СтоимостьРегл,
	|	СУММА(
	|			ТаблицаТовары.СуммаНДСРегл) КАК НДСРегл,
	|
	|	ТаблицаТовары.Номенклатура                   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                 КАК Характеристика,
	|	НЕОПРЕДЕЛЕНО 								 КАК НалоговоеНазначение,
	|	&ХозяйственнаяОперация                       КАК ХозяйственнаяОперация,
	|	ИСТИНА                                       КАК Первичное,
	|	&Ссылка                                      КАК ДокументИсточник
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|	) И &ИспользоватьПартионныйУчет
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.АналитикаНоменклатурыПоставщик,
	|	ТаблицаТовары.ВидЗапасовПолучателя,
	|	ТаблицаТовары.АналитикаУчетаПартий,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЗакупки(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "Закупки";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтРаботыУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРаботыУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
#Область ПоступлениеТоваров
	ПоступлениеТоваров =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУДругойОрганизации) КАК ХозяйственнаяОперация,	
	|	&ОрганизацияПолучатель КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&Менеджер КАК Менеджер,
	|
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.СкладПоставщика КАК Склад,
	|	ТаблицаВидыЗапасов.ТипЗапасовПолучателя КАК ТипЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасовПолучателя
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|	
	|	ВЫБОР
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА &Партнер
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	КОНЕЦ КАК Партнер,
	|	ВЫБОР
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА &Контрагент
	|		ИНАЧЕ &Организация
	|	КОНЕЦ КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО КАК Соглашение,
	|	НЕОПРЕДЕЛЕНО КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК Заказ,
	|	
	|	СУММА(ТаблицаВидыЗапасов.Количество) КАК Количество,
	|
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДСУпр) КАК Сумма,
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДСУпр - ТаблицаВидыЗапасов.СуммаНДСУпр) КАК СуммаБезНДС,
	|	СУММА(ТаблицаВидыЗапасов.СуммаБезНДСРегл + ТаблицаВидыЗапасов.СуммаНДСРегл) КАК СуммаРегл,
	|	СУММА(ТаблицаВидыЗапасов.СуммаБезНДСРегл) КАК СуммаРеглБезНДС,
	|	0 КАК СуммаСкидки,
	|
	|	СУММА (
	|		ВЫБОР
	|			КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) 
	|				ТОГДА ТаблицаВидыЗапасов.СуммаСНДСУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Стоимость,
	|	СУММА (
	|		ВЫБОР 
	|			КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|				ТОГДА ТаблицаВидыЗапасов.СуммаСНДСУпр - ТаблицаВидыЗапасов.СуммаНДСУпр
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.НалоговоеНазначениеПолучателя.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая)
	|			ТОГДА
	|				СУММА(ТаблицаВидыЗапасов.СуммаБезНДСРегл + ТаблицаВидыЗапасов.СуммаНДСРегл)
	|		ИНАЧЕ СУММА(ТаблицаВидыЗапасов.СуммаБезНДСРегл)
	|	КОНЕЦ КАК СтоимостьРегл,
	|	
	|	0 КАК СуммаДопРасходов,
	|	0 КАК СуммаДопРасходовБезНДС,
	|
	|	&Валюта КАК ВалютаДокумента,
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДС) КАК СуммаВВалютеДокумента,
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС) КАК СуммаБезНДСВВалютеДокумента,
	|
	|	&ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС
	|		* &КоэффициентПересчетаВВалютуВзаиморасчетов КАК Число(15,2))) КАК СуммаВВалютеВзаиморасчетов,
	|	СУММА(ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС)
	|		* &КоэффициентПересчетаВВалютуВзаиморасчетов КАК Число(15,2))) КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ ТаблицаВидыЗапасов.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	&Ссылка КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	Не &ЭтоПередачаНаКомиссию
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик,
	|	ТаблицаВидыЗапасов.СкладПоставщика,
	|	ТаблицаВидыЗапасов.НалоговоеНазначениеПолучателя.ВидДеятельностиНДС,
	|	ТаблицаВидыЗапасов.ТипЗапасовПолучателя,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасовПолучателя
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ ТаблицаВидыЗапасов.Номенклатура
	|	КОНЕЦ
	|";
#КонецОбласти

#Область ПоступлениеРабот
	ПоступлениеРабот =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУДругойОрганизации) КАК ХозяйственнаяОперация,
	|	&ОрганизацияПолучатель КАК Организация,
	|	ТаблицаТовары.Подразделение КАК Подразделение,
	|	&Менеджер КАК Менеджер,
	|
	|	ТаблицаТовары.АналитикаНоменклатурыПолучатель КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.Склад КАК Склад,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга) КАК ТипЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
	|
	|	ВЫБОР
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА &Партнер
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	КОНЕЦ КАК Партнер,
	|	ВЫБОР
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА &Контрагент
	|		ИНАЧЕ &Организация
	|	КОНЕЦ КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО КАК Соглашение,
	|	НЕОПРЕДЕЛЕНО КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК Заказ,
	|
	|	СУММА(ТаблицаТовары.Количество) КАК Количество,
	|
	|	СУММА(ТаблицаТовары.СуммаСНДСУпр) КАК Сумма,
	|	СУММА(ТаблицаТовары.СуммаБезНДСУпр) КАК СуммаБезНДС,
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл) КАК СуммаРегл,
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл) КАК СуммаРеглБезНДС,
	|	0 КАК СуммаСкидки,
	|
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.НалоговоеНазначениеПолучателя.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая)
	|			ТОГДА
	|				СУММА(ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл)
	|		ИНАЧЕ СУММА(ТаблицаТовары.СуммаБезНДСРегл)
	|	КОНЕЦ КАК СтоимостьРегл,
	|	0 КАК СуммаДопРасходов,
	|	0 КАК СуммаДопРасходовБезНДС,
	|
	|	&Валюта КАК ВалютаДокумента,
	|	СУММА(ТаблицаТовары.СуммаСНДС) КАК СуммаВВалютеДокумента,
	|	СУММА(ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) КАК СуммаБезНДСВВалютеДокумента,
	|
	|	&ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК СуммаВВалютеВзаиморасчетов,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаНДСВзаиморасчетов) КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ТаблицаТовары.Номенклатура КАК ИсточникГФУНоменклатуры,
	|	&Ссылка КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтРаботыУслуги КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И Не ТаблицаТовары.СписатьНаРасходы
	|	И Не &ЭтоПередачаНаКомиссию
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.АналитикаНоменклатуры,
	|	ТаблицаТовары.АналитикаНоменклатурыПолучатель,
	|   ТаблицаТовары.НалоговоеНазначениеПолучателя.ВидДеятельностиНДС,
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Подразделение
	|";
#КонецОбласти

#Область ПриемНаКомиссию
	ПриемНаКомиссию =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПриемНаКомиссию) КАК ХозяйственнаяОперация,	
	|	&ОрганизацияПолучатель КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&Менеджер КАК Менеджер,
	|
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.СкладПоставщика КАК Склад,
	|	ТаблицаВидыЗапасов.ТипЗапасовПолучателя КАК ТипЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасовПолучателя
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|	
	|	ВЫБОР
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА &Партнер
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	КОНЕЦ КАК Партнер,
	|	ВЫБОР
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА &Контрагент
	|		ИНАЧЕ &Организация
	|	КОНЕЦ КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО КАК Соглашение,
	|	НЕОПРЕДЕЛЕНО КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК Заказ,
	|	
	|	СУММА(ТаблицаВидыЗапасов.Количество) КАК Количество,
	|
	|	0 КАК Сумма,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаРегл,
	|	0 КАК СуммаРеглБезНДС,
	|	0 КАК СуммаСкидки,
	|
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДСУпр) КАК Стоимость,
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДСУпр - ТаблицаВидыЗапасов.СуммаНДСУпр) КАК СтоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаВидыЗапасов.НалоговоеНазначениеПолучателя.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая)
	|			ТОГДА
	|				СУММА(ТаблицаВидыЗапасов.СуммаБезНДСРегл + ТаблицаВидыЗапасов.СуммаНДСРегл)
	|		ИНАЧЕ СУММА(ТаблицаВидыЗапасов.СуммаБезНДСРегл)
	|	КОНЕЦ КАК СтоимостьРегл,
	|	
	|	0 КАК СуммаДопРасходов,
	|	0 КАК СуммаДопРасходовБезНДС,
	|
	|	&Валюта КАК ВалютаДокумента,
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДС) КАК СуммаВВалютеДокумента,
	|	СУММА(ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС) КАК СуммаБезНДСВВалютеДокумента,
	|
	|	&ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	СУММА(ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС
	|		* &КоэффициентПересчетаВВалютуВзаиморасчетов КАК Число(15,2))) КАК СуммаВВалютеВзаиморасчетов,
	|	СУММА(ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС)
	|		* &КоэффициентПересчетаВВалютуВзаиморасчетов КАК Число(15,2))) КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ ТаблицаВидыЗапасов.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	&Ссылка КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И &ЭтоПередачаНаКомиссию
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик,
	|	ТаблицаВидыЗапасов.СкладПоставщика,
	|	ТаблицаВидыЗапасов.НалоговоеНазначениеПолучателя.ВидДеятельностиНДС,
	|	ТаблицаВидыЗапасов.ТипЗапасовПолучателя,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасовПолучателя
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ ТаблицаВидыЗапасов.Номенклатура
	|	КОНЕЦ";
#КонецОбласти

	ТекстЗапроса = ПоступлениеТоваров
		+ " ОБЪЕДИНИТЬ ВСЕ " + ПоступлениеРабот
		+ " ОБЪЕДИНИТЬ ВСЕ " + ПриемНаКомиссию;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияНоменклатураНоменклатура";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период                                              КАК Период,
	|	&ХозяйственнаяОперация                               КАК ХозяйственнаяОперация,
	|	&Организация                                         КАК Организация,
	|	&Подразделение                                       КАК Подразделение,
	|
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыПоставщик    КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.СкладПоставщика                   КАК Склад,
	|	ТаблицаВидыЗапасов.ТипЗапасов                        КАК ТипЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                КАК ВидЗапасов,
	|
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыКомиссионера КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                         КАК КорСклад,
	|	ТаблицаВидыЗапасов.ТипЗапасов                        КАК КорТипЗапасов,
	|	ВЫБОР
	|		КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ                                                КАК КорВидЗапасов,
	|
	|	ТаблицаВидыЗапасов.Количество                        КАК Количество,
	|	ТаблицаВидыЗапасов.Количество                        КАК КорКоличество,
	|
	|	0                                                    КАК Стоимость,
	|	0                                                    КАК СтоимостьБезНДС,
	|	0                                                    КАК СтоимостьРегл,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасов
	|			ИНАЧЕ ТаблицаВидыЗапасов.Номенклатура
	|	КОНЕЦ                                                КАК ИсточникГФУНоменклатуры,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасов
	|			ИНАЧЕ ТаблицаВидыЗапасов.Номенклатура
	|	КОНЕЦ                                                КАК КорИсточникГФУНоменклатуры
	|
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	&ЭтоПередачаНаКомиссию";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияКонтрагентДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияКонтрагентДоходыРасходы";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтРаботыУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРаботыУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период                                  КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеУслуг) КАК ХозяйственнаяОперация,
	|	&ОрганизацияПолучатель                   КАК Организация,
	|	ТаблицаТовары.Подразделение              КАК Подразделение,
	|
	|	ВЫБОР
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|				ТОГДА &Партнер
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	КОНЕЦ                                    КАК Партнер,
	|	ВЫБОР
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА &Контрагент
	|		ИНАЧЕ &Организация
	|	КОНЕЦ                                    КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО                             КАК Договор,
	|	НЕОПРЕДЕЛЕНО                             КАК ОбъектРасчетов,
	|
	|	ТаблицаТовары.СтатьяРасходов             КАК СтатьяДоходовРасходов,
	|	НЕОПРЕДЕЛЕНО                             КАК АналитикаДоходов,
	|	ТаблицаТовары.АналитикаРасходов          КАК АналитикаРасходов,
	|	
	|	СУММА(ТаблицаТовары.СуммаСНДСУпр)        КАК Сумма,
	|	СУММА(ТаблицаТовары.СуммаБезНДСУпр)      КАК СуммаБезНДС,
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл + ТаблицаТовары.СуммаНДСРегл) КАК СуммаРегл,
	|	СУММА(ТаблицаТовары.СуммаБезНДСРегл)     КАК СуммаРеглБезНДС,
	|
	|	&Валюта                                  КАК Валюта,
	|	СУММА(ТаблицаТовары.СуммаСНДС)           КАК СуммаВВалюте,
	|	СУММА(ТаблицаТовары.СуммаСНДС - ТаблицаТовары.СуммаНДС) КАК СуммаБезНДСВВалюте,
	|		
	|	&ВалютаВзаиморасчетов                    КАК ВалютаВзаиморасчетов,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов) КАК СуммаВВалютеВзаиморасчетов,
	|	СУММА(ТаблицаТовары.СуммаВзаиморасчетов - ТаблицаТовары.СуммаНДСВзаиморасчетов) КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	&Ссылка КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтРаботыУслуги КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.СписатьНаРасходы
	|	И НЕ &ЭтоПередачаНаКомиссию
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.СтатьяРасходов,
	|	ТаблицаТовары.АналитикаРасходов,
	|	ТаблицаТовары.Подразделение";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыПереданныеНаКомиссию";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки)              КАК НомерСтроки,
	|	&Период                                         КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)          КАК ВидДвижения,
	|	ТаблицаТовары.АналитикаНоменклатурыКомиссионера КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                                    КАК Соглашение,
	|	&Организация                                    КАК Организация,
	|	ТаблицаТовары.ВидЗапасов                        КАК ВидЗапасов,
	|	ТаблицаТовары.НомерГТД                          КАК НомерГТД,
	|	СУММА(ТаблицаТовары.Количество)                 КАК Количество,
	|	&ХозяйственнаяОперация                          КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.ЦелевоеНалоговоеНазначение        КАК НалоговоеНазначение,
	|	ТаблицаТовары.Номенклатура                      КАК Номенклатура,
	|	ТаблицаТовары.Характеристика                    КАК Характеристика,
	|	ТаблицаТовары.АналитикаНоменклатурыПоставщик    КАК КорАналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаТовары
	|ГДЕ
	|	&ХозяйственнаяОперация 
	|			= ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию)
	|	И ТаблицаТовары.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.АналитикаНоменклатурыПоставщик,
	|	ТаблицаТовары.АналитикаНоменклатурыКомиссионера,
	|	ТаблицаТовары.ВидЗапасов,
	|	ТаблицаТовары.НомерГТД,
	|	ТаблицаТовары.ЦелевоеНалоговоеНазначение,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции


Функция ТекстЗапросаТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладныхТовары(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСНоменклатурныйСоставДляНалоговыхНакладныхТовары";
	ИмяРегистраДляПроверки = "НДСНоменклатурныйСоставДляНалоговыхНакладных";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистраДляПроверки, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрЗапросаАналитикаВзаиморасчетовКлиент(Запрос);
	
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&АналитикаВзаиморасчетовКлиент КАК АналитикаУчетаПоПартнерам,
	|
	|	&Ссылка КАК ОбъектРасчетов,
	|
	|	&ВидПоставки КАК ВидПоставки, 
	|
	|	&Валюта КАК Валюта,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыЗаполненияНоменклатурыНалоговыхДокументов.ТоварыУслуги) КАК СпособЗаполнения,
	|
	|	ТаблицаТоваров.СтавкаНДС      КАК СтавкаНДС,
	|	Неопределено                  КАК НомерГТД,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры      КАК АналитикаУчетаНоменклатуры,	
	|	ТаблицаТоваров.Номенклатура   КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Упаковка       КАК Упаковка,
	|	(ТаблицаТоваров.СуммаСНДС - ТаблицаТоваров.СуммаНДС) / ТаблицаТоваров.КоличествоУпаковок КАК ЦенаНН,
	|
	|   ТаблицаТоваров.Ссылка КАК ДокументПоставки,
	|   НЕОПРЕДЕЛЕНО КАК ДокументПоставкиДляВозвратов,
	|
	|	ТаблицаТоваров.СуммаСНДС КАК СуммаВзаиморасчетов,
	|	ТаблицаТоваров.КоличествоУпаковок КАК КоличествоУпаковок
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТаблицаТоваров
	|
	|ГДЕ
	|	&ОрганизацияПлательщикНДСПоставщик
	|	И ТаблицаТоваров.Ссылка = &Ссылка
	|
	|
	|
	|/////////////////////////////////////////////////////////////////////////////
	|";
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладныхВидыЗапасов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСНоменклатурныйСоставДляНалоговыхНакладныхВидыЗапасов";
	ИмяРегистраДляПроверки = "НДСНоменклатурныйСоставДляНалоговыхНакладных";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистраДляПроверки, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|
	|	&Ссылка КАК ОбъектРасчетов,
	|
	|	ТаблицаВидыЗапасов.СтавкаНДС      КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.НомерГТД       КАК НомерГТД,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры      КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.Упаковка       КАК Упаковка,
	|
	|	ТаблицаВидыЗапасов.КоличествоУпаковок КАК КоличествоУпаковок
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|ГДЕ
	|	&ОрганизацияПлательщикНДСПоставщик
	|	И ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|
	|
	|
	|/////////////////////////////////////////////////////////////////////////////
	|";
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ДополнитьТаблицуНомеромГТД(ТаблицаЗапросаТовары, ТаблицаЗапросаВидыЗапасов)
	
	//ТаблицаТовары = ТаблицаЗапроса.Скопировать(, "Номенклатура, Характеристика, СтавкаНДС, Упаковка, ЗаказКлиента, Количество, КоличествоУпаковок");
	//ТаблицаТовары.Свернуть("Номенклатура, Характеристика, Склад, Упаковка, ЗаказКлиента", "Количество, КоличествоУпаковок");
	ПогрешностьПогрешностьСуммаВзаиморасчетов = 0;
	
	СтруктураПоиска = Новый Структура("АналитикаУчетаНоменклатуры, Упаковка, ОбъектРасчетов");
	Для Каждого СтрокаВидовЗапасов Из ТаблицаЗапросаВидыЗапасов Цикл
		
		КоличествоУпаковокКРаспределению = СтрокаВидовЗапасов.КоличествоУпаковок;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаВидовЗапасов);
		Для Каждого СтрокаТоваров Из ТаблицаЗапросаТовары.НайтиСтроки(СтруктураПоиска) Цикл
			
			Если СтрокаТоваров.КоличествоУпаковок = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			КоличествоУпаковок = Мин(КоличествоУпаковокКРаспределению, СтрокаТоваров.КоличествоУпаковок);
			
			НоваяСтрока = ТаблицаЗапросаТовары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТоваров);
			
			НоваяСтрока.НомерГТД = СтрокаВидовЗапасов.НомерГТД;
			НоваяСтрока.КоличествоУпаковок = КоличествоУпаковок;
			НоваяСтрока.СуммаВзаиморасчетов = ?(СтрокаТоваров.КоличествоУпаковок <> 0, НДСИсходящийСервер.ОкруглитьСУчетомПогрешности(КоличествоУпаковок * СтрокаТоваров.СуммаВзаиморасчетов / СтрокаТоваров.КоличествоУпаковок, 2, ПогрешностьПогрешностьСуммаВзаиморасчетов), 0);
			
			СтрокаТоваров.КоличествоУпаковок = СтрокаТоваров.КоличествоУпаковок - НоваяСтрока.КоличествоУпаковок;
			СтрокаТоваров.СуммаВзаиморасчетов = СтрокаТоваров.СуммаВзаиморасчетов - НоваяСтрока.СуммаВзаиморасчетов;
			
			КоличествоУпаковокКРаспределению = КоличествоУпаковокКРаспределению - НоваяСтрока.КоличествоУпаковок;
			
			Если КоличествоУпаковокКРаспределению = 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	МассивУдаляемыхСтрок = ТаблицаЗапросаТовары.НайтиСтроки(Новый Структура("КоличествоУпаковок", 0));
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		ТаблицаЗапросаТовары.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
	Возврат ТаблицаЗапросаТовары;
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСРасчетНалоговыхОбязательств(Запрос, ТекстыЗапроса, Регистры)

    ИмяРегистра = "НДСРасчетНалоговыхОбязательств";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрЗапросаАналитикаВзаиморасчетовКлиент(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&АналитикаВзаиморасчетовКлиент КАК АналитикаУчетаПоПартнерам,
	|
	|	&Ссылка ОбъектРасчетов,
	|
	|	&ВидПоставки КАК ВидПоставки, 
	// При комиссии ВалютаВзаиморасчетов не доступна, соответсвенно опираться на 
	// реквизит СуммаВзаиморасчетов нет смысла. Используем сумму в валюте документа
	|	&Валюта КАК Валюта,
	|
	|	&Ссылка КАК ДокументПоставки,
	|	&МоментОпределенияБазыНДСПоставщик КАК МоментОпределенияБазыНДС,
	|	СУММА(ТаблицаТовары.СуммаСНДС) КАК СуммаПоставкиТребующаяРегистрацииНН,
	|   0 КАК СуммаПоставкиНеТребующаяРегистрацииНН
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТаблицаТовары
	|
	|ГДЕ
	|	&ОрганизацияПлательщикНДСПоставщик
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|
	|ИМЕЮЩИЕ 
	|	СУММА(ТаблицаТовары.СуммаСНДС) <> 0
	|
	|
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции


Функция ТекстЗапросаТаблицаНДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов(Запрос, ТекстыЗапроса, Регистры)
    
    ИмяРегистра = "НДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрЗапросаАналитикаВзаиморасчетовПоставщик(Запрос);	
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&АналитикаВзаиморасчетовПоставщик КАК АналитикаУчетаПоПартнерам,
	|
	|	&Ссылка КАК ОбъектРасчетов,
	|	&ВидПоставки КАК ВидПоставки,
	|
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТовары.НалоговоеНазначение КАК НалоговоеНазначение,
	|	СУММА(ТаблицаТовары.СуммаСНДС) КАК СуммаВзаиморасчетов,
	|	СУММА(ВЫБОР КОГДА (НЕ ТаблицаТовары.НалоговоеНазначение.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая)) ТОГДА
	|		ТаблицаТовары.СуммаНДС - ТаблицаТовары.СуммаНДСПропорционально
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ) КАК СуммаНДСКредит,
	|
	|	НЕОПРЕДЕЛЕНО КАК ДатаВходящегоНалоговогоДокумента,
	|	&Ссылка КАК ДокументПоставки
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|   И &ОрганизацияПлательщикНДСКлиент
	// Учет НДС только по гривневым поступлениям, для валютных ГТД, для мелких валютных не требующих ГТД - не автоматизировано
	|   И &ВалютаРегламентированногоУчета = &Валюта
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.СтавкаНДС,
	|	ТаблицаТовары.НалоговоеНазначение
	|
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаНДСРасчетНалоговогоКредита(Запрос, ТекстыЗапроса, Регистры)

    ИмяРегистра = "НДСРасчетНалоговогоКредита";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрЗапросаАналитикаВзаиморасчетовПоставщик(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&АналитикаВзаиморасчетовПоставщик КАК АналитикаУчетаПоПартнерам,
	|
	|	&Ссылка КАК ОбъектРасчетов,
	|	&ВидПоставки КАК ВидПоставки, 
	|
	|	&Ссылка КАК ДокументПоставки,
	|	&МоментОпределенияБазыНДСКлиент КАК МоментОпределенияБазыНДС,
	|
	|	СУММА(ТаблицаТовары.СуммаСНДС) КАК СуммаПоставкиТребующаяРегистрацииНН,
	|   0 КАК СуммаПоставкиНеТребующаяРегистрацииНН
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И &ОрганизацияПлательщикНДСКлиент
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию)
	|   И &ВалютаРегламентированногоУчета = &Валюта
	|
	|ИМЕЮЩИЕ 
	|	СУММА(ТаблицаТовары.СуммаСНДС) <> 0
	|
	|
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции


 


#КонецОбласти

#Область ОбновлениеИнформационнойБазы

Процедура ЗаполнитьВариантОформленияПродажи_ДанныеДляОбновления(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Проведен
	|	И ДанныеДокумента.ВариантОформленияПродажи = ЗНАЧЕНИЕ(Перечисление.ВариантыОформленияПродажи.ПустаяСсылка)
    |";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(
        Параметры, 
        Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка")
    );	

КонецПроцедуры

// Заполняет реквизит "ВариантОформленияПродажи".
Процедура ЗаполнитьВариантОформленияПродажи(Параметры) Экспорт
	
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(
        Параметры.Очередь, 
        "Документ.ПередачаТоваровМеждуОрганизациями"
    );
    
    ВариантРеализацияТоваровУслуг = Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг;
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка	
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Документ.ПередачаТоваровМеждуОрганизациями");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			Блокировка.Заблокировать();
			
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
            
            // Если объект ранее был удален или обработан другими сеансами, пропускаем его
			Если ДокументОбъект = Неопределено 
				ИЛИ НЕ ДокументОбъект.ВариантОформленияПродажи = Перечисления.ВариантыОформленияПродажи.ПустаяСсылка() Тогда
				ОтменитьТранзакцию();
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				Продолжить;
            КонецЕсли;
            
            ДокументОбъект.ВариантОформленияПродажи = ВариантРеализацияТоваровУслуг;
            
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
            ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(Выборка.Ссылка);
            
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
        Параметры.Очередь, 
        "Документ.ПередачаТоваровМеждуОрганизациями"
    );
	
КонецПроцедуры

#КонецОбласти

#Область Печать

Функция ПолучитьДанныеДляПечатнойФормыРасходнаяНакладная(ПараметрыПечати, МассивОбъектов) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ 
	|   ИСТИНА КАК УчитыватьНДС,
	|   Товары.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ТаблицаУчитыватьНДС
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов) И Товары.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НеНДС)
	|СГРУППИРОВАТЬ ПО Товары.Ссылка 
	|;
	|ВЫБРАТЬ
	|	Реализация.Ссылка КАК Ссылка,
	|	Реализация.Номер КАК Номер,
	|	Реализация.Дата КАК Дата,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|	Реализация.ОрганизацияПолучатель КАК Получатель,
	|	Реализация.Организация КАК Организация,
	|	Реализация.Организация.Префикс КАК Префикс,
	|	Реализация.Валюта КАК Валюта,
	|	Реализация.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|   ЕСТЬNULL(ТаблицаУчитыватьНДС.УчитыватьНДС, Ложь) КАК УчитыватьНДС,
	|	Реализация.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	Реализация.БанковскийСчетОрганизацииПолучателя КАК БанковскийСчетКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК Договор,
	|	"""" КАК ДоговорНаименованиеДляПечати,
	|	ЛОЖЬ КАК ПечататьЗаказ,
	|	НЕОПРЕДЕЛЕНО КАК Заказ,
	|	Реализация.АдресДоставки КАК АдресДоставки,
	|	Реализация.МестоСоставленияДокумента КАК МестоСоставленияДокумента,
	|	Реализация.ПредставительОрганизации.Наименование КАК ПредставительОрганизации,
	|	Реализация.ПредставительОрганизацииДолжность КАК ПредставительОрганизацииДолжность,
	|	"""" КАК ПредставительКонтрагента,
	|	Реализация.ПредставительОрганизацииПолучателя КАК ПредставительОрганизацииПолучателя,
	|	Реализация.ПредставительОрганизацииПолучателяДолжность  КАК ПредставительОрганизацииПолучателяДолжность,
	|	Реализация.ПолучилПоДругомуДокументу КАК ПолучилПоДругомуДокументу,
	|	Реализация.ДоверенностьАльтернативныйВидДокумента КАК ДоверенностьАльтернативныйВидДокумента,
	|	Реализация.ДоверенностьСерия КАК ДоверенностьСерия,
	|	Реализация.ДоверенностьНомер КАК ДоверенностьНомер,
	|	Реализация.ДоверенностьДата КАК ДоверенностьДата,
	|	Реализация.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	Реализация.ДоверенностьПримечание КАК ДоверенностьПримечание
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК Реализация
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаУчитыватьНДС КАК ТаблицаУчитыватьНДС
	|		ПО Реализация.Ссылка = ТаблицаУчитыватьНДС.Ссылка
	|ГДЕ
	|	Реализация.Ссылка В(&МассивДокументов)
	|	И Не Реализация.РасчетыЧерезОтдельногоКонтрагента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Реализация.Ссылка КАК Ссылка,
	|	Реализация.Номер КАК Номер,
	|	Реализация.Дата КАК Дата,
	|	Реализация.Партнер КАК Партнер,
	|	Реализация.Контрагент КАК Получатель,
	|	Реализация.Организация КАК Организация,
	|	Реализация.Организация.Префикс КАК Префикс,
	|	Реализация.Валюта КАК Валюта,
	|	Реализация.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|   ЕСТЬNULL(ТаблицаУчитыватьНДС.УчитыватьНДС, Ложь) КАК УчитыватьНДС,
	|	Реализация.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	Реализация.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента,
	|	НЕОПРЕДЕЛЕНО КАК Договор,
	|	"""" КАК ДоговорНаименованиеДляПечати,
	|	ЛОЖЬ КАК ПечататьЗаказ,
	|	НЕОПРЕДЕЛЕНО КАК Заказ,
	|	Реализация.АдресДоставки КАК АдресДоставки,
	|	Реализация.МестоСоставленияДокумента КАК МестоСоставленияДокумента,
	|	Реализация.ПредставительОрганизации.Наименование КАК ПредставительОрганизации,
	|	Реализация.ПредставительОрганизацииДолжность КАК ПредставительОрганизацииДолжность,
	|	Реализация.ПредставительКонтрагента КАК ПредставительКонтрагента,
	|	"""" КАК ПредставительОрганизацииПолучателя,
	|	"""" КАК ПредставительОрганизацииПолучателяДолжность,
	|	Реализация.ПолучилПоДругомуДокументу,
	|	Реализация.ДоверенностьАльтернативныйВидДокумента КАК ДоверенностьАльтернативныйВидДокумента,
	|	Реализация.ДоверенностьСерия КАК ДоверенностьСерия,
	|	Реализация.ДоверенностьНомер КАК ДоверенностьНомер,
	|	Реализация.ДоверенностьДата КАК ДоверенностьДата,
	|	Реализация.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	Реализация.ДоверенностьПримечание КАК ДоверенностьПримечание
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК Реализация
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаУчитыватьНДС КАК ТаблицаУчитыватьНДС
	|		ПО Реализация.Ссылка = ТаблицаУчитыватьНДС.Ссылка
	|ГДЕ
	|	Реализация.Ссылка В(&МассивДокументов)
	|	И Реализация.РасчетыЧерезОтдельногоКонтрагента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК ТоварНаименованиеПолное,
	|	ВложенныйЗапрос.Номенклатура.Код КАК Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул КАК Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Наименование КАК ЕдиницаЦены,
	|	ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстВложенныйЗапросКоэффициентУпаковки, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.Упаковка.Наименование
	|	КОНЕЦ КАК Упаковка,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	ВложенныйЗапрос.Количество КАК Количество,
	|	ВложенныйЗапрос.Сумма КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС КАК СуммаНДС,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ЛОЖЬ КАК ЭтоВозвратнаяТара
	|ИЗ
	|	(ВЫБРАТЬ
	|		Реализация.Ссылка КАК Ссылка,
	|		Реализация.Номенклатура КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА Реализация.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|				ТОГДА 1
	|			ИНАЧЕ &ТекстЗапросаКоэффициентУпаковки
	|		КОНЕЦ КАК Коэффициент,
	|		&ТекстЗапросаЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Реализация.Характеристика КАК Характеристика,
	|		Реализация.Упаковка КАК Упаковка,
	|		Реализация.СтавкаНДС КАК СтавкаНДС,
	|		Реализация.Цена КАК Цена,
	|		Реализация.КоличествоУпаковок КАК Количество,
	|		Реализация.Сумма КАК Сумма,
	|		Реализация.СуммаНДС КАК СуммаНДС,
	|		Реализация.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК Реализация
	|	ГДЕ
	|		Реализация.Ссылка В(&МассивДокументов)
	|		И Реализация.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстВложенныйЗапросКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ВложенныйЗапрос.Упаковка",
			"ВложенныйЗапрос.Номенклатура"));

	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Реализация.Упаковка",
			"Реализация.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"Реализация.Упаковка",
			"Реализация.Номенклатура"));
 
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	Возврат Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти",
		МассивРезультатов[1],
		МассивРезультатов[2]
	);
	
КонецФункции




Функция ПолучитьДанныеДляПечатнойФормыАктОбОказанииУслуг(ПараметрыПечати, МассивОбъектов) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(
		МассивОбъектов, 
		МенеджерВременныхТаблиц,
		"ОрганизацияПолучатель",             // ИмяРеквизитаОрганизация
		Неопределено,                        // РеквизитыОтветственныеЛица
		"ТаблицаОтветственныеЛицаПолучатель" // ИмяВременнойТаблицы
	);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ 
	|   ИСТИНА КАК УчитыватьНДС,
	|   Товары.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ТаблицаУчитыватьНДС
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов) И Товары.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НеНДС)
	|СГРУППИРОВАТЬ ПО Товары.Ссылка 
	|;
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ // документы без посредника
	|	Реализация.Ссылка КАК Ссылка,
	|	Реализация.Номер КАК Номер,
	|	Реализация.Дата КАК Дата,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|	Реализация.ОрганизацияПолучатель КАК Контрагент,
	|	Реализация.Организация КАК Организация,
	|	Реализация.Организация.Префикс КАК Префикс,
	|	Реализация.Валюта КАК Валюта,
	|	Реализация.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|   ЕСТЬNULL(ТаблицаУчитыватьНДС.УчитыватьНДС, Ложь) КАК УчитыватьНДС,
	|	""""														КАК ДополнительнаяИнформация,
	|	""""                                                    	КАК	ДополнительнаяИнформацияШапки,
	|	НЕОПРЕДЕЛЕНО                                            	КАК Договор,
	|	""""                                                    	КАК ДоговорНаименованиеДляПечати,
	|	ЛОЖЬ                                                    	КАК ПечататьЗаказ,
	|	НЕОПРЕДЕЛЕНО                                            	КАК Заказ,
	|	НЕОПРЕДЕЛЕНО                                            	КАК Соглашение,
	|	ТаблицаОтветственныеЛица.РуководительНаименование			КАК РуководительОрганизации,
	|	ТаблицаОтветственныеЛица.РуководительДолжность				КАК ДолжностьРуководителяОрганизации,
	|	ТаблицаОтветственныеЛицаПолучатель.РуководительНаименование	КАК РуководительКонтрагента,
	|	ТаблицаОтветственныеЛицаПолучатель.РуководительДолжность 	КАК ДолжностьРуководителяКонтрагента,
	|	Реализация.ПредставительОрганизации                     	КАК ПредставительОрганизации,
	|	Реализация.ПредставительОрганизацииДолжность            	КАК ПредставительОрганизацииДолжность,
	|	""""                                                    	КАК ПредставительКонтрагента,
	|	Реализация.ПредставительОрганизацииПолучателя           	КАК ПредставительОрганизацииПолучателя,
	|	Реализация.ПредставительОрганизацииПолучателяДолжность  	КАК ПредставительОрганизацииПолучателяДолжность,
	|	Реализация.МестоСоставленияДокумента                    	КАК МестоСоставленияДокумента,
	|	Реализация.БанковскийСчетОрганизации                    	КАК БанковскийСчетОрганизации,
	|	Реализация.БанковскийСчетОрганизацииПолучателя          	КАК БанковскийСчетКонтрагента
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК Реализация
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО Реализация.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаОтветственныеЛицаПолучатель КАК ТаблицаОтветственныеЛицаПолучатель
	|		ПО Реализация.Ссылка = ТаблицаОтветственныеЛицаПолучатель.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаУчитыватьНДС КАК ТаблицаУчитыватьНДС
	|		ПО Реализация.Ссылка = ТаблицаУчитыватьНДС.Ссылка
	|ГДЕ
	|	Реализация.Ссылка В (&МассивДокументов) И Реализация.Проведен И Не Реализация.РасчетыЧерезОтдельногоКонтрагента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ // документы от отправителя на посредника
	|	Реализация.Ссылка КАК Ссылка,
	|	Реализация.Номер КАК Номер,
	|	Реализация.Дата КАК Дата,
	|	Реализация.Партнер КАК Партнер,
	|	Реализация.Контрагент КАК Контрагент,
	|	Реализация.Организация КАК Организация,
	|	Реализация.Организация.Префикс КАК Префикс,
	|	Реализация.Валюта КАК Валюта,
	|	Реализация.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|   ЕСТЬNULL(ТаблицаУчитыватьНДС.УчитыватьНДС, Ложь) КАК УчитыватьНДС,
	|	""""                                                    КАК ДополнительнаяИнформация,
	|	""""                                                    КАК ДополнительнаяИнформацияШапки,
	|	НЕОПРЕДЕЛЕНО                                            КАК Договор,
	|	""""                                                    КАК ДоговорНаименованиеДляПечати,
	|	ЛОЖЬ                                                    КАК ПечататьЗаказ,
	|	НЕОПРЕДЕЛЕНО                                            КАК Заказ,
	|	НЕОПРЕДЕЛЕНО                                            КАК Соглашение,
	|	ТаблицаОтветственныеЛица.РуководительНаименование		КАК РуководительОрганизации,
	|	ТаблицаОтветственныеЛица.РуководительДолжность			КАК ДолжностьРуководителяОрганизации,
	|	""""                                                    КАК РуководительКонтрагента,
	|	""""                                                    КАК ДолжностьРуководителяКонтрагента,
	|	Реализация.ПредставительОрганизации                     КАК ПредставительОрганизации,
	|	Реализация.ПредставительОрганизацииДолжность            КАК ПредставительОрганизацииДолжность,
	|	Реализация.ПредставительКонтрагента                     КАК ПредставительКонтрагента,
	|	""""                                                    КАК ПредставительОрганизацииПолучателя,
	|	""""                                                    КАК ПредставительОрганизацииПолучателяДолжность,
	|	Реализация.МестоСоставленияДокумента                    КАК МестоСоставленияДокумента,
	|	Реализация.БанковскийСчетОрганизации                    КАК БанковскийСчетОрганизации,
	|	Реализация.БанковскийСчетКонтрагента                    КАК БанковскийСчетКонтрагента
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями КАК Реализация
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО Реализация.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаУчитыватьНДС КАК ТаблицаУчитыватьНДС
	|		ПО Реализация.Ссылка = ТаблицаУчитыватьНДС.Ссылка
	|ГДЕ
	|	Реализация.Ссылка В (&МассивДокументов) И Реализация.Проведен И Реализация.РасчетыЧерезОтдельногоКонтрагента
	|	И Реализация.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка;
	|
	|////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка                                                     КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура                                               КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное                            КАК УслугаНаименованиеПолное,
	|	ВложенныйЗапрос.Номенклатура.Код                                           КАК Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул                                       КАК Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Наименование                              КАК ЕдиницаЦены,
	|	ВложенныйЗапрос.ЕдиницаИзмерения                                           КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Характеристика                                             КАК Характеристика,
	|	ВложенныйЗапрос.Характеристика.НаименованиеПолное                          КАК ХарактеристикаНаименованиеПолное,
	|	ВложенныйЗапрос.Упаковка.Наименование                                      КАК УпаковкаНаименование,
	|	ВложенныйЗапрос.СтавкаНДС                                                  КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена													   КАК Цена,
	|	ВложенныйЗапрос.Количество                                                 КАК Количество,
	|	ВложенныйЗапрос.Сумма													   КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС												   КАК СуммаНДС,
	|	ВложенныйЗапрос.СуммаСкидки                                                КАК СуммаСкидки,
	|	ВложенныйЗапрос.СуммаБезСкидки                                             КАК СуммаБезСкидки,
	|	ВложенныйЗапрос.НомерСтроки                                                КАК НомерСтроки,
	|	Ложь                                                                       КАК ЭтоВозвратнаяТара
	|ИЗ (
	|	ВЫБРАТЬ
	|		Реализация.Ссылка КАК Ссылка,
	|		Реализация.Номенклатура КАК Номенклатура,
	|
	|		ВЫБОР КОГДА Реализация.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) ТОГДА
	|			1
	|		ИНАЧЕ
	|			&ТекстЗапросаКоэффициентУпаковки
	|		КОНЕЦ КАК Коэффициент,
	|
	|		&ТекстЗапросаЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|
	|		0 КАК ПроцентСкидки,
	|		Реализация.Характеристика              КАК Характеристика,
	|		Реализация.Упаковка                    КАК Упаковка,
	|		Реализация.СтавкаНДС                   КАК СтавкаНДС,
	|		Реализация.Цена                        КАК Цена,
	|		Реализация.КоличествоУпаковок          КАК Количество,
	|		Реализация.Сумма                       КАК Сумма,
	|		0                                      КАК СуммаСкидки,
	|		Реализация.Сумма                       КАК СуммаБезСкидки,
	|		Реализация.СуммаНДС                    КАК СуммаНДС,
	|		Реализация.НомерСтроки                 КАК НомерСтроки
	|	ИЗ
	|		Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК Реализация
	|	ГДЕ
	|		Реализация.Ссылка В (&МассивДокументов)
	|		И Реализация.Номенклатура.ТипНоменклатуры В (
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга),
	|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|		)
	|	
	|	) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	НомерСтроки
	|
	|ИТОГИ
	|	СУММА(СуммаСкидки)
	|ПО
	|	Ссылка
	|";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Реализация.Упаковка",
			"Реализация.Номенклатура"));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"Реализация.Упаковка",
			"Реализация.Номенклатура"));
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[1];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[2];
	
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти",
												   РезультатПоШапке, РезультатПоТабличнойЧасти);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции



// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаДанныхДокументов с полями:
//		Ссылка,
//		Валюта.
//
//	ПараметрыЗаполнения - Структура - структура, возвращаемая функцией ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения = Неопределено) Экспорт
	
	Если ПараметрыЗаполнения = Неопределено Тогда
		ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ПересчитыватьВВалютуРегл",       ПараметрыЗаполнения.ПересчитыватьВВалютуРегл);
	Запрос.УстановитьПараметр("ВключаяНомераГТД",               ПараметрыЗаполнения.ВключаяНомераГТД);
	Запрос.УстановитьПараметр("ПустаяГТД",                      Справочники.НомераГТД.ПустаяСсылка());
	
	Если ПараметрыЗаполнения.ПересчитыватьВВалютуРегл И ПараметрыЗаполнения.АктуализироватьРасчеты Тогда
		
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
		|ИЗ
		|	РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ТаблицаДанныхДокументов КАК ДанныеДокументов
		|	ПО
		|		РасчетыСКлиентами.Регистратор = ДанныеДокументов.Ссылка
		|
		|ГДЕ
		|	ДанныеДокументов.Валюта <> &ВалютаРегламентированногоУчета
		|	И РасчетыСКлиентами.Активность
		|";
		ТаблицаАналитик = Запрос.Выполнить().Выгрузить();
		МассивАналитикУчетаПоПартнерам = ТаблицаАналитик.ВыгрузитьКолонку("АналитикаУчетаПоПартнерам");
		
		ОкончаниеПериодаРасчета = ТекущаяДатаСеанса();
		РаспределениеВзаиморасчетов.РаспределитьВсеРасчетыСКлиентами(ОкончаниеПериодаРасчета, МассивАналитикУчетаПоПартнерам);
		
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка                     КАК Ссылка,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Упаковка                   КАК Упаковка,
	|	МАКСИМУМ(ТаблицаТоваров.НомерСтроки)      КАК НомерСтроки
	|
	|ПОМЕСТИТЬ СтрокиТоваров
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТаблицаТоваров
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаТоваров.Ссылка = ДанныеДокументов.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Упаковка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Упаковка
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                 КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                            КАК НомерСтроки,
	|	ТаблицаДокумента.Номенклатура                           КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика                         КАК Характеристика,
	|	&ПустаяГТД                                              КАК НомерГТД,
	|	ТаблицаДокумента.Количество                             КАК Количество,
	|	ТаблицаДокумента.Количество                             КАК КоличествоУпаковок,
	|	
	|	ЕСТЬNULL(
	|		СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,
	|		ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС
	|	) КАК СуммаБезНДС,
	|	
	|	ТаблицаДокумента.СтавкаНДС                              КАК СтавкаНДС,
	|	
	|	ЕСТЬNULL(
	|		СуммыДокументовВВалютеРегл.СуммаНДСРегл,
	|		ТаблицаДокумента.СуммаНДС
	|	) КАК СуммаНДС,
	|	
	|	ЛОЖЬ                                                    КАК ЭтоТовар,
	|	ЛОЖЬ                                                    КАК ВернутьМногооборотнуюТару,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)  КАК Упаковка
	|
	|ПОМЕСТИТЬ ПередачаТоваровМеждуОрганизациямиТаблицаТоваров
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.Товары КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|	ПО
	|		ТаблицаДокумента.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|		И ТаблицаДокумента.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|		И СуммыДокументовВВалютеРегл.Активность
	|		И &ПересчитыватьВВалютуРегл
	|
	|ГДЕ
	|	ТаблицаДокумента.Номенклатура.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                        КАК Ссылка,
	|	СтрокиТоваров.НомерСтроки                                      КАК НомерСтроки,
	|	Аналитика.Номенклатура                                         КАК Номенклатура,
	|	Аналитика.Характеристика                                       КАК Характеристика,
	|	
	|	ВЫБОР КОГДА &ВключаяНомераГТД ТОГДА
	|		ТаблицаДокумента.НомерГТД
	|	ИНАЧЕ
	|		&ПустаяГТД
	|	КОНЕЦ КАК НомерГТД,
	|
	|	СУММА(ТаблицаДокумента.Количество)                             КАК Количество,
	|	СУММА(ТаблицаДокумента.КоличествоУпаковок)                     КАК КоличествоУпаковок,
	|	
	|	СУММА(ЕСТЬNULL(
	|		СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,
	|		ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС
	|	)) КАК СуммаБезНДС,
	|	
	|	ТаблицаДокумента.СтавкаНДС                                     КАК СтавкаНДС,
	|	
	|	СУММА(ЕСТЬNULL(
	|		СуммыДокументовВВалютеРегл.СуммаНДСРегл,
	|		ТаблицаДокумента.СуммаНДС
	|	)) КАК СуммаНДС,
	|	
	|	ИСТИНА                                                         КАК ЭтоТовар,
	|	ЛОЖЬ                                                           КАК ВернутьМногооборотнуюТару,
	|	ТаблицаДокумента.Упаковка                                      КАК Упаковка
	|
	|ИЗ
	|	Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|	ПО
	|		ТаблицаДокумента.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|		И ТаблицаДокумента.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|		И СуммыДокументовВВалютеРегл.Активность
	|		И &ПересчитыватьВВалютуРегл
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СтрокиТоваров КАК СтрокиТоваров
	|	ПО
	|		ТаблицаДокумента.Ссылка                       = СтрокиТоваров.Ссылка
	|		И ТаблицаДокумента.АналитикаУчетаНоменклатуры = СтрокиТоваров.АналитикаУчетаНоменклатуры
	|		И ТаблицаДокумента.Упаковка                   = СтрокиТоваров.Упаковка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаДокумента.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Ссылка,
	|	СтрокиТоваров.НомерСтроки,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	ТаблицаДокумента.СтавкаНДС,
	|	ТаблицаДокумента.Упаковка,
	|
	|	ВЫБОР КОГДА &ВключаяНомераГТД ТОГДА
	|		ТаблицаДокумента.НомерГТД
	|	ИНАЧЕ
	|		&ПустаяГТД
	|	КОНЕЦ
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СтрокиТоваров
	|";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗаполнитьСтруктуруПолучателейПечатныхФорм(СтруктураДанныхОбъектаПечати) Экспорт
	
	СтруктураДанныхОбъектаПечати.ОсновнойПолучатель = "Партнер";
	
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Партнер");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда 
		СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Контрагент");
	КонецЕсли;
	
КонецПроцедуры

Функция ДоступныеДляШаблоновПечатныеФормы() Экспорт

	МассивДоступныхПечатныхФорм = Новый Массив;
	
	МассивДоступныхПечатныхФорм.Добавить(ШаблоныСообщенийСервер.СтруктураПараметровДоступнойПечатнойФормы(
	                                     "Акт", НСтр("ru='Акт выполненных работ';uk='Акт виконаних робіт'"), "Обработка.ПечатьАктОбОказанииУслуг", Неопределено));

	Возврат МассивДоступныхПечатныхФорм

КонецФункции

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	Если НЕ ПраваПользователяПовтИсп.ЭтоПартнер() Тогда
		// Акт об оказании услуг
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьАктОбОказанииУслуг";
		КомандаПечати.Идентификатор = "Акт";
		КомандаПечати.Представление = НСтр("ru='Акт об оказании услуг';uk='Акт про надання послуг'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор  = "РасходнаяНакладная";
		КомандаПечати.Представление = НСтр("ru='Расходная накладная';uk='Видаткова накладна'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		
		
	КонецЕсли;

КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
