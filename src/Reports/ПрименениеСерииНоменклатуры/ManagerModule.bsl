#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Определяет применение серии номенклатуры - какие серии материалов использовались при производстве/сборке
//
// АЛГОРИТМ
// 1. Получить данные о расходе требуемой серии
// 1.1. Серия может быть израсходована следующими способами
//      - по графику производства - отражается маршрутными листами
//      - при распределении затрат - отражается документами "Распределение материалов и работ", "Списание затрат на выпуски без распоряжений"
//      - при сборке (разборке) товаров - отражается сборкой (разборкой)
//
// 2. Получить данные о приходе изделий с сериями или без серий
// 2.1. Приход изделий может произойти следующими способами
//      - если серия израсходована по графику производства, то
//         - при выполнении маршрутных листов - отражается маршрутными листами
//         - при выпуске продукции - отражается выпуском продукции по маршрутным листам 
//                                 (документы отбираются, если серии не регистрируются в МЛ)
//      - если серия израсходована при распределении затрат, то
//         - при выпуске продукции без распоряжений - отражается выпуском продукции без распоряжений
//      - если серия израсходована при сборке (разборке), то
//         - при сборке (разборке) - отражается сборкой (разборкой)
//
// Параметры:
//  Параметры	- Структура - содержит параметры необходимые для формирования структуры серии
//  АдресХранилища	- Строка - адрес хранилища в которое будут помещен результат
//
Функция ПрименениеСерииНоменклатуры(Параметры) Экспорт
	
	ПрименениеСерииНоменклатурыДерево = Новый ДеревоЗначений;
	ПрименениеСерииНоменклатурыДерево.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ПрименениеСерииНоменклатурыДерево.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ПрименениеСерииНоменклатурыДерево.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	ПрименениеСерииНоменклатурыДерево.Колонки.Добавить("Произведено", Новый ОписаниеТипов("Число"));
	ПрименениеСерииНоменклатурыДерево.Колонки.Добавить("ЕдиницаИзмерения", Новый ОписаниеТипов("Строка"));
	ПрименениеСерииНоменклатурыДерево.Колонки.Добавить("НоменклатураПредставление", Новый ОписаниеТипов("Строка"));
	ПрименениеСерииНоменклатурыДерево.Колонки.Добавить("СерияПредставление", Новый ОписаниеТипов("Строка"));
	
	ПрименениеСерииКоллекция = ПрименениеСерииНоменклатурыДерево.Строки;
	
	СписокНоменклатуры = Новый ТаблицаЗначений;
	СписокНоменклатуры.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	СписокНоменклатуры.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	СписокНоменклатуры.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	СписокНоменклатуры.Колонки.Добавить("Строки");
	
	НоваяСтрока = СписокНоменклатуры.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Параметры);
	НоваяСтрока.Строки = ПрименениеСерииКоллекция;
	
	// Для предотвращения зацикливания
	ОтработаннаяНоменклатура = Новый ТаблицаЗначений;
	ОтработаннаяНоменклатура.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ОтработаннаяНоменклатура.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ОтработаннаяНоменклатура.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	
	НоваяСтрока = ОтработаннаяНоменклатура.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Параметры);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Пока СписокНоменклатуры.Количество() <> 0 Цикл
		
		НовыйСписокНоменклатуры = СписокНоменклатуры.СкопироватьКолонки();
		
		ПроизведенныеСерии = ПроизведенныеСерии(СписокНоменклатуры);
		Для каждого СтрокаНоменклатура Из СписокНоменклатуры Цикл
			СтруктураПоиска = Новый Структура("НоменклатураСписка,СерияСписка", СтрокаНоменклатура.Номенклатура, СтрокаНоменклатура.Серия);
	  		СписокСтрок = ПроизведенныеСерии.НайтиСтроки(СтруктураПоиска);
			Для каждого СтрокаСерияИзделия Из СписокСтрок Цикл
				
				НоваяСерия = СтрокаНоменклатура.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСерия, СтрокаСерияИзделия);
				НоваяСерия.НоменклатураПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
																СтрокаСерияИзделия.НоменклатураПредставление,
																СтрокаСерияИзделия.ХарактеристикаПредставление);
																
				Если ЗначениеЗаполнено(НоваяСерия.Серия) Тогда
					// Для предотвращения зацикливания
					СтруктураПоиска = Новый Структура("Номенклатура,Характеристика,Серия", 
												НоваяСерия.Номенклатура, НоваяСерия.Характеристика, НоваяСерия.Серия);
				 	СписокСтрок = ОтработаннаяНоменклатура.НайтиСтроки(СтруктураПоиска);
					Если СписокСтрок.Количество() = 0 Тогда
						НоваяНоменклатура = НовыйСписокНоменклатуры.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяНоменклатура, НоваяСерия);
						НоваяНоменклатура.Строки = НоваяСерия.Строки;
					КонецЕсли; 
				КонецЕсли; 
				
			КонецЦикла; 
		КонецЦикла;
		
		СписокНоменклатуры = НовыйСписокНоменклатуры.Скопировать();
		
	КонецЦикла; 
	
	Возврат ПрименениеСерииНоменклатурыДерево;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПроизведенныеСерии(СписокНоменклатуры)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(СписокНоменклатуры.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ВЫРАЗИТЬ(СписокНоменклатуры.Характеристика КАК Справочник.ХарактеристикиНоменклатуры) КАК Характеристика,
	|	ВЫРАЗИТЬ(СписокНоменклатуры.Серия КАК Справочник.СерииНоменклатуры) КАК Серия
	|ПОМЕСТИТЬ СписокНоменклатуры
	|ИЗ
	|	&СписокНоменклатуры КАК СписокНоменклатуры
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Серия
	|;
	|";
	
	
	#Область РасходСерииПриСборке
	Запрос.Текст = Запрос.Текст + 
	"////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДвижениеСерии.Номенклатура КАК Номенклатура,
	|	ДвижениеСерии.Характеристика КАК Характеристика,
	|	ДвижениеСерии.Серия КАК Серия,
	|	ВЫРАЗИТЬ(ДвижениеСерии.Документ КАК Документ.СборкаТоваров) КАК Документ,
	|	ДвижениеСерии.КоличествоОборот КАК Количество
	|ПОМЕСТИТЬ РасходСерииПриСборке
	|ИЗ
	|	РегистрНакопления.ДвиженияСерийТоваров.Обороты(
	|			,
	|			,
	|			,
	|			(Номенклатура, Характеристика, Серия) В
	|					(ВЫБРАТЬ
	|						СписокНоменклатуры.Номенклатура,
	|						СписокНоменклатуры.Характеристика,
	|						СписокНоменклатуры.Серия
	|					ИЗ
	|						СписокНоменклатуры КАК СписокНоменклатуры)
	|				И СкладскаяОперация В (ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаКомплектующихДляСборки),
	|										ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаКомплектовДляРазборки))) КАК ДвижениеСерии
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Серия,
	|	Документ
	|;
	|";
	#КонецОбласти
	
		
	#Область ПриходСерий
	Запрос.Текст = Запрос.Текст + 
	"////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасходСерииПриСборке.Номенклатура КАК НоменклатураСписка,
	|	РасходСерииПриСборке.Характеристика КАК ХарактеристикаСписка,
	|	РасходСерииПриСборке.Серия КАК СерияСписка,
	|	ПоступлениеСерииПриСборке.Номенклатура КАК Номенклатура,
	|	ПоступлениеСерииПриСборке.Номенклатура.Представление КАК НоменклатураПредставление,
	|	ПоступлениеСерииПриСборке.Характеристика КАК Характеристика,
	|	ПоступлениеСерииПриСборке.Характеристика.Представление КАК ХарактеристикаПредставление,
	|	ПоступлениеСерииПриСборке.Серия КАК Серия,
	|	ПоступлениеСерииПриСборке.Серия.Представление КАК СерияПредставление,
	|	ПоступлениеСерииПриСборке.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ПоступлениеСерииПриСборке.КоличествоОборот КАК Произведено
	|ИЗ 
	|	РегистрНакопления.ДвиженияСерийТоваров.Обороты(
	|			,
	|			,
	|			,
	|			Документ В
	|					(ВЫБРАТЬ
	|						РасходСерииПриСборке.Документ
	|					ИЗ
	|						РасходСерииПриСборке КАК РасходСерииПриСборке)
	|				И СкладскаяОперация = ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПродукцииИзПроизводства)) КАК ПоступлениеСерииПриСборке
	|	ЛЕВОЕ СОЕДИНЕНИЕ РасходСерииПриСборке КАК РасходСерииПриСборке
	|	ПО РасходСерииПриСборке.Документ = ПоступлениеСерииПриСборке.Документ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НоменклатураПредставление,
	|	ХарактеристикаПредставление,
	|	СерияПредставление";
	#КонецОбласти
	
	Запрос.УстановитьПараметр("СписокНоменклатуры", СписокНоменклатуры);
	
	Результат = Запрос.Выполнить().Выгрузить();
	Результат.Индексы.Добавить("НоменклатураСписка,СерияСписка");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли