#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура ПередЗаписью(Отказ, Замещение)
		
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Если НЕ ДополнительныеСвойства.Свойство("ДляПроведения") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.РасчетныйДокумент
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК ДанныеРегистра
	|ГДЕ
	|	ДанныеРегистра.Регистратор = &Регистратор
	|	И ДанныеРегистра.РасчетныйДокумент <> &Регистратор
	|	И ДанныеРегистра.Предоплата <> 0
	|	И &ЭтоРежимЗаписи
	|	И &ЭтоОтменаПроведения
	|;
	|/////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Расчеты.Регистратор               КАК Регистратор,
	|	Расчеты.Период                    КАК Период,
	|	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Расчеты.ЗаказПоставщику           КАК ЗаказПоставщику,
	|	Расчеты.РасчетныйДокумент         КАК РасчетныйДокумент,
	|	Расчеты.Валюта                    КАК Валюта,
	|
	|	Расчеты.Долг             КАК Долг,
	|	Расчеты.ДолгУпр          КАК ДолгУпр,
	|	Расчеты.ДолгРегл         КАК ДолгРегл,
	|	Расчеты.Предоплата       КАК Предоплата,
	|	Расчеты.ПредоплатаУпр    КАК ПредоплатаУпр,
	|	Расчеты.ПредоплатаРегл   КАК ПредоплатаРегл,
	|	Расчеты.ЗалогЗаТару      КАК ЗалогЗаТару,
	|	Расчеты.ЗалогЗаТаруРегл  КАК ЗалогЗаТаруРегл,
	|
	|	Расчеты.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|	Расчеты.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств
	|ПОМЕСТИТЬ РасчетыСПоставщикамиПоДокументамИсходныеДвижения
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК Расчеты
	|ГДЕ
	|	Расчеты.Регистратор = &Регистратор
	|	И ТИПЗНАЧЕНИЯ(Расчеты.Регистратор) = ТИП(Документ.ПереоценкаВалютныхСредств)
	|");

	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("ЭтоРежимЗаписи", ДополнительныеСвойства.Свойство("РежимЗаписи"));
	Запрос.УстановитьПараметр("ЭтоОтменаПроведения", ДополнительныеСвойства.РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения);
	Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Массив = Новый Массив;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Массив.Добавить(Выборка.РасчетныйДокумент);
	КонецЦикла;
	
	ДополнительныеСвойства.Вставить("ДокументыАванса", Массив);
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДополнительныеСвойства.Свойство("ДляПроведения") Тогда
		Возврат;
	КонецЕсли;
	
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(Таблица.Период, МЕСЯЦ) КАК Месяц,
	|	Таблица.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Таблица.ЗаказПоставщику              КАК ОбъектРасчетов,
	|	Таблица.Регистратор                  КАК Документ
	|ИЗ
	|	(ВЫБРАТЬ
	|		Расчеты.Регистратор               КАК Регистратор,
	|		Расчеты.Период                    КАК Период,
	|		Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|		Расчеты.ЗаказПоставщику           КАК ЗаказПоставщику,
	|		Расчеты.РасчетныйДокумент         КАК РасчетныйДокумент,
	|		Расчеты.Валюта                    КАК Валюта,
	|
	|		Расчеты.Долг             КАК Долг,
	|		Расчеты.ДолгУпр          КАК ДолгУпр,
	|		Расчеты.ДолгРегл         КАК ДолгРегл,
	|		Расчеты.Предоплата       КАК Предоплата,
	|		Расчеты.ПредоплатаУпр    КАК ПредоплатаУпр,
	|		Расчеты.ПредоплатаРегл   КАК ПредоплатаРегл,
	|		Расчеты.ЗалогЗаТару      КАК ЗалогЗаТару,
	|		Расчеты.ЗалогЗаТаруРегл  КАК ЗалогЗаТаруРегл,
	|
	|		Расчеты.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|		Расчеты.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств
	|	ИЗ
	|		РасчетыСПоставщикамиПоДокументамИсходныеДвижения КАК Расчеты
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|		
	|	ВЫБРАТЬ
	|		Расчеты.Регистратор               КАК Регистратор,
	|		Расчеты.Период                    КАК Период,
	|		Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|		Расчеты.ЗаказПоставщику           КАК ЗаказПоставщику,
	|		Расчеты.РасчетныйДокумент         КАК РасчетныйДокумент,
	|		Расчеты.Валюта                    КАК Валюта,
	|
	|		-Расчеты.Долг             КАК Долг,
	|		-Расчеты.ДолгУпр          КАК ДолгУпр,
	|		-Расчеты.ДолгРегл         КАК ДолгРегл,
	|		-Расчеты.Предоплата       КАК Предоплата,
	|		-Расчеты.ПредоплатаУпр    КАК ПредоплатаУпр,
	|		-Расчеты.ПредоплатаРегл   КАК ПредоплатаРегл,
	|		-Расчеты.ЗалогЗаТару      КАК ЗалогЗаТару,
	|		-Расчеты.ЗалогЗаТаруРегл  КАК ЗалогЗаТаруРегл,
	|
	|		Расчеты.ХозяйственнаяОперация         КАК ХозяйственнаяОперация,
	|		Расчеты.СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств
	|	ИЗ
	|		РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК Расчеты
	|	ГДЕ Расчеты.Регистратор = &Регистратор
	|) КАК Таблица
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Период,
	|	Таблица.Регистратор,
	|	Таблица.АналитикаУчетаПоПартнерам,
	|	Таблица.ЗаказПоставщику,
	|	Таблица.РасчетныйДокумент,
	|	Таблица.Валюта,
	|	Таблица.ХозяйственнаяОперация,
	|	Таблица.СтатьяДвиженияДенежныхСредств
	|ИМЕЮЩИЕ
	|	СУММА(Таблица.Долг) <> 0 ИЛИ СУММА(Таблица.ДолгУпр) <> 0 ИЛИ СУММА(Таблица.ДолгРегл) <> 0
	|	ИЛИ СУММА(Таблица.Предоплата) <> 0 ИЛИ СУММА(Таблица.ПредоплатаУпр) <> 0 ИЛИ СУММА(Таблица.ПредоплатаРегл) <> 0
	|	ИЛИ СУММА(Таблица.ЗалогЗаТару) <> 0 ИЛИ СУММА(Таблица.ЗалогЗаТаруРегл) <> 0
	|;
	|////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РасчетыСПоставщикамиПоДокументамИсходныеДвижения
	|");
	
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	Если ПланыОбмена.ГлавныйУзел() = Неопределено Тогда
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Константа.НомерЗаданияКРаспределениюРасчетовСПоставщиками");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			Блокировка.Заблокировать();

			НаборЗаписей = РегистрыСведений.ЗаданияКРаспределениюРасчетовСПоставщиками.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(НаборЗаписей, Выборка);
			НаборЗаписей.НомерЗадания = Константы.НомерЗаданияКРаспределениюРасчетовСПоставщиками.Получить();
			НаборЗаписей.Записать();
		КонецЦикла;
		Если Константы.АктуализироватьВзаморасчетыПриПроведенииДокументов.Получить() Тогда
			РаспределениеВзаиморасчетов.РаспределитьРасчетыФоновымЗаданием(,,"РасчетыСПоставщиками");
		КонецЕсли;
	КонецЕсли;

	
КонецПроцедуры

#КонецЕсли