#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Перем ИмяПоля;
	Перем ДокументОснование;
	Перем ДатаПоступления;
	ТекстСообщенияОНекорректномСоздании = НСтр("ru='Приходный ордер на товары нужно вводить из формы ""Приемка"" или на основании распоряжения на поступление товаров.';uk='Прибутковий ордер на товари потрібно вводити з форми ""Приймання"" або на підставі розпорядження на надходження товарів.'");
		
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		ДанныеЗаполнения.Свойство("Склад",           Склад);
		ДанныеЗаполнения.Свойство("Помещение",       Помещение);
		ДанныеЗаполнения.Свойство("Распоряжение",    Распоряжение);
		ДанныеЗаполнения.Свойство("ДатаПоступления", ДатаПоступления);
		ДанныеЗаполнения.Свойство("ЗонаПриемки",     ЗонаПриемки);
		ДанныеЗаполнения.Свойство("СкладскаяОперация",     СкладскаяОперация);
		
		Если СкладскаяОперация = Перечисления.СкладскиеОперации.ВозвратНепринятыхТоваров Тогда
		ИначеЕсли ЗначениеЗаполнено(Распоряжение) Тогда
			СкладскаяОперация = Документы.ПриходныйОрдерНаТовары.СкладскаяОперацияПоРаспоряжению(Распоряжение);
			УстановитьПривилегированныйРежим(Истина);
			Если СкладскаяОперация = Перечисления.СкладскиеОперации.ПриемкаПоПеремещению
				Тогда
				ЗаполнитьТоварыПоТоварамКПоступлению("НоменклатураКоличество", ДатаПоступления);
			Иначе
				ЗаполнитьТоварыПоТоварамКПоступлению("Номенклатура", ДатаПоступления);
			КонецЕсли;
			
			Документы.ПриходныйОрдерНаТовары.ЗаполнитьСерииПоРаспоряжению(ЭтотОбъект, Ложь);
			УстановитьПривилегированныйРежим(Ложь);
		Иначе
			ВызватьИсключение ТекстСообщенияОНекорректномСоздании;
		КонецЕсли;
		
	ИначеЕсли Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ДанныеЗаполнения))
		И ДанныеЗаполнения <> Неопределено Тогда
		
		ПометкаУдаления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеЗаполнения, "ПометкаУдаления");
		Если ПометкаУдаления Тогда
			СтрокаИсключения =  НСтр("ru='Невозможно создать приходный ордер.
            |Документ ""%1"" помечен на удаление.'
            |;uk='Неможливо створити прибутковий ордер.
            |Документ ""%1"" відмічений на вилучення.'");
			СтрокаИсключения = СтрЗаменить(СтрокаИсключения, "%1", ДанныеЗаполнения);
			ВызватьИсключение СтрокаИсключения;
		КонецЕсли;
		
		ДатаПоступления = ТекущаяДата();
		
		СкладГруппа = Ложь;
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказНаПеремещение")
			Или ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			
			Склад = ДанныеЗаполнения.СкладПолучатель;
			РеквизитСклада = "СкладПолучатель";
			
		Иначе
			
			// Имя склада в шапке
			РеквизитСклада = "";
			
			// Если основание - заказ на производство, то склад не заполняем, т.к. его просто нет у основания (только для УП)
			Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПоставщику")
				ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")
				ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента")
				ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента")
				ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеТоваров")
				ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СборкаТоваров")
				ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПрочееОприходованиеТоваров")
				ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказНаСборку")
				ИЛИ ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказНаПеремещение") Тогда
				
				РеквизитСклада = "Склад";
			КонецЕсли;
			
			Если Не ПустаяСтрока(РеквизитСклада) Тогда
				
				СкладОснования = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеЗаполнения, РеквизитСклада);
				
				СкладГруппа = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СкладОснования, "ЭтоГруппа");
				СкладГруппа = ?(ЗначениеЗаполнено(СкладГруппа), СкладГруппа, Ложь); //на случай, если склад не заполнен
				
				Если НЕ СкладГруппа Тогда 
					Склад = СкладОснования;
				КонецЕсли;
				
			КонецЕсли;
			
			// Имя склада в ТЧ
			РеквизитСклада = "Склад";
			
		
		КонецЕсли;
		
		ТЧсТоварами = "Товары";
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента") Тогда
			ТЧсТоварами = "ВозвращаемыеТовары";
		КонецЕсли;
		
		ЕстьСкладыВТЧ = Ложь;
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПоставщику")
			Или ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
			
			ЕстьСкладыВТЧ = Истина;
			
		КонецЕсли;
		
		ЕстьРеквизитСкладаИСкладыВТЧ = Ложь;
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПоставщику")
			Или ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
			
			ЕстьРеквизитСкладаИСкладыВТЧ = Истина;
			
		КонецЕсли;
		
		ЕстьСоглашение = Ложь;
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПоставщику")
			Или ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
			
			ЕстьСоглашение = Истина;
			
		КонецЕсли;
		
		ИспользуетсяОтменаТоваров = Ложь;
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказНаПеремещение")
			Или ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказПоставщику")
			Или ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента")
			Или ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказНаВнутреннееПотребление")
			Или ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказНаСборку")
			Тогда
			
			ИспользуетсяОтменаТоваров = Истина;
			
		КонецЕсли;
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказНаСборку")
			Или ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента")
			Тогда
			
			ИсточникНазначение = "ТаблицаТовары.Ссылка.Назначение";
			
		
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") Тогда
		
			ИсточникНазначение = "ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)";
		
		Иначе                    
			
			ИсточникНазначение = "ТаблицаТовары.Назначение";
			
		КонецЕсли;
		
		ПриемПоЗаказам  = Ложь;
		Заказ 			= Неопределено;
		ОперацияСборки  = Ложь;
		РеквизитКоличество = "Количество";

		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
			
			СтруктураПараметров = Новый Структура();
			СтруктураПараметров.Вставить("ЗаказНаПеремещение"); 
			СтруктураПараметров.Вставить("ПеремещениеПоЗаказам");
			
			СтруктураПараметров = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, СтруктураПараметров);
			Заказ = СтруктураПараметров.ЗаказНаПеремещение;
			ПриемПоЗаказам = СтруктураПараметров.ПеремещениеПоЗаказам;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказНаПеремещение") Тогда
			
			Заказ = ДанныеЗаполнения;
			ПриемПоЗаказам = Истина;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
			
			СтруктураПараметров = Новый Структура();
			СтруктураПараметров.Вставить("ЗаказПоставщику"); 
			СтруктураПараметров.Вставить("ПоступлениеПоЗаказам");
			СтруктураПараметров = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, СтруктураПараметров);
			
			Заказ = СтруктураПараметров.ЗаказПоставщику;
			ПриемПоЗаказам = СтруктураПараметров.ПоступлениеПоЗаказам;
			
		
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СборкаТоваров") Тогда
			
			СтруктураПараметров = Новый Структура();
			СтруктураПараметров.Вставить("ЗаказНаСборку");
			СтруктураПараметров.Вставить("ТипОперации");
			СтруктураПараметров = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения,СтруктураПараметров);
			Заказ = СтруктураПараметров.ЗаказНаСборку;
			ОперацияСборки = (СтруктураПараметров.ТипОперации = Перечисления.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих);
			ПриемПоЗаказам = ЗначениеЗаполнено(СтруктураПараметров.ЗаказНаСборку);
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") Тогда
			
			СтруктураПараметров = Новый Структура();
			СтруктураПараметров.Вставить("ЗаявкаНаВозвратТоваровОтКлиента");
			СтруктураПараметров = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, СтруктураПараметров);
			Заказ = СтруктураПараметров.ЗаявкаНаВозвратТоваровОтКлиента;
			ПриемПоЗаказам = ЗначениеЗаполнено(СтруктураПараметров.ЗаявкаНаВозвратТоваровОтКлиента);
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаказНаСборку") Тогда
			
			СтруктураПараметров = Новый Структура();
			СтруктураПараметров.Вставить("ТипОперации");
			СтруктураПараметров = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения,СтруктураПараметров);
			Заказ = ДанныеЗаполнения;
			ОперацияСборки = (СтруктураПараметров.ТипОперации = Перечисления.ТипыОперацийЗаказаНаСборку.СборкаИзКомплектующих);
			ПриемПоЗаказам = Истина;
			
		КонецЕсли;
		
		ПолноеИмяОбъекта = ДанныеЗаполнения.Метаданные().ПолноеИмя();
		
		Запрос = Новый Запрос;
		
		ТекстЗапроса = "";
		
		Если ЕстьСоглашение Тогда
			ТекстЗапроса = ТекстЗапроса + 
			"ВЫБРАТЬ
			|	СкладыДокумента.Ссылка КАК Ссылка,
			|	СкладыДокумента." + РеквизитСклада + " КАК Склад
			|ПОМЕСТИТЬ СкладыДокумента
			|ИЗ 
			|	" + ПолноеИмяОбъекта + ?(ЕстьСкладыВТЧ, "." + ТЧсТоварами, "") + " КАК СкладыДокумента
			|ГДЕ
			|	СкладыДокумента.Ссылка = &Ссылка
			|	И СкладыДокумента." + РеквизитСклада + ".ИспользоватьОрдернуюСхемуПриПоступлении
			|	И СкладыДокумента." + РеквизитСклада + ".ДатаНачалаОрдернойСхемыПриПоступлении <= СкладыДокумента." + ?(ЕстьСкладыВТЧ, "Ссылка.Дата", "Дата") + "
			|" + ?(ЕстьРеквизитСкладаИСкладыВТЧ, "
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	Документ.Ссылка,
			|	Документ." + РеквизитСклада + "
			|ИЗ 
			|	" + ПолноеИмяОбъекта + " КАК Документ
			|ГДЕ 
			|	Документ.Ссылка = &Ссылка
			|	И Документ." + РеквизитСклада + ".ИспользоватьОрдернуюСхемуПриПоступлении
			|	И Документ." + РеквизитСклада + ".ДатаНачалаОрдернойСхемыПриПоступлении <= Документ.Дата
			|	И НЕ Документ." + РеквизитСклада + ".ЭтоГруппа", "") + "
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СкладыДокумента.Ссылка КАК Ссылка,
			|	КОЛИЧЕСТВО(1) КАК ЕстьОрдерныеСклады
			|ПОМЕСТИТЬ ОрдерныеСкладыВТЧ
			|ИЗ 
			|	СкладыДокумента КАК СкладыДокумента
			|
			|СГРУППИРОВАТЬ ПО
			|	СкладыДокумента.Ссылка
			|;
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДокументПриемки.Ссылка КАК Ссылка,
			|	ВЫБОР
			|		КОГДА ДокументПриемки.Соглашение.ВариантПриемкиТоваров <> ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаПоЗаказамИНакладным)
			|				И ОрдерныеСкладыВТЧ.ЕстьОрдерныеСклады > 0
			|			ТОГДА ДокументПриемки.Соглашение
			|		ИНАЧЕ ДокументПриемки.Ссылка
			|	КОНЕЦ КАК Распоряжение,
			|	ВЫБОР
			|		КОГДА ДокументПриемки.Соглашение.ВариантПриемкиТоваров <> ЗНАЧЕНИЕ(Перечисление.ВариантыПриемкиТоваров.РазделенаПоЗаказамИНакладным)
			|				И ОрдерныеСкладыВТЧ.ЕстьОрдерныеСклады > 0
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК СоглашениеЯвляетсяРаспоряжением,
			|	&ПриемПоЗаказам КАК ПриемПоЗаказам
			|ПОМЕСТИТЬ ТаблицаРаспоряжение
			|ИЗ
			|	ОрдерныеСкладыВТЧ КАК ОрдерныеСкладыВТЧ
			|		ЛЕВОЕ СОЕДИНЕНИЕ " + ПолноеИмяОбъекта + " КАК ДокументПриемки
			|		ПО (ДокументПриемки.Ссылка = ОрдерныеСкладыВТЧ.Ссылка)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА ТаблицаРаспоряжение.СоглашениеЯвляетсяРаспоряжением
			|			ТОГДА ТаблицаРаспоряжение.Распоряжение
			|		КОГДА ТаблицаРаспоряжение.ПриемПоЗаказам 
			|			ТОГДА &Заказ
			|		ИНАЧЕ
			|			ТаблицаРаспоряжение.Ссылка
			|	КОНЕЦ КАК Распоряжение
			|ПОМЕСТИТЬ ОкончательноеРаспоряжение
			|ИЗ
			|	ТаблицаРаспоряжение КАК ТаблицаРаспоряжение
			|;";
			
			НомерТаблицыСОстатками = 5;
			
		Иначе 
			
			ТекстЗапроса = ТекстЗапроса +
			"ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА &ПриемПоЗаказам
			|			ТОГДА &Заказ
			|		ИНАЧЕ ТаблицаРаспоряжение.Ссылка 
			|	КОНЕЦ КАК Распоряжение
			|ПОМЕСТИТЬ ОкончательноеРаспоряжение
			|ИЗ " + ПолноеИмяОбъекта + ?(ЕстьСкладыВТЧ, "." + ТЧсТоварами, "") + " КАК ТаблицаРаспоряжение
			|ГДЕ ТаблицаРаспоряжение.Ссылка = &Ссылка
			|	И ТаблицаРаспоряжение." + РеквизитСклада + ".ИспользоватьОрдернуюСхемуПриПоступлении
			|	И ТаблицаРаспоряжение." + РеквизитСклада + ".ДатаНачалаОрдернойСхемыПриПоступлении <= ТаблицаРаспоряжение." + ?(ЕстьСкладыВТЧ, "Ссылка.Дата", "Дата") + "
			|;";
			
			НомерТаблицыСОстатками = 2;
			
		КонецЕсли;
		
		Если ПолноеИмяОбъекта = "Документ.ЗаказНаСборку" И ОперацияСборки Тогда
			ТекстЗапроса = ТекстЗапроса + 
			"ВЫБРАТЬ
			|	ТаблицаТовары.Ссылка КАК Ссылка,
			|	ТаблицаТовары.Дата КАК Дата,
			|	ТаблицаТовары.Склад КАК Склад,
			|	ТаблицаТовары.Номенклатура КАК Номенклатура,
			|	ТаблицаТовары.Характеристика КАК Характеристика,
			|	ТаблицаТовары.Назначение КАК Назначение,
			|	ТаблицаТовары.Количество КАК Количество,
			|	1 КАК НомерСтроки
			|ПОМЕСТИТЬ ТаблицаТоваровДокумента
			|ИЗ
			|	Документ.ЗаказНаСборку КАК ТаблицаТовары
			|ГДЕ
			|	ТаблицаТовары.Ссылка = &Ссылка
			|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			|;
			|";
		Иначе
			ТекстЗапроса = ТекстЗапроса + 
			"ВЫБРАТЬ
			|	ТаблицаТовары.Ссылка КАК Ссылка,
			|	ТаблицаТовары." + ?(ОперацияСборки, "Дата", "Ссылка.Дата") + " КАК Дата,
			|	ТаблицаТовары." + ?(ЕстьСкладыВТЧ, "", "Ссылка.") + РеквизитСклада + " КАК Склад,
			|	ТаблицаТовары.Номенклатура КАК  Номенклатура,
			|	ТаблицаТовары.Характеристика КАК Характеристика,
			|	" + ИсточникНазначение + " КАК Назначение,
			|	СУММА(ТаблицаТовары." + РеквизитКоличество + ") КАК Количество " + ?(ОперацияСборки, "", ", 
			|	МАКСИМУМ(ТаблицаТовары.НомерСтроки) КАК НомерСтроки") + "
			|ПОМЕСТИТЬ ТаблицаТоваровДокумента
			|ИЗ
			|	" + ПолноеИмяОбъекта + ?(ОперацияСборки, "", "." + ТЧсТоварами) + " КАК ТаблицаТовары
			|ГДЕ
			|	ТаблицаТовары.Ссылка = &Ссылка
			|	" + ?(ИспользуетсяОтменаТоваров И Не ОперацияСборки, "И НЕ ТаблицаТовары.Отменено", "") + "
			|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
			|
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаТовары.Ссылка,
			|	ТаблицаТовары." + ?(ЕстьСкладыВТЧ, "", "Ссылка.") + РеквизитСклада + ",
			|	" + ИсточникНазначение + ",
			|	ТаблицаТовары.Номенклатура,
			|	ТаблицаТовары.Характеристика
			|;
			|";
		КонецЕсли;
		
		ТекстЗапроса = ТекстЗапроса + 
		"////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыКПоступлениюОстатки.Склад КАК Склад,
		|	ТоварыКПоступлениюОстатки.Номенклатура КАК Номенклатура,
		|	ТоварыКПоступлениюОстатки.Характеристика КАК Характеристика,
		|	ТоварыКПоступлениюОстатки.Назначение КАК Назначение,
		|	ВЫБОР
		|		КОГДА ТаблицаТоваровДокумента.Количество > ТоварыКПоступлениюОстатки.КПоступлениюОстаток - ТоварыКПоступлениюОстатки.ПринимаетсяОстаток
		|			ТОГДА ТоварыКПоступлениюОстатки.КПоступлениюОстаток - ТоварыКПоступлениюОстатки.ПринимаетсяОстаток
		|		ИНАЧЕ ТаблицаТоваровДокумента.Количество
		|	КОНЕЦ КАК Количество,
		|	ВЫБОР
		|		КОГДА ТаблицаТоваровДокумента.Количество > ТоварыКПоступлениюОстатки.КПоступлениюОстаток - ТоварыКПоступлениюОстатки.ПринимаетсяОстаток
		|			ТОГДА ТоварыКПоступлениюОстатки.КПоступлениюОстаток - ТоварыКПоступлениюОстатки.ПринимаетсяОстаток
		|		ИНАЧЕ ТаблицаТоваровДокумента.Количество
		|	КОНЕЦ КАК КоличествоУпаковок" + ?(ОперацияСборки, "", ", 
		|	ТаблицаТоваровДокумента.НомерСтроки") + "
		|	
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению.Остатки(&ДатаПоступления, 
		|		ДокументПоступления В (ВЫБРАТЬ ОкончательноеРаспоряжение.Распоряжение
		|			ИЗ ОкончательноеРаспоряжение КАК ОкончательноеРаспоряжение)" + ?(СкладГруппа Или ЕстьСкладыВТЧ, "", " И Склад = &Склад") + ") КАК ТоварыКПоступлениюОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаТоваровДокумента КАК ТаблицаТоваровДокумента
		|			ПО ТоварыКПоступлениюОстатки.Склад = ТаблицаТоваровДокумента.Склад
		|			И ТоварыКПоступлениюОстатки.Номенклатура = ТаблицаТоваровДокумента.Номенклатура
		|			И ТоварыКПоступлениюОстатки.Характеристика = ТаблицаТоваровДокумента.Характеристика
		|			И (ТоварыКПоступлениюОстатки.Назначение = ВЫБОР
		|					КОГДА ЕСТЬNULL(ТаблицаТоваровДокумента.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
		|						ТОГДА ТаблицаТоваровДокумента.Назначение
		|					 ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) 
		|						КОНЕЦ)
		|ГДЕ НЕ ТоварыКПоступлениюОстатки.ДокументПоступления ЕСТЬ NULL
		|	И НЕ ТаблицаТоваровДокумента.Ссылка ЕСТЬ NULL
		|	И ТоварыКПоступлениюОстатки.КПоступлениюОстаток - ТоварыКПоступлениюОстатки.ПринимаетсяОстаток <> 0
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКПоступлениюОстатки.Склад,
		|	ТоварыКПоступлениюОстатки.Номенклатура,
		|	ТоварыКПоступлениюОстатки.Характеристика,
		|	ТоварыКПоступлениюОстатки.Назначение,
		|	" + ?(ОперацияСборки, "", "ТаблицаТоваровДокумента.НомерСтроки,") + "
		|	ВЫБОР
		|		КОГДА ТаблицаТоваровДокумента.Количество > ТоварыКПоступлениюОстатки.КПоступлениюОстаток - ТоварыКПоступлениюОстатки.ПринимаетсяОстаток
		|			ТОГДА ТоварыКПоступлениюОстатки.КПоступлениюОстаток - ТоварыКПоступлениюОстатки.ПринимаетсяОстаток
		|		ИНАЧЕ ТаблицаТоваровДокумента.Количество
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ТаблицаТоваровДокумента.Количество > ТоварыКПоступлениюОстатки.КПоступлениюОстаток - ТоварыКПоступлениюОстатки.ПринимаетсяОстаток
		|			ТОГДА ТоварыКПоступлениюОстатки.КПоступлениюОстаток - ТоварыКПоступлениюОстатки.ПринимаетсяОстаток
		|		ИНАЧЕ ТаблицаТоваровДокумента.Количество
		|	КОНЕЦ
		|" + ?(ОперацияСборки, "", "УПОРЯДОЧИТЬ ПО ТаблицаТоваровДокумента.НомерСтроки") + "		
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОкончательноеРаспоряжение.Распоряжение
		|ИЗ
		|	ОкончательноеРаспоряжение КАК ОкончательноеРаспоряжение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаТоваровДокумента.Склад КАК Склад
		|ИЗ
		|	ТаблицаТоваровДокумента КАК ТаблицаТоваровДокумента
		|ГДЕ 
		|	ТаблицаТоваровДокумента.Склад.ИспользоватьОрдернуюСхемуПриПоступлении
		|	И ТаблицаТоваровДокумента.Склад.ДатаНачалаОрдернойСхемыПриПоступлении <= ТаблицаТоваровДокумента.Дата";
		
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("Ссылка", ДанныеЗаполнения);
		Запрос.УстановитьПараметр("Склад", Склад);
		Запрос.УстановитьПараметр("ДатаПоступления", ДатаПоступления);
		Запрос.УстановитьПараметр("ПриемПоЗаказам", ПриемПоЗаказам);
		Запрос.УстановитьПараметр("Заказ", Заказ);
		
		ДанныеПакетногоЗапроса = Запрос.ВыполнитьПакет();
		
		ДанныеПоТоварамДокумента = ДанныеПакетногоЗапроса[НомерТаблицыСОстатками - 1];
		ДанныеПоОстаткам         = ДанныеПакетногоЗапроса[НомерТаблицыСОстатками];
		РезультатРаспоряжение    = ДанныеПакетногоЗапроса[НомерТаблицыСОстатками + 1].Выбрать();
		
		Если РезультатРаспоряжение.Количество() = 0 Тогда
			ВызватьИсключение НСтр("ru='В распоряжении отсутствуют склады, использующие ордерную схему документооборота,
                |поэтому создание приходного ордера невозможно.'
                |;uk='У розпорядженні відсутні склади, що використовують ордерну схему документообігу,
                |тому створення прибуткового ордера неможливо.'");
		КонецЕсли;
		
		Пока РезультатРаспоряжение.Следующий() Цикл
			Распоряжение = РезультатРаспоряжение.Распоряжение;
		КонецЦикла;
				
		Если ПриемПоЗаказам И НЕ ЗначениеЗаполнено(Распоряжение) Тогда
			ВызватьИсключение НСтр("ru='Невозможно создать приходный ордер, т.к. распоряжениями являются сразу несколько заказов.
            |Создать приходный ордер можно в рабочем месте ""Приемка"" раздела ""Склад"".'
            |;uk='Неможливо створити прибутковий ордер, т. я. розпорядженнями є відразу кілька замовлень.
            |Створити прибутковий ордер можна в робочому місці ""Приймання"" розділу ""Склад"".'");
		КонецЕсли;
		
		КоличествоТоваровВДокументе = 0;
		
		РезультатТоварыДокумента = ДанныеПоТоварамДокумента.Выбрать();
		Пока РезультатТоварыДокумента.Следующий() Цикл
			КоличествоТоваровВДокументе = РезультатТоварыДокумента.Количество;
		КонецЦикла;
		
		Если НЕ ЗначениеЗаполнено(Распоряжение) Тогда
			ВызватьИсключение НСтр("ru='В распоряжении отсутствуют склады, использующие ордерную схему документооборота,
            |поэтому создание приходного ордера невозможно.'
            |;uk='У розпорядженні відсутні склади, що використовують ордерну схему документообігу,
            |тому створення прибуткового ордера неможливо.'");
		КонецЕсли;
		
		Если КоличествоТоваровВДокументе = 0 Тогда
			
			ТекстСообщения = НСтр("ru='Невозможно создать приходный ордер.
                |Отсутствует номенклатура с типом ""Товар""%ИспользоватьМногооборотнуюТару%.'
                |;uk='Неможливо створити прибутковий ордер.
                |Відсутня номенклатура з типом ""Товар""%ИспользоватьМногооборотнуюТару%.'");
			
			ИспользоватьМногооборотнуюТару = ?(ПолучитьФункциональнуюОпцию("ИспользоватьМногооборотнуюТару"),
				" " + НСтр("ru='или ""Многооборотная тара""';uk='або ""Багатооборотна тара""'"), "");
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИспользоватьМногооборотнуюТару%", ИспользоватьМногооборотнуюТару); 
			
			ВызватьИсключение ТекстСообщения;
			
		КонецЕсли;
		
		СтрокаИсключения = "";
		
		Если ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ЗаказПоставщику") Тогда
			СтруктураПараметров = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Распоряжение, "Статус");
			
			Если СтруктураПараметров.Статус <> Перечисления.СтатусыЗаказовПоставщикам.КПоступлению
				И СтруктураПараметров.Статус <> Перечисления.СтатусыЗаказовПоставщикам.Закрыт Тогда
				СтрокаИсключения = НСтр("ru='Распоряжение ""%1"" находится в статусе ""%2"".
                |Ввод на основании разрешен только в статусах ""К поступлению"" и ""Закрыт"".'
                |;uk='Розпорядження ""%1"" знаходиться в статусі ""%2"".
                |Введення на підставі дозволене тільки в статусах ""До надходження"" і ""Закрито"".'");
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ЗаявкаНаВозвратТоваровОтКлиента") Тогда
			СтруктураПараметров = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Распоряжение, "Статус");
			
			Документы.ЗаявкаНаВозвратТоваровОтКлиента.ПроверитьВозможностьВводаНаОсновании(Распоряжение, СтруктураПараметров.Статус, Ложь);
			
		ИначеЕсли ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ЗаказНаПеремещение")
			Или ТипЗнч(Распоряжение) = Тип("ДокументСсылка.ЗаказНаСборку") Тогда
			СтруктураПараметров = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Распоряжение, "Статус");
			
			Если СтруктураПараметров.Статус = Перечисления.СтатусыВнутреннихЗаказов.КОбеспечению Тогда
				СтрокаИсключения = НСтр("ru='Распоряжение ""%1"" находится в статусе ""%2"".
                |Ввод на основании разрешен только в статусах ""К выполнению"" и ""Закрыт"".'
                |;uk='Розпорядження ""%1"" знаходиться в статусі ""%2"".
                |Введення на підставі дозволене тільки в статусах ""До виконання"" і ""Закрито"".'");
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаИсключения) Тогда
			СтрокаИсключения = СтрЗаменить(СтрокаИсключения, "%1", Распоряжение);
			СтрокаИсключения = СтрЗаменить(СтрокаИсключения, "%2", СтруктураПараметров.Статус);
			ВызватьИсключение СтрокаИсключения;
		КонецЕсли;
		
		СкладскаяОперация = Документы.ПриходныйОрдерНаТовары.СкладскаяОперацияПоРаспоряжению(Распоряжение);
		
		// Если склады хранятся в ТЧ и все склады одинаковые, то заполним поле "Склад" сразу.
		РезультатСклады = ДанныеПакетногоЗапроса[НомерТаблицыСОстатками + 2].Выбрать();
		Если РезультатСклады.Количество() = 1 Тогда
			РезультатСклады.Следующий();
			Склад = РезультатСклады.Склад;
		КонецЕсли;
		
		Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")
			Или ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") Тогда
			
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("НомерВходящегоДокумента");
			СтруктураПараметров.Вставить("ДатаВходящегоДокумента");
			
			СтруктураПараметров = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДанныеЗаполнения, СтруктураПараметров);
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтруктураПараметров);
			
		КонецЕсли;
		
		Товары.Загрузить(ДанныеПоОстаткам.Выгрузить());
		СкладскаяОперация = Документы.ПриходныйОрдерНаТовары.СкладскаяОперацияПоРаспоряжению(Распоряжение);
		Документы.ПриходныйОрдерНаТовары.ЗаполнитьСерииПоРаспоряжению(ЭтотОбъект, Ложь);
	
		ВсегоМест = УпаковочныеЛистыСервер.КоличествоМестВТЧ(Товары);
	Иначе
		
		ВызватьИсключение ТекстСообщенияОНекорректномСоздании;
		
	КонецЕсли;
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
		
	Если НЕ ПраваПользователяПовтИсп.ПроведениеПриходногоОрдераВОкончательномСтатусе() Тогда
		
		Если  Статус = Перечисления.СтатусыПриходныхОрдеров.Принят
			И РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
			ВызватьИсключение НСтр("ru='Недостаточно прав на проведение приходного ордера в последнем статусе.';uk='Недостатньо прав на проведення прибуткового ордера в останньому статусі.'");
			
		КонецЕсли;
		
		СтарыйСтатус = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Статус");

		Если СтарыйСтатус = Перечисления.СтатусыПриходныхОрдеров.Принят Тогда
			
			ВызватьИсключение НСтр("ru='Недостаточно прав на изменение статуса приходного ордера со статуса ""Принят"".';uk='Недостатньо прав для зміни статусу прибуткового ордера зі статусу ""Прийнятий"".'");
			
		КонецЕсли;
		
	КонецЕсли;
	
	ПроведениеСервер.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	СформироватьСписокЗависимыхЗаказов();
	
	НоменклатураСервер.ОчиститьНеиспользуемыеСерии(ЭтотОбъект, 
		НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ПриходныйОрдерНаТовары));
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ПроверитьОрдерныйСклад(Отказ);
	КонецЕсли;
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);

	Документы.ПриходныйОрдерНаТовары.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);

	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	ЗапасыСервер.ОтразитьТоварыНаСкладах(ДополнительныеСвойства, Движения, Отказ);
	ЗаказыСервер.ОтразитьТоварыКПоступлению(ДополнительныеСвойства, Движения, Отказ);
	РегистрыНакопления.ТоварыКОформлениюПоступления.ОтразитьДвижения(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьСвободныеОстатки(ДополнительныеСвойства, Движения, Отказ);
	ЗаказыСервер.ОтразитьДвижениеТоваров(ДополнительныеСвойства, Движения, Отказ);
	СкладыСервер.ОтразитьТоварыВЯчейках(ДополнительныеСвойства, Движения, Отказ);
	СкладыСервер.ОтразитьДвиженияСерийТоваров(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыКОформлениюИзлишковНедостач(ДополнительныеСвойства, Движения, Отказ);
	
	ЗапасыСервер.ОтразитьОбеспечениеЗаказов(ДополнительныеСвойства, Движения, Отказ);
	
	СформироватьСписокРегистровДляКонтроля();

	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);
	
	РегистрыСведений.СостоянияЗаказовКлиентов.ОтразитьСостояниеЗаказа(ЭтотОбъект, Отказ);
	ПроведениеСервер.ЗаписатьПодчиненныеНаборамЗаписейДанные(ЭтотОбъект, Отказ);

	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	СформироватьСписокРегистровДляКонтроля();

	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	ПроведениеСервер.ВыполнитьКонтрольРезультатовПроведения(ЭтотОбъект, Отказ);

	РегистрыСведений.СостоянияЗаказовКлиентов.ОтразитьСостояниеЗаказа(ЭтотОбъект, Отказ);
	ПроведениеСервер.ЗаписатьПодчиненныеНаборамЗаписейДанные(ЭтотОбъект, Отказ);

	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	СостояниеЗаполненияМногооборотнойТары = Перечисления.СостоянияЗаполненияМногооборотнойТары.ПустаяСсылка();
	ИнициализироватьДокумент();

КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	Если Не СкладыСервер.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач(Склад, Дата)
		И СкладскаяОперация = Перечисления.СкладскиеОперации.ВозвратНепринятыхТоваров Тогда		
		ТекстСообщения = НСтр("ru='Складская операция ""%ВозвратНепринятых%"" на складе, неордерном при отражении излишков, недостач и порчи, является архивной. Для оприходования товаров рекомендуется использовать документ ""%Оприходование%"".';uk='Складська операція ""%ВозвратНепринятых%"" на складі, неордерном при відображенні надлишків, нестач і псування, є архівною. Для оприбуткування товарів рекомендується використовувати документ ""%Оприходование%"".'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВозвратНепринятых%", Перечисления.СкладскиеОперации.ВозвратНепринятыхТоваров);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Оприходование%", Метаданные.Документы.ОприходованиеИзлишковТоваров.Синоним);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);		
	КонецЕсли;
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если Не СкладыСервер.ИспользоватьСкладскиеПомещения(Склад,Дата) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Помещение");
	КонецЕсли;
	
	АдресноеХранение = СкладыСервер.ИспользоватьАдресноеХранение(Склад, Помещение, Дата);
	ИспользоватьУпаковочныеЛисты = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковочныеЛисты");
	
	Если Не АдресноеХранение Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ЗонаПриемки");
	ИначеЕсли Не ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры") Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Упаковка");
		ТекстСообщения = НСтр("ru='В настройках программы не включено использование упаковок номенклатуры, 
        |поэтому нельзя оформить документ по складу с адресным хранением остатков. Обратитесь к администратору'
        |;uk='У настройках програми не включено використання упаковок номенклатури, 
        |тому не можна оформити документ по складу з адресним зберіганням залишків. Зверніться до адміністратора'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,,Отказ);
	КонецЕсли;	
	
	Если (Не АдресноеХранение
		Или Статус = Перечисления.СтатусыПриходныхОрдеров.КПоступлению
		Или Статус = Перечисления.СтатусыПриходныхОрдеров.ТребуетсяОбработка)Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Упаковка");
	Иначе
		ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияУпаковок();
		ПараметрыПроверки.ВыводитьНомераСтрок = Не ИспользоватьУпаковочныеЛисты;
		ПараметрыПроверки.ОтборПроверяемыхСтрок.Вставить("ЭтоУпаковочныйЛист", Ложь);
		НоменклатураСервер.ПроверитьЗаполнениеУпаковок(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ,ПараметрыПроверки);
		
		ПараметрыПроверкиУказанияМногооборотнойТары = МногооборотнаяТараСервер.ПараметрыПроверкиУказанияМногооборотнойТары();
		ПараметрыПроверкиУказанияМногооборотнойТары.ЕстьЯчейки = Ложь;
		МногооборотнаяТараСервер.ПроверитьУказаниеМногооборотнойТары(ЭтотОбъект, ПараметрыПроверкиУказанияМногооборотнойТары, Отказ);
	КонецЕсли;
	
	Если Статус = Перечисления.СтатусыПриходныхОрдеров.КПоступлению 
		Или Статус = Перечисления.СтатусыПриходныхОрдеров.ВРаботе
		Или Статус = Перечисления.СтатусыПриходныхОрдеров.ТребуетсяОбработка Тогда
	
		МассивНепроверяемыхРеквизитов.Добавить("Товары");
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Номенклатура");
		МассивНепроверяемыхРеквизитов.Добавить("Товары.КоличествоУпаковок");
		МассивНепроверяемыхРеквизитов.Добавить("Товары.Количество");
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Товары.НомерСтроки
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	&Товары КАК Товары
		|ГДЕ
		|	Товары.Штрихкод = """"
		|	И Товары.УпаковочныйЛистРодитель = ЗНАЧЕНИЕ(Документ.УпаковочныйЛист.ПустаяСсылка)
		|	И Товары.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|	И Товары.УпаковочныйЛист = ЗНАЧЕНИЕ(Документ.УпаковочныйЛист.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НомерСтроки
		|ИЗ
		|	Товары";
		
		Запрос.УстановитьПараметр("Товары",
			ЭтотОбъект.Товары.Выгрузить(,"НомерСтроки, Штрихкод, Номенклатура, УпаковочныйЛист, УпаковочныйЛистРодитель"));
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ТекстОшибки = НСтр("ru='Не заполнена колонка ""Номенклатура"" в списке ""Товары"".';uk='Не заповнена колонка ""Номенклатура"" в списку ""Товари"".'");
			Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "Номенклатура");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, , Поле, "Объект", Отказ);
		КонецЦикла;
		
	КонецЕсли;
	
	Если СкладскаяОперация = Перечисления.СкладскиеОперации.ВозвратНепринятыхТоваров
		Или СкладскаяОперация = Перечисления.СкладскиеОперации.ВозвратНепринятыхТоваровУстарел Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Распоряжение");
	КонецЕсли;
	
	
	ПараметрыПроверки = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
	ПараметрыПроверки.ВыводитьНомераСтрок = Не ИспользоватьУпаковочныеЛисты;
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект,МассивНепроверяемыхРеквизитов,Отказ,ПараметрыПроверки);
	
	НоменклатураСервер.ПроверитьЗаполнениеСерий(ЭтотОбъект,
												НоменклатураСервер.ПараметрыУказанияСерий(ЭтотОбъект, Документы.ПриходныйОрдерНаТовары),
												Отказ,
												МассивНепроверяемыхРеквизитов);
	Если Не Статус = Перечисления.СтатусыПриходныхОрдеров.КПоступлению
		И Не Статус = Перечисления.СтатусыПриходныхОрдеров.ТребуетсяОбработка Тогда
		УпаковочныеЛистыСервер.ПроверитьЗаполнениеТЧСУпаковочнымиЛистами(ЭтотОбъект, ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов, Отказ);
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	ПараметрыПроверки = ОбщегоНазначенияУТ.ПараметрыПроверкиЗаполненияКоличества();
	ПараметрыПроверки.ПроверитьВозможностьОкругления = Ложь;
	ОбщегоНазначенияУТ.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ, ПараметрыПроверки);
	
	СкладыСервер.ПроверитьОрдерностьСклада(Склад, Дата, "ПриПоступлении", Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение

Процедура ЗаполнитьТоварыПоТоварамКПоступлению(ВидЗаполнения,ДатаПоступления) Экспорт

	Если СкладскаяОперация = Перечисления.СкладскиеОперации.ПриемкаПоПеремещению Тогда
	
		Запрос = Новый Запрос;	
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТоварыКПоступлению.Номенклатура КАК Номенклатура,
		|	ТоварыКПоступлению.Характеристика КАК Характеристика,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТоварыКПоступлению.Назначение) КАК Назначение
		|ПОМЕСТИТЬ НазначенияТоваров
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению КАК ТоварыКПоступлению
		|ГДЕ
		|	ТоварыКПоступлению.ДокументПоступления = &Распоряжение
		|	И ТоварыКПоступлению.КПоступлению > 0
		|	И ТоварыКПоступлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКПоступлению.Характеристика,
		|	ТоварыКПоступлению.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НазначенияТоваров.Номенклатура,
		|	НазначенияТоваров.Характеристика,
		|	НазначенияТоваров.Назначение
		|ИЗ
		|	НазначенияТоваров КАК НазначенияТоваров
		|ГДЕ                                           
		|	НазначенияТоваров.Назначение > 1";
		
		Запрос.УстановитьПараметр("Распоряжение", Распоряжение);
		ОдноНазначениеПоТовару = Запрос.Выполнить().Пустой();
		
		СкладОтправитель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Распоряжение, "СкладОтправитель");		

		Если СкладыСервер.ИспользоватьОрдернуюСхемуПриОтгрузке(СкладОтправитель, ДатаПоступления) И ОдноНазначениеПоТовару Тогда
			
			УстановитьПривилегированныйРежим(Истина);
			
			Запрос = Новый Запрос;
			
			Если ВидЗаполнения = "НоменклатураКоличество"
				Или ВидЗаполнения = "Номенклатура" Тогда
				
				ТекстЗапроса =
				"ВЫБРАТЬ
				|	0 КАК НомерСтроки,
				|	ВложенныйЗапрос.Номенклатура,
				|	ВложенныйЗапрос.Характеристика,
				|	ВложенныйЗапрос.Упаковка,
				|   СУММА(ВложенныйЗапрос.Количество) КАК КоличествоОстаток,";
				Если ВидЗаполнения = "НоменклатураКоличество" Тогда
					
					ТекстЗапроса = ТекстЗапроса + "
					|	СУММА(ВложенныйЗапрос.КоличествоУпаковок) КАК КоличествоУпаковок,
					|	СУММА(ВложенныйЗапрос.Количество) КАК Количество ";
				Иначе
					
					ТекстЗапроса = ТекстЗапроса + "
					|	0 КАК КоличествоУпаковок, 
					|	0 КАК Количество ";
				КонецЕсли;
				ТекстЗапроса = ТекстЗапроса + "
				|ПОМЕСТИТЬ ТаблицаТовары
				|ИЗ
				|	(ВЫБРАТЬ
				|		РасходныйОрдерНаТоварыТовары.Номенклатура КАК Номенклатура,
				|		РасходныйОрдерНаТоварыТовары.Характеристика КАК Характеристика,
				|		РасходныйОрдерНаТоварыТовары.Упаковка КАК Упаковка,
				|		РасходныйОрдерНаТоварыТовары.КоличествоУпаковок КАК КоличествоУпаковок,
				|		РасходныйОрдерНаТоварыТовары.Количество КАК Количество
				|	ИЗ
				|		Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК РасходныйОрдерНаТоварыТовары
				|	ГДЕ
				|		РасходныйОрдерНаТоварыТовары.Ссылка В (ВЫБРАТЬ РАЗЛИЧНЫЕ
				|												ТоварыПоРаспоряжениям.Ссылка КАК Ссылка 
				|												ИЗ
				|													Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК ТоварыПоРаспоряжениям
				|												ГДЕ
				|													ТоварыПоРаспоряжениям.Распоряжение = &Распоряжение
				|													И ТоварыПоРаспоряжениям.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отгружен)
				|													И ТоварыПоРаспоряжениям.Ссылка.Проведен)
				|		И РасходныйОрдерНаТоварыТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить)
				|		И НЕ РасходныйОрдерНаТоварыТовары.ЭтоУпаковочныйЛист
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ПриходныйОрдерНаТовары.Номенклатура,
				|		ПриходныйОрдерНаТовары.Характеристика,
				|		ПриходныйОрдерНаТовары.Упаковка,
				|		-ПриходныйОрдерНаТовары.КоличествоУпаковок,
				|		-ПриходныйОрдерНаТовары.Количество
				|	ИЗ
				|		Документ.ПриходныйОрдерНаТовары.Товары КАК ПриходныйОрдерНаТовары
				|	ГДЕ
				|		ПриходныйОрдерНаТовары.Ссылка.Распоряжение = &Распоряжение
				|		И ПриходныйОрдерНаТовары.Ссылка <> &ТекущийПриходныйОрдер
				|		И ПриходныйОрдерНаТовары.Ссылка.Проведен
				|		И НЕ ПриходныйОрдерНаТовары.ЭтоУпаковочныйЛист) КАК ВложенныйЗапрос
				|
				|СГРУППИРОВАТЬ ПО
				|	ВложенныйЗапрос.Номенклатура,
				|	ВложенныйЗапрос.Характеристика,
				|	ВложенныйЗапрос.Упаковка
				|
				|ИМЕЮЩИЕ
				|	СУММА(ВложенныйЗапрос.Количество) > 0";
				
			ИначеЕсли ВидЗаполнения = "Количество" Тогда
			ТекстЗапроса =
				"ВЫБРАТЬ
				|	ТаблицаТоваров.Номенклатура,
				|	ТаблицаТоваров.Характеристика,
				|	ТаблицаТоваров.НомерСтроки
				|ПОМЕСТИТЬ ТаблицаНомеклатурыДляЗапроса
				|ИЗ
				|	&ТаблицаТоваров КАК ТаблицаТоваров
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВложенныйЗапрос.Номенклатура,
				|	ВложенныйЗапрос.Характеристика,
				|	ВложенныйЗапрос.Упаковка,
				|	СУММА(ВложенныйЗапрос.КоличествоУпаковок) КАК КоличествоУпаковок,
				|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
				|ПОМЕСТИТЬ ТаблицаНепринятыхТоваров
				|ИЗ
				|	(ВЫБРАТЬ
				|		РасходныйОрдерНаТоварыТовары.Номенклатура КАК Номенклатура,
				|		РасходныйОрдерНаТоварыТовары.Характеристика КАК Характеристика,
				|		РасходныйОрдерНаТоварыТовары.Упаковка КАК Упаковка,
				|		РасходныйОрдерНаТоварыТовары.КоличествоУпаковок КАК КоличествоУпаковок,
				|		РасходныйОрдерНаТоварыТовары.Количество КАК Количество
				|	ИЗ
				|		Документ.РасходныйОрдерНаТовары.ОтгружаемыеТовары КАК РасходныйОрдерНаТоварыТовары
				|	ГДЕ
				|		РасходныйОрдерНаТоварыТовары.Ссылка В (ВЫБРАТЬ РАЗЛИЧНЫЕ
				|												ТоварыПоРаспоряжениям.Ссылка КАК Ссылка 
				|												ИЗ
				|													Документ.РасходныйОрдерНаТовары.ТоварыПоРаспоряжениям КАК ТоварыПоРаспоряжениям
				|												ГДЕ
				|													ТоварыПоРаспоряжениям.Распоряжение = &Распоряжение
				|													И ТоварыПоРаспоряжениям.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отгружен)
				|													И ТоварыПоРаспоряжениям.Ссылка.Проведен)
				|		И РасходныйОрдерНаТоварыТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить)
				|		И НЕ РасходныйОрдерНаТоварыТовары.ЭтоУпаковочныйЛист
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		ПриходныйОрдерНаТовары.Номенклатура,
				|		ПриходныйОрдерНаТовары.Характеристика,
				|		ПриходныйОрдерНаТовары.Упаковка,
				|		-ПриходныйОрдерНаТовары.КоличествоУпаковок,
				|		-ПриходныйОрдерНаТовары.Количество
				|	ИЗ
				|		Документ.ПриходныйОрдерНаТовары.Товары КАК ПриходныйОрдерНаТовары
				|	ГДЕ
				|		ПриходныйОрдерНаТовары.Ссылка.Распоряжение = &Распоряжение
				|		И ПриходныйОрдерНаТовары.Ссылка <> &ТекущийПриходныйОрдер
				|		И ПриходныйОрдерНаТовары.Ссылка.Проведен
				|		И НЕ ПриходныйОрдерНаТовары.ЭтоУпаковочныйЛист)  КАК ВложенныйЗапрос
				|
				|СГРУППИРОВАТЬ ПО
				|	ВложенныйЗапрос.Номенклатура,
				|	ВложенныйЗапрос.Характеристика,
				|	ВложенныйЗапрос.Упаковка
				|
				|ИМЕЮЩИЕ
				|	СУММА(ВложенныйЗапрос.Количество) > 0
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТаблицаНомеклатурыДляЗапроса.Номенклатура,
				|	ТаблицаНомеклатурыДляЗапроса.Характеристика,
				|	МИНИМУМ(ТаблицаНомеклатурыДляЗапроса.НомерСтроки) КАК НомерСтроки
				|ПОМЕСТИТЬ ТаблицаТоваров
				|ИЗ
				|	ТаблицаНомеклатурыДляЗапроса КАК ТаблицаНомеклатурыДляЗапроса
				|
				|СГРУППИРОВАТЬ ПО
				|	ТаблицаНомеклатурыДляЗапроса.Номенклатура,
				|	ТаблицаНомеклатурыДляЗапроса.Характеристика
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ТаблицаТоваров.Номенклатура,
				|	ТаблицаТоваров.Характеристика,
				|	ТаблицаНепринятыхТоваров.Упаковка,
				|	ТаблицаНепринятыхТоваров.КоличествоУпаковок КАК КоличествоУпаковок,
				|	ТаблицаНепринятыхТоваров.Количество КАК Количество,
				|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки
				|ПОМЕСТИТЬ ТаблицаТовары
				|ИЗ
				|	ТаблицаТоваров КАК ТаблицаТоваров
				|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаНепринятыхТоваров КАК ТаблицаНепринятыхТоваров
				|		ПО ТаблицаТоваров.Номенклатура = ТаблицаНепринятыхТоваров.Номенклатура
				|			И ТаблицаТоваров.Характеристика = ТаблицаНепринятыхТоваров.Характеристика";
				
				Запрос.УстановитьПараметр("ТаблицаТоваров",Товары.Выгрузить(,"Номенклатура,Характеристика,Назначение,НомерСтроки"));
			КонецЕсли;
			
			ТекстЗапроса = ТекстЗапроса +
			"
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ТоварыКПоступлению.Номенклатура КАК Номенклатура,
			|	ТоварыКПоступлению.Характеристика КАК Характеристика,
			|	ТоварыКПоступлению.Назначение КАК Назначение
			|ПОМЕСТИТЬ НазначенияТоваров
			|ИЗ
			|	РегистрНакопления.ТоварыКПоступлению КАК ТоварыКПоступлению
			|ГДЕ
			|	ТоварыКПоступлению.ДокументПоступления = &Распоряжение
			|	И ТоварыКПоступлению.КПоступлению > 0
			|	И ТоварыКПоступлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТовары.Номенклатура,
			|	ТаблицаТовары.Характеристика,
			|	НазначенияТоваров.Назначение,
			|	ТаблицаТовары.Упаковка,
			|	ТаблицаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
			|	ТаблицаТовары.Количество КАК Количество,
			|	ТаблицаТовары.НомерСтроки КАК НомерСтроки
			|ИЗ
			|	ТаблицаТовары КАК ТаблицаТовары
			|		ЛЕВОЕ СОЕДИНЕНИЕ НазначенияТоваров КАК НазначенияТоваров
			|		ПО ТаблицаТовары.Номенклатура = НазначенияТоваров.Номенклатура
			|			И ТаблицаТовары.Характеристика = НазначенияТоваров.Характеристика
			|
			|УПОРЯДОЧИТЬ ПО
			|	ТаблицаТовары.НомерСтроки";

			Запрос.Текст = ТекстЗапроса;
			Запрос.УстановитьПараметр("Распоряжение",Распоряжение);
			Запрос.УстановитьПараметр("ТекущийПриходныйОрдер",Ссылка);
			
			Товары.Загрузить(Запрос.Выполнить().Выгрузить());
			
			
			Если ВидЗаполнения = "Количество"
				Или ВидЗаполнения = "НоменклатураКоличество" Тогда
				
				Если СкладыСервер.ИспользоватьАдресноеХранение(Склад, Помещение, Дата) Тогда
					РазбитьПоУпаковкамСправочно();
				КонецЕсли;
				
			КонецЕсли;
			
			ВсегоМест = УпаковочныеЛистыСервер.КоличествоМестВТЧ(Товары);
			
			Возврат;
		КонецЕсли;	
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Распоряжение", Распоряжение);
	Если ЗначениеЗаполнено(ДатаПоступления) Тогда
		Запрос.УстановитьПараметр("ДатаОстатков", КонецДня(ДатаПоступления));
	Иначе
		Запрос.УстановитьПараметр("ДатаОстатков", ДатаПоступления);
	КонецЕсли;
		
	Если ВидЗаполнения = "Номенклатура" Или ВидЗаполнения = "НоменклатураКоличество" Тогда

		Товары.Очистить();

		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТоварыКПоступлению.Номенклатура      КАК Номенклатура,
		|	ТоварыКПоступлению.Характеристика    КАК Характеристика,
		|	ВЫБОР КОГДА ЕСТЬNULL(ТоварыКПоступлению.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)  
		|			ТОГДА ТоварыКПоступлению.Назначение
		|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|	КОНЕЦ								   КАК Назначение,";

		Если ВидЗаполнения = "НоменклатураКоличество" Тогда

			ТекстЗапроса = ТекстЗапроса + "
				|	СУММА(ТоварыКПоступлению.Количество) КАК Количество,
				|	СУММА(ТоварыКПоступлению.Количество) КАК КоличествоУпаковок ";
		Иначе

			ТекстЗапроса = ТекстЗапроса + "
				|	СУММА(ТоварыКПоступлению.Количество) КАК КоличествоРегистр, 
				|	0 КАК КоличествоУпаковок, 
				|	0 КАК Количество ";
		КонецЕсли;

		ТекстЗапроса = ТекстЗапроса + "
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТоварыКПоступлению.Номенклатура      КАК Номенклатура,
		|		ТоварыКПоступлению.Характеристика    КАК Характеристика,
		|		ТоварыКПоступлению.Назначение    	 КАК Назначение,
		|		ТоварыКПоступлению.КПоступлениюОстаток
		|		 - ТоварыКПоступлению.ПринимаетсяОстаток КАК Количество
		|	ИЗ
		|		РегистрНакопления.ТоварыКПоступлению.Остатки(&ДатаОстатков,
		|				ДокументПоступления = &Распоряжение
		|				И Склад = &Склад) КАК ТоварыКПоступлению
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТоварыКПоступлению.Номенклатура,
		|		ТоварыКПоступлению.Характеристика,
		|		ТоварыКПоступлению.Назначение,
		|		ВЫБОР КОГДА ТоварыКПоступлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|				-ТоварыКПоступлению.КПоступлению
		|			ИНАЧЕ ТоварыКПоступлению.КПоступлению
		|			КОНЕЦ
		|			- ВЫБОР КОГДА ТоварыКПоступлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|				- ТоварыКПоступлению.Принимается
		|			ИНАЧЕ ТоварыКПоступлению.Принимается
		|		КОНЕЦ 
		|	ИЗ
		|		РегистрНакопления.ТоварыКПоступлению КАК ТоварыКПоступлению
		|	ГДЕ
		|		ТоварыКПоступлению.Регистратор = &Ссылка
		|		И ТоварыКПоступлению.Активность
		|		И ТоварыКПоступлению.Склад = &Склад
		|		И ТоварыКПоступлению.ДокументПоступления = &Распоряжение
		|
		|) КАК ТоварыКПоступлению
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыКПоступлению.Номенклатура,
		|	ТоварыКПоступлению.Характеристика,
		|	ТоварыКПоступлению.Назначение
		|
		|ИМЕЮЩИЕ
		|	СУММА(ТоварыКПоступлению.Количество) > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура.Наименование,
		|	Характеристика.Наименование
		|";
		Запрос.Текст = ТекстЗапроса;
		Результат = Запрос.Выполнить();
		Если Не Результат.Пустой() Тогда

			Товары.Загрузить(Результат.Выгрузить());

		Иначе

			ТекстСообщения = НСтр("ru='Нет товаров для заполнения по распоряжению ""%Распоряжение%"".';uk='Немає товарів для заповнення за розпорядженням ""%Распоряжение%"".'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Распоряжение%", Распоряжение);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Распоряжение");

		КонецЕсли;

	Иначе
		ТекстЗапроса =
		
		"ВЫБРАТЬ
		|	Таблица.Номенклатура КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Назначение КАК Назначение,
		|	Таблица.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ТаблицаНоменклатурыДляЗапроса
		|ИЗ
		|	&Таблица КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Таблица.Номенклатура КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Назначение КАК Назначение,
		|	МИНИМУМ(Таблица.НомерСтроки) КАК НомерСтроки
		|ПОМЕСТИТЬ ТаблицаНоменклатуры
		|ИЗ
		|	ТаблицаНоменклатурыДляЗапроса КАК Таблица
		|
		|СГРУППИРОВАТЬ ПО
		|	Таблица.Номенклатура,
		|	Таблица.Характеристика,
		|	Таблица.Назначение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыКПоступлению.Номенклатура КАК Номенклатура,
		|	ТоварыКПоступлению.Характеристика КАК Характеристика,
		|	ТоварыКПоступлению.Назначение КАК Назначение,
		|	ТоварыКПоступлению.КПоступлениюОстаток - ТоварыКПоступлению.ПринимаетсяОстаток КАК Количество
		|ПОМЕСТИТЬ ТоварыКПоступлению
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению.Остатки(&ДатаОстатков
		|			,
		|			ДокументПоступления = &Распоряжение
		|				И Склад = &Склад) КАК ТоварыКПоступлению
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТоварыКПоступлению.Номенклатура,
		|	ТоварыКПоступлению.Характеристика,
		|	ТоварыКПоступлению.Назначение,
		|	ВЫБОР
		|		КОГДА ТоварыКПоступлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА -ТоварыКПоступлению.КПоступлению
		|		ИНАЧЕ ТоварыКПоступлению.КПоступлению
		|	КОНЕЦ - ВЫБОР
		|		КОГДА ТоварыКПоступлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			ТОГДА -ТоварыКПоступлению.Принимается
		|		ИНАЧЕ ТоварыКПоступлению.Принимается
		|	КОНЕЦ
		|ИЗ
		|	РегистрНакопления.ТоварыКПоступлению КАК ТоварыКПоступлению
		|ГДЕ
		|	ТоварыКПоступлению.Регистратор = &Ссылка
		|	И ТоварыКПоступлению.Активность = ИСТИНА
		|	И ТоварыКПоступлению.Склад = &Склад
		|	И ТоварыКПоступлению.ДокументПоступления = &Распоряжение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
		|	ТаблицаНоменклатуры.Характеристика КАК Характеристика,
		|	ТаблицаНоменклатуры.Назначение КАК Назначение,
		|	МИНИМУМ(ТаблицаНоменклатуры.НомерСтроки) КАК НомерСтрокиСтарый,
		|	СУММА(ЕСТЬNULL(ТоварыКПоступлению.Количество, 0)) КАК Количество,
		|	СУММА(ЕСТЬNULL(ТоварыКПоступлению.Количество, 0)) КАК КоличествоУпаковок
		|ИЗ
		|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыКПоступлению КАК ТоварыКПоступлению
		|		ПО ТаблицаНоменклатуры.Номенклатура = ТоварыКПоступлению.Номенклатура
		|			И ТаблицаНоменклатуры.Характеристика = ТоварыКПоступлению.Характеристика
		|			И ТаблицаНоменклатуры.Назначение = ТоварыКПоступлению.Назначение
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаНоменклатуры.Номенклатура,
		|	ТаблицаНоменклатуры.Характеристика,
		|	ТаблицаНоменклатуры.Назначение
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтрокиСтарый
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаНоменклатурыДляЗапроса
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаНоменклатуры
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТоварыКПоступлению";	
		
		Запрос.УстановитьПараметр("Таблица", Товары.Выгрузить());
		Запрос.Текст = ТекстЗапроса;
		
		Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	КонецЕсли;

	Если ВидЗаполнения = "Количество"
		Или ВидЗаполнения = "НоменклатураКоличество" Тогда
		
		Если СкладыСервер.ИспользоватьАдресноеХранение(Склад, Помещение, Дата) Тогда
			РазбитьПоУпаковкамСправочно();
		КонецЕсли;
		
	КонецЕсли;
	
	ВсегоМест = УпаковочныеЛистыСервер.КоличествоМестВТЧ(Товары);
	
КонецПроцедуры

Процедура РазбитьПоУпаковкамСправочно()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Номенклатура КАК Номенклатура,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.НомерСтроки КАК НомерСтроки,
	|	Таблица.Количество КАК Количество,
	|	Таблица.Назначение КАК Назначение
	|ПОМЕСТИТЬ ТаблицаНоменклатурыДляЗапроса
	|ИЗ
	|	&Таблица КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Номенклатура КАК Номенклатура,
	|	МИНИМУМ(Таблица.НомерСтроки) КАК НомерСтроки,
	|	ВЫРАЗИТЬ(Таблица.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок КАК НаборУпаковок,
	|	Таблица.Характеристика КАК Характеристика,
	|	Таблица.Назначение КАК Назначение,
	|	СУММА(Таблица.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	ТаблицаНоменклатурыДляЗапроса КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Номенклатура,
	|	ВЫРАЗИТЬ(Таблица.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок,
	|	Таблица.Характеристика,
	|	Таблица.Назначение  
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТаблицаНоменклатуры.Количество,
	|	ТаблицаНоменклатуры.НомерСтроки,
	|	ТаблицаНоменклатуры.Характеристика КАК Характеристика,
	|	ТаблицаНоменклатуры.Назначение КАК Назначение,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоличествоВУпаковке,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ЕдиницаИзмерения.Представление, """") КАК ЕдиницаИзмеренияУпаковкиПредставление
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|		ПО (ТаблицаНоменклатуры.Номенклатура = УпаковкиНоменклатуры.Владелец
	|				ИЛИ ТаблицаНоменклатуры.НаборУпаковок = УпаковкиНоменклатуры.Владелец)
	|			И (НЕ УпаковкиНоменклатуры.ПометкаУдаления)
	|			И ТаблицаНоменклатуры.Количество >= &ТекстЗапросаКоэффициентУпаковки
	|			И (&ТекстЗапросаКоэффициентУпаковки <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаНоменклатуры.НомерСтроки,
	|	КоличествоВУпаковке,
	|	ЕдиницаИзмеренияУпаковкиПредставление";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"УпаковкиНоменклатуры",
			"ТаблицаНоменклатуры.Номенклатура"));
	
	ТаблицаНоменклатуры = Товары.Выгрузить();
	Запрос.УстановитьПараметр("Таблица",ТаблицаНоменклатуры);
	
	Товары.Очистить();
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТекНомерСтроки = Неопределено;
	ТекНоменклатура = Неопределено;
	ТекХарактеристика = Неопределено;
	ТекНазначение = Неопределено;
	Количество = Неопределено;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.НомерСтроки <> ТекНомерСтроки Тогда
			
			Если Количество <> Неопределено Тогда
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Количество = Количество;
				НоваяСтрока.КоличествоУпаковок = Количество;
				
				НоваяСтрока.Номенклатура = ТекНоменклатура;
				НоваяСтрока.Характеристика = ТекХарактеристика;
				НоваяСтрока.Назначение = ТекНазначение;
			КонецЕсли;
			
			ТекНомерСтроки              = Выборка.НомерСтроки;
			ТекНоменклатура             = Выборка.Номенклатура; 
			ТекХарактеристика           = Выборка.Характеристика;
			ТекНазначение               = Выборка.Назначение;
			
			Количество = Выборка.Количество;
			
		КонецЕсли;
		
		Если Количество <> Неопределено Тогда
			КоличествоВДокумент = Цел(Количество / Выборка.КоличествоВУпаковке);
			
			Если КоличествоВДокумент > 0 Тогда
				
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.Количество = КоличествоВДокумент * Выборка.КоличествоВУпаковке;
				НоваяСтрока.КоличествоУпаковок = КоличествоВДокумент;
				НоваяСтрока.Упаковка = Выборка.Упаковка;
				
				НоваяСтрока.Номенклатура = ТекНоменклатура;
				НоваяСтрока.Характеристика = ТекХарактеристика;
				НоваяСтрока.Назначение = ТекНазначение;
				
				Если Количество = КоличествоВДокумент * Выборка.КоличествоВУпаковке Тогда
					Количество = Неопределено;
				Иначе
					Количество = Количество - КоличествоВДокумент * Выборка.КоличествоВУпаковке;
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если Количество <> Неопределено Тогда
		НоваяСтрока = Товары.Добавить();
		НоваяСтрока.Количество = Количество;
		НоваяСтрока.КоличествоУпаковок = Количество;
		НоваяСтрока.Номенклатура = ТекНоменклатура;
		НоваяСтрока.Характеристика = ТекХарактеристика;
		НоваяСтрока.Назначение = ТекНазначение;
	КонецЕсли;
	
КонецПроцедуры

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)

	Ответственный = Пользователи.ТекущийПользователь();
	Статус        = Метаданные().Реквизиты.Статус.ЗначениеЗаполнения;
	
	Склад = ЗначениеНастроекПовтИсп.ПолучитьСкладПоУмолчанию(Склад);
	Если ЗначениеЗаполнено(Склад) Тогда
		Если СкладыСервер.ИспользоватьАдресноеХранение(Склад,Помещение,Дата) Тогда
			ЗонаПриемки = Справочники.СкладскиеЯчейки.ЗонаПриемкиПоУмолчанию(Склад,Помещение,ЗонаПриемки);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура СформироватьСписокРегистровДляКонтроля()
	
	Массив = Новый Массив;
	
	Если Не СкладскаяОперация = Перечисления.СкладскиеОперации.ВозвратНепринятыхТоваров Тогда
		Массив.Добавить(Движения.ОбеспечениеЗаказов);
	КонецЕсли;
	
	ДополнительныеСвойства.ДляПроведения.Вставить("РегистрыДляКонтроля", Массив);
	
КонецПроцедуры

Процедура ПроверитьОрдерныйСклад(Отказ)
	
	Если Не СкладыСервер.ИспользоватьОрдернуюСхемуПриПоступлении(Склад, Дата) Тогда
		
		Отказ = Истина;
		
		ТекстСообщения = НСтр("ru='На складе ""%Склад%"" на %Дата% не используется ордерная схема при поступлении.';uk='На складі ""%Склад%"" на %Дата% не використовується ордерна схема при надходженні.'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Склад%",Склад);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,"%Дата%",Формат(Дата, "ДФ=dd.MM.yyyy"));
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьСписокЗависимыхЗаказов()
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Назначения.Заказ КАК ЗаказКлиента
	|ИЗ
	|	Справочник.Назначения КАК Назначения
	|ГДЕ
	|	Назначения.Ссылка В(&МассивНазначений)
	|	И (Назначения.Заказ ССЫЛКА Документ.ЗаказКлиента
	|			ИЛИ Назначения.Заказ ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента)
	|
	|СГРУППИРОВАТЬ ПО
	|	Назначения.Заказ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПриходныйОрдерНаТоварыТовары.Назначение.Заказ
	|ИЗ
	|	Документ.ПриходныйОрдерНаТовары.Товары КАК ПриходныйОрдерНаТоварыТовары
	|ГДЕ
	|	ПриходныйОрдерНаТоварыТовары.Ссылка = &Ссылка
	|	И (ПриходныйОрдерНаТоварыТовары.Назначение.Заказ ССЫЛКА Документ.ЗаказКлиента
	|			ИЛИ ПриходныйОрдерНаТоварыТовары.Назначение.Заказ ССЫЛКА Документ.ЗаявкаНаВозвратТоваровОтКлиента)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриходныйОрдерНаТоварыТовары.Назначение.Заказ";
	
	Запрос.УстановитьПараметр("МассивНазначений", ЭтотОбъект.Товары.ВыгрузитьКолонку("Назначение"));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	
	МассивЗависимыхЗаказов = Результат.Выгрузить().ВыгрузитьКолонку("ЗаказКлиента");
	ЭтотОбъект.ДополнительныеСвойства.Вставить("МассивЗависимыхЗаказовКлиентов", Новый ФиксированныйМассив(МассивЗависимыхЗаказов));
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли