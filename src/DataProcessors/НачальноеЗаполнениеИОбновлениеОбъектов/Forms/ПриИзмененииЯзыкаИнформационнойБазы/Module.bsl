#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЯзыкИнформационнойБазы = Локализация.КодЯзыкаИнформационнойБазы();
	ЯзыкПользователя       = Локализация.КодЯзыкаИнтерфейса();
	
	КешМетаданныхДерево = Обработки.НачальноеЗаполнениеИОбновлениеОбъектов.ПолучитьДеревоОбъектовСНачальнымЗаполнением(Истина);
	
	СписокВыбора = Элементы.ТипОбъекта.СписокВыбора;
	СписокВыбора.Добавить("ВсеОбъекты", НСтр("ru='Все объекты';uk='Всі об''єкти'"));
	Для каждого СтрокаОписанияРазделаМетаданных Из КешМетаданныхДерево.Строки Цикл
		СписокВыбора.Добавить(СтрокаОписанияРазделаМетаданных.Имя, СтрокаОписанияРазделаМетаданных.Представление);
	КонецЦикла;
	
	ТипОбъекта = "ВсеОбъекты";
	
	ЗначениеВРеквизитФормы(КешМетаданныхДерево, "КешМетаданных");
	
	ОбработатьУстановкуТипаОбъекта();
	
	ЗаполнитьСинонимы = Истина;
	ЗаполнитьИдентификаторыОбъектовМетаданных = Истина;
	ЗаполнитьОписанияОтчетов = Истина;
	
	УстановитьДоступность(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТипОбъектаПриИзменении(Элемент)
	
	ОбработатьУстановкуТипаОбъекта();
	
	УстановитьДоступность(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеОбъектаПриИзменении(Элемент)
	
	УстановитьДоступность(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗаполнить(Команда)
	
	// Установка обычного цвета всех пунктов.
	ВыделитьИзменения("
		|ЗаполнитьСинонимы,
		|ЗаполнитьИдентификаторыОбъектовМетаданных,
		|ЗаполнитьОписанияОтчетов
		|",
		
		Ложь
	);
	
	ЕстьИзменения = Ложь;
	ЗаполнитьНаСервере(ЕстьИзменения);
	
	Если ЕстьИзменения Тогда
		Текст = НСтр("ru='Обновление выполнено успешно.';uk='Оновлення виконане успішно.'");
	Иначе
		Текст = НСтр("ru='Обновление не требуется.';uk='Оновлення не потрібно.'");
	КонецЕсли;
		
	ПоказатьПредупреждение(, Текст);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьФормуОбъекта(Команда)
	
	ОткрытьФорму(ТипОбъекта+"."+НаименованиеОбъекта+".ФормаСписка");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступность(ЭтаФорма)
	
	НеобходимоУказатьКонкретныйОбъект = ЗначениеЗаполнено(ЭтаФорма.ТипОбъекта) И ЭтаФорма.ТипОбъекта <> "ВсеОбъекты";
	УказанКонкретныйОбъект            = НеобходимоУказатьКонкретныйОбъект И ЗначениеЗаполнено(ЭтаФорма.НаименованиеОбъекта);
	
	Элементы = ЭтаФорма.Элементы;
	
	Элементы.Перезаполнить.Доступность = УказанКонкретныйОбъект ИЛИ (ЭтаФорма.ТипОбъекта = "ВсеОбъекты");
	Элементы.Открыть.Доступность       = УказанКонкретныйОбъект;
	
	Элементы.НаименованиеОбъекта.Доступность = НеобходимоУказатьКонкретныйОбъект;	
	
	Элементы.ДекорацияЯзыкиНеСовпадают.Видимость = (ЭтаФорма.ЯзыкИнформационнойБазы <> ЭтаФорма.ЯзыкПользователя);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьУстановкуТипаОбъекта()
	
	КешМетаданныхДерево = РеквизитФормыВЗначение("КешМетаданных");
	
	НаименованиеОбъекта = "";
		
	СписокВыбора = Элементы.НаименованиеОбъекта.СписокВыбора;
	СписокВыбора.Очистить();
	Если ЗначениеЗаполнено(ЭтаФорма.ТипОбъекта) И ЭтаФорма.ТипОбъекта <> "ВсеОбъекты" Тогда
		СтрокаДереваСНужнымРазделом = КешМетаданныхДерево.Строки.Найти(ЭтаФорма.ТипОбъекта, "Имя", Ложь);
		Для каждого ИмяОбъектаМетаданных из СтрокаДереваСНужнымРазделом.Строки Цикл
			СписокВыбора.Добавить(ИмяОбъектаМетаданных.Имя, ИмяОбъектаМетаданных.Представление);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере(ЕстьОбщиеИзменения)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ЗаполнитьСинонимы Тогда
		Если ТипОбъекта = "ВсеОбъекты" Тогда
			Обработки.НачальноеЗаполнениеИОбновлениеОбъектов.ЗаполнитьВсеОбъекты(Ложь, Истина, Ложь,Истина);
		Иначе	
			Обработки.НачальноеЗаполнениеИОбновлениеОбъектов.ЗаполнитьОбъект(ТипОбъекта, НаименованиеОбъекта, Ложь, Истина, Ложь,Истина);
		КонецЕсли;
		ЕстьИзменения = Истина;
		Если ЕстьИзменения Тогда
			ЕстьОбщиеИзменения = Истина;
			ВыделитьИзменения("ЗаполнитьСинонимы");
		КонецЕсли;
	КонецЕсли;
	
	Если ЗаполнитьИдентификаторыОбъектовМетаданных Тогда
		ЕстьИзменения = Ложь;
		Справочники.ИдентификаторыОбъектовМетаданных.ОбновитьДанныеСправочника(ЕстьИзменения);
		Если ЕстьИзменения Тогда
			ЕстьОбщиеИзменения = Истина;
			ВыделитьИзменения("ЗаполнитьИдентификаторыОбъектовМетаданных");
		КонецЕсли;
	КонецЕсли; 
	
	Если ЗаполнитьОписанияОтчетов Тогда
		
		ЕстьИзменения = Ложь;
		
 		ДеревоВариантов = ВариантыОтчетов.ДеревоПредопределенных("Внутренний");
		
		Запрос = Новый Запрос("ВЫБРАТЬ * ИЗ Справочник.ПредопределенныеВариантыОтчетов УПОРЯДОЧИТЬ ПО ПометкаУдаления");
		ТаблицаПредопределенные = Запрос.Выполнить().Выгрузить();
		
		ПоискВарианта = Новый Структура("Отчет, КлючВарианта");
		
		Для Каждого ВариантИзБазы Из ТаблицаПредопределенные Цикл
			ЗаполнитьЗначенияСвойств(ПоискВарианта, ВариантИзБазы, "Отчет, КлючВарианта");
			Найденные = ДеревоВариантов.Строки.НайтиСтроки(ПоискВарианта, Истина);
			Если Найденные.Количество() = 0 Тогда
				Продолжить; 
			Иначе
				Для Каждого ОписаниеВарианта Из Найденные Цикл
					
					ВариантОбъект = ВариантИзБазы.Ссылка.ПолучитьОбъект();
					
					ЕстьИзмененияВарианта = Ложь; 
					Если ВариантОбъект.Наименование <> ОписаниеВарианта.Наименование Тогда
						ВариантОбъект.Наименование = ОписаниеВарианта.Наименование;
						ЕстьИзмененияВарианта = Истина; 
						ЕстьИзменения = Истина;
					КонецЕсли; 
					Если ВариантОбъект.Описание <> ОписаниеВарианта.Описание Тогда
						ВариантОбъект.Описание = ОписаниеВарианта.Описание;
						ЕстьИзмененияВарианта = Истина; 
						ЕстьИзменения = Истина;
					КонецЕсли; 
					
					Если ЕстьИзмененияВарианта Тогда
						ВариантОбъект.ДополнительныеСвойства.Вставить("ЗаполнениеПриИзмененииЯзыкаИнформационнойБазы", Истина);
						ОбновлениеИнформационнойБазы.ЗаписатьДанные(ВариантОбъект, Ложь, Ложь);
					КонецЕсли; 
					
					ОтборВарианта = Новый Структура("ПредопределенныйВариант", ВариантОбъект.Ссылка); 
					ВыборкаВариантов = Справочники.ВариантыОтчетов.Выбрать(,,ОтборВарианта);
					Пока ВыборкаВариантов.Следующий() Цикл
						ЕстьИзмененияСпрВариантОбъект = Ложь;
						СпрВариантОбъект = ВыборкаВариантов.ПолучитьОбъект();
						Если СпрВариантОбъект.Наименование <> ВариантОбъект.Наименование Тогда
							СпрВариантОбъект.Наименование = ВариантОбъект.Наименование;
							ЕстьИзмененияСпрВариантОбъект = Истина;
						КонецЕсли; 
						Если СпрВариантОбъект.Описание <> ВариантОбъект.Описание Тогда
							СпрВариантОбъект.Описание = ВариантОбъект.Описание;
							ЕстьИзмененияСпрВариантОбъект = Истина;
						КонецЕсли; 
						Если ЕстьИзмененияСпрВариантОбъект Тогда
							ОбновлениеИнформационнойБазы.ЗаписатьДанные(СпрВариантОбъект, Ложь, Ложь);
							ЕстьИзменения = Истина;
						КонецЕсли; 
					КонецЦикла; 
					
				КонецЦикла; 
				
			КонецЕсли;
		КонецЦикла;
		
		Если ЕстьИзменения Тогда
			ЕстьОбщиеИзменения = Истина;
			ВыделитьИзменения("ЗаполнитьОписанияОтчетов");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьНаСервере

&НаСервере
Процедура ВыделитьИзменения(ИменаЭлементов, ЕстьИзменения = Истина)
	
	Если ТекущийВариантИнтерфейсаКлиентскогоПриложения() = ВариантИнтерфейсаКлиентскогоПриложения.Версия8_2 Тогда
		ЦветИзменения = Новый Цвет(0, 128, 0); // Зеленый Web.
	Иначе
		ЦветИзменения = Новый Цвет(0, 0, 255); // Синий Web.
	КонецЕсли;
	ЦветОбычный   = Элементы.ЯзыкИнформационнойБазы.ЦветТекстаЗаголовка; // Авто.
	
	ОписаниеЭлементов = Новый Структура(ИменаЭлементов);
	Для каждого ОписаниеЭлемента Из ОписаниеЭлементов Цикл
		Элементы[ОписаниеЭлемента.Ключ].ЦветТекстаЗаголовка = ?(ЕстьИзменения, ЦветИзменения, ЦветОбычный);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

	
