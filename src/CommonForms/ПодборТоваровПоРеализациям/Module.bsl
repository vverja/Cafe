
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ИспользоватьСоглашенияСКлиентами = ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами");
	ИспользоватьНаправленияДеятельности = ПолучитьФункциональнуюОпцию("ИспользоватьУчетДоходовПоНаправлениямДеятельности");
	
	Элементы.ТаблицаТоваровОткрытьКарточкуТовара.Видимость = ОбщегоНазначенияУТКлиентСервер.АвторизованВнешнийПользователь();
	
	ДокументВозврата = Параметры.ДокументВозврата;
	Валюта = Параметры.Валюта;
	Дата = Параметры.Дата;
	ЦенаВключаетНДС = Параметры.ЦенаВключаетНДС;
	Партнер = Параметры.Партнер;
	Соглашение = Параметры.Соглашение;
	Организация = Параметры.Организация;
	Контрагент = Параметры.Контрагент;
	ВозвратОтРозничногоПокупателя = Параметры.ВозвратОтРозничногоПокупателя;
	ЧекККМ = Параметры.ЧекККМ;
	НаправлениеДеятельности = Параметры.НаправлениеДеятельности;
	
	Период = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ПодборТоваровПоРеализациям","ПериодПодбораТоваровПоРеализациям");
	Если Период.ДатаОкончания = Дата(1, 1, 1) Тогда
		Период.Вариант = ВариантСтандартногоПериода.Месяц;
	КонецЕсли;
	
	ЗаполнитьТаблицуТоваров();
	РассчитатьИтогиПоТаблицеТоваров();
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТоварыИнформационнаяНадпись,
		ТоварыВыбраноКоличество,
		ТоварыВыбраноСумма,
		Валюта);
	
	ИспользоватьМногооборотнуюТару = ПолучитьФункциональнуюОпцию("ИспользоватьМногооборотнуюТару");
	ЕстьПравоНаТару = ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ПереданнаяВозвратнаяТара);
	Если ИспользоватьМногооборотнуюТару И Параметры.ПоказыватьТару И ЕстьПравоНаТару Тогда
		
		ЗаполнитьТаблицуТары();
		РассчитатьИтогиПоТаблицеТары();
		ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
			ТараИнформационнаяНадпись,
			ТараВыбраноКоличество,
			ТараВыбраноСумма,
			Валюта);
		
		Если Не Параметры.ПоказыватьТовары Тогда
			Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
			Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаТара;
		Иначе
			Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаТовары;
		КонецЕсли;
		
	Иначе
		
		Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаТовары;
		
	КонецЕсли;
	
	МассивЭлементов = Новый Массив();
	МассивЭлементов.Добавить("ТаблицаТары");
	МассивЭлементов.Добавить("ТараИнформационнаяНадписьОтборы");
	МассивЭлементов.Добавить("ТараИнформационнаяНадпись");
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "Видимость", ИспользоватьМногооборотнуюТару И Параметры.ПоказыватьТару);
		
	МассивЭлементов = Новый Массив();
	МассивЭлементов.Добавить("ПериодВариант");
	МассивЭлементов.Добавить("ПериодДатаНачала");
	МассивЭлементов.Добавить("ПериодДатаОкончания");
	МассивЭлементов.Добавить("Обновить");
	МассивЭлементов.Добавить("ТаблицаТоваров");
	МассивЭлементов.Добавить("ТоварыИнформационнаяНадпись");
	МассивЭлементов.Добавить("ТоварыИнформационнаяНадписьОтборы");
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "Видимость", Параметры.ПоказыватьТовары);
	
	ПодборТоваровКлиентСервер.СформироватьЗаголовокФормыПодбора(Заголовок, ДокументВозврата);
	СформироватьИнформационнуюНадписьОтборы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ЗакрытьФормуПринудительно Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	Если Не ПеренестиВДокумент И ТоварыВыбраноКоличество > 0 Тогда
		
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ВопросПодобранныеТоварыНеПеренесеныВДокументЗавершение", ЭтотОбъект),
			НСтр("ru='Подобранные товары не перенесены в документ. Перенести?';uk='Підібрані товари не перенесені в документ. Перенести?'"),
			РежимДиалогаВопрос.ДаНетОтмена);
		
	Иначе
		
		ПередЗакрытиемФрагмент();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПодобранныеТоварыНеПеренесеныВДокументЗавершение(ОтветНаВопрос, ДополнительныеПараметры) Экспорт
	
	Если ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
		
		ПеренестиВДокумент = Истина;
		ПередЗакрытиемФрагмент();
		
	ИначеЕсли ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
		
		ЗакрытьФормуПринудительно = Истина;
		ПеренестиВДокумент = Ложь;
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемФрагмент()
	
	ПереноситьЧек = ПроверитьВозможностьПереносаЧекаККМ();
	Если ПеренестиВДокумент И НЕ ПереноситьЧек Тогда
		
		ВариантыОтветов = Новый СписокЗначений;
		ВариантыОтветов.Добавить(КодВозвратаДиалога.Да, НСтр("ru='Перенести без чека ККМ';uk='Перенести без чека ККМ'"));
		ВариантыОтветов.Добавить(КодВозвратаДиалога.Нет, НСтр("ru='Вернуться';uk='Повернутися'"));
		
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ПередЗакрытиемФрагментВопросЗавершение", ЭтотОбъект),
			НСтр("ru='Выбраны товары из разных чеков ККМ. Чек ККМ не будет заполнен. Перенести товары без чека ККМ?';uk='Вибрані товари з різних чеків ККМ. Чек ККМ не буде заповнений. Перенести товари без чека ККМ?'"),
			ВариантыОтветов);
		
	Иначе
		
		ЗакрытьФормуПринудительно = Истина;
		Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемФрагментВопросЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		ПеренестиВДокумент = Ложь;
	Иначе
		ЗакрытьФормуПринудительно = Истина;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если ПеренестиВДокумент Тогда
		
		АдресТоваровВХранилище = ПоместитьТоварыВХранилище();
		Структура = Новый Структура("АдресТоваровВХранилище", АдресТоваровВХранилище);
		ОповеститьОВыборе(Структура);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ПодборТоваровПоРеализациям","ПериодПодбораТоваровПоРеализациям", Период);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаСервере
Процедура ТаблицаТоваровВыбранПриИзмененииНаСервере()
	
	ТекущиеДанные = ТаблицаТоваров.НайтиПоИдентификатору(Элементы.ТаблицаТоваров.ТекущаяСтрока);
	
	ЗнакСложения = ?(ТекущиеДанные.Выбран, 1, -1);
	ТоварыВыбраноКоличество = ТоварыВыбраноКоличество + ЗнакСложения;
	ТоварыВыбраноСумма = ТоварыВыбраноСумма + ТекущиеДанные.СуммаСНДС*ЗнакСложения;
	
	НоменклатураНабора       = ТекущиеДанные.НоменклатураНабора;
	ХарактеристикаНабора     = ТекущиеДанные.ХарактеристикаНабора;
	ВариантРасчетаЦеныНабора = ТекущиеДанные.ВариантРасчетаЦеныНабора;
	ДокументРеализации       = ТекущиеДанные.ДокументРеализации;
	
	Если ЗначениеЗаполнено(НоменклатураНабора) И (ВариантРасчетаЦеныНабора = Перечисления.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоДолям
		ИЛИ ВариантРасчетаЦеныНабора = Перечисления.ВариантыРасчетаЦенНаборов.ЦенаЗадаетсяЗаНаборРаспределяетсяПоЦенам) Тогда
		
		ТоварыВыбраноСумма = 0;
		ТоварыВыбраноКоличество = 0;
		
		Для Каждого СтрокаТЧ Из ТаблицаТоваров Цикл
			
			Если  СтрокаТЧ.НоменклатураНабора = НоменклатураНабора
				И СтрокаТЧ.ХарактеристикаНабора = ХарактеристикаНабора
				И СтрокаТЧ.ДокументРеализации = ДокументРеализации Тогда
				СтрокаТЧ.Выбран = ТекущиеДанные.Выбран;
			КонецЕсли;
			
			Если СтрокаТЧ.Выбран Тогда
				ТоварыВыбраноСумма = ТоварыВыбраноСумма + СтрокаТЧ.СуммаСНДС;
				ТоварыВыбраноКоличество = ТоварыВыбраноКоличество + СтрокаТЧ.КоличествоУпаковок;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(ТоварыИнформационнаяНадпись, ТоварыВыбраноКоличество, ТоварыВыбраноСумма, Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТоваровВыбранПриИзменении(Элемент)
	
	ТаблицаТоваровВыбранПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТарыВыбранПриИзменении(Элемент)
	
	Данные = Элементы.ТаблицаТары.ТекущиеДанные;
	
	ЗнакСложения = ?(Данные.Выбран, 1, -1);
	ТараВыбраноКоличество = ТараВыбраноКоличество + ЗнакСложения;
	ТараВыбраноСумма = ТараВыбраноСумма + Данные.Сумма*ЗнакСложения;
	
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТараИнформационнаяНадпись,
		ТараВыбраноКоличество,
		ТараВыбраноСумма,
		Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТоваровВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ОбщегоНазначенияУТКлиентСервер.АвторизованВнешнийПользователь()
		И Поле.Имя = "ТаблицаТоваровНоменклатура"
		ИЛИ Поле.Имя = "ТаблицаТоваровХарактеристика"
		ИЛИ Поле.Имя = "ТаблицаТоваровСерия" Тогда
		
		ОткрытьКарточкуНоменклатуры();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокументВыполнить()
	
	ПеренестиВДокумент = Истина;
	ЗакрытьФормуПринудительно = Истина;
	Закрыть(КодВозвратаДиалога.OK);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьТовары()
	
	ВыбратьВсеТоварыНаСервере();
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(ТоварыИнформационнаяНадпись, ТоварыВыбраноКоличество, ТоварыВыбраноСумма, Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьТовары()
	
	ИсключитьВсеТоварыНаСервере();
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(ТоварыИнформационнаяНадпись, ТоварыВыбраноКоличество, ТоварыВыбраноСумма, Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВыделенныеТовары(Команда)
	
	МассивСтрок = Элементы.ТаблицаТоваров.ВыделенныеСтроки;
	Для Каждого ИдентификаторСтроки Из МассивСтрок Цикл
		Строка = ТаблицаТоваров.НайтиПоИдентификатору(ИдентификаторСтроки);
		Если Не Строка.Выбран Тогда
			Строка.Выбран = Истина;
			ТоварыВыбраноКоличество = ТоварыВыбраноКоличество + 1;
			ТоварыВыбраноСумма = ТоварыВыбраноСумма + Строка.СуммаСНДС;
		КонецЕсли;
	КонецЦикла;
	
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(ТоварыИнформационнаяНадпись, ТоварыВыбраноКоличество, ТоварыВыбраноСумма, Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьВыделенныеТовары(Команда)
	
	МассивСтрок = Элементы.ТаблицаТоваров.ВыделенныеСтроки;
	Для Каждого ИдентификаторСтроки Из МассивСтрок Цикл
		Строка = ТаблицаТоваров.НайтиПоИдентификатору(ИдентификаторСтроки);
		Если Строка.Выбран Тогда
			Строка.Выбран = Ложь;
			ТоварыВыбраноКоличество = ТоварыВыбраноКоличество - 1;
			ТоварыВыбраноСумма = ТоварыВыбраноСумма - Строка.СуммаСНДС;
		КонецЕсли;
	КонецЦикла;
	
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(ТоварыИнформационнаяНадпись, ТоварыВыбраноКоличество, ТоварыВыбраноСумма, Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьТару()
	
	ВыбратьВсюТаруНаСервере();
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТараИнформационнаяНадпись,
		ТараВыбраноКоличество,
		ТараВыбраноСумма,
		Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьТару()
	
	ИсключитьВсюТаруНаСервере();
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТараИнформационнаяНадпись,
		ТараВыбраноКоличество,
		ТараВыбраноСумма,
		Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВыделеннуюТару(Команда)
	
	МассивСтрок = Элементы.ТаблицаТары.ВыделенныеСтроки;
	Для Каждого ИдентификаторСтроки Из МассивСтрок Цикл
		Строка = ТаблицаТары.НайтиПоИдентификатору(ИдентификаторСтроки);
		Если Не Строка.Выбран Тогда
			Строка.Выбран = Истина;
			ТараВыбраноКоличество = ТараВыбраноКоличество + 1;
			ТараВыбраноСумма = ТараВыбраноСумма + Строка.Сумма;
		КонецЕсли;
	КонецЦикла;
	
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТараИнформационнаяНадпись,
		ТараВыбраноКоличество,
		ТараВыбраноСумма,
		Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьВыделеннуюТару(Команда)
	
	МассивСтрок = Элементы.ТаблицаТары.ВыделенныеСтроки;
	Для Каждого ИдентификаторСтроки Из МассивСтрок Цикл
		Строка = ТаблицаТары.НайтиПоИдентификатору(ИдентификаторСтроки);
		Если Строка.Выбран Тогда
			Строка.Выбран = Ложь;
			ТараВыбраноКоличество = ТараВыбраноКоличество - 1;
			ТараВыбраноСумма = ТараВыбраноСумма - Строка.Сумма;
		КонецЕсли;
	КонецЦикла;
	
	ПодборТоваровКлиентСервер.СформироватьИнформационнуюНадписьПодобранныхТоваров(
		ТараИнформационнаяНадпись,
		ТараВыбраноКоличество,
		ТараВыбраноСумма,
		Валюта);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТовары(Команда)
	
	ЗаполнитьТаблицуТоваров();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТару(Команда)
	
	ЗаполнитьТаблицуТары();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодВариантПриИзменении(Элемент)
	
	ЗаполнитьТаблицуТоваров();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКарточкуТовара(Команда)
	
	ОткрытьКарточкуНоменклатуры();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//
	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаТоваровСуммаРучнойСкидки.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаТоваровПроцентРучнойСкидки.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СуммаРучнойСкидки");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;

	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаТоваровСуммаАвтоматическойСкидки.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаТоваровПроцентАвтоматическойСкидки.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СуммаАвтоматическойСкидки");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;

	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

	//

	НоменклатураСервер.УстановитьУсловноеОформлениеЕдиницИзмерения(ЭтаФорма, 
																   "ТаблицаТоваровНоменклатураЕдиницаИзмерения", 
                                                                   "ТаблицаТоваров.Упаковка");

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаТарыДатаВозврата.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаТары.ДатаВозврата");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Меньше;
	ОтборЭлемента.ПравоеЗначение = Новый СтандартнаяДатаНачала(ВариантСтандартнойДатыНачала.НачалоЭтогоДня);

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ПросроченныеДанныеЦвет);

КонецПроцедуры

#Область Прочее

&НаСервере
Функция ПоместитьТоварыВХранилище()
	
	Товары = ТаблицаТоваров.Выгрузить(ТаблицаТоваров.НайтиСтроки(Новый Структура("Выбран", Истина)));
	СтруктураШапки = Новый Структура("ЧекККМ,Партнер",
										Документы.ЧекККМ.ПустаяСсылка(),
										Партнер);
	
	Если ВозвратОтРозничногоПокупателя Тогда
		
		ТаблицаОснований = ТаблицаТоваров.Выгрузить(ТаблицаТоваров.НайтиСтроки(Новый Структура("Выбран", Истина)));
		ТаблицаОснований.Свернуть("ДокументРеализации,Партнер");
		
		Если ТаблицаОснований.Количество() = 1 Тогда
			СтрокаТаблицы = ТаблицаОснований.Получить(0);
			СтруктураШапки.ЧекККМ = СтрокаТаблицы.ДокументРеализации;
			СтруктураШапки.Партнер = СтрокаТаблицы.Партнер;
		КонецЕсли;
		
	Иначе
		
		Для Каждого ТекСтрока Из ТаблицаТары Цикл
			Если ТекСтрока.Выбран Тогда
				НоваяСтрока = Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
				НоваяСтрока.КоличествоУпаковок = ТекСтрока.Количество;
				НоваяСтрока.СуммаСНДС = ТекСтрока.Сумма;
				НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
			КонецЕсли;
		КонецЦикла;
	
	КонецЕсли; 
	
	АдресТоваровВХранилище = ПоместитьВоВременноеХранилище(Новый Структура("Товары,СтруктураШапки", Товары, СтруктураШапки), УникальныйИдентификатор);
	
	Возврат АдресТоваровВХранилище;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуТоваров()
	
	ТаблицаТоваров.Очистить();
	
	Запрос = Новый Запрос;
	Если НЕ ВозвратОтРозничногоПокупателя Тогда
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РеализацияТоваровУслуг.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ДокументыРеализации
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И РеализацияТоваровУслуг.Проведен
		|	И РеализацияТоваровУслуг.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.Отгружено)
		|	И РеализацияТоваровУслуг.Контрагент = &Контрагент
		|	И РеализацияТоваровУслуг.Организация = &Организация
		|	И ВЫБОР
		|		КОГДА НЕ &ИспользоватьСоглашенияСКлиентами
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ РеализацияТоваровУслуг.Соглашение = &Соглашение
		|	  КОНЕЦ
		|	И РеализацияТоваровУслуг.Партнер = &Партнер
		|	И ВЫБОР
		|		КОГДА НЕ &ИспользоватьНаправленияДеятельности
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ РеализацияТоваровУслуг.НаправлениеДеятельности = &НаправлениеДеятельности
		|	  КОНЕЦ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДокументыРеализации.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ СсылкиНаРеализации
		|ИЗ
		|	ДокументыРеализации КАК ДокументыРеализации
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РеализацияТоваровУслугТовары.НоменклатураНабора КАК НоменклатураНабора,
		|	РеализацияТоваровУслугТовары.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|	РеализацияТоваровУслугТовары.Номенклатура КАК Номенклатура,
		|	РеализацияТоваровУслугТовары.Характеристика КАК Характеристика,
		|	РеализацияТоваровУслугТовары.Серия КАК Серия,
		|	СУММА(РеализацияТоваровУслугТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	СУММА(РеализацияТоваровУслугТовары.Количество) КАК Количество,
		|	РеализацияТоваровУслугТовары.Цена КАК Цена,
		|	РеализацияТоваровУслугТовары.Ссылка КАК ДокументРеализации,
		|	РеализацияТоваровУслугТовары.Упаковка КАК Упаковка,
		|	РеализацияТоваровУслугТовары.ВидЦены КАК ВидЦены,
		|	РеализацияТоваровУслугТовары.Сумма КАК Сумма,
		|	РеализацияТоваровУслугТовары.СтавкаНДС КАК СтавкаНДС,
		|	РеализацияТоваровУслугТовары.СуммаНДС КАК СуммаНДС,
		|	РеализацияТоваровУслугТовары.СуммаСНДС КАК СуммаСНДС,
		|	РеализацияТоваровУслугТовары.Склад КАК Склад,
		|	РеализацияТоваровУслугТовары.Упаковка,
		|	РеализацияТоваровУслугТовары.СуммаРучнойСкидки КАК СуммаРучнойСкидки,
		|	РеализацияТоваровУслугТовары.СуммаАвтоматическойСкидки КАК СуммаАвтоматическойСкидки,
		|	РеализацияТоваровУслугТовары.ПроцентРучнойСкидки КАК ПроцентРучнойСкидки,
		|	РеализацияТоваровУслугТовары.ПроцентАвтоматическойСкидки КАК ПроцентАвтоматическойСкидки,
		|	РеализацияТоваровУслугТовары.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
		|	РеализацияТоваровУслугТовары.Ссылка.Валюта КАК Валюта,
		|	РеализацияТоваровУслугТовары.Ссылка.Дата КАК ДатаРеализации,
		|	РеализацияТоваровУслугТовары.Ссылка.Номер КАК НомерРеализации,
		|	РеализацияТоваровУслугТовары.Ссылка.ВернутьМногооборотнуюТару КАК ВернутьМногооборотнуюТару 
		|ПОМЕСТИТЬ ДанныеДокументовРеализации
		|ИЗ
		|	СсылкиНаРеализации КАК СсылкиНаРеализации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		|		ПО (РеализацияТоваровУслугТовары.Ссылка = СсылкиНаРеализации.Ссылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваровУслугТовары.НоменклатураНабора,
		|	РеализацияТоваровУслугТовары.ХарактеристикаНабора,
		|	РеализацияТоваровУслугТовары.Номенклатура,
		|	РеализацияТоваровУслугТовары.Характеристика,
		|	РеализацияТоваровУслугТовары.Серия,
		|	РеализацияТоваровУслугТовары.Цена,
		|	РеализацияТоваровУслугТовары.Ссылка,
		|	РеализацияТоваровУслугТовары.Упаковка,
		|	РеализацияТоваровУслугТовары.ВидЦены,
		|	РеализацияТоваровУслугТовары.Сумма,
		|	РеализацияТоваровУслугТовары.СтавкаНДС,
		|	РеализацияТоваровУслугТовары.СуммаНДС,
		|	РеализацияТоваровУслугТовары.СуммаСНДС,
		|	РеализацияТоваровУслугТовары.СуммаРучнойСкидки,
		|	РеализацияТоваровУслугТовары.СуммаАвтоматическойСкидки,
		|	РеализацияТоваровУслугТовары.ПроцентРучнойСкидки,
		|	РеализацияТоваровУслугТовары.ПроцентАвтоматическойСкидки,
		|	РеализацияТоваровУслугТовары.Склад,
		|	РеализацияТоваровУслугТовары.Упаковка,
		|	РеализацияТоваровУслугТовары.Ссылка.ЦенаВключаетНДС,
		|	РеализацияТоваровУслугТовары.Ссылка.Валюта,
		|	РеализацияТоваровУслугТовары.Ссылка.Дата,
		|	РеализацияТоваровУслугТовары.Ссылка.Номер
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	Серия,
		|	ДокументРеализации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаПроверяемыеТовары.НоменклатураНабора КАК НоменклатураНабора,
		|	ТаблицаПроверяемыеТовары.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|	ТаблицаПроверяемыеТовары.Номенклатура КАК Номенклатура,
		|	ТаблицаПроверяемыеТовары.Характеристика КАК Характеристика,
		|	ТаблицаПроверяемыеТовары.Серия КАК Серия,
		|	СУММА(ТаблицаПроверяемыеТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	СУММА(ТаблицаПроверяемыеТовары.Количество) КАК Количество,
		|	ТаблицаПроверяемыеТовары.ДокументРеализации КАК ДокументРеализации,
		|	СУММА(ТаблицаПроверяемыеТовары.Сумма) КАК Сумма,
		|	СУММА(ТаблицаПроверяемыеТовары.СуммаНДС) КАК СуммаНДС,
		|	СУММА(ТаблицаПроверяемыеТовары.СуммаСНДС) КАК СуммаСНДС
		|ПОМЕСТИТЬ ДанныеДокументовВозврата
		|ИЗ
		|	ДокументыРеализации КАК ДокументыРеализации
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента.Товары КАК ТаблицаПроверяемыеТовары
		|		ПО (ТаблицаПроверяемыеТовары.ДокументРеализации = ДокументыРеализации.Ссылка)
		|ГДЕ
		|	ТаблицаПроверяемыеТовары.Ссылка.Проведен
		|	И ТаблицаПроверяемыеТовары.Ссылка <> &ДокументВозврата
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаПроверяемыеТовары.НоменклатураНабора,
		|	ТаблицаПроверяемыеТовары.ХарактеристикаНабора,
		|	ТаблицаПроверяемыеТовары.Номенклатура,
		|	ТаблицаПроверяемыеТовары.Характеристика,
		|	ТаблицаПроверяемыеТовары.Серия,
		|	ТаблицаПроверяемыеТовары.ДокументРеализации
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	Серия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СУММА(ЕСТЬNULL(ДанныеДокументовРеализации.Количество, 0) - ЕСТЬNULL(ДанныеДокументовВозврата.Количество, 0)) КАК Количество,
		|	ВариантыКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
		|	ВЫБОР КОГДА ДанныеДокументовРеализации.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ КАК ИндексНабора,
		|	ДанныеДокументовРеализации.НоменклатураНабора КАК НоменклатураНабора,
		|	ДанныеДокументовРеализации.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|	ДанныеДокументовРеализации.Номенклатура КАК Номенклатура,
		|	ДанныеДокументовРеализации.Характеристика КАК Характеристика,
		|	ДанныеДокументовРеализации.Серия КАК Серия,
		|	СУММА(
		|			ВЫБОР
		|				КОГДА ДанныеДокументовРеализации.Упаковка ЕСТЬ NULL 
		|						ИЛИ ДанныеДокументовРеализации.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|					ТОГДА ЕСТЬNULL(ДанныеДокументовРеализации.Количество, 0) - ЕСТЬNULL(ДанныеДокументовВозврата.Количество, 0)
		|				ИНАЧЕ (ЕСТЬNULL(ДанныеДокументовРеализации.Количество, 0) - ЕСТЬNULL(ДанныеДокументовВозврата.Количество, 0)) / &ТекстЗапросаКоэффициентУпаковки
		|			КОНЕЦ
		|	) КАК КоличествоУпаковок,
		|	ВЫБОР
		|		КОГДА СУММА(ЕСТЬNULL(ДанныеДокументовРеализации.Количество, 0) - ЕСТЬNULL(ДанныеДокументовВозврата.Количество, 0)) = 0
		|			ТОГДА ДанныеДокументовРеализации.Цена
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ДанныеДокументовРеализации.Упаковка ЕСТЬ NULL 
		|						ИЛИ ДанныеДокументовРеализации.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|					ТОГДА СУММА(ДанныеДокументовРеализации.Сумма) / СУММА(ЕСТЬNULL(ДанныеДокументовРеализации.Количество, 0))
		|				ИНАЧЕ СУММА(ДанныеДокументовРеализации.Сумма) / (СУММА(ЕСТЬNULL(ДанныеДокументовРеализации.Количество, 0) / &ТекстЗапросаКоэффициентУпаковки))
		|			КОНЕЦ
		|	КОНЕЦ КАК Цена,
		|	ДанныеДокументовРеализации.Упаковка КАК Упаковка,
		|	СУММА(ДанныеДокументовРеализации.Сумма - ЕСТЬNULL(ДанныеДокументовВозврата.Сумма, 0)) КАК Сумма,
		|	СУММА(ДанныеДокументовРеализации.СуммаНДС - ЕСТЬNULL(ДанныеДокументовВозврата.СуммаНДС, 0)) КАК СуммаНДС,
		|	СУММА(ДанныеДокументовРеализации.СуммаСНДС - ЕСТЬNULL(ДанныеДокументовВозврата.СуммаСНДС, 0)) КАК СуммаСНДС,
		|	ДанныеДокументовРеализации.Склад КАК Склад,
		|	ДанныеДокументовРеализации.ДатаРеализации КАК ДатаРеализации,
		|	ДанныеДокументовРеализации.НомерРеализации КАК НомерРеализации,
		|	ДанныеДокументовРеализации.СтавкаНДС КАК СтавкаНДС,
		|	ДанныеДокументовРеализации.ДокументРеализации КАК ДокументРеализации,
		|	ДанныеДокументовРеализации.ДокументРеализации.Валюта КАК ВалютаРеализации,
		|	ДанныеДокументовРеализации.ДокументРеализации.ЦенаВключаетНДС КАК ЦенаВключаетНДС
		|ИЗ
		|	ДанныеДокументовРеализации КАК ДанныеДокументовРеализации
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеДокументовВозврата КАК ДанныеДокументовВозврата
		|		ПО ДанныеДокументовРеализации.Номенклатура = ДанныеДокументовВозврата.Номенклатура
		|			И ДанныеДокументовРеализации.Характеристика = ДанныеДокументовВозврата.Характеристика
		|			И ДанныеДокументовРеализации.НоменклатураНабора = ДанныеДокументовВозврата.НоменклатураНабора
		|			И ДанныеДокументовРеализации.ХарактеристикаНабора = ДанныеДокументовВозврата.ХарактеристикаНабора
		|			И ДанныеДокументовВозврата.Серия = ДанныеДокументовРеализации.Серия
		|			И ДанныеДокументовВозврата.ДокументРеализации = ДанныеДокументовРеализации.ДокументРеализации
		|	
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
		|			ПО ВариантыКомплектацииНоменклатуры.Владелец = ДанныеДокументовРеализации.НоменклатураНабора
		|			И ВариантыКомплектацииНоменклатуры.Характеристика = ДанныеДокументовРеализации.ХарактеристикаНабора
		|			И ВариантыКомплектацииНоменклатуры.Основной
		|
		|ГДЕ
		|	ЕСТЬNULL(ДанныеДокументовРеализации.Количество, 0) - ЕСТЬNULL(ДанныеДокументовВозврата.Количество,0) > 0
		|	И ВЫБОР 
		|		КОГДА НЕ ДанныеДокументовРеализации.ВернутьМногооборотнуюТару ТОГДА
		|			ДанныеДокументовРеализации.Номенклатура.ТипНоменклатуры В
		|				(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|		ИНАЧЕ ДанныеДокументовРеализации.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар))
		|	КОНЕЦ
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР КОГДА ДанныеДокументовРеализации.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) ТОГДА 1 ИНАЧЕ 0 КОНЕЦ,
		|	ВариантыКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора,
		|	ДанныеДокументовРеализации.НоменклатураНабора,
		|	ДанныеДокументовРеализации.ХарактеристикаНабора,
		|	ДанныеДокументовРеализации.Номенклатура,
		|	ДанныеДокументовРеализации.Характеристика,
		|	ДанныеДокументовРеализации.Серия,
		|	ДанныеДокументовРеализации.Цена,
		|	ДанныеДокументовРеализации.Упаковка,
		|	ДанныеДокументовРеализации.Склад,
		|	ДанныеДокументовРеализации.ДатаРеализации,
		|	ДанныеДокументовРеализации.НомерРеализации,
		|	ДанныеДокументовРеализации.СтавкаНДС,
		|	ДанныеДокументовРеализации.ДокументРеализации,
		|	ДанныеДокументовРеализации.ДокументРеализации.Валюта,
		|	ДанныеДокументовРеализации.ДокументРеализации.ЦенаВключаетНДС
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаРеализации УБЫВ";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
			"&ТекстЗапросаКоэффициентУпаковки",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ДанныеДокументовРеализации.Упаковка",
			"ДанныеДокументовРеализации.Номенклатура"));
		
		Запрос.УстановитьПараметр("Партнер",                          Партнер);
		Запрос.УстановитьПараметр("Контрагент",                       Контрагент);
		Запрос.УстановитьПараметр("Организация",                      Организация);
		Запрос.УстановитьПараметр("ДатаНачала",                       Период.ДатаНачала);
		Запрос.УстановитьПараметр("ДатаОкончания",                    Период.ДатаОкончания);
		Запрос.УстановитьПараметр("Соглашение",                       Соглашение);
		Запрос.УстановитьПараметр("ДокументВозврата",                 ДокументВозврата);
		Запрос.УстановитьПараметр("ИспользоватьСоглашенияСКлиентами", ИспользоватьСоглашенияСКлиентами);
		Запрос.УстановитьПараметр("ИспользоватьНаправленияДеятельности", ИспользоватьНаправленияДеятельности);
		Запрос.УстановитьПараметр("НаправлениеДеятельности",          НаправлениеДеятельности);
		
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЧекККМТовары.Ссылка КАК ДокументРеализации,
		|	ЧекККМТовары.НоменклатураНабора КАК НоменклатураНабора,
		|	ЧекККМТовары.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|	ЧекККМТовары.Номенклатура КАК Номенклатура,
		|	ЧекККМТовары.Характеристика КАК Характеристика,
		|	ЧекККМТовары.Серия КАК Серия,
		|	ЧекККМТовары.Упаковка КАК Упаковка,
		|	СУММА(ЧекККМТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	СУММА(ЧекККМТовары.Количество) КАК Количество,
		|	ВЫБОР
		|		КОГДА СУММА(ЧекККМТовары.СуммаРучнойСкидки) + СУММА(ЧекККМТовары.СуммаАвтоматическойСкидки) = 0
		|				ИЛИ СУММА(ЧекККМТовары.КоличествоУпаковок) = 0
		|			ТОГДА ЧекККМТовары.Цена
		|		ИНАЧЕ СУММА(ЧекККМТовары.Сумма) / СУММА(ЧекККМТовары.КоличествоУпаковок)
		|	КОНЕЦ КАК Цена,
		|	СУММА(ЧекККМТовары.Сумма) КАК Сумма,
		|	ЧекККМТовары.СтавкаНДС КАК СтавкаНДС,
		|	СУММА(ЧекККМТовары.СуммаНДС) КАК СуммаНДС,
		|	ЧекККМТовары.ПроцентАвтоматическойСкидки КАК ПроцентАвтоматическойСкидки,
		|	СУММА(ЧекККМТовары.СуммаАвтоматическойСкидки) КАК СуммаАвтоматическойСкидки,
		|	ЧекККМТовары.ПроцентРучнойСкидки КАК ПроцентРучнойСкидки,
		|	СУММА(ЧекККМТовары.СуммаРучнойСкидки) КАК СуммаРучнойСкидки,
		|	ЧекККМТовары.Ссылка.Дата КАК ДатаРеализации,
		|	ЧекККМТовары.Ссылка.Номер КАК НомерРеализации,
		|	ЧекККМТовары.Ссылка.Валюта КАК ВалютаРеализации,
		|	ЧекККМТовары.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
		|	ЧекККМТовары.Ссылка.Партнер КАК Партнер
		|ПОМЕСТИТЬ ЧекиККМ
		|ИЗ
		|	Документ.ЧекККМ.Товары КАК ЧекККМТовары
		|ГДЕ
		|	ЧекККМТовары.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ЧекККМТовары.Ссылка.Проведен
		|	И ЧекККМТовары.Ссылка.Организация = &Организация
		|	И ЧекККМТовары.Ссылка.Партнер = &Партнер
		|	И (ЧекККМТовары.Ссылка = &ЧекККМ ИЛИ &ЧекККМ = ЗНАЧЕНИЕ(Документ.ЧекККМ.ПустаяСсылка))
		|
		|СГРУППИРОВАТЬ ПО
		|	ЧекККМТовары.Ссылка,
		|	ЧекККМТовары.НоменклатураНабора,
		|	ЧекККМТовары.ХарактеристикаНабора,
		|	ЧекККМТовары.Номенклатура,
		|	ЧекККМТовары.Характеристика,
		|	ЧекККМТовары.Серия,
		|	ЧекККМТовары.Упаковка,
		|	ЧекККМТовары.Цена,
		|	ЧекККМТовары.СтавкаНДС,
		|	ЧекККМТовары.ПроцентАвтоматическойСкидки,
		|	ЧекККМТовары.ПроцентРучнойСкидки,
		|	ЧекККМТовары.Ссылка.Дата,
		|	ЧекККМТовары.Ссылка.Номер,
		|	ЧекККМТовары.Ссылка.Валюта,
		|	ЧекККМТовары.Ссылка.ЦенаВключаетНДС,
		|	ЧекККМТовары.Ссылка.Партнер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЧекККМВозвратТовары.Ссылка КАК ДокументРеализации,
		|	ЧекККМВозвратТовары.НоменклатураНабора КАК НоменклатураНабора,
		|	ЧекККМВозвратТовары.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|	ЧекККМВозвратТовары.Номенклатура КАК Номенклатура,
		|	ЧекККМВозвратТовары.Характеристика КАК Характеристика,
		|	ЧекККМВозвратТовары.Упаковка КАК Упаковка,
		|	ЧекККМВозвратТовары.Серия КАК Серия,
		|	СУММА(ЧекККМВозвратТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	СУММА(ЧекККМВозвратТовары.Количество) КАК Количество,
		|	ЧекККМВозвратТовары.Цена КАК Цена,
		|	СУММА(ЧекККМВозвратТовары.Сумма) КАК Сумма,
		|	ЧекККМВозвратТовары.СтавкаНДС КАК СтавкаНДС,
		|	СУММА(ЧекККМВозвратТовары.СуммаНДС) КАК СуммаНДС,
		|	ЧекККМВозвратТовары.Ссылка.Дата КАК ДатаРеализации,
		|	ЧекККМВозвратТовары.Ссылка.Номер КАК НомерРеализации,
		|	ЧекККМВозвратТовары.Ссылка.Валюта КАК ВалютаРеализации,
		|	ЧекККМВозвратТовары.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
		|	ЧекККМВозвратТовары.Ссылка.Партнер КАК Партнер
		|ПОМЕСТИТЬ ЧекиККМВозврат
		|ИЗ
		|	Документ.ЧекККМВозврат.Товары КАК ЧекККМВозвратТовары
		|ГДЕ
		|	ЧекККМВозвратТовары.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ЧекККМВозвратТовары.Ссылка.Проведен
		|	И ЧекККМВозвратТовары.Ссылка.Организация = &Организация
		|
		|СГРУППИРОВАТЬ ПО
		|	ЧекККМВозвратТовары.Ссылка,
		|	ЧекККМВозвратТовары.НоменклатураНабора,
		|	ЧекККМВозвратТовары.ХарактеристикаНабора,
		|	ЧекККМВозвратТовары.Серия,
		|	ЧекККМВозвратТовары.СтавкаНДС,
		|	ЧекККМВозвратТовары.Номенклатура,
		|	ЧекККМВозвратТовары.Характеристика,
		|	ЧекККМВозвратТовары.Упаковка,
		|	ЧекККМВозвратТовары.Цена,
		|	ЧекККМВозвратТовары.Ссылка.Дата,
		|	ЧекККМВозвратТовары.Ссылка.Номер,
		|	ЧекККМВозвратТовары.Ссылка.Валюта,
		|	ЧекККМВозвратТовары.Ссылка.ЦенаВключаетНДС,
		|	ЧекККМВозвратТовары.Ссылка.Партнер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ТаблицаПроверяемыеТовары.НоменклатураНабора,
		|	ТаблицаПроверяемыеТовары.ХарактеристикаНабора,
		|	ТаблицаПроверяемыеТовары.Номенклатура,
		|	ТаблицаПроверяемыеТовары.Характеристика,
		|	ТаблицаПроверяемыеТовары.Серия,
		|	СУММА(ТаблицаПроверяемыеТовары.КоличествоУпаковок) КАК КоличествоУпаковок,
		|	СУММА(ТаблицаПроверяемыеТовары.Количество) КАК Количество,
		|	ТаблицаПроверяемыеТовары.ДокументРеализации КАК ДокументРеализации,
		|	ТаблицаПроверяемыеТовары.Ссылка КАК Ссылка,
		|	СУММА(ТаблицаПроверяемыеТовары.Сумма) КАК Сумма,
		|	СУММА(ТаблицаПроверяемыеТовары.СуммаНДС) КАК СуммаНДС,
		|	СУММА(ТаблицаПроверяемыеТовары.СуммаСНДС) КАК СуммаСНДС
		|ПОМЕСТИТЬ ДанныеВозврата
		|ИЗ
		|	ЧекиККМ КАК ЧекиККМ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента.Товары КАК ТаблицаПроверяемыеТовары
		|		ПО ЧекиККМ.ДокументРеализации = ТаблицаПроверяемыеТовары.Ссылка.ЧекККМ
		|ГДЕ
		|	ТаблицаПроверяемыеТовары.Ссылка.Проведен
		|	И ТаблицаПроверяемыеТовары.Ссылка <> &ДокументВозврата
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаПроверяемыеТовары.НоменклатураНабора,
		|	ТаблицаПроверяемыеТовары.ХарактеристикаНабора,
		|	ТаблицаПроверяемыеТовары.Номенклатура,
		|	ТаблицаПроверяемыеТовары.Характеристика,
		|	ТаблицаПроверяемыеТовары.Серия,
		|	ТаблицаПроверяемыеТовары.ДокументРеализации,
		|	ТаблицаПроверяемыеТовары.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЧекиККМ.ДокументРеализации КАК ДокументРеализации,
		|	ЧекиККМ.Номенклатура КАК Номенклатура,
		|	ЧекиККМ.Характеристика КАК Характеристика,
		|	ВЫБОР КОГДА ЧекиККМ.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) ТОГДА
		|		1
		|	ИНАЧЕ
		|		0
		|	КОНЕЦ КАК ИндексНабора,
		|	ВариантыКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
		|	ЧекиККМ.НоменклатураНабора КАК НоменклатураНабора,
		|	ЧекиККМ.ХарактеристикаНабора КАК ХарактеристикаНабора,
		|	ЧекиККМ.Серия КАК Серия,
		|	ЧекиККМ.Упаковка КАК Упаковка,
		|	ВЫБОР
		|		КОГДА ЧекиККМ.Упаковка ЕСТЬ NULL 
		|				ИЛИ ЧекиККМ.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА ЧекиККМ.Количество - ЕСТЬNULL(ДанныеВозврата.Количество, 0) - ЕСТЬNULL(ЧекиККМВозврат.Количество, 0)
		|		ИНАЧЕ (ЧекиККМ.Количество - ЕСТЬNULL(ДанныеВозврата.Количество, 0) - ЕСТЬNULL(ЧекиККМВозврат.Количество, 0)) / &ТекстЗапросаКоэффициентУпаковки
		|	КОНЕЦ КАК КоличествоУпаковок,
		|	ЧекиККМ.Количество - ЕСТЬNULL(ДанныеВозврата.Количество, 0) - ЕСТЬNULL(ЧекиККМВозврат.Количество, 0) КАК Количество,
		|	ВЫБОР
		|		КОГДА ЧекиККМ.Количество - ЕСТЬNULL(ДанныеВозврата.Количество, 0) - ЕСТЬNULL(ЧекиККМВозврат.Количество, 0) = 0
		|			ТОГДА ЧекиККМ.Цена
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ЧекиККМ.Упаковка ЕСТЬ NULL 
		|						ИЛИ ЧекиККМ.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|					ТОГДА ЧекиККМ.Сумма / ЧекиККМ.Количество
		|				ИНАЧЕ ЧекиККМ.Сумма / (ЧекиККМ.Количество / &ТекстЗапросаКоэффициентУпаковки)
		|			КОНЕЦ
		|	КОНЕЦ КАК Цена,
		|	ЧекиККМ.Сумма - ЕСТЬNULL(ДанныеВозврата.Сумма, 0) - ЕСТЬNULL(ЧекиККМВозврат.Сумма, 0) КАК Сумма,
		|	ЧекиККМ.СтавкаНДС КАК СтавкаНДС,
		|	ЧекиККМ.СуммаНДС - ЕСТЬNULL(ДанныеВозврата.СуммаНДС, 0) - ЕСТЬNULL(ЧекиККМВозврат.СуммаНДС, 0) КАК СуммаНДС,
		|	ЧекиККМ.ДатаРеализации КАК ДатаРеализации,
		|	ЧекиККМ.НомерРеализации КАК НомерРеализации,
		|	ЧекиККМ.ВалютаРеализации КАК ВалютаРеализации,
		|	ЧекиККМ.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
		|	ЧекиККМ.Партнер КАК Партнер,
		|	ЧекиККМ.ДокументРеализации.Склад КАК Склад
		|ИЗ
		|	ЧекиККМ КАК ЧекиККМ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ЧекиККМВозврат КАК ЧекиККМВозврат
		|		ПО ЧекиККМ.ДокументРеализации = ЧекиККМВозврат.ДокументРеализации.ЧекККМ
		|			И ЧекиККМ.Номенклатура = ЧекиККМВозврат.Номенклатура
		|			И ЧекиККМ.Характеристика = ЧекиККМВозврат.Характеристика
		|			И ЧекиККМ.НоменклатураНабора = ЧекиККМВозврат.НоменклатураНабора
		|			И ЧекиККМ.ХарактеристикаНабора = ЧекиККМВозврат.ХарактеристикаНабора
		|			И ЧекиККМ.Серия = ЧекиККМВозврат.Серия
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеВозврата КАК ДанныеВозврата
		|		ПО ЧекиККМ.ДокументРеализации = ДанныеВозврата.Ссылка.ЧекККМ
		|			И ЧекиККМ.Номенклатура = ДанныеВозврата.Номенклатура
		|			И ЧекиККМ.Характеристика = ДанныеВозврата.Характеристика
		|			И ЧекиККМ.НоменклатураНабора = ДанныеВозврата.НоменклатураНабора
		|			И ЧекиККМ.ХарактеристикаНабора = ДанныеВозврата.ХарактеристикаНабора
		|			И ЧекиККМ.Серия = ДанныеВозврата.Серия
		|	
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
		|			ПО ВариантыКомплектацииНоменклатуры.Владелец = ЧекиККМ.НоменклатураНабора
		|			И ВариантыКомплектацииНоменклатуры.Характеристика = ЧекиККМ.ХарактеристикаНабора
		|			И ВариантыКомплектацииНоменклатуры.Основной
		|
		|ГДЕ
		|	ЧекиККМ.Количество - ЕСТЬNULL(ДанныеВозврата.Количество, 0) - ЕСТЬNULL(ЧекиККМВозврат.Количество, 0) > 0
		|	И ЧекиККМ.Номенклатура.ТипНоменклатуры В
		|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
		|УПОРЯДОЧИТЬ ПО
		|	ДатаРеализации УБЫВ";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,
			"&ТекстЗапросаКоэффициентУпаковки",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ЧекиККМ.Упаковка",
			"ЧекиККМ.Номенклатура"));
		
		Запрос.УстановитьПараметр("Партнер", Партнер);
		Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
		Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("ЧекККМ", ЧекККМ);
		Запрос.УстановитьПараметр("ДокументВозврата", ДокументВозврата);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ТаблицаТоваров.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Если ВозвратОтРозничногоПокупателя Тогда
			НоваяСтрока.СуммаСНДС = НоваяСтрока.Сумма + ?(ЦенаВключаетНДС, 0, НоваяСтрока.СуммаНДС);
		КонецЕсли;
		
		Если Валюта <> Выборка.ВалютаРеализации Тогда
			
			КурсНовойВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Валюта, Дата);
			КурсСтаройВалюты = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Выборка.ВалютаРеализации, Дата);
			
			НоваяСтрока.СуммаСНДС = РаботаСКурсамиВалютКлиентСервер.ПересчитатьИзВалютыВВалюту(
				НоваяСтрока.СуммаСНДС,
				Выборка.ВалютаРеализации,Валюта,
				КурсСтаройВалюты.Курс,КурсНовойВалюты.Курс,
				КурсСтаройВалюты.Кратность,КурсНовойВалюты.Кратность);
				
		КонецЕсли;
		
		Ценообразование.ПересчитатьСуммыВСтрокеПоСуммеСНДС(
			НоваяСтрока,
			ЦенаВключаетНДС,
			Ложь,
			Ложь,
			Истина);
			
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуТары()
	
	ТаблицаТары.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПереданнаяВозвратнаяТараОстатки.Номенклатура      КАК Номенклатура,
	|	ПереданнаяВозвратнаяТараОстатки.Характеристика    КАК Характеристика,
	|	ПереданнаяВозвратнаяТараОстатки.Партнер           КАК Партнер,
	|	ПереданнаяВозвратнаяТараОстатки.ДокументПередачи  КАК ДокументПередачи,
	|	ПереданнаяВозвратнаяТараОстатки.КоличествоОстаток КАК Количество,
	|	ПереданнаяВозвратнаяТараОстатки.СуммаОстаток      КАК Сумма
	|ПОМЕСТИТЬ
	|	втПереданнаяВозвратнаяТара
	|ИЗ
	|	РегистрНакопления.ПереданнаяВозвратнаяТара.Остатки(
	|			,
	|			Партнер = &Партнер
	|			И ДокументПередачи.Организация = &Организация
	|			И ДокументПередачи.Контрагент = &Контрагент
	|			И ДокументПередачи.Организация = &Организация
	|			И ВЫБОР
	|				КОГДА НЕ &ИспользоватьСоглашенияСКлиентами
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ДокументПередачи.Соглашение = &Соглашение
	|			КОНЕЦ
	|			И ДокументПередачи.Валюта = &Валюта
	|		) КАК ПереданнаяВозвратнаяТараОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПереданнаяВозвратнаяТараДвижения.Номенклатура     КАК Номенклатура,
	|	ПереданнаяВозвратнаяТараДвижения.Характеристика   КАК Характеристика,
	|	ПереданнаяВозвратнаяТараДвижения.Партнер          КАК Партнер,
	|	ПереданнаяВозвратнаяТараДвижения.ДокументПередачи КАК ДокументПередачи,
	|	ВЫБОР КОГДА ПереданнаяВозвратнаяТараДвижения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			-ПереданнаяВозвратнаяТараДвижения.Количество
	|		ИНАЧЕ
	|			ПереданнаяВозвратнаяТараДвижения.Количество
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР КОГДА ПереданнаяВозвратнаяТараДвижения.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
	|			-ПереданнаяВозвратнаяТараДвижения.Сумма
	|		ИНАЧЕ
	|			ПереданнаяВозвратнаяТараДвижения.Сумма
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	РегистрНакопления.ПереданнаяВозвратнаяТара КАК ПереданнаяВозвратнаяТараДвижения
	|ГДЕ
	|	ПереданнаяВозвратнаяТараДвижения.Регистратор = &ДокументВозврата
	|;
	|ВЫБРАТЬ
	|	втПереданнаяВозвратнаяТара.Номенклатура           КАК Номенклатура,
	|	втПереданнаяВозвратнаяТара.Характеристика         КАК Характеристика,
	|	втПереданнаяВозвратнаяТара.Партнер                КАК Партнер,
	|	втПереданнаяВозвратнаяТара.ДокументПередачи       КАК ДокументРеализации,
	|	втПереданнаяВозвратнаяТара.ДокументПередачи.Номер КАК НомерРеализации,
	|	втПереданнаяВозвратнаяТара.ДокументПередачи.Дата  КАК ДатаРеализации,
	|	втПереданнаяВозвратнаяТара.ДокументПередачи.ДатаВозвратаМногооборотнойТары КАК ДатаВозврата,
	|	СУММА(втПереданнаяВозвратнаяТара.Количество)      КАК Количество,
	|	СУММА(втПереданнаяВозвратнаяТара.Сумма)           КАК Сумма,
	|	ВЫБОР
	|		КОГДА
	|			СУММА(втПереданнаяВозвратнаяТара.Количество) = 0
	|		ТОГДА
	|			СУММА(втПереданнаяВозвратнаяТара.Сумма)
	|		ИНАЧЕ
	|			СУММА(втПереданнаяВозвратнаяТара.Сумма) / СУММА(втПереданнаяВозвратнаяТара.Количество)
	|	КОНЕЦ КАК Цена
	|ИЗ
	|	втПереданнаяВозвратнаяТара
	|СГРУППИРОВАТЬ ПО
	|	втПереданнаяВозвратнаяТара.Номенклатура,
	|	втПереданнаяВозвратнаяТара.Характеристика,
	|	втПереданнаяВозвратнаяТара.Партнер,
	|	втПереданнаяВозвратнаяТара.ДокументПередачи
	|ИМЕЮЩИЕ
	|	СУММА(втПереданнаяВозвратнаяТара.Количество) > 0
	|УПОРЯДОЧИТЬ ПО
	|	ДатаВозврата ВОЗР,
	|	Номенклатура.Наименование ВОЗР,
	|	Характеристика.Наименование ВОЗР
	|";

	Запрос.УстановитьПараметр("Партнер",                          Партнер);
	Запрос.УстановитьПараметр("Контрагент",                       Контрагент);
	Запрос.УстановитьПараметр("Организация",                      Организация);
	Запрос.УстановитьПараметр("Соглашение",                       Соглашение);
	Запрос.УстановитьПараметр("Валюта",                           Валюта);
	Запрос.УстановитьПараметр("ДокументВозврата",                 ДокументВозврата);
	Запрос.УстановитьПараметр("ИспользоватьСоглашенияСКлиентами", ИспользоватьСоглашенияСКлиентами);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ТаблицаТары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьИтогиПоТаблицеТоваров()
	
	ТоварыВыбраноКоличество = 0;
	ТоварыВыбраноСумма = 0;
	
	Для н=0 По ТаблицаТоваров.Количество()-1 Цикл
		
		Если ТаблицаТоваров[н].Выбран Тогда
			ТоварыВыбраноКоличество = ТоварыВыбраноКоличество + 1;
			ТоварыВыбраноСумма = ТоварыВыбраноСумма + ТаблицаТоваров[н].СуммаСНДС;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьИтогиПоТаблицеТары()
	
	ТараВыбраноКоличество = 0;
	ТараВыбраноСумма = 0;
	
	Для н=0 По ТаблицаТары.Количество()-1 Цикл
		
		Если ТаблицаТары[н].Выбран Тогда
			ТараВыбраноКоличество = ТараВыбраноКоличество + 1;
			ТараВыбраноСумма = ТараВыбраноСумма + ТаблицаТары[н].Сумма;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ВыбратьВсеТоварыНаСервере()
	
	Для Каждого СтрокаТаблицы Из ТаблицаТоваров Цикл
		СтрокаТаблицы.Выбран = Истина;
	КонецЦикла;
	
	ТоварыВыбраноКоличество = ТаблицаТоваров.Количество();
	ТоварыВыбраноСумма = ТаблицаТоваров.Итог("СуммаСНДС");
	
КонецПроцедуры

&НаСервере
Процедура ИсключитьВсеТоварыНаСервере()
	
	Для Каждого СтрокаТаблицы Из ТаблицаТоваров Цикл
		СтрокаТаблицы.Выбран = Ложь;
	КонецЦикла;
	
	ТоварыВыбраноКоличество = 0;
	ТоварыВыбраноСумма = 0;
	
КонецПроцедуры

&НаСервере
Процедура ВыбратьВсюТаруНаСервере()
	
	Для Каждого СтрокаТаблицы Из ТаблицаТары Цикл
		СтрокаТаблицы.Выбран = Истина;
	КонецЦикла;
	
	ТараВыбраноКоличество = ТаблицаТары.Количество();
	ТараВыбраноСумма = ТаблицаТары.Итог("Сумма");
	
КонецПроцедуры

&НаСервере
Процедура ИсключитьВсюТаруНаСервере()
	
	Для Каждого СтрокаТаблицы Из ТаблицаТары Цикл
		СтрокаТаблицы.Выбран = Ложь;
	КонецЦикла;
	
	ТараВыбраноКоличество = 0;
	ТараВыбраноСумма = 0;
	
КонецПроцедуры

&НаСервере
Функция ПроверитьВозможностьПереносаЧекаККМ()
	
	Если ВозвратОтРозничногоПокупателя Тогда
		ТаблицаОснований = ТаблицаТоваров.Выгрузить(ТаблицаТоваров.НайтиСтроки(Новый Структура("Выбран", Истина)));
		ТаблицаОснований.Свернуть("ДокументРеализации");
		Если ТаблицаОснований.Количество() <= 1 Тогда
			Возврат Истина
		Иначе
			Возврат Ложь
		КонецЕсли;
	Иначе
		Возврат Истина
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура СформироватьИнформационнуюНадписьОтборы()
	
	ИспользоватьПартнеровКакКонтрагентов = ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровКакКонтрагентов");
	
	Если ВозвратОтРозничногоПокупателя Тогда
		
		Если ЧекККМ <> Документы.ЧекККМ.ПустаяСсылка() Тогда
 			ТоварыИнформационнаяНадписьОтборы = НСтр("ru='Отбор по: %Организация%, %Партнер%, %ЧекККМ%';uk='Відбір за: %Организация%, %Партнер%, %ЧекККМ%'");
			ТоварыИнформационнаяНадписьОтборы = СтрЗаменить(ТоварыИнформационнаяНадписьОтборы,"%Организация%", Организация);
			ТоварыИнформационнаяНадписьОтборы = СтрЗаменить(ТоварыИнформационнаяНадписьОтборы,"%Партнер%", Партнер);
			ТоварыИнформационнаяНадписьОтборы = СтрЗаменить(ТоварыИнформационнаяНадписьОтборы,"%ЧекККМ%", ЧекККМ);
		Иначе
 			ТоварыИнформационнаяНадписьОтборы = НСтр("ru='Отбор по: %Организация%';uk='Відбір за: %Организация%'");
			ТоварыИнформационнаяНадписьОтборы = СтрЗаменить(ТоварыИнформационнаяНадписьОтборы,"%Организация%", Организация);
		КонецЕсли;
		
	Иначе
		
		Если НЕ ОбщегоНазначенияУТКлиентСервер.АвторизованВнешнийПользователь() Тогда
 			ТоварыИнформационнаяНадписьОтборы = НСтр("ru='Отбор по: %Организация%, %Партнер%, %Контрагент%, %Соглашение%';uk='Відбір за: %Организация%, %Партнер%, %Контрагент%, %Соглашение%'");
			Если ИспользоватьПартнеровКакКонтрагентов Тогда
				ТоварыИнформационнаяНадписьОтборы = СтрЗаменить(ТоварыИнформационнаяНадписьОтборы,", %Контрагент%", "");
			КонецЕсли;
			ТоварыИнформационнаяНадписьОтборы = СтрЗаменить(ТоварыИнформационнаяНадписьОтборы,"%Организация%", Организация);
			ТоварыИнформационнаяНадписьОтборы = СтрЗаменить(ТоварыИнформационнаяНадписьОтборы,"%Партнер%", Партнер);
		Иначе
 			ТоварыИнформационнаяНадписьОтборы = НСтр("ru='Отбор по: %Соглашение%, %Контрагент%';uk='Відбір за: %Соглашение%, %Контрагент%'");
		КонецЕсли;
		ТоварыИнформационнаяНадписьОтборы = СтрЗаменить(ТоварыИнформационнаяНадписьОтборы,"%Контрагент%", Контрагент);
		ТоварыИнформационнаяНадписьОтборы = СтрЗаменить(ТоварыИнформационнаяНадписьОтборы,"%Соглашение%", Соглашение);
		
 		ТараИнформационнаяНадписьОтборы = НСтр("ru='Отбор по: %Организация%, %Партнер%, %Контрагент%, %Валюта%, %Соглашение%';uk='Відбір за: %Организация%, %Партнер%, %Контрагент%, %Валюта%, %Соглашение%'");
		Если ИспользоватьПартнеровКакКонтрагентов Тогда
			ТараИнформационнаяНадписьОтборы = СтрЗаменить(ТараИнформационнаяНадписьОтборы,", %Контрагент%", "");
		КонецЕсли;
		ТараИнформационнаяНадписьОтборы = СтрЗаменить(ТараИнформационнаяНадписьОтборы,"%Организация%", Организация);
		ТараИнформационнаяНадписьОтборы = СтрЗаменить(ТараИнформационнаяНадписьОтборы,"%Партнер%", Партнер);
		ТараИнформационнаяНадписьОтборы = СтрЗаменить(ТараИнформационнаяНадписьОтборы,"%Контрагент%", Контрагент);
		ТараИнформационнаяНадписьОтборы = СтрЗаменить(ТараИнформационнаяНадписьОтборы,"%Соглашение%", Соглашение);
		ТараИнформационнаяНадписьОтборы = СтрЗаменить(ТараИнформационнаяНадписьОтборы,"%Валюта%", Валюта);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКарточкуНоменклатуры()

	ТекущиеДанные = Элементы.ТаблицаТоваров.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		ПараметрыФормы = Новый Структура("Ключ", ТекущиеДанные.Номенклатура);
		ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаЭлемента", ПараметрыФормы);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#КонецОбласти
