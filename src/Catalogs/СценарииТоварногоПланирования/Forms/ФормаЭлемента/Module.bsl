
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
	
		Возврат;

	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
	Если НЕ ПолучитьФункциональнуюОпцию("УправлениеПредприятием") Тогда
	
		Элементы.ИспользоватьДляПланированияМатериалов.Заголовок = НСтр("ru='Расчет потребностей в материалах и трудовых ресурсах';uk='Розрахунок потреб у матеріалах і трудових ресурсах'");
		Элементы.ГруппаИспользоватьДляЗаказовНаПроизводство.Видимость = Ложь;
		Элементы.ГруппаИспользоватьВПланированииПроизводства.Подсказка = "";
		
	КонецЕсли; 
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтаФорма);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры
 
&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();

	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()

	
	ПланЗакупокПланировать = ?(Объект.ПланЗакупокПланироватьПоСумме, 1, 0);
	ПланПродажПланировать = ?(Объект.ПланПродажПланироватьПоСумме, 1, 0);
	
	ОтображениеПериода = ?(Объект.ОтображатьНомерПериода, 1, 0);
	
	УстановитьВидимостьЭлементов();
	
	ОбновитьДоступностьЭлементов(ЭтаФорма);

КонецПроцедуры 

&НаКлиенте
Процедура  ПослеЗаписи(ПараметрыЗаписи)

	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПланироватьПриИзменении(Элемент)
	
	Объект.ПланЗакупокПланироватьПоСумме = ПланЗакупокПланировать = 1;
	Объект.ПланПродажПланироватьПоСумме = ПланПродажПланировать = 1;
	Если НЕ (Объект.ПланЗакупокПланироватьПоСумме ИЛИ Объект.ПланПродажПланироватьПоСумме)Тогда
		Объект.Валюта = Неопределено;
	КонецЕсли; 
	ОбновитьДоступностьЭлементов(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодичностьПриИзменении(Элемент)
	
	Если Объект.Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Год")
		ИЛИ Объект.Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Декада") Тогда
	
		Объект.ОтображатьНомерПериода = Ложь;
		ОтображениеПериода = 0;
	
	КонецЕсли; 
	ОбновитьДоступностьЭлементов(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображениеПериодаПриИзменении(Элемент)
	
	Объект.ОтображатьНомерПериода = ОтображениеПериода = 1;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьВПланированииЗакупокПриИзменении(Элемент)
	
	Если Объект.ИспользоватьВПланированииЗакупок Тогда
		Объект.ИспользоватьДляЗаказовПоставщику = Объект.ИспользоватьВПланированииЗакупок;
	Иначе
		Объект.ИспользоватьДляЗаказовПоставщику = Ложь;
	КонецЕсли; 
	ОбновитьДоступностьЭлементов(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьВПланированииПродажПриИзменении(Элемент)
		
	ОбновитьДоступностьЭлементов(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьВПланированииСборкиРазборкиПриИзменении(Элемент)
	
	Объект.ИспользоватьДляЗаказовНаСборкуРазборку = Объект.ИспользоватьВПланированииСборкиРазборки;
	
	ОбновитьДоступностьЭлементов(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьВПланированииПроизводстваПриИзменении(Элемент)
	

	Объект.ИспользоватьДляПланированияМатериалов         = Объект.ИспользоватьВПланированииПроизводства;
	Объект.ИспользоватьДляЗаказовНаВнутреннееПотребление = Объект.ИспользоватьВПланированииПроизводства;
	
	ОбновитьДоступностьЭлементов(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьДляПланированияМатериаловПриИзменении(Элемент)
	
	Объект.ИспользоватьДляЗаказовНаВнутреннееПотребление 	= Объект.ИспользоватьДляПланированияМатериалов;
	
	ОбновитьДоступностьЭлементов(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьВПланированииПродажПоКатегориямПриИзменении(Элемент)
	
	Если НЕ Объект.ИспользоватьВПланированииПродажПоКатегориям Тогда
		Объект.ИспользоватьРасчетПоСкоростиПродаж = Ложь;
	КонецЕсли; 
	
	ОбновитьДоступностьЭлементов(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтражаетсяВБюджетированииПриИзменении(Элемент)
	
	
	Возврат // В УТ 11.1 код данного обработчика пустой
	
КонецПроцедуры

&НаКлиенте
Процедура СценарийБюджетированияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	
	Возврат // В УТ 11.1 код данного обработчика пустой
	
КонецПроцедуры 

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	Оповещение = Новый ОписаниеОповещения("РазрешитьРедактированиеРеквизитовОбъектаЗавершение", ЭтотОбъект);
	ОбщегоНазначенияУТКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтаФорма,,Оповещение);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РазрешитьРедактированиеРеквизитовОбъектаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ОбновитьДоступностьЭлементов(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементов()
	
	ИспользоватьПланированиеЗакупок = ПолучитьФункциональнуюОпцию("ИспользоватьПланированиеЗакупок");
	ИспользоватьПланированиеПродаж = ПолучитьФункциональнуюОпцию("ИспользоватьПланированиеПродаж");
	ИспользоватьПланированиеСборкиРазборки = ПолучитьФункциональнуюОпцию("ИспользоватьПланированиеСборкиРазборки");
	ИспользоватьЗаказыПоставщикам = ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыПоставщикам");
	ИспользоватьЗаказыНаСборку = ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыНаСборку");
	ИспользоватьПланированиеПроизводства = Ложь;
	ИспользоватьЗаказыНаВнутреннееПотребление = ПолучитьФункциональнуюОпцию("ИспользоватьЗаказыНаВнутреннееПотребление");
	
	Элементы.ИспользоватьДляЗаказовПоставщику.Видимость = ИспользоватьПланированиеЗакупок;
	Элементы.ГруппаИспользоватьДляЗаказовПоставщику.Видимость = ИспользоватьПланированиеЗакупок И ИспользоватьЗаказыПоставщикам;
	
	Элементы.ГруппаИспользоватьРасчетПоСкоростиПродаж.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьРейтингиПродажНоменклатуры");
	
	Элементы.ГруппаПланировать.Видимость = (ИспользоватьПланированиеЗакупок ИЛИ ИспользоватьПланированиеПродаж);
	
	Элементы.ИспользоватьДляЗаказовНаСборкуРазборку.Видимость = ИспользоватьПланированиеСборкиРазборки;
	Элементы.ГруппаИспользоватьДляЗаказовНаСборкуРазборку.Видимость = ИспользоватьЗаказыНаСборку И ИспользоватьПланированиеСборкиРазборки;
	
	Элементы.ГруппаИспользоватьВПланированииПроизводства.Видимость = ИспользоватьПланированиеПроизводства;
	Элементы.ГруппаИспользоватьДляЗаказовНаВнутреннееПотребление.Видимость = ИспользоватьЗаказыНаВнутреннееПотребление;
	
КонецПроцедуры 

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьДоступностьЭлементов(Форма)

	Форма.Элементы.ИспользоватьДляЗаказовПоставщику.Доступность = Форма.Объект.ИспользоватьВПланированииЗакупок;
	
	Форма.Элементы.Валюта.Доступность = (Форма.Объект.ПланЗакупокПланироватьПоСумме ИЛИ Форма.Объект.ПланПродажПланироватьПоСумме);
	Форма.Элементы.ИспользоватьДляЗаказовНаСборкуРазборку.Доступность = Форма.Объект.ИспользоватьВПланированииСборкиРазборки;
	Форма.Элементы.ИспользоватьРасчетПоСкоростиПродаж.Доступность = Форма.Объект.ИспользоватьВПланированииПродажПоКатегориям;
	
	
	
	Если Форма.Объект.Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Год")
		ИЛИ Форма.Объект.Периодичность = ПредопределенноеЗначение("Перечисление.Периодичность.Декада") Тогда
	
		Форма.Элементы.ОтображениеПериода.Доступность = Ложь;
	
	Иначе
	
		Форма.Элементы.ОтображениеПериода.Доступность = Истина;
	
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти
