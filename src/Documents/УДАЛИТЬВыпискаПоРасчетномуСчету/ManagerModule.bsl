#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбновлениеИнформационнойБазы

#Область ПеренестиДвиженияДругойОрганизации

#Область БезналичныйРасчет

#Область Оплата_Безналичными

Функция ПеренестиБезналичныеОплатыВДругуюОрганизацию_ДанныеДляОбновления(Параметры) Экспорт
    
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДСБезналичные.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные КАК ДСБезналичные
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДСБезналичные.Регистратор) = ТИП(Документ.УдалитьВыпискаПоРасчетномуСчету)
	|	И ДСБезналичные.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)
	|	И ДСБезналичные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
    |";
    
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(
        Параметры, 
        Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка")
    );	
	
КонецФункции

// Обработчик обновления BAS УТ 3.2.1
// Создает документы "Поступление безналичных денежных средств" 
// по приходным движениям выписок с хоз. операцией "ОплатаДенежныхСредствВДругуюОрганизацию".
// Переносит движения:
// - документа выписки в регистре накопления "ДенежныеСредстваБезналичные"
// - документа СписаниеБезналичныхДенежныхСредств по другой организации по регистрам:
//   - РасчетыСКлиентами
//   - РасчетыСКлиентамиПоДокументам
//   - ДвиженияДенежныеСредстваКонтрагент
// по хоз. операциям "ПоступлениеДенежныхСредствИзДругойОрганизации" под вновь созданный документ.
Процедура ПеренестиБезналичныеОплатыВДругуюОрганизацию(Параметры) Экспорт
    
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("ТекстЗапросаПоДокументам",  ТекстЗапросаДокументыОплатыВДругуюОрганизациюБезналичныйРасчет());
	ПараметрыОбработчика.Вставить("ТекстЗапросаНовыеДвижения", ТекстЗапросаНовыеДвиженияОплатаВДругуюОрганизациюБезналичныйРасчет());
	ПараметрыОбработчика.Вставить("ИмяДокумента", "ПоступлениеБезналичныхДенежныхСредств");
	ПараметрыОбработчика.Вставить("РасчетыСПартнерами", "РасчетыСКлиентами");
	
    ПеренестиДвиженияДругойОрганизацииБезналичныйРасчет(Параметры, ПараметрыОбработчика);
	
КонецПроцедуры

Функция ТекстЗапросаДокументыОплатыВДругуюОрганизациюБезналичныйРасчет()
	
	Возврат "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежныхДокументов.ПлатежноеПоручение) КАК ТипПлатежногоДокумента,
	|	ИСТИНА КАК Проведен,
	|	ДСБезналичные.Период КАК Дата,
	|	ДСБезналичные.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации) КАК ХозяйственнаяОперация,
	|	ДСБезналичные.БанковскийСчет КАК БанковскийСчет,
	|	ДСБезналичные.ПлатежныйДокумент.БанковскийСчет КАК БанковскийСчетОтправитель,
	|	ИСТИНА КАК ПроведеноБанком,
	|	ДСБезналичные.Период КАК ДатаПроведенияБанком,
	|	ДСБезналичные.Период КАК ДатаВходящегоДокумента,
	|	ДСБезналичные.БанковскийСчет.ВалютаДенежныхСредств КАК Валюта,
	|	СУММА(ДСБезналичные.Сумма) КАК СуммаДокумента,
	|	ДСБезналичные.Регистратор КАК Выписка,
	|	ДСБезналичные.ПлатежныйДокумент КАК ПлатежныйДокумент,
	|	ДСБезналичные.МоментВремени КАК МоментВремени
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные КАК ДСБезналичные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляОбработки КАК ДокументыКОбработке
	|		    ПО ДСБезналичные.Регистратор = ДокументыКОбработке.Ссылка
    |
	|ГДЕ
	|	ДСБезналичные.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)
	|	И ДСБезналичные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДСБезналичные.Регистратор,
	|	ДСБезналичные.ПлатежныйДокумент,
	|	ДСБезналичные.БанковскийСчет,
	|	ДСБезналичные.Организация,
	|	ДСБезналичные.МоментВремени,
	|	ДСБезналичные.Период,
	|	ДСБезналичные.ПлатежныйДокумент.БанковскийСчет,
	|	ДСБезналичные.Период,
	|	ДСБезналичные.Период,
	|	ДСБезналичные.БанковскийСчет.ВалютаДенежныхСредств
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДСБезналичные.МоментВремени УБЫВ
    |
	|ИТОГИ ПО
	|	Выписка
    |
    |";
	
КонецФункции

Функция ТекстЗапросаНовыеДвиженияОплатаВДругуюОрганизациюБезналичныйРасчет()
	
	Возврат
	"ВЫБРАТЬ
	|	РасчетыСКлиентами.Период,
	|	РасчетыСКлиентами.Активность,
	|	РасчетыСКлиентами.ВидДвижения,
	|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам,
	|	РасчетыСКлиентами.ЗаказКлиента,
	|	РасчетыСКлиентами.Валюта,
	|	РасчетыСКлиентами.Сумма,
	|	РасчетыСКлиентами.КОплате,
	|	РасчетыСКлиентами.КОтгрузке,
	|	РасчетыСКлиентами.Отгружается,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации) КАК ХозяйственнаяОперация,
	|	РасчетыСКлиентами.ФормаОплаты,
	|	РасчетыСКлиентами.СчетНаОплату,
	|	РасчетыСКлиентами.ПродажаПоЗаказу,
	|	РасчетыСКлиентами.ДатаРегистратора,
	|	РасчетыСКлиентами.ДатаПлатежа,
	|	РасчетыСКлиентами.СуммаРегл,
	|	РасчетыСКлиентами.СуммаУпр,
	|	РасчетыСКлиентами.ИсключатьПриКонтроле,
	|	РасчетыСКлиентами.ДопустимаяСуммаЗадолженности,
	|	РасчетыСКлиентами.ЗалогЗаТару,
	|	РасчетыСКлиентами.СтатьяДвиженияДенежныхСредств
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
	|ГДЕ
	|	РасчетыСКлиентами.Регистратор = &ПлатежныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыСКлиентамиПоДокументам.Период,
	|	РасчетыСКлиентамиПоДокументам.Активность,
	|	РасчетыСКлиентамиПоДокументам.ВидДвижения,
	|	РасчетыСКлиентамиПоДокументам.АналитикаУчетаПоПартнерам,
	|	РасчетыСКлиентамиПоДокументам.ЗаказКлиента,
	|	РасчетыСКлиентамиПоДокументам.РасчетныйДокумент,
	|	РасчетыСКлиентамиПоДокументам.Валюта,
	|	РасчетыСКлиентамиПоДокументам.УдалитьДатаПлатежа,
	|	РасчетыСКлиентамиПоДокументам.УдалитьКОтгрузке,
	|	РасчетыСКлиентамиПоДокументам.УдалитьКОплате,
	|	РасчетыСКлиентамиПоДокументам.КВозврату,
	|	РасчетыСКлиентамиПоДокументам.Долг,
	|	РасчетыСКлиентамиПоДокументам.ДолгУпр,
	|	РасчетыСКлиентамиПоДокументам.ДолгРегл,
	|	РасчетыСКлиентамиПоДокументам.Предоплата,
	|	РасчетыСКлиентамиПоДокументам.ПредоплатаУпр,
	|	РасчетыСКлиентамиПоДокументам.ПредоплатаРегл,
	|	РасчетыСКлиентамиПоДокументам.ЗалогЗаТару,
	|	РасчетыСКлиентамиПоДокументам.ЗалогЗаТаруРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации) КАК ХозяйственнаяОперация,
    |	РасчетыСКлиентамиПоДокументам.ДатаПлатежа,
	|	РасчетыСКлиентамиПоДокументам.СтатьяДвиженияДенежныхСредств
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК РасчетыСКлиентамиПоДокументам
	|ГДЕ
	|	РасчетыСКлиентамиПоДокументам.Регистратор = &ПлатежныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДвиженияДСКонтрагент.Период,
	|	ДвиженияДСКонтрагент.Активность,
	|	ДвиженияДСКонтрагент.ХозяйственнаяОперация,
	|	ДвиженияДСКонтрагент.Организация,
	|	ДвиженияДСКонтрагент.Подразделение,
	|	ДвиженияДСКонтрагент.ДенежныеСредства,
	|	ДвиженияДСКонтрагент.ТипДенежныхСредств,
	|	ДвиженияДСКонтрагент.СтатьяДвиженияДенежныхСредств,
	|	ДвиженияДСКонтрагент.ВалютаПлатежа,
	|	ДвиженияДСКонтрагент.Партнер,
	|	ДвиженияДСКонтрагент.Контрагент,
	|	ДвиженияДСКонтрагент.Договор,
	|	ДвиженияДСКонтрагент.ОбъектРасчетов,
	|	ДвиженияДСКонтрагент.РасчетныйДокумент,
	|	ДвиженияДСКонтрагент.СуммаОплаты,
	|	ДвиженияДСКонтрагент.СуммаОплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаОплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.СуммаПостоплаты,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.СуммаПредоплаты,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.ВалютаВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаОплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.ИсточникГФУДенежныхСредств,
	|	ДвиженияДСКонтрагент.ИсточникГФУРасчетов,
	|	ДвиженияДСКонтрагент.ОтложенноеПроведение
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДвиженияДСКонтрагент
	|ГДЕ
	|	ДвиженияДСКонтрагент.Регистратор = &ПлатежныйДокумент
	|	И ДвиженияДСКонтрагент.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДвиженияДСКонтрагент.Период,
	|	ДвиженияДСКонтрагент.Регистратор КАК Регистратор,
	|	ДвиженияДСКонтрагент.Активность,
	|	ДвиженияДСКонтрагент.ХозяйственнаяОперация,
	|	ДвиженияДСКонтрагент.Организация,
	|	ДвиженияДСКонтрагент.Подразделение,
	|	ДвиженияДСКонтрагент.ДенежныеСредства,
	|	ДвиженияДСКонтрагент.ТипДенежныхСредств,
	|	ДвиженияДСКонтрагент.СтатьяДвиженияДенежныхСредств,
	|	ДвиженияДСКонтрагент.ВалютаПлатежа,
	|	ДвиженияДСКонтрагент.Партнер,
	|	ДвиженияДСКонтрагент.Контрагент,
	|	ДвиженияДСКонтрагент.Договор,
	|	ДвиженияДСКонтрагент.ОбъектРасчетов,
	|	ДвиженияДСКонтрагент.РасчетныйДокумент,
	|	ДвиженияДСКонтрагент.СуммаОплаты,
	|	ДвиженияДСКонтрагент.СуммаОплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаОплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.СуммаПостоплаты,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.СуммаПредоплаты,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.ВалютаВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаОплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.ИсточникГФУДенежныхСредств,
	|	ДвиженияДСКонтрагент.ИсточникГФУРасчетов,
	|	ДвиженияДСКонтрагент.ОтложенноеПроведение
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДвиженияДСКонтрагент
	|ГДЕ
	|	ДвиженияДСКонтрагент.Регистратор = &ПлатежныйДокумент
	|	И ДвиженияДСКонтрагент.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДСБезналичные.Период,
	|	ДСБезналичные.НомерСтроки,
	|	ДСБезналичные.Активность,
	|	ДСБезналичные.ВидДвижения,
	|	ДСБезналичные.Организация,
	|	ДСБезналичные.БанковскийСчет,
	|	ДСБезналичные.Сумма,
	|	ДСБезналичные.СуммаУпр,
	|	ДСБезналичные.СуммаРегл,
	|	ДСБезналичные.КЗачислению,
	|	ДСБезналичные.КСписанию,
	|	ДСБезналичные.ХозяйственнаяОперация,
	|	ДСБезналичные.СтатьяДвиженияДенежныхСредств,
	|	ДСБезналичные.АналитикаУчетаПоПартнерам,
	|	ДСБезналичные.Заказ,
	|	ДСБезналичные.ПлатежныйДокумент
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные КАК ДСБезналичные
	|ГДЕ
	|	ДСБезналичные.Регистратор = &Выписка
	|	И ДСБезналичные.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДСБезналичные.Период,
	|	ДСБезналичные.Регистратор,
	|	ДСБезналичные.НомерСтроки,
	|	ДСБезналичные.Активность,
	|	ДСБезналичные.ВидДвижения,
	|	ДСБезналичные.Организация,
	|	ДСБезналичные.БанковскийСчет,
	|	ДСБезналичные.Сумма,
	|	ДСБезналичные.СуммаУпр,
	|	ДСБезналичные.СуммаРегл,
	|	ДСБезналичные.КЗачислению,
	|	ДСБезналичные.КСписанию,
	|	ДСБезналичные.ХозяйственнаяОперация,
	|	ДСБезналичные.СтатьяДвиженияДенежныхСредств,
	|	ДСБезналичные.АналитикаУчетаПоПартнерам,
	|	ДСБезналичные.Заказ,
	|	ДСБезналичные.ПлатежныйДокумент
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные КАК ДСБезналичные
	|ГДЕ
	|	ДСБезналичные.Регистратор = &Выписка
	|	И ДСБезналичные.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПоступлениеДенежныхСредствОтДругойОрганизации) КАК СтатьяДвиженияДенежныхСредств,
	|	СБДСРасшифровкаПлатежа.Заказ,
	|	СБДСРасшифровкаПлатежа.Сумма,
	|	СБДСРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|	СБДСРасшифровкаПлатежа.СуммаВзаиморасчетов
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК СБДСРасшифровкаПлатежа
	|ГДЕ
	|	СБДСРасшифровкаПлатежа.Ссылка = &ПлатежныйДокумент
	|;";
	
КонецФункции

#КонецОбласти // Оплата_Безналичными

#Область Возврат_Безналичными

Функция ПеренестиБезналичныеВозвратыВДругуюОрганизацию_ДанныеДляОбновления(Параметры) Экспорт
    
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДСБезналичные.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные КАК ДСБезналичные
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДСБезналичные.Регистратор) = ТИП(Документ.УдалитьВыпискаПоРасчетномуСчету)
	|	И ДСБезналичные.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|	И ДСБезналичные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
    |";
    
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(
        Параметры, 
        Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка")
    );	
	
КонецФункции

// Обработчик обновления BAS УТ 3.2.1
// Создает документы "Поступление безналичных денежных средств" 
// по приходным движениям выписок с хоз. операцией "ВозвратДенежныхСредствВДругуюОрганизацию".
// Переносит движения:
// - документа выписки в регистре накопления "ДенежныеСредстваБезналичные"
// - документа СписаниеБезналичныхДенежныхСредств по другой организации по регистрам:
//   - РасчетыСПоставщиками
//   - РасчетыСПоставщикамиПоДокументам
//   - ДвиженияДенежныеСредстваКонтрагент
// по хоз. операциям "ВозвратДенежныхСредствОтДругойОрганизации" под вновь созданный документ.
Процедура ПеренестиБезналичныеВозвратыВДругуюОрганизацию(Параметры) Экспорт
    
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("ТекстЗапросаПоДокументам",  ТекстЗапросаДокументыВозвратыВДругуюОрганизациюБезналичныйРасчет());
	ПараметрыОбработчика.Вставить("ТекстЗапросаНовыеДвижения", ТекстЗапросаНовыеДвиженияВозвратыВДругуюОрганизациюБезналичныйРасчет());
	ПараметрыОбработчика.Вставить("ИмяДокумента", "ПоступлениеБезналичныхДенежныхСредств");
	ПараметрыОбработчика.Вставить("РасчетыСПартнерами", "РасчетыСПоставщиками");
	
    ПеренестиДвиженияДругойОрганизацииБезналичныйРасчет(Параметры, ПараметрыОбработчика);
	
КонецПроцедуры

Функция ТекстЗапросаДокументыВозвратыВДругуюОрганизациюБезналичныйРасчет()
    
	ТекстЗапроса = ТекстЗапросаДокументыОплатыВДругуюОрганизациюБезналичныйРасчет();
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПроведениеПоРасчетамСКлиентами", "ПроведениеПоРасчетамСПоставщиками");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПоступлениеДенежныхСредствИзДругойОрганизации", "ВозвратДенежныхСредствОтДругойОрганизации");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ОплатаДенежныхСредствВДругуюОрганизацию", "ВозвратДенежныхСредствВДругуюОрганизацию");
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаНовыеДвиженияВозвратыВДругуюОрганизациюБезналичныйРасчет()
    
	Возврат
	"ВЫБРАТЬ
	|	РасчетыСПартнерами.Период,
	|	РасчетыСПартнерами.НомерСтроки,
	|	РасчетыСПартнерами.Активность,
	|	РасчетыСПартнерами.ВидДвижения,
	|	РасчетыСПартнерами.АналитикаУчетаПоПартнерам,
	|	РасчетыСПартнерами.ЗаказПоставщику,
	|	РасчетыСПартнерами.Валюта,
	|	РасчетыСПартнерами.Сумма,
	|	РасчетыСПартнерами.Оплачивается,
	|	РасчетыСПартнерами.КОплате,
	|	РасчетыСПартнерами.КПоступлению,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации) КАК ХозяйственнаяОперация,
	|	РасчетыСПартнерами.ФормаОплаты,
	|	РасчетыСПартнерами.ЗаявкаНаРасходованиеДенежныхСредств,
	|	РасчетыСПартнерами.ЗакупкаПоЗаказу,
	|	РасчетыСПартнерами.ДатаРегистратора,
	|	РасчетыСПартнерами.ДатаПлатежа,
	|	РасчетыСПартнерами.СуммаРегл,
	|	РасчетыСПартнерами.СуммаУпр,
	|	РасчетыСПартнерами.ЗалогЗаТару,
	|	РасчетыСПартнерами.СтатьяДвиженияДенежныхСредств
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками КАК РасчетыСПартнерами
	|ГДЕ
	|	РасчетыСПартнерами.Регистратор = &ПлатежныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыСПартнерамиПоДокументам.Период,
	|	РасчетыСПартнерамиПоДокументам.НомерСтроки,
	|	РасчетыСПартнерамиПоДокументам.Активность,
	|	РасчетыСПартнерамиПоДокументам.ВидДвижения,
	|	РасчетыСПартнерамиПоДокументам.АналитикаУчетаПоПартнерам,
	|	РасчетыСПартнерамиПоДокументам.ЗаказПоставщику,
	|	РасчетыСПартнерамиПоДокументам.РасчетныйДокумент,
	|	РасчетыСПартнерамиПоДокументам.Валюта,
	|	РасчетыСПартнерамиПоДокументам.УдалитьДатаПлатежа,
	|	РасчетыСПартнерамиПоДокументам.УдалитьКПоступлению,
	|	РасчетыСПартнерамиПоДокументам.УдалитьКОплате,
	|	РасчетыСПартнерамиПоДокументам.КВозврату,
	|	РасчетыСПартнерамиПоДокументам.Долг,
	|	РасчетыСПартнерамиПоДокументам.ДолгУпр,
	|	РасчетыСПартнерамиПоДокументам.ДолгРегл,
	|	РасчетыСПартнерамиПоДокументам.Предоплата,
	|	РасчетыСПартнерамиПоДокументам.ПредоплатаУпр,
	|	РасчетыСПартнерамиПоДокументам.ПредоплатаРегл,
	|	РасчетыСПартнерамиПоДокументам.ЗалогЗаТару,
	|	РасчетыСПартнерамиПоДокументам.ЗалогЗаТаруРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации) КАК ХозяйственнаяОперация,
    |	РасчетыСПартнерамиПоДокументам.ДатаПлатежа,
	|	РасчетыСПартнерамиПоДокументам.СтатьяДвиженияДенежныхСредств
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК РасчетыСПартнерамиПоДокументам
	|ГДЕ
	|	РасчетыСПартнерамиПоДокументам.Регистратор = &ПлатежныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДвиженияДСКонтрагент.Период,
	|	ДвиженияДСКонтрагент.Активность,
	|	ДвиженияДСКонтрагент.ХозяйственнаяОперация,
	|	ДвиженияДСКонтрагент.Организация,
	|	ДвиженияДСКонтрагент.Подразделение,
	|	ДвиженияДСКонтрагент.ДенежныеСредства,
	|	ДвиженияДСКонтрагент.ТипДенежныхСредств,
	|	ДвиженияДСКонтрагент.СтатьяДвиженияДенежныхСредств,
	|	ДвиженияДСКонтрагент.ВалютаПлатежа,
	|	ДвиженияДСКонтрагент.Партнер,
	|	ДвиженияДСКонтрагент.Контрагент,
	|	ДвиженияДСКонтрагент.Договор,
	|	ДвиженияДСКонтрагент.ОбъектРасчетов,
	|	ДвиженияДСКонтрагент.РасчетныйДокумент,
	|	ДвиженияДСКонтрагент.СуммаОплаты,
	|	ДвиженияДСКонтрагент.СуммаОплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаОплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.СуммаПостоплаты,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.СуммаПредоплаты,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.ВалютаВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаОплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.ИсточникГФУДенежныхСредств,
	|	ДвиженияДСКонтрагент.ИсточникГФУРасчетов,
	|	ДвиженияДСКонтрагент.ОтложенноеПроведение
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДвиженияДСКонтрагент
	|ГДЕ
	|	ДвиженияДСКонтрагент.Регистратор = &ПлатежныйДокумент
	|	И ДвиженияДСКонтрагент.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДвиженияДСКонтрагент.Период,
	|	ДвиженияДСКонтрагент.Регистратор КАК Регистратор,
	|	ДвиженияДСКонтрагент.Активность,
	|	ДвиженияДСКонтрагент.ХозяйственнаяОперация,
	|	ДвиженияДСКонтрагент.Организация,
	|	ДвиженияДСКонтрагент.Подразделение,
	|	ДвиженияДСКонтрагент.ДенежныеСредства,
	|	ДвиженияДСКонтрагент.ТипДенежныхСредств,
	|	ДвиженияДСКонтрагент.СтатьяДвиженияДенежныхСредств,
	|	ДвиженияДСКонтрагент.ВалютаПлатежа,
	|	ДвиженияДСКонтрагент.Партнер,
	|	ДвиженияДСКонтрагент.Контрагент,
	|	ДвиженияДСКонтрагент.Договор,
	|	ДвиженияДСКонтрагент.ОбъектРасчетов,
	|	ДвиженияДСКонтрагент.РасчетныйДокумент,
	|	ДвиженияДСКонтрагент.СуммаОплаты,
	|	ДвиженияДСКонтрагент.СуммаОплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаОплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.СуммаПостоплаты,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.СуммаПредоплаты,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.ВалютаВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаОплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.ИсточникГФУДенежныхСредств,
	|	ДвиженияДСКонтрагент.ИсточникГФУРасчетов,
	|	ДвиженияДСКонтрагент.ОтложенноеПроведение
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДвиженияДСКонтрагент
	|ГДЕ
	|	ДвиженияДСКонтрагент.Регистратор = &ПлатежныйДокумент
	|	И ДвиженияДСКонтрагент.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДСБезналичные.Период,
	|	ДСБезналичные.НомерСтроки,
	|	ДСБезналичные.Активность,
	|	ДСБезналичные.ВидДвижения,
	|	ДСБезналичные.Организация,
	|	ДСБезналичные.БанковскийСчет,
	|	ДСБезналичные.Сумма,
	|	ДСБезналичные.СуммаУпр,
	|	ДСБезналичные.СуммаРегл,
	|	ДСБезналичные.КЗачислению,
	|	ДСБезналичные.КСписанию,
	|	ДСБезналичные.ХозяйственнаяОперация,
	|	ДСБезналичные.СтатьяДвиженияДенежныхСредств,
	|	ДСБезналичные.АналитикаУчетаПоПартнерам,
	|	ДСБезналичные.Заказ,
	|	ДСБезналичные.ПлатежныйДокумент
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные КАК ДСБезналичные
	|ГДЕ
	|	ДСБезналичные.Регистратор = &Выписка
	|	И ДСБезналичные.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДСБезналичные.Период,
	|	ДСБезналичные.Регистратор,
	|	ДСБезналичные.НомерСтроки,
	|	ДСБезналичные.Активность,
	|	ДСБезналичные.ВидДвижения,
	|	ДСБезналичные.Организация,
	|	ДСБезналичные.БанковскийСчет,
	|	ДСБезналичные.Сумма,
	|	ДСБезналичные.СуммаУпр,
	|	ДСБезналичные.СуммаРегл,
	|	ДСБезналичные.КЗачислению,
	|	ДСБезналичные.КСписанию,
	|	ДСБезналичные.ХозяйственнаяОперация,
	|	ДСБезналичные.СтатьяДвиженияДенежныхСредств,
	|	ДСБезналичные.АналитикаУчетаПоПартнерам,
	|	ДСБезналичные.Заказ,
	|	ДСБезналичные.ПлатежныйДокумент
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные КАК ДСБезналичные
	|ГДЕ
	|	ДСБезналичные.Регистратор = &Выписка
	|	И ДСБезналичные.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ВозвратДенежныхСредствОтДругойОрганизации) КАК СтатьяДвиженияДенежныхСредств,
	|	СБДСРасшифровкаПлатежа.Заказ,
	|	СБДСРасшифровкаПлатежа.Сумма,
	|	СБДСРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|	СБДСРасшифровкаПлатежа.СуммаВзаиморасчетов
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК СБДСРасшифровкаПлатежа
	|ГДЕ
	|	СБДСРасшифровкаПлатежа.Ссылка = &ПлатежныйДокумент
	|;";
	
КонецФункции

#КонецОбласти // Возврат_Безналичными

Процедура ПеренестиДвиженияДругойОрганизацииБезналичныйРасчет(Параметры, ПараметрыОбработчика) 
    
    ПолноеИмяОбъекта = "Документ.УДАЛИТЬВыпискаПоРасчетномуСчету"; 
    
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(
        Параметры.Очередь, 
        ПолноеИмяОбъекта, 
        МенеджерВременныхТаблиц
    );
    
    Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
    КонецЕсли;
    
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
    
	ЗапросПоДокументам = Новый Запрос;
    ЗапросПоДокументам.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
    
    ТекстЗапросаПоДокументам = ПараметрыОбработчика.ТекстЗапросаПоДокументам;
	ЗапросПоДокументам.Текст = ТекстЗапросаПоДокументам;
    ЗапросПоДокументам.Текст = СтрЗаменить(ЗапросПоДокументам.Текст, "ВТДляОбработки", Результат.ИмяВременнойТаблицы);
    
    ТекстЗапросаНовыеДвижения = ПараметрыОбработчика.ТекстЗапросаНовыеДвижения;
    ЗапросНовыеДвижения = Новый Запрос(ТекстЗапросаНовыеДвижения);
    
    
	ВыборкаПоДокументу = ЗапросПоДокументам.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоДокументу.Следующий() Цикл
		
		НачатьТранзакцию();
		
        Попытка	
            
			Выписка = ВыборкаПоДокументу.Выписка;
            
			Выборка = ВыборкаПоДокументу.Выбрать();
            Пока Выборка.Следующий() Цикл
                
    			ПлатежныйДокумент = Выборка.ПлатежныйДокумент;
    			ЗапросНовыеДвижения.УстановитьПараметр("Выписка", Выписка);
    			ЗапросНовыеДвижения.УстановитьПараметр("Организация", Выборка.Организация);
    			ЗапросНовыеДвижения.УстановитьПараметр("ПлатежныйДокумент", ПлатежныйДокумент);
    			Результат = ЗапросНовыеДвижения.ВыполнитьПакет();
                
    			Если ПараметрыОбработчика.Свойство("ИмяДокумента") Тогда
    				НовыйДокумент = Документы[ПараметрыОбработчика.ИмяДокумента].СоздатьДокумент();
    				ЗаполнитьЗначенияСвойств(НовыйДокумент, Выборка);
    				НовыйДокумент.УстановитьНовыйНомер();
    				НовыйДокумент.НомерВходящегоДокумента = НовыйДокумент.Номер;
                    ТекстКомментария = "#Створений при переході на BAS УТ 3.2.1#";
    				НовыйДокумент.Комментарий = ТекстКомментария;
    				НовыйДокумент.РасшифровкаПлатежа.Загрузить(Результат[6].Выгрузить());
    				ОбновлениеИнформационнойБазы.ЗаписатьДанные(НовыйДокумент, Истина);
    				НовыйРегистратор = НовыйДокумент.Ссылка;
    			Иначе
    				НовыйРегистратор = Выборка.ПлатежныйДокумент;
                КонецЕсли;
                
                
    			Блокировка = Новый БлокировкаДанных;
                
                БлокировкаРасчетыСПартнерами = Блокировка.Добавить("РегистрНакопления." + ПараметрыОбработчика.РасчетыСПартнерами + ".НаборЗаписей");
    			БлокировкаРасчетыСПартнерами.УстановитьЗначение("Регистратор", ПлатежныйДокумент);
                
                БлокировкаРасчетыСПартнерамиПоДокументам = Блокировка.Добавить("РегистрНакопления." + ПараметрыОбработчика.РасчетыСПартнерами + "ПоДокументам" + ".НаборЗаписей");
    			БлокировкаРасчетыСПартнерамиПоДокументам.УстановитьЗначение("Регистратор", ПлатежныйДокумент);
                
                БлокировкаДвиженияДенежныеСредстваКонтрагент = Блокировка.Добавить("РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент.НаборЗаписей");
    			БлокировкаДвиженияДенежныеСредстваКонтрагент.УстановитьЗначение("Регистратор", ПлатежныйДокумент);
                
                ТаблицаБлокируемыхРегистраторов = Новый ТаблицаЗначений;
                ТаблицаБлокируемыхРегистраторов.Колонки.Добавить("Регистратор");
                СтрокаТаблицаБлокируемыхРегистраторов = ТаблицаБлокируемыхРегистраторов.Добавить();
                СтрокаТаблицаБлокируемыхРегистраторов.Регистратор = Выписка;
                СтрокаТаблицаБлокируемыхРегистраторов = ТаблицаБлокируемыхРегистраторов.Добавить();
                СтрокаТаблицаБлокируемыхРегистраторов.Регистратор = НовыйРегистратор;
                
                БлокировкаДенежныеСредстваБезналичные = Блокировка.Добавить("РегистрНакопления.ДенежныеСредстваБезналичные.НаборЗаписей");
                БлокировкаДенежныеСредстваБезналичные.ИсточникДанных = ТаблицаБлокируемыхРегистраторов;
                БлокировкаДенежныеСредстваБезналичные.ИспользоватьИзИсточникаДанных("Регистратор", "Регистратор");
    			
    			Блокировка.Заблокировать();
    			
    			// Делаем движения по взаиморасчетам по новому документу
    			ЗагрузитьДвижения(НовыйРегистратор, ПараметрыОбработчика.РасчетыСПартнерами, Результат[0].Выгрузить());
    			ЗагрузитьДвижения(НовыйРегистратор, ПараметрыОбработчика.РасчетыСПартнерами+"ПоДокументам", Результат[1].Выгрузить());
    			
    			// В старом документе очищаем движения по взаиморасчетам
    			ЗагрузитьДвижения(ПлатежныйДокумент, ПараметрыОбработчика.РасчетыСПартнерами);
    			ЗагрузитьДвижения(ПлатежныйДокумент, ПараметрыОбработчика.РасчетыСПартнерами+"ПоДокументам");
    			
    			// Движения ДвиженияДенежныеСредстваКонтрагент по другой организации в новом документе
    			ЗагрузитьДвижения(НовыйРегистратор, "ДвиженияДенежныеСредстваКонтрагент", Результат[2].Выгрузить());
    			// В старом документе движения ДвиженияДенежныеСредстваКонтрагент по другой организации очищаем
    			ЗагрузитьДвижения(ПлатежныйДокумент, "ДвиженияДенежныеСредстваКонтрагент", Результат[3].Выгрузить());
    			
    			// Движения по ДенежныеСредстваБезналичные по заданным хоз.операциям запишем по новому документу
    			НовыеДвижения = Результат[4].Выгрузить();
    			НовыеДвижения.ЗаполнитьЗначения(НовыйРегистратор, "ПлатежныйДокумент");
    			ЗагрузитьДвижения(НовыйРегистратор, "ДенежныеСредстваБезналичные", НовыеДвижения);
    			// Оставшиеся движения ДенежныеСредстваБезналичные по выписке вернем на место
    			ЗагрузитьДвижения(Выписка, "ДенежныеСредстваБезналичные", Результат[5].Выгрузить());
            
            КонецЦикла;      
            
            ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выписка);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
            ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(Выписка);
										
		КонецПопытки;
		
    КонецЦикла;
    
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
        Параметры.Очередь, 
        ПолноеИмяОбъекта
    );
	
КонецПроцедуры

#КонецОбласти // БезналичныйРасчет

#Область НаличныйРасчет

#Область Оплата_Наличными

Функция ПеренестиОплатуВДругуюОрганизациюНаличными_ДанныеДляОбновления(Параметры) Экспорт
    
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДСНаличные.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваНаличные КАК ДСНаличные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
	|		ПО ДСНаличные.Регистратор = ПриходныйКассовыйОрдер.УдалитьРасходныйКассовыйОрдер
	|ГДЕ
	|	ДСНаличные.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)
	|	И ДСНаличные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|";
    
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(
        Параметры, 
        Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка")
    );	
	
КонецФункции

// Обработчик обновления BAS УТ 3.2.1
// Переносит приходные движения другой организации из РКО в ПКО по регистрам:
//   - РасчетыСКлиентами
//   - РасчетыСКлиентамиПоДокументам
//   - ДвиженияДенежныеСредстваКонтрагент
// по хоз. операциям "ПоступлениеДенежныхСредствИзДругойОрганизации"
Процедура ПеренестиОплатуВДругуюОрганизациюНаличными(Параметры) Экспорт
    
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("ТекстЗапросаПоДокументам",  ТекстЗапросаДокументыОплатыВДругуюОрганизациюНаличными());
	ПараметрыОбработчика.Вставить("ТекстЗапросаНовыеДвижения", ТекстЗапросаНовыеДвиженияОплатаВДругуюОрганизациюНаличными());
	ПараметрыОбработчика.Вставить("ИмяДокумента", "");
	ПараметрыОбработчика.Вставить("РасчетыСПартнерами", "РасчетыСКлиентами");
	
    ПеренестиДвиженияДругойОрганизацииНаличными(Параметры, ПараметрыОбработчика);
	
КонецПроцедуры

Функция ТекстЗапросаДокументыОплатыВДругуюОрганизациюНаличными()
    
	Возврат "
	|ВЫБРАТЬ
	|	ДСНаличные.Регистратор КАК РКО,
	|	ПриходныйКассовыйОрдер.Ссылка КАК ПКО,
	|	ДСНаличные.Касса КАК КассаОтправитель,
	|	ДСНаличные.МоментВремени КАК МоментВремени
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваНаличные КАК ДСНаличные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляОбработки КАК ДокументыКОбработке
	|		ПО ДСНаличные.Регистратор = ДокументыКОбработке.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
	|		ПО ДСНаличные.Регистратор = ПриходныйКассовыйОрдер.УдалитьРасходныйКассовыйОрдер
	|ГДЕ
	|	ДСНаличные.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)
	|	И ДСНаличные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДСНаличные.МоментВремени УБЫВ
    |
	|ИТОГИ ПО
	|	РКО
    |";
	
КонецФункции

Функция ТекстЗапросаНовыеДвиженияОплатаВДругуюОрганизациюНаличными()
    
	Возврат
	"////////////////////////////////////////////////////////////////////////////////
	|// Новые движения ПКО
	|ВЫБРАТЬ
	|	РасчетыСКлиентами.Период,
	|	РасчетыСКлиентами.Активность,
	|	РасчетыСКлиентами.ВидДвижения,
	|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам,
	|	РасчетыСКлиентами.ЗаказКлиента,
	|	РасчетыСКлиентами.Валюта,
	|	РасчетыСКлиентами.Сумма,
	|	РасчетыСКлиентами.КОплате,
	|	РасчетыСКлиентами.КОтгрузке,
	|	РасчетыСКлиентами.Отгружается,
	|	РасчетыСКлиентами.ХозяйственнаяОперация,
	|	РасчетыСКлиентами.ФормаОплаты,
	|	РасчетыСКлиентами.СчетНаОплату,
	|	РасчетыСКлиентами.ПродажаПоЗаказу,
	|	РасчетыСКлиентами.ДатаРегистратора,
	|	РасчетыСКлиентами.ДатаПлатежа,
	|	РасчетыСКлиентами.СуммаРегл,
	|	РасчетыСКлиентами.СуммаУпр,
	|	РасчетыСКлиентами.ИсключатьПриКонтроле,
	|	РасчетыСКлиентами.ДопустимаяСуммаЗадолженности,
	|	РасчетыСКлиентами.ЗалогЗаТару,
	|	РасчетыСКлиентами.СтатьяДвиженияДенежныхСредств
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
	|ГДЕ
	|	РасчетыСКлиентами.Регистратор = &ПлатежныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Новые движения ПКО
	|ВЫБРАТЬ
	|	РасчетыСКлиентамиПоДокументам.Период,
	|	РасчетыСКлиентамиПоДокументам.Активность,
	|	РасчетыСКлиентамиПоДокументам.ВидДвижения,
	|	РасчетыСКлиентамиПоДокументам.АналитикаУчетаПоПартнерам,
	|	РасчетыСКлиентамиПоДокументам.ЗаказКлиента,
	|	РасчетыСКлиентамиПоДокументам.РасчетныйДокумент,
	|	РасчетыСКлиентамиПоДокументам.Валюта,
	|	РасчетыСКлиентамиПоДокументам.УдалитьДатаПлатежа,
	|	РасчетыСКлиентамиПоДокументам.УдалитьКОтгрузке,
	|	РасчетыСКлиентамиПоДокументам.УдалитьКОплате,
	|	РасчетыСКлиентамиПоДокументам.КВозврату,
	|	РасчетыСКлиентамиПоДокументам.Долг,
	|	РасчетыСКлиентамиПоДокументам.ДолгУпр,
	|	РасчетыСКлиентамиПоДокументам.ДолгРегл,
	|	РасчетыСКлиентамиПоДокументам.Предоплата,
	|	РасчетыСКлиентамиПоДокументам.ПредоплатаУпр,
	|	РасчетыСКлиентамиПоДокументам.ПредоплатаРегл,
	|	РасчетыСКлиентамиПоДокументам.ЗалогЗаТару,
	|	РасчетыСКлиентамиПоДокументам.ЗалогЗаТаруРегл,
	|	РасчетыСКлиентамиПоДокументам.ХозяйственнаяОперация,
    |	РасчетыСКлиентамиПоДокументам.ДатаПлатежа,
	|	РасчетыСКлиентамиПоДокументам.СтатьяДвиженияДенежныхСредств
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК РасчетыСКлиентамиПоДокументам
	|ГДЕ
	|	РасчетыСКлиентамиПоДокументам.Регистратор = &ПлатежныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Новые движения ПКО
	|ВЫБРАТЬ
	|	ДвиженияДСКонтрагент.Период,
	|	ДвиженияДСКонтрагент.Активность,
	|	ДвиженияДСКонтрагент.ХозяйственнаяОперация,
	|	ДвиженияДСКонтрагент.Организация,
	|	ДвиженияДСКонтрагент.Подразделение,
	|	ДвиженияДСКонтрагент.ДенежныеСредства,
	|	ДвиженияДСКонтрагент.ТипДенежныхСредств,
	|	ДвиженияДСКонтрагент.СтатьяДвиженияДенежныхСредств,
	|	ДвиженияДСКонтрагент.ВалютаПлатежа,
	|	ДвиженияДСКонтрагент.Партнер,
	|	ДвиженияДСКонтрагент.Контрагент,
	|	ДвиженияДСКонтрагент.Договор,
	|	ДвиженияДСКонтрагент.ОбъектРасчетов,
	|	ДвиженияДСКонтрагент.РасчетныйДокумент,
	|	ДвиженияДСКонтрагент.СуммаОплаты,
	|	ДвиженияДСКонтрагент.СуммаОплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаОплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.СуммаПостоплаты,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.СуммаПредоплаты,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.ВалютаВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаОплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.ИсточникГФУДенежныхСредств,
	|	ДвиженияДСКонтрагент.ИсточникГФУРасчетов,
	|	ДвиженияДСКонтрагент.ОтложенноеПроведение
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДвиженияДСКонтрагент
	|ГДЕ
	|	ДвиженияДСКонтрагент.Регистратор = &ПлатежныйДокумент
	|	И ДвиженияДСКонтрагент.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Оставшиеся движения РКО
	|ВЫБРАТЬ
	|	ДвиженияДСКонтрагент.Период,
	|	ДвиженияДСКонтрагент.Регистратор КАК Регистратор,
	|	ДвиженияДСКонтрагент.Активность,
	|	ДвиженияДСКонтрагент.ХозяйственнаяОперация,
	|	ДвиженияДСКонтрагент.Организация,
	|	ДвиженияДСКонтрагент.Подразделение,
	|	ДвиженияДСКонтрагент.ДенежныеСредства,
	|	ДвиженияДСКонтрагент.ТипДенежныхСредств,
	|	ДвиженияДСКонтрагент.СтатьяДвиженияДенежныхСредств,
	|	ДвиженияДСКонтрагент.ВалютаПлатежа,
	|	ДвиженияДСКонтрагент.Партнер,
	|	ДвиженияДСКонтрагент.Контрагент,
	|	ДвиженияДСКонтрагент.Договор,
	|	ДвиженияДСКонтрагент.ОбъектРасчетов,
	|	ДвиженияДСКонтрагент.РасчетныйДокумент,
	|	ДвиженияДСКонтрагент.СуммаОплаты,
	|	ДвиженияДСКонтрагент.СуммаОплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаОплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.СуммаПостоплаты,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.СуммаПредоплаты,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.ВалютаВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаОплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.ИсточникГФУДенежныхСредств,
	|	ДвиженияДСКонтрагент.ИсточникГФУРасчетов,
	|	ДвиженияДСКонтрагент.ОтложенноеПроведение
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДвиженияДСКонтрагент
	|ГДЕ
	|	ДвиженияДСКонтрагент.Регистратор = &ПлатежныйДокумент
	|	И ДвиженияДСКонтрагент.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ВозвратДенежныхСредствОтПоставщика) КАК СтатьяДвиженияДенежныхСредств,
	|	РКОРасшифровкаПлатежа.Заказ,
	|	РКОРасшифровкаПлатежа.Сумма,
	|	РКОРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|	РКОРасшифровкаПлатежа.СуммаВзаиморасчетов
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК РКОРасшифровкаПлатежа
	|ГДЕ
	|	РКОРасшифровкаПлатежа.Ссылка = &ПлатежныйДокумент
    |";
	
КонецФункции

#КонецОбласти // Оплата_Наличными

#Область Возврат_Наличными

Функция ПеренестиВозвратВДругуюОрганизациюНаличными_ДанныеДляОбновления(Параметры) Экспорт
    
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДСНаличные.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваНаличные КАК ДСНаличные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
	|		ПО ДСНаличные.Регистратор = ПриходныйКассовыйОрдер.УдалитьРасходныйКассовыйОрдер
	|ГДЕ
	|	ДСНаличные.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|	И ДСНаличные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|";
    
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(
        Параметры, 
        Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка")
    );	
	
КонецФункции

// Обработчик обновления BAS УТ 3.2.1
// Переносит приходные движения другой организации из РКО в ПКО по регистрам:
//   - РасчетыСПоставщиками
//   - РасчетыСПоставщикамиПоДокументам
//   - ДвиженияДенежныеСредстваКонтрагент
// по хоз. операциям "ПоступлениеДенежныхСредствИзДругойОрганизации"
Процедура ПеренестиВозвратВДругуюОрганизациюНаличными(Параметры) Экспорт
    
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("ТекстЗапросаПоДокументам",  ТекстЗапросаДокументыВозвратаВДругуюОрганизациюНаличными());
	ПараметрыОбработчика.Вставить("ТекстЗапросаНовыеДвижения", ТекстЗапросаНовыеДвиженияВозвратВДругуюОрганизациюНаличными());
	ПараметрыОбработчика.Вставить("ИмяДокумента", "");
	ПараметрыОбработчика.Вставить("РасчетыСПартнерами", "РасчетыСПоставщиками");
	
    ПеренестиДвиженияДругойОрганизацииНаличными(Параметры, ПараметрыОбработчика);
	
КонецПроцедуры

Функция ТекстЗапросаДокументыВозвратаВДругуюОрганизациюНаличными()
    
	ТекстЗапроса = ТекстЗапросаДокументыОплатыВДругуюОрганизациюНаличными();
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПроведениеПоРасчетамСКлиентами", "ПроведениеПоРасчетамСПоставщиками");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ОплатаДенежныхСредствВДругуюОрганизацию", "ВозвратДенежныхСредствВДругуюОрганизацию");
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаНовыеДвиженияВозвратВДругуюОрганизациюНаличными()
    
	Возврат
	"////////////////////////////////////////////////////////////////////////////////
	|// Новые движения ПКО
	|ВЫБРАТЬ
	|	РасчетыСПартнерами.Период,
	|	РасчетыСПартнерами.НомерСтроки,
	|	РасчетыСПартнерами.Активность,
	|	РасчетыСПартнерами.ВидДвижения,
	|	РасчетыСПартнерами.АналитикаУчетаПоПартнерам,
	|	РасчетыСПартнерами.ЗаказПоставщику,
	|	РасчетыСПартнерами.Валюта,
	|	РасчетыСПартнерами.Сумма,
	|	РасчетыСПартнерами.Оплачивается,
	|	РасчетыСПартнерами.КОплате,
	|	РасчетыСПартнерами.КПоступлению,
	|	РасчетыСПартнерами.ХозяйственнаяОперация,
	|	РасчетыСПартнерами.ФормаОплаты,
	|	РасчетыСПартнерами.ЗаявкаНаРасходованиеДенежныхСредств,
	|	РасчетыСПартнерами.ЗакупкаПоЗаказу,
	|	РасчетыСПартнерами.ДатаРегистратора,
	|	РасчетыСПартнерами.ДатаПлатежа,
	|	РасчетыСПартнерами.СуммаРегл,
	|	РасчетыСПартнерами.СуммаУпр,
	|	РасчетыСПартнерами.ЗалогЗаТару,
	|	РасчетыСПартнерами.СтатьяДвиженияДенежныхСредств
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками КАК РасчетыСПартнерами
	|ГДЕ
	|	РасчетыСПартнерами.Регистратор = &ПлатежныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Новые движения ПКО
	|ВЫБРАТЬ
	|	РасчетыСПартнерамиПоДокументам.Период,
	|	РасчетыСПартнерамиПоДокументам.НомерСтроки,
	|	РасчетыСПартнерамиПоДокументам.Активность,
	|	РасчетыСПартнерамиПоДокументам.ВидДвижения,
	|	РасчетыСПартнерамиПоДокументам.АналитикаУчетаПоПартнерам,
	|	РасчетыСПартнерамиПоДокументам.ЗаказПоставщику,
	|	РасчетыСПартнерамиПоДокументам.РасчетныйДокумент,
	|	РасчетыСПартнерамиПоДокументам.Валюта,
	|	РасчетыСПартнерамиПоДокументам.УдалитьДатаПлатежа,
	|	РасчетыСПартнерамиПоДокументам.УдалитьКПоступлению,
	|	РасчетыСПартнерамиПоДокументам.УдалитьКОплате,
	|	РасчетыСПартнерамиПоДокументам.КВозврату,
	|	РасчетыСПартнерамиПоДокументам.Долг,
	|	РасчетыСПартнерамиПоДокументам.ДолгУпр,
	|	РасчетыСПартнерамиПоДокументам.ДолгРегл,
	|	РасчетыСПартнерамиПоДокументам.Предоплата,
	|	РасчетыСПартнерамиПоДокументам.ПредоплатаУпр,
	|	РасчетыСПартнерамиПоДокументам.ПредоплатаРегл,
	|	РасчетыСПартнерамиПоДокументам.ЗалогЗаТару,
	|	РасчетыСПартнерамиПоДокументам.ЗалогЗаТаруРегл,
	|	РасчетыСПартнерамиПоДокументам.ХозяйственнаяОперация,
    |	РасчетыСПартнерамиПоДокументам.ДатаПлатежа,
	|	РасчетыСПартнерамиПоДокументам.СтатьяДвиженияДенежныхСредств
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК РасчетыСПартнерамиПоДокументам
	|ГДЕ
	|	РасчетыСПартнерамиПоДокументам.Регистратор = &ПлатежныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Новые движения ПКО
	|ВЫБРАТЬ
	|	ДвиженияДСКонтрагент.Период,
	|	ДвиженияДСКонтрагент.Активность,
	|	ДвиженияДСКонтрагент.ХозяйственнаяОперация,
	|	ДвиженияДСКонтрагент.Организация,
	|	ДвиженияДСКонтрагент.Подразделение,
	|	ДвиженияДСКонтрагент.ДенежныеСредства,
	|	ДвиженияДСКонтрагент.ТипДенежныхСредств,
	|	ДвиженияДСКонтрагент.СтатьяДвиженияДенежныхСредств,
	|	ДвиженияДСКонтрагент.ВалютаПлатежа,
	|	ДвиженияДСКонтрагент.Партнер,
	|	ДвиженияДСКонтрагент.Контрагент,
	|	ДвиженияДСКонтрагент.Договор,
	|	ДвиженияДСКонтрагент.ОбъектРасчетов,
	|	ДвиженияДСКонтрагент.РасчетныйДокумент,
	|	ДвиженияДСКонтрагент.СуммаОплаты,
	|	ДвиженияДСКонтрагент.СуммаОплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаОплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.СуммаПостоплаты,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.СуммаПредоплаты,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.ВалютаВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаОплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.ИсточникГФУДенежныхСредств,
	|	ДвиженияДСКонтрагент.ИсточникГФУРасчетов,
	|	ДвиженияДСКонтрагент.ОтложенноеПроведение
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДвиженияДСКонтрагент
	|ГДЕ
	|	ДвиженияДСКонтрагент.Регистратор = &ПлатежныйДокумент
	|	И ДвиженияДСКонтрагент.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Оставшиеся движения РКО
	|ВЫБРАТЬ
	|	ДвиженияДСКонтрагент.Период,
	|	ДвиженияДСКонтрагент.Регистратор КАК Регистратор,
	|	ДвиженияДСКонтрагент.Активность,
	|	ДвиженияДСКонтрагент.ХозяйственнаяОперация,
	|	ДвиженияДСКонтрагент.Организация,
	|	ДвиженияДСКонтрагент.Подразделение,
	|	ДвиженияДСКонтрагент.ДенежныеСредства,
	|	ДвиженияДСКонтрагент.ТипДенежныхСредств,
	|	ДвиженияДСКонтрагент.СтатьяДвиженияДенежныхСредств,
	|	ДвиженияДСКонтрагент.ВалютаПлатежа,
	|	ДвиженияДСКонтрагент.Партнер,
	|	ДвиженияДСКонтрагент.Контрагент,
	|	ДвиженияДСКонтрагент.Договор,
	|	ДвиженияДСКонтрагент.ОбъектРасчетов,
	|	ДвиженияДСКонтрагент.РасчетныйДокумент,
	|	ДвиженияДСКонтрагент.СуммаОплаты,
	|	ДвиженияДСКонтрагент.СуммаОплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаОплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.СуммаПостоплаты,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.СуммаПредоплаты,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.ВалютаВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаОплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.ИсточникГФУДенежныхСредств,
	|	ДвиженияДСКонтрагент.ИсточникГФУРасчетов,
	|	ДвиженияДСКонтрагент.ОтложенноеПроведение
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДвиженияДСКонтрагент
	|ГДЕ
	|	ДвиженияДСКонтрагент.Регистратор = &ПлатежныйДокумент
	|	И ДвиженияДСКонтрагент.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПоступлениеОплатыОтКлиента) КАК СтатьяДвиженияДенежныхСредств,
	|	РКОРасшифровкаПлатежа.Заказ,
	|	РКОРасшифровкаПлатежа.Сумма,
	|	РКОРасшифровкаПлатежа.ВалютаВзаиморасчетов,
	|	РКОРасшифровкаПлатежа.СуммаВзаиморасчетов
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК РКОРасшифровкаПлатежа
	|ГДЕ
	|	РКОРасшифровкаПлатежа.Ссылка = &ПлатежныйДокумент
    |";
    
	
КонецФункции

#КонецОбласти // Возврат_Наличными

Процедура ПеренестиДвиженияДругойОрганизацииНаличными(Параметры, ПараметрыОбработчика) 
    
    ПолноеИмяОбъекта = "Документ.РасходныйКассовыйОрдер";
    
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(
        Параметры.Очередь, 
        ПолноеИмяОбъекта, 
        МенеджерВременныхТаблиц
    );
    
    Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
    КонецЕсли;
    
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
    
	ЗапросПоДокументам = Новый Запрос;
    ЗапросПоДокументам.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
    
    ТекстЗапросаПоДокументам = ПараметрыОбработчика.ТекстЗапросаПоДокументам;
	ЗапросПоДокументам.Текст = ТекстЗапросаПоДокументам;
    ЗапросПоДокументам.Текст = СтрЗаменить(ЗапросПоДокументам.Текст, "ВТДляОбработки", Результат.ИмяВременнойТаблицы);
    
    ТекстЗапросаНовыеДвижения = ПараметрыОбработчика.ТекстЗапросаНовыеДвижения;
    ЗапросНовыеДвижения       = Новый Запрос(ТекстЗапросаНовыеДвижения);
    
    
	ВыборкаПоДокументу = ЗапросПоДокументам.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоДокументу.Следующий() Цикл
		
		НачатьТранзакцию();
		
        Попытка	
            
            ПлатежныйДокумент = ВыборкаПоДокументу.РКО;
            
			Выборка = ВыборкаПоДокументу.Выбрать();
            Пока Выборка.Следующий() Цикл
                
    			ЗапросНовыеДвижения.УстановитьПараметр("ПлатежныйДокумент", ПлатежныйДокумент);
    			Результат = ЗапросНовыеДвижения.ВыполнитьПакет();
    			
    			НовыйРегистратор = Выборка.ПКО;
                
    			Блокировка = Новый БлокировкаДанных;
                
    			БлокировкаПКО = Блокировка.Добавить("Документ.ПриходныйКассовыйОрдер");
    			БлокировкаПКО.УстановитьЗначение("Ссылка", Выборка.ПКО);
                
                ТаблицаБлокируемыхРегистраторов = Новый ТаблицаЗначений;
                ТаблицаБлокируемыхРегистраторов.Колонки.Добавить("Регистратор");
                СтрокаТаблицаБлокируемыхРегистраторов = ТаблицаБлокируемыхРегистраторов.Добавить();
                СтрокаТаблицаБлокируемыхРегистраторов.Регистратор = ПлатежныйДокумент;
                СтрокаТаблицаБлокируемыхРегистраторов = ТаблицаБлокируемыхРегистраторов.Добавить();
                СтрокаТаблицаБлокируемыхРегистраторов.Регистратор = НовыйРегистратор;
                
                БлокировкаРасчетыСПартнерами = Блокировка.Добавить("РегистрНакопления." + ПараметрыОбработчика.РасчетыСПартнерами + ".НаборЗаписей");
                БлокировкаРасчетыСПартнерами.ИсточникДанных = ТаблицаБлокируемыхРегистраторов;
                БлокировкаРасчетыСПартнерами.ИспользоватьИзИсточникаДанных("Регистратор", "Регистратор");
                
                БлокировкаРасчетыСПартнерамиПоДокументам = Блокировка.Добавить("РегистрНакопления." + ПараметрыОбработчика.РасчетыСПартнерами + "ПоДокументам" + ".НаборЗаписей");
                БлокировкаРасчетыСПартнерами.ИсточникДанных = ТаблицаБлокируемыхРегистраторов;
                БлокировкаРасчетыСПартнерами.ИспользоватьИзИсточникаДанных("Регистратор", "Регистратор");
                
                БлокировкаДвиженияДенежныеСредстваКонтрагент = Блокировка.Добавить("РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент.НаборЗаписей");
                БлокировкаРасчетыСПартнерами.ИсточникДанных = ТаблицаБлокируемыхРегистраторов;
                БлокировкаРасчетыСПартнерами.ИспользоватьИзИсточникаДанных("Регистратор", "Регистратор");
                
    			Блокировка.Заблокировать();
                
    			ОбъектПКО = НовыйРегистратор.ПолучитьОбъект();
    			ОбъектПКО.КассаОтправитель = Выборка.КассаОтправитель;
    			ОбъектПКО.РасшифровкаПлатежа.Загрузить(Результат[4].Выгрузить());
    			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ОбъектПКО, Истина);
                
    			
    			// Движения по взаиморасчетам под новый документ
    			ЗагрузитьДвижения(НовыйРегистратор, ПараметрыОбработчика.РасчетыСПартнерами, Результат[0].Выгрузить());
    			ЗагрузитьДвижения(НовыйРегистратор, ПараметрыОбработчика.РасчетыСПартнерами+"ПоДокументам", Результат[1].Выгрузить());
    			// Движения по другой организации под новый документ
    			ЗагрузитьДвижения(НовыйРегистратор, "ДвиженияДенежныеСредстваКонтрагент", Результат[2].Выгрузить());
    			
    			// В старом документе взаиморасчеты очистить
    			ЗагрузитьДвижения(ПлатежныйДокумент, ПараметрыОбработчика.РасчетыСПартнерами);
    			ЗагрузитьДвижения(ПлатежныйДокумент, ПараметрыОбработчика.РасчетыСПартнерами+"ПоДокументам");
    			// В старом документе движения по другой организации очистить
    			ЗагрузитьДвижения(ПлатежныйДокумент, "ДвиженияДенежныеСредстваКонтрагент", Результат[3].Выгрузить());
            
            КонецЦикла;      
            
            ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ПлатежныйДокумент);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
            ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ПлатежныйДокумент);
										
		КонецПопытки;
		
    КонецЦикла;
    
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
        Параметры.Очередь, 
        ПолноеИмяОбъекта
    );
	
КонецПроцедуры

#КонецОбласти // НаличныйРасчет

#Область ВнутренняяПередачаДенежныхСредств

Функция ПеренестиВнутреннеюПередачуДС_ДанныеДляОбновления(Параметры) Экспорт
    
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДСБезналичные.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные КАК ДСБезналичные
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДСБезналичные.Регистратор) = ТИП(Документ.УдалитьВыпискаПоРасчетномуСчету)
	|	И ДСБезналичные.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|	И ДСБезналичные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|";
    
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(
        Параметры, 
        Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка")
    );	
	
КонецФункции

// Обработчик обновления BAS УТ 3.2.1
// Создает документы "Поступление безналичных денежных средств" 
// по движениям выписок с хоз. операцией "ВнутренняяПередачаДенежныхСредств".
// И переносит движения выписки в регистрах накопления "ДенежныеСредстваБезналичные" и "ДвиженияДенежныхСредств"
// по хоз. операциям "ВнутренняяПередачаДенежныхСредств" и "ВнутреннееПоступлениеДенежныхСредств" под вновь созданный документ.
Процедура ПеренестиВнутреннеюПередачуДС(Параметры) Экспорт
    
    ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("ТекстЗапросаПоДокументам", ТекстЗапросаДокументыВнутренняяПередачаДС());
	ПараметрыОбработчика.Вставить("ТекстЗапросаНовыеДвижения", ТекстЗапросаНовыеДвиженияВыпискиВнутренняяПередачаДС());
	ПараметрыОбработчика.Вставить("ИмяДокумента", "ПоступлениеБезналичныхДенежныхСредств");
	ПараметрыОбработчика.Вставить("ОборотыУУ", "ДвиженияДенежныеСредстваКонтрагент");
	
	ПеренестиДвиженияВыписки(Параметры, ПараметрыОбработчика);
	
КонецПроцедуры

Функция ТекстЗапросаДокументыВнутренняяПередачаДС()
	
	Возврат
	"ВЫБРАТЬ 
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежныхДокументов.ПлатежноеПоручение) КАК ТипПлатежногоДокумента,
	|	ИСТИНА КАК Проведен,
	|	ДСБезналичные.Период КАК Дата,
	|	ДСБезналичные.Организация КАК Организация,
	|	ДСБезналичные.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ДСБезналичные.БанковскийСчет КАК БанковскийСчет,
	|	ВЫРАЗИТЬ(ДСБезналичные.ПлатежныйДокумент КАК Документ.СписаниеБезналичныхДенежныхСредств).БанковскийСчет КАК БанковскийСчетОтправитель,
	|	ВЫРАЗИТЬ(ДСБезналичные.ПлатежныйДокумент КАК Документ.СписаниеБезналичныхДенежныхСредств).СтатьяДвиженияДенежныхСредств КАК СтатьяДвиженияДенежныхСредств,
	|	ДСБезналичные.ПлатежныйДокумент КАК СписаниеБезналичныхДенежныхСредств,
	|	ДСБезналичные.ПлатежныйДокумент КАК РасходныйКассовыйОрдер,
	|	ИСТИНА КАК ПроведеноБанком,
	|	ДСБезналичные.Период КАК ДатаПроведенияБанком,
	|	ДСБезналичные.Период КАК ДатаВходящегоДокумента,
	|	ДСБезналичные.БанковскийСчет.ВалютаДенежныхСредств КАК Валюта,
	|	ДСБезналичные.Сумма КАК СуммаДокумента,
	|	ДСБезналичные.Регистратор КАК Выписка,
	|	ДСБезналичные.ПлатежныйДокумент КАК ПлатежныйДокумент,
	|	ДСБезналичные.МоментВремени КАК МоментВремени
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные КАК ДСБезналичные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляОбработки КАК ДокументыКОбработке
	|		ПО ДСБезналичные.Регистратор = ДокументыКОбработке.Ссылка
	|ГДЕ
	|	ДСБезналичные.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|	И ДСБезналичные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДСБезналичные.МоментВремени УБЫВ
    |
	|ИТОГИ ПО
	|	Выписка
    |";
    
КонецФункции

Функция ТекстЗапросаНовыеДвиженияВыпискиВнутренняяПередачаДС()
	
	Возврат
	"ВЫБРАТЬ
	|	ДСБезналичные.Период,
	|	ДСБезналичные.НомерСтроки,
	|	ДСБезналичные.Активность,
	|	ДСБезналичные.ВидДвижения,
	|	ДСБезналичные.Организация,
	|	ДСБезналичные.БанковскийСчет,
	|	ДСБезналичные.Сумма,
	|	ДСБезналичные.СуммаУпр,
	|	ДСБезналичные.СуммаРегл,
	|	ДСБезналичные.КЗачислению,
	|	ДСБезналичные.КСписанию,
	|	ДСБезналичные.ХозяйственнаяОперация,
	|	ДСБезналичные.СтатьяДвиженияДенежныхСредств,
	|	ДСБезналичные.АналитикаУчетаПоПартнерам,
	|	ДСБезналичные.Заказ,
	|	ДСБезналичные.ПлатежныйДокумент
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные КАК ДСБезналичные
	|ГДЕ
	|	ДСБезналичные.Регистратор = &Выписка
	|	И ДСБезналичные.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДвиженияДСКонтрагент.Период,
	|	ДвиженияДСКонтрагент.Активность,
	|	ДвиженияДСКонтрагент.ХозяйственнаяОперация,
	|	ДвиженияДСКонтрагент.Организация,
	|	ДвиженияДСКонтрагент.Подразделение,
	|	ДвиженияДСКонтрагент.ДенежныеСредства,
	|	ДвиженияДСКонтрагент.ТипДенежныхСредств,
	|	ДвиженияДСКонтрагент.СтатьяДвиженияДенежныхСредств,
	|	ДвиженияДСКонтрагент.ВалютаПлатежа,
	|	ДвиженияДСКонтрагент.Партнер,
	|	ДвиженияДСКонтрагент.Контрагент,
	|	ДвиженияДСКонтрагент.Договор,
	|	ДвиженияДСКонтрагент.ОбъектРасчетов,
	|	ДвиженияДСКонтрагент.РасчетныйДокумент,
	|	ДвиженияДСКонтрагент.СуммаОплаты,
	|	ДвиженияДСКонтрагент.СуммаОплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаОплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.СуммаПостоплаты,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.СуммаПредоплаты,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.ВалютаВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаОплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.ИсточникГФУДенежныхСредств,
	|	ДвиженияДСКонтрагент.ИсточникГФУРасчетов,
	|	ДвиженияДСКонтрагент.ОтложенноеПроведение
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДвиженияДСКонтрагент
	|ГДЕ
	|	ДвиженияДСКонтрагент.Регистратор = &Выписка
	|	И ДвиженияДСКонтрагент.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутреннееПоступлениеДенежныхСредств)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДСБезналичные.Период,
	|	ДСБезналичные.Регистратор КАК Регистрато,
	|	ДСБезналичные.НомерСтроки,
	|	ДСБезналичные.Активность,
	|	ДСБезналичные.ВидДвижения,
	|	ДСБезналичные.Организация,
	|	ДСБезналичные.БанковскийСчет,
	|	ДСБезналичные.Сумма,
	|	ДСБезналичные.СуммаУпр,
	|	ДСБезналичные.СуммаРегл,
	|	ДСБезналичные.КЗачислению,
	|	ДСБезналичные.КСписанию,
	|	ДСБезналичные.ХозяйственнаяОперация,
	|	ДСБезналичные.СтатьяДвиженияДенежныхСредств,
	|	ДСБезналичные.АналитикаУчетаПоПартнерам,
	|	ДСБезналичные.Заказ,
	|	ДСБезналичные.ПлатежныйДокумент
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные КАК ДСБезналичные
	|ГДЕ
	|	ДСБезналичные.Регистратор = &Выписка
	|	И ДСБезналичные.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДвиженияДСКонтрагент.Период,
	|	ДвиженияДСКонтрагент.Регистратор КАК Регистратор,
	|	ДвиженияДСКонтрагент.НомерСтроки,
	|	ДвиженияДСКонтрагент.Активность,
	|	ДвиженияДСКонтрагент.ХозяйственнаяОперация,
	|	ДвиженияДСКонтрагент.Организация,
	|	ДвиженияДСКонтрагент.Подразделение,
	|	ДвиженияДСКонтрагент.ДенежныеСредства,
	|	ДвиженияДСКонтрагент.ТипДенежныхСредств,
	|	ДвиженияДСКонтрагент.СтатьяДвиженияДенежныхСредств,
	|	ДвиженияДСКонтрагент.ВалютаПлатежа,
	|	ДвиженияДСКонтрагент.Партнер,
	|	ДвиженияДСКонтрагент.Контрагент,
	|	ДвиженияДСКонтрагент.Договор,
	|	ДвиженияДСКонтрагент.ОбъектРасчетов,
	|	ДвиженияДСКонтрагент.РасчетныйДокумент,
	|	ДвиженияДСКонтрагент.СуммаОплаты,
	|	ДвиженияДСКонтрагент.СуммаОплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаОплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.СуммаПостоплаты,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.СуммаПредоплаты,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыРегл,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыВВалютеПлатежа,
	|	ДвиженияДСКонтрагент.ВалютаВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаОплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаПостоплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.СуммаПредоплатыВВалютеВзаиморасчетов,
	|	ДвиженияДСКонтрагент.ИсточникГФУДенежныхСредств,
	|	ДвиженияДСКонтрагент.ИсточникГФУРасчетов,
	|	ДвиженияДСКонтрагент.ОтложенноеПроведение
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДвиженияДСКонтрагент
	|ГДЕ
	|	ДвиженияДСКонтрагент.Регистратор = &Выписка
	|	И ДвиженияДСКонтрагент.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутреннееПоступлениеДенежныхСредств)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Новые движения Поступления безналичных денежных средств по регистру ДСвПути
	|ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО
	|ГДЕ
	|	ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Новые движения Списания безналичных денежных средств по регистру ДСвПути
	|ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО
	|ГДЕ
	|	ЛОЖЬ
	|;";
	
КонецФункции

#КонецОбласти // ВнутренняяПередачаДенежныхСредств

#КонецОбласти // ПеренестиДвиженияДругойОрганизации

#Область ПеренестиДвиженияОборотныхРегистровУУ

#Область ДвиженияДенежныеСредства

Функция ПеренестиДвиженияДенежныеСредства_ДанныеДляОбновления(Параметры) Экспорт
    
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ 
	|	ДвиженияУУ.Регистратор КАК Выписка
	|ПОМЕСТИТЬ втДвиженияУУ
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныхСредств КАК ДвиженияУУ
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДвиженияУУ.Регистратор) = ТИП(Документ.УдалитьВыпискаПоРасчетномуСчету)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыпискаПоСчетуВходящиеПлатежи.Ссылка КАК Выписка
	|ПОМЕСТИТЬ втДокументы
	|ИЗ
	|	втДвиженияУУ КАК втДвиженияУУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УдалитьВыпискаПоРасчетномуСчету.ВходящиеПлатежи КАК ВыпискаПоСчетуВходящиеПлатежи
	|		ПО втДвиженияУУ.Выписка = ВыпискаПоСчетуВходящиеПлатежи.Ссылка
	|			И (ТИПЗНАЧЕНИЯ(ВыпискаПоСчетуВходящиеПлатежи.ПлатежныйДокумент) <> ТИП(Документ.ОтчетБанкаПоОперациямЭквайринга))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВыпискаПоСчетуИсходящиеПлатежи.Ссылка
	|ИЗ
	|	втДвиженияУУ КАК втДвиженияУУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УдалитьВыпискаПоРасчетномуСчету.ИсходящиеПлатежи КАК ВыпискаПоСчетуИсходящиеПлатежи
	|		ПО втДвиженияУУ.Выписка = ВыпискаПоСчетуИсходящиеПлатежи.Ссылка
	|			И (ТИПЗНАЧЕНИЯ(ВыпискаПоСчетуИсходящиеПлатежи.ПлатежныйДокумент) <> ТИП(Документ.ОтчетБанкаПоОперациямЭквайринга))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втДокументы.Выписка КАК Ссылка
	|ИЗ
	|	втДокументы КАК втДокументы
    |";
    
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(
        Параметры, 
        Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка")
    );	
	
КонецФункции

// Обработчик обновления BAS УТ 3.2.1
Процедура ПеренестиДвиженияДенежныеСредства(Параметры) Экспорт
    
    ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("ТекстЗапросаПоДокументам",  ТекстЗапросаДокументыДвиженияДенежныеСредства());
	ПараметрыОбработчика.Вставить("ТекстЗапросаНовыеДвижения", ТекстЗапросаНовыеДвиженияДенежныеСредства());
	ПараметрыОбработчика.Вставить("ИмяРегистраОборотов", "ДвиженияДенежныхСредств");
	
	ПеренестиДвиженияПоОборотнымРегистрам(Параметры, ПараметрыОбработчика);
	
КонецПроцедуры

Функция ТекстЗапросаДокументыДвиженияДенежныеСредства()
	
	Возврат 
	"ВЫБРАТЬ 
	|	ДвиженияУУ.Регистратор КАК Выписка,
	|	ДвиженияУУ.ХозяйственнаяОперация,
	|	ДвиженияУУ.МоментВремени КАК МоментВремени
	|ПОМЕСТИТЬ втДвиженияУУ
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныхСредств КАК ДвиженияУУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляОбработки КАК ДокументыКОбработке
	|		ПО ДвиженияУУ.Регистратор = ДокументыКОбработке.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыпискаПоСчетуВходящиеПлатежи.Ссылка КАК Выписка,
	|	ВыпискаПоСчетуВходящиеПлатежи.ПлатежныйДокумент КАК ПлатежныйДокумент,
	|	втДвиженияУУ.ХозяйственнаяОперация КАК регХозОперация,
	|	ВыпискаПоСчетуВходящиеПлатежи.ПлатежныйДокумент.ХозяйственнаяОперация КАК докХозОперация,
	|	втДвиженияУУ.МоментВремени,
	|	ВыпискаПоСчетуВходящиеПлатежи.ПлатежныйДокумент.Организация КАК Организация
	|ПОМЕСТИТЬ втДокументы
	|ИЗ
	|	втДвиженияУУ КАК втДвиженияУУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УдалитьВыпискаПоРасчетномуСчету.ВходящиеПлатежи КАК ВыпискаПоСчетуВходящиеПлатежи
	|		ПО втДвиженияУУ.Выписка = ВыпискаПоСчетуВходящиеПлатежи.Ссылка
	|			И (ТИПЗНАЧЕНИЯ(ВыпискаПоСчетуВходящиеПлатежи.ПлатежныйДокумент) <> ТИП(Документ.ОтчетБанкаПоОперациямЭквайринга))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВыпискаПоСчетуИсходящиеПлатежи.Ссылка,
	|	ВыпискаПоСчетуИсходящиеПлатежи.ПлатежныйДокумент,
	|	втДвиженияУУ.ХозяйственнаяОперация,
	|	ВыпискаПоСчетуИсходящиеПлатежи.ПлатежныйДокумент.ХозяйственнаяОперация,
	|	втДвиженияУУ.МоментВремени,
	|	ВыпискаПоСчетуИсходящиеПлатежи.ПлатежныйДокумент.Организация
	|ИЗ
	|	втДвиженияУУ КАК втДвиженияУУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УдалитьВыпискаПоРасчетномуСчету.ИсходящиеПлатежи КАК ВыпискаПоСчетуИсходящиеПлатежи
	|		ПО втДвиженияУУ.Выписка = ВыпискаПоСчетуИсходящиеПлатежи.Ссылка
	|			И (ТИПЗНАЧЕНИЯ(ВыпискаПоСчетуИсходящиеПлатежи.ПлатежныйДокумент) <> ТИП(Документ.ОтчетБанкаПоОперациямЭквайринга))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
    |	ДокументыКОбработке.Ссылка КАК Выписка,
    |	втДокументы.Выписка ЕСТЬ NULL КАК УдалитьИзОчереди,
	|	втДокументы.ПлатежныйДокумент,
	|	втДокументы.Организация,
	|	втДокументы.регХозОперация,
	|	ВЫБОР
	|		КОГДА втДокументы.докХозОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзБанка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств)
	|		КОГДА втДокументы.докХозОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствСДругогоСчета)
	|		КОГДА втДокументы.докХозОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СдачаДенежныхСредствВБанк)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет)
	|		КОГДА втДокументы.докХозОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствОтКонвертацииВалюты)
	|		ИНАЧЕ втДокументы.регХозОперация
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	втДокументы.докХозОперация КАК докХозОперация,
	|	втДокументы.МоментВремени
	|ИЗ
	|	ВТДляОбработки КАК ДокументыКОбработке
	|		ЛЕВОЕ СОЕДИНЕНИЕ втДокументы КАК втДокументы
	|		ПО ДокументыКОбработке.Ссылка = втДокументы.Выписка
	|
    |
	|УПОРЯДОЧИТЬ ПО
	|	втДокументы.МоментВремени УБЫВ
    |
	|ИТОГИ МАКСИМУМ(УдалитьИзОчереди) ПО
	|	Выписка
    |";
	
КонецФункции

Функция ТекстЗапросаНовыеДвиженияДенежныеСредства()
	
	Возврат
	"ВЫБРАТЬ
	|	*
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныхСредств КАК ДвиженияУУ
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДвиженияУУ.Регистратор) = ТИП(Документ.УдалитьВыпискаПоРасчетномуСчету)
	|	И ДвиженияУУ.Регистратор = &Выписка
	|	И ДвиженияУУ.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныхСредств КАК ДвиженияУУ
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДвиженияУУ.Регистратор) = ТИП(Документ.УдалитьВыпискаПоРасчетномуСчету)
	|	И ДвиженияУУ.Регистратор = &Выписка
	|	И ДвиженияУУ.ХозяйственнаяОперация <> &ХозяйственнаяОперация
	|;";
	
КонецФункции

#КонецОбласти

#Область ДвиженияДенежныеСредстваДоходыРасходы

Функция ПеренестиДвиженияДенежныеСредстваДоходыРасходы_ДанныеДляОбновления(Параметры) Экспорт
    
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ 
	|	ДвиженияУУ.Регистратор КАК Выписка,
	|	ДвиженияУУ.ХозяйственнаяОперация,
	|	ДвиженияУУ.МоментВремени КАК МоментВремени,
	|	ДвиженияУУ.Подразделение,
	|	ДвиженияУУ.СтатьяДвиженияДенежныхСредств
	|ПОМЕСТИТЬ втДвиженияУУ
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваДоходыРасходы КАК ДвиженияУУ
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДвиженияУУ.Регистратор) = ТИП(Документ.УдалитьВыпискаПоРасчетномуСчету)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыпискаПоСчетуВходящиеПлатежи.Ссылка КАК Выписка
	|ПОМЕСТИТЬ втДокументы
	|ИЗ
	|	втДвиженияУУ КАК втДвиженияУУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УдалитьВыпискаПоРасчетномуСчету.ВходящиеПлатежи КАК ВыпискаПоСчетуВходящиеПлатежи
	|		ПО втДвиженияУУ.Выписка = ВыпискаПоСчетуВходящиеПлатежи.Ссылка
	|			И (ТИПЗНАЧЕНИЯ(ВыпискаПоСчетуВходящиеПлатежи.ПлатежныйДокумент) <> ТИП(Документ.ОтчетБанкаПоОперациямЭквайринга))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВыпискаПоСчетуИсходящиеПлатежи.Ссылка
	|ИЗ
	|	втДвиженияУУ КАК втДвиженияУУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УдалитьВыпискаПоРасчетномуСчету.ИсходящиеПлатежи КАК ВыпискаПоСчетуИсходящиеПлатежи
	|		ПО втДвиженияУУ.Выписка = ВыпискаПоСчетуИсходящиеПлатежи.Ссылка
	|			И (ТИПЗНАЧЕНИЯ(ВыпискаПоСчетуИсходящиеПлатежи.ПлатежныйДокумент) <> ТИП(Документ.ОтчетБанкаПоОперациямЭквайринга))
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втДокументы.Выписка КАК Ссылка
    |";
    
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(
        Параметры, 
        Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка")
    );	
	
КонецФункции

// Обработчик обновления BAS УТ 3.2.1
Процедура ПеренестиДвиженияДенежныеСредстваДоходыРасходы(Параметры) Экспорт
    
    ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("ТекстЗапросаПоДокументам",  ТекстЗапросаДокументыДвиженияДенежныеСредстваДоходыРасходы());
	ПараметрыОбработчика.Вставить("ТекстЗапросаНовыеДвижения", ТекстЗапросаНовыеДвиженияДенежныеСредстваДоходыРасходы());
	ПараметрыОбработчика.Вставить("ИмяРегистраОборотов", "ДвиженияДенежныеСредстваДоходыРасходы");
	
	ПеренестиДвиженияПоОборотнымРегистрам(Параметры, ПараметрыОбработчика);
	
КонецПроцедуры

Функция ТекстЗапросаДокументыДвиженияДенежныеСредстваДоходыРасходы()
	
	Возврат 
	"ВЫБРАТЬ 
	|	ДвиженияУУ.Регистратор КАК Выписка,
	|	ДвиженияУУ.ХозяйственнаяОперация,
	|	ДвиженияУУ.МоментВремени КАК МоментВремени,
	|	ДвиженияУУ.Подразделение,
	|	ДвиженияУУ.СтатьяДвиженияДенежныхСредств
	|ПОМЕСТИТЬ втДвиженияУУ
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваДоходыРасходы КАК ДвиженияУУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляОбработки КАК ДокументыКОбработке
	|		ПО ДвиженияУУ.Регистратор = ДокументыКОбработке.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыпискаПоСчетуВходящиеПлатежи.Ссылка КАК Выписка,
	|	ВыпискаПоСчетуВходящиеПлатежи.ПлатежныйДокумент КАК ПлатежныйДокумент,
	|	втДвиженияУУ.ХозяйственнаяОперация КАК регХозОперация,
	|	ВыпискаПоСчетуВходящиеПлатежи.ПлатежныйДокумент.ХозяйственнаяОперация КАК докХозОперация,
	|	втДвиженияУУ.МоментВремени,
	|	ВыпискаПоСчетуВходящиеПлатежи.ПлатежныйДокумент.Организация КАК Организация
	|ПОМЕСТИТЬ втДокументы
	|ИЗ
	|	втДвиженияУУ КАК втДвиженияУУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УдалитьВыпискаПоРасчетномуСчету.ВходящиеПлатежи КАК ВыпискаПоСчетуВходящиеПлатежи
	|		ПО втДвиженияУУ.Выписка = ВыпискаПоСчетуВходящиеПлатежи.Ссылка
	|			И (ТИПЗНАЧЕНИЯ(ВыпискаПоСчетуВходящиеПлатежи.ПлатежныйДокумент) <> ТИП(Документ.ОтчетБанкаПоОперациямЭквайринга))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВыпискаПоСчетуИсходящиеПлатежи.Ссылка,
	|	ВыпискаПоСчетуИсходящиеПлатежи.ПлатежныйДокумент,
	|	втДвиженияУУ.ХозяйственнаяОперация,
	|	ВыпискаПоСчетуИсходящиеПлатежи.ПлатежныйДокумент.ХозяйственнаяОперация,
	|	втДвиженияУУ.МоментВремени,
	|	ВыпискаПоСчетуИсходящиеПлатежи.ПлатежныйДокумент.Организация
	|ИЗ
	|	втДвиженияУУ КАК втДвиженияУУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УдалитьВыпискаПоРасчетномуСчету.ИсходящиеПлатежи КАК ВыпискаПоСчетуИсходящиеПлатежи
	|		ПО втДвиженияУУ.Выписка = ВыпискаПоСчетуИсходящиеПлатежи.Ссылка
	|			И (ТИПЗНАЧЕНИЯ(ВыпискаПоСчетуИсходящиеПлатежи.ПлатежныйДокумент) <> ТИП(Документ.ОтчетБанкаПоОперациямЭквайринга))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
    |	ДокументыКОбработке.Ссылка КАК Выписка,
    |	втДокументы.Выписка ЕСТЬ NULL КАК УдалитьИзОчереди,
	|	втДокументы.ПлатежныйДокумент,
	|	втДокументы.Организация,
	|	втДокументы.регХозОперация,
	|	ВЫБОР
	|		КОГДА втДокументы.докХозОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзБанка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств)
	|		КОГДА втДокументы.докХозОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствСДругогоСчета)
	|		КОГДА втДокументы.докХозОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СдачаДенежныхСредствВБанк)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет)
	|		КОГДА втДокументы.докХозОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.КонвертацияВалюты)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствОтКонвертацииВалюты)
	|		ИНАЧЕ втДокументы.регХозОперация
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	втДокументы.докХозОперация КАК докХозОперация,
	|	втДокументы.МоментВремени
	|ИЗ
	|	ВТДляОбработки КАК ДокументыКОбработке
	|		ЛЕВОЕ СОЕДИНЕНИЕ втДокументы КАК втДокументы
	|		ПО ДокументыКОбработке.Ссылка = втДокументы.Выписка
    |
	|УПОРЯДОЧИТЬ ПО
	|	втДокументы.МоментВремени УБЫВ
    |
	|ИТОГИ МАКСИМУМ(УдалитьИзОчереди) ПО
	|	Выписка
    |";
	
КонецФункции

Функция ТекстЗапросаНовыеДвиженияДенежныеСредстваДоходыРасходы()
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапросаНовыеДвиженияДенежныеСредства(),"ДвиженияДенежныхСредств","ДвиженияДенежныеСредстваДоходыРасходы");
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область ОчиститьДвиженияПоЭквайрингу

Функция ОчиститьДвиженияДенежныеСредстваВыпискиПоЭквайрингу_ДанныеДляОбновления(Параметры) Экспорт
    
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ 
	|	ДвиженияУУ.Регистратор КАК Выписка
	|ПОМЕСТИТЬ втДвиженияУУ
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныхСредств КАК ДвиженияУУ
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДвиженияУУ.Регистратор) = ТИП(Документ.УдалитьВыпискаПоРасчетномуСчету)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыпискаПоСчетуВходящиеПлатежи.Ссылка КАК Выписка
	|ПОМЕСТИТЬ втДокументы
	|ИЗ
	|	втДвиженияУУ КАК втДвиженияУУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УдалитьВыпискаПоРасчетномуСчету.ВходящиеПлатежи КАК ВыпискаПоСчетуВходящиеПлатежи
	|		ПО втДвиженияУУ.Выписка = ВыпискаПоСчетуВходящиеПлатежи.Ссылка
	|			И (ТИПЗНАЧЕНИЯ(ВыпискаПоСчетуВходящиеПлатежи.ПлатежныйДокумент) = ТИП(Документ.ОтчетБанкаПоОперациямЭквайринга))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВыпискаПоСчетуИсходящиеПлатежи.Ссылка
	|ИЗ
	|	втДвиженияУУ КАК втДвиженияУУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УдалитьВыпискаПоРасчетномуСчету.ИсходящиеПлатежи КАК ВыпискаПоСчетуИсходящиеПлатежи
	|		ПО втДвиженияУУ.Выписка = ВыпискаПоСчетуИсходящиеПлатежи.Ссылка
	|			И (ТИПЗНАЧЕНИЯ(ВыпискаПоСчетуИсходящиеПлатежи.ПлатежныйДокумент) = ТИП(Документ.ОтчетБанкаПоОперациямЭквайринга))
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втДокументы.Выписка КАК Ссылка
	|ИЗ
	|	втДокументы КАК втДокументы
    |";
    
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(
        Параметры, 
        Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка")
    );	
	
КонецФункции

// Обработчик обновления BAS УТ 3.2.1
Процедура ОчиститьДвиженияДенежныеСредстваВыпискиПоЭквайрингу(Параметры) Экспорт
    
    ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("ТекстЗапросаПоДокументам",  ТекстЗапросаДокументыОчиститьДвиженияДенежныеСредства());
	ПараметрыОбработчика.Вставить("ТекстЗапросаНовыеДвижения", ТекстЗапросаНовыеДвиженияОчиститьДвиженияДенежныеСредства());
	ПараметрыОбработчика.Вставить("ИмяРегистраОборотов", "ДвиженияДенежныхСредств");
	
	ОчиститьДвиженияПоОборотнымРегистрам(Параметры, ПараметрыОбработчика);
	
КонецПроцедуры

Функция ТекстЗапросаДокументыОчиститьДвиженияДенежныеСредства()
	
	Возврат 
	"ВЫБРАТЬ 
	|	ДвиженияУУ.Регистратор КАК Выписка,
	|	ДвиженияУУ.ХозяйственнаяОперация,
	|	ДвиженияУУ.МоментВремени КАК МоментВремени
	|ПОМЕСТИТЬ втДвиженияУУ
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныхСредств КАК ДвиженияУУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляОбработки КАК ДокументыКОбработке
	|		ПО ДвиженияУУ.Регистратор = ДокументыКОбработке.Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыпискаПоСчетуВходящиеПлатежи.Ссылка КАК Выписка,
	|	ВыпискаПоСчетуВходящиеПлатежи.ПлатежныйДокумент КАК ПлатежныйДокумент,
	|	втДвиженияУУ.ХозяйственнаяОперация КАК регХозОперация,
	|	ВыпискаПоСчетуВходящиеПлатежи.ПлатежныйДокумент.ХозяйственнаяОперация КАК докХозОперация,
	|	втДвиженияУУ.МоментВремени,
	|	ВыпискаПоСчетуВходящиеПлатежи.ПлатежныйДокумент.Организация КАК Организация
	|ПОМЕСТИТЬ втДокументы
	|ИЗ
	|	втДвиженияУУ КАК втДвиженияУУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УдалитьВыпискаПоРасчетномуСчету.ВходящиеПлатежи КАК ВыпискаПоСчетуВходящиеПлатежи
	|		ПО втДвиженияУУ.Выписка = ВыпискаПоСчетуВходящиеПлатежи.Ссылка
	|			И (ТИПЗНАЧЕНИЯ(ВыпискаПоСчетуВходящиеПлатежи.ПлатежныйДокумент) = ТИП(Документ.ОтчетБанкаПоОперациямЭквайринга))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВыпискаПоСчетуИсходящиеПлатежи.Ссылка,
	|	ВыпискаПоСчетуИсходящиеПлатежи.ПлатежныйДокумент,
	|	втДвиженияУУ.ХозяйственнаяОперация,
	|	ВыпискаПоСчетуИсходящиеПлатежи.ПлатежныйДокумент.ХозяйственнаяОперация,
	|	втДвиженияУУ.МоментВремени,
	|	ВыпискаПоСчетуИсходящиеПлатежи.ПлатежныйДокумент.Организация
	|ИЗ
	|	втДвиженияУУ КАК втДвиженияУУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УдалитьВыпискаПоРасчетномуСчету.ИсходящиеПлатежи КАК ВыпискаПоСчетуИсходящиеПлатежи
	|		ПО втДвиженияУУ.Выписка = ВыпискаПоСчетуИсходящиеПлатежи.Ссылка
	|			И (ТИПЗНАЧЕНИЯ(ВыпискаПоСчетуИсходящиеПлатежи.ПлатежныйДокумент) = ТИП(Документ.ОтчетБанкаПоОперациямЭквайринга))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДокументы.Выписка КАК Выписка,
	|	втДокументы.ПлатежныйДокумент,
	|	втДокументы.Организация,
	|	втДокументы.регХозОперация КАК ХозяйственнаяОперация,
	|	втДокументы.докХозОперация КАК докХозОперация,
	|	втДокументы.МоментВремени
	|ИЗ
	|	втДокументы КАК втДокументы
    |
	|
	|УПОРЯДОЧИТЬ ПО
	|	втДокументы.МоментВремени УБЫВ
    |
	|ИТОГИ ПО
	|	Выписка
    |";
	
КонецФункции

Функция ТекстЗапросаНовыеДвиженияОчиститьДвиженияДенежныеСредства()
	
	Возврат
	"ВЫБРАТЬ
	|	*
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныхСредств КАК ДвиженияУУ
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДвиженияУУ.Регистратор) = ТИП(Документ.УдалитьВыпискаПоРасчетномуСчету)
	|	И ДвиженияУУ.Регистратор = &Выписка
	|	И ДвиженияУУ.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|;
	|
	|///////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	*
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныхСредств КАК ДвиженияУУ
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДвиженияУУ.Регистратор) = ТИП(Документ.УдалитьВыпискаПоРасчетномуСчету)
	|	И ДвиженияУУ.Регистратор = &Выписка
	|	И ДвиженияУУ.ХозяйственнаяОперация <> &ХозяйственнаяОперация
	|;";
	
КонецФункции

Функция ОчиститьДвиженияДенежныеСредстваДоходыРасходыВыпискиПоЭквайрингу_ДанныеДляОбновления(Параметры) Экспорт
    
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ 
	|	ДвиженияУУ.Регистратор КАК Выписка
	|ПОМЕСТИТЬ втДвиженияУУ
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваДоходыРасходы КАК ДвиженияУУ
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДвиженияУУ.Регистратор) = ТИП(Документ.УдалитьВыпискаПоРасчетномуСчету)
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыпискаПоСчетуВходящиеПлатежи.Ссылка КАК Выписка
	|ПОМЕСТИТЬ втДокументы
	|ИЗ
	|	втДвиженияУУ КАК втДвиженияУУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УдалитьВыпискаПоРасчетномуСчету.ВходящиеПлатежи КАК ВыпискаПоСчетуВходящиеПлатежи
	|		ПО втДвиженияУУ.Выписка = ВыпискаПоСчетуВходящиеПлатежи.Ссылка
	|			И (ТИПЗНАЧЕНИЯ(ВыпискаПоСчетуВходящиеПлатежи.ПлатежныйДокумент) = ТИП(Документ.ОтчетБанкаПоОперациямЭквайринга))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВыпискаПоСчетуИсходящиеПлатежи.Ссылка
	|ИЗ
	|	втДвиженияУУ КАК втДвиженияУУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УдалитьВыпискаПоРасчетномуСчету.ИсходящиеПлатежи КАК ВыпискаПоСчетуИсходящиеПлатежи
	|		ПО втДвиженияУУ.Выписка = ВыпискаПоСчетуИсходящиеПлатежи.Ссылка
	|			И (ТИПЗНАЧЕНИЯ(ВыпискаПоСчетуИсходящиеПлатежи.ПлатежныйДокумент) = ТИП(Документ.ОтчетБанкаПоОперациямЭквайринга))
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДокументы.Выписка КАК Ссылка
	|ИЗ
	|	втДокументы КАК втДокументы
    |";
    
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(
        Параметры, 
        Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка")
    );	
	
КонецФункции

// Обработчик обновления BAS УТ 3.2.1
Процедура ОчиститьДвиженияДенежныеСредстваДоходыРасходыВыпискиПоЭквайрингу(Параметры) Экспорт
    
    ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("ТекстЗапросаПоДокументам",  ТекстЗапросаДокументыОчиститьДвиженияДенежныеСредстваДоходыРасходы());
	ПараметрыОбработчика.Вставить("ТекстЗапросаНовыеДвижения", ТекстЗапросаНовыеДвиженияОчиститьДвиженияДенежныеСредстваДоходыРасходы());
	ПараметрыОбработчика.Вставить("ИмяРегистраОборотов", "ДвиженияДенежныхСредств");
	
	ОчиститьДвиженияПоОборотнымРегистрам(Параметры, ПараметрыОбработчика);
	
КонецПроцедуры

Функция ТекстЗапросаДокументыОчиститьДвиженияДенежныеСредстваДоходыРасходы()
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапросаДокументыОчиститьДвиженияДенежныеСредства(),"ДвиженияДенежныхСредств","ДвиженияДенежныеСредстваДоходыРасходы");
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаНовыеДвиженияОчиститьДвиженияДенежныеСредстваДоходыРасходы()
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапросаНовыеДвиженияОчиститьДвиженияДенежныеСредства(),"ДвиженияДенежныхСредств","ДвиженияДенежныеСредстваДоходыРасходы");
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

Процедура ПеренестиДвиженияПоОборотнымРегистрам(Параметры, ПараметрыОбработчика) Экспорт
    
    ПолноеИмяОбъекта = "Документ.УДАЛИТЬВыпискаПоРасчетномуСчету";
    
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(
        Параметры.Очередь, 
        ПолноеИмяОбъекта, 
        МенеджерВременныхТаблиц
    );
    
    Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
    КонецЕсли;
    
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
    КонецЕсли;
    
    ИмяРегистраОборотов = ПараметрыОбработчика.ИмяРегистраОборотов;
    
	ЗапросПоДокументам = Новый Запрос;
    ЗапросПоДокументам.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
    
    ТекстЗапросаПоДокументам = ПараметрыОбработчика.ТекстЗапросаПоДокументам;
	ЗапросПоДокументам.Текст = ТекстЗапросаПоДокументам;
    ЗапросПоДокументам.Текст = СтрЗаменить(ЗапросПоДокументам.Текст, "ВТДляОбработки", Результат.ИмяВременнойТаблицы);
    
    ТекстЗапросаНовыеДвижения = ПараметрыОбработчика.ТекстЗапросаНовыеДвижения;
    ЗапросНовыеДвижения       = Новый Запрос(ТекстЗапросаНовыеДвижения);
    
	ВыборкаПоДокументу = ЗапросПоДокументам.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    Пока ВыборкаПоДокументу.Следующий() Цикл
        
        Выписка = ВыборкаПоДокументу.Выписка;
        
        Если ВыборкаПоДокументу.УдалитьИзОчереди Тогда
            // Документы, которые перестали удовлетворять условиям для обработки, нужно удалить из очереди
            ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выписка);
            Продолжить;
        КонецЕсли;
		
		НачатьТранзакцию();
		
		Попытка
			
			Выборка = ВыборкаПоДокументу.Выбрать();
            Пока Выборка.Следующий() Цикл
                
    			НовыйРегистратор = Выборка.ПлатежныйДокумент;
    			
    			ЗапросНовыеДвижения.УстановитьПараметр("Выписка", Выписка);
    			ЗапросНовыеДвижения.УстановитьПараметр("ПлатежныйДокумент", НовыйРегистратор);
    			ЗапросНовыеДвижения.УстановитьПараметр("Организация", Выборка.Организация);
    			ЗапросНовыеДвижения.УстановитьПараметр("ХозяйственнаяОперация", Выборка.ХозяйственнаяОперация);
    			Результат = ЗапросНовыеДвижения.ВыполнитьПакет();
                
    			Блокировка = Новый БлокировкаДанных;
                
                ТаблицаБлокируемыхРегистраторов = Новый ТаблицаЗначений;
                ТаблицаБлокируемыхРегистраторов.Колонки.Добавить("Регистратор");
                СтрокаТаблицаБлокируемыхРегистраторов = ТаблицаБлокируемыхРегистраторов.Добавить();
                СтрокаТаблицаБлокируемыхРегистраторов.Регистратор = Выписка;
                СтрокаТаблицаБлокируемыхРегистраторов = ТаблицаБлокируемыхРегистраторов.Добавить();
                СтрокаТаблицаБлокируемыхРегистраторов.Регистратор = НовыйРегистратор;
                
                БлокировкаРегистраОборотов = Блокировка.Добавить("РегистрНакопления." + ИмяРегистраОборотов + ".НаборЗаписей");
                БлокировкаРегистраОборотов.ИсточникДанных = ТаблицаБлокируемыхРегистраторов;
                БлокировкаРегистраОборотов.ИспользоватьИзИсточникаДанных("Регистратор", "Регистратор");
                
    			Блокировка.Заблокировать();
                
    			// Движения по заданным хоз.операциям запишем под новый документ
    			ЗагрузитьДвижения(НовыйРегистратор, ИмяРегистраОборотов, Результат[0].Выгрузить());
    			// Оставшиеся движения вернем на место
    			ЗагрузитьДвижения(Выписка,          ИмяРегистраОборотов, Результат[1].Выгрузить());
                
            КонецЦикла;    
            
            ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выписка);
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
            ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(Выписка);
            
		КонецПопытки;
	
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
        Параметры.Очередь, 
        ПолноеИмяОбъекта
    );
	
КонецПроцедуры

Процедура ОчиститьДвиженияПоОборотнымРегистрам(Параметры, ПараметрыОбработчика) Экспорт
    
    ПолноеИмяОбъекта = "Документ.УДАЛИТЬВыпискаПоРасчетномуСчету";
    
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(
        Параметры.Очередь, 
        ПолноеИмяОбъекта, 
        МенеджерВременныхТаблиц
    );
    
    Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
    КонецЕсли;
    
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
    КонецЕсли;
    
    ИмяРегистраОборотов = ПараметрыОбработчика.ИмяРегистраОборотов;
    
	ЗапросПоДокументам = Новый Запрос;
    ЗапросПоДокументам.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
    
    ТекстЗапросаПоДокументам = ПараметрыОбработчика.ТекстЗапросаПоДокументам;
	ЗапросПоДокументам.Текст = ТекстЗапросаПоДокументам;
    ЗапросПоДокументам.Текст = СтрЗаменить(ЗапросПоДокументам.Текст, "ВТДляОбработки", Результат.ИмяВременнойТаблицы);
    
    ТекстЗапросаНовыеДвижения = ПараметрыОбработчика.ТекстЗапросаНовыеДвижения;
    ЗапросНовыеДвижения       = Новый Запрос(ТекстЗапросаНовыеДвижения);
    
	ВыборкаПоДокументу = ЗапросПоДокументам.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоДокументу.Следующий() Цикл
    
		НачатьТранзакцию();
        
		Попытка
			
			Выписка = ВыборкаПоДокументу.Выписка;
            
			Выборка = ВыборкаПоДокументу.Выбрать();
            Пока Выборка.Следующий() Цикл
                
    			НовыйРегистратор = Выборка.ПлатежныйДокумент;
    			
    			ЗапросНовыеДвижения.УстановитьПараметр("Выписка", Выписка);
    			ЗапросНовыеДвижения.УстановитьПараметр("ПлатежныйДокумент", НовыйРегистратор);
    			ЗапросНовыеДвижения.УстановитьПараметр("Организация", Выборка.Организация);
    			ЗапросНовыеДвижения.УстановитьПараметр("ХозяйственнаяОперация", Выборка.ХозяйственнаяОперация);
    			Результат = ЗапросНовыеДвижения.ВыполнитьПакет();
                
    			Блокировка = Новый БлокировкаДанных;
                
                ТаблицаБлокируемыхРегистраторов = Новый ТаблицаЗначений;
                ТаблицаБлокируемыхРегистраторов.Колонки.Добавить("Регистратор");
                СтрокаТаблицаБлокируемыхРегистраторов = ТаблицаБлокируемыхРегистраторов.Добавить();
                СтрокаТаблицаБлокируемыхРегистраторов.Регистратор = Выписка;
    			Если ИмяРегистраОборотов = "ДвиженияДенежныеСредстваДоходыРасходы" Тогда
                    СтрокаТаблицаБлокируемыхРегистраторов = ТаблицаБлокируемыхРегистраторов.Добавить();
                    СтрокаТаблицаБлокируемыхРегистраторов.Регистратор = НовыйРегистратор;
    			КонецЕсли;
                
                БлокировкаРегистраОборотов = Блокировка.Добавить("РегистрНакопления." + ИмяРегистраОборотов + ".НаборЗаписей");
                БлокировкаРегистраОборотов.ИсточникДанных = ТаблицаБлокируемыхРегистраторов;
                БлокировкаРегистраОборотов.ИспользоватьИзИсточникаДанных("Регистратор", "Регистратор");
                
    			Блокировка.Заблокировать();
    			
    			// Перенести движения выписки по эквайрингу
    			Если ИмяРегистраОборотов = "ДвиженияДенежныеСредстваДоходыРасходы" Тогда
    				ЗагрузитьДвижения(НовыйРегистратор, ИмяРегистраОборотов, Результат[0].Выгрузить());
    			КонецЕсли;
    			
    			// Оставшиеся движения вернем на место
    			ЗагрузитьДвижения(Выписка, ИмяРегистраОборотов, Результат[1].Выгрузить());
                
            КонецЦикла;    
            
            ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выписка);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
            
            ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(Выписка);
			
		КонецПопытки;
	
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
        Параметры.Очередь, 
        ПолноеИмяОбъекта
    );
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнитьДеньгиВПути

Функция ПеренестиПоступлениеСДругогоСчетаБезналичныйРасчет_ДанныеДляОбновления(Параметры) Экспорт
    
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДСБезналичные.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные КАК ДСБезналичные
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДСБезналичные.Регистратор) = ТИП(Документ.УдалитьВыпискаПоРасчетномуСчету)
	|	И ДСБезналичные.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет)
	|	И ДСБезналичные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|";
    
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(
        Параметры, 
        Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка")
    );	
	
КонецФункции

// Обработчик обновления BAS УТ 3.2.1
// Создает документы "Поступление безналичных денежных средств" 
// по движениям выписок с хоз. операцией "ПеречислениеДенежныхСредствНаДругойСчет".
// И переносит движения выписки в регистрах накопления "ДенежныеСредстваБезналичные" и "ДвиженияДенежныхСредств"
// по хоз. операциям "ПеречислениеДенежныхСредствНаДругойСчет" и "ПоступлениеДенежныхСредствСДругогоСчета"
// под вновь созданный документ.
Процедура ПеренестиПоступлениеСДругогоСчетаБезналичныйРасчет(Параметры) Экспорт
    
    ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("ТекстЗапросаПоДокументам",  ТекстЗапросаДокументыПоступлениеСДругогоСчетаБезналичныйРасчет());
	ПараметрыОбработчика.Вставить("ТекстЗапросаНовыеДвижения", ТекстЗапросаНовыеДвиженияПоступлениеСДругогоСчета());
	ПараметрыОбработчика.Вставить("ИмяДокумента", "ПоступлениеБезналичныхДенежныхСредств");
	
	ПеренестиДвиженияВыписки(Параметры, ПараметрыОбработчика);
	
КонецПроцедуры

Функция ТекстЗапросаДокументыПоступлениеСДругогоСчетаБезналичныйРасчет()
	
	Возврат "
	|ВЫБРАТЬ 
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежныхДокументов.ПлатежноеПоручение) КАК ТипПлатежногоДокумента,
	|	ИСТИНА КАК Проведен,
	|	ДСБезналичные.Период КАК Дата,
	|	ВЫРАЗИТЬ(ДСБезналичные.ПлатежныйДокумент КАК Документ.СписаниеБезналичныхДенежныхСредств).Дата КАК ДатаСписания,
	|	ДСБезналичные.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствСДругогоСчета) КАК ХозяйственнаяОперация,
	|	ДСБезналичные.БанковскийСчет КАК БанковскийСчет,
	|	ВЫРАЗИТЬ(ДСБезналичные.ПлатежныйДокумент КАК Документ.СписаниеБезналичныхДенежныхСредств).БанковскийСчет КАК БанковскийСчетОтправитель,
	|	ДСБезналичные.ПлатежныйДокумент КАК ПлатежныйДокумент,
    |	ДСБезналичные.ПлатежныйДокумент КАК СписаниеБезналичныхДенежныхСредств,
	|	ИСТИНА КАК ПроведеноБанком,
	|	ДСБезналичные.Период КАК ДатаПроведенияБанком,
	|	ДСБезналичные.Период КАК ДатаВходящегоДокумента,
	|	ДСБезналичные.БанковскийСчет.ВалютаДенежныхСредств КАК Валюта,
	|	ДСБезналичные.Сумма КАК СуммаДокумента,
	|	ДСБезналичные.Регистратор КАК Выписка,
	|	ДСБезналичные.МоментВремени КАК МоментВремени
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные КАК ДСБезналичные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляОбработки КАК ДокументыКОбработке
	|		ПО ДСБезналичные.Регистратор = ДокументыКОбработке.Ссылка
	|ГДЕ
	|	
	|	ДСБезналичные.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет)
	|	И ДСБезналичные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДСБезналичные.МоментВремени УБЫВ
    |
	|ИТОГИ ПО
	|	Выписка
    |";
	
КонецФункции

Функция ТекстЗапросаНовыеДвиженияПоступлениеСДругогоСчета()
	
	Возврат
	"
	|// Новые движения Поступления безналичных денежных средств
	|ВЫБРАТЬ
	|	ДСБезналичные.Период,
	|	ДСБезналичные.НомерСтроки,
	|	ДСБезналичные.Активность,
	|	ДСБезналичные.ВидДвижения,
	|	ДСБезналичные.Организация,
	|	ДСБезналичные.БанковскийСчет,
	|	ДСБезналичные.Сумма,
	|	ДСБезналичные.СуммаУпр,
	|	ДСБезналичные.СуммаРегл,
	|	ДСБезналичные.КЗачислению,
	|	ДСБезналичные.КСписанию,
	|	ДСБезналичные.ХозяйственнаяОперация,
	|	ДСБезналичные.СтатьяДвиженияДенежныхСредств,
	|	ДСБезналичные.АналитикаУчетаПоПартнерам,
	|	ДСБезналичные.Заказ,
	|	ДСБезналичные.ПлатежныйДокумент
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные КАК ДСБезналичные
	|ГДЕ
	|	ДСБезналичные.Регистратор = &Выписка
	|	И ДСБезналичные.ПлатежныйДокумент = &ПлатежныйДокумент
	|	И ДСБезналичные.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет)
	|	И ДСБезналичные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Новые движения Поступления безналичных денежных средств
	|ВЫБРАТЬ
	|	ДвиженияДС.Период,
	|	ДвиженияДС.НомерСтроки,
	|	ДвиженияДС.Активность,
	|	ДвиженияДС.ХозяйственнаяОперация,
	|	ДвиженияДС.Организация,
	|	ДвиженияДС.Подразделение,
	|	ДвиженияДС.ДенежныеСредства,
	|	ДвиженияДС.ТипДенежныхСредств,
	|	ДвиженияДС.СтатьяДвиженияДенежныхСредств,
	|	ДвиженияДС.Валюта,
	|	ДвиженияДС.КорДенежныеСредства,
	|	ДвиженияДС.КорТипДенежныхСредств,
	|	ДвиженияДС.Сумма,
	|	ДвиженияДС.СуммаРегл,
	|	ДвиженияДС.СуммаВВалюте,
	|	ДвиженияДС.ИсточникГФУДенежныхСредств,
	|	ДвиженияДС.ИсточникКорГФУДенежныхСредств
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныхСредств КАК ДвиженияДС
	|ГДЕ
	|	ДвиженияДС.Регистратор = &Выписка
	|	И ДвиженияДС.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствСДругогоСчета)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Оставшиеся движения выписки
	|ВЫБРАТЬ
	|	ДСБезналичные.Период,
	|	ДСБезналичные.Регистратор КАК Регистратор,
	|	ДСБезналичные.НомерСтроки,
	|	ДСБезналичные.Активность,
	|	ДСБезналичные.ВидДвижения,
	|	ДСБезналичные.Организация,
	|	ДСБезналичные.БанковскийСчет,
	|	ДСБезналичные.Сумма,
	|	ДСБезналичные.СуммаУпр,
	|	ДСБезналичные.СуммаРегл,
	|	ДСБезналичные.КЗачислению,
	|	ДСБезналичные.КСписанию,
	|	ДСБезналичные.ХозяйственнаяОперация,
	|	ДСБезналичные.СтатьяДвиженияДенежныхСредств,
	|	ДСБезналичные.АналитикаУчетаПоПартнерам,
	|	ДСБезналичные.Заказ,
	|	ДСБезналичные.ПлатежныйДокумент
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные КАК ДСБезналичные
	|ГДЕ
	|	ДСБезналичные.Регистратор = &Выписка
	|	И ДСБезналичные.ПлатежныйДокумент <> &ПлатежныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Оставшиеся движения выписки
	|ВЫБРАТЬ
	|	ДвиженияДС.Период,
	|	ДвиженияДС.Регистратор КАК Регистратор,
	|	ДвиженияДС.НомерСтроки,
	|	ДвиженияДС.Активность,
	|	ДвиженияДС.ХозяйственнаяОперация,
	|	ДвиженияДС.Организация,
	|	ДвиженияДС.Подразделение,
	|	ДвиженияДС.ДенежныеСредства,
	|	ДвиженияДС.ТипДенежныхСредств,
	|	ДвиженияДС.СтатьяДвиженияДенежныхСредств,
	|	ДвиженияДС.Валюта,
	|	ДвиженияДС.КорДенежныеСредства,
	|	ДвиженияДС.КорТипДенежныхСредств,
	|	ДвиженияДС.Сумма,
	|	ДвиженияДС.СуммаРегл,
	|	ДвиженияДС.СуммаВВалюте,
	|	ДвиженияДС.ИсточникГФУДенежныхСредств,
	|	ДвиженияДС.ИсточникКорГФУДенежныхСредств
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныхСредств КАК ДвиженияДС
	|ГДЕ
	|	ДвиженияДС.Регистратор = &Выписка
	|	И ДвиженияДС.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствСДругогоСчета)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Новые движения Поступления безналичных денежных средств по регистру ДСвПути
	|ВЫБРАТЬ
	|	ДСБезналичные.Период,
	|	ИСТИНА КАК Активность,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ДСБезналичные.Организация,
	|	ДСБезналичные.БанковскийСчет КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПеречислениеНаДругойСчет) КАК ВидПереводаДенежныхСредств,
	|	ВЫРАЗИТЬ(ДСБезналичные.ПлатежныйДокумент КАК Документ.СписаниеБезналичныхДенежныхСредств).Контрагент КАК Контрагент,
	|	ВЫРАЗИТЬ(ДСБезналичные.ПлатежныйДокумент КАК Документ.СписаниеБезналичныхДенежныхСредств).БанковскийСчет КАК Отправитель,
	|	ДСБезналичные.БанковскийСчет.ВалютаДенежныхСредств КАК Валюта,
	|	ДСБезналичные.Сумма,
	|	ДСБезналичные.СуммаУпр,
	|	ДСБезналичные.СуммаРегл,
	|	ДСБезналичные.СтатьяДвиженияДенежныхСредств
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные КАК ДСБезналичные
	|ГДЕ
	|	ДСБезналичные.Регистратор = &Выписка
	|	И ДСБезналичные.ПлатежныйДокумент = &ПлатежныйДокумент
	|	И ДСБезналичные.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет)
	|	И ДСБезналичные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Новые движения Списания безналичных денежных средств по регистру ДСвПути
	|ВЫБРАТЬ
	|	ДСБезналичные.Период,
	|	ДСБезналичные.ПлатежныйДокумент КАК Регистратор,
	|	ИСТИНА КАК Активность,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ДСБезналичные.Организация,
	|	ДСБезналичные.БанковскийСчет КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПеречислениеНаДругойСчет) КАК ВидПереводаДенежныхСредств,
	|	ВЫРАЗИТЬ(ДСБезналичные.ПлатежныйДокумент КАК Документ.СписаниеБезналичныхДенежныхСредств).Контрагент КАК Контрагент,
	|	ВЫРАЗИТЬ(ДСБезналичные.ПлатежныйДокумент КАК Документ.СписаниеБезналичныхДенежныхСредств).БанковскийСчет КАК Отправитель,
	|	ДСБезналичные.БанковскийСчет.ВалютаДенежныхСредств КАК Валюта,
	|	ДСБезналичные.Сумма,
	|	ДСБезналичные.СуммаУпр,
	|	ДСБезналичные.СуммаРегл,
	|	ДСБезналичные.СтатьяДвиженияДенежныхСредств
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные КАК ДСБезналичные
	|ГДЕ
	|	ДСБезналичные.Регистратор = &Выписка
	|	И ДСБезналичные.ПлатежныйДокумент = &ПлатежныйДокумент
	|	И ДСБезналичные.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет)
	|	И ДСБезналичные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|;";
	
КонецФункции

// Обработчик обновления BAS УТ 3.2.1
Функция ПеренестиПоступлениеИзБанкаБезналичныйРасчет_ДанныеДляОбновления(Параметры) Экспорт
    
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДСБезналичные.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные КАК ДСБезналичные
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДСБезналичные.Регистратор) = ТИП(Документ.УдалитьВыпискаПоРасчетномуСчету)
	|	И ДСБезналичные.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзБанка)
	|	И ДСБезналичные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|";
    
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(
        Параметры, 
        Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка")
    );	
	
КонецФункции

// Обработчик обновления BAS УТ 3.2.1
// Создает документы "Списание безналичных денежных средств " 
// по движениям выписок с хоз. операцией "ПоступлениеДенежныхСредствИзБанка".
// И переносит движения выписки в регистрах накопления "ДенежныеСредстваБезналичные" и "ДвиженияДенежныхСредств"
// по хоз. операциям "ПоступлениеДенежныхСредствИзБанка" и "СнятиеНаличныхДенежныхСредств"
// под вновь созданный документ.
Процедура ПеренестиПоступлениеИзБанкаБезналичныйРасчет(Параметры) Экспорт
    
    ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("ТекстЗапросаПоДокументам",  ТекстЗапросаДокументыСнятиеНаличныхБезналичныйРасчет());
	ПараметрыОбработчика.Вставить("ТекстЗапросаНовыеДвижения", ТекстЗапросаНовыеДвиженияСнятиеНаличных());
	
	ПеренестиДвиженияВыписки(Параметры, ПараметрыОбработчика);
	
КонецПроцедуры

// Хоз. операция ПоступлениеДенежныхСредствИзБанка
Функция ТекстЗапросаДокументыСнятиеНаличныхБезналичныйРасчет()
	
	Возврат
	"ВЫБРАТЬ 
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежныхДокументов.ПлатежныйОрдер) КАК ТипПлатежногоДокумента,
	|	ИСТИНА КАК Проведен,
	|	ДСБезналичные.Период КАК Дата,
	|	ДСБезналичные.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств) КАК ХозяйственнаяОперация,
	|	ДСБезналичные.БанковскийСчет КАК БанковскийСчет,
	|	ВЫРАЗИТЬ(ДСБезналичные.ПлатежныйДокумент КАК Документ.ПриходныйКассовыйОрдер).Касса КАК КассаПолучатель,
	|	ИСТИНА КАК ПроведеноБанком,
	|	ДСБезналичные.Период КАК ДатаПроведенияБанком,
	|	ДСБезналичные.Период КАК ДатаВходящегоДокумента,
	|	ДСБезналичные.БанковскийСчет.ВалютаДенежныхСредств КАК Валюта,
	|	ДСБезналичные.Сумма КАК СуммаДокумента,
	|	ДСБезналичные.Регистратор КАК Выписка,
	|	ДСБезналичные.ПлатежныйДокумент КАК ПлатежныйДокумент,
	|	ДСБезналичные.МоментВремени КАК МоментВремени
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные КАК ДСБезналичные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляОбработки КАК ДокументыКОбработке
	|		ПО ДСБезналичные.Регистратор = ДокументыКОбработке.Ссылка
	|ГДЕ
	|	
	|	ДСБезналичные.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзБанка)
	|	И ДСБезналичные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДСБезналичные.МоментВремени УБЫВ
    |
	|ИТОГИ ПО
	|	Выписка
    |";
	
КонецФункции

// Хоз. операция ПоступлениеДенежныхСредствИзБанка
Функция ТекстЗапросаНовыеДвиженияСнятиеНаличных()
	
	Возврат
	"
	|// Новые движения Поступления безналичных денежных средств по регистру ДСБезналичные
	|ВЫБРАТЬ
	|	ДСБезналичные.Период,
	|	ДСБезналичные.НомерСтроки,
	|	ДСБезналичные.Активность,
	|	ДСБезналичные.ВидДвижения,
	|	ДСБезналичные.Организация,
	|	ДСБезналичные.БанковскийСчет,
	|	ДСБезналичные.Сумма,
	|	ДСБезналичные.СуммаУпр,
	|	ДСБезналичные.СуммаРегл,
	|	ДСБезналичные.КЗачислению,
	|	ДСБезналичные.КСписанию,
	|	ДСБезналичные.ХозяйственнаяОперация,
	|	ДСБезналичные.СтатьяДвиженияДенежныхСредств,
	|	ДСБезналичные.АналитикаУчетаПоПартнерам,
	|	ДСБезналичные.Заказ,
	|	ДСБезналичные.ПлатежныйДокумент
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные КАК ДСБезналичные
	|ГДЕ
	|	ДСБезналичные.Регистратор = &Выписка
	|	И ДСБезналичные.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзБанка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Новые движения Поступления безналичных денежных средств по регистру ДвиженияДС
	|ВЫБРАТЬ
	|	ДвиженияДС.Период,
	|	ДвиженияДС.НомерСтроки,
	|	ДвиженияДС.Активность,
	|	ДвиженияДС.ХозяйственнаяОперация,
	|	ДвиженияДС.Организация,
	|	ДвиженияДС.Подразделение,
	|	ДвиженияДС.ДенежныеСредства,
	|	ДвиженияДС.ТипДенежныхСредств,
	|	ДвиженияДС.СтатьяДвиженияДенежныхСредств,
	|	ДвиженияДС.Валюта,
	|	ДвиженияДС.КорДенежныеСредства,
	|	ДвиженияДС.КорТипДенежныхСредств,
	|	ДвиженияДС.Сумма,
	|	ДвиженияДС.СуммаРегл,
	|	ДвиженияДС.СуммаВВалюте,
	|	ДвиженияДС.ИсточникГФУДенежныхСредств,
	|	ДвиженияДС.ИсточникКорГФУДенежныхСредств
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныхСредств КАК ДвиженияДС
	|ГДЕ
	|	ДвиженияДС.Регистратор = &Выписка
	|	И ДвиженияДС.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДвиженияДС.Период,
	|	ДвиженияДС.НомерСтроки,
	|	ДвиженияДС.Активность,
	|	ДвиженияДС.ХозяйственнаяОперация,
	|	ДвиженияДС.Организация,
	|	ДвиженияДС.Подразделение,
	|	ДвиженияДС.ДенежныеСредства,
	|	ДвиженияДС.ТипДенежныхСредств,
	|	ДвиженияДС.СтатьяДвиженияДенежныхСредств,
	|	ДвиженияДС.Валюта,
	|	ДвиженияДС.КорДенежныеСредства,
	|	ДвиженияДС.КорТипДенежныхСредств,
	|	ДвиженияДС.Сумма,
	|	ДвиженияДС.СуммаРегл,
	|	ДвиженияДС.СуммаВВалюте,
	|	ДвиженияДС.ИсточникГФУДенежныхСредств,
	|	ДвиженияДС.ИсточникКорГФУДенежныхСредств
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныхСредств КАК ДвиженияДС
	|ГДЕ
	|	ДвиженияДС.Регистратор = &НовыйРегистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Оставшиеся движения выписки
	|ВЫБРАТЬ
	|	ДСБезналичные.Период,
	|	ДСБезналичные.Регистратор КАК Регистратор,
	|	ДСБезналичные.НомерСтроки,
	|	ДСБезналичные.Активность,
	|	ДСБезналичные.ВидДвижения,
	|	ДСБезналичные.Организация,
	|	ДСБезналичные.БанковскийСчет,
	|	ДСБезналичные.Сумма,
	|	ДСБезналичные.СуммаУпр,
	|	ДСБезналичные.СуммаРегл,
	|	ДСБезналичные.КЗачислению,
	|	ДСБезналичные.КСписанию,
	|	ДСБезналичные.ХозяйственнаяОперация,
	|	ДСБезналичные.СтатьяДвиженияДенежныхСредств,
	|	ДСБезналичные.АналитикаУчетаПоПартнерам,
	|	ДСБезналичные.Заказ,
	|	ДСБезналичные.ПлатежныйДокумент
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные КАК ДСБезналичные
	|ГДЕ
	|	ДСБезналичные.Регистратор = &Выписка
	|	И ДСБезналичные.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзБанка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Оставшиеся движения выписки
	|ВЫБРАТЬ
	|	ДвиженияДС.Период,
	|	ДвиженияДС.Регистратор КАК Регистратор,
	|	ДвиженияДС.НомерСтроки,
	|	ДвиженияДС.Активность,
	|	ДвиженияДС.ХозяйственнаяОперация,
	|	ДвиженияДС.Организация,
	|	ДвиженияДС.Подразделение,
	|	ДвиженияДС.ДенежныеСредства,
	|	ДвиженияДС.ТипДенежныхСредств,
	|	ДвиженияДС.СтатьяДвиженияДенежныхСредств,
	|	ДвиженияДС.Валюта,
	|	ДвиженияДС.КорДенежныеСредства,
	|	ДвиженияДС.КорТипДенежныхСредств,
	|	ДвиженияДС.Сумма,
	|	ДвиженияДС.СуммаРегл,
	|	ДвиженияДС.СуммаВВалюте,
	|	ДвиженияДС.ИсточникГФУДенежныхСредств,
	|	ДвиженияДС.ИсточникКорГФУДенежныхСредств
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныхСредств КАК ДвиженияДС
	|ГДЕ
	|	ДвиженияДС.Регистратор = &Выписка
	|	И ДвиженияДС.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Новые движения Поступления безналичных денежных средств по регистру ДСвПути
	|ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО
	|ГДЕ
	|	ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Новые движения Списания безналичных денежных средств по регистру ДСвПути
	|ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО
	|ГДЕ
	|	ЛОЖЬ
	|;";
	
КонецФункции

Функция ПеренестиПоступлениеИзБанкаНаличныйРасчет_ДанныеДляОбновления(Параметры) Экспорт
    
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДСНаличные.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваНаличные КАК ДСНаличные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УдалитьВыпискаПоРасчетномуСчету.ИсходящиеПлатежи КАК ВыпискаВходящиеПлатежи
	|		ПО ДСНаличные.Регистратор = ВыпискаВходящиеПлатежи.ПлатежныйДокумент
	|ГДЕ
	|	ДСНаличные.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзБанка)
	|	И ВыпискаВходящиеПлатежи.ПлатежныйДокумент ЕСТЬ NULL
	|";
    
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(
        Параметры, 
        Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка")
    );	
	
КонецФункции

// Обработчик обновления BAS УТ 3.2.1
// Переносит движения выписки в регистрах накопления "ДенежныеСредстваНаличные" и "ДвиженияДенежныхСредств"
// по хоз. операциям "ПоступлениеДенежныхСредствИзБанка"
Процедура ПеренестиПоступлениеИзБанкаНаличныйРасчет(Параметры) Экспорт
    
    ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("ТекстЗапросаПоДокументам",  ТекстЗапросаДокументыПоступлениеИзБанкаНаличныйРасчет());
	ПараметрыОбработчика.Вставить("ТекстЗапросаНовыеДвижения", ТекстЗапросаНовыеДвиженияПоступлениеИзБанкаНаличныйРасчет());
    ПараметрыОбработчика.Вставить("ПолноеИмяОбъекта", "Документ.ПриходныйКассовыйОрдер"); 
    
    ПеренестиИнкасациюНаличныйРасчет(Параметры, ПараметрыОбработчика);
	
КонецПроцедуры

Функция ТекстЗапросаДокументыПоступлениеИзБанкаНаличныйРасчет()
	
	Возврат
	"ВЫБРАТЬ 
	|	ДСНаличные.Регистратор,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИнкассацияДенежныхСредствИзБанка) КАК ХозяйственнаяОперация,
	|	ДСНаличные.МоментВремени
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваНаличные КАК ДСНаличные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляОбработки КАК ДокументыКОбработке
	|		ПО ДСНаличные.Регистратор = ДокументыКОбработке.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДСНаличные.МоментВремени УБЫВ
    |
	|ИТОГИ ПО
	|	ДСНаличные.Регистратор
    |";
	
КонецФункции

Функция ТекстЗапросаНовыеДвиженияПоступлениеИзБанкаНаличныйРасчет()
	
	Возврат
	"////////////////////////////////////////////////////////////////////////////////
	|// Новые движения ПКО по регистру ДенежныеСредстваВПути
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ДСНаличные.Период,
	|	ДСНаличные.Регистратор,
	|	ИСТИНА КАК Активность,
	|	ДСНаличные.Организация,
	|	ДСНаличные.Касса КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ИнкассацияИзБанка) КАК ВидПереводаДенежныхСредств,
	|	ВЫРАЗИТЬ(ДСНаличные.Регистратор КАК Документ.ПриходныйКассовыйОрдер).Контрагент КАК Контрагент,
	|	ДСкСписаниюБезналичные.БанковскийСчет КАК Отправитель,
	|	ДСНаличные.Касса.ВалютаДенежныхСредств КАК Валюта,
	|	ДСНаличные.Сумма,
	|	ДСНаличные.СуммаУпр,
	|	ДСНаличные.СуммаРегл,
	|	ДСНаличные.ХозяйственнаяОперация,
	|	ДСНаличные.СтатьяДвиженияДенежныхСредств,
	|	ДСНаличные.Регистратор КАК Выписка,
	|	ДСНаличные.МоментВремени
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваНаличные КАК ДСНаличные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.УдалитьДенежныеСредстваКСписаниюБезналичные КАК ДСкСписаниюБезналичные
	|		ПО ДСНаличные.Регистратор = ДСкСписаниюБезналичные.Регистратор
	|			И ДСНаличные.Организация = ДСкСписаниюБезналичные.Организация
	|			И ДСНаличные.ХозяйственнаяОперация = ДСкСписаниюБезналичные.ХозяйственнаяОперация
	|			И (ДСкСписаниюБезналичные.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.УдалитьТипыДенежныхСредствКСписанию.СнятиеПоЧеку))
	|ГДЕ
	|	ДСНаличные.Регистратор = &ПлатежныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Новые движения ПКО по регистру ДвиженияДенежныхСредств
	|ВЫБРАТЬ
	|	ДвиженияДенежныхСредств.Период,
	|	ДвиженияДенежныхСредств.Регистратор,
	|	ДвиженияДенежныхСредств.НомерСтроки,
	|	ДвиженияДенежныхСредств.Активность,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИнкассацияДенежныхСредствИзБанка) КАК ХозяйственнаяОперация,
	|	ДвиженияДенежныхСредств.Организация,
	|	ДвиженияДенежныхСредств.Подразделение,
	|	ДвиженияДенежныхСредств.ДенежныеСредства,
	|	ДвиженияДенежныхСредств.ТипДенежныхСредств,
	|	ДвиженияДенежныхСредств.СтатьяДвиженияДенежныхСредств,
	|	ДвиженияДенежныхСредств.Валюта,
	|	ДвиженияДенежныхСредств.КорДенежныеСредства,
	|	ДвиженияДенежныхСредств.КорТипДенежныхСредств,
	|	ДвиженияДенежныхСредств.Сумма,
	|	ДвиженияДенежныхСредств.СуммаРегл,
	|	ДвиженияДенежныхСредств.СуммаВВалюте,
	|	ДвиженияДенежныхСредств.ИсточникГФУДенежныхСредств,
	|	ДвиженияДенежныхСредств.ИсточникКорГФУДенежныхСредств
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныхСредств КАК ДвиженияДенежныхСредств
	|ГДЕ
	|	ДвиженияДенежныхСредств.Регистратор = &ПлатежныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Новые движения ПКО по регистру ДенежныеСредстваНаличные
	|ВЫБРАТЬ
	|	ДенежныеСредстваНаличные.Период,
	|	ДенежныеСредстваНаличные.Регистратор,
	|	ДенежныеСредстваНаличные.НомерСтроки,
	|	ДенежныеСредстваНаличные.Активность,
	|	ДенежныеСредстваНаличные.ВидДвижения,
	|	ДенежныеСредстваНаличные.Организация,
	|	ДенежныеСредстваНаличные.Касса,
	|	ДенежныеСредстваНаличные.Сумма,
	|	ДенежныеСредстваНаличные.СуммаУпр,
	|	ДенежныеСредстваНаличные.СуммаРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИнкассацияДенежныхСредствИзБанка) КАК ХозяйственнаяОперация,
	|	ДенежныеСредстваНаличные.СтатьяДвиженияДенежныхСредств,
	|	ДенежныеСредстваНаличные.АналитикаУчетаПоПартнерам,
	|	ДенежныеСредстваНаличные.Заказ
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваНаличные КАК ДенежныеСредстваНаличные
	|ГДЕ
	|	ДенежныеСредстваНаличные.Регистратор = &ПлатежныйДокумент
	|;";
	
КонецФункции

Функция ПеренестиСдачуВБанкНаличныйРасчет_ДанныеДляОбновления(Параметры) Экспорт
    
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДСНаличные.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваНаличные КАК ДСНаличные
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УдалитьВыпискаПоРасчетномуСчету.ВходящиеПлатежи КАК ВыпискаВходящиеПлатежи
	|		ПО ДСНаличные.Регистратор = ВыпискаВходящиеПлатежи.ПлатежныйДокумент
	|ГДЕ
	|	ДСНаличные.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СдачаДенежныхСредствВБанк)
	|	И ВыпискаВходящиеПлатежи.ПлатежныйДокумент ЕСТЬ NULL
	|";
    
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(
        Параметры, 
        Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка")
    );	
	
КонецФункции

// Обработчик обновления BAS УТ 3.2.1
// Переносит движения выписки в регистрах накопления "ДенежныеСредстваНаличные" и "ДвиженияДенежныхСредств"
// по хоз. операциям "СдачаДенежныхСредствВБанк"
Процедура ПеренестиСдачуВБанкНаличныйРасчет(Параметры) Экспорт
    
    ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("ТекстЗапросаПоДокументам",  ТекстЗапросаДокументыПоступлениеИзБанкаНаличныйРасчет());
	ПараметрыОбработчика.Вставить("ТекстЗапросаНовыеДвижения", ТекстЗапросаНовыеДвиженияПоступлениеИзБанкаНаличныйРасчет());
    ПараметрыОбработчика.Вставить("ПолноеИмяОбъекта", "Документ.РасходныйКассовыйОрдер"); 
    
    ПеренестиИнкасациюНаличныйРасчет(Параметры, ПараметрыОбработчика);
	
КонецПроцедуры

Функция ТекстЗапросаДокументыДеньгиВПутиНаличныйРасчетСдачаВБанк()
	
	Возврат
	"ВЫБРАТЬ 
	|	ДСНаличные.Регистратор,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИнкассацияДенежныхСредствВБанк) КАК ХозяйственнаяОперация,
	|	ДСНаличные.МоментВремени
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваНаличные КАК ДСНаличные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляОбработки КАК ДокументыКОбработке
	|		ПО ДСНаличные.Регистратор = ДокументыКОбработке.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДСНаличные.МоментВремени УБЫВ
    |
	|ИТОГИ ПО
	|	ДСНаличные.Регистратор
    |";
	
КонецФункции

Функция ТекстЗапросаНовыеДвиженияНаличныйРасчетСдачаВБанк()
	
	Возврат
	"////////////////////////////////////////////////////////////////////////////////
	|// Новые движения РКО по регистру ДенежныеСредстваВПути
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ДСНаличные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	ДСНаличные.Период,
	|	ДСНаличные.Регистратор,
	|	ИСТИНА КАК Активность,
	|	ДСНаличные.Организация,
	|	ДСкПоступлениюБезналичные.БанковскийСчет Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ИнкассацияВБанк) КАК ВидПереводаДенежныхСредств,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ДСНаличные.Регистратор) = ТИП(Документ.РасходныйКассовыйОрдер)
	|			ТОГДА ВЫРАЗИТЬ(ДСНаличные.Регистратор КАК Документ.РасходныйКассовыйОрдер).Контрагент
	|		КОГДА ТИПЗНАЧЕНИЯ(ДСНаличные.Регистратор) = ТИП(Документ.ПриходныйКассовыйОрдер)
	|			ТОГДА ВЫРАЗИТЬ(ДСНаличные.Регистратор КАК Документ.ПриходныйКассовыйОрдер).Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ДСНаличные.Касса КАК Отправитель,
	|	ДСкПоступлениюБезналичные.БанковскийСчет.ВалютаДенежныхСредств КАК Валюта,
	|	ДСкПоступлениюБезналичные.Сумма,
	|	ДСНаличные.СуммаУпр,
	|	ДСНаличные.СуммаРегл,
	|	ДСНаличные.ХозяйственнаяОперация,
	|	ДСНаличные.СтатьяДвиженияДенежныхСредств,
	|	ДСНаличные.МоментВремени
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваНаличные КАК ДСНаличные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.УдалитьДенежныеСредстваКПоступлениюБезналичные КАК ДСкПоступлениюБезналичные
	|		ПО ДСНаличные.Регистратор = ДСкПоступлениюБезналичные.Регистратор
	|			И ДСНаличные.Организация = ДСкПоступлениюБезналичные.Организация
	|			И ДСНаличные.ХозяйственнаяОперация = ДСкПоступлениюБезналичные.ХозяйственнаяОперация
	|			И (ДСкПоступлениюБезналичные.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.УдалитьТипыДенежныхСредствКПоступлению.ВыдачаИзКассы))
	|ГДЕ
	|	ДСНаличные.Регистратор = &ПлатежныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Новые движения РКО по регистру ДвиженияДенежныхСредств
	|ВЫБРАТЬ
	|	ДвиженияДенежныхСредств.Период,
	|	ДвиженияДенежныхСредств.Регистратор,
	|	ДвиженияДенежныхСредств.НомерСтроки,
	|	ДвиженияДенежныхСредств.Активность,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИнкассацияДенежныхСредствВБанк) КАК ХозяйственнаяОперация,
	|	ДвиженияДенежныхСредств.Организация,
	|	ДвиженияДенежныхСредств.Подразделение,
	|	ДвиженияДенежныхСредств.ДенежныеСредства,
	|	ДвиженияДенежныхСредств.ТипДенежныхСредств,
	|	ДвиженияДенежныхСредств.СтатьяДвиженияДенежныхСредств,
	|	ДвиженияДенежныхСредств.Валюта,
	|	ДвиженияДенежныхСредств.КорДенежныеСредства,
	|	ДвиженияДенежныхСредств.КорТипДенежныхСредств,
	|	ДвиженияДенежныхСредств.Сумма,
	|	ДвиженияДенежныхСредств.СуммаРегл,
	|	ДвиженияДенежныхСредств.СуммаВВалюте,
	|	ДвиженияДенежныхСредств.ИсточникГФУДенежныхСредств,
	|	ДвиженияДенежныхСредств.ИсточникКорГФУДенежныхСредств
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныхСредств КАК ДвиженияДенежныхСредств
	|ГДЕ
	|	ДвиженияДенежныхСредств.Регистратор = &ПлатежныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Новые движения РКО по регистру ДенежныеСредстваНаличные
	|ВЫБРАТЬ
	|	ДенежныеСредстваНаличные.Период,
	|	ДенежныеСредстваНаличные.Регистратор,
	|	ДенежныеСредстваНаличные.НомерСтроки,
	|	ДенежныеСредстваНаличные.Активность,
	|	ДенежныеСредстваНаличные.ВидДвижения,
	|	ДенежныеСредстваНаличные.Организация,
	|	ДенежныеСредстваНаличные.Касса,
	|	ДенежныеСредстваНаличные.Сумма,
	|	ДенежныеСредстваНаличные.СуммаУпр,
	|	ДенежныеСредстваНаличные.СуммаРегл,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИнкассацияДенежныхСредствВБанк) КАК ХозяйственнаяОперация,
	|	ДенежныеСредстваНаличные.СтатьяДвиженияДенежныхСредств,
	|	ДенежныеСредстваНаличные.АналитикаУчетаПоПартнерам,
	|	ДенежныеСредстваНаличные.Заказ
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваНаличные КАК ДенежныеСредстваНаличные
	|ГДЕ
	|	ДенежныеСредстваНаличные.Регистратор = &ПлатежныйДокумент
	|;";
	
КонецФункции

Функция ПеренестиСдачуВБанкБезналичныйРасчет_ДанныеДляОбновления(Параметры) Экспорт
    
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДСБезналичные.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные КАК ДСБезналичные
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДСБезналичные.Регистратор) = ТИП(Документ.УдалитьВыпискаПоРасчетномуСчету)
	|	И ДСБезналичные.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СдачаДенежныхСредствВБанк)
	|	И ДСБезналичные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|";
    
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(
        Параметры, 
        Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка")
    );	
	
КонецФункции

// Обработчик обновления BAS УТ 3.2.1
// Переносит движения выписки в регистрах накопления "ДенежныеСредстваБезналичные" и "ДвиженияДенежныхСредств"
// по хоз. операциям "СдачаДенежныхСредствВБанк" и "ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет"
// под расходный кассовый ордер оприходововаший их на счет.
Процедура ПеренестиСдачуВБанкБезналичныйРасчет(Параметры) Экспорт
    
    ПолноеИмяОбъекта = "Документ.УДАЛИТЬВыпискаПоРасчетномуСчету";
    
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(
        Параметры.Очередь, 
        ПолноеИмяОбъекта, 
        МенеджерВременныхТаблиц
    );
    
    Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
    КонецЕсли;
    
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
    КонецЕсли;
    
	ЗапросПоДокументам = Новый Запрос;
    ЗапросПоДокументам.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
    
    ТекстЗапросаПоДокументам = ТекстЗапросаДокументыСдачаВБанкБезналичныйРасчет();
	ЗапросПоДокументам.Текст = ТекстЗапросаПоДокументам;
    ЗапросПоДокументам.Текст = СтрЗаменить(ЗапросПоДокументам.Текст, "ВТДляОбработки", Результат.ИмяВременнойТаблицы);
    
    ТекстЗапросаНовыеДвижения = ТекстЗапросаНовыеДвиженияСдачаВБанкБезналичныйРасчет();
    ЗапросНовыеДвижения       = Новый Запрос(ТекстЗапросаНовыеДвижения);
    
    
	ВыборкаПоДокументу = ЗапросПоДокументам.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоДокументу.Следующий() Цикл
		
		НачатьТранзакцию();
		
        Попытка	
            
            Выписка = ВыборкаПоДокументу.Выписка;
            
			Выборка = ВыборкаПоДокументу.Выбрать();
            Пока Выборка.Следующий() Цикл
                
                НовыйРегистратор = Выборка.ПлатежныйДокумент;
                
    			ЗапросНовыеДвижения.УстановитьПараметр("Выписка", Выписка);
    			ЗапросНовыеДвижения.УстановитьПараметр("Организация", Выборка.Организация);
    			ЗапросНовыеДвижения.УстановитьПараметр("ПлатежныйДокумент",  Выборка.ПлатежныйДокумент);
    			ЗапросНовыеДвижения.УстановитьПараметр("НовыйРегистратор",  НовыйРегистратор);
    			Результат = ЗапросНовыеДвижения.ВыполнитьПакет();
                
    			Блокировка = Новый БлокировкаДанных;
                
                ТаблицаБлокируемыхРегистраторов = Новый ТаблицаЗначений;
                ТаблицаБлокируемыхРегистраторов.Колонки.Добавить("Регистратор");
                СтрокаТаблицаБлокируемыхРегистраторов = ТаблицаБлокируемыхРегистраторов.Добавить();
                СтрокаТаблицаБлокируемыхРегистраторов.Регистратор = Выписка;
                СтрокаТаблицаБлокируемыхРегистраторов = ТаблицаБлокируемыхРегистраторов.Добавить();
                СтрокаТаблицаБлокируемыхРегистраторов.Регистратор = НовыйРегистратор;
                
                БлокировкаДенежныеСредстваБезналичные = Блокировка.Добавить("РегистрНакопления.ДенежныеСредстваБезналичные.НаборЗаписей");
                БлокировкаДенежныеСредстваБезналичные.ИсточникДанных = ТаблицаБлокируемыхРегистраторов;
                БлокировкаДенежныеСредстваБезналичные.ИспользоватьИзИсточникаДанных("Регистратор", "Регистратор");
                
                БлокировкаДвиженияДенежныхСредств = Блокировка.Добавить("РегистрНакопления.ДвиженияДенежныхСредств.НаборЗаписей");
                БлокировкаДвиженияДенежныхСредств.ИсточникДанных = ТаблицаБлокируемыхРегистраторов;
                БлокировкаДвиженияДенежныхСредств.ИспользоватьИзИсточникаДанных("Регистратор", "Регистратор");
                
    			Блокировка.Заблокировать();
    			
    			// Движения по заданным хоз.операциям запишем под новый документ 
    			ЗагрузитьДвижения(НовыйРегистратор, "ДенежныеСредстваБезналичные", Результат[0].Выгрузить());
    			ЗагрузитьДвижения(НовыйРегистратор, "ДвиженияДенежныхСредств",     Результат[1].Выгрузить());
    			
    			// Оставшиеся движения вернем на место
    			ЗагрузитьДвижения(Выписка, "ДенежныеСредстваБезналичные", Результат[2].Выгрузить());
    			ЗагрузитьДвижения(Выписка, "ДвиженияДенежныхСредств",     Результат[3].Выгрузить());
                
                    
            КонецЦикла;    
            
            ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выписка);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
            
            ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(Выписка);
			
		КонецПопытки;
	
	КонецЦикла;
    
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
        Параметры.Очередь, 
        ПолноеИмяОбъекта
    );
	
КонецПроцедуры

Функция ТекстЗапросаДокументыСдачаВБанкБезналичныйРасчет()
	
	Возврат "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТипыПлатежныхДокументов.ПлатежноеПоручение) КАК ТипПлатежногоДокумента,
	|	ИСТИНА КАК Проведен,
	|	ДСБезналичные.Период КАК Дата,
	|	ВЫРАЗИТЬ(ДСБезналичные.ПлатежныйДокумент КАК Документ.РасходныйКассовыйОрдер).Дата КАК ДатаСписания,
	|	ДСБезналичные.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет) КАК ХозяйственнаяОперация,
	|	ДСБезналичные.БанковскийСчет КАК БанковскийСчет,
	|	ВЫРАЗИТЬ(ДСБезналичные.ПлатежныйДокумент КАК Документ.РасходныйКассовыйОрдер).Касса КАК КассаОтправитель,
	|	ДСБезналичные.ПлатежныйДокумент КАК ПлатежныйДокумент,
	|	ИСТИНА КАК ПроведеноБанком,
	|	ДСБезналичные.Период КАК ДатаПроведенияБанком,
	|	ДСБезналичные.Период КАК ДатаВходящегоДокумента,
	|	ДСБезналичные.БанковскийСчет.ВалютаДенежныхСредств КАК Валюта,
	|	ДСБезналичные.Сумма КАК СуммаДокумента,
	|	ДСБезналичные.Регистратор КАК Выписка,
	|	ДСБезналичные.МоментВремени КАК МоментВремени
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные КАК ДСБезналичные
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляОбработки КАК ДокументыКОбработке
	|		ПО ДСБезналичные.Регистратор = ДокументыКОбработке.Ссылка
    |
    |ГДЕ 
	|	ДСБезналичные.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СдачаДенежныхСредствВБанк)
	|	И ДСБезналичные.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДСБезналичные.МоментВремени УБЫВ
    |
	|ИТОГИ ПО
	|	ДСБезналичные.Регистратор
    |";
    
    
КонецФункции

Функция ТекстЗапросаНовыеДвиженияСдачаВБанкБезналичныйРасчет()
	
	Возврат
	"// Новые движения Поступления безналичных денежных средств
	|ВЫБРАТЬ
	|	ДСБезналичные.Период,
	|	ДСБезналичные.НомерСтроки,
	|	ДСБезналичные.Активность,
	|	ДСБезналичные.ВидДвижения,
	|	ДСБезналичные.Организация,
	|	ДСБезналичные.БанковскийСчет,
	|	ДСБезналичные.Сумма,
	|	ДСБезналичные.СуммаУпр,
	|	ДСБезналичные.СуммаРегл,
	|	ДСБезналичные.КЗачислению,
	|	ДСБезналичные.КСписанию,
	|	ДСБезналичные.ХозяйственнаяОперация,
	|	ДСБезналичные.СтатьяДвиженияДенежныхСредств,
	|	ДСБезналичные.АналитикаУчетаПоПартнерам,
	|	ДСБезналичные.Заказ,
	|	ДСБезналичные.ПлатежныйДокумент
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные КАК ДСБезналичные
	|ГДЕ
	|	ДСБезналичные.Регистратор = &Выписка
	|	И ДСБезналичные.ПлатежныйДокумент = &ПлатежныйДокумент
	|	И ДСБезналичные.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СдачаДенежныхСредствВБанк)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Новые движения Поступления безналичных денежных средств
	|ВЫБРАТЬ
	|	ДвиженияДС.Период,
	|	ДвиженияДС.НомерСтроки,
	|	ДвиженияДС.Активность,
	|	ДвиженияДС.ХозяйственнаяОперация,
	|	ДвиженияДС.Организация,
	|	ДвиженияДС.Подразделение,
	|	ДвиженияДС.ДенежныеСредства,
	|	ДвиженияДС.ТипДенежныхСредств,
	|	ДвиженияДС.СтатьяДвиженияДенежныхСредств,
	|	ДвиженияДС.Валюта,
	|	ДвиженияДС.КорДенежныеСредства,
	|	ДвиженияДС.КорТипДенежныхСредств,
	|	ДвиженияДС.Сумма,
	|	ДвиженияДС.СуммаРегл,
	|	ДвиженияДС.СуммаВВалюте,
	|	ДвиженияДС.ИсточникГФУДенежныхСредств,
	|	ДвиженияДС.ИсточникКорГФУДенежныхСредств
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныхСредств КАК ДвиженияДС
	|ГДЕ
	|	ДвиженияДС.Регистратор = &НовыйРегистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДвиженияДС.Период,
	|	ДвиженияДС.НомерСтроки,
	|	ДвиженияДС.Активность,
	|	ДвиженияДС.ХозяйственнаяОперация,
	|	ДвиженияДС.Организация,
	|	ДвиженияДС.Подразделение,
	|	ДвиженияДС.ДенежныеСредства,
	|	ДвиженияДС.ТипДенежныхСредств,
	|	ДвиженияДС.СтатьяДвиженияДенежныхСредств,
	|	ДвиженияДС.Валюта,
	|	ДвиженияДС.КорДенежныеСредства,
	|	ДвиженияДС.КорТипДенежныхСредств,
	|	ДвиженияДС.Сумма,
	|	ДвиженияДС.СуммаРегл,
	|	ДвиженияДС.СуммаВВалюте,
	|	ДвиженияДС.ИсточникГФУДенежныхСредств,
	|	ДвиженияДС.ИсточникКорГФУДенежныхСредств
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныхСредств КАК ДвиженияДС
	|ГДЕ
	|	ДвиженияДС.Регистратор = &Выписка
	|	И ДвиженияДС.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Оставшиеся движения ДенежныеСредстваБезналичные выписки
	|ВЫБРАТЬ
	|	ДСБезналичные.Период,
	|	ДСБезналичные.Регистратор КАК Регистратор,
	|	ДСБезналичные.НомерСтроки,
	|	ДСБезналичные.Активность,
	|	ДСБезналичные.ВидДвижения,
	|	ДСБезналичные.Организация,
	|	ДСБезналичные.БанковскийСчет,
	|	ДСБезналичные.Сумма,
	|	ДСБезналичные.СуммаУпр,
	|	ДСБезналичные.СуммаРегл,
	|	ДСБезналичные.КЗачислению,
	|	ДСБезналичные.КСписанию,
	|	ДСБезналичные.ХозяйственнаяОперация,
	|	ДСБезналичные.СтатьяДвиженияДенежныхСредств,
	|	ДСБезналичные.АналитикаУчетаПоПартнерам,
	|	ДСБезналичные.Заказ,
	|	ДСБезналичные.ПлатежныйДокумент
	|ИЗ
	|	РегистрНакопления.ДенежныеСредстваБезналичные КАК ДСБезналичные
	|ГДЕ
	|	ДСБезналичные.Регистратор = &Выписка
	|	И ДСБезналичные.ПлатежныйДокумент <> &ПлатежныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// Оставшиеся движения ДвиженияДенежныхСредств выписки
	|ВЫБРАТЬ
	|	ДвиженияДС.Период,
	|	ДвиженияДС.Регистратор КАК Регистратор,
	|	ДвиженияДС.НомерСтроки,
	|	ДвиженияДС.Активность,
	|	ДвиженияДС.ХозяйственнаяОперация,
	|	ДвиженияДС.Организация,
	|	ДвиженияДС.Подразделение,
	|	ДвиженияДС.ДенежныеСредства,
	|	ДвиженияДС.ТипДенежныхСредств,
	|	ДвиженияДС.СтатьяДвиженияДенежныхСредств,
	|	ДвиженияДС.Валюта,
	|	ДвиженияДС.КорДенежныеСредства,
	|	ДвиженияДС.КорТипДенежныхСредств,
	|	ДвиженияДС.Сумма,
	|	ДвиженияДС.СуммаРегл,
	|	ДвиженияДС.СуммаВВалюте,
	|	ДвиженияДС.ИсточникГФУДенежныхСредств,
	|	ДвиженияДС.ИсточникКорГФУДенежныхСредств
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныхСредств КАК ДвиженияДС
	|ГДЕ
	|	ДвиженияДС.Регистратор = &Выписка
	|	И ДвиженияДС.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет)
	|;
	|
    |";
КонецФункции

#КонецОбласти // ЗаполнитьДеньгиВПути

Процедура ПеренестиДвиженияВыписки(Параметры, ПараметрыОбработчика)
    
    ПолноеИмяОбъекта = "Документ.УДАЛИТЬВыпискаПоРасчетномуСчету";
    
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(
        Параметры.Очередь, 
        ПолноеИмяОбъекта, 
        МенеджерВременныхТаблиц
    );
    
    Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
    КонецЕсли;
    
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
    КонецЕсли;
    
	РегистрОборотовУУ = "ДвиженияДенежныхСредств";
	Если ПараметрыОбработчика.Свойство("ОборотыУУ") Тогда
		РегистрОборотовУУ = "ДвиженияДенежныеСредстваКонтрагент";
	КонецЕсли;
    
	ЗапросПоДокументам = Новый Запрос;
    ЗапросПоДокументам.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
    
    ТекстЗапросаПоДокументам = ПараметрыОбработчика.ТекстЗапросаПоДокументам;
	ЗапросПоДокументам.Текст = ТекстЗапросаПоДокументам;
    ЗапросПоДокументам.Текст = СтрЗаменить(ЗапросПоДокументам.Текст, "ВТДляОбработки", Результат.ИмяВременнойТаблицы);
    
    ТекстЗапросаНовыеДвижения = ПараметрыОбработчика.ТекстЗапросаНовыеДвижения;
    ЗапросНовыеДвижения       = Новый Запрос(ТекстЗапросаНовыеДвижения);
    
    
	ВыборкаПоДокументу = ЗапросПоДокументам.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоДокументу.Следующий() Цикл
		
		НачатьТранзакцию();
		
        Попытка	
            
            Выписка = ВыборкаПоДокументу.Выписка;
            
            ТаблицаБлокируемыхРегистраторов = Новый ТаблицаЗначений;
            ТаблицаБлокируемыхРегистраторов.Колонки.Добавить("Регистратор");
            СтрокаТаблицаБлокируемыхРегистраторов = ТаблицаБлокируемыхРегистраторов.Добавить();
            СтрокаТаблицаБлокируемыхРегистраторов.Регистратор = Выписка;
            
            ТаблицаБлокируемыхРегистраторовДенежныеСредстваВПути = Новый ТаблицаЗначений;
            ТаблицаБлокируемыхРегистраторовДенежныеСредстваВПути.Колонки.Добавить("Регистратор");
            
			Выборка = ВыборкаПоДокументу.Выбрать();
            Пока Выборка.Следующий() Цикл
    			Если НЕ ПараметрыОбработчика.Свойство("ИмяДокумента") Тогда
                    СтрокаТаблицаБлокируемыхРегистраторов = ТаблицаБлокируемыхРегистраторов.Добавить();
                    СтрокаТаблицаБлокируемыхРегистраторов.Регистратор = Выборка.ПлатежныйДокумент;
                КонецЕсли;
                СтрокаТаблицаБлокируемыхРегистраторов = ТаблицаБлокируемыхРегистраторовДенежныеСредстваВПути.Добавить();
                СтрокаТаблицаБлокируемыхРегистраторов.Регистратор = Выборка.ПлатежныйДокумент;
            КонецЦикла;
            
            Блокировка = Новый БлокировкаДанных;
            
            БлокировкаДенежныеСредстваБезналичные = Блокировка.Добавить("РегистрНакопления.ДенежныеСредстваБезналичные.НаборЗаписей");
            БлокировкаДенежныеСредстваБезналичные.ИсточникДанных = ТаблицаБлокируемыхРегистраторов;
            БлокировкаДенежныеСредстваБезналичные.ИспользоватьИзИсточникаДанных("Регистратор", "Регистратор");
            
            БлокировкаРегистрОборотовУУ = Блокировка.Добавить("РегистрНакопления." + РегистрОборотовУУ + ".НаборЗаписей");
            БлокировкаРегистрОборотовУУ.ИсточникДанных = ТаблицаБлокируемыхРегистраторов;
            БлокировкаРегистрОборотовУУ.ИспользоватьИзИсточникаДанных("Регистратор", "Регистратор");
            
            БлокировкаДенежныеСредстваВПути = Блокировка.Добавить("РегистрНакопления.ДенежныеСредстваВПути.НаборЗаписей");
            БлокировкаДенежныеСредстваВПути.ИсточникДанных = ТаблицаБлокируемыхРегистраторовДенежныеСредстваВПути;
            БлокировкаДенежныеСредстваВПути.ИспользоватьИзИсточникаДанных("Регистратор", "Регистратор");
            
            Блокировка.Заблокировать();
            
            Выборка.Сбросить();
            
			Выборка = ВыборкаПоДокументу.Выбрать();
            Пока Выборка.Следующий() Цикл
                
    			Если ПараметрыОбработчика.Свойство("ИмяДокумента") Тогда
    				НовыйДокумент = Документы[ПараметрыОбработчика.ИмяДокумента].СоздатьДокумент();
    				ЗаполнитьЗначенияСвойств(НовыйДокумент, Выборка);
    				НовыйДокумент.УстановитьНовыйНомер();
    				НовыйДокумент.НомерВходящегоДокумента = НовыйДокумент.Номер;
                    ТекстКомментария = "#Створений при переході на BAS УТ 3.2.1#";
    				НовыйДокумент.Комментарий = ТекстКомментария;
    				ОбновлениеИнформационнойБазы.ЗаписатьДанные(НовыйДокумент, Истина);
    				НовыйРегистратор = НовыйДокумент.Ссылка;
    			Иначе
    				НовыйРегистратор = Выборка.ПлатежныйДокумент;
    			КонецЕсли;
    			
    			ЗапросНовыеДвижения.УстановитьПараметр("Выписка", Выписка);
    			ЗапросНовыеДвижения.УстановитьПараметр("ПлатежныйДокумент", Выборка.ПлатежныйДокумент);
    			ЗапросНовыеДвижения.УстановитьПараметр("НовыйРегистратор", НовыйРегистратор);
    			ЗапросНовыеДвижения.УстановитьПараметр("Организация", Выборка.Организация);
    			Результат = ЗапросНовыеДвижения.ВыполнитьПакет();
                
    			// Движения по заданным хоз.операциям запишем под новый документ 
    			ЗагрузитьДвижения(НовыйРегистратор, "ДенежныеСредстваБезналичные", Результат[0].Выгрузить());
    			ЗагрузитьДвижения(НовыйРегистратор, РегистрОборотовУУ,             Результат[1].Выгрузить());
    			
    			// Оставшиеся движения вернем на место
    			ЗагрузитьДвижения(Выписка, "ДенежныеСредстваБезналичные", Результат[2].Выгрузить());
    			ЗагрузитьДвижения(Выписка, РегистрОборотовУУ,             Результат[3].Выгрузить());
    			
    			// Движения денег в пути
    			ТаблицаДвижений = Результат[4].Выгрузить();
    			Если ТаблицаДвижений.Количество() > 0 Тогда
    				ЗагрузитьДвижения(НовыйРегистратор,          "ДенежныеСредстваВПути", ТаблицаДвижений);
    				ЗагрузитьДвижения(Выборка.ПлатежныйДокумент, "ДенежныеСредстваВПути", Результат[5].Выгрузить());
                КонецЕсли;
                
            КонецЦикла;    
            
            ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выписка);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
            
            ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(Выписка);
			
		КонецПопытки;
	
	КонецЦикла;
    
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
        Параметры.Очередь, 
        ПолноеИмяОбъекта
    );
	
КонецПроцедуры

Процедура ПеренестиИнкасациюНаличныйРасчет(Параметры, ПараметрыОбработчика)
    
    ПолноеИмяОбъекта = ПараметрыОбработчика.ПолноеИмяОбъекта;
    
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(
        Параметры.Очередь, 
        ПолноеИмяОбъекта, 
        МенеджерВременныхТаблиц
    );
    
    Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
    КонецЕсли;
    
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
    КонецЕсли;
    
	ЗапросПоДокументам = Новый Запрос;
    ЗапросПоДокументам.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
    
    ТекстЗапросаПоДокументам = ПараметрыОбработчика.ТекстЗапросаПоДокументам;
	ЗапросПоДокументам.Текст = ТекстЗапросаПоДокументам;
    ЗапросПоДокументам.Текст = СтрЗаменить(ЗапросПоДокументам.Текст, "ВТДляОбработки", Результат.ИмяВременнойТаблицы);
    
    ТекстЗапросаНовыеДвижения = ПараметрыОбработчика.ТекстЗапросаНовыеДвижения;
    ЗапросНовыеДвижения       = Новый Запрос(ТекстЗапросаНовыеДвижения);
    
    
	ВыборкаПоДокументу = ЗапросПоДокументам.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоДокументу.Следующий() Цикл
		
		НачатьТранзакцию();
		
        Попытка	
            
            Регистратор = ВыборкаПоДокументу.Регистратор;
            
            Блокировка = Новый БлокировкаДанных;
            
            БлокировкаДокумента = Блокировка.Добавить(ПолноеИмяОбъекта);
            БлокировкаДокумента.УстановитьЗначение("Ссылка", Регистратор);
            
            БлокировкаДенежныеСредстваВПути = Блокировка.Добавить("РегистрНакопления.ДенежныеСредстваВПути.НаборЗаписей");
            БлокировкаДенежныеСредстваВПути.УстановитьЗначение("Регистратор", Регистратор);
            
            БлокировкаДвиженияДенежныхСредств = Блокировка.Добавить("РегистрНакопления.ДвиженияДенежныхСредств.НаборЗаписей");
            БлокировкаДвиженияДенежныхСредств.УстановитьЗначение("Регистратор", Регистратор);
            
            БлокировкаДенежныеСредстваНаличные = Блокировка.Добавить("РегистрНакопления.ДенежныеСредстваНаличные.НаборЗаписей");
            БлокировкаДенежныеСредстваНаличные.УстановитьЗначение("Регистратор", Регистратор);
            
            Блокировка.Заблокировать();
            
			Выборка = ВыборкаПоДокументу.Выбрать();
            Пока Выборка.Следующий() Цикл
                
    			// Заменим хоз. операцию в ПКО\РКО
    			ОбъектДокумент = Регистратор.ПолучитьОбъект();
    			ОбъектДокумент.ХозяйственнаяОперация = Выборка.ХозяйственнаяОперация;
    			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ОбъектДокумент, Истина);
                
    			ЗапросНовыеДвижения.УстановитьПараметр("ПлатежныйДокумент", Регистратор);
    			Результат = ЗапросНовыеДвижения.ВыполнитьПакет();
    			
    			// Заменим хоз. операцию в движениях
    			ЗагрузитьДвижения(Регистратор, "ДенежныеСредстваВПути",    Результат[0].Выгрузить());
    			ЗагрузитьДвижения(Регистратор, "ДвиженияДенежныхСредств",  Результат[1].Выгрузить());
    			ЗагрузитьДвижения(Регистратор, "ДенежныеСредстваНаличные", Результат[2].Выгрузить());
                
            КонецЦикла;    
            
            ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Регистратор);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
            
            ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(Регистратор);
			
		КонецПопытки;
	
	КонецЦикла;
    
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
        Параметры.Очередь, 
        ПолноеИмяОбъекта
    );
	
КонецПроцедуры

Процедура ЗагрузитьДвижения(Регистратор, ИмяРегистра, ТаблицаДвижений = Неопределено)
	УправленческийУчетПроведениеСервер.ЗагрузитьДвижения(Регистратор, ИмяРегистра, ТаблицаДвижений);
КонецПроцедуры


#КонецОбласти // ОбновлениеИнформационнойБазы

#КонецЕсли
