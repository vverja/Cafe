
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	КонтролироватьОстаткиТоваровОрганизаций = 
		ПолучитьФункциональнуюОпцию("КонтролироватьОстаткиТоваровОрганизацийКОформлениюПоПоступлениям");
	
	Элементы.КОформлениюДокументПоступления.Видимость = КонтролироватьОстаткиТоваровОрганизаций;
	
	Если НЕ КонтролироватьОстаткиТоваровОрганизаций Тогда
		КОформлению.ТекстЗапроса = ТекстЗапросаКОформлению();
	КонецЕсли;
		
		// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюПечать);
	// Конец СтандартныеПодсистемы.Печать
	
	// МенюОтчеты
	МенюОтчеты.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюОтчеты);
	// Конец МенюОтчеты
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьПараметрыСписков();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Запись_ТаможеннаяДекларацияИмпорт" Тогда
		Элементы.КОформлению.Обновить();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьТаможеннуюДекларацию(Команда)
	Строка = Элементы.КОформлению.ТекущиеДанные;
	Если Неопределено = Строка Тогда
		Возврат;
	КонецЕсли;
	Текст = "
	|ВЫБРАТЬ
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	Аналитика.Склад,
	|	Аналитика.Серия,
	|	Товары.ВидЗапасов,
	|	Неопределено КАК Упаковка,
	|	Товары.КоличествоОстаток КАК Количество,
	|	Товары.КоличествоОстаток КАК КоличествоУпаковок,
	|	Товары.ДокументПоступления КАК ДокументПоступления,
    |	Аналитика.Номенклатура.СтавкаНДС КАК СтавкаНДСПоУмолчанию,
    |	Аналитика.Номенклатура.НоменклатураГТД.КодУКТВЭД КАК КодУКТВЭДПоУмолчанию,
    |	Товары.ВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
	|	0 КАК Цена,
	|	Товары.СуммаОстаток КАК Сумма,
	|	0 КАК СуммаСНДС
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизацийКОформлению.Остатки(&ДатаОстатков,
	|		Организация = &Организация
	|		И Поставщик = &Поставщик
	|		И ((&ПоставкаНаКомиссию И ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)) ИЛИ
	|		   (НЕ &ПоставкаНаКомиссию И ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)))
	|		И ВидЗапасов.Соглашение = &ПоступлениеСоглашение
	|		И ВидЗапасов.Валюта = &ВалютаВзаиморасчетовСКомитентом
	|		//%ДокументПоступления%
	|	) КАК Товары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Товары.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|ГДЕ
	|	КоличествоОстаток > 0
	|";
	
	ДатаОстатков = ?(ЗначениеЗаполнено(Период.ДатаОкончания), Период.ДатаОкончания, '39991231');
	
	Если КонтролироватьОстаткиТоваровОрганизаций Тогда
		Текст = СтрЗаменить(Текст, "//%ДокументПоступления%", "И ДокументПоступления В (&ДокументПоступления)");
		Основание = Новый Структура("Организация, Поставщик, КонтрагентПоставщика, ДокументПоступления, ДатаОстатков, ЗапросТовары",
			Строка.Организация,
			Строка.Поставщик,
			Строка.КонтрагентПоставщика,
			Строка.ДокументПоступления,
			ДатаОстатков,
			Текст);
	Иначе
		Основание = Новый Структура("Организация, Поставщик, КонтрагентПоставщика, ДатаОстатков, ЗапросТовары",
			Строка.Организация,
			Строка.Поставщик,
			Строка.КонтрагентПоставщика,
			ДатаОстатков,
			Текст);
	КонецЕсли;
	
	Основание.Вставить("ПоставкаНаКомиссию", Строка.ПоставкаНаКомиссию);
	Основание.Вставить("ПоступлениеСоглашение", Строка.Соглашение);
	Основание.Вставить("ВалютаВзаиморасчетовСКомитентом", Строка.Валюта);
	
	ПараметрыОткрытия = Новый Структура("Основание", Основание);
	ОткрытьФорму("Документ.ТаможеннаяДекларацияИмпорт.ФормаОбъекта", ПараметрыОткрытия, Элементы.Список);
КонецПроцедуры

&НаКлиенте
Процедура ИмпортныеТоварыКОформлению(Команда)
	
	ОткрытьФорму("Отчет.ИмпортныеТоварыКОформлению.Форма",
		Новый Структура("КлючВарианта, КлючНазначенияИспользования, Отбор, СформироватьПриОткрытии, ВидимостьКомандВариантовОтчетов", 
			"ИмпортныеТоварыКОформлению",
			,
			,
			Истина,
			Ложь));

КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПериодВариантПриИзменении(Элемент)
	
	УстановитьПараметрыСписков();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодДатаОкончанияПриИзменении(Элемент)
	
	УстановитьПараметрыСписков();
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница = Элементы.СтраницаКОформлению Тогда
		УстановитьПараметрыСписков();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКОформлению

&НаКлиенте
Процедура КОформлениюВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "КОформлениюДокументПоступления" Тогда
		
		ПоказатьЗначение(Неопределено, Элементы.КОформлению.ТекущиеДанные.ДокументПоступления);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

// МенюОтчеты
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	МенюОтчетыКлиент.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтотОбъект, Элементы.Список);
	
КонецПроцедуры
// Конец МенюОтчеты

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПриИзмененииРеквизитов

&НаКлиенте
Процедура УстановитьПараметрыСписков()
	ДатаОкончания =
		?(ЗначениеЗаполнено(Период.ДатаОкончания), КонецДня(Период.ДатаОкончания) + 1, '39991231235959');
	КОформлению.Параметры.УстановитьЗначениеПараметра("ДатаОкончания", ДатаОкончания);
КонецПроцедуры

#КонецОбласти

&НаСервере
Функция ТекстЗапросаКОформлению()
	
	Возврат "ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НЕОПРЕДЕЛЕНО КАК ДокументПоступления,
		|	НаДату.Поставщик,
		|	НаДату.Организация,
		|	ВЫБОР
		|		КОГДА НаДату.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПоставкаНаКомиссию,
		|	НаДату.ВидЗапасов.Соглашение КАК Соглашение,
		|	НаДату.ВидЗапасов.Валюта КАК Валюта,
		|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК КонтрагентПоставщика
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизацийКОформлению.Остатки(&ДатаОкончания, ) КАК НаДату
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизацийКОформлению.Остатки(, ) КАК НаСейчас
		|		ПО НаДату.АналитикаУчетаНоменклатуры = НаСейчас.АналитикаУчетаНоменклатуры
		|			И НаДату.Поставщик = НаСейчас.Поставщик
		|			И НаДату.Организация = НаСейчас.Организация
		|			И НаДату.ВидЗапасов = НаСейчас.ВидЗапасов
		|ГДЕ
		|	НаСейчас.КоличествоОстаток > 0"
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	// Условное оформление динамического списка "Список"
	СписокУсловноеОформление = КОформлению.КомпоновщикНастроек.Настройки.УсловноеОформление;
	СписокУсловноеОформление.Элементы.Очистить();
	
	// Документ поступления не заполнен
	Элемент = СписокУсловноеОформление.Элементы.Добавить();
	Элемент.Представление = НСтр("ru='Документ поступления не заполнен';uk='Документ надходження не заповнений'");
	Элемент.Поля.Элементы.Добавить().Поле = Новый ПолеКомпоновкиДанных("ДокументПоступления");
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДокументПоступления");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru='<не указан>';uk='<не зазначено>'"));
	
	ОбщегоНазначенияУТ.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект, "Список", "Дата");
	
КонецПроцедуры

#КонецОбласти
