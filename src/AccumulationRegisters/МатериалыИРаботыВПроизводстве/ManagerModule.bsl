#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы


Процедура ПерезаполнитьРегистр_ДанныеДляОбновления(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.МатериалыИРаботыВПроизводстве";
	ИмяРегистра = "МатериалыИРаботыВПроизводстве";
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МатериалыИРаботыВПроизводстве.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТДокументы
	|ИЗ
	|	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК МатериалыИРаботыВПроизводстве
	|ГДЕ
	|   МатериалыИРаботыВПроизводстве.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДокументы.Регистратор,
	|	ПоступлениеТоваровУслугТовары.Номенклатура,
	|	ПоступлениеТоваровУслугТовары.Характеристика,
	|	ПоступлениеТоваровУслугТовары.Подразделение,
	|	ПоступлениеТоваровУслугТовары.Назначение
    |ПОМЕСТИТЬ ВТОбособленныеТовары
	|ИЗ
	|	ВТДокументы КАК ВТДокументы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|		ПО ВТДокументы.Регистратор = ПоступлениеТоваровУслугТовары.Ссылка
	|ГДЕ
	|	ПоступлениеТоваровУслугТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И ПоступлениеТоваровУслугТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И НЕ ПоступлениеТоваровУслугТовары.СписатьНаРасходы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	Номенклатура,
	|	Характеристика,
	|	Подразделение,
	|	Назначение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|	ВТОбособленныеТовары.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ ВТРегистраторыКПроведению
	|ИЗ
	|	ВТОбособленныеТовары КАК ВТОбособленныеТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.МатериалыИРаботыВПроизводстве КАК МатериалыИРаботыВПроизводстве
	|		ПО ВТОбособленныеТовары.Регистратор = МатериалыИРаботыВПроизводстве.Регистратор
	|			И ВТОбособленныеТовары.Номенклатура = МатериалыИРаботыВПроизводстве.УдалитьАналитикаУчетаНоменклатуры.Номенклатура
	|			И ВТОбособленныеТовары.Характеристика = МатериалыИРаботыВПроизводстве.УдалитьАналитикаУчетаНоменклатуры.Характеристика
	|			И ВТОбособленныеТовары.Подразделение = МатериалыИРаботыВПроизводстве.УдалитьАналитикаУчетаНоменклатуры.Склад
	|			И ВТОбособленныеТовары.Назначение = МатериалыИРаботыВПроизводстве.Назначение
	|ГДЕ
	|	МатериалыИРаботыВПроизводстве.Назначение ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МатериалыИРаботыВПроизводстве.Регистратор
	|ИЗ
	|	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК МатериалыИРаботыВПроизводстве
	|ГДЕ
	|	(МатериалыИРаботыВПроизводстве.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И МатериалыИРаботыВПроизводстве.УдалитьАналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ 
	|
	|ВЫБРАТЬ
	|	ВТРегистраторыКПроведению.Регистратор
	|ИЗ
	|	ВТРегистраторыКПроведению КАК ВТРегистраторыКПроведению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслуг
	|		ПО ВТРегистраторыКПроведению.Регистратор = ПоступлениеТоваровУслуг.Ссылка
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	И НЕ ПоступлениеТоваровУслуг.СписатьНаРасходы
	|
	|ОБЪЕДИНИТЬ 
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|	МатериалыИРаботыВПроизводстве.Регистратор 
	|ИЗ
	|	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК МатериалыИРаботыВПроизводстве
	|ГДЕ
	|	(МатериалыИРаботыВПроизводстве.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И МатериалыИРаботыВПроизводстве.УдалитьНазначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И МатериалыИРаботыВПроизводстве.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И МатериалыИРаботыВПроизводстве.Количество > 0)
	|";
	
	СписокРегистраторов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = ПолноеИмяРегистра;
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, СписокРегистраторов, ДополнительныеПараметры);

	
КонецПроцедуры

Процедура ПерезаполнитьРегистр(Параметры) Экспорт
	
	Регистраторы = Новый Массив;
	Регистраторы.Добавить("Документ.АктВыполненныхРабот");
	Регистраторы.Добавить("Документ.ВводОстатков");
	Регистраторы.Добавить("Документ.ОтчетОРозничныхПродажах");
	Регистраторы.Добавить("Документ.ПередачаТоваровМеждуОрганизациями");
	Регистраторы.Добавить("Документ.ПоступлениеТоваровУслуг");
	Регистраторы.Добавить("Документ.ПоступлениеУслугПрочихАктивов");
	Регистраторы.Добавить("Документ.РеализацияТоваровУслуг");

	ОбработкаЗавершена = Истина;
	
	ОбработкаЗавершена = ОбработкаЗавершена И 
        ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
            Регистраторы,
            "РегистрНакопления.МатериалыИРаботыВПроизводстве",
		    Параметры.Очередь
        );
																			
	ОбработкаЗавершена = ОбработкаЗавершена И 
        ПерезаполнитьРегистр_КорректировкаРегистров(Параметры);
	
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
	
КонецПроцедуры

Функция ПерезаполнитьРегистр_КорректировкаРегистров(Параметры)

	ПолноеИмяРегистра = "РегистрНакопления.МатериалыИРаботыВПроизводстве";
	ПолноеИмяДокумента = "Документ.КорректировкаРегистров";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
    
    Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуРегистраторовРегистраДляОбработки(
	    Параметры.Очередь,
		ПолноеИмяДокумента,
		ПолноеИмяРегистра,
		МенеджерВременныхТаблиц
    );
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Возврат Истина;
    КонецЕсли;
    
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МатериалыИРаботыВПроизводстве.УдалитьАналитикаУчетаНоменклатуры КАК Ссылка
	|ПОМЕСТИТЬ АналитикаУчетаНоменклатуры
	|ИЗ
	|	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК МатериалыИРаботыВПроизводстве
	|ГДЕ
	|	МатериалыИРаботыВПроизводстве.Регистратор В
	|			(ВЫБРАТЬ
	|				СписокРегистраторов.Регистратор
	|			ИЗ
	|				ВТДляОбработки КАК СписокРегистраторов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КлючиАналитикиУчетаНоменклатуры.Ссылка КАК АналитикаУчетаНоменклатуры,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	КлючиАналитикиУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	КлючиАналитикиУчетаНоменклатуры.Серия КАК Серия,
	|	КлючиАналитикиУчетаНоменклатуры.Склад КАК Подразделение
	|ИЗ
	|	Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|ГДЕ
	|	КлючиАналитикиУчетаНоменклатуры.Ссылка В
	|			(ВЫБРАТЬ
	|				АналитикаУчетаНоменклатуры.Ссылка
	|			ИЗ
	|				АналитикаУчетаНоменклатуры)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокРегистраторов.Регистратор
	|ИЗ
	|	ВТДляОбработки КАК СписокРегистраторов";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТДляОбработки", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаАналитикаУчетаНоменклатуры = Результат[Результат.ВГраница()-1].Выгрузить();
	ВыборкаПоРегистраторам = Результат[Результат.ВГраница()].Выбрать();
	
	Пока ВыборкаПоРегистраторам.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			// Устанавливаем управляемую блокировку, чтобы провести ответственное чтение объекта
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяДокумента);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаПоРегистраторам.Регистратор);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			
			Блокировка.Заблокировать();
			
			НаборЗаписей = РегистрыНакопления.МатериалыИРаботыВПроизводстве.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаПоРегистраторам.Регистратор);
			НаборЗаписей.Прочитать();
			Для каждого ЗаписьНабора Из НаборЗаписей Цикл
				СтруктураПоиска = Новый Структура("АналитикаУчетаНоменклатуры", ЗаписьНабора.УдалитьАналитикаУчетаНоменклатуры);
				СписокСтрок = ТаблицаАналитикаУчетаНоменклатуры.НайтиСтроки(СтруктураПоиска); 
				СтрокаАналитикаУчетаНоменклатуры = СписокСтрок[0];
				ЗаписьНабора.Номенклатура   = СтрокаАналитикаУчетаНоменклатуры.Номенклатура;
				ЗаписьНабора.Характеристика = СтрокаАналитикаУчетаНоменклатуры.Характеристика;
				ЗаписьНабора.Серия          = СтрокаАналитикаУчетаНоменклатуры.Серия;
				ЗаписьНабора.Подразделение  = СтрокаАналитикаУчетаНоменклатуры.Подразделение;
				ЗаписьНабора.УдалитьАналитикаУчетаНоменклатуры = Справочники.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка();
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			
			ЗафиксироватьТранзакцию();
			
			ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(ВыборкаПоРегистраторам.Регистратор);
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru='Не удалось перезаписать движения в регистр %ИмяРегистра% по документу %Ссылка% по причине: %Причина%';uk='Не вдалося перезаписати рухи в регістр %ИмяРегистра% по документу %Ссылка% по причині: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", ВыборкаПоРегистраторам.Регистратор);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ИмяРегистра%", ПолноеИмяРегистра);
		
			ЗаписьЖурналаРегистрации(
                ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), 
                УровеньЖурналаРегистрации.Предупреждение,
			    Метаданные.НайтиПоПолномуИмени(ПолноеИмяДокумента), 
                ВыборкаПоРегистраторам.Регистратор, 
                ТекстСообщения
            );
			
		КонецПопытки;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции




#КонецОбласти

#КонецОбласти

#КонецЕсли