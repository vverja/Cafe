#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы


Процедура ИсправитьДвижения_ДанныеДляОбновления(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ТоварыНаСкладах";
	ИмяРегистра = "ТоварыНаСкладах";
    
#Область ВнутреннееПотреблениеТоваровВозвратТоваровПоставщикуПеремещениеТоваровРеализацияТоваровУслуг
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыНаСкладах.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах КАК ТоварыНаСкладах
	|ГДЕ
	|	ТоварыНаСкладах.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ТоварыНаСкладах.КОтгрузке > 0
	|	И (ТоварыНаСкладах.Регистратор ССЫЛКА Документ.ВнутреннееПотреблениеТоваров
	|		ИЛИ ТоварыНаСкладах.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|		ИЛИ ТоварыНаСкладах.Регистратор ССЫЛКА Документ.ПеремещениеТоваров
	|		ИЛИ ТоварыНаСкладах.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг)
	|;
	|";
	Результат = Запрос.Выполнить().Выгрузить();
	Регистраторы = Результат.ВыгрузитьКолонку("Ссылка");
	
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
#КонецОбласти    
    
#Область АктОРасхожденияхПослеОтгрузки	
	ТекстЗапросаМеханизмаПроведения = Документы.АктОРасхожденияхПослеОтгрузки.АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
	Регистраторы = ОбновлениеИнформационнойБазыУТ.РегистраторыДляПерепроведения(
		ТекстЗапросаМеханизмаПроведения,
		ПолноеИмяРегистра,
		"Документ.АктОРасхожденияхПослеОтгрузки"
    );
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
#КонецОбласти    

#Область АктОРасхожденияхПослеПеремещения
	ТекстЗапросаМеханизмаПроведения = Документы.АктОРасхожденияхПослеПеремещения.АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
	Регистраторы = ОбновлениеИнформационнойБазыУТ.РегистраторыДляПерепроведения(
		ТекстЗапросаМеханизмаПроведения,
		ПолноеИмяРегистра,
		"Документ.АктОРасхожденияхПослеПеремещения"
    );
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
#КонецОбласти

#Область СборкаТоваров    
	ТекстЗапросаМеханизмаПроведения = Документы.СборкаТоваров.АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
	Регистраторы = ОбновлениеИнформационнойБазыУТ.РегистраторыДляПерепроведения(
		ТекстЗапросаМеханизмаПроведения,
		ПолноеИмяРегистра,
		"Документ.СборкаТоваров"
    );
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
#КонецОбласти    

#Область ПриходныйОрдерНаТовары
	ТекстЗапросаМеханизмаПроведения = Документы.ПриходныйОрдерНаТовары.АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
	Регистраторы = ОбновлениеИнформационнойБазыУТ.РегистраторыДляПерепроведения(
        ТекстЗапросаМеханизмаПроведения,
		ПолноеИмяРегистра,
		"Документ.ПриходныйОрдерНаТовары"
    );
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
#КонецОбласти

#Область ОрдерНаПеремещениеТоваров
	ТекстЗапросаМеханизмаПроведения = Документы.ОрдерНаПеремещениеТоваров.АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
	Регистраторы = ОбновлениеИнформационнойБазыУТ.РегистраторыДляПерепроведения(
        ТекстЗапросаМеханизмаПроведения,
		ПолноеИмяРегистра,
		"Документ.ОрдерНаПеремещениеТоваров"
    );
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
#КонецОбласти

#Область РасходныйОрдерНаТовары	
	ТекстЗапросаМеханизмаПроведения = Документы.РасходныйОрдерНаТовары.АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
	Регистраторы = ОбновлениеИнформационнойБазыУТ.РегистраторыДляПерепроведения(
		ТекстЗапросаМеханизмаПроведения,
		ПолноеИмяРегистра,
		"Документ.РасходныйОрдерНаТовары"
    );
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
#КонецОбласти    

#Область ЧекККМВозврат
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЧекККМВозвратТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЧекККМВозврат.Товары КАК ЧекККМВозвратТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах КАК ТоварыНаСкладах
	|		ПО ЧекККМВозвратТовары.Ссылка = ТоварыНаСкладах.Регистратор
	|			И ЧекККМВозвратТовары.Номенклатура = ТоварыНаСкладах.Номенклатура
	|			И ЧекККМВозвратТовары.Характеристика = ТоварыНаСкладах.Характеристика
	|			И ЧекККМВозвратТовары.Помещение = ТоварыНаСкладах.Помещение
	|			И ЧекККМВозвратТовары.Ссылка.Склад = ТоварыНаСкладах.Склад
	|			И ЧекККМВозвратТовары.Серия = ТоварыНаСкладах.Серия
	|			И (ТоварыНаСкладах.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
	|ГДЕ
	|	НЕ ЧекККМВозвратТовары.Ссылка.Архивный
	|	И ЧекККМВозвратТовары.Ссылка.Проведен
	|	И ЧекККМВозвратТовары.Ссылка.НомерЧекаККМ <> 0
	|	И ЧекККМВозвратТовары.СтатусУказанияСерий = 14
	|	И ТоварыНаСкладах.Регистратор ЕСТЬ NULL ";

	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
#КонецОбласти
	
#Область ПеремещениеТоваров
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПеремещениеТоваровТовары.Ссылка КАК Регистратор
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказНаПеремещение.Товары КАК ЗаказНаПеремещениеТовары
	|		ПО ПеремещениеТоваровТовары.КодСтроки = ЗаказНаПеремещениеТовары.КодСтроки
	|			И ПеремещениеТоваровТовары.ЗаказНаПеремещение = ЗаказНаПеремещениеТовары.Ссылка
	|ГДЕ
	|	ЗаказНаПеремещениеТовары.ВариантОбеспечения = ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)
	|	И ПеремещениеТоваровТовары.НазначениеОтправителя = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)";
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
#КонецОбласти	
	
КонецПроцедуры

Процедура ИсправитьДвижения(Параметры) Экспорт
	
	Регистраторы = Новый Массив;
	Регистраторы.Добавить("Документ.АктОРасхожденияхПослеОтгрузки");
	Регистраторы.Добавить("Документ.АктОРасхожденияхПослеПеремещения");
	Регистраторы.Добавить("Документ.ВнутреннееПотреблениеТоваров");
	Регистраторы.Добавить("Документ.ВозвратТоваровПоставщику");
    Регистраторы.Добавить("Документ.ОрдерНаПеремещениеТоваров");
    Регистраторы.Добавить("Документ.ПеремещениеТоваров");
    Регистраторы.Добавить("Документ.ПриходныйОрдерНаТовары");
    Регистраторы.Добавить("Документ.РасходныйОрдерНаТовары");
    Регистраторы.Добавить("Документ.РеализацияТоваровУслуг");
	Регистраторы.Добавить("Документ.СборкаТоваров");
	Регистраторы.Добавить("Документ.ЧекККМВозврат");
	
	ОбработкаЗавершена = ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
        Регистраторы,
	    "РегистрНакопления.ТоварыНаСкладах",
	    Параметры.Очередь
    );
	
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
	
КонецПроцедуры



Процедура ЗарегистрироватьДанныеКОбработкеДляПереходаНаВерсию2_1_12(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ТоварыНаСкладах";
	ИмяРегистра = "ТоварыНаСкладах";
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПеремещениеТоваровТовары.Ссылка
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|ГДЕ
	|	ПеремещениеТоваровТовары.СтатусУказанияСерий = 6
	|	И ПеремещениеТоваровТовары.СтатусУказанияСерийОтправитель = 5
	|";
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
	
КонецПроцедуры

Процедура ОбработатьДанныеДляПереходаНаВерсию2_1_12(Параметры) Экспорт
	
	Регистраторы = Новый Массив;
	Регистраторы.Добавить("Документ.ПеремещениеТоваров");
	
	ОбработкаЗавершена = ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
        Регистраторы,
	    "РегистрНакопления.ТоварыНаСкладах",
	    Параметры.Очередь
    );
	
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли