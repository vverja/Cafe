
#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Данные.ВариантСовместногоПрименения) И Не ЗначениеЗаполнено(Данные.Наименование) Тогда
		СтандартнаяОбработка = Ложь;
		Представление = Данные.ВариантСовместногоПрименения;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияПолейПредставления(Поля, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поля.Добавить("ЭтоГруппа");
	Поля.Добавить("ВариантСовместногоПрименения");
	Поля.Добавить("Наименование");
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Получает реквизиты объекта, которые необходимо блокировать от изменения
//
// Параметры:
//  Нет
//
// Возвращаемое значение:
//  Массив - блокируемые реквизиты объекта
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт

	Результат = Новый Массив;
	Результат.Добавить("ВалютаПредоставления");
	Результат.Добавить("ВариантСовместногоПрименения");
	Результат.Добавить("ВариантРасчетаРезультатаСовместногоПрименения");
	Результат.Добавить("ВидЦены");
	Результат.Добавить("ЗначениеСкидкиНаценки");
	Результат.Добавить("СегментПодарков");
	Результат.Добавить("СпособПредоставления;СпособПредоставленияСкидкиНаценки,СпособПредоставленияБонусныеБаллы,ПоказатьФормуНастроекВнешнейОбработкиБонусы,ПоказатьФормуНастроекВнешнейОбработки");
	Результат.Добавить("Управляемая;СпособНазначения");
	Результат.Добавить("УсловияПредоставления;УсловияПредоставленияПодобратьУсловияПредоставления,УсловияПредоставленияПодобратьУсловияПредоставленияБонусы,УсловияПредоставленияГруппаСоздать");
	Результат.Добавить("ЦеновыеГруппы");
	Результат.Добавить("Родитель");
	Результат.Добавить("ТекстСообщения");
	Результат.Добавить("ВидКартыЛояльности");
	Результат.Добавить("ИспользоватьКратность");
	Результат.Добавить("УсловиеДляСкидкиКоличеством");
	Результат.Добавить("ТочностьОкругления");
	Результат.Добавить("ПсихологическоеОкругление");
	Результат.Добавить("ВариантОкругления");
	Результат.Добавить("СпособПримененияСкидки");
	Результат.Добавить("СпособНазначения;СпособНазначенияВручную,СпособНазначенияАвтоматически");
	Результат.Добавить("БонуснаяПрограммаЛояльности");
	Результат.Добавить("ПериодДействия;ИспользоватьПериодДействия");
	Результат.Добавить("КоличествоПериодовДействия");
	Результат.Добавить("ПериодОтсрочкиНачалаДействия;ИспользоватьОтсрочкуНачалаДействия");
	Результат.Добавить("КоличествоПериодовОтсрочкиНачалаДействия");
	Результат.Добавить("ВариантОтбораНоменклатуры;ДополнительныйОтборПредставление,ОтборПредставление,СегментНоменклатуры,СписокНоменклатуры");
	Результат.Добавить("ПрименятьУмножениеВРамкахВышестоящейГруппы");
	Результат.Добавить("УчитыватьХарактеристики");
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполняет предопределенный элемент справочника "Скидки (наценки)"
//
Процедура ЗаполнитьПредопределенныеЭлементы() Экспорт

	СправочникОбъект = Справочники.СкидкиНаценки.КорневаяГруппа.ПолучитьОбъект();
	СправочникОбъект.ВариантСовместногоПрименения = Перечисления.ВариантыСовместногоПримененияСкидокНаценок.Максимум;
	СправочникОбъект.ВариантРасчетаРезультатаСовместногоПрименения = Перечисления.ВариантыРасчетаРезультатаСовместногоПрименения.ПоСтроке;
	Попытка
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(СправочникОбъект);
	Исключение
	КонецПопытки;

КонецПроцедуры


// Обработчик обновления BAS УТ 3.2.2
// Заполняет поле "Вариант отбора номенклатуры" в справочнике "Скидки (наценки)"
Процедура ЗаполнитьВариантОтбораНоменклатурыИВариантОкругления() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СкидкиНаценки.Ссылка КАК Ссылка,
	|	СкидкиНаценки.Родитель.ВариантСовместногоПрименения КАК ВариантСовместногоПрименения
	|ИЗ
	|	Справочник.СкидкиНаценки КАК СкидкиНаценки
	|ГДЕ
	|	(НЕ СкидкиНаценки.ЭтоГруппа И (СкидкиНаценки.ВариантОтбораНоменклатуры = &ВариантОтбораНоменклатуры
	|	ИЛИ СкидкиНаценки.ВариантОкругления = &ВариантОкругления))
	|	ИЛИ (СкидкиНаценки.ЭтоГруппа И СкидкиНаценки.ВариантРасчетаРезультатаСовместногоПрименения = &ВариантРасчетаРезультатаСовместногоПрименения)
	|";
	
	Запрос.УстановитьПараметр("ВариантОтбораНоменклатуры", Перечисления.ВариантыОтбораНоменклатурыДляРасчетаСкидокНаценок.ПустаяСсылка());
	Запрос.УстановитьПараметр("ВариантОкругления", Перечисления.ВариантыОкругления.ПустаяСсылка());
	Запрос.УстановитьПараметр("ВариантРасчетаРезультатаСовместногоПрименения", Перечисления.ВариантыРасчетаРезультатаСовместногоПрименения.ПустаяСсылка());
	
	ОтборСтрокНоменклатура = Справочники.СкидкиНаценки.ПолучитьМакет("ОтборСтрокНоменклатура");
	ОтборСтрокДополнительныеУсловия = Справочники.СкидкиНаценки.ПолучитьМакет("ОтборСтрокДополнительныеУсловия");
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Объект = Неопределено;
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		Если Не Объект.ЭтоГруппа Тогда
			
			Если Не ЗначениеЗаполнено(Объект.ВариантОтбораНоменклатуры) Тогда
				Объект.ВариантОтбораНоменклатуры = Перечисления.ВариантыОтбораНоменклатурыДляРасчетаСкидокНаценок.БезОграничений;
				Если Выборка.ВариантСовместногоПрименения = Перечисления.ВариантыСовместногоПримененияСкидокНаценок.Умножение Тогда
					Объект.ПрименятьУмножениеВРамкахВышестоящейГруппы = Истина;
				КонецЕсли;
				Объект.УчитыватьХарактеристики = Истина;
			КонецЕсли;
			
			Если Объект.ОкруглятьВБольшуюСторону Тогда
				Объект.ВариантОкругления = Перечисления.ВариантыОкругления.ВсегдаВПользуПредприятия;
			Иначе
				Объект.ВариантОкругления = Перечисления.ВариантыОкругления.ПоАрифметическимПравилам;
			КонецЕсли;
			
		Иначе
			Если Не ЗначениеЗаполнено(Объект.ВариантРасчетаРезультатаСовместногоПрименения) Тогда
				Объект.ВариантРасчетаРезультатаСовместногоПрименения = Перечисления.ВариантыРасчетаРезультатаСовместногоПрименения.ПоСтроке;
			КонецЕсли;
		КонецЕсли;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(Объект);
		
	КонецЦикла;
	
КонецПроцедуры


#КонецОбласти

#КонецЕсли