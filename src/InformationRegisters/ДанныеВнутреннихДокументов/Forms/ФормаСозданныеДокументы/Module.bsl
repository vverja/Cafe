
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ЗагрузитьСписок();
	ПересчитатьПоляСписка();
	
	ОбъектыПечати = ПолучитьОбъектыПечати();
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюПечать, ОбъектыПечати);
	// Конец СтандартныеПодсистемы.Печать
	
	УстановитьЗаголовок();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ВнутреннееПотреблениеТоваров"
		Или ИмяСобытия = "Запись_ПередачаМатериаловВПроизводство" 
		Или ИмяСобытия = "Запись_ПеремещениеТоваров" 
		Или ИмяСобытия = "Запись_СборкаТоваров" Тогда
		
		ПересчитатьПоляСписка();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Элементы.СписокСозданныеДокументы);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

&НаКлиенте
Процедура НазадЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	
	Если Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьСозданныеДокументы();
	
	ЗакрытьБезВопроса = Истина;
	Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСозданныеДокументы()
	
	СсылкиНаУдаление = СписокСозданныеДокументы.Выгрузить(, "Ссылка").ВыгрузитьКолонку("Ссылка");
	
	УстановитьПривилегированныйРежим(Истина);
	УдалитьОбъекты(СсылкиНаУдаление, Ложь);
	УстановитьПривилегированныйРежим(Ложь);
	
	СписокСозданныеДокументы.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	Если СписокСозданныеДокументы.Количество() > 0 Тогда
		
		Кнопки = Новый СписокЗначений();
		Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru='Удалить сформированные документы';uk='Вилучити сформовані документи'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена);
		
		ТекстВопроса = НСтр("ru='При переходе назад сформированные документы будут удалены.';uk='При переході назад сформовані документи будуть вилучені.'");
		
		ПоказатьВопрос(Новый ОписаниеОповещения("НазадЗавершение", ЭтотОбъект), ТекстВопроса, Кнопки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Принять(Команда)
	ЗакрытьБезВопроса = Истина;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура СписокСозданныеДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПоказатьЗначение(Неопределено, Элемент.ТекущиеДанные.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура ЗагрузитьСписок()
	
	Для Каждого Документ Из Параметры.СозданныеДокументы Цикл
		НоваяСтрока = СписокСозданныеДокументы.Добавить();
		ДокументСсылка = Документ.Значение;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДокументСсылка);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПересчитатьПоляСписка()
	
	Для Каждого Строка Из СписокСозданныеДокументы Цикл
		ДокументСсылка = Строка.Ссылка;
		
		ЗаполнитьЗначенияСвойств(Строка, ДокументСсылка);
		Строка.Картинка = ?(ДокументСсылка.Проведен, 0, ?(ДокументСсылка.ПометкаУдаления, 1, 2));
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьОбъектыПечати()
	
	МассивОбъектовМетаданных = Новый Массив();
	Для Каждого Строка Из СписокСозданныеДокументы Цикл
		ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗнч(Строка.Ссылка));
		МассивОбъектовМетаданных.Добавить(ОбъектМетаданных);
	КонецЦикла;
	
	ОбщегоНазначенияКлиентСервер.СвернутьМассив(МассивОбъектовМетаданных);
	
	Возврат МассивОбъектовМетаданных;
	
КонецФункции

&НаСервере
Процедура УстановитьЗаголовок() 
	
	//ТекстЗаголовка = НСтр("ru='Созданные документы (%1 шт)'");
	//Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовка, СписокСозданныеДокументы.Количество());
	
	КоличествоДокументов = СписокСозданныеДокументы.Количество();
	
	СклонениеСоздано = НСтр("ru='Создан, Создано, Создано';uk='Створений, Створено, Створено'");
	Создано = СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(КоличествоДокументов, СклонениеСоздано);
	Создано = СтрЗаменить(Создано, КоличествоДокументов + " ", "");
	
	СклонениеДокументов = НСтр("ru='документ, документа, документов';uk='документ, документа, документів'");
	Документов = СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(КоличествоДокументов, СклонениеДокументов);
	
	Заголовок = Создано + " " + Документов;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Не ЗакрытьБезВопроса Тогда
		
		СтандартнаяОбработка = Ложь;
		Отказ = Истина;
		
		Кнопки = Новый СписокЗначений();
		Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru='Принять и закрыть';uk='Прийняти і закрити'"));
		Кнопки.Добавить(КодВозвратаДиалога.Нет, НСтр("ru='Отменить и удалить';uk='Скасувати і вилучити'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена);
		
		ТекстВопроса = НСтр("ru='Выберите действие которое необходимо произвести с созданными документами';uk='Виберіть дію, яку необхідно виконати з створеними документами'");
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ВопросОЗакрытии", ЭтотОбъект), ТекстВопроса, Кнопки);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросОЗакрытии(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Ответ = РезультатВопроса;
	
	Если Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		НазадЗавершение(Ответ, Неопределено);
	Иначе
		ЗакрытьБезВопроса = Истина;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти