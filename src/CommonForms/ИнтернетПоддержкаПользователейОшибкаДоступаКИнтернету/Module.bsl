
// Хранение контекста взаимодействия с сервисом
&НаКлиенте
Перем КонтекстВзаимодействия Экспорт;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	МестоЗапуска = Параметры.МестоЗапуска;
	
	Элементы.НадписьСообщенияВТехПоддержку.Заголовок =
		ИнтернетПоддержкаПользователейКлиентСервер.ФорматированныйЗаголовок(
			ИнтернетПоддержкаПользователейКлиентСервер.ПодставитьДомен(
				НСтр("ru='<body>При возникновении проблем отправьте письмо по адресу <a href=""SendMail"">webits-info@bas-soft.eu</a></body>';uk='<body>У разі виникнення проблем надішліть листа за адресою <a href=""SendMail"">webits-info@bas-soft.eu</a></body>'")));
	
	ОписаниеОшибки = Параметры.ОписаниеОшибки;
	ОписаниеОшибкиЗаполнено = НЕ ПустаяСтрока(ОписаниеОшибки);
	КлючСохраненияПоложенияОкна = МестоЗапуска + Строка(ОписаниеОшибкиЗаполнено);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, "ПодробноеОписаниеОшибки, ПриНачалеРаботыСистемы, Логин");
	
	Если ТипЗнч(Параметры.СтартовыеПараметры) = Тип("Структура") Тогда
		СтартовыеПараметры = Параметры.СтартовыеПараметры;
	Иначе
		СтартовыеПараметры = Новый Структура;
	КонецЕсли;
	
	Элементы.ОписаниеОшибки.Видимость = ОписаниеОшибкиЗаполнено;
	
	Элементы.ДекорацияПараметры.Видимость =
		ИнтернетПоддержкаПользователейВызовСервера.ДоступнаНастройкаПараметровПодключенияКИнтернетПоддержке();
	
	Если Параметры.ПриНачалеРаботыСистемы Тогда
		ЗапускатьПриСтарте = Истина;
	Иначе
		Элементы.ЗапускатьПриСтарте.Видимость = Ложь;
	КонецЕсли;
	
	// Настройка внешнего вида формы
	Если ТекущийВариантИнтерфейсаКлиентскогоПриложения() = ВариантИнтерфейсаКлиентскогоПриложения.Такси Тогда
		Элементы.ГруппаЗаголовка.Отображение           = ОтображениеОбычнойГруппы.СлабоеВыделение;
		Элементы.ГруппаИнформационнойЧасти.Отображение = ОтображениеОбычнойГруппы.СлабоеВыделение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Элементы.ДекорацияПараметры.Видимость Тогда
		Элементы.ДекорацияПараметры.Видимость = НЕ ФормаПараметровИнтернетПоддержкиОткрыта();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияПараметрыОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	
	Если НавигационнаяСсылка = "WebITSParams" Тогда
		СтандартнаяОбработка = Ложь;
		ИнтернетПоддержкаПользователейКлиент.ОткрытьФормуНастроекПараметровПодключения(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСообщенияВТехПоддержкуОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	
	Если НавигационнаяСсылка = "SendMail" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если МестоЗапуска = "handStartNew"
			Или МестоЗапуска = "systemStartNew" Тогда
			
			Тема = НСтр("ru='Интернет-поддержка. Обращение к монитору Интернет-поддержки.';uk='Інтернет-підтримка. Звернення до монітора Інтернет-підтримки.'");
			Тело = НСтр("ru='Возникает ошибка обращения к монитору Интернет-поддержки.';uk='Виникає помилка звернення до монітора Інтернет-підтримки.'");
		Иначе
			
			// В случае, если имя бизнес-процесса не было передано до возникновения ошибки
			Тема = НСтр("ru='Интернет-поддержка. Ошибка обращения к сервису';uk='Інтернет-підтримка. Помилка звернення до сервісу'");
			Тело = НСтр("ru='Возникает ошибка при обращении к сервису Интернет-поддержки.';uk='Виникає помилка при зверненні до сервісу Інтернет-підтримки.'");
			
		КонецЕсли;
		
		
		Если Не ПустаяСтрока(ПодробноеОписаниеОшибки) Тогда
			Тело = Тело + Символы.ПС + НСтр("ru='Описание ошибки:';uk='Опис помилки:'")
				+ Символы.ПС + ПодробноеОписаниеОшибки;
		ИначеЕсли Не ПустаяСтрока(ОписаниеОшибки) Тогда
			Тело = Тело + Символы.ПС + НСтр("ru='Описание ошибки:';uk='Опис помилки:'")
				+ Символы.ПС + ОписаниеОшибки;
		КонецЕсли;
		
		ИнтернетПоддержкаПользователейКлиент.СлужебнаяОтправитьСообщениеВТехПоддержку(
			Тема,
			Тело,
			,
			,
			?(КонтекстВзаимодействия = Неопределено,
				"",
				ИнтернетПоддержкаПользователейКлиентСервер.ЗначениеСессионногоПараметра(КонтекстВзаимодействия.КСКонтекст, "login")),
			?(КонтекстВзаимодействия = Неопределено,
				"",
				ИнтернетПоддержкаПользователейКлиентСервер.ЗначениеСессионногоПараметра(КонтекстВзаимодействия.КСКонтекст, "password")));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапускатьПриСтартеПриИзменении(Элемент)
	
	УстановитьНастройкуЗапускатьПриСтарте(ЗапускатьПриСтарте);
	
КонецПроцедуры

&НаКлиенте
Процедура ИнформацияИнформационнойЧастиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "open:log" Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьФорму("Обработка.ЖурналРегистрации.Форма", Новый Структура("Пользователь", ИмяПользователя()));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПовторитьПопыткуПодключения(Команда)
	
	Закрыть();
	ИнтернетПоддержкаПользователейКлиент.СтартоватьМеханизм(МестоЗапуска, СтартовыеПараметры, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ФормаПараметровИнтернетПоддержкиОткрыта()
	
	ПараметрыОповещения = Новый Структура("ФормаОткрыта", Ложь);
	Оповестить("ПроверитьОткрытиеФормыПараметровИнтернетПоддержки", ПараметрыОповещения);
	Возврат ПараметрыОповещения.ФормаОткрыта;
	
КонецФункции

&НаСервереБезКонтекста
Процедура УстановитьНастройкуЗапускатьПриСтарте(ЗначениеНастройки)
	
	ХранилищеОбщихНастроек.Сохранить(
		"ИнтернетПоддержкаПользователей",
		"ВсегдаПоказыватьПриСтартеПрограммы",
		ЗначениеНастройки);
	
КонецПроцедуры

#КонецОбласти
