
#Область ПрограммныйИнтерфейс

// Помещает данные в буфер обмена
//
// Параметры:
//   ВыделенныеСтроки - Массив - Массив идентификаторов выделенных строк
//   ТабЧасть -ТабличнаяЧасть - Табличная часть объекта с копируемыми строками
//
Процедура ПоместитьВыделенныеСтрокиВБуферОбмена(ВыделенныеСтроки, ТабЧасть) Экспорт
	ТаблицаБуфераОбмена = ИнициализироватьТаблицуБуфераОбмена();
	
	ВыделенныеСтрокиТЧ = Новый Массив;
	Если ВыделенныеСтроки <> Неопределено Тогда
		
		Для Каждого ТекСтрока Из ВыделенныеСтроки Цикл
			СтрокаТаблицы = ТабЧасть.НайтиПоИдентификатору(ТекСтрока);
			ВыделенныеСтрокиТЧ.Добавить(СтрокаТаблицы);
		КонецЦикла;
		
		НаборыВызовСервера.ДополнитьДоПолногоНабора(ТабЧасть, ВыделенныеСтрокиТЧ);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ВыделенныеСтрокиТЧ) Тогда
		Для каждого СтрокаТаблицы Из ВыделенныеСтрокиТЧ Цикл
			
			НоваяСтрока = ТаблицаБуфераОбмена.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
			
		КонецЦикла;
	Иначе
		Для каждого СтрокаТаблицы Из ТабЧасть Цикл
			
			НоваяСтрока = ТаблицаБуфераОбмена.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
			
		КонецЦикла;
	КонецЕсли;
	
	СкопироватьТаблицуВБуферОбмена(ТаблицаБуфераОбмена, "Строки");
	
КонецПроцедуры 

// Получает данные из буфера обмена
//
// Параметры:
//   ПараметрыОтбора - Структура - Параметры отбора строк
//
// Возвращаемое значение:
//   ТаблицаЗначений - Строки, полученные из буфера обмена
//
Функция ПолучитьСтрокиИзБуфераОбмена(ПараметрыОтбора = Неопределено) Экспорт
	
	ДанныеИзБуфераОбмена = ОбщегоНазначения.СтрокиИзБуфераОбмена();
	Если ДанныеИзБуфераОбмена.Источник = "Строки" Тогда
		СтрокиДляВставки = ДанныеИзБуфераОбмена.Данные;
	Иначе
		Возврат Новый ТаблицаЗначений;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыОтбора) Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТЗ.ТоварнаяКатегория,
		|	ТЗ.РейтингПродаж,
		|	ТЗ.НоменклатураНабора,
		|	ТЗ.Номенклатура,
		|	ТЗ.ТипНоменклатуры,
		|	ТЗ.ХарактеристикаНабора,
		|	ТЗ.Характеристика,
		|	ТЗ.Содержание,
		|	ТЗ.Упаковка,
		|	ТЗ.КоличествоУпаковок,
		|	ТЗ.Количество,
		|	ТЗ.Цена,
		|	ТЗ.ВидЦены,
		|	ТЗ.ПроцентРучнойСкидки,
		|	ТЗ.СуммаРучнойСкидки
		|ПОМЕСТИТЬ Т
		|ИЗ
		|	&ТЗ КАК ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР 
		|		КОГДА Т.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) 
		|		ТОГДА Т.Номенклатура.ТоварнаяКатегория 
		|		ИНАЧЕ Т.ТоварнаяКатегория 
		|	КОНЕЦ КАК ТоварнаяКатегория,
		|	ВЫБОР 
		|		КОГДА Т.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) 
		|		ТОГДА Т.Номенклатура.РейтингПродаж 
		|		ИНАЧЕ Т.РейтингПродаж 
		|	КОНЕЦ КАК РейтингПродаж,
		|	Т.НоменклатураНабора,
		|	Т.Номенклатура,
		|	Т.Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
		|	Т.ХарактеристикаНабора,
		|	Т.Характеристика,
		|	Т.Содержание,
		|	Т.Упаковка,
		|	Т.КоличествоУпаковок,
		|	Т.Количество,
		|	Т.Цена,
		|	Т.ВидЦены,
		|	Т.ПроцентРучнойСкидки,
		|	Т.СуммаРучнойСкидки
		|ИЗ
		|	Т КАК Т
		|ГДЕ
		|	ИСТИНА
		|	%ТекстУсловияОтбор%");
		
		Запрос.УстановитьПараметр("ТЗ", СтрокиДляВставки);
		ТекстУсловияОтбор = "";
		
		Если ПараметрыОтбора.Свойство("ОтборПоТипуНоменклатуры") Тогда
			ТекстУсловияОтбор = "И Т.Номенклатура.ТипНоменклатуры В (&ОтборПоТипуНоменклатуры)";
			Запрос.УстановитьПараметр("ОтборПоТипуНоменклатуры", ПараметрыОтбора.ОтборПоТипуНоменклатуры);
		КонецЕсли;
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"%ТекстУсловияОтбор%", ТекстУсловияОтбор);
		
		СтрокиДляВставки = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
	Возврат СтрокиДляВставки
КонецФункции 

// Помещает данные в буфер обмена
//
// Параметры:
//   Ячейки - Массив - массив с копируемыми ячейками
Процедура ПоместитьВыделенныеЯчейкиБюджетаВБуферОбмена(ЯчейкиБюджета) Экспорт
	СкопироватьТаблицуВБуферОбмена(ЯчейкиБюджета, "ЯчейкиБюджета");
КонецПроцедуры 

// Получает данные из буфера обмена
//
// Возвращаемое значение:
//   Массив - массив с вставляемыми ячейками
//
Функция ПолучитьЯчейкиБюджетаИзБуфераОбмена() Экспорт
	
	ДанныеИзБуфераОбмена = ОбщегоНазначения.СтрокиИзБуфераОбмена();
	
	Если ДанныеИзБуфераОбмена = Неопределено Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	Если ДанныеИзБуфераОбмена.Источник <> "ЯчейкиБюджета" Тогда
		Возврат Новый Массив;
	КонецЕсли;
	
	Возврат ДанныеИзБуфераОбмена.Данные;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИнициализироватьТаблицуБуфераОбмена()
	
	ТаблицаСтрок = Новый ТаблицаЗначений();
	ОписаниеТиповЧисло15_2 = ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(15,2);
	ОписаниеТиповЧисло15_3 = ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(15,3);
	ТаблицаСтрок.Колонки.Добавить("ТоварнаяКатегория", Новый ОписаниеТипов("СправочникСсылка.ТоварныеКатегории"));
	ТаблицаСтрок.Колонки.Добавить("РейтингПродаж", Новый ОписаниеТипов("СправочникСсылка.РейтингиПродажНоменклатуры"));
	ТаблицаСтрок.Колонки.Добавить("НоменклатураНабора", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаСтрок.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаСтрок.Колонки.Добавить("УпаковочныйЛист", Новый ОписаниеТипов("ДокументСсылка.УпаковочныйЛист"));
	ТаблицаСтрок.Колонки.Добавить("ТипНоменклатуры", Новый ОписаниеТипов("ПеречислениеСсылка.ТипыНоменклатуры"));
	ТаблицаСтрок.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаСтрок.Колонки.Добавить("ХарактеристикаНабора", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТаблицаСтрок.Колонки.Добавить("Содержание", Новый ОписаниеТипов("Строка"));
	ТаблицаСтрок.Колонки.Добавить("Упаковка", Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения"));
	ТаблицаСтрок.Колонки.Добавить("КоличествоУпаковок", ОписаниеТиповЧисло15_3);
	ТаблицаСтрок.Колонки.Добавить("Количество", ОписаниеТиповЧисло15_3);
	ТаблицаСтрок.Колонки.Добавить("Цена", ОписаниеТиповЧисло15_2);
	ТаблицаСтрок.Колонки.Добавить("ВидЦены", Новый ОписаниеТипов("СправочникСсылка.ВидыЦен"));
	ТаблицаСтрок.Колонки.Добавить("ПроцентРучнойСкидки", ОбщегоНазначенияУТ.ПолучитьОписаниеТиповЧисла(5,2));
	ТаблицаСтрок.Колонки.Добавить("СуммаРучнойСкидки", ОписаниеТиповЧисло15_2);
	ТаблицаСтрок.Колонки.Добавить("НаправлениеДеятельности", Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности"));
	ТаблицаСтрок.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.СтатьиРасходов"));
	ТаблицаСтрок.Колонки.Добавить("АналитикаРасходов", Метаданные.ПланыВидовХарактеристик.СтатьиРасходов.Тип);
	ТаблицаСтрок.Колонки.Добавить("СуммаРасходов", ОписаниеТиповЧисло15_2);
	ТаблицаСтрок.Колонки.Добавить("ДатаОтражения", Новый ОписаниеТипов("Дата"));
	ТаблицаСтрок.Колонки.Добавить("СтатьяДоходов", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.СтатьиДоходов"));
	ТаблицаСтрок.Колонки.Добавить("СуммаДоходов", ОписаниеТиповЧисло15_2);
	ТаблицаСтрок.Колонки.Добавить("Сумма", ОписаниеТиповЧисло15_2);
	ТаблицаСтрок.Колонки.Добавить("СуммаБезНДС", ОписаниеТиповЧисло15_2);
	ТаблицаСтрок.Колонки.Добавить("СуммаРегл", ОписаниеТиповЧисло15_2);
	ТаблицаСтрок.Колонки.Добавить("СуммаПР", ОписаниеТиповЧисло15_2);
	ТаблицаСтрок.Колонки.Добавить("СуммаВР", ОписаниеТиповЧисло15_2);
	
	
	Возврат ТаблицаСтрок;
	
КонецФункции 

Процедура СкопироватьТаблицуВБуферОбмена(Таблица, Источник = Неопределено)
	ТекущийБуферОбмена = ПараметрыСеанса.БуферОбмена;
	
	Если ЗначениеЗаполнено(ТекущийБуферОбмена.Данные) Тогда
		Адрес = ТекущийБуферОбмена.Данные;
	Иначе
		Адрес = Новый УникальныйИдентификатор;
	КонецЕсли;
	
	ДанныеВХранилище = ПоместитьВоВременноеХранилище(Таблица, Адрес);
	
	СтруктураБуфераОбмена = Новый Структура;
	СтруктураБуфераОбмена.Вставить("Источник", Источник);
	СтруктураБуфераОбмена.Вставить("Данные", ДанныеВХранилище);
	
	ПараметрыСеанса.БуферОбмена = Новый ФиксированнаяСтруктура(СтруктураБуфераОбмена);
	
КонецПроцедуры

#КонецОбласти

