#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Формирует представление документа
//
// Параметры
//    Ссылка - ДокументСсылка.ГрафикИсполненияДоговора - документ, для которого формируется представление
//
Функция ПредставлениеГрафика(Ссылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	МассивСтрок = Новый Массив;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	График.ДатаПоГрафику КАК Дата,
	|	МАКСИМУМ(График.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	Документ.ГрафикИсполненияДоговора.ЭтапыГрафикаИсполненияДоговора КАК График
	|
	|ГДЕ
	|	График.Ссылка.Проведен
	|	И График.Ссылка = &Ссылка
	|	И График.СуммаОплаты <> 0
	|	
	|СГРУППИРОВАТЬ ПО
	|	График.ДатаПоГрафику
	|;
	|///////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	График.ДатаПоГрафику КАК Дата,
	|	МАКСИМУМ(График.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	Документ.ГрафикИсполненияДоговора.ЭтапыГрафикаИсполненияДоговора КАК График
	|
	|ГДЕ
	|	График.Ссылка.Проведен
	|	И График.Ссылка = &Ссылка
	|	И График.СуммаИсполнения <> 0
	|	
	|СГРУППИРОВАТЬ ПО
	|	График.ДатаПоГрафику
	|;
	|///////////////////////////////////////////////////
	|");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Если Результат[0].Пустой() И Результат[1].Пустой() Тогда
		
		МассивСтрок.Добавить(Новый ФорматированнаяСтрока(НСтр("ru='Не задан';uk='Не заданий'"),, WebЦвета.Кирпичный));
		
	Иначе
		
		СтрокаИсполнение = ""; СтрокаИсполнениеНеЗадано = "";
		ТипДоговора = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Договор.ТипДоговора");
		Если ТипДоговора = Перечисления.ТипыДоговоров.СПокупателем
			Или ТипДоговора = Перечисления.ТипыДоговоров.СДавальцем Тогда
			
			СтрокаИсполнение = НСтр("ru='Отгрузка';uk='Відвантаження'");
			СтрокаИсполнениеНеЗадано = НСтр("ru='Отгрузка не задана';uk='Відвантаження не задане'");
			
		ИначеЕсли ТипДоговора = Перечисления.ТипыДоговоров.СПоставщиком
			Или ТипДоговора = Перечисления.ТипыДоговоров.Импорт
			Или ТипДоговора = Перечисления.ТипыДоговоров.СПереработчиком Тогда
			
			СтрокаИсполнение = НСтр("ru='Поступление';uk='Надходження'");
			СтрокаИсполнениеНеЗадано = НСтр("ru='Поступление не задано';uk='Надходження не задано'");
		КонецЕСли;
		
		Выборка = Результат[0].Выбрать();
		КоличествоОплат = Выборка.Количество();
		Если КоличествоОплат = 0 Тогда
			МассивСтрок.Добавить(НСтр("ru='Оплата не задана';uk='Оплата не задана'"));
		ИначеЕсли КоличествоОплат = 1 Тогда
			Выборка.Следующий();
			МассивСтрок.Добавить(СтрШаблон(НСтр("ru='Оплата %1';uk='Оплата %1'"), Формат(Выборка.Дата, "ДЛФ=Д") ));
		Иначе
			ТекстЭтапа = ОбщегоНазначенияУТКлиентСервер.СклонениеСлова(
				КоличествоОплат,
				НСтр("ru='этапы';uk='етапи'"), НСтр("ru='этапа';uk='етапу'"), НСтр("ru='этапов';uk='етапів'"), НСтр("ru='м';uk='м'"));
			МассивСтрок.Добавить(СтрШаблон(НСтр("ru='Оплата в %1';uk='Оплата в %1'"), Формат(КоличествоОплат, "ЧН=0")) + " " + ТекстЭтапа);
		КонецЕсли;
		
		МассивСтрок.Добавить("; ");
		
		Выборка = Результат[1].Выбрать();
		КоличествоИсполнений = Выборка.Количество();
		Если КоличествоИсполнений = 0 Тогда
			МассивСтрок.Добавить(СтрокаИсполнениеНеЗадано);
		ИначеЕсли КоличествоИсполнений = 1 Тогда
			Выборка.Следующий();
			МассивСтрок.Добавить(СтрШаблон(НСтр("ru='%1 %2';uk='%1 %2'"), СтрокаИсполнение, Формат(Выборка.Дата, "ДЛФ=Д")));
		Иначе
			ТекстЭтапа = ОбщегоНазначенияУТКлиентСервер.СклонениеСлова(
				КоличествоИсполнений,
				НСтр("ru='этапы';uk='етапи'"), НСтр("ru='этапа';uk='етапу'"), НСтр("ru='этапов';uk='етапів'"), НСтр("ru='м';uk='м'"));
			МассивСтрок.Добавить(СтрШаблон(НСтр("ru='%1 в %2';uk='%1 у %2'"), СтрокаИсполнение, Формат(КоличествоИсполнений, "ЧН=0")) + " " + ТекстЭтапа);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Новый ФорматированнаяСтрока(МассивСтрок);
	
КонецФункции

// Процедура устанавливает пометку на удаление для найденного документа
//
// Параметры:
//    Договор - СправочникСсылка.ДоговорыКонтрагентов - Договор, график которого должен быть помечен на удаление
//    ПометкаУдаления - Булево - Признак установки пометки на удаление
//
Процедура УстановитьПометкуУдаления(Договор, ПометкаУдаления) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Ссылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Договор, "ГрафикИсполненияДоговора");
	
	Если ЗначениеЗаполнено(Ссылка) Тогда
		Ссылка.ПолучитьОбъект().УстановитьПометкуУдаления(ПометкаУдаления);
	КонецЕсли;
	
КонецПроцедуры

// Осуществляет инициализацию структуры состояния выполнения договора
Функция СтруктураСостояниеВыполненияДокумента() Экспорт
	
	СтруктураСостояние = Отчеты.СостояниеВыполненияДокументов.ИницициализироватьСтруктуруСостояниеВыполненияДокумента();
	
	СтруктураСостояние.Вставить("ВыводитьТаблицуРасчетыСКлиентами", 1);
	СтруктураСостояние.Вставить("ВыводитьТаблицуРасчетыСПоставщиками", 2);
	СтруктураСостояние.Вставить("ЭтоДоговор", Истина);
	
	Возврат СтруктураСостояние;
	
КонецФункции

#Область Отчеты

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияПредставления(Данные, Представление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Представление = НСтр("ru='График исполнения договора';uk='Графік виконання договору'") + " " + ДенежныеСредстваВызовСервера.НаименованиеДоговора(Данные.Ссылка);
	
КонецПроцедуры

#КонецОбласти

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата                                     КАК Период,
	|	ДанныеДокумента.Договор                                  КАК Договор,
	|	ДанныеДокумента.Договор.Организация                      КАК Организация,
	|	ДанныеДокумента.Договор.Контрагент                       КАК Контрагент,
	|	ДанныеДокумента.Договор.Партнер                          КАК Партнер,
	|	ДанныеДокумента.Договор.НаправлениеДеятельности          КАК НаправлениеДеятельности,
	|	ДанныеДокумента.Договор.ВалютаВзаиморасчетов             КАК Валюта,
	|	ДанныеДокумента.Договор.ТипДоговора                      КАК ТипДоговора
	|ИЗ
	|	Документ.ГрафикИсполненияДоговора КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	Для Каждого Колонка из Результат.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаПартнеровИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос();
	ЗапросАналитик.Текст = "
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	&Контрагент КАК Контрагент,
	|	&Партнер КАК Партнер,
	|	&Договор КАК Договор,
	|	&НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	(ВЫБРАТЬ
	|		&Организация КАК Организация,
	|		&Контрагент КАК Контрагент,
	|		&Партнер КАК Партнер,
	|		&Договор КАК Договор,
	|		&НаправлениеДеятельности КАК НаправлениеДеятельности) КАК ТаблицаОбъектовРасчетов
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И &Партнер = Аналитика.Партнер
	|		И &Договор = Аналитика.Договор
	|		И &НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|ГДЕ
	|	Аналитика.КлючАналитики ЕСТЬ NULL
	|";

	ЗапросАналитик.УстановитьПараметр("Организация",             Запрос.Параметры.Организация);
	ЗапросАналитик.УстановитьПараметр("Контрагент",              Запрос.Параметры.Контрагент);
	ЗапросАналитик.УстановитьПараметр("Партнер",                 Запрос.Параметры.Партнер);
	ЗапросАналитик.УстановитьПараметр("Договор",                 Запрос.Параметры.Договор);
	ЗапросАналитик.УстановитьПараметр("НаправлениеДеятельности", Запрос.Параметры.НаправлениеДеятельности);
	
	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаПартнеровИнициализированы", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСКлиентами";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЭтапыГрафика.НомерСтроки                       КАК НомерСтроки,
	|	КОНЕЦПЕРИОДА(ЭтапыГрафика.ДатаПоГрафику, ДЕНЬ) КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|	
	|	Аналитика.КлючАналитики                        КАК АналитикаУчетаПоПартнерам,
	|	&Договор                                       КАК ЗаказКлиента,
	|	&Валюта                                        КАК Валюта,
	|	
	|	ЭтапыГрафика.СуммаОплаты                       КАК КОплате,
	|	НЕОПРЕДЕЛЕНО                                   КАК КОтгрузке,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПланированиеПоЗаказуКлиента) КАК ХозяйственнаяОперация,
	|	&Период                                        КАК ДатаРегистратора,
	|	КОНЕЦПЕРИОДА(ЭтапыГрафика.ДатаПоГрафику, ДЕНЬ) КАК ДатаПлатежа,
	|	ИСТИНА                                         КАК ИсключатьПриКонтроле
	|	
	|ИЗ
	|	Документ.ГрафикИсполненияДоговора.ЭтапыГрафикаИсполненияДоговора КАК ЭтапыГрафика
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И &Партнер = Аналитика.Партнер
	|		И &Договор = Аналитика.Договор
	|	
	|ГДЕ
	|	ЭтапыГрафика.Ссылка = &Ссылка
	|	И ЭтапыГрафика.СуммаОплаты <> 0
	|	И &ТипДоговора В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.СПокупателем),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.СДавальцем)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЭтапыГрафика.НомерСтроки                       КАК НомерСтроки,
	|	КОНЕЦПЕРИОДА(ЭтапыГрафика.ДатаПоГрафику, ДЕНЬ) КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)         КАК ВидДвижения,
	|	
	|	Аналитика.КлючАналитики                        КАК АналитикаУчетаПоПартнерам,
	|	&Договор                                       КАК ЗаказКлиента,
	|	&Валюта                                        КАК Валюта,
	|	
	|	НЕОПРЕДЕЛЕНО                                   КАК КОплате,
	|	ЭтапыГрафика.СуммаИсполнения                   КАК КОтгрузке,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПланированиеПоЗаказуКлиента) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ИСТИНА                                         КАК ИсключатьПриКонтроле
	|	
	|ИЗ
	|	Документ.ГрафикИсполненияДоговора.ЭтапыГрафикаИсполненияДоговора КАК ЭтапыГрафика
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И &Партнер = Аналитика.Партнер
	|		И &Договор = Аналитика.Договор
	|	
	|ГДЕ
	|	ЭтапыГрафика.Ссылка = &Ссылка
	|	И ЭтапыГрафика.СуммаИсполнения <> 0
	|	И &ТипДоговора В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.СПокупателем),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.СДавальцем)
	|	)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭтапыГрафика.НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСПоставщиками";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЭтапыГрафика.НомерСтроки                       КАК НомерСтроки,
	|	КОНЕЦПЕРИОДА(ЭтапыГрафика.ДатаПоГрафику, ДЕНЬ) КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)         КАК ВидДвижения,
	|	
	|	Аналитика.КлючАналитики                        КАК АналитикаУчетаПоПартнерам,
	|	&Договор                                       КАК ЗаказПоставщику,
	|	&Валюта                                        КАК Валюта,
	|	
	|	ЭтапыГрафика.СуммаОплаты                       КАК КОплате,
	|	НЕОПРЕДЕЛЕНО                                   КАК КПоступлению,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПланированиеПоЗаказуПоставщику) КАК ХозяйственнаяОперация,
	|	&Период                                        КАК ДатаРегистратора,
	|	КОНЕЦПЕРИОДА(ЭтапыГрафика.ДатаПоГрафику, ДЕНЬ) КАК ДатаПлатежа
	|	
	|ИЗ
	|	Документ.ГрафикИсполненияДоговора.ЭтапыГрафикаИсполненияДоговора КАК ЭтапыГрафика
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И &Партнер = Аналитика.Партнер
	|		И &Договор = Аналитика.Договор
	|		И &НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|	
	|ГДЕ
	|	ЭтапыГрафика.Ссылка = &Ссылка
	|	И ЭтапыГрафика.СуммаОплаты <> 0
	|	И &ТипДоговора В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.СПоставщиком),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.Импорт),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.СПереработчиком)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЭтапыГрафика.НомерСтроки                       КАК НомерСтроки,
	|	КОНЕЦПЕРИОДА(ЭтапыГрафика.ДатаПоГрафику, ДЕНЬ) КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|	
	|	Аналитика.КлючАналитики                        КАК АналитикаУчетаПоПартнерам,
	|	&Договор                                       КАК ЗаказПоставщику,
	|	&Валюта                                        КАК Валюта,
	|	
	|	НЕОПРЕДЕЛЕНО                                   КАК КОплате,
	|	ЭтапыГрафика.СуммаИсполнения                   КАК КПоступлению,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПланированиеПоЗаказуПоставщику) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО
	|	
	|ИЗ
	|	Документ.ГрафикИсполненияДоговора.ЭтапыГрафикаИсполненияДоговора КАК ЭтапыГрафика
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		&Организация = Аналитика.Организация
	|		И &Контрагент = Аналитика.Контрагент
	|		И &Партнер = Аналитика.Партнер
	|		И &Договор = Аналитика.Договор
	|		И &НаправлениеДеятельности = Аналитика.НаправлениеДеятельности
	|	
	|ГДЕ
	|	ЭтапыГрафика.Ссылка = &Ссылка
	|	И ЭтапыГрафика.СуммаИсполнения <> 0
	|	И &ТипДоговора В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.СПоставщиком),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.Импорт),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыДоговоров.СПереработчиком)
	|	)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭтапыГрафика.НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли