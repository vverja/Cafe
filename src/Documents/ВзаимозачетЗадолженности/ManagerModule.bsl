#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);
	ВводНаОснованииПереопределяемый.ДобавитьКомандыСоздатьНаОснованииПисмаПоШаблону(КомандыСоздатьНаОсновании);
	
КонецПроцедуры

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

КонецПроцедуры

// Процедура заполняет массивы реквизитов, зависимых от вида операции документа.
//
// Параметры:
//	ВидОперации - ПеречислениеСсылка.ВидыОперацийВзаимозачетаЗадолженности - Выбранный вид операции
//	МассивВсехРеквизитов - Массив - Массив всех имен реквизитов, зависимых от вида операции
//	МассивРеквизитовОперации - Массив - Массив имен реквизитов, используемых в выбранного вида операции
//
Процедура ЗаполнитьИменаРеквизитовПоВидуОперации(ВидОперации, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("ОрганизацияКредитор");
	МассивВсехРеквизитов.Добавить("КонтрагентКредитор");
	МассивВсехРеквизитов.Добавить("ТипДебитора");
	МассивВсехРеквизитов.Добавить("ТипКредитора");
	
	МассивРеквизитовОперации = Новый Массив;
	Если ВидОперации = Перечисления.ВидыОперацийВзаимозачетаЗадолженности.Клиента Тогда
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийВзаимозачетаЗадолженности.МеждуКлиентами Тогда
		МассивРеквизитовОперации.Добавить("КонтрагентКредитор");
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийВзаимозачетаЗадолженности.КлиентаМеждуОрганизациями Тогда
		МассивРеквизитовОперации.Добавить("ОрганизацияКредитор");
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийВзаимозачетаЗадолженности.Поставщика Тогда
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийВзаимозачетаЗадолженности.МеждуПоставщиками Тогда
		МассивРеквизитовОперации.Добавить("КонтрагентКредитор");
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийВзаимозачетаЗадолженности.ПоставщикаМеждуОрганизациями Тогда
		МассивРеквизитовОперации.Добавить("ОрганизацияКредитор");
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийВзаимозачетаЗадолженности.Бартер Тогда
		
	Иначе //произвольный
		МассивРеквизитовОперации.Добавить("КонтрагентКредитор");
		МассивРеквизитовОперации.Добавить("ТипДебитора");
		МассивРеквизитовОперации.Добавить("ТипКредитора");
	КонецЕсли;
	
КонецПроцедуры

// Возвращает представление реквизитов в заивисимости от вида операции взаимозачета.
//
// Параметры:
//	ВидОперации - ПеречислениеСсылка.ВидыОперацийВзаимозачетаЗадолженности - Выбранный вид операции
//
// Возвращаемое значение:
// Структура с ключами
//	Организация
//	ОрганизацияКредитор
//	КонтрагентДебитор
//	КонтрагентКредитор
Функция ПредставлениеРекизитовПоВидуОперации(ВидОперации) Экспорт
	
	СтруктураПредставлений = Новый Структура;
	
	Если ВидОперации = Перечисления.ВидыОперацийВзаимозачетаЗадолженности.КлиентаМеждуОрганизациями Тогда
		
		СтруктураПредставлений.Вставить("Организация",         НСтр("ru='Организация, выполнившая отгрузку';uk='Організація, що виконала відвантаження'"));
		СтруктураПредставлений.Вставить("ОрганизацияКредитор", НСтр("ru='Организация, получившая аванс';uk='Організація, яка отримала аванс'"));
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийВзаимозачетаЗадолженности.ПоставщикаМеждуОрганизациями Тогда
		
		СтруктураПредставлений.Вставить("Организация",         НСтр("ru='Организация, уплатившая аванс';uk='Організація, яка сплатила аванс'"));
		СтруктураПредставлений.Вставить("ОрганизацияКредитор", НСтр("ru='Организация, оформившая поступление';uk='Організація, яка оформила надходження'"));
		
	Иначе
		
		СтруктураПредставлений.Вставить("Организация", НСтр("ru='Организация';uk='Організація'"));
		СтруктураПредставлений.Вставить("ОрганизацияКредитор", НСтр("ru='Организация';uk='Організація'"));
		
	КонецЕсли;
	
	Если ВидОперации = Перечисления.ВидыОперацийВзаимозачетаЗадолженности.Клиента
		Или ВидОперации = Перечисления.ВидыОперацийВзаимозачетаЗадолженности.КлиентаМеждуОрганизациями Тогда
		
		СтруктураПредставлений.Вставить("КонтрагентДебитор", НСтр("ru='Клиент';uk='Клієнт'"));
		СтруктураПредставлений.Вставить("КонтрагентКредитор", НСтр("ru='Клиент';uk='Клієнт'"));
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийВзаимозачетаЗадолженности.МеждуКлиентами Тогда
		
		СтруктураПредставлений.Вставить("КонтрагентДебитор", НСтр("ru='Клиент-дебитор';uk='Клієнт-дебітор'"));
		СтруктураПредставлений.Вставить("КонтрагентКредитор", НСтр("ru='Клиент-кредитор';uk='Клієнт-кредитор'"));
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийВзаимозачетаЗадолженности.Поставщика
		Или ВидОперации = Перечисления.ВидыОперацийВзаимозачетаЗадолженности.ПоставщикаМеждуОрганизациями Тогда
		
		СтруктураПредставлений.Вставить("КонтрагентДебитор", НСтр("ru='Поставщик';uk='Постачальник'"));
		СтруктураПредставлений.Вставить("КонтрагентКредитор", НСтр("ru='Поставщик';uk='Постачальник'"));
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийВзаимозачетаЗадолженности.МеждуПоставщиками Тогда
		
		СтруктураПредставлений.Вставить("КонтрагентДебитор", НСтр("ru='Поставщик-дебитор';uk='Постачальник-дебітор'"));
		СтруктураПредставлений.Вставить("КонтрагентКредитор", НСтр("ru='Поставщик-кредитор';uk='Постачальник-кредитор'"));
		
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийВзаимозачетаЗадолженности.Бартер Тогда
		
		СтруктураПредставлений.Вставить("КонтрагентДебитор", НСтр("ru='Контрагент';uk='Контрагент'"));
		СтруктураПредставлений.Вставить("КонтрагентКредитор", НСтр("ru='Контрагент';uk='Контрагент'"));
		
	Иначе
	
		СтруктураПредставлений.Вставить("КонтрагентДебитор", НСтр("ru='Дебитор';uk='Дебітор'"));
		СтруктураПредставлений.Вставить("КонтрагентКредитор", НСтр("ru='Кредитор';uk='Кредитор'"));
		
	КонецЕсли;
	
	Возврат СтруктураПредставлений;
	
КонецФункции


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаДвиженияКонтрагентКонтрагент(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	МассивТиповОрганизаций = Новый Массив;
	МассивТиповОрганизаций.Добавить(Перечисления.ТипыУчастниковВзаимозачета.ОрганизацияКлиент);
	МассивТиповОрганизаций.Добавить(Перечисления.ТипыУчастниковВзаимозачета.ОрганизацияПоставщик);
	Запрос.УстановитьПараметр("ТипыОрганизаций", МассивТиповОрганизаций);
	
	МассивОпераций = Новый Массив;
	МассивОпераций.Добавить(Перечисления.ВидыОперацийВзаимозачетаЗадолженности.КлиентаМеждуОрганизациями);
	МассивОпераций.Добавить(Перечисления.ВидыОперацийВзаимозачетаЗадолженности.ПоставщикаМеждуОрганизациями);
	Запрос.УстановитьПараметр("ОперацииВзаимозачетаМеждуОрганизациями", МассивОпераций);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата               КАК Период,
	|	ДанныеДокумента.Организация        КАК Организация,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ВидОперации В (&ОперацииВзаимозачетаМеждуОрганизациями)
	|			ТОГДА ДанныеДокумента.ОрганизацияКредитор
	|		ИНАЧЕ ДанныеДокумента.Организация
	|	КОНЕЦ                              КАК ОрганизацияКредитор,
	|	ДанныеДокумента.КонтрагентДебитор  КАК КонтрагентДебитор,
	|	ДанныеДокумента.КонтрагентКредитор КАК КонтрагентКредитор,
	|	ДанныеДокумента.Валюта             КАК Валюта,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ВидОперации В (&ОперацииВзаимозачетаМеждуОрганизациями)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                              КАК РасчетыМеждуОрганизациями,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ТипДебитора В (&ТипыОрганизаций)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                              КАК РасчетыМеждуОрганизациямиДебитор,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ТипКредитора В (&ТипыОрганизаций)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ                              КАК РасчетыМеждуОрганизациямиКредитор,
	|	ДанныеДокумента.Подразделение      КАК Подразделение
	|ИЗ
	|	Документ.ВзаимозачетЗадолженности  КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",                           Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация",                      Реквизиты.Организация);
	Запрос.УстановитьПараметр("ОрганизацияКредитор",              Реквизиты.ОрганизацияКредитор);
	Запрос.УстановитьПараметр("Валюта",                           Реквизиты.Валюта);
	Запрос.УстановитьПараметр("КонтрагентДебитор",                Реквизиты.КонтрагентДебитор);
	Запрос.УстановитьПараметр("КонтрагентКредитор",               Реквизиты.КонтрагентКредитор);
	Запрос.УстановитьПараметр("РасчетыМеждуОрганизациями",        Реквизиты.РасчетыМеждуОрганизациями);
	Запрос.УстановитьПараметр("РасчетыМеждуОрганизациямиДебитор", Реквизиты.РасчетыМеждуОрганизациямиДебитор);
	Запрос.УстановитьПараметр("РасчетыМеждуОрганизациямиКредитор",Реквизиты.РасчетыМеждуОрганизациямиКредитор);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",   Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",       Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("Подразделение",                    Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ОрганизацияПлательщикНДС", НДСОбщегоНазначенияСервер.ОрганизацияКонтрагентПлательщикНДС(Реквизиты.Организация, Реквизиты.Период));

КонецПроцедуры

Процедура СформироватьКлючиАналитикиПоДокументу(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиПоДокументуИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаЗаказы.Заказ,
	|	ТаблицаЗаказы.ТипРасчетов,
	|	ТаблицаЗаказы.Организация
	|ПОМЕСТИТЬ ТаблицаОбъектовРасчетовПредварительная
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДебиторскаяЗадолженность.Заказ КАК Заказ,
	|		ДебиторскаяЗадолженность.ТипРасчетов КАК ТипРасчетов,
	|		ВЫБОР
	|			КОГДА ДебиторскаяЗадолженность.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА &Организация
	|			ИНАЧЕ ДебиторскаяЗадолженность.Организация
	|		КОНЕЦ КАК Организация
	|	ИЗ
	|		Документ.ВзаимозачетЗадолженности.ДебиторскаяЗадолженность КАК ДебиторскаяЗадолженность
	|	ГДЕ
	|		ДебиторскаяЗадолженность.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КредиторскаяЗадолженность.Заказ,
	|		КредиторскаяЗадолженность.ТипРасчетов,
	|		ВЫБОР
	|			КОГДА КредиторскаяЗадолженность.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА &ОрганизацияКредитор
	|			ИНАЧЕ КредиторскаяЗадолженность.Организация
	|		КОНЕЦ КАК Организация
	|	ИЗ
	|		Документ.ВзаимозачетЗадолженности.КредиторскаяЗадолженность КАК КредиторскаяЗадолженность
	|	ГДЕ
	|		КредиторскаяЗадолженность.Ссылка = &Ссылка) КАК ТаблицаЗаказы
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	МетаданныеДокумента = Метаданные.Документы.ВзаимозачетЗадолженности;
	ТипыОбъектовРасчета = МетаданныеДокумента.ТабличныеЧасти.ДебиторскаяЗадолженность.Реквизиты.Заказ.Тип.Типы();
	
	ПервыйПроход = Истина;
	
	Для Каждого ТипОбъекта Из ТипыОбъектовРасчета Цикл
		
		ТекстПодзапроса = "
		|ВЫБРАТЬ
		|	ТаблицаОбъектовРасчетовПредварительная.Заказ КАК Заказ,
		|	%1 КАК Договор,
		|	%2 КАК Организация,
		|	ДанныеДокумента.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
		|	ДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ДанныеДокумента.Подразделение КАК Подразделение
		|%3
		|ИЗ
		|	ТаблицаОбъектовРасчетовПредварительная КАК ТаблицаОбъектовРасчетовПредварительная
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ %4 КАК ДанныеДокумента
		|		ПО ТаблицаОбъектовРасчетовПредварительная.Заказ = ДанныеДокумента.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|";
		
		ТекстПоляДоговора = "ДанныеДокумента.Договор";
		Если ТипОбъекта = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			ТекстПоляДоговора = "ДанныеДокумента.Ссылка";
		КонецЕсли;
		
		ТекстПоляОрганизации = "ДанныеДокумента.Организация";
		Если ТипОбъекта = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
			ТекстПоляОрганизации = 
			"ВЫБОР
			|	КОГДА ТаблицаОбъектовРасчетовПредварительная.ТипРасчетов = &ТипРасчетовСПоставщиком ТОГДА
			|		ДанныеДокумента.ОрганизацияПолучатель
			|	ИНАЧЕ
			|		ДанныеДокумента.Организация
			|КОНЕЦ";
		КонецЕсли;
		
		ТекстПодзапроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ТекстПодзапроса,
			ТекстПоляДоговора,
			ТекстПоляОрганизации,
			?(ПервыйПроход, "ПОМЕСТИТЬ ТаблицаОбъектовРасчетовПоДокументам", ""),
			Метаданные.НайтиПоТипу(ТипОбъекта).ПолноеИмя()
		);
		
		ПервыйПроход = Ложь;
		ТекстЗапроса = ТекстЗапроса + ТекстПодзапроса;
		
	КонецЦикла;
	
	ТекстЗапроса = Лев(ТекстЗапроса, СтрДлина(ТекстЗапроса) - 15);
	ТекстЗапроса = ТекстЗапроса + ";";
	
	ТекстЗапроса = ТекстЗапроса + "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаЗаказы.Заказ                                           КАК Заказ,
    |	ЕСТЬNULL(ТаблицаОбъектовРасчетовПоДокументам.Организация, ТаблицаЗаказы.Организация) КАК Организация,
	|	ЕСТЬNULL(ТаблицаОбъектовРасчетовПоДокументам.Договор,
	|		ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))   КАК Договор,
	|	ЕСТЬNULL(ТаблицаОбъектовРасчетовПоДокументам.Подразделение,
	|		&Подразделение)                                           КАК Подразделение,
	|	ТаблицаОбъектовРасчетовПоДокументам.ГруппаФинансовогоУчета    КАК ГруппаФинансовогоУчета,
	|	ЕСТЬNULL(ТаблицаОбъектовРасчетовПоДокументам.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))   КАК НаправлениеДеятельности
	|
	|ПОМЕСТИТЬ ТаблицаОбъектовРасчетов
	|ИЗ 
	|	ТаблицаОбъектовРасчетовПредварительная КАК ТаблицаЗаказы
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОбъектовРасчетовПоДокументам КАК ТаблицаОбъектовРасчетовПоДокументам
	|	ПО (ТаблицаЗаказы.Заказ = ТаблицаОбъектовРасчетовПоДокументам.Заказ)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабличныеЧасти.Организация КАК Организация,
	|	ТабличныеЧасти.Партнер     КАК Партнер,
	|	ТабличныеЧасти.Контрагент  КАК Контрагент,
	|	ТабличныеЧасти.Договор     КАК Договор,
	|	ТабличныеЧасти.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ (
	|	ВЫБРАТЬ // аналитика {Организация, Дебитор-партнер, Дебитор-контрагент}
	|		ТаблицаОбъектовРасчетов.Организация КАК Организация,
	|		(ВЫБОР КОГДА &РасчетыМеждуОрганизациямиДебитор ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ ДебиторскаяЗадолженность.Партнер КОНЕЦ) КАК Партнер,
	|		&КонтрагентДебитор КАК Контрагент,
	|		ТаблицаОбъектовРасчетов.Договор КАК Договор,
	|		ТаблицаОбъектовРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности
	|	ИЗ
	|		Документ.ВзаимозачетЗадолженности.ДебиторскаяЗадолженность КАК ДебиторскаяЗадолженность
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|			ПО ДебиторскаяЗадолженность.Заказ = ТаблицаОбъектовРасчетов.Заказ
	|	ГДЕ
	|		ДебиторскаяЗадолженность.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ // аналитика {Организация, Кредитор-партнер, Кредитор-контрагент}
	|		ТаблицаОбъектовРасчетов.Организация КАК Организация,
	|		(ВЫБОР КОГДА &РасчетыМеждуОрганизациямиКредитор ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ КредиторскаяЗадолженность.Партнер КОНЕЦ) КАК Партнер,
	|		&КонтрагентКредитор КАК Контрагент,
	|		ТаблицаОбъектовРасчетов.Договор КАК Договор,
	|		ТаблицаОбъектовРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности
	|	ИЗ
	|		Документ.ВзаимозачетЗадолженности.КредиторскаяЗадолженность КАК КредиторскаяЗадолженность
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|			ПО КредиторскаяЗадолженность.Заказ = ТаблицаОбъектовРасчетов.Заказ
	|	ГДЕ
	|		КредиторскаяЗадолженность.Ссылка = &Ссылка
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ // аналитика {Дебитор-организация, Кредитор-партнер, Кредитор-контрагент}
	|		&КонтрагентДебитор КАК Организация,
	|		(ВЫБОР КОГДА &РасчетыМеждуОрганизациямиКредитор ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ Дт_Кт.Партнер КОНЕЦ) КАК Партнер,
	|		&КонтрагентКредитор КАК Контрагент,
	|		ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности
	|	ИЗ
	|		Документ.ВзаимозачетЗадолженности.КредиторскаяЗадолженность КАК Дт_Кт
	|	ГДЕ
	|		Дт_Кт.Ссылка=&Ссылка И &РасчетыМеждуОрганизациямиДебитор И &КонтрагентКредитор<>&КонтрагентДебитор
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ // аналитика {Кредитор-организация, Дебитор-партнер, Дебитор-контрагент}
	|		&КонтрагентКредитор КАК Организация,
	|		(ВЫБОР КОГДА &РасчетыМеждуОрганизациямиДебитор ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ Кт_Дт.Партнер КОНЕЦ) КАК Партнер,
	|		&КонтрагентДебитор КАК Контрагент,
	|		ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности
	|	ИЗ
	|		Документ.ВзаимозачетЗадолженности.ДебиторскаяЗадолженность КАК Кт_Дт
	|	ГДЕ
	|		Кт_Дт.Ссылка=&Ссылка И &РасчетыМеждуОрганизациямиКредитор И &КонтрагентКредитор<>&КонтрагентДебитор
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ // аналитика {Дебитор-организация, Предприятие-партнер, Организация}
	|		&КонтрагентДебитор КАК Организация,
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|		ТаблицаОбъектовРасчетов.Организация КАК Контрагент,
	|		ТаблицаОбъектовРасчетов.Договор КАК Договор,
	|		ТаблицаОбъектовРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности
	|	ИЗ
	|		ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	ГДЕ
	|		&РасчетыМеждуОрганизациямиДебитор
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ // аналитика {Кредитор-организация, Предприятие-партнер, Организация}
	|		&КонтрагентКредитор КАК Организация,
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|		ТаблицаОбъектовРасчетов.Организация КАК Контрагент,
	|		ТаблицаОбъектовРасчетов.Договор КАК Договор,
	|		ТаблицаОбъектовРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности
	|	ИЗ
	|		ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|	ГДЕ
	|		&РасчетыМеждуОрганизациямиКредитор
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ // аналитика {Организация, Предприятие-партнер, Организация-кредитор}
	|		ТаблицаОбъектовРасчетов.Организация КАК Организация,
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|		&ОрганизацияКредитор КАК Контрагент,
	|		ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности
	|	ИЗ
	|		Документ.ВзаимозачетЗадолженности.ДебиторскаяЗадолженность КАК Дт_Орг
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|			ПО Дт_Орг.Заказ = ТаблицаОбъектовРасчетов.Заказ
	|	ГДЕ
	|		&РасчетыМеждуОрганизациями
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ // аналитика {Организация-кредитор, Предприятие-партнер, Организация}
	|		&ОрганизацияКредитор КАК Организация,
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|		ТаблицаОбъектовРасчетов.Организация КАК Контрагент,
	|		ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности
	|	ИЗ
	|		Документ.ВзаимозачетЗадолженности.ДебиторскаяЗадолженность КАК Дт_Орг
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|			ПО Дт_Орг.Заказ = ТаблицаОбъектовРасчетов.Заказ
	|	ГДЕ
	|		&РасчетыМеждуОрганизациями
	|	
	|	) КАК ТабличныеЧасти
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам  КАК РегистрАналитикаУчетаПоПартнерам
	|	ПО
	|		ТабличныеЧасти.Организация = РегистрАналитикаУчетаПоПартнерам.Организация
	|		И ТабличныеЧасти.Партнер = РегистрАналитикаУчетаПоПартнерам.Партнер
	|		И ТабличныеЧасти.Контрагент = РегистрАналитикаУчетаПоПартнерам.Контрагент
	|		И ТабличныеЧасти.Договор = РегистрАналитикаУчетаПоПартнерам.Договор
	|		И ТабличныеЧасти.НаправлениеДеятельности = РегистрАналитикаУчетаПоПартнерам.НаправлениеДеятельности
	|ГДЕ
	|	РегистрАналитикаУчетаПоПартнерам.КлючАналитики ЕСТЬ NULL
	|";
	
	ЗапросАналитик = Новый Запрос(ТекстЗапроса);
	ЗапросАналитик.УстановитьПараметр("Ссылка",                            Запрос.Параметры.Ссылка);
	ЗапросАналитик.УстановитьПараметр("Организация",                       Запрос.Параметры.Организация);
	ЗапросАналитик.УстановитьПараметр("ОрганизацияКредитор",               Запрос.Параметры.ОрганизацияКредитор);
	ЗапросАналитик.УстановитьПараметр("Подразделение",                     Запрос.Параметры.Подразделение);
	ЗапросАналитик.УстановитьПараметр("КонтрагентДебитор",                 Запрос.Параметры.КонтрагентДебитор);
	ЗапросАналитик.УстановитьПараметр("КонтрагентКредитор",                Запрос.Параметры.КонтрагентКредитор);
	ЗапросАналитик.УстановитьПараметр("РасчетыМеждуОрганизациями",         Запрос.Параметры.РасчетыМеждуОрганизациями);
	ЗапросАналитик.УстановитьПараметр("РасчетыМеждуОрганизациямиДебитор",  Запрос.Параметры.РасчетыМеждуОрганизациямиДебитор);
	ЗапросАналитик.УстановитьПараметр("РасчетыМеждуОрганизациямиКредитор", Запрос.Параметры.РасчетыМеждуОрганизациямиКредитор);
	ЗапросАналитик.УстановитьПараметр("ТипРасчетовСПоставщиком", Перечисления.ТипыРасчетовСПартнерами.РасчетыСПоставщиком);
	ЗапросАналитик.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	РезультатЗапроса = ЗапросАналитик.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиПоДокументуИнициализированы", Истина);
	
КонецПроцедуры

Процедура УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуУпр")
		И Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуРегл") Тогда
		Возврат;
	КонецЕсли;
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Запрос.Параметры.Валюта,
	                                                                         , // ВалютаВзаиморасчетов
	                                                                         Запрос.Параметры.Период);
	
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр",           Коэффициенты.КоэффициентПересчетаВВалютуУпр);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл",          Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	
КонецПроцедуры

Процедура ИнициализироватьВтДебиторскаяЗадолженность(Запрос)
	
	Если Запрос.Параметры.Свойство("ВтДебиторскаяЗадолженностьИнициализирована") Тогда
		Возврат;
	КонецЕсли;
	
	СформироватьКлючиАналитикиПоДокументу(Запрос);
	
	ЗапросВтДебиторскаяЗадолженность = Новый Запрос;
	ЗапросВтДебиторскаяЗадолженность.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросВтДебиторскаяЗадолженность.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросВтДебиторскаяЗадолженность.Текст = 
	"ВЫБРАТЬ
	|	ДебиторскаяЗадолженность.ТипРасчетов            КАК ТипРасчетов,
	|	ДебиторскаяЗадолженность.Заказ                  КАК Заказ,
	|	ТаблицаОбъектовРасчетов.Договор                 КАК Договор,
	|	ТаблицаОбъектовРасчетов.ГруппаФинансовогоУчета  КАК ГруппаФинансовогоУчета,
	|	ТаблицаОбъектовРасчетов.Организация             КАК Организация,
	|	ТаблицаОбъектовРасчетов.Подразделение           КАК Подразделение,
	|	ДебиторскаяЗадолженность.Партнер                КАК Партнер,
	|	ДебиторскаяЗадолженность.Сумма                  КАК Сумма,
	|	ДебиторскаяЗадолженность.СуммаВзаиморасчетов    КАК СуммаВзаиморасчетов,
	|	ДебиторскаяЗадолженность.ВалютаВзаиморасчетов   КАК ВалютаВзаиморасчетов,
	|	ДебиторскаяЗадолженность.НомерСтроки            КАК НомерСтроки,
	|	ТаблицаОбъектовРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности
	|
	|ПОМЕСТИТЬ ВтДебиторскаяЗадолженность
	|ИЗ
	|	Документ.ВзаимозачетЗадолженности.ДебиторскаяЗадолженность КАК ДебиторскаяЗадолженность
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|		ПО ДебиторскаяЗадолженность.Заказ = ТаблицаОбъектовРасчетов.Заказ
	|ГДЕ
	|	ДебиторскаяЗадолженность.Ссылка = &Ссылка";
	
	Результат = ЗапросВтДебиторскаяЗадолженность.ВыполнитьПакет();
	
	Запрос.УстановитьПараметр("ВтДебиторскаяЗадолженностьИнициализирована", Истина);

КонецПроцедуры

Процедура ИнициализироватьВтКредиторскаяЗадолженность(Запрос)
	
	Если Запрос.Параметры.Свойство("ВтКредиторскаяЗадолженностьИнициализирована") Тогда
		Возврат;
	КонецЕсли;
	
	СформироватьКлючиАналитикиПоДокументу(Запрос);
	
	ЗапросВтКредиторскаяЗадолженность = Новый Запрос;
	ЗапросВтКредиторскаяЗадолженность.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросВтКредиторскаяЗадолженность.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросВтКредиторскаяЗадолженность.Текст = 
	"ВЫБРАТЬ
	|	КредиторскаяЗадолженность.ТипРасчетов          КАК ТипРасчетов,
	|	КредиторскаяЗадолженность.Заказ                КАК Заказ,
	|	ТаблицаОбъектовРасчетов.Договор                КАК Договор,
	|	ТаблицаОбъектовРасчетов.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ТаблицаОбъектовРасчетов.Организация            КАК Организация,
	|	ТаблицаОбъектовРасчетов.Подразделение          КАК Подразделение,
	|	КредиторскаяЗадолженность.Партнер              КАК Партнер,
	|	КредиторскаяЗадолженность.Сумма                КАК Сумма,
	|	КредиторскаяЗадолженность.СуммаВзаиморасчетов  КАК СуммаВзаиморасчетов,
	|	КредиторскаяЗадолженность.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	КредиторскаяЗадолженность.НомерСтроки          КАК НомерСтроки,
	|   ТаблицаОбъектовРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельности
	|
	|ПОМЕСТИТЬ ВтКредиторскаяЗадолженность
	|ИЗ
	|	Документ.ВзаимозачетЗадолженности.КредиторскаяЗадолженность КАК КредиторскаяЗадолженность
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОбъектовРасчетов КАК ТаблицаОбъектовРасчетов
	|		ПО КредиторскаяЗадолженность.Заказ = ТаблицаОбъектовРасчетов.Заказ
	|ГДЕ
	|	КредиторскаяЗадолженность.Ссылка = &Ссылка";
	
	Результат = ЗапросВтКредиторскаяЗадолженность.ВыполнитьПакет();
	
	Запрос.УстановитьПараметр("ВтКредиторскаяЗадолженностьИнициализирована", Истина);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСКлиентами";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьВтДебиторскаяЗадолженность(Запрос);
	ИнициализироватьВтКредиторскаяЗадолженность(Запрос);
	СформироватьКлючиАналитикиПоДокументу(Запрос);
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                        КАК Период,
	|	&Период                                        КАК ДатаРегистратора,
	|	ТабличнаяЧасть.ВидДвижения                     КАК ВидДвижения,
	|	
	|	// Измерения
	|	РегистрАналитикаУчетаПоПартнерам.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	ТабличнаяЧасть.Заказ                           КАК ЗаказКлиента,
	|	ТабличнаяЧасть.ГруппаФинансовогоУчета          КАК ГруппаФинансовогоУчета,
	|	ТабличнаяЧасть.ВалютаВзаиморасчетов            КАК Валюта,
	|	
	|	// Ресурсы
	|	// Сумма в валюте взаиморассчетов.
	|	ТабличнаяЧасть.СуммаВзаиморасчетов             КАК Сумма,
	|	ТабличнаяЧасть.СуммаВзаиморасчетов             КАК КОплате,
	|	ВЫБОР 
	|		КОГДА ТабличнаяЧасть.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета ТОГДА
	|			ТабличнаяЧасть.СуммаВзаиморасчетов
	|		ИНАЧЕ
	|			ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	КОНЕЦ                                          КАК СуммаРегл,
	|	ВЫБОР 
	|		КОГДА ТабличнаяЧасть.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета ТОГДА
	|			ТабличнаяЧасть.СуммаВзаиморасчетов
	|		ИНАЧЕ
	|			ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	КОНЕЦ                                          КАК СуммаУпр,
	|	
	|	// Реквизиты
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Взаимозачет) КАК ФормаОплаты,
	|	ТабличнаяЧасть.Организация
	|	
	|ИЗ (
	// расчеты по основной организации
	|	ВЫБРАТЬ // дебиторская задолженность дебитора-клиента перед организацией считается оплаченной
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)            КАК ВидДвижения,
	|		ДебиторскаяЗадолженность.Организация              КАК Организация,
	|		(ВЫБОР КОГДА &РасчетыМеждуОрганизациямиДебитор ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ ДебиторскаяЗадолженность.Партнер КОНЕЦ) КАК Партнер,
	|		&КонтрагентДебитор                                КАК Контрагент,
	|		ДебиторскаяЗадолженность.Заказ                    КАК Заказ,
	|		ДебиторскаяЗадолженность.Договор                  КАК Договор,
	|		ДебиторскаяЗадолженность.ГруппаФинансовогоУчета   КАК ГруппаФинансовогоУчета,
	|		ДебиторскаяЗадолженность.ВалютаВзаиморасчетов     КАК ВалютаВзаиморасчетов,
	|		ДебиторскаяЗадолженность.Сумма                    КАК Сумма,
	|		ДебиторскаяЗадолженность.СуммаВзаиморасчетов      КАК СуммаВзаиморасчетов,
	|		ДебиторскаяЗадолженность.НомерСтроки              КАК НомерСтроки,
	|		ДебиторскаяЗадолженность.НаправлениеДеятельности  КАК НаправлениеДеятельности
	|	ИЗ
	|		ВтДебиторскаяЗадолженность КАК ДебиторскаяЗадолженность
	|	ГДЕ
	|		ДебиторскаяЗадолженность.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ // кредиторская задолженность организации перед кредитором-клиентом сторнируется
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)           КАК ВидДвижения,
	|		КредиторскаяЗадолженность.Организация            КАК Организация,
	|		(ВЫБОР КОГДА &РасчетыМеждуОрганизациямиКредитор ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ КредиторскаяЗадолженность.Партнер КОНЕЦ) КАК Партнер,
	|		&КонтрагентКредитор                              КАК Контрагент,
	|		КредиторскаяЗадолженность.Заказ                  КАК Заказ,
	|		КредиторскаяЗадолженность.Договор                КАК Договор,
	|		КредиторскаяЗадолженность.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|		КредиторскаяЗадолженность.ВалютаВзаиморасчетов   КАК ВалютаВзаиморасчетов,
	|		-КредиторскаяЗадолженность.Сумма                  КАК Сумма,
	|		-КредиторскаяЗадолженность.СуммаВзаиморасчетов    КАК СуммаВзаиморасчетов,
	|		КредиторскаяЗадолженность.НомерСтроки            КАК НомерСтроки,
	|		КредиторскаяЗадолженность.НаправлениеДеятельности КАК НаправлениеДеятельности
	|	ИЗ
	|		ВтКредиторскаяЗадолженность КАК КредиторскаяЗадолженность
	|	ГДЕ
	|		КредиторскаяЗадолженность.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|
	// (РасчетыСКлиентом, Кредитор-Организация)
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ // перенос дебиторки по клиентам у организации на дебиторку по клиентам у кредитора-организации
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|		&КонтрагентКредитор                    КАК Организация,
	|		(ВЫБОР КОГДА &РасчетыМеждуОрганизациямиДебитор ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ Кт_Дт.Партнер КОНЕЦ) КАК Партнер,
	|		&КонтрагентДебитор                     КАК Контрагент,
	|		Неопределено                           КАК Заказ,
	|		ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|		НЕОПРЕДЕЛЕНО                           КАК ГруппаФинансовогоУчета,
	|		Кт_Дт.ВалютаВзаиморасчетов             КАК ВалютаВзаиморасчетов,
	|		-СУММА(Кт_Дт.Сумма)                     КАК Сумма,
	|		-СУММА(Кт_Дт.СуммаВзаиморасчетов)       КАК СуммаВзаиморасчетов,
	|		МАКСИМУМ(Кт_Дт.НомерСтроки)            КАК НомерСтроки,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности
	|	ИЗ 
	|		ВтДебиторскаяЗадолженность КАК Кт_Дт
	|	ГДЕ
	|		&РасчетыМеждуОрганизациямиКредитор И &КонтрагентКредитор<>&КонтрагентДебитор
	|		И Кт_Дт.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|	СГРУППИРОВАТЬ ПО
	|		(ВЫБОР КОГДА &РасчетыМеждуОрганизациямиДебитор ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ Кт_Дт.Партнер КОНЕЦ), Кт_Дт.ВалютаВзаиморасчетов
	|
	// (РасчетыСПоставщиком, Дебитор-Организация)
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ // сторно кредиторки по клиенту у дебитора-организации перед организацией
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)        КАК ВидДвижения,
	|		&КонтрагентДебитор                            КАК Организация,
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|		Дт_Орг.Организация                            КАК Контрагент,
	|		Дт_Орг.Заказ                                  КАК Заказ,
	|		Дт_Орг.Договор                                КАК Договор,
	|		Дт_Орг.ГруппаФинансовогоУчета                 КАК ГруппаФинансовогоУчета,
	|		Дт_Орг.ВалютаВзаиморасчетов                   КАК ВалютаВзаиморасчетов,
	|		-Дт_Орг.Сумма                                  КАК Сумма,
	|		-Дт_Орг.СуммаВзаиморасчетов                    КАК СуммаВзаиморасчетов,
	|		Дт_Орг.НомерСтроки                            КАК НомерСтроки,
	|		Дт_Орг.НаправлениеДеятельности				  КАК НаправлениеДеятельности
	|	ИЗ 
	|		ВтДебиторскаяЗадолженность КАК Дт_Орг
	|	ГДЕ
	|		&РасчетыМеждуОрганизациямиДебитор
	|		И Дт_Орг.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|
	// (РасчетыСПоставщиком, Кредитор-Организация)
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ // зачет (оплата) дебиторской задолженности организации перед кредитором-организацией
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)        КАК ВидДвижения,
	|		&КонтрагентКредитор                           КАК Организация,
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|		Кт_Орг.Организация                            КАК Контрагент,
	|		Кт_Орг.Заказ                                  КАК Заказ,
	|		Кт_Орг.Договор                                КАК Договор,
	|		Кт_Орг.ГруппаФинансовогоУчета                 КАК ГруппаФинансовогоУчета,
	|		Кт_Орг.ВалютаВзаиморасчетов                   КАК ВалютаВзаиморасчетов,
	|		Кт_Орг.Сумма                                  КАК Сумма,
	|		Кт_Орг.СуммаВзаиморасчетов                    КАК СуммаВзаиморасчетов,
	|		Кт_Орг.НомерСтроки                            КАК НомерСтроки,
	|       Кт_Орг.НаправлениеДеятельности                КАК НаправлениеДеятельности
	|	ИЗ 
	|		ВтКредиторскаяЗадолженность КАК Кт_Орг
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОбъектовРасчетов КАК ТаблицаЗаказы
	|			ПО Кт_Орг.Заказ = ТаблицаЗаказы.Заказ
	|	ГДЕ
	|		&РасчетыМеждуОрганизациямиКредитор
	|		И Кт_Орг.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // добавление дебиторской задолженности по клиентам у организации-кредитора
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|		&КонтрагентКредитор                    КАК Организация,
	|		(ВЫБОР КОГДА &РасчетыМеждуОрганизациямиДебитор ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ Кт_Дт.Партнер КОНЕЦ) КАК Партнер,
	|		&КонтрагентДебитор                     КАК Контрагент,
	|		Неопределено                           КАК Заказ,
	|		ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|		Неопределено                           КАК ГруппаФинансовогоУчета,
	|		Кт_Дт.ВалютаВзаиморасчетов             КАК ВалютаВзаиморасчетов,
	|		-СУММА(Кт_Дт.Сумма)                     КАК Сумма,
	|		-СУММА(Кт_Дт.СуммаВзаиморасчетов)       КАК СуммаВзаиморасчетов,
	|		МАКСИМУМ(Кт_Дт.НомерСтроки)            КАК НомерСтроки,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности
	|	ИЗ 
	|		ВтДебиторскаяЗадолженность КАК Кт_Дт
	|	ГДЕ
	|		&РасчетыМеждуОрганизациямиКредитор И &КонтрагентКредитор<>&КонтрагентДебитор
	|		И Кт_Дт.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|	СГРУППИРОВАТЬ ПО
	|		(ВЫБОР КОГДА &РасчетыМеждуОрганизациямиДебитор ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ Кт_Дт.Партнер КОНЕЦ), Кт_Дт.ВалютаВзаиморасчетов
	|	
	// (МеждуОрганизациями)
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ // перенос дебиторки по клиентам у организации на организацию-кредитора
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)        КАК ВидДвижения,
	|		Дт_Орг.Организация                            КАК Организация,
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|		&ОрганизацияКредитор                          КАК Контрагент,
	|		Неопределено                                  КАК Заказ,
	|		ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|		Неопределено                                  КАК ГруппаФинансовогоУчета,
	|		Дт_Орг.ВалютаВзаиморасчетов                   КАК ВалютаВзаиморасчетов,
	|		-СУММА(Дт_Орг.Сумма)                           КАК Сумма,
	|		-СУММА(Дт_Орг.СуммаВзаиморасчетов)             КАК СуммаВзаиморасчетов,
	|		МАКСИМУМ(Дт_Орг.НомерСтроки)                  КАК НомерСтроки,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности
	|	ИЗ 
	|		ВтДебиторскаяЗадолженность КАК Дт_Орг
	|	ГДЕ
	|		&РасчетыМеждуОрганизациями
	|	СГРУППИРОВАТЬ ПО
	|		Дт_Орг.Организация,
	|		Дт_Орг.ВалютаВзаиморасчетов
	|	) КАК ТабличнаяЧасть
	|	
	|	// Определим Ключи аналитики
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|	ПО
	|		  ТабличнаяЧасть.Организация = РегистрАналитикаУчетаПоПартнерам.Организация
	|		И ТабличнаяЧасть.Партнер     = РегистрАналитикаУчетаПоПартнерам.Партнер
	|		И ТабличнаяЧасть.Контрагент  = РегистрАналитикаУчетаПоПартнерам.Контрагент
	|		И ТабличнаяЧасть.Договор     = РегистрАналитикаУчетаПоПартнерам.Договор
	|		И ТабличнаяЧасть.НаправлениеДеятельности = РегистрАналитикаУчетаПоПартнерам.НаправлениеДеятельности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(&Период) КАК КурсыВалют
	|	ПО
	|		КурсыВалют.Валюта = ТабличнаяЧасть.ВалютаВзаиморасчетов
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ВидДвижения,
	|	ТабличнаяЧасть.НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСПоставщиками";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ИнициализироватьВтДебиторскаяЗадолженность(Запрос);
	ИнициализироватьВтКредиторскаяЗадолженность(Запрос);
	СформироватьКлючиАналитикиПоДокументу(Запрос);
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                        КАК Период,
	|	&Период                                        КАК ДатаРегистратора,
	|	ТабличнаяЧасть.ВидДвижения                     КАК ВидДвижения,
	|	
	|	// Измерения
	|	РегистрАналитикаУчетаПоПартнерам.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	ТабличнаяЧасть.Заказ                           КАК ЗаказПоставщику,
	|	ТабличнаяЧасть.ВалютаВзаиморасчетов            КАК Валюта,
	|	
	|	// Ресурсы
	|	// Сумма в валюте взаиморассчетов
	|	ТабличнаяЧасть.СуммаВзаиморасчетов             КАК Сумма,
	|	ТабличнаяЧасть.СуммаВзаиморасчетов             КАК КОплате,
	|	ВЫБОР 
	|		КОГДА ТабличнаяЧасть.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета ТОГДА
	|			ТабличнаяЧасть.СуммаВзаиморасчетов
	|		ИНАЧЕ
	|			ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	КОНЕЦ                                          КАК СуммаРегл,
	|	ВЫБОР 
	|		КОГДА ТабличнаяЧасть.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета ТОГДА
	|			ТабличнаяЧасть.СуммаВзаиморасчетов
	|		ИНАЧЕ
	|			ВЫРАЗИТЬ(ТабличнаяЧасть.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	КОНЕЦ                                          КАК СуммаУпр,
	|	
	|	// Реквизиты
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Взаимозачет) КАК ФормаОплаты,
	|	ТабличнаяЧасть.Организация                     КАК Организация
	|	
	|ИЗ
	// расчеты по основной организации
	|	(ВЫБРАТЬ // дебиторская задолженность дебитора-поставщика перед организацией сторнируется
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|		ДебиторскаяЗадолженность.Организация          КАК Организация,
	|		(ВЫБОР КОГДА &РасчетыМеждуОрганизациямиДебитор ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ ДебиторскаяЗадолженность.Партнер КОНЕЦ) КАК Партнер,
	|		&КонтрагентДебитор                            КАК Контрагент,
	|		ДебиторскаяЗадолженность.Заказ                КАК Заказ,
	|		ДебиторскаяЗадолженность.Договор              КАК Договор,
	|		ДебиторскаяЗадолженность.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|		-ДебиторскаяЗадолженность.Сумма                КАК Сумма,
	|		-ДебиторскаяЗадолженность.СуммаВзаиморасчетов  КАК СуммаВзаиморасчетов,
	|		ДебиторскаяЗадолженность.НомерСтроки          КАК НомерСтроки,
	|		ДебиторскаяЗадолженность.НаправлениеДеятельности КАК НаправлениеДеятельности 
	|	ИЗ
	|		ВтДебиторскаяЗадолженность КАК ДебиторскаяЗадолженность
	|	ГДЕ
	|		ДебиторскаяЗадолженность.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ // кредиторская задолженность организации перед кредитором-поставщиком считается оплаченной
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|		КредиторскаяЗадолженность.Организация          КАК Организация,
	|		(ВЫБОР КОГДА &РасчетыМеждуОрганизациямиКредитор ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ КредиторскаяЗадолженность.Партнер КОНЕЦ) КАК Партнер,
	|		&КонтрагентКредитор                            КАК Контрагент,
	|		КредиторскаяЗадолженность.Заказ                КАК Заказ,
	|		КредиторскаяЗадолженность.Договор              КАК Договор,
	|		КредиторскаяЗадолженность.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|		КредиторскаяЗадолженность.Сумма                КАК Сумма,
	|		КредиторскаяЗадолженность.СуммаВзаиморасчетов  КАК СуммаВзаиморасчетов,
	|		КредиторскаяЗадолженность.НомерСтроки          КАК НомерСтроки,
	|		КредиторскаяЗадолженность.НаправлениеДеятельности КАК НаправлениеДеятельности 
	|	ИЗ
	|		ВтКредиторскаяЗадолженность КАК КредиторскаяЗадолженность
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОбъектовРасчетов КАК ТаблицаЗаказы
	|			ПО КредиторскаяЗадолженность.Заказ = ТаблицаЗаказы.Заказ
	|	ГДЕ
	|		КредиторскаяЗадолженность.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|
	// (РасчетыСКлиентом, Дебитор-Организация)
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // зачет (оплата) кредиторской задолженности дебитора-организации перед организацией 
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|		&КонтрагентДебитор                            КАК Организация,
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|		Дт_Орг.Организация                            КАК Контрагент,
	|		Дт_Орг.Заказ                                  КАК Заказ,
	|		Дт_Орг.Договор                                КАК Договор,
	|		Дт_Орг.ВалютаВзаиморасчетов                   КАК ВалютаВзаиморасчетов,
	|		Дт_Орг.Сумма                                  КАК Сумма,
	|		Дт_Орг.СуммаВзаиморасчетов                    КАК СуммаВзаиморасчетов,
	|		Дт_Орг.НомерСтроки                            КАК НомерСтроки,
	|		Дт_Орг.НаправлениеДеятельности				  КАК НаправлениеДеятельности
	|	ИЗ 
	|		ВтДебиторскаяЗадолженность КАК Дт_Орг
	|	ГДЕ
	|		&РасчетыМеждуОрганизациямиДебитор
	|		И Дт_Орг.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // перенос кредиторки по клиенту у дебитора-организации на кредиторку поставщику перед кредитором-клиентом
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                 КАК ВидДвижения,
	|		&КонтрагентДебитор                                     КАК Организация,
	|		(ВЫБОР КОГДА &РасчетыМеждуОрганизациямиКредитор ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ Дт_Кт.Партнер КОНЕЦ) КАК Партнер,
	|		&КонтрагентКредитор                                    КАК Контрагент,
	|		Неопределено                                           КАК Заказ,
	|		ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|		Дт_Кт.ВалютаВзаиморасчетов                             КАК ВалютаВзаиморасчетов,
	|		-СУММА(Дт_Кт.Сумма)                                     КАК Сумма,
	|		-СУММА(Дт_Кт.СуммаВзаиморасчетов)                       КАК СуммаВзаиморасчетов,
	|		МАКСИМУМ(Дт_Кт.НомерСтроки)                            КАК НомерСтроки,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности
	|	ИЗ
	|		ВтКредиторскаяЗадолженность КАК Дт_Кт
	|	ГДЕ
	|		&РасчетыМеждуОрганизациямиДебитор И &КонтрагентКредитор<>&КонтрагентДебитор
	|		И Дт_Кт.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|	СГРУППИРОВАТЬ ПО
	|		(ВЫБОР КОГДА &РасчетыМеждуОрганизациямиКредитор ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ Дт_Кт.Партнер КОНЕЦ), Дт_Кт.ВалютаВзаиморасчетов
	|
	// (РасчетыСКлиентом, Кредитор-Организация)
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // сторно дебиторки по поставщику у кредитора-организации
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|		&КонтрагентКредитор                           КАК Организация,
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|		Кт_Орг.Организация                            КАК Контрагент,
	|		Кт_Орг.Заказ                                  КАК Заказ,
	|		Кт_Орг.Договор                                КАК Договор,
	|		Кт_Орг.ВалютаВзаиморасчетов                   КАК ВалютаВзаиморасчетов,
	|		-Кт_Орг.Сумма                                  КАК Сумма,
	|		-Кт_Орг.СуммаВзаиморасчетов                    КАК СуммаВзаиморасчетов,
	|		Кт_Орг.НомерСтроки                            КАК НомерСтроки,
	|		Кт_Орг.НаправлениеДеятельности				  КАК НаправлениеДеятельности
	|	ИЗ
	|		ВтКредиторскаяЗадолженность КАК Кт_Орг
	|	ГДЕ
	|		&РасчетыМеждуОрганизациямиКредитор
	|		И Кт_Орг.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|		
	// (РасчетыСПоставщиком, Дебитор-Организация)
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // перенос кредиторки по поставщику у дебитора-организации на кредиторку по поставщику перед кредитором-поставщиком
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                 КАК ВидДвижения,
	|		&КонтрагентДебитор                                     КАК Организация,
	|		(ВЫБОР КОГДА &РасчетыМеждуОрганизациямиКредитор ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ Дт_Кт.Партнер КОНЕЦ) КАК Партнер,
	|		&КонтрагентКредитор                                    КАК Контрагент,
	|		Неопределено                                           КАК Заказ,
	|		ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|		Дт_Кт.ВалютаВзаиморасчетов                             КАК ВалютаВзаиморасчетов,
	|		-СУММА(Дт_Кт.Сумма)                                     КАК Сумма,
	|		-СУММА(Дт_Кт.СуммаВзаиморасчетов)                       КАК СуммаВзаиморасчетов,
	|		МАКСИМУМ(Дт_Кт.НомерСтроки)                            КАК НомерСтроки,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности
	|	ИЗ
	|		ВтКредиторскаяЗадолженность КАК Дт_Кт
	|	ГДЕ
	|		&РасчетыМеждуОрганизациямиДебитор И &КонтрагентКредитор<>&КонтрагентДебитор
	|		И Дт_Кт.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|	СГРУППИРОВАТЬ ПО
	|		(ВЫБОР КОГДА &РасчетыМеждуОрганизациямиКредитор ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ Дт_Кт.Партнер КОНЕЦ), Дт_Кт.ВалютаВзаиморасчетов
	|
	// (МеждуОрганизациями)
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // перенос дебиторки по клиентам у организации на организацию-кредитора
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                 КАК ВидДвижения,
	|		&ОрганизацияКредитор                                   КАК Организация,
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)          КАК Партнер,
	|		Дт_Орг.Организация                                     КАК Контрагент,
	|		Неопределено                                           КАК Заказ,
	|		ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|		Дт_Орг.ВалютаВзаиморасчетов                            КАК ВалютаВзаиморасчетов,
	|		-СУММА(Дт_Орг.Сумма)                                    КАК Сумма,
	|		-СУММА(Дт_Орг.СуммаВзаиморасчетов)                      КАК СуммаВзаиморасчетов,
	|		МАКСИМУМ(Дт_Орг.НомерСтроки)                           КАК НомерСтроки,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности
	|	ИЗ 
	|		ВтДебиторскаяЗадолженность КАК Дт_Орг
	|	ГДЕ
	|		&РасчетыМеждуОрганизациями
	|		//И Дт_Орг.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|	СГРУППИРОВАТЬ ПО
	|		Дт_Орг.Организация,
	|		Дт_Орг.ВалютаВзаиморасчетов
	|
	|	) КАК ТабличнаяЧасть
	|	
	|	// Определим Ключи аналитики
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|	ПО
	|		  ТабличнаяЧасть.Организация = РегистрАналитикаУчетаПоПартнерам.Организация
	|		И ТабличнаяЧасть.Партнер     = РегистрАналитикаУчетаПоПартнерам.Партнер
	|		И ТабличнаяЧасть.Контрагент  = РегистрАналитикаУчетаПоПартнерам.Контрагент
	|		И ТабличнаяЧасть.Договор     = РегистрАналитикаУчетаПоПартнерам.Договор
	|		И ТабличнаяЧасть.НаправлениеДеятельности = РегистрАналитикаУчетаПоПартнерам.НаправлениеДеятельности
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(&Период) КАК КурсыВалют
	|	ПО
	|		КурсыВалют.Валюта = ТабличнаяЧасть.ВалютаВзаиморасчетов
	|	
	|УПОРЯДОЧИТЬ ПО
	|	ВидДвижения,
	|	ТабличнаяЧасть.НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки          КАК НомерСтроки,
	|	&Период                               КАК Период,
	|	ТаблицаДокумента.ВалютаВзаиморасчетов КАК Валюта,
	|	ТаблицаДокумента.ИдентификаторСтроки  КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СуммаВзаиморасчетов  КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО                          КАК СтавкаНДС,
	|	0                                     КАК СуммаНДС,
	|	
	|	ТаблицаДокумента.СуммаВзаиморасчетов
	|		* ЕСТЬNULL(КурсыВалютВзаиморасчетов.Курс, 1) / ЕСТЬNULL(КурсыВалютВзаиморасчетов.Кратность, 1)
	|		/ (ЕСТЬNULL(КурсыВалютРегл.Курс, 1) / ЕСТЬNULL(КурсыВалютРегл.Кратность, 1)) КАК СуммаБезНДСРегл,
	|	
	|	0                                     КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО                          КАК ТипРасчетов
	|
	|ИЗ
	|	Документ.ВзаимозачетЗадолженности.ДебиторскаяЗадолженность КАК ТаблицаДокумента
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(КОНЕЦПЕРИОДА(&Период, ДЕНЬ)) КАК КурсыВалютВзаиморасчетов
	|	ПО
	|		ТаблицаДокумента.ВалютаВзаиморасчетов = КурсыВалютВзаиморасчетов.Валюта
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(КОНЕЦПЕРИОДА(&Период, ДЕНЬ)) КАК КурсыВалютРегл
	|	ПО
	|		КурсыВалютРегл.Валюта = &ВалютаРегламентированногоУчета
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И ТаблицаДокумента.ВалютаВзаиморасчетов <> &ВалютаРегламентированногоУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки          КАК НомерСтроки,
	|	&Период                               КАК Период,
	|	ТаблицаДокумента.ВалютаВзаиморасчетов КАК Валюта,
	|	ТаблицаДокумента.ИдентификаторСтроки  КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СуммаВзаиморасчетов  КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО                          КАК СтавкаНДС,
	|	0                                     КАК СуммаНДС,
	|	
	|	ТаблицаДокумента.СуммаВзаиморасчетов
	|		* ЕСТЬNULL(КурсыВалютВзаиморасчетов.Курс, 1) / ЕСТЬNULL(КурсыВалютВзаиморасчетов.Кратность, 1)
	|		/ (ЕСТЬNULL(КурсыВалютРегл.Курс, 1) / ЕСТЬNULL(КурсыВалютРегл.Кратность, 1)) КАК СуммаБезНДСРегл,
	|	
	|	0                                     КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО                          КАК ТипРасчетов
	|
	|ИЗ
	|	Документ.ВзаимозачетЗадолженности.КредиторскаяЗадолженность КАК ТаблицаДокумента
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(КОНЕЦПЕРИОДА(&Период, ДЕНЬ)) КАК КурсыВалютВзаиморасчетов
	|	ПО
	|		ТаблицаДокумента.ВалютаВзаиморасчетов = КурсыВалютВзаиморасчетов.Валюта
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(КОНЕЦПЕРИОДА(&Период, ДЕНЬ)) КАК КурсыВалютРегл
	|	ПО
	|		КурсыВалютРегл.Валюта = &ВалютаРегламентированногоУчета
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И ТаблицаДокумента.ВалютаВзаиморасчетов <> &ВалютаРегламентированногоУчета";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Формирует движения по регистру ДвиженияКонтрагентКонтрагент на временных таблиц дебиторской и кредиторской задолженности.
//
Процедура ПодготовитьТаблицуДвиженияКонтрагентКонтрагент(Запрос)
	
	Если Запрос.Параметры.Свойство("ДвиженияКонтрагентКонтрагентПодготовлены") Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьВтДебиторскаяЗадолженность(Запрос);
	ИнициализироватьВтКредиторскаяЗадолженность(Запрос);
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ЗапросЗадолженостей = Новый Запрос;
	ЗапросЗадолженостей.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросЗадолженостей.УстановитьПараметр("Ссылка",                            Запрос.Параметры.Ссылка);
	ЗапросЗадолженостей.УстановитьПараметр("Период",                            Запрос.Параметры.Период);
	ЗапросЗадолженостей.УстановитьПараметр("Подразделение",                     Запрос.Параметры.Подразделение);
	ЗапросЗадолженостей.УстановитьПараметр("Валюта",                            Запрос.Параметры.Валюта);
	ЗапросЗадолженостей.УстановитьПараметр("ВалютаУправленческогоУчета",        Запрос.Параметры.ВалютаУправленческогоУчета);
	ЗапросЗадолженостей.УстановитьПараметр("ВалютаРегламентированногоУчета",    Запрос.Параметры.ВалютаРегламентированногоУчета);
	ЗапросЗадолженостей.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр",    Запрос.Параметры.КоэффициентПересчетаВВалютуУпр);
	ЗапросЗадолженостей.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл",   Запрос.Параметры.КоэффициентПересчетаВВалютуРегл);
	ЗапросЗадолженостей.УстановитьПараметр("КонтрагентДебитор",                 Запрос.Параметры.КонтрагентДебитор);
	ЗапросЗадолженостей.УстановитьПараметр("КонтрагентКредитор",                Запрос.Параметры.КонтрагентКредитор);
	ЗапросЗадолженостей.УстановитьПараметр("РасчетыМеждуОрганизациямиДебитор",  Запрос.Параметры.РасчетыМеждуОрганизациямиДебитор);
	ЗапросЗадолженостей.УстановитьПараметр("РасчетыМеждуОрганизациямиКредитор", Запрос.Параметры.РасчетыМеждуОрганизациямиКредитор);
	ЗапросЗадолженостей.Текст = 
	"ВЫБРАТЬ
	|	&Период                                                КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности) КАК ХозяйственнаяОперация,
	|	Задолженность.Организация                              КАК Организация,
	|	&Подразделение                                         КАК Подразделение,
	|	
	|	Задолженность.Партнер                                  КАК Партнер,
	|	Задолженность.Контрагент                               КАК Контрагент,
	|	Задолженность.Договор                                  КАК Договор,
	|	Задолженность.Заказ                                    КАК ОбъектРасчетов,
	|	
	|	НЕОПРЕДЕЛЕНО                                           КАК КорПартнер,
	|	НЕОПРЕДЕЛЕНО                                           КАК КорКонтрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК КорДоговор,
	|	НЕОПРЕДЕЛЕНО                                           КАК КорОбъектРасчетов,
	|	
	|	НЕОПРЕДЕЛЕНО                                           КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО                                           КАК КорТипСуммы,
	|	
	|	ВЫБОР КОГДА Задолженность.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета
	|		ТОГДА Задолженность.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(Задолженность.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	КОНЕЦ                                                  КАК Сумма,
	|	0                                                      КАК СуммаБезНДС,
	|	ВЫБОР КОГДА Задолженность.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|		ТОГДА Задолженность.СуммаВзаиморасчетов
	|		ИНАЧЕ ВЫРАЗИТЬ(Задолженность.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	КОНЕЦ                                                  КАК СуммаРегл,
	|	0                                                      КАК СуммаРеглБезНДС,
	|	
	|	Задолженность.ВалютаВзаиморасчетов                     КАК Валюта,
	|	Задолженность.СуммаВзаиморасчетов                      КАК СуммаВВалюте,
	|	0                                                      КАК СуммаБезНДСВВалюте,
	|	
	|	Задолженность.ВалютаВзаиморасчетов                     КАК ВалютаВзаиморасчетов,
	|	ВЫБОР КОГДА Задолженность.СуммаВзаиморасчетов = 0 
	|		ТОГДА 1
	|		ИНАЧЕ (ВЫБОР КОГДА Задолженность.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|					ТОГДА Задолженность.СуммаВзаиморасчетов
	|					ИНАЧЕ ВЫРАЗИТЬ(Задолженность.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|				КОНЕЦ) / Задолженность.СуммаВзаиморасчетов
	|	КОНЕЦ                                                  КАК КурсВалютыВзаиморасчетов,
	|	Задолженность.СуммаВзаиморасчетов                      КАК СуммаВВалютеВзаиморасчетов,
	|	0                                                      КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|	
	|	НЕОПРЕДЕЛЕНО                                           КАК КорВалютаВзаиморасчетов,
	|	0                                                      КАК КорСуммаВВалютеВзаиморасчетов,
	|	0                                                      КАК КорСуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	Задолженность.Заказ                                    КАК ИсточникГФУРасчетов,
	|	НЕОПРЕДЕЛЕНО                                           КАК КорИсточникГФУРасчетов
	|ИЗ
	|	(//ДебиторскаяЗадолженность
	// расчеты по основной организации
	|	ВЫБРАТЬ // дебиторская задолженность дебитора-клиента перед организацией считается оплаченной
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)        КАК ВидДвижения,
	|		ДебиторскаяЗадолженность.Организация          КАК Организация,
	|		ВЫБОР КОГДА &РасчетыМеждуОрганизациямиДебитор 
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ ДебиторскаяЗадолженность.Партнер 
	|		КОНЕЦ                                         КАК Партнер,
	|		&КонтрагентДебитор                            КАК Контрагент,
	|		ДебиторскаяЗадолженность.Заказ                КАК Заказ,
	|		ДебиторскаяЗадолженность.Договор              КАК Договор,
	|		ДебиторскаяЗадолженность.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|		ДебиторскаяЗадолженность.Сумма                КАК Сумма,
	|		ДебиторскаяЗадолженность.СуммаВзаиморасчетов  КАК СуммаВзаиморасчетов,
	|		ДебиторскаяЗадолженность.НомерСтроки          КАК НомерСтроки
	|	ИЗ
	|		ВтДебиторскаяЗадолженность КАК ДебиторскаяЗадолженность
	|	ГДЕ
	|		ДебиторскаяЗадолженность.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|
	// (РасчетыСПоставщиком, Кредитор-Организация)
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ // зачет (оплата) дебиторской задолженности организации перед кредитором-организацией
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)        КАК ВидДвижения,
	|		&КонтрагентКредитор                           КАК Организация,
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|		Кт_Орг.Организация                            КАК Контрагент,
	|		Кт_Орг.Заказ                                  КАК Заказ,
	|		Кт_Орг.Договор                                КАК Договор,
	|		Кт_Орг.ВалютаВзаиморасчетов                   КАК ВалютаВзаиморасчетов,
	|		Кт_Орг.Сумма                                  КАК Сумма,
	|		Кт_Орг.СуммаВзаиморасчетов                    КАК СуммаВзаиморасчетов,
	|		Кт_Орг.НомерСтроки                            КАК НомерСтроки
	|	ИЗ 
	|		ВтКредиторскаяЗадолженность КАК Кт_Орг
	|	ГДЕ
	|		&РасчетыМеждуОрганизациямиКредитор
	|		И Кт_Орг.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|
	// расчеты по основной организации
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ // дебиторская задолженность дебитора-поставщика перед организацией сторнируется
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)        КАК ВидДвижения,
	|		ДебиторскаяЗадолженность.Организация          КАК Организация,
	|		ВЫБОР КОГДА &РасчетыМеждуОрганизациямиДебитор
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ ДебиторскаяЗадолженность.Партнер
	|		КОНЕЦ                                         КАК Партнер,
	|		&КонтрагентДебитор                            КАК Контрагент,
	|		ДебиторскаяЗадолженность.Заказ                КАК Заказ,
	|		ДебиторскаяЗадолженность.Договор              КАК Договор,
	|		ДебиторскаяЗадолженность.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|		ДебиторскаяЗадолженность.Сумма                КАК Сумма,
	|		ДебиторскаяЗадолженность.СуммаВзаиморасчетов  КАК СуммаВзаиморасчетов,
	|		ДебиторскаяЗадолженность.НомерСтроки          КАК НомерСтроки
	|	ИЗ
	|		ВтДебиторскаяЗадолженность КАК ДебиторскаяЗадолженность
	|	ГДЕ
	|		ДебиторскаяЗадолженность.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ // перенос кредиторки по клиенту у дебитора-организации на кредиторку поставщику перед кредитором-клиентом
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                 КАК ВидДвижения,
	|		&КонтрагентДебитор                                     КАК Организация,
	|		ВЫБОР КОГДА &РасчетыМеждуОрганизациямиКредитор
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ Дт_Кт.Партнер
	|		КОНЕЦ                                                  КАК Партнер,
	|		&КонтрагентКредитор                                    КАК Контрагент,
	|		Неопределено                                           КАК Заказ,
	|		ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|		Дт_Кт.ВалютаВзаиморасчетов                             КАК ВалютаВзаиморасчетов,
	|		СУММА(Дт_Кт.Сумма)                                     КАК Сумма,
	|		СУММА(Дт_Кт.СуммаВзаиморасчетов)                       КАК СуммаВзаиморасчетов,
	|		МАКСИМУМ(Дт_Кт.НомерСтроки)                            КАК НомерСтроки
	|	ИЗ
	|		ВтКредиторскаяЗадолженность КАК Дт_Кт
	|	ГДЕ
	|		&РасчетыМеждуОрганизациямиДебитор И &КонтрагентКредитор<>&КонтрагентДебитор
	|		И Дт_Кт.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|	СГРУППИРОВАТЬ ПО
	|		ВЫБОР КОГДА &РасчетыМеждуОрганизациямиКредитор
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ Дт_Кт.Партнер
	|		КОНЕЦ,
	|		Дт_Кт.ВалютаВзаиморасчетов
	|
	// (РасчетыСКлиентом, Кредитор-Организация)
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ // сторно дебиторки по поставщику у кредитора-организации
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)        КАК ВидДвижения,
	|		&КонтрагентКредитор                           КАК Организация,
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|		Кт_Орг.Организация                            КАК Контрагент,
	|		Кт_Орг.Заказ                                  КАК Заказ,
	|		Кт_Орг.Договор                                КАК Договор,
	|		Кт_Орг.ВалютаВзаиморасчетов                   КАК ВалютаВзаиморасчетов,
	|		Кт_Орг.Сумма                                  КАК Сумма,
	|		Кт_Орг.СуммаВзаиморасчетов                    КАК СуммаВзаиморасчетов,
	|		Кт_Орг.НомерСтроки                            КАК НомерСтроки
	|	ИЗ
	|		ВтКредиторскаяЗадолженность КАК Кт_Орг
	|	ГДЕ
	|		&РасчетыМеждуОрганизациямиКредитор
	|		И Кт_Орг.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|		
	// (РасчетыСПоставщиком, Дебитор-Организация)
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ // перенос кредиторки по поставщику у дебитора-организации на кредиторку по поставщику перед кредитором-поставщиком
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)                 КАК ВидДвижения,
	|		&КонтрагентДебитор                                     КАК Организация,
	|		ВЫБОР КОГДА &РасчетыМеждуОрганизациямиКредитор
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ Дт_Кт.Партнер
	|		КОНЕЦ                                                  КАК Партнер,
	|		&КонтрагентКредитор                                    КАК Контрагент,
	|		Неопределено                                           КАК Заказ,
	|		ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|		Дт_Кт.ВалютаВзаиморасчетов                             КАК ВалютаВзаиморасчетов,
	|		СУММА(Дт_Кт.Сумма)                                     КАК Сумма,
	|		СУММА(Дт_Кт.СуммаВзаиморасчетов)                       КАК СуммаВзаиморасчетов,
	|		МАКСИМУМ(Дт_Кт.НомерСтроки)                            КАК НомерСтроки
	|	ИЗ
	|		ВтКредиторскаяЗадолженность КАК Дт_Кт
	|	ГДЕ
	|		&РасчетыМеждуОрганизациямиДебитор И &КонтрагентКредитор<>&КонтрагентДебитор
	|		И Дт_Кт.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|	СГРУППИРОВАТЬ ПО
	|		ВЫБОР КОГДА &РасчетыМеждуОрганизациямиКредитор
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ Дт_Кт.Партнер
	|		КОНЕЦ,
	|		Дт_Кт.ВалютаВзаиморасчетов
	|
	|	) КАК Задолженность
	|
	|УПОРЯДОЧИТЬ ПО
	|	Задолженность.Организация,
	|	Задолженность.Сумма УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период                                                КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВзаимозачетЗадолженности) КАК ХозяйственнаяОперация,
	|	Задолженность.Организация                              КАК Организация,
	|	&Подразделение                                         КАК Подразделение,
	|	
	|	НЕОПРЕДЕЛЕНО                                           КАК Партнер,
	|	НЕОПРЕДЕЛЕНО                                           КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	НЕОПРЕДЕЛЕНО                                           КАК ОбъектРасчетов,
	|	
	|	Задолженность.Партнер                                  КАК КорПартнер,
	|	Задолженность.Контрагент                               КАК КорКонтрагент,
	|	Задолженность.Договор                                  КАК КорДоговор,
	|	Задолженность.Заказ                                    КАК КорОбъектРасчетов,
	|	
	|	НЕОПРЕДЕЛЕНО                                           КАК ТипСуммы,
	|	НЕОПРЕДЕЛЕНО                                           КАК КорТипСуммы,
	|	
	|	ВЫБОР 
	|		КОГДА Задолженность.ВалютаВзаиморасчетов = &ВалютаУправленческогоУчета ТОГДА
	|			Задолженность.СуммаВзаиморасчетов
	|		ИНАЧЕ
	|			ВЫРАЗИТЬ(Задолженность.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	КОНЕЦ                                                  КАК Сумма,
	|	0                                                      КАК СуммаБезНДС,
	|	ВЫБОР 
	|		КОГДА Задолженность.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета ТОГДА
	|			Задолженность.СуммаВзаиморасчетов
	|		ИНАЧЕ
	|			ВЫРАЗИТЬ(Задолженность.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	КОНЕЦ                                                  КАК СуммаРегл,
	|	0                                                      КАК СуммаРеглБезНДС,
	|	
	|	Задолженность.ВалютаВзаиморасчетов                     КАК Валюта,
	|	Задолженность.СуммаВзаиморасчетов                      КАК СуммаВВалюте,
	|	0                                                      КАК СуммаБезНДСВВалюте,
	|	
	|	НЕОПРЕДЕЛЕНО                                           КАК ВалютаВзаиморасчетов,
	|	0                                                      КАК СуммаВВалютеВзаиморасчетов,
	|	0                                                      КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|	
	|	Задолженность.ВалютаВзаиморасчетов                     КАК КорВалютаВзаиморасчетов,
	|	ВЫБОР КОГДА Задолженность.СуммаВзаиморасчетов = 0 
	|		ТОГДА 1
	|		ИНАЧЕ (ВЫБОР КОГДА Задолженность.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|					ТОГДА Задолженность.СуммаВзаиморасчетов
	|					ИНАЧЕ ВЫРАЗИТЬ(Задолженность.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|				КОНЕЦ) / Задолженность.СуммаВзаиморасчетов
	|	КОНЕЦ                                                  КАК КурсВалютыВзаиморасчетов,
	|	Задолженность.СуммаВзаиморасчетов                      КАК КорСуммаВВалютеВзаиморасчетов,
	|	0                                                      КАК КорСуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	НЕОПРЕДЕЛЕНО                                           КАК ИсточникГФУРасчетов,
	|	Задолженность.Заказ                                    КАК КорИсточникГФУРасчетов
	|ИЗ
	|	(//КредиторскаяЗадолженность
	// расчеты по основной организации
	|	ВЫБРАТЬ // кредиторская задолженность организации перед кредитором-клиентом сторнируется
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|		КредиторскаяЗадолженность.Организация          КАК Организация,
	|		ВЫБОР КОГДА &РасчетыМеждуОрганизациямиКредитор
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ КредиторскаяЗадолженность.Партнер
	|		КОНЕЦ                                          КАК Партнер,
	|		&КонтрагентКредитор                            КАК Контрагент,
	|		КредиторскаяЗадолженность.Заказ                КАК Заказ,
	|		КредиторскаяЗадолженность.Договор              КАК Договор,
	|		КредиторскаяЗадолженность.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|		КредиторскаяЗадолженность.Сумма                КАК Сумма,
	|		КредиторскаяЗадолженность.СуммаВзаиморасчетов  КАК СуммаВзаиморасчетов,
	|		КредиторскаяЗадолженность.НомерСтроки          КАК НомерСтроки
	|	ИЗ
	|		ВтКредиторскаяЗадолженность КАК КредиторскаяЗадолженность
	|	ГДЕ
	|		КредиторскаяЗадолженность.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|
	// (РасчетыСКлиентом, Кредитор-Организация)
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ // перенос дебиторки по клиентам у организации на дебиторку по клиентам у кредитора-организации
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                 КАК ВидДвижения,
	|		&КонтрагентКредитор                                    КАК Организация,
	|		ВЫБОР КОГДА &РасчетыМеждуОрганизациямиДебитор
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ Кт_Дт.Партнер
	|		КОНЕЦ                                                  КАК Партнер,
	|		&КонтрагентДебитор                                     КАК Контрагент,
	|		Неопределено                                           КАК Заказ,
	|		ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|		Кт_Дт.ВалютаВзаиморасчетов                             КАК ВалютаВзаиморасчетов,
	|		СУММА(Кт_Дт.Сумма)                                     КАК Сумма,
	|		СУММА(Кт_Дт.СуммаВзаиморасчетов)                       КАК СуммаВзаиморасчетов,
	|		МАКСИМУМ(Кт_Дт.НомерСтроки)                            КАК НомерСтроки
	|	ИЗ 
	|		ВтДебиторскаяЗадолженность КАК Кт_Дт
	|	ГДЕ
	|		&РасчетыМеждуОрганизациямиКредитор И &КонтрагентКредитор<>&КонтрагентДебитор
	|		И Кт_Дт.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|	СГРУППИРОВАТЬ ПО
	|		ВЫБОР КОГДА &РасчетыМеждуОрганизациямиДебитор
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ Кт_Дт.Партнер
	|		КОНЕЦ,
	|		Кт_Дт.ВалютаВзаиморасчетов
	|
	// (РасчетыСПоставщиком, Дебитор-Организация)
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ // сторно кредиторки по клиенту у дебитора-организации перед организацией
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|		&КонтрагентДебитор                            КАК Организация,
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|		Дт_Орг.Организация                            КАК Контрагент,
	|		Дт_Орг.Заказ                                  КАК Заказ,
	|		Дт_Орг.Договор                                КАК Договор,
	|		Дт_Орг.ВалютаВзаиморасчетов                   КАК ВалютаВзаиморасчетов,
	|		Дт_Орг.Сумма                                  КАК Сумма,
	|		Дт_Орг.СуммаВзаиморасчетов                    КАК СуммаВзаиморасчетов,
	|		Дт_Орг.НомерСтроки                            КАК НомерСтроки
	|	ИЗ 
	|		ВтДебиторскаяЗадолженность КАК Дт_Орг
	|	ГДЕ
	|		&РасчетыМеждуОрганизациямиДебитор
	|		И Дт_Орг.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                 КАК ВидДвижения,
	|		&КонтрагентКредитор                                    КАК Организация,
	|		ВЫБОР КОГДА &РасчетыМеждуОрганизациямиДебитор
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ Кт_Дт.Партнер
	|		КОНЕЦ                                                  КАК Партнер,
	|		&КонтрагентДебитор                                     КАК Контрагент,
	|		Неопределено                                           КАК Заказ,
	|		ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|		Кт_Дт.ВалютаВзаиморасчетов                             КАК ВалютаВзаиморасчетов,
	|		СУММА(Кт_Дт.Сумма)                                     КАК Сумма,
	|		СУММА(Кт_Дт.СуммаВзаиморасчетов)                       КАК СуммаВзаиморасчетов,
	|		МАКСИМУМ(Кт_Дт.НомерСтроки)                            КАК НомерСтроки
	|	ИЗ 
	|		ВтДебиторскаяЗадолженность КАК Кт_Дт
	|	ГДЕ
	|		&РасчетыМеждуОрганизациямиКредитор И &КонтрагентКредитор <> &КонтрагентДебитор
	|		И Кт_Дт.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|	СГРУППИРОВАТЬ ПО
	|		ВЫБОР КОГДА &РасчетыМеждуОрганизациямиДебитор
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ Кт_Дт.Партнер
	|		КОНЕЦ,
	|		Кт_Дт.ВалютаВзаиморасчетов
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ // кредиторская задолженность организации перед кредитором-поставщиком считается оплаченной
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)         КАК ВидДвижения,
	|		КредиторскаяЗадолженность.Организация          КАК Организация,
	|		ВЫБОР КОГДА &РасчетыМеждуОрганизациямиКредитор
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|			ИНАЧЕ КредиторскаяЗадолженность.Партнер
	|		КОНЕЦ                                          КАК Партнер,
	|		&КонтрагентКредитор                            КАК Контрагент,
	|		КредиторскаяЗадолженность.Заказ                КАК Заказ,
	|		КредиторскаяЗадолженность.Договор              КАК Договор,
	|		КредиторскаяЗадолженность.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|		КредиторскаяЗадолженность.Сумма                КАК Сумма,
	|		КредиторскаяЗадолженность.СуммаВзаиморасчетов  КАК СуммаВзаиморасчетов,
	|		КредиторскаяЗадолженность.НомерСтроки          КАК НомерСтроки
	|	ИЗ
	|		ВтКредиторскаяЗадолженность КАК КредиторскаяЗадолженность
	|	ГДЕ
	|		КредиторскаяЗадолженность.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|
	// (РасчетыСКлиентом, Дебитор-Организация)
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ // зачет (оплата) кредиторской задолженности дебитора-организации перед организацией 
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|		&КонтрагентДебитор                            КАК Организация,
	|		ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие) КАК Партнер,
	|		Дт_Орг.Организация                            КАК Контрагент,
	|		Дт_Орг.Заказ                                  КАК Заказ,
	|		Дт_Орг.Договор                                КАК Договор,
	|		Дт_Орг.ВалютаВзаиморасчетов                   КАК ВалютаВзаиморасчетов,
	|		Дт_Орг.Сумма                                  КАК Сумма,
	|		Дт_Орг.СуммаВзаиморасчетов                    КАК СуммаВзаиморасчетов,
	|		Дт_Орг.НомерСтроки                            КАК НомерСтроки
	|	ИЗ 
	|		ВтДебиторскаяЗадолженность КАК Дт_Орг
	|	ГДЕ
	|		&РасчетыМеждуОрганизациямиДебитор
	|		И Дт_Орг.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|
	|	) КАК Задолженность
	|
	|УПОРЯДОЧИТЬ ПО
	|	Задолженность.Организация,
	|	Задолженность.Сумма УБЫВ";
	
	Результат = ЗапросЗадолженостей.ВыполнитьПакет();
	
	ТаблицаДвиженияКонтрагентКонтрагент = Неопределено;
	ВзаиморасчетыСервер.ПровестиВзаимозачет(
		Результат[0].Выгрузить(),
		Результат[1].Выгрузить(),
		ТаблицаДвиженияКонтрагентКонтрагент);
	
	ЗапросЗадолженостей.УстановитьПараметр("ТаблицаДвиженияКонтрагентКонтрагент", ТаблицаДвиженияКонтрагентКонтрагент);
	ЗапросЗадолженостей.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДвиженияКонтрагентКонтрагент.Период,
	|	ТаблицаДвиженияКонтрагентКонтрагент.Регистратор,
	|	ТаблицаДвиженияКонтрагентКонтрагент.НомерСтроки,
	|	ТаблицаДвиженияКонтрагентКонтрагент.Активность,
	|
	|	ТаблицаДвиженияКонтрагентКонтрагент.ХозяйственнаяОперация,
	|	ТаблицаДвиженияКонтрагентКонтрагент.Организация,
	|	ТаблицаДвиженияКонтрагентКонтрагент.Подразделение,
	|
	|	ТаблицаДвиженияКонтрагентКонтрагент.Партнер,
	|	ТаблицаДвиженияКонтрагентКонтрагент.Контрагент,
	|	ТаблицаДвиженияКонтрагентКонтрагент.Договор,
	|	ТаблицаДвиженияКонтрагентКонтрагент.ОбъектРасчетов,
	|
	|	ТаблицаДвиженияКонтрагентКонтрагент.КорПартнер,
	|	ТаблицаДвиженияКонтрагентКонтрагент.КорКонтрагент,
	|	ТаблицаДвиженияКонтрагентКонтрагент.КорДоговор,
	|	ТаблицаДвиженияКонтрагентКонтрагент.КорОбъектРасчетов,
	
	|	ТаблицаДвиженияКонтрагентКонтрагент.ТипСуммы,
	|	ТаблицаДвиженияКонтрагентКонтрагент.КорТипСуммы,
	|
	|	ТаблицаДвиженияКонтрагентКонтрагент.Сумма,
	|	ТаблицаДвиженияКонтрагентКонтрагент.СуммаБезНДС,
	|	ТаблицаДвиженияКонтрагентКонтрагент.СуммаРегл,
	|	ТаблицаДвиженияКонтрагентКонтрагент.СуммаРеглБезНДС,
	|
	|	ТаблицаДвиженияКонтрагентКонтрагент.Валюта,
	|	ТаблицаДвиженияКонтрагентКонтрагент.СуммаВВалюте,
	|	ТаблицаДвиженияКонтрагентКонтрагент.СуммаБезНДСВВалюте,
	|
	|	ТаблицаДвиженияКонтрагентКонтрагент.ВалютаВзаиморасчетов,
	|	ТаблицаДвиженияКонтрагентКонтрагент.СуммаВВалютеВзаиморасчетов,
	|	ТаблицаДвиженияКонтрагентКонтрагент.СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ТаблицаДвиженияКонтрагентКонтрагент.КорВалютаВзаиморасчетов,
	|	ТаблицаДвиженияКонтрагентКонтрагент.КорСуммаВВалютеВзаиморасчетов,
	|	ТаблицаДвиженияКонтрагентКонтрагент.КорСуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ТаблицаДвиженияКонтрагентКонтрагент.ИсточникГФУРасчетов,
	|	ТаблицаДвиженияКонтрагентКонтрагент.КорИсточникГФУРасчетов
	|ПОМЕСТИТЬ ВтДвиженияКонтрагентКонтрагент
	|ИЗ
	|	&ТаблицаДвиженияКонтрагентКонтрагент КАК ТаблицаДвиженияКонтрагентКонтрагент";
	
	ЗапросЗадолженостей.ВыполнитьПакет();
	
	Запрос.УстановитьПараметр("ДвиженияКонтрагентКонтрагентПодготовлены", Истина);

КонецПроцедуры

Функция ТекстЗапросаДвиженияКонтрагентКонтрагент(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияКонтрагентКонтрагент";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ПодготовитьТаблицуДвиженияКонтрагентКонтрагент(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаДвиженияКонтрагентКонтрагент.Период,
	|	ТаблицаДвиженияКонтрагентКонтрагент.Регистратор,
	|	ТаблицаДвиженияКонтрагентКонтрагент.НомерСтроки,
	|	ТаблицаДвиженияКонтрагентКонтрагент.Активность,
	|
	|	ТаблицаДвиженияКонтрагентКонтрагент.ХозяйственнаяОперация,
	|	ТаблицаДвиженияКонтрагентКонтрагент.Организация,
	|	ТаблицаДвиженияКонтрагентКонтрагент.Подразделение,
	|
	|	ТаблицаДвиженияКонтрагентКонтрагент.Партнер,
	|	ТаблицаДвиженияКонтрагентКонтрагент.Контрагент,
	|	ТаблицаДвиженияКонтрагентКонтрагент.Договор,
	|	ТаблицаДвиженияКонтрагентКонтрагент.ОбъектРасчетов,
	|
	|	ТаблицаДвиженияКонтрагентКонтрагент.КорПартнер,
	|	ТаблицаДвиженияКонтрагентКонтрагент.КорКонтрагент,
	|	ТаблицаДвиженияКонтрагентКонтрагент.КорДоговор,
	|	ТаблицаДвиженияКонтрагентКонтрагент.КорОбъектРасчетов,
	|
	|	ТаблицаДвиженияКонтрагентКонтрагент.ТипСуммы,
	|	ТаблицаДвиженияКонтрагентКонтрагент.КорТипСуммы,
	|
	|	ТаблицаДвиженияКонтрагентКонтрагент.Сумма,
	|	ТаблицаДвиженияКонтрагентКонтрагент.СуммаБезНДС,
	|	ТаблицаДвиженияКонтрагентКонтрагент.СуммаРегл,
	|	ТаблицаДвиженияКонтрагентКонтрагент.СуммаРеглБезНДС,
	|
	|	ТаблицаДвиженияКонтрагентКонтрагент.Валюта,
	|	ТаблицаДвиженияКонтрагентКонтрагент.СуммаВВалюте,
	|	ТаблицаДвиженияКонтрагентКонтрагент.СуммаБезНДСВВалюте,
	|
	|	ТаблицаДвиженияКонтрагентКонтрагент.ВалютаВзаиморасчетов,
	|	ТаблицаДвиженияКонтрагентКонтрагент.СуммаВВалютеВзаиморасчетов,
	|	ТаблицаДвиженияКонтрагентКонтрагент.СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ТаблицаДвиженияКонтрагентКонтрагент.КорВалютаВзаиморасчетов,
	|	ТаблицаДвиженияКонтрагентКонтрагент.КорСуммаВВалютеВзаиморасчетов,
	|	ТаблицаДвиженияКонтрагентКонтрагент.КорСуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ТаблицаДвиженияКонтрагентКонтрагент.ИсточникГФУРасчетов,
	|	ТаблицаДвиженияКонтрагентКонтрагент.КорИсточникГФУРасчетов
	|ИЗ
	|	ВтДвиженияКонтрагентКонтрагент КАК ТаблицаДвиженияКонтрагентКонтрагент";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	
	Возврат ТекстЗапроса;
	
КонецФункции



#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	Если ПравоДоступа("Изменение", Метаданные.Документы.ВзаимозачетЗадолженности) Тогда
		// Акт взаимозачета (Microsoft Word)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьАктаВзаимозачетаЗадолженностиMicrosoftWord";
		КомандаПечати.МенеджерПечати = "";
		КомандаПечати.Идентификатор = "АктВзаимозачетаMicrosoftWord";
		КомандаПечати.Представление = НСтр("ru='Акт взаимозачета (Microsoft Word)';uk='Акт взаємозаліку (Microsoft Word)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ТребуетсяРасширениеРаботыСФайлами = Истина;

		// Акт переуступки долга (Microsoft Word)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьАктаПереуступкиДолгаMicrosoftWord";
		КомандаПечати.МенеджерПечати = "";
		КомандаПечати.Идентификатор = "АктПереуступкиДолгаMicrosoftWord";
		КомандаПечати.Представление = НСтр("ru='Акт переуступки долга (Microsoft Word)';uk='Акт переуступки боргу (Microsoft Word)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ТребуетсяРасширениеРаботыСФайлами = Истина;
		
		// Акт переуступки долга между организациями (Microsoft Word)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик = "УправлениеПечатьюУТКлиент.ПечатьАктаПереуступкиДолгаМеждуОрганизациямиMicrosoftWord";
		КомандаПечати.МенеджерПечати = "";
		КомандаПечати.Идентификатор = "АктПереуступкиДолгаМеждуОрганизациямиMicrosoftWord";
		КомандаПечати.Представление = НСтр("ru='Акт переуступки долга между организациями (Microsoft Word)';uk='Акт переуступки боргу між організаціями (Microsoft Word)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.ТребуетсяРасширениеРаботыСФайлами = Истина;
		КомандаПечати.ФункциональныеОпции = "ИспользоватьНесколькоОрганизаций";
	КонецЕсли;

КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
КонецПроцедуры

Функция ПолучитьДанныеПечати(знач МассивДокументов, знач МассивИменМакетов) Экспорт
	
	Структура = Новый Структура("Данные, Макеты",
		ПолучитьДанныеОбъектаПоМакетам(МассивДокументов, МассивИменМакетов),
		ПолучитьМакетыИОписанияСекций(МассивИменМакетов));
				
	Возврат Структура;
	
КонецФункции

Функция ПолучитьДанныеОбъектаПоМакетам(знач МассивДокументов, знач МассивИменМакетов) Экспорт
	
	КодЯзыкаПечать = "uk";
	
	ДанныеПоВсемОбъектам = Новый Соответствие;
	
	МассивРезультатов = ПолучитьДанныеВзаимозачетЗадолженности(МассивДокументов);
	
	Выборка = МассивРезультатов[0].Выбрать();
	ВыборкаДебиторскаяЗадолженность = МассивРезультатов[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаКредиторскаяЗадолженность = МассивРезультатов[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока Выборка.Следующий() Цикл
	
		ДанныеОбъекта = Новый Структура;
		ДанныеОбъекта.Вставить("Организация",                               Выборка.Организация);
		ДанныеОбъекта.Вставить("ДолжностьРуководителя",                     Выборка.ДолжностьРуководителя);
		ДанныеОбъекта.Вставить("Руководитель",                              Выборка.Руководитель);
		ДанныеОбъекта.Вставить("ОрганизацияКредитор",                       Выборка.ОрганизацияКредитор);
		ДанныеОбъекта.Вставить("ДолжностьРуководителяОрганизацииКредитора", Выборка.ДолжностьРуководителяОрганизацииКредитора);
		ДанныеОбъекта.Вставить("РуководительОрганизацииКредитора",          Выборка.РуководительОрганизацииКредитора);
		ДанныеОбъекта.Вставить("КонтрагентДебитор",                         Выборка.КонтрагентДебитор);
		ДанныеОбъекта.Вставить("КонтрагентКредитор",                        Выборка.КонтрагентКредитор);
		ДанныеОбъекта.Вставить("Дата",                                      Формат(Выборка.Дата, "ДЛФ=ДД;Л="+Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать)));
		ДанныеОбъекта.Вставить("АдресОрганизации",                          ФормированиеПечатныхФорм.ПолучитьАдресИзКонтактнойИнформации(Выборка.ОрганизацияСсылка, "Юридический", Выборка.Дата));
		ДанныеОбъекта.Вставить("АдресОрганизацииКредитора",                 ФормированиеПечатныхФорм.ПолучитьАдресИзКонтактнойИнформации(Выборка.ОрганизацияКредиторСсылка, "Юридический", Выборка.Дата));
		ДанныеОбъекта.Вставить("АдресКонтрагентаДебитора",                  Выборка.АдресКонтрагентаДебитора);
		ДанныеОбъекта.Вставить("АдресКонтрагентаКредитора",                 Выборка.АдресКонтрагентаКредитора);
		ДанныеОбъекта.Вставить("Взаимозачет",                               Выборка.Взаимозачет);
		ДанныеОбъекта.Вставить("ВзаимозачетМеждуОрганизациями",             Выборка.ВзаимозачетМеждуОрганизациями);
		ДанныеОбъекта.Вставить("Сумма", ФормированиеПечатныхФорм.ФорматСумм(Выборка.СуммаДокумента, Выборка.Валюта));
		
		СуммаПрописью = РаботаСКурсамиВалют.СформироватьСуммуПрописью(Выборка.СуммаДокумента, Выборка.Валюта,, КодЯзыкаПечать);
		ДанныеОбъекта.Вставить("СуммаПрописью", СуммаПрописью);

		ДанныеОбъекта.Вставить("ДебиторскаяЗадолженность", Новый Массив);
		ДанныеОбъекта.Вставить("КредиторскаяЗадолженность", Новый Массив);
		
		ДанныеОбъекта.Вставить("АдресКонтрагентаДебитора", Выборка.АдресКонтрагентаДебитора);
		
		ДанныеОбъекта.Вставить("АдресКонтрагентаКредитора", Выборка.АдресКонтрагентаКредитора);
		
		АдресОрганизацииКредитора = УправлениеКонтактнойИнформацией.КонтактнаяИнформацияОбъектов(
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Выборка.ОрганизацияКредиторСсылка),
			Перечисления.ТипыКонтактнойИнформации.Адрес,
			Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации, Выборка.Дата);  
		Если АдресОрганизацииКредитора.Количество() > 0 Тогда
			ДанныеОбъекта.Вставить("АдресОрганизацииКредитора", АдресОрганизацииКредитора[0].Представление); 
		Иначе
			ДанныеОбъекта.Вставить("АдресОрганизацииКредитора", ""); 
		КонецЕсли;
		
		Если ВыборкаДебиторскаяЗадолженность.НайтиСледующий(Выборка.Ссылка, "Ссылка") Тогда 
			СформироватьТаблицуЗадолженности(ВыборкаДебиторскаяЗадолженность, Выборка, ДанныеОбъекта.ДебиторскаяЗадолженность);
		КонецЕсли;
		Если ВыборкаКредиторскаяЗадолженность.НайтиСледующий(Выборка.Ссылка, "Ссылка") Тогда 
			СформироватьТаблицуЗадолженности(ВыборкаКредиторскаяЗадолженность, Выборка, ДанныеОбъекта.КредиторскаяЗадолженность);
		КонецЕсли;

		ДанныеОбъектаПоМакетам = Новый Структура;
		Для Каждого ИмяМакета Из МассивИменМакетов Цикл
			ДанныеОбъектаПоМакетам.Вставить(ИмяМакета, ДанныеОбъекта);
		КонецЦикла;
		ДанныеПоВсемОбъектам.Вставить(Выборка.Ссылка, ДанныеОбъектаПоМакетам);
	КонецЦикла;
	
	Возврат ДанныеПоВсемОбъектам;
	
КонецФункции

Функция ПолучитьМакетыИОписанияСекций(знач МассивИменМакетов) Экспорт
	
	ОписаниеСекций = Новый Структура;
	ДвоичныеДанныеМакетов = Новый Структура;
	
	Для Каждого ИмяМакета Из МассивИменМакетов Цикл
		
		Макет = Неопределено;
		ОписаниеСекцийМакета = Неопределено;
		
		Если ИмяМакета = "ПФ_DOC_АктВзаимозачета_uk" Тогда
			ОписаниеСекцийМакета = ПолучитьОписаниеОбластейВзаимозачетЗадолженности();
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВзаимозачетЗадолженности.ПФ_DOC_АктВзаимозачета_uk");
		ИначеЕсли ИмяМакета = "ПФ_DOC_АктПереуступкиДолга_uk" Тогда
			ОписаниеСекцийМакета = ПолучитьОписаниеОбластейВзаимозачетЗадолженности();
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВзаимозачетЗадолженности.ПФ_DOC_АктПереуступкиДолга_uk");
		ИначеЕсли ИмяМакета = "ПФ_DOC_АктПереуступкиДолгаМеждуОрганизациями_uk" Тогда
			ОписаниеСекцийМакета = ПолучитьОписаниеОбластейВзаимозачетЗадолженности();
			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ВзаимозачетЗадолженности.ПФ_DOC_АктПереуступкиДолгаМеждуОрганизациями_uk");
		КонецЕсли;
		
		Если ОписаниеСекцийМакета <> Неопределено И Макет <> Неопределено Тогда
			
			ОписаниеСекций.Вставить(ИмяМакета, ОписаниеСекцийМакета);
			ДвоичныеДанныеМакетов.Вставить(ИмяМакета, Макет);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Структура = Новый Структура("ОписаниеСекций, ДвоичныеДанныеМакетов",
		ОписаниеСекций,
	    ДвоичныеДанныеМакетов);
	
	Возврат Структура;
	
КонецФункции

Процедура СформироватьТаблицуЗадолженности(РезультатЗапроса, ВыборкаДокумент, МассивСтрок)
	
	КодЯзыкаПечать = "uk";
	
	НомерСтроки = 0;
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НомерСтроки = НомерСтроки + 1;
		СтрокаТаблицы = Новый Структура;
		СтрокаТаблицы.Вставить("НомерСтроки", НомерСтроки);
		СтрокаТаблицы.Вставить("Сумма", Формат(Выборка.Сумма, "ЧДЦ=2"));
		СтрокаТаблицы.Вставить("Валюта", ВыборкаДокумент.Валюта);
		
		ТекстДокумент = "";
		Если ЗначениеЗаполнено(Выборка.НаименованиеДляПечати) Тогда
			ТекстДокумент = Выборка.НаименованиеДляПечати;
		ИначеЕсли ЗначениеЗаполнено(Выборка.ТипДокумента) Тогда
			ТекстДокумент = ТекстДокумент
			+ ?(Не ПустаяСтрока(ТекстДокумент), ", " + Символы.ПС, "")
			+ ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(Выборка, Локализация.ПолучитьЛокализованноеПредставление(Выборка.ТипДокумента, КодЯзыкаПечать), КодЯзыкаПечать)
			;
		КонецЕсли;
		Если ПустаяСтрока(ТекстДокумент) Тогда  
			ТекстДокумент = НСтр("ru='Без документа';uk='Без документа'",КодЯзыкаПечать);
		КонецЕсли;
	
		СтрокаТаблицы.Вставить("Документ", ТекстДокумент);
		
		МассивСтрок.Добавить(СтрокаТаблицы);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьДанныеВзаимозачетЗадолженности(МассивДокументов)
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(
		МассивДокументов,
		МенеджерВременныхТаблиц);
	
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(
		МассивДокументов,
		МенеджерВременныхТаблиц,
		"ОрганизацияКредитор", 
		Новый Структура("Руководитель", Перечисления.ОтветственныеЛицаОрганизаций.Руководитель),
		"ТаблицаОтветственныеЛицаОрганизацииКредитора");
		
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация.НаименованиеСокращенное КАК Организация,
	|	ДанныеДокумента.Организация КАК ОрганизацияСсылка,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	ТаблицаОтветственныеЛица.РуководительНаименование КАК Руководитель,
	|	ТаблицаОтветственныеЛица.РуководительДолжность КАК ДолжностьРуководителя,
	|	ДанныеДокумента.ОрганизацияКредитор.НаименованиеСокращенное КАК ОрганизацияКредитор,
	|	ДанныеДокумента.ОрганизацияКредитор КАК ОрганизацияКредиторСсылка,
	|	ТаблицаОтветственныеЛицаОрганизацииКредитора.РуководительНаименование КАК РуководительОрганизацииКредитора,
	|	ТаблицаОтветственныеЛицаОрганизацииКредитора.РуководительДолжность КАК ДолжностьРуководителяОрганизацииКредитора,
	|	ДанныеДокумента.КонтрагентДебитор.НаименованиеПолное КАК КонтрагентДебитор,
	|	ДанныеДокумента.КонтрагентКредитор.НаименованиеПолное КАК КонтрагентКредитор,
	|	ВЫБОР КОГДА ДанныеДокумента.КонтрагентДебитор = ДанныеДокумента.КонтрагентКредитор ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК Взаимозачет,
	|	ВЫБОР КОГДА ДанныеДокумента.ВидОперации В (&ВидыОперацийМеждуОрганизациями) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ КАК ВзаимозачетМеждуОрганизациями,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаДокумента,
	|	АдресКонтрагентаДебитора.Представление КАК АдресКонтрагентаДебитора,
	|	АдресКонтрагентаКредитора.Представление КАК АдресКонтрагентаКредитора
	|ИЗ
	|	Документ.ВзаимозачетЗадолженности КАК ДанныеДокумента
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Контрагенты.КонтактнаяИнформация КАК АдресКонтрагентаДебитора
	|	ПО
	|		ДанныеДокумента.КонтрагентДебитор = АдресКонтрагентаДебитора.Ссылка
	|		И (АдресКонтрагентаДебитора.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресКонтрагента))
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.Контрагенты.КонтактнаяИнформация КАК АдресКонтрагентаКредитора
	|	ПО
	|		ДанныеДокумента.КонтрагентДебитор = АдресКонтрагентаКредитора.Ссылка
	|		И (АдресКонтрагентаКредитора.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресКонтрагента))
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|	ПО
	|		ДанныеДокумента.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаОтветственныеЛицаОрганизацииКредитора КАК ТаблицаОтветственныеЛицаОрганизацииКредитора
	|	ПО
	|		ДанныеДокумента.Ссылка = ТаблицаОтветственныеЛицаОрганизацииКредитора.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка В (&МассивДокументов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Задолженность.Ссылка КАК Ссылка,
	|	Задолженность.ТипРасчетов КАК ТипРасчетов,
	|	ВЫБОР КОГДА Задолженность.Заказ = НЕОПРЕДЕЛЕНО ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		ТИПЗНАЧЕНИЯ(Задолженность.Заказ)
	|	КОНЕЦ КАК ТипДокумента,
	|	Задолженность.Заказ.Дата КАК Дата,
	|	Задолженность.Заказ.Номер КАК Номер,
	|	ВЫБОР КОГДА Задолженность.Заказ ССЫЛКА Справочник.ДоговорыКонтрагентов ТОГДА
	|		Задолженность.Заказ.НаименованиеДляПечати
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаименованиеДляПечати,
	|	Задолженность.Сумма КАК Сумма
	|ИЗ
	|	Документ.ВзаимозачетЗадолженности.ДебиторскаяЗадолженность КАК Задолженность
	|ГДЕ
	|	Задолженность.Ссылка В (&МассивДокументов)
	|
	|ИТОГИ ПО
	|	Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Задолженность.Ссылка КАК Ссылка,
	|	Задолженность.ТипРасчетов КАК ТипРасчетов,
	|	ВЫБОР КОГДА Задолженность.Заказ = НЕОПРЕДЕЛЕНО ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		ТИПЗНАЧЕНИЯ(Задолженность.Заказ)
	|	КОНЕЦ КАК ТипДокумента,
	|	Задолженность.Заказ.Дата КАК Дата,
	|	Задолженность.Заказ.Номер КАК Номер,
	|	ВЫБОР КОГДА Задолженность.Заказ ССЫЛКА Справочник.ДоговорыКонтрагентов ТОГДА
	|		Задолженность.Заказ.НаименованиеДляПечати
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаименованиеДляПечати,
	|	Задолженность.Сумма КАК Сумма
	|ИЗ
	|	Документ.ВзаимозачетЗадолженности.КредиторскаяЗадолженность КАК Задолженность
	|ГДЕ
	|	Задолженность.Ссылка В (&МассивДокументов)
	|
	|ИТОГИ ПО
	|	Ссылка
	|");
	
	МассивОпераций = Новый Массив;
	МассивОпераций.Добавить(Перечисления.ВидыОперацийВзаимозачетаЗадолженности.КлиентаМеждуОрганизациями);
	МассивОпераций.Добавить(Перечисления.ВидыОперацийВзаимозачетаЗадолженности.ПоставщикаМеждуОрганизациями);
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.УстановитьПараметр("ВидыОперацийМеждуОрганизациями", МассивОпераций);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
		
	Возврат МассивРезультатов;

КонецФункции

Функция ПолучитьОписаниеОбластейВзаимозачетЗадолженности()

	Секции = Новый Структура;
	
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "ВерхнийКолонтитул","ВерхнийКолонтитул");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "НижнийКолонтитул","НижнийКолонтитул");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "Заголовок", "Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "ДебиторскаяЗадолженность", "Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "КредиторскаяЗадолженность", "Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "ШапкаТаблицы", "СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "СтрокаТаблицы", "СтрокаТаблицы");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "Итог", "Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(Секции, "Подвал", "Общая");
	
	Возврат Секции;

КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы



Функция ПолноеИмяОбъекта()
	Возврат "Документ.ВзаимозачетЗадолженности";
КонецФункции

Процедура ЗаполнитьВладельцаОбъектаРасчетаВТабличнойЧастиДанныеДляОбновления(Параметры) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДебиторскаяЗадолженность.Ссылка
	|ИЗ
	|	Документ.ВзаимозачетЗадолженности.ДебиторскаяЗадолженность КАК ДебиторскаяЗадолженность
	|ГДЕ
	|	ДебиторскаяЗадолженность.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КредиторскаяЗадолженность.Ссылка
	|ИЗ
	|	Документ.ВзаимозачетЗадолженности.КредиторскаяЗадолженность КАК КредиторскаяЗадолженность
	|ГДЕ
	|	КредиторскаяЗадолженность.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

// Заполняет реквизит "Организация" в табличной части "РасшифровкаПлатежа"
Процедура ЗаполнитьВладельцаОбъектаРасчетаВТабличнойЧасти(Параметры) Экспорт
	
	ДополнительныеИсточникиДанных = Новый Соответствие;
	ДополнительныеИсточникиДанных.Вставить("ДебиторскаяЗадолженность.Заказ");
	ДополнительныеИсточникиДанных.Вставить("КредиторскаяЗадолженность.Заказ");
	
	Параметры.Вставить("ПолноеИмяОбъекта", "Документ.ВзаимозачетЗадолженности");
	Параметры.Вставить("ТекстЗапроса", ТекстЗапросаВладельцевОбъектаРасчета());
	Параметры.Вставить("ДополнительныеИсточникиДанных", ДополнительныеИсточникиДанных);
    
	ВзаиморасчетыСервер.ЗаполнитьВладельцаОбъектаРасчетаТЧ(Параметры);
	
КонецПроцедуры

Функция ТекстЗапросаВладельцевОбъектаРасчета()
	
	Возврат
	"ВЫБРАТЬ
	|	Регистраторы.Ссылка КАК Ссылка,
	|	Регистраторы.Организация КАК Организация
	|ПОМЕСТИТЬ втРегистраторы
	|ИЗ
	|	Документ.ВзаимозачетЗадолженности КАК Регистраторы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втДляОбработкиВзаимозачетЗадолженности КАК Фильтр
	|			ПО Регистраторы.Ссылка = Фильтр.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Задолженность.Ссылка КАК Регистратор,
	|	""ДебиторскаяЗадолженность"" КАК ИмяТабличнойЧасти,
	|	Задолженность.НомерСтроки КАК НомерСтроки,
	|	Задолженность.ТипРасчетов КАК ТипРасчетов,
	|	Задолженность.Партнер КАК Партнер,
	|	Задолженность.Заказ КАК Заказ,
	|	Задолженность.Сумма КАК Сумма,
	|	Задолженность.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	Задолженность.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Задолженность.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ВЫБОР КОГДА Задолженность.Заказ = НЕОПРЕДЕЛЕНО
	|		ТОГДА Регистраторы.Организация
	|		ИНАЧЕ Задолженность.Заказ.Организация
	|	КОНЕЦ КАК Организация,
	|	Задолженность.Ссылка.МоментВремени КАК МоментВремени
	|ИЗ
	|	Документ.ВзаимозачетЗадолженности.ДебиторскаяЗадолженность КАК Задолженность
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втРегистраторы КАК Регистраторы
	|	ПО Задолженность.Ссылка = Регистраторы.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Задолженность.Ссылка,
	|	""КредиторскаяЗадолженность"",
	|	Задолженность.НомерСтроки,
	|	Задолженность.ТипРасчетов,
	|	Задолженность.Партнер,
	|	Задолженность.Заказ,
	|	Задолженность.Сумма,
	|	Задолженность.СуммаВзаиморасчетов,
	|	Задолженность.ВалютаВзаиморасчетов,
	|	Задолженность.ИдентификаторСтроки,
	|	ВЫБОР КОГДА Задолженность.Заказ = НЕОПРЕДЕЛЕНО
	|		ТОГДА Регистраторы.Организация
	|		ИНАЧЕ Задолженность.Заказ.Организация
	|	КОНЕЦ,
	|	Задолженность.Ссылка.МоментВремени
	|ИЗ
	|	Документ.ВзаимозачетЗадолженности.КредиторскаяЗадолженность КАК Задолженность
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втРегистраторы КАК Регистраторы
	|	ПО Задолженность.Ссылка = Регистраторы.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	МоментВремени УБЫВ,
	|	ИмяТабличнойЧасти,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Регистратор,
	|	ИмяТабличнойЧасти";
	
КонецФункции

Процедура ДокументыДляОбновленияЗаполнитьТипыДебитораИКредитораОтложенно(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВзаимозачетЗадолженности.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ВзаимозачетЗадолженности КАК ВзаимозачетЗадолженности
	|ГДЕ
	|	ВзаимозачетЗадолженности.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВзаимозачетаЗадолженности.ПустаяСсылка)
	|";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
КонецПроцедуры

// Отложенный обработчик обновления BAS УТ 3.2.2
// Заполняет новые реквизиты документа "ТипДебитора", "ТипКредитора"
// "ВидОперации" устанавивается по умолчанию "Произовольный".
Процедура ЗаполнитьТипыДебитораИКредитораОтложенно(Параметры) Экспорт
	
	ПолноеИмяОбъекта = "Документ.ВзаимозачетЗадолженности";
	
	Запрос = Новый Запрос;
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(Параметры.Очередь,
		ПолноеИмяОбъекта, МенеджерВТ);
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуЗаблокированныхДляЧтенияИИзмененияДанных(Параметры.Очередь,
		ПолноеИмяОбъекта, МенеджерВТ);
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 200
	|	ВзаимозачетЗадолженности.Ссылка                                   КАК Ссылка,
	|	ВзаимозачетЗадолженности.Дата                                     КАК Дата,
	|	ВзаимозачетЗадолженности.УдалитьРасчетыМеждуОрганизациямиДебитор  КАК РасчетыМеждуОрганизациямиДебитор,
	|	ВзаимозачетЗадолженности.УдалитьРасчетыМеждуОрганизациямиКредитор КАК РасчетыМеждуОрганизациямиКредитор
	|ПОМЕСТИТЬ ДанныеДокумента
	|ИЗ
	|	Документ.ВзаимозачетЗадолженности КАК ВзаимозачетЗадолженности
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	ВТДляОбработкиВзаимозачетЗадолженности
	|ПО
	|	ВзаимозачетЗадолженности.Ссылка = ВТДляОбработкиВзаимозачетЗадолженности.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата УБЫВ
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка,
	|	МАКСИМУМ(
	|		ВЫБОР
	|			КОГДА ДебиторскаяЗадолженность.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьРасчетыСКлиентом,
	|	МАКСИМУМ(
	|		ВЫБОР
	|			КОГДА ДебиторскаяЗадолженность.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьРасчетыСПоставщиком
	|ПОМЕСТИТЬ ТипыДебиторки
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВзаимозачетЗадолженности.ДебиторскаяЗадолженность КАК ДебиторскаяЗадолженность
	|		ПО ДанныеДокумента.Ссылка = ДебиторскаяЗадолженность.Ссылка
	|ГДЕ
	|	ДебиторскаяЗадолженность.ТипРасчетов <> ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка,
	|	МАКСИМУМ(
	|		ВЫБОР
	|			КОГДА КредиторскаяЗадолженность.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьРасчетыСКлиентом,
	|	МАКСИМУМ(
	|		ВЫБОР
	|			КОГДА КредиторскаяЗадолженность.ТипРасчетов = ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСПоставщиком)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЕстьРасчетыСПоставщиком
	|ПОМЕСТИТЬ ТипыКредиторки
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВзаимозачетЗадолженности.КредиторскаяЗадолженность КАК КредиторскаяЗадолженность
	|		ПО ДанныеДокумента.Ссылка = КредиторскаяЗадолженность.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка,
	|	ВЫБОР
	|		КОГДА ТипыДебиторки.Ссылка ЕСТЬ NULL
	|				ИЛИ ТипыДебиторки.ЕстьРасчетыСКлиентом И НЕ ТипыДебиторки.ЕстьРасчетыСПоставщиком
	|			ТОГДА
	|				ВЫБОР КОГДА ДанныеДокумента.РасчетыМеждуОрганизациямиДебитор
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыУчастниковВзаимозачета.ОрганизацияКлиент)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыУчастниковВзаимозачета.Клиент)
	|				КОНЕЦ
	|		КОГДА ТипыДебиторки.ЕстьРасчетыСПоставщиком И НЕ ТипыДебиторки.ЕстьРасчетыСКлиентом
	|			ТОГДА
	|				ВЫБОР КОГДА ДанныеДокумента.РасчетыМеждуОрганизациямиДебитор
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыУчастниковВзаимозачета.ОрганизацияПоставщик)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыУчастниковВзаимозачета.Поставщик)
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ДанныеДокумента.РасчетыМеждуОрганизациямиДебитор
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыУчастниковВзаимозачета.ОрганизацияКлиент)
	|				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыУчастниковВзаимозачета.Клиент)
	|			  КОНЕЦ
	|	КОНЕЦ КАК ТипДебитора,
	|	ВЫБОР
	|		КОГДА ТипыКредиторки.Ссылка ЕСТЬ NULL 
	|				ИЛИ ТипыКредиторки.ЕстьРасчетыСКлиентом И НЕ ТипыКредиторки.ЕстьРасчетыСПоставщиком
	|			ТОГДА
	|				ВЫБОР КОГДА ДанныеДокумента.РасчетыМеждуОрганизациямиКредитор
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыУчастниковВзаимозачета.ОрганизацияКлиент)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыУчастниковВзаимозачета.Клиент)
	|				КОНЕЦ
	|		КОГДА ТипыКредиторки.ЕстьРасчетыСПоставщиком И НЕ ТипыКредиторки.ЕстьРасчетыСКлиентом
	|			ТОГДА
	|				ВЫБОР КОГДА ДанныеДокумента.РасчетыМеждуОрганизациямиКредитор
	|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыУчастниковВзаимозачета.ОрганизацияПоставщик)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыУчастниковВзаимозачета.Поставщик)
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР КОГДА ДанныеДокумента.РасчетыМеждуОрганизациямиКредитор
	|				    ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыУчастниковВзаимозачета.ОрганизацияПоставщик)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыУчастниковВзаимозачета.Поставщик)
	|			  КОНЕЦ
	|	КОНЕЦ КАК ТипКредитора
	|ИЗ
	|	ДанныеДокумента КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТипыДебиторки КАК ТипыДебиторки
	|		ПО ДанныеДокумента.Ссылка = ТипыДебиторки.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТипыКредиторки КАК ТипыКредиторки
	|		ПО ДанныеДокумента.Ссылка = ТипыКредиторки.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДанныеДокумента.Дата УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДокументы = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДокументы.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Документ.ВзаимозачетЗадолженности");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаДокументы.Ссылка);
			Блокировка.Заблокировать();
			
			ДокОбъект = ВыборкаДокументы.Ссылка.ПолучитьОбъект();
			
			Если ДокОбъект = Неопределено Тогда
				ОтменитьТранзакцию();
				Продолжить;
			КонецЕсли;
			
			ДокОбъект.ВидОперации = Перечисления.ВидыОперацийВзаимозачетаЗадолженности.Произвольный;
			ДокОбъект.ТипДебитора = ВыборкаДокументы.ТипДебитора;
			ДокОбъект.ТипКредитора = ВыборкаДокументы.ТипКредитора;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокОбъект);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru='Не удалось обработать %Документ% по причине: %Причина%';uk='Не вдалося обробити %Документ% з причини: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", ВыборкаДокументы.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
			ВыборкаДокументы.Ссылка.Метаданные(), ВыборкаДокументы.Ссылка, ТекстСообщения);
			
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = Не ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(Параметры.Очередь, ПолноеИмяОбъекта);
	
КонецПроцедуры




#КонецОбласти

#КонецОбласти

#КонецЕсли
