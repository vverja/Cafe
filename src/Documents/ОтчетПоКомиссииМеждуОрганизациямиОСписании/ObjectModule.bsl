#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
 	Менеджер = Пользователи.ТекущийПользователь();
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
	   И ДанныеЗаполнения.Свойство("ЗаполнятьПоТоварамКОформлению") Тогда
	   
		Комиссионер = ДанныеЗаполнения.Комиссионер;
		Валюта = ДанныеЗаполнения.Валюта;
		Организация = ДанныеЗаполнения.Организация;
		НачалоПериода = ДанныеЗаполнения.НачалоПериода;
		КонецПериода = ДанныеЗаполнения.КонецПериода;
		Если ТекущаяДата() > КонецМесяца(КонецПериода) Тогда
			Дата = КонецПериода;
		КонецЕсли;
		ЗаполнитьТоварыПоОстаткамКОформлению(ДанныеЗаполнения.КонецПериода);
		
	КонецЕсли;
	
	ИнициализироватьДокумент(ДанныеЗаполнения);
	
	ЗаполнениеСвойствПоСтатистикеСервер.ЗаполнитьСвойстваОбъекта(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Перем МассивВсехРеквизитов;
	Перем МассивРеквизитовОперации;
	
	ПроверитьОрганизации(Отказ);

	МассивНепроверяемыхРеквизитов = Новый Массив;
	Если Не РасчетыЧерезОтдельногоКонтрагента Тогда
		МассивНепроверяемыхРеквизитов.Добавить("Партнер");
		МассивНепроверяемыхРеквизитов.Добавить("Контрагент");
	КонецЕсли;
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, МассивНепроверяемыхРеквизитов, Отказ);

	ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациямиОСписании;
	Если ЗначениеЗаполнено(НаправлениеДеятельности) 
		ИЛИ НЕ НаправленияДеятельностиСервер.УказаниеНаправленияДеятельностиОбязательно(ХозяйственнаяОперация) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НаправлениеДеятельности");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(
		ПроверяемыеРеквизиты,
		МассивНепроверяемыхРеквизитов);

	ОбщегоНазначенияУТ.ПроверитьЗаполнениеКоличества(ЭтотОбъект, ПроверяемыеРеквизиты, Отказ);
	ВзаиморасчетыСервер.ПроверитьДатуПлатежа(ЭтотОбъект, Отказ);
	КомиссионнаяТорговляСервер.ПроверитьКорректностьПериода(ЭтотОбъект, Отказ);
																							
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);

	ПроведениеСервер.УстановитьРежимПроведения(ЭтотОбъект, РежимЗаписи, РежимПроведения);

	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ОбщегоНазначенияУТ.ОкруглитьКоличествоШтучныхТоваров(ЭтотОбъект, РежимЗаписи);
	
	РасчетСуммаДокумента = Товары.Итог("Сумма");
	Если СуммаДокумента <> РасчетСуммаДокумента Тогда
		СуммаДокумента = РасчетСуммаДокумента;
	КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		ЗаполнитьАналитикиУчетаНоменклатуры();
		ЗаполнитьВидыЗапасов(Отказ);
		ВзаиморасчетыСервер.ЗаполнитьИдентификаторыСтрокВТабличнойЧасти(ВидыЗапасов);
		
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		Если Не ВидыЗапасовУказаныВручную Тогда
			ВидыЗапасов.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	Если РасчетыЧерезОтдельногоКонтрагента И Организация <> Справочники.Организации.УправленческаяОрганизация Тогда
		Если Не ЗначениеЗаполнено(ДатаВходящегоДокумента) Тогда
			ДатаВходящегоДокумента = НачалоДня(Дата);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(НомерВходящегоДокумента) Тогда
			НомерВходящегоДокумента = Номер;
		КонецЕсли;
	Иначе
		Если ЗначениеЗаполнено(ДатаВходящегоДокумента) Тогда
			ДатаВходящегоДокумента = Неопределено;
		КонецЕсли;
		Если ЗначениеЗаполнено(НомерВходящегоДокумента) Тогда
			НомерВходящегоДокумента = "";
		КонецЕсли;
	КонецЕсли;
		
	Если Не РасчетыЧерезОтдельногоКонтрагента Тогда
		Если ЗначениеЗаполнено(Партнер) Тогда
			Партнер = Неопределено;
		КонецЕсли;
		Если ЗначениеЗаполнено(Контрагент) Тогда
			Контрагент = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	// Очистим реквизиты документа не используемые для способа расчета вознаграждения.
	МассивВсехРеквизитов = Новый Массив;
	МассивРеквизитовОперации = Новый Массив;
	ДенежныеСредстваСервер.ОчиститьНеиспользуемыеРеквизиты(
		ЭтотОбъект,
		МассивВсехРеквизитов,
		МассивРеквизитовОперации);
	
	ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПоЗаказамНакладным;
	
	Если ЭтоНовый() И НЕ ЗначениеЗаполнено(Номер) Тогда
		УстановитьНовыйНомер();
	КонецЕсли;

	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	Документы.ОтчетПоКомиссииМеждуОрганизациямиОСписании.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	ЗапасыСервер.ОтразитьТоварыПереданныеНаКомиссию(ДополнительныеСвойства, Движения, Отказ);
	ЗапасыСервер.ОтразитьТоварыКОформлениюОтчетовКомитента(ДополнительныеСвойства, Движения, Отказ);
	
	ДоходыИРасходыСервер.ОтразитьСебестоимостьТоваров(ДополнительныеСвойства, Движения, Отказ);
	ДоходыИРасходыСервер.ОтразитьПрочиеДоходы(ДополнительныеСвойства, Движения, Отказ);
	ПартионныйУчетСервер.ОтразитьПартииТоваровОрганизаций(ДополнительныеСвойства, Движения, Отказ);
	
	ВзаиморасчетыСервер.ОтразитьСуммыДокументаВВалютеРегл(ДополнительныеСвойства, Движения, Отказ);
	ВзаиморасчетыСервер.ОтразитьРасчетыСКлиентами(ДополнительныеСвойства, Движения, Отказ);
	ВзаиморасчетыСервер.ОтразитьРасчетыСПоставщиками(ДополнительныеСвойства, Движения, Отказ);
	

	// Движения по оборотным регистрам управленческого учета
	УправленческийУчетПроведениеСервер.ОтразитьДвиженияНоменклатураДоходыРасходы(ДополнительныеСвойства, Движения, Отказ);
	УправленческийУчетПроведениеСервер.ОтразитьДвиженияКонтрагентДоходыРасходы(ДополнительныеСвойства, Движения, Отказ);
	
	УправленческийУчетПроведениеСервер.ОтразитьЗакупки(ДополнительныеСвойства, Движения, Отказ);
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);

	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);

	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);

	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение

Процедура ЗаполнитьТоварыПоОстаткамКОформлению(ДатаЗаполнения) Экспорт
	
	Структура = Новый Структура("Дата, НачалоПериода, КонецПериода, Организация, Партнер, Соглашение, Валюта, ЦенаВключаетНДС, Товары",
		Дата,
		НачалоПериода,
		КонецПериода,
		Комиссионер,
		Организация,
		Неопределено, // Соглашение,
		Валюта,
		ЦенаВключаетНДС,
		Товары);
		
	КомиссионнаяТорговляСервер.ЗаполнитьТоварыПоОстаткамКОформлениюОтчетовКомитентуОСписании(
		Структура,
		НДСОбщегоНазначенияСервер.ПолучитьНалогообложениеНДС(Организация, Комиссионер, Дата, Истина) // НалогообложениеНДС
	);
		
	Если Не ЗначениеЗаполнено(ВидЦены) Тогда
		ВидЦены = Справочники.ВидыЦен.ВидЦеныПоУмолчанию(ВидЦены, Новый Структура("ИспользоватьПриПередачеМеждуОрганизациями", Истина));
	КонецЕсли;
	Если ЗначениеЗаполнено(ВидЦены) Тогда
		Реквизиты = Справочники.ВидыЦен.ПолучитьРеквизитыВидаЦены(ВидЦены);
		Валюта = Реквизиты.ВалютаЦены;
		ВалютаВзаиморасчетов = Реквизиты.ВалютаЦены;
		ЦенаВключаетНДС = Реквизиты.ЦенаВключаетНДС;
	
		СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(ЭтотОбъект);
		ПродажиСервер.ЗаполнитьЦены(
			Товары,
			, // Массив строк или структура отбора
			Новый Структура( // Параметры заполнения
				"Дата, Валюта, ВидЦены, ПоляЗаполнения",
				Дата,
				Валюта,
				ВидЦены,
				"Цена, ВидЦены"
			),
			Новый Структура( // Структура действий с измененными строками
				"ПересчитатьСумму, ПересчитатьСуммуСНДС, ПересчитатьСуммуНДС",
				"КоличествоУпаковок", СтруктураПересчетаСуммы, СтруктураПересчетаСуммы));
	КонецЕсли;
	
КонецПроцедуры

Процедура ИнициализироватьДокумент(ДанныеЗаполнения = Неопределено)

	Организация		= ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
    Валюта 			= ЗначениеНастроекПовтИсп.ПолучитьВалютуРегламентированногоУчета(Валюта);
	ВидЦены			= Справочники.ВидыЦен.ВидЦеныПоУмолчанию(ВидЦены, 
						Новый Структура("ИспользоватьПриПередачеМеждуОрганизациями", Истина));
	
 	ПорядокОплаты			= Перечисления.ПорядокОплатыПоСоглашениям.ПолучитьПорядокОплатыПоУмолчанию(Валюта);
	ГруппаФинансовогоУчета	= Справочники.ГруппыФинансовогоУчетаРасчетов.ПолучитьГруппуФинансовогоУчетаПоУмолчанию(ПорядокОплаты);
	ПредставительОрганизации          = Менеджер.ФизическоеЛицо;
	ПредставительОрганизацииДолжность = ДолжностиДляПечатиКлиентСервер.ДолжностьФизическогоЛица(ПредставительОрганизации, Организация, Дата);
 	
КонецПроцедуры

#КонецОбласти

#Область ВидыЗапасов

Процедура ЗаполнитьАналитикиУчетаНоменклатуры()
	
	МестаУчета = РегистрыСведений.АналитикаУчетаНоменклатуры.МестаУчета(
		Перечисления.ХозяйственныеОперации.ОтчетКомитенту,
		Неопределено,
		Подразделение,
		Организация);
	
	ИменаПолей = РегистрыСведений.АналитикаУчетаНоменклатуры.ИменаПолейКоллекцииПоУмолчанию();
	ИменаПолей.СтатусУказанияСерий = "";
	
	РегистрыСведений.АналитикаУчетаНоменклатуры.ЗаполнитьВКоллекции(
		Товары,
		МестаУчета,
		ИменаПолей);
	
КонецПроцедуры

Процедура ЗаполнитьВидыЗапасов(Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерВременныхТаблиц = ВременныеТаблицыДанныхДокумента();
	ПерезаполнитьВидыЗапасов = ДополнительныеСвойства.Свойство("ПерезаполнитьВидыЗапасов");
	Если Не Проведен
	 ИЛИ ПерезаполнитьВидыЗапасов
	 ИЛИ РеквизитыДокументаИзменились(МенеджерВременныхТаблиц)
	 ИЛИ ИзмениласьТЧТоварыОтносительноТЧВидыЗапасов(МенеджерВременныхТаблиц) Тогда
	 
		СформироватьДоступныеВидыЗапасов(МенеджерВременныхТаблиц);
		ЗапасыСервер.ТаблицаОстатковКомиссионныхТоваровИнтеркампани(
			Комиссионер,
			НачалоПериода,
			?(ЗначениеЗаполнено(КонецПериода), КонецДня(КонецПериода), КонецМесяца(Дата)),
			МенеджерВременныхТаблиц,
			Ссылка,
			Истина);
		
		ТаблицаОшибок = ЗапасыСервер.ТаблицаОшибокЗаполненияВидовЗапасов();
		ЗначенияПолейВидаЗапасов = ЗначенияПолейВидаЗапасовПоУмолчанию();
		ВидыЗапасов.Очистить();

		ЗапасыСервер.ЗаполнитьВидыЗапасовИнтеркампаниОтчетаПоКомиссии(
			МенеджерВременныхТаблиц,
			ДополнительныеСвойства,
			ВидыЗапасов,
			ТаблицаОшибок,
			Отказ,
			ЗначенияПолейВидаЗапасов);
		ДозаполнитьВидыЗапасов(МенеджерВременныхТаблиц);
		СообщитьОбОшибкахЗаполненияВидовЗапасов(ТаблицаОшибок);
	КонецЕсли;
	
КонецПроцедуры

Функция ВременныеТаблицыДанныхДокумента()
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	&Дата КАК Дата,
	|	&Организация КАК Организация,
	|	&Комиссионер КАК Комиссионер,
	|	Неопределено КАК Партнер,
	|	Неопределено КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.СоглашенияСПоставщиками.ПустаяСсылка) КАК Соглашение,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	&НалоговоеНазначениеОрганизации КАК НалоговоеНазначениеОрганизации,
	|	&Валюта КАК Валюта,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями) КАК ХозяйственнаяОперация,
	|	Ложь КАК ЕстьСделкиВТабличнойЧасти
	|ПОМЕСТИТЬ ТаблицаДанныхДокумента
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Упаковка КАК Упаковка,
	|	ТаблицаТоваров.Количество КАК Количество,
	|	ТаблицаТоваров.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|   ВЫБОР 
	|   	КОГДА НЕ &ОрганизацияПлательщикНДС 
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|		КОГДА ТаблицаТоваров.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) 
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|		КОГДА ТаблицаТоваров.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НеНДС) 
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|		ИНАЧЕ
	|   		ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая)
	|	КОНЕЦ КАК ЦелевоеНалоговоеНазначение,
	|	ТаблицаТоваров.НалоговоеНазначениеСписания КАК НалоговоеНазначениеСписания,
 	|	ТаблицаТоваров.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	ИСТИНА КАК ПодбиратьВидыЗапасов
	|ПОМЕСТИТЬ ВтТаблицаТоваров
	|ИЗ
	|	&ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Упаковка КАК Упаковка,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ТаблицаТоваров.Количество КАК Количество,
	|	ТаблицаТоваров.КоличествоУпаковок КАК КоличествоУпаковок,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДСПродажи,
	|	ТаблицаТоваров.ЦелевоеНалоговоеНазначение КАК ЦелевоеНалоговоеНазначение,
	|	ТаблицаТоваров.НалоговоеНазначениеСписания КАК НалоговоеНазначениеСписания,
	|	ТаблицаТоваров.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|	0 КАК СуммаВознаграждения,
	|	0 КАК СуммаНДСВознаграждения,
	|	ТаблицаТоваров.Склад КАК Склад,
	|	ТаблицаТоваров.Сделка КАК Сделка,
	|	ТаблицаТоваров.Назначение КАК Назначение,
	|	ТаблицаТоваров.ПодбиратьВидыЗапасов КАК ПодбиратьВидыЗапасов
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	ВтТаблицаТоваров КАК ТаблицаТоваров
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|	ПО ТаблицаТоваров.Номенклатура = СправочникНоменклатура.Ссылка
	|ГДЕ
	|	СправочникНоменклатура.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	&ВидыЗапасовУказаныВручную КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	&ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Серия КАК Серия,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС,
	|	0 КАК СуммаВознаграждения,
	|	0 КАК СуммаНДСВознаграждения,
	|	ТаблицаВидыЗапасов.СкладОтгрузки КАК СкладОтгрузки,
	|	ТаблицаВидыЗапасов.Склад КАК Склад,
	|	ТаблицаВидыЗапасов.Сделка КАК Сделка,
	|	ТаблицаВидыЗапасов.ВидыЗапасовУказаныВручную КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ТаблицаВидыЗапасов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|");
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Комиссионер", Комиссионер);
	Запрос.УстановитьПараметр("Валюта", Валюта);
	Запрос.УстановитьПараметр("ВидыЗапасовУказаныВручную", ВидыЗапасовУказаныВручную);
	Запрос.УстановитьПараметр("ТаблицаТоваров", ЗапасыСервер.ТаблицаДополненнаяОбязательнымиКолонками(Товары.Выгрузить()));
	Запрос.УстановитьПараметр("ТаблицаВидыЗапасов", ЗапасыСервер.ТаблицаДополненнаяОбязательнымиКолонками(ВидыЗапасов.Выгрузить()));
	Запрос.УстановитьПараметр("НалоговоеНазначениеОрганизации", НДСОбщегоНазначенияСервер.ПолучитьНалоговоеНазначениеНДС(Организация, Контрагент, Дата, Истина));
	Запрос.УстановитьПараметр("ОрганизацияПлательщикНДС",       НДСОбщегоНазначенияСервер.ОрганизацияПлательщикНДС(Организация, Дата));
 	
	Запрос.Выполнить();
	
	Возврат МенеджерВременныхТаблиц;
	
КонецФункции

Функция РеквизитыДокументаИзменились(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Организация,
	|	НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ) КАК НачалоМесяца,
	|	ДанныеДокумента.Комиссионер,
	|	ДанныеДокумента.Валюта
	|
	|ПОМЕСТИТЬ СохраненныеДанныеДокумента
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА ДанныеДокумента.Организация <> СохраненныеДанные.Организация ТОГДА
	|		Истина
	|	КОГДА НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ) <> СохраненныеДанные.НачалоМесяца ТОГДА
	|		Истина
	|	КОГДА ДанныеДокумента.Комиссионер <> СохраненныеДанные.Комиссионер ТОГДА
	|		Истина
	|	КОГДА ДанныеДокумента.Валюта <> СохраненныеДанные.Валюта ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК РеквизитыИзменены
	|ИЗ
	|	ТаблицаДанныхДокумента КАК ДанныеДокумента
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СохраненныеДанныеДокумента КАК СохраненныеДанные
	|	ПО
	|		Истина
	|");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		РеквизитыИзменены = Выборка.РеквизитыИзменены;
	Иначе
		РеквизитыИзменены = Ложь;
	КонецЕсли;
	
	Возврат РеквизитыИзменены;
	
КонецФункции

Функция ИзмениласьТЧТоварыОтносительноТЧВидыЗапасов(МенеджерВременныхТаблиц)	
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ИЗ (
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|   	ВЫБОР 
	|			КОГДА НЕ &ОрганизацияПлательщикНДС 
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность) 
	|			КОГДА ТаблицаТоваров.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) 
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|			КОГДА ТаблицаТоваров.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НеНДС) 
	|				ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая)
	|		КОНЕЦ КАК НалоговоеНазначение,
	|		ТаблицаТоваров.Количество КАК Количество,
	|		ТаблицаТоваров.СуммаСНДС КАК СуммаСНДС,
	|		ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|		ТаблицаТоваров.СуммаВознаграждения КАК СуммаВознаграждения,
	|		ТаблицаТоваров.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения
	|	ИЗ
	|		ТаблицаТоваров КАК ТаблицаТоваров
	|	ГДЕ
	|		ТаблицаТоваров.Номенклатура.ТипНоменклатуры В
	|			(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|		ТаблицаВидыЗапасов.ВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
	|		-ТаблицаВидыЗапасов.Количество КАК Количество,
	|		-ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаСНДС,
	|		-ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС,
	|		-ТаблицаВидыЗапасов.СуммаВознаграждения КАК СуммаВознаграждения,
	|		-ТаблицаВидыЗапасов.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|	) КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.СтавкаНДС,
	|	ТаблицаТоваров.НалоговоеНазначение
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаТоваров.Количество) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаСНДС) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаНДС) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаВознаграждения) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаНДСВознаграждения) <> 0
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ОрганизацияПлательщикНДС", НДСОбщегоНазначенияСервер.ОрганизацияПлательщикНДС(Организация, Дата));
 
	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции

Процедура СформироватьДоступныеВидыЗапасов(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос("
	|///////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов,
	|	ВидыЗапасов.Ссылка КАК ВидЗапасовПродавца
	|
	|ПОМЕСТИТЬ ДоступныеВидыЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.Организация = &Комиссионер
	|	И ВидыЗапасов.Комитент = &Комитент
	|	И ВидыЗапасов.Валюта = &Валюта
	|	И ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|");
	Запрос.УстановитьПараметр("Комиссионер", Комиссионер);
	Запрос.УстановитьПараметр("Комитент", Организация);
	Запрос.УстановитьПараметр("Валюта", Валюта);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СообщитьОбОшибкахЗаполненияВидовЗапасов(ТаблицаОшибок)
	
	Для Каждого СтрокаТаблицы Из ТаблицаОшибок Цикл
		
		Если СтрокаТаблицы.Количество <> 0 Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Номенклатура: %1 
                |Отчет по комиссии превышает остаток товара комитента %2, реализованного комиссионером %3, на %4 %5'
                |;uk='Номенклатура: %1 
                |Звіт по комісії перевищує залишок товару комітента %2, реалізованого комісіонером %3, на %4 %5'"),
				НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрокаТаблицы.Номенклатура, СтрокаТаблицы.Характеристика),
				Организация,
				Комиссионер,
				СтрокаТаблицы.Количество,
				СтрокаТаблицы.ЕдиницаИзмерения);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				Ссылка);
		КонецЕсли;
		
		Если СтрокаТаблицы.Сумма <> 0 Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Номенклатура: %1 
                |Сумма продажи превышает сумму реализованного товара комиccионером %2, на %3 %4'
                |;uk='Номенклатура: %1 
                |Сума продажу перевищує суму реалізованого товару комісіонером %2, на %3 %4'"),
				НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрокаТаблицы.Номенклатура, СтрокаТаблицы.Характеристика),
				Комиссионер,
				СтрокаТаблицы.Сумма,
				Валюта);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				Ссылка);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьОрганизации(Отказ)
	
	Если ЗначениеЗаполнено(Организация)
		И ЗначениеЗаполнено(Комиссионер) Тогда
		
		Если Организация = Комиссионер Тогда
			
			Текст = НСтр("ru='Одна и та же организация не может являться комитентом и комиссионером одновременно';uk='Одна і та ж організація не може бути комітентом і комісіонером одночасно'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ЭтотОбъект,
				"Организация",
				,
				Отказ);
			
		ИначеЕсли ПолучитьФункциональнуюОпцию("ИспользоватьОбособленныеПодразделенияВыделенныеНаБаланс")
			И Справочники.Организации.ОрганизацииВзаимосвязаныПоОрганизациционнойСтруктуре(Организация, Комиссионер) Тогда
		
			Текст = НСтр("ru='Организация-получатель не должна быть взаимосвязана с организацией-отправителем по организационной структуре.';uk='Організація-одержувач не повинна бути взаємопов''язана з організацією-відправником за організаційною структурою.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ЭтотОбъект,
				"Комиссионер",
				,
				Отказ);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДопКолонкиВидовЗапасов() Экспорт
	
	ТаблицаТовары = Товары.Выгрузить(, "АналитикаУчетаНоменклатуры, Упаковка, Количество, КоличествоУпаковок, СуммаПродажи, СуммаПродажиНДС, СуммаВознаграждения, СуммаНДСВознаграждения");
	ТаблицаТовары.Свернуть("АналитикаУчетаНоменклатуры, Упаковка", "Количество, КоличествоУпаковок, СуммаПродажи, СуммаПродажиНДС, СуммаВознаграждения, СуммаНДСВознаграждения");
	
	СтруктураПоиска = Новый Структура("АналитикаУчетаНоменклатуры");
	Для Каждого СтрокаТоваров Из ТаблицаТовары Цикл
		
		КоличествоТоваровПоСтроке = СтрокаТоваров.Количество;
		КоличествоУпаковокПоСтроке = СтрокаТоваров.КоличествоУпаковок;
		СуммаСНДСПоСтроке = СтрокаТоваров.СуммаПродажи;
		СуммаНДСПоСтроке = СтрокаТоваров.СуммаПродажиНДС;
		СуммаВознагражденияПоСтроке = СтрокаТоваров.СуммаВознаграждения;
		СуммаНДСВознагражденияПоСтроке = СтрокаТоваров.СуммаНДСВознаграждения;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТоваров);
		Для Каждого СтрокаЗапасов Из ВидыЗапасов.НайтиСтроки(СтруктураПоиска) Цикл
			
			Если СтрокаЗапасов.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если СтрокаЗапасов.Количество > 0 Тогда
				Количество = Мин(КоличествоТоваровПоСтроке, СтрокаЗапасов.Количество);
			Иначе
				Количество = Макс(КоличествоТоваровПоСтроке, СтрокаЗапасов.Количество);
			КонецЕсли;
			
			НоваяСтрока = ВидыЗапасов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
			
			НоваяСтрока.Упаковка = СтрокаТоваров.Упаковка;
			НоваяСтрока.КоличествоУпаковок = ?(КоличествоУпаковокПоСтроке <> 0, КоличествоУпаковокПоСтроке * Количество / КоличествоТоваровПоСтроке, 0);
			НоваяСтрока.Количество = Количество;
			
			Если СтрокаЗапасов.Количество > 0 Тогда
				НоваяСтрока.СуммаСНДС = Мин(СуммаСНДСПоСтроке, СтрокаЗапасов.СуммаСНДС);
				НоваяСтрока.СуммаНДС = Мин(СуммаНДСПоСтроке, СтрокаЗапасов.СуммаНДС);
				НоваяСтрока.СуммаВознаграждения = Мин(СуммаВознагражденияПоСтроке, СтрокаЗапасов.СуммаВознаграждения);
				НоваяСтрока.СуммаНДСВознаграждения = Мин(СуммаНДСВознагражденияПоСтроке, СтрокаЗапасов.СуммаНДСВознаграждения);
			Иначе
				НоваяСтрока.СуммаСНДС = Макс(СуммаСНДСПоСтроке, СтрокаЗапасов.СуммаСНДС);
				НоваяСтрока.СуммаНДС = Макс(СуммаНДСПоСтроке, СтрокаЗапасов.СуммаНДС);
				НоваяСтрока.СуммаВознаграждения = Макс(СуммаВознагражденияПоСтроке, СтрокаЗапасов.СуммаВознаграждения);
				НоваяСтрока.СуммаНДСВознаграждения = Макс(СуммаНДСВознагражденияПоСтроке, СтрокаЗапасов.СуммаНДСВознаграждения);
			КонецЕсли;
			
			СтрокаЗапасов.Количество = СтрокаЗапасов.Количество - НоваяСтрока.Количество;
			СтрокаЗапасов.СуммаСНДС = СтрокаЗапасов.СуммаСНДС - НоваяСтрока.СуммаСНДС;
			СтрокаЗапасов.СуммаНДС = СтрокаЗапасов.СуммаНДС - НоваяСтрока.СуммаНДС;
			СтрокаЗапасов.СуммаВознаграждения = СтрокаЗапасов.СуммаВознаграждения - НоваяСтрока.СуммаВознаграждения;
			СтрокаЗапасов.СуммаНДСВознаграждения = СтрокаЗапасов.СуммаНДСВознаграждения - НоваяСтрока.СуммаНДСВознаграждения;
			
			КоличествоТоваровПоСтроке = КоличествоТоваровПоСтроке - НоваяСтрока.Количество;
			КоличествоУпаковокПоСтроке = КоличествоУпаковокПоСтроке - НоваяСтрока.КоличествоУпаковок;
			СуммаСНДСПоСтроке = СуммаСНДСПоСтроке - НоваяСтрока.СуммаСНДС;
			СуммаНДСПоСтроке = СуммаНДСПоСтроке - НоваяСтрока.СуммаНДС;
			СуммаВознагражденияПоСтроке = СуммаВознагражденияПоСтроке - НоваяСтрока.СуммаВознаграждения;
			СуммаНДСВознагражденияПоСтроке = СуммаНДСВознагражденияПоСтроке - НоваяСтрока.СуммаНДСВознаграждения;
			
			Если КоличествоТоваровПоСтроке = 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	МассивУдаляемыхСтрок = ВидыЗапасов.НайтиСтроки(Новый Структура("Количество", 0));
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		ВидыЗапасов.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

Функция ЗначенияПолейВидаЗапасовПоУмолчанию()
	ЗначенияПоУмолчанию = Новый Структура("
		|ГруппаФинансовогоУчета,
		|ОбособленныйУчетТоваровПоСделке,
		|ВариантОбособленногоУчетаТоваров,
		|Назначение,
		|Поставщик,
		|Контрагент,
		|Соглашение,
		|Договор,
		|Валюта,
		|Организация
		|");
	
	ЗначенияПоУмолчанию.ГруппаФинансовогоУчета				= Справочники.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка();
	ЗначенияПоУмолчанию.ОбособленныйУчетТоваровПоСделке		= Ложь;
	ЗначенияПоУмолчанию.ВариантОбособленногоУчетаТоваров	= Неопределено;
	ЗначенияПоУмолчанию.Назначение							= Справочники.Назначения.ПустаяСсылка();
	ЗначенияПоУмолчанию.Поставщик							= Организация;
	ЗначенияПоУмолчанию.Контрагент							= Неопределено;
	ЗначенияПоУмолчанию.Соглашение							= Неопределено;
	ЗначенияПоУмолчанию.Договор								= Неопределено;
	ЗначенияПоУмолчанию.Валюта								= Валюта;
	ЗначенияПоУмолчанию.Организация							= Организация;
	
	Возврат ЗначенияПоУмолчанию;
КонецФункции

Процедура ДозаполнитьВидыЗапасов(ВременныеТаблицы)
	
	Запрос = Новый Запрос("УНИЧТОЖИТЬ Остатки");
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	Запрос.Выполнить();
	
	ЗапасыСервер.ТаблицаОстатковТоваровПереданныхНаКомиссию(
		Ссылка,
		Организация,
		Комиссионер,
		Справочники.СоглашенияСКлиентами.ПустаяСсылка(),
		?(ЗначениеЗаполнено(КонецПериода), КонецДня(КонецПериода), КонецМесяца(Дата)),
		ДополнительныеСвойства,
		ВременныеТаблицы);
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Запасы.АналитикаУчетаНоменклатуры,
	|	Запасы.НомерГТД
	|ПОМЕСТИТЬ Запасы
	|ИЗ
	|	&ВидыЗапасов КАК Запасы
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Запасы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Запасы.НомерГТД КАК НомерГТД
	|ПОМЕСТИТЬ ОтборОстатков
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналитикаКомиссионера.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	Остатки.ВидЗапасов                  КАК ВидЗапасовКомитента,
	|	Остатки.НомерГТД                    КАК НомерГТД,
	|	ВЫБОР КОГДА Остатки.КоличествоОстаток < 0 
	|		ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ                               КАК Знак,
	|	ВЫБОР КОГДА Остатки.КоличествоОстаток < 0 
	|		ТОГДА 0 - Остатки.КоличествоОстаток
	|		ИНАЧЕ Остатки.КоличествоОстаток
	|	КОНЕЦ                               КАК Количество
	|ИЗ
	|	ТаблицаОстатков КАК Остатки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО Остатки.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомиссионера
	|	ПО Аналитика.Номенклатура = АналитикаКомиссионера.Номенклатура
	|		И Аналитика.Характеристика = АналитикаКомиссионера.Характеристика
	|		И Аналитика.Серия = АналитикаКомиссионера.Серия
	|		И АналитикаКомиссионера.Склад = &Организация
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборОстатков КАК Отбор
	|	ПО АналитикаКомиссионера.КлючАналитики = Отбор.АналитикаУчетаНоменклатуры
	|		И Остатки.НомерГТД = Отбор.НомерГТД
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Остатки.НомерГТД,
	|	Остатки.КоличествоОстаток ВОЗР
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|");
	Запрос.УстановитьПараметр("ВидыЗапасов", ВидыЗапасов.Выгрузить());
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	// Временная таблица "Запасы" - МассивРезультатов[0]
	// Временная таблица "ОтборОстатков" - МассивРезультатов[1]
	ТаблицаОстатков = МассивРезультатов[2].Выгрузить();
	
	ВидыЗапасов.Сортировать("АналитикаУчетаНоменклатуры, НомерГТД, Количество ВОЗР");
	
	СтруктураПоиска = Новый Структура("АналитикаУчетаНоменклатуры, НомерГТД");
	Для Каждого СтрокаОстатка Из ТаблицаОстатков Цикл
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаОстатка);
		Для Каждого СтрокаЗапасов Из ВидыЗапасов.НайтиСтроки(СтруктураПоиска) Цикл
			Если СтрокаЗапасов.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			Количество = ?(СтрокаЗапасов.Количество < 0, -СтрокаЗапасов.Количество, СтрокаЗапасов.Количество);
			Знак = ?(СтрокаЗапасов.Количество < 0, -1, 1);
			Если СтрокаОстатка.Количество >= Количество ИЛИ (СтрокаОстатка.Знак <> Знак) Тогда
				СтрокаЗапасов.ВидЗапасовКомитента = СтрокаОстатка.ВидЗапасовКомитента;
				Если СтрокаОстатка.Знак = Знак Тогда
					СтрокаОстатка.Количество = СтрокаОстатка.Количество - Количество;
				Иначе
					СтрокаОстатка.Количество = СтрокаОстатка.Количество + Количество;
				КонецЕсли;
				
			ИначеЕсли СтрокаОстатка.Количество < Количество Тогда
				НоваяСтрока = ВидыЗапасов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
				НоваяСтрока.ВидЗапасовКомитента = СтрокаОстатка.ВидЗапасовКомитента;
				НоваяСтрока.СуммаСНДС = Окр(СтрокаОстатка.Количество * СтрокаЗапасов.СуммаСНДС / СтрокаЗапасов.Количество, 2, 1) * СтрокаОстатка.Знак;
				НоваяСтрока.СуммаНДС = Окр(СтрокаОстатка.Количество * СтрокаЗапасов.СуммаНДС / СтрокаЗапасов.Количество, 2, 1) * СтрокаОстатка.Знак;
				НоваяСтрока.КоличествоУпаковок = Окр(СтрокаОстатка.Количество * СтрокаЗапасов.КоличествоУпаковок / СтрокаЗапасов.Количество, 2, 1) * СтрокаОстатка.Знак;
				НоваяСтрока.Количество = СтрокаОстатка.Количество * СтрокаОстатка.Знак;
				
				СтрокаЗапасов.СуммаСНДС = СтрокаЗапасов.СуммаСНДС - НоваяСтрока.СуммаСНДС;
				СтрокаЗапасов.СуммаНДС = СтрокаЗапасов.СуммаНДС - НоваяСтрока.СуммаНДС;
				СтрокаЗапасов.КоличествоУпаковок = СтрокаЗапасов.КоличествоУпаковок - НоваяСтрока.КоличествоУпаковок;
				СтрокаЗапасов.Количество = СтрокаЗапасов.Количество - НоваяСтрока.Количество;
				
				СтрокаОстатка.Количество = 0;
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	МассивУдаляемыхСтрок = ВидыЗапасов.НайтиСтроки(Новый Структура("Количество", 0));
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		ВидыЗапасов.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
