
#Область СлужебныеПроцедурыИФункции

// Операция записи данных
// записывает пакет изменений принятых от данного узла
//
// Параметры:
//  КодМобильногоКомпьютера	– код узла, с которым идет обмен
//  ДанныеМобильногоПриложения - ХранилищеЗначения, в которое помещен пакет обмена
//
// Возвращаемое значение:
//  ХранилищеЗначения - содержит структуру ответа
//
Функция ЗаписатьДанные(КодМобильногоКомпьютера, ДанныеМобильногоПриложения)
	
	УзелОбмена = ПланыОбмена.МобильноеПриложениеМониторERP.НайтиПоКоду(КодМобильногоКомпьютера);
	
	Если УзелОбмена.Пустая() Тогда
		ВызватьИсключение(НСтр("ru='Неизвестное устройство - ';uk='Невідомий пристрій - '") + КодМобильногоКомпьютера);
	КонецЕсли;
	
	Возврат МобильноеПриложениеМониторERPСервер.РезультатПриемаПакетаОбмена(УзелОбмена, ДанныеМобильногоПриложения);
КонецФункции

// Операция начала обмена
// проверяет, что нужный узел добавлен в план и правильно инициализирован
//
// Параметры:
//  КодМобильногоКомпьютера	– не изменяемый уникальный идентификатор данного узла, используется как код узла плана обмена
//  НаименованиеМобильногоКомпьютера - читаемое представление данного узла, не обязательно, изменяемое, используется как наименование узла плана обмена
//  НомерОтправленного - номер последнего отправленного пакета, предназначен для восстановления обмена, если узел был удален
//  НомерПринятого - номер последнего принятого пакета, предназначен для восстановления обмена, если узел был удален
//
// Возвращаемое значение:
//  ХранилищеЗначения - содержит структуру ответа
//
Функция НачатьОбмен(КодМобильногоКомпьютера, НаименованиеМобильногоКомпьютера, НомерОтправленного, НомерПринятого, Версия)
	
	СтруктураОтвета = Новый Структура("ОбменРазрешен, СообщениеОбОшибке, УдалитьДанныеНаУстройстве");
	
	СтруктураОтвета.ОбменРазрешен = Истина;
	СтруктураОтвета.СообщениеОбОшибке = "";
	СтруктураОтвета.УдалитьДанныеНаУстройстве = Ложь;
	
	Если Число(Версия) < 2 Тогда
		
		СтруктураОтвета.ОбменРазрешен = Ложь;
		СтруктураОтвета.СообщениеОбОшибке = НСтр("ru='Требуется обновление мобильного приложения!';uk='Необхідне оновлення мобільного додатка!'");
		
		Возврат Новый ХранилищеЗначения(СтруктураОтвета, Новый СжатиеДанных(9));
		
	КонецЕсли;
	
	Если Не ПравоДоступа("Чтение", Метаданные.ПланыОбмена.МобильноеПриложениеМониторERP) Тогда
		
		СтруктураОтвета.ОбменРазрешен = Ложь;
		СтруктураОтвета.СообщениеОбОшибке = НСтр("ru='У пользователя ""';uk='У користувача ""'")
		+ Пользователи.ТекущийПользователь()
		+ НСтр("ru='"" нет прав на синхронизацию данных с приложением 1С';uk='"" немає прав на синхронізацію даних з додатком 1С'");
		
		Возврат Новый ХранилищеЗначения(СтруктураОтвета, Новый СжатиеДанных(9));
		
	КонецЕсли;
	
	СтруктураОтвета.Вставить("РедактированиеПартнеров", ПравоДоступа("Изменение", Метаданные.Справочники.Партнеры));
	
	УстановитьПривилегированныйРежим(Истина);
	
	УзелОбмена = ПланыОбмена.МобильноеПриложениеМониторERP.ЭтотУзел().ПолучитьОбъект();
	Если Не ЗначениеЗаполнено(УзелОбмена.Код) Тогда
		
		УзелОбмена.Код = "001";
		УзелОбмена.Наименование = НСтр("ru='Центральный';uk='Центральний'");
		УзелОбмена.Записать();
		
	КонецЕсли;
	
	УзелОбмена = ПланыОбмена.МобильноеПриложениеМониторERP.НайтиПоКоду(КодМобильногоКомпьютера);
	
	Если УзелОбмена.Пустая() Тогда
		
		НовыйУзел = ПланыОбмена.МобильноеПриложениеМониторERP.СоздатьУзел();
		НовыйУзел.Код = КодМобильногоКомпьютера;
		НовыйУзел.Наименование = НаименованиеМобильногоКомпьютера;
		НовыйУзел.НомерОтправленного = НомерОтправленного;
		НовыйУзел.НомерПринятого = НомерПринятого;
		НовыйУзел.Записать();
		МобильноеПриложениеМониторERPПереопределяемый.ЗарегистрироватьИзмененияДанных(НовыйУзел.Ссылка);
		УзелОбмена = НовыйУзел.Ссылка;
		
	Иначе
		
		Если УзелОбмена.ПометкаУдаления Тогда
			СтруктураОтвета.ОбменРазрешен = Ложь;
			СтруктураОтвета.СообщениеОбОшибке = НСтр("ru='Соединение с устройством запрещено!
            |Данные были очищены!'
            |;uk='З''єднання з пристроєм заборонено!
            |Дані були очищені!'");
			СтруктураОтвета.УдалитьДанныеНаУстройстве = Истина;
			Возврат Новый ХранилищеЗначения(СтруктураОтвета, Новый СжатиеДанных(9));
			
		КонецЕсли;
		
		Если УзелОбмена.Наименование <> НаименованиеМобильногоКомпьютера Тогда
			Узел = УзелОбмена.ПолучитьОбъект();
			Узел.ПометкаУдаления = Ложь;
			Узел.Наименование = НаименованиеМобильногоКомпьютера;
			Узел.Записать();
		КонецЕсли;
		
	КонецЕсли;
	
	СтруктураОтвета.Вставить("MessageNumberIn", УзелОбмена.НомерПринятого);
	СтруктураОтвета.Вставить("MessageNumberOut", УзелОбмена.НомерОтправленного);
		
	Возврат Новый ХранилищеЗначения(СтруктураОтвета, Новый СжатиеДанных(9));
КонецФункции

// Операция получения данных
// получает пакет изменений предназначенных для данного узла
//
// Параметры:
//  КодМобильногоКомпьютера	– код узла, с которым идет обмен
//  ПараметрыОбмена	– параметры, по которым идет обмен
//
// Возвращаемое значение:
//  ХранилищеЗначения, в которое помещен пакет обмена
//
Функция ПолучитьДанные(КодМобильногоКомпьютера, ПараметрыОбмена)
	
	УзелОбмена = ПланыОбмена.МобильноеПриложениеМониторERP.НайтиПоКоду(КодМобильногоКомпьютера);
	
	Если УзелОбмена.Пустая() Тогда
		ВызватьИсключение(НСтр("ru='Неизвестное устройство - ';uk='Невідомий пристрій - '") + КодМобильногоКомпьютера);
	КонецЕсли;
	
	ПереданныеПараметрыОбмена = ПараметрыОбмена.Получить();
	
	ВремяНачала = ТекущаяДата();
	МобильноеПриложениеМониторERPПереопределяемый.ЗарегистрироватьИзмененияДанныхПоПараметрам(УзелОбмена, ПереданныеПараметрыОбмена);
	ВремяКонца  = ТекущаяДата();
	РазностьВремени = ВремяКонца - ВремяНачала;
	
	ПереданныеПараметрыОбмена.Вставить("УзелОбмена", УзелОбмена);
	ПереданныеПараметрыОбмена.Вставить("ВремяНачалаРаботы", РазностьВремени); 
	
	Возврат МобильноеПриложениеМониторERPСервер.ПередаваемыеДанныеОбмена(ПереданныеПараметрыОбмена);
КонецФункции

// Операция получения одного варианта анализа 
// получает результат по одному элементу справочника "Варианты анализа целевых показателей"
//
// Параметры:
//  Вариант	– Уникальный идентификатор справочника "Варианты анализа целевых показателей"
//
// Возвращаемое значение:
//  ХранилищеЗначения, в которое помещен вариант анализа
//
Функция ПолучитьРезультатВариантаАнализа(Вариант)
	
	ВариантАнализа = Справочники.ВариантыАнализаЦелевыхПоказателей.ПолучитьСсылку(Вариант);
	
	Вариант = МобильноеПриложениеМониторERPПереопределяемый.РезультатВариантаАнализа(ВариантАнализа);
	
	Возврат Вариант;
КонецФункции

// Операция получения одного варианта отчета
// получает результат по одному элементу справочника "Варианты Отчетов"
//
// Параметры:
//  Вариант	– Уникальный идентификатор справочника "Варианты Отчетов"
//  НастройкиОтчета - Настройки компоновки данных отчета
//
// Возвращаемое значение:
//  ХранилищеЗначения, в которое помещен вариант отчета
//
Функция ПолучитьРезультатВариантаОтчета(Вариант, НастройкиОтчета)
	
	ВариантОтчета = Справочники.ВариантыОтчетов.ПолучитьСсылку(Вариант);
	
	Вариант = МобильноеПриложениеМониторERPПереопределяемый.РезультатВариантаОтчета(ВариантОтчета, НастройкиОтчета);
	
	Возврат Вариант;
КонецФункции

// Операция получения одного партнера 
// получает результат по одному элементу справочника "Партнеры"
//
// Параметры:
//  Партнер	– Уникальный идентификатор справочника "Партнеры"
//
// Возвращаемое значение:
//  ХранилищеЗначения, в которое помещен партнер
//
Функция ПолучитьРезультатПартнер(КодМобильногоКомпьютера, Партнер, Версия)
	
	Партнер = Справочники.Партнеры.ПолучитьСсылку(Партнер);
	
	УзелОбмена = ПланыОбмена.МобильноеПриложениеМониторERP.НайтиПоКоду(КодМобильногоКомпьютера);
	
	Если УзелОбмена.Пустая() Тогда
		ВызватьИсключение(НСтр("ru='Неизвестное устройство - ';uk='Невідомий пристрій - '") + КодМобильногоКомпьютера);
	КонецЕсли;
	
	Партнер = МобильноеПриложениеМониторERPПереопределяемый.РезультатПартнер(УзелОбмена, Партнер, Версия);
	
	Возврат Партнер;
КонецФункции

#КонецОбласти
