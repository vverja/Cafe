#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы


Процедура ИсправитьДвижения_ДанныеДляОбновления(Параметры) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ДанныеРегистра
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО ДанныеРегистра.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
	|			И (Аналитика.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК Договоры
	|		ПО Договоры.Ссылка = ДанныеРегистра.Договор
	|	
	|ГДЕ
	|	    ДанныеРегистра.Регистратор ССЫЛКА Документ.АктВыполненныхРабот
	|	ИЛИ ДанныеРегистра.Регистратор ССЫЛКА Документ.ВводОстатков
	|	ИЛИ ДанныеРегистра.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|	ИЛИ ДанныеРегистра.Регистратор ССЫЛКА Документ.ВозвратТоваровОтКлиента
	|	ИЛИ ДанныеРегистра.Регистратор ССЫЛКА Документ.ОтчетКомиссионера
	|	ИЛИ ДанныеРегистра.Регистратор ССЫЛКА Документ.ОтчетКомитенту
	|	ИЛИ ДанныеРегистра.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|	ИЛИ ДанныеРегистра.Регистратор ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациями
	|	ИЛИ ДанныеРегистра.Регистратор ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
	|	ИЛИ ДанныеРегистра.Регистратор ССЫЛКА Документ.РасчетСебестоимостиТоваров
	|	ИЛИ ДанныеРегистра.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|");
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, "РегистрНакопления.ВыручкаИСебестоимостьПродаж");
	
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.3
// Производит замену измерения "АналитикаУчетаПоПартнерам" с учетом договора.
Процедура ИсправитьДвижения(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ВыручкаИСебестоимостьПродаж";
	
	Регистраторы = Новый Массив;
	Регистраторы.Добавить("Документ.АктВыполненныхРабот");
	Регистраторы.Добавить("Документ.ВводОстатков");
	Регистраторы.Добавить("Документ.ВозвратТоваровМеждуОрганизациями");
	Регистраторы.Добавить("Документ.ВозвратТоваровОтКлиента");
	Регистраторы.Добавить("Документ.ОтчетКомиссионера");
	Регистраторы.Добавить("Документ.ОтчетКомитенту");
	Регистраторы.Добавить("Документ.ОтчетОРозничныхПродажах");
	Регистраторы.Добавить("Документ.ОтчетПоКомиссииМеждуОрганизациями");
	Регистраторы.Добавить("Документ.ПередачаТоваровМеждуОрганизациями");
	Регистраторы.Добавить("Документ.РеализацияТоваровУслуг");

	ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
		Регистраторы,
		ПолноеИмяРегистра,
		Параметры.Очередь
    );
	
	// Обработка документов Расчет себестоимости
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.АналитикаУчетаПоПартнерам                    КАК КлючАналитикиРегистра,
	|	ДанныеРегистра.ЗаказКлиента                                 КАК ОбъектРасчетов,
	|	ЕСТЬNULL(НоваяАналитика.КлючАналитики, НЕОПРЕДЕЛЕНО)        КАК КлючНовойАналитики,
	|	АналитикаРегистра.Организация                               КАК Организация,
	|	АналитикаРегистра.Партнер                                   КАК Партнер,
	|	АналитикаРегистра.Контрагент                                КАК Контрагент,
	|	АналитикаРегистра.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДанныеРегистра.Договор                                      КАК Договор
	|ИЗ
	|	&ВТДляОбработкиСсылка КАК СписокРегистраторов
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ДанныеРегистра
	|		ПО ДанныеРегистра.Регистратор = СписокРегистраторов.Регистратор
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРегистра
	|		ПО ДанныеРегистра.АналитикаУчетаПоПартнерам = АналитикаРегистра.КлючАналитики
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК НоваяАналитика
	|		ПО АналитикаРегистра.Партнер = НоваяАналитика.Партнер
	|			И АналитикаРегистра.Организация = НоваяАналитика.Организация
	|			И АналитикаРегистра.Контрагент = НоваяАналитика.Контрагент
	|			И АналитикаРегистра.НаправлениеДеятельности = НоваяАналитика.НаправлениеДеятельности
	|			И (НоваяАналитика.Договор = ДанныеРегистра.Договор)
	|ГДЕ
	|	СписокРегистраторов.Регистратор ССЫЛКА Документ.РасчетСебестоимостиТоваров
	|	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокРегистраторов.Регистратор КАК Ссылка
	|ИЗ
	|	&ВТДляОбработкиСсылка КАК СписокРегистраторов
	|ГДЕ
	|	СписокРегистраторов.Регистратор ССЫЛКА Документ.РасчетСебестоимостиТоваров
	|";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуРегистраторовРегистраДляОбработки(
	     Параметры.Очередь,
	     Неопределено,
	     ПолноеИмяРегистра,
	     МенеджерВременныхТаблиц);
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
    КонецЕсли;
    
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли; 
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ВТДляОбработкиСсылка", Результат.ИмяВременнойТаблицы);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.ВыполнитьПакет();
	
	КоличествоЗапросов = Результат.ВГраница();
	
	ТаблицаАналитик = Результат[КоличествоЗапросов-1].Выгрузить();
	Для Каждого СтрокаАналитики Из ТаблицаАналитик Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаАналитики.КлючНовойАналитики) Тогда
			НоваяАналитика = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтрокаАналитики);
			СтрокаАналитики.КлючНовойАналитики = НоваяАналитика;
		КонецЕсли;
	КонецЦикла;
	
	РеквизитыПоиска = "КлючАналитикиРегистра, ОбъектРасчетов";
	ТаблицаАналитик.Индексы.Добавить(РеквизитыПоиска);
	СтруктураПоиска = Новый Структура(РеквизитыПоиска);
	
	Выборка = Результат[КоличествоЗапросов].Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
			ЭлементБлокировки.УстановитьЗначение("Регистратор", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
		
			НаборЗаписей = РегистрыНакопления.ВыручкаИСебестоимостьПродаж.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Ссылка);
			НаборЗаписей.Прочитать();
			
			Для Каждого ЗаписьНабора Из НаборЗаписей Цикл
				
				СтруктураПоиска.Вставить("КлючАналитикиРегистра", ЗаписьНабора.АналитикаУчетаПоПартнерам);
				СтруктураПоиска.Вставить("ОбъектРасчетов", ЗаписьНабора.ЗаказКлиента);
				МассивСтрок = ТаблицаАналитик.НайтиСтроки(СтруктураПоиска);
				
				//Отсутствует аналитика в РС АналитикаУчетаПоПартнерам
				Если МассивСтрок.Количество() = 0 Тогда
					ТекстСообщения = НСтр("ru='Не удалось дополнить аналитику %Аналитика% по партнерам договором при обработке документа: %Ссылка% по причине: %Причина%';uk='Не вдалося доповнити аналітику %Аналитика% за партнерами договором при обробці документу: %Ссылка% по причині: %Причина%'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%"   , Выборка.Ссылка);
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Аналитика%", ЗаписьНабора.АналитикаУчетаПоПартнерам);
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%"  , "Отсутствует сведения об аналитике в регистре сведений ""Аналитика учета по партнерам""");
			
					ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
						Выборка.Ссылка.Метаданные(), Выборка.Ссылка, ТекстСообщения);
				Иначе
				
					ЗаписьНабора.АналитикаУчетаПоПартнерам = МассивСтрок[0].КлючНовойАналитики;
				
				КонецЕсли;
				
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
			
			ЗафиксироватьТранзакцию();
		
		Исключение
		
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru='Не удалось дополнить аналитику по партнерам договором при обработке документа: %Ссылка% по причине: %Причина%';uk='Не вдалося доповнити аналітику за партнерами договором при обробці документа: %Ссылка% по причині: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(), УровеньЖурналаРегистрации.Предупреждение,
				Выборка.Ссылка.Метаданные(), Выборка.Ссылка, ТекстСообщения);
			ВызватьИсключение;
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(Параметры.Очередь, ПолноеИмяРегистра);
	
КонецПроцедуры



Процедура ПровестиРаботыБезНалоговогоНазначения_ДанныеДляОбновления(Параметры) Экспорт
    
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ВыручкаИСебестоимостьПродаж КАК ДанныеРегистра
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|	ПО ВидыЗапасов.Ссылка = ДанныеРегистра.ВидЗапасов
	|	
	|ГДЕ
    |   ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
    |   И ВидыЗапасов.НалоговоеНазначение = ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка)
	|	И (ДанныеРегистра.Регистратор ССЫЛКА Документ.АктВыполненныхРабот
	|	ИЛИ ДанныеРегистра.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|	ИЛИ ДанныеРегистра.Регистратор ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
	|	ИЛИ ДанныеРегистра.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
    |   )
	|");
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(
        Параметры, 
        Регистраторы, 
        "РегистрНакопления.ВыручкаИСебестоимостьПродаж"
    );
	
КонецПроцедуры

// Выполняется переформирование движений документов, в которых зафиксирован вид запасов с типом Работа без заполненного налогового назначения
// по регистру накопления ВыручкаИСебестоимостьПродаж
Процедура ПровестиРаботыБезНалоговогоНазначения(Параметры) Экспорт
    
	ПолноеИмяРегистра = "РегистрНакопления.ВыручкаИСебестоимостьПродаж";
	
	Регистраторы = Новый Массив;
	Регистраторы.Добавить("Документ.АктВыполненныхРабот");
	Регистраторы.Добавить("Документ.ОтчетОРозничныхПродажах");
	Регистраторы.Добавить("Документ.ПередачаТоваровМеждуОрганизациями");
	Регистраторы.Добавить("Документ.РеализацияТоваровУслуг");

	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
		Регистраторы,
		ПолноеИмяРегистра,
		Параметры.Очередь
    );
    
КонецПроцедуры


#КонецОбласти

#КонецОбласти

#КонецЕсли
