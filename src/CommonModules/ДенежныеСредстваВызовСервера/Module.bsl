
#Область ПрограммныйИнтерфейс

// Формирует структуру для создания оплаты по нескольким заявкам на расходование средств
// Если в переданных заявках отличаются ключевые реквизиты шапки, выдается сообщение об ошибке
//
// Параметры:
// МассивСсылок   - Массив - завки на расходование средств, по которым необходимо ввести оплату
// РеквизитыШапки - Структура - структура, в которую будут помещены реквизиты шапки из массива заявок
//
// Возвращаемое значение:
// Булево - Ложь, если в переданных заказах отличаются реквизиты шапки
//
Функция СформироватьДанныеЗаполненияОплаты(МассивСсылок, РеквизитыШапки) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
	|			ВЫБОР КОГДА Заявка.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|					ИЛИ Заявка.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|					ИЛИ Заявка.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПлатежнаяКарта)
	|				ТОГДА Заявка.ФормаОплатыЗаявки
	|			КОНЕЦ) > 1
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияФормаОплаты,
	|	МИНИМУМ(ВЫБОР КОГДА Заявка.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|			ИЛИ Заявка.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|			ИЛИ Заявка.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПлатежнаяКарта)
	|		ТОГДА Заявка.ФормаОплатыЗаявки
	|		КОНЕЦ) КАК ФормаОплатыЗаявки,
	|	
	|	МИНИМУМ(ВЫБОР КОГДА Заявка.ПланированиеСуммы = ЗНАЧЕНИЕ(Перечисление.СпособыПланированияОплатыЗаявок.ВВалютеПлатежа)
	|			ТОГДА Заявка.Валюта
	|		КОГДА Заявка.ПланированиеСуммы = ЗНАЧЕНИЕ(Перечисление.СпособыПланированияОплатыЗаявок.ВВалютеВзаиморасчетов)
	|			ТОГДА 
	|				ВЫБОР КОГДА Заявка.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|						И Заявка.Касса <> ЗНАЧЕНИЕ(Справочник.Кассы.ПустаяСсылка)
	|					ТОГДА Заявка.Касса.ВалютаДенежныхСредств
	|					КОГДА Заявка.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|						И Заявка.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
	|					ТОГДА Заявка.БанковскийСчет.ВалютаДенежныхСредств
	|				КОНЕЦ
	|		КОНЕЦ) КАК Валюта,
	|	МИНИМУМ(Заявка.Валюта) КАК ВалютаКандидат,
	|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
	|		ВЫБОР КОГДА Заявка.ПланированиеСуммы = ЗНАЧЕНИЕ(Перечисление.СпособыПланированияОплатыЗаявок.ВВалютеПлатежа)
	|			ТОГДА Заявка.Валюта
	|		КОГДА Заявка.ПланированиеСуммы = ЗНАЧЕНИЕ(Перечисление.СпособыПланированияОплатыЗаявок.ВВалютеВзаиморасчетов)
	|			ТОГДА 
	|				ВЫБОР КОГДА Заявка.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|						И Заявка.Касса <> ЗНАЧЕНИЕ(Справочник.Кассы.ПустаяСсылка)
	|					ТОГДА Заявка.Касса.ВалютаДенежныхСредств
	|					КОГДА Заявка.ФормаОплатыЗаявки = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|						И Заявка.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
	|					ТОГДА Заявка.БанковскийСчет.ВалютаДенежныхСредств
	|				КОНЕЦ
	|		КОНЕЦ) > 1
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияВалютаОплаты,
	|	
	|	МИНИМУМ(Заявка.Организация) КАК Организация,
	|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заявка.Организация) > 1
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияОрганизация,
	|	
	|	МИНИМУМ(Заявка.ХозяйственнаяОперация) КАК ХозяйственнаяОперация,
	|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заявка.ХозяйственнаяОперация) > 1
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияХозяйственнаяОперация,
	|	
	|	МИНИМУМ(Заявка.Контрагент) КАК Контрагент,
	|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заявка.Контрагент) > 1
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияКонтрагент,
	|	
	|	МИНИМУМ(Заявка.ПодотчетноеЛицо) КАК ПодотчетноеЛицо,
	|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заявка.ПодотчетноеЛицо) > 1
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияПодотчетноеЛицо,
	|	
	|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
	|		ВЫБОР КОГДА Заявка.Касса <> ЗНАЧЕНИЕ(Справочник.Кассы.ПустаяСсылка)
	|			ТОГДА Заявка.Касса
	|		КОНЕЦ) > 1
	|			ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияКасса,
	|	МИНИМУМ(ВЫБОР КОГДА Заявка.Касса <> ЗНАЧЕНИЕ(Справочник.Кассы.ПустаяСсылка)
	|		ТОГДА Заявка.Касса
	|	КОНЕЦ) КАК Касса,
	|	
	|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ
	|		ВЫБОР КОГДА Заявка.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
	|			ТОГДА Заявка.БанковскийСчет
	|		КОНЕЦ) > 1
	|			ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОтличияБанковскийСчет,
	|	МИНИМУМ(ВЫБОР КОГДА Заявка.БанковскийСчет <> ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаОрганизаций.ПустаяСсылка)
	|		ТОГДА Заявка.БанковскийСчет
	|	КОНЕЦ) КАК БанковскийСчет,
	|	
	|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заявка.Подразделение) > 1 ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|		ИНАЧЕ МИНИМУМ(Заявка.Подразделение)
	|	КОНЕЦ КАК Подразделение,
	|	
	|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заявка.БанковскийСчетКонтрагента) > 1 ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
	|		ИНАЧЕ МИНИМУМ(Заявка.БанковскийСчетКонтрагента)
	|	КОНЕЦ КАК БанковскийСчетКонтрагента,
	|	
	|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заявка.СтатьяДвиженияДенежныхСредств) > 1 ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)
	|		ИНАЧЕ МИНИМУМ(Заявка.СтатьяДвиженияДенежныхСредств)
	|	КОНЕЦ КАК СтатьяДвиженияДенежныхСредств,
	|	
	|	ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Заявка.СтатьяАктивовПассивов) > 1 ТОГДА
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка)
	|		ИНАЧЕ МИНИМУМ(Заявка.СтатьяАктивовПассивов)
	|	КОНЕЦ КАК СтатьяАктивовПассивов,
	|	
	|	МИНИМУМ(ВЫБОР КОГДА Заявка.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств))
	|		ТОГДА Заявка.КассаПолучатель
	|		ИНАЧЕ Неопределено
	|	КОНЕЦ) КАК КассаПолучатель,
	|	МИНИМУМ(ВЫБОР КОГДА Заявка.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств))
	|		ТОГДА Заявка.БанковскийСчетПолучатель
	|		ИНАЧЕ Неопределено
	|	КОНЕЦ) КАК БанковскийСчетПолучатель,
	|	
	|	МИНИМУМ(Заявка.ВалютаКонвертации) КАК ВалютаКонвертации,
	|	МИНИМУМ(Заявка.КурсКонвертации) КАК КурсКонвертации,
	|	
	|	МИНИМУМ(ВЫБОР КОГДА Заявка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет)
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ) КАК ПеречислениеВБюджет,
	|	
	|	МИНИМУМ(Заявка.АналитикаАктивовПассивов) КАК АналитикаАктивовПассивов,
	|	
	|	МИНИМУМ(Заявка.Контрагент.Наименование) КАК КонтрагентНаименование,
	|	МИНИМУМ(Заявка.Контрагент.НаименованиеПолное) КАК КонтрагентНаименованиеПолное,
	|	МИНИМУМ(Заявка.ПодотчетноеЛицо.Наименование) КАК ПодотчетноеЛицоНаименование
	|	
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК Заявка
	|
	|ГДЕ
	|	Заявка.Ссылка В (&МассивСсылок)
	|;
	|
	|ВЫБРАТЬ
	|	Заявка.Ссылка КАК Заявка,
	|	Заявка.Статус КАК Статус,
	|	НЕ Заявка.Проведен КАК ЕстьОшибкиПроведен,
	|	ВЫБОР КОГДА НЕ (Заявка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате))
	|		ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЕстьОшибкиСтатус
	|	
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК Заявка
	|ГДЕ
	|	Заявка.Ссылка В (&МассивСсылок)
	|	И (НЕ Заявка.Проведен ИЛИ
	|		Заявка.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеДенежныхСредств.КОплате))
	|
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);

	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаРеквизитыШапки = РезультатЗапроса[0].Выбрать();
	ВыборкаРеквизитыШапки.Следующий();
	
	Отказ = Ложь;
	
	Если ДенежныеСредстваСервер.СообщитьОбОшибкахФормированияДанныхЗаполненияОплаты(ВыборкаРеквизитыШапки) Тогда
		
		ТекстОшибки = НСтр("ru='Ввод одного документа оплаты на основании выделенных заявок невозможен';uk='Введення одного документа оплати на підставі виділених заявок неможливе'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,,, Отказ);
		
	Иначе
		
		Если Не РезультатЗапроса[1].Пустой() > 0 Тогда
			
			ВыборкаЗаявки = РезультатЗапроса[1].Выбрать();
			
			Пока ВыборкаЗаявки.Следующий() Цикл
				
				Если ВыборкаЗаявки.ЕстьОшибкиПроведен Тогда
					
					ТекстОшибки = НСтр("ru='Документ %Документ% не проведен. Ввод на основании непроведенного документа запрещен';uk='Документ %Документ% не проведено. Введення на підставі непроведенного документа заборонене'");
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаЗаявки.Заявка);
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,,, Отказ);
					
				ИначеЕсли ВыборкаЗаявки.ЕстьОшибкиСтатус Тогда
					
					ТекстОшибки = НСтр("ru='Документ %Документ% находится в статусе ""%Статус%"". Ввод на основании разрешен только в статусе ""К оплате""';uk='Документ %Документ% знаходиться в статусі ""%Статус%"". Введення на підставі дозволене тільки в статусі ""До оплати""'");
				
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Документ%", ВыборкаЗаявки.Заявка);
					ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Статус%",   ВыборкаЗаявки.Статус);
					
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,,,, Отказ);
					
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого Колонка Из РезультатЗапроса[0].Колонки Цикл
		РеквизитыШапки.Вставить(Колонка.Имя);
	КонецЦикла;
	
	ЗаполнитьЗначенияСвойств(РеквизитыШапки, ВыборкаРеквизитыШапки);
	
	// Если однозначно определить валюту платежа не удалось, то предполагаем, что это одна из валют заявок
	Если Не ЗначениеЗаполнено(РеквизитыШапки.Валюта) Тогда
		РеквизитыШапки.Валюта = РеквизитыШапки.ВалютаКандидат;
	КонецЕсли;
	
	Если ВыборкаРеквизитыШапки.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствПодотчетнику Тогда
		РеквизитыШапки.Вставить("Выдать", ВыборкаРеквизитыШапки.ПодотчетноеЛицоНаименование);
	ИначеЕсли Не ПустаяСтрока(ВыборкаРеквизитыШапки.КонтрагентНаименованиеПолное) Тогда
		РеквизитыШапки.Вставить("Выдать", ВыборкаРеквизитыШапки.КонтрагентНаименованиеПолное);
	Иначе
		РеквизитыШапки.Вставить("Выдать", ВыборкаРеквизитыШапки.КонтрагентНаименование);
	КонецЕсли;
	
	РеквизитыШапки.Вставить("ОплатаПоЗаявкам", Истина);
	
	Возврат Не Отказ;
	
КонецФункции

// Преобразует двоичные данные файла в текст
//
// Параметры:
//    АдресФайла - Строка - Адрес временного хранилища с данными файла
//    Кодировка - Строка - "DOS" или "Windows"
//
Функция ТекстовыйДокументИзВременногоХранилищаФайла(АдресФайла, Кодировка) Экспорт
	
	ИмяВременногоФайла  = ПолучитьИмяВременногоФайла("txt");
	ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(АдресФайла);
	ДвоичныеДанныеФайла.Записать(ИмяВременногоФайла);
	Текст = Новый ТекстовыйДокумент();
	Если Кодировка = "DOS" Тогда
		Кодир = "cp866";
	Иначе
		Кодир = "windows-1251";
	КонецЕсли;
	
	Текст.Прочитать(ИмяВременногоФайла, Кодир);
	
	Возврат Текст;
	
КонецФункции


// Получает наименование договора для графика исполнения этого договора
//
// Параметры
//    Ссылка - ДокументСсылка.ГрафикИсполненияДоговора - Ссылка на график исполнения
//
Функция НаименованиеДоговора(Ссылка) Экспорт
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Договор.Наименование");
	
КонецФункции

// Реквизиты эквайрингового терминала для получения представления
//
// Параметры
//    Ссылка - СправочникСсылка.ЭквайринговыеТерминалы - Ссылка на терминал
//
Функция ЗначенияРеквизитовЭквайринговогоТерминала(Ссылка) Экспорт
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "Код, ЭтоГруппа");
	
КонецФункции

#КонецОбласти