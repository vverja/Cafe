#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает имена блокруемых реквизитов для механизма блокирования реквизитов БСП
//
// Возвращаемое значание:
//	Массив - имена блокируемых реквизитов
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("УчетДоходов");
	Результат.Добавить("УчетЗатрат");
	Результат.Добавить("УчетВнеоборотныхАктивов");
	Результат.Добавить("УчетДенежныхСредств;ГруппаУчетДС");
	Результат.Добавить("ВариантОбособления;ВариантОбособленияПоНаправлениюВЦелом,ВариантОбособленияПоЗаказамНаправления");
	Возврат Результат;
	
КонецФункции

// Определяет обязательность указания направления деятельности для заданного раздела учета.
// Если во всех созданых направлениях есть хотя бы один сброшенный флаг заданного раздела,
// то указывать направление деятельности необязательно.
// Иначе если во всех направлениях все флаги заданного раздела взведены, то указание направления обязательно.
//
// Параметры:
//  ИмяРазделаУчета - Строка - Возможные значения:
//                             "УчетДоходов"
//                             "УчетЗатрат"
//                             "УчетДенежныхСредствРаздельно"
//                             "УчетДенежныхСредствПоКорреспонденции"
//                             "УчетВнеоборотныхАктивов"
//
// Возвращаемое значение:
//  Истина если указание направления деятельности обязательно
Функция ОбязательноеУказаниеНаправленияДеятельности(ИмяРазделаУчета) Экспорт
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗаполнитьСтатусИспользуется() Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	НаправленияДеятельности.Ссылка
	|ИЗ
	|	Справочник.НаправленияДеятельности КАК НаправленияДеятельности
	|ГДЕ
	|	НаправленияДеятельности.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыНаправленияДеятельности.ПустаяСсылка)");
	
	Используется = Перечисления.СтатусыНаправленияДеятельности.Используется;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбъектНаправления = Выборка.Ссылка.ПолучитьОбъект();
		ОбъектНаправления.Статус = Используется;
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ОбъектНаправления);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли