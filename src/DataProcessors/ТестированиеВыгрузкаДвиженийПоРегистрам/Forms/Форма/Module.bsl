#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьСписокРегистров();
	Объект.Период = Обработки.ТестированиеОперацийЗакрытийМесяца.СебестоимостьМинПериод();
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	Диалог.Заголовок = НСтр("ru='Выберите каталог для сохранения результатов';uk='Виберіть каталог для збереження результатів'");
	Диалог.Каталог = Объект.ПутьККаталогуВыгрузки;
	Диалог.МножественныйВыбор = Ложь;
	
	ДополнительныеПараметры = Новый Структура;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьКаталогЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	Диалог.Показать(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьКаталогЗавершение(Каталог, ДополнительныеПараметры) Экспорт
	Если Каталог <> Неопределено Тогда
		Объект.ПутьККаталогуВыгрузки = Каталог[0];
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПутьККаталогуВыгрузкиОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗапуститьПриложение("explorer " + Объект.ПутьККаталогуВыгрузки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыгрузитьДвижения(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ВремяНачала = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	УдалитьФайлы(Объект.ПутьККаталогуВыгрузки, "*erp21_cost_data*.xml");
	ТекущийМесяц = НачалоМесяца(Объект.Период);
	КонецРасчета = КонецМесяца(ТекущаяДата()) + 1;
	Пока ТекущийМесяц < КонецРасчета Цикл
		
		ТекстСостояния = НСтр("ru='Выгружаем движения за %Месяц';uk='Вивантажуємо руху за %Месяц'");
		ТекстСостояния = СтрЗаменить(ТекстСостояния, "%Месяц", ТекущийМесяц);
		Состояние(ТекстСостояния);
		ОбработкаПрерыванияПользователя();
		
		ЗаписьXML = Новый ЗаписьXML;
		ЗаписьXML.ОткрытьФайл(ПолучитьПутьКФайлу(ТекущийМесяц));
		ЗаписьXML.ЗаписатьОбъявлениеXML();
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("Корневой");
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("Период");
		
		СтрокаXML = ЗначениеВСтрокуXML(ТекущийМесяц);
		ЗаписьXML.ЗаписатьТекст(СтрокаXML);
		
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Период
		
		ЗаписьXML.ЗаписатьНачалоЭлемента("Движения");
		
		Результат = ПолучитьДвиженияНаСервере(ТекущийМесяц);
		СтрокаXML = ЗначениеВСтрокуXML(Результат);
		ЗаписьXML.ЗаписатьТекст(СтрокаXML);
		
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Движения
		
		ЗаписьXML.ЗаписатьКонецЭлемента(); // Корневой
		
		ЗаписьXML.Закрыть();
		ЗаписьXML = Неопределено;
		
		ТекущийМесяц = КонецМесяца(ТекущийМесяц) + 1;
		
	КонецЦикла;
	
	ВремяОкончания = ТекущаяУниверсальнаяДатаВМиллисекундах();
	ТекстОповещения = НСтр("ru='Выгрузка выполнена за %Время  сек.';uk='Вивантаження виконана за %Время сек.'");
	ТекстОповещения = СтрЗаменить(ТекстОповещения, "%Время", СокрЛП((ВремяОкончания - ВремяНачала) / 1000));
	ПоказатьОповещениеПользователя(ТекстОповещения);
	
	Состояние();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокРегистров()
	ТаблицаРегистров.Очистить();
	
	СтрокаРегистр = ТаблицаРегистров.Добавить();
	СтрокаРегистр.ИмяРегистра = Метаданные.РегистрыНакопления.ВыручкаИСебестоимостьПродаж.ПолноеИмя();
	
	СтрокаРегистр = ТаблицаРегистров.Добавить();
	СтрокаРегистр.ИмяРегистра = Метаданные.РегистрыНакопления.ДвиженияНоменклатураДоходыРасходы.ПолноеИмя();
	
	СтрокаРегистр = ТаблицаРегистров.Добавить();
	СтрокаРегистр.ИмяРегистра = Метаданные.РегистрыНакопления.ДвиженияНоменклатураНоменклатура.ПолноеИмя();
	
	СтрокаРегистр = ТаблицаРегистров.Добавить();
	СтрокаРегистр.ИмяРегистра = Метаданные.РегистрыНакопления.Закупки.ПолноеИмя();
	
	СтрокаРегистр = ТаблицаРегистров.Добавить();
	СтрокаРегистр.ИмяРегистра = Метаданные.РегистрыНакопления.ПартииЗатратНаВыпуск.ПолноеИмя();
	
	СтрокаРегистр = ТаблицаРегистров.Добавить();
	СтрокаРегистр.ИмяРегистра = Метаданные.РегистрыНакопления.ПартииПроизводственныхЗатрат.ПолноеИмя();
	
	СтрокаРегистр = ТаблицаРегистров.Добавить();
	СтрокаРегистр.ИмяРегистра = Метаданные.РегистрыНакопления.ПартииРасходовНаСебестоимостьТоваров.ПолноеИмя();
	
	СтрокаРегистр = ТаблицаРегистров.Добавить();
	СтрокаРегистр.ИмяРегистра = Метаданные.РегистрыНакопления.ПартииТоваровОрганизаций.ПолноеИмя();
	
	СтрокаРегистр = ТаблицаРегистров.Добавить();
	СтрокаРегистр.ИмяРегистра = Метаданные.РегистрыНакопления.ПартииТоваровПереданныеНаКомиссию.ПолноеИмя();
	
	СтрокаРегистр = ТаблицаРегистров.Добавить();
	СтрокаРегистр.ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеАктивыПассивы.ПолноеИмя();
	
	СтрокаРегистр = ТаблицаРегистров.Добавить();
	СтрокаРегистр.ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеДоходы.ПолноеИмя();
	
	СтрокаРегистр = ТаблицаРегистров.Добавить();
	СтрокаРегистр.ИмяРегистра = Метаданные.РегистрыНакопления.ПрочиеРасходы.ПолноеИмя();
	
	СтрокаРегистр = ТаблицаРегистров.Добавить();
	СтрокаРегистр.ИмяРегистра = Метаданные.РегистрыНакопления.СебестоимостьТоваров.ПолноеИмя();
	
	СтрокаРегистр = ТаблицаРегистров.Добавить();
	СтрокаРегистр.ИмяРегистра = Метаданные.РегистрыНакопления.ФинансовыеРезультаты.ПолноеИмя();
	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДвиженияНаСервере(ТекущийМесяц)
	
	СтруктураХранения = Новый Структура;
	
	Для Каждого ТекСтр Из ТаблицаРегистров Цикл
		ИмяРегистра = ТекСтр.ИмяРегистра;
		
		МетаРегистр = Метаданные.НайтиПоПолномуИмени(ИмяРегистра);
		
		ЭтоРегистрНакопления    = Метаданные.РегистрыНакопления.Содержит(МетаРегистр);
		ЕстьСвойствоВидДвижения = ЭтоРегистрНакопления И МетаРегистр.ВидРегистра = Метаданные.СвойстваОбъектов.ВидРегистраНакопления.Остатки;
		
		ПоляГруппировки  = "Т.Регистратор,
			|Т.Период"
			+ ?(ЕстьСвойствоВидДвижения, ",
				|Т.ВидДвижения", "");
		ПоляСуммирования = "";
		ПоляОтбора       = "";
		
		Для Каждого Мета Из МетаРегистр.Измерения Цикл
			
			Если ОбщегоНазначения.ОписаниеТипаСостоитИзТипа(Мета.Тип, Тип("СправочникСсылка.КлючиАналитикиУчетаНоменклатуры")) Тогда
				Для Каждого МетаАналитика Из Метаданные.Справочники.КлючиАналитикиУчетаНоменклатуры.Реквизиты Цикл
					ПоляГруппировки = ПоляГруппировки + ?(ПоляГруппировки = "", "", ",
						|	") + "Т." + Мета.Имя + "." + МетаАналитика.Имя;
				КонецЦикла;
			Иначе
				ПоляГруппировки = ПоляГруппировки + ?(ПоляГруппировки = "", "", ",
					|	") + "Т." + Мета.Имя;
				КонецЕсли;
		КонецЦикла;
		
		Для Каждого Мета Из МетаРегистр.Ресурсы Цикл
			
			ПоляСуммирования = ПоляСуммирования + ?(ПоляСуммирования = "", "", ",
				|	") + "СУММА(Т." + Мета.Имя + ") КАК " + Мета.Имя;
			ПоляОтбора = ПоляОтбора + ?(ПоляОтбора = "", "", "
				| 	ИЛИ ") + "СУММА(Т." + Мета.Имя + ") <> 0";
			
		КонецЦикла;
		
		ПоляСуммированияДляВыборки = ПоляСуммирования;
		ПоляОтбораДляВыборки = ПоляОтбора;
		ПоляИзмерения = ПоляГруппировки;
		УсловиеОтбора = "ИСТИНА";
		Если ИмяРегистра = "РегистрНакопления.СебестоимостьТоваров" Тогда
			ТекстЗамены  =
			"ВЫБОР
			|	КОГДА Т.Регистратор ССЫЛКА Документ.РасчетСебестоимостиТоваров
			|		ТОГДА Т.ДокументДвижения
			|	ИНАЧЕ Т.Регистратор
			|КОНЕЦ";
			ПоляГруппировки = СтрЗаменить(ПоляГруппировки,"Т.Регистратор",ТекстЗамены);
			ПоляИзмерения = СтрЗаменить(ПоляИзмерения,"Т.Регистратор",ТекстЗамены + " КАК Регистратор");
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	%1,
		|	%2
		|ИЗ
		|	%3 КАК Т
		|ГДЕ
		|	Т.Активность
		|	И Т.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И %4
		|СГРУППИРОВАТЬ ПО
		|	%5
		|ИМЕЮЩИЕ
		|	%6
		|";
		
		Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			Запрос.Текст,
			ПоляИзмерения,
			ПоляСуммированияДляВыборки,
			ИмяРегистра,
			УсловиеОтбора,
			ПоляГруппировки,
			ПоляОтбораДляВыборки);
		
		Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ТекущийМесяц));
		Запрос.УстановитьПараметр("КонецПериода",  КонецМесяца(ТекущийМесяц));
		
		КлючИмяРегистра = СтрЗаменить(ИмяРегистра,".","_");
		СтруктураХранения.Вставить(КлючИмяРегистра, Запрос.Выполнить().Выгрузить());
	КонецЦикла;
	
	Возврат Новый ХранилищеЗначения(СтруктураХранения,Новый СжатиеДанных(9));
	
КонецФункции

&НаКлиенте
Функция ПолучитьПутьКФайлу(ТекущийМесяц)
	ПутьКФайлу = Объект.ПутьККаталогуВыгрузки + ?(Прав(Объект.ПутьККаталогуВыгрузки, 1) <> "\", "\", "") 
		+ Формат(ТекущийМесяц,"ДФ=yyyy_MM_") + "erp21_cost_data" + ".xml";
	Возврат ПутьКФайлу;
КонецФункции

&НаКлиенте
Функция ЗначениеВСтрокуXML(Значение)
	#Если НЕ ВебКлиент Тогда
	ЗначениеXML = Новый ЗаписьXML;
	ЗначениеXML.УстановитьСтроку();
	СериализаторXDTO.ЗаписатьXML(ЗначениеXML, Значение, НазначениеТипаXML.Явное);
	Возврат ЗначениеXML.Закрыть();
	#Иначе
	Возврат Неопределено;
	#КонецЕсли
КонецФункции

#КонецОбласти
