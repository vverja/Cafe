
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеШаблона = Параметры.ДанныеШаблона;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// ПодключаемоеОборудование
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("СчитывательМагнитныхКарт");
	ОповещенияПриПодключении = Новый ОписаниеОповещения("ПодключитьОборудованиеЗавершение", ЭтотОбъект);    
	МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПоТипу(ОповещенияПриПодключении, УникальныйИдентификатор, ПоддерживаемыеТипыВО);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьОборудованиеЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Если Не РезультатВыполнения.Результат Тогда
		ТекстСообщения = НСтр("ru='При подключении оборудования произошла ошибка:
                |""%ОписаниеОшибки%"".'
                |;uk='При підключенні обладнання сталася помилка:
                |""%ОписаниеОшибки%"".'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	// ПодключаемоеОборудование
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("СчитывательМагнитныхКарт");
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПоТипу(, УникальныйИдентификатор, ПоддерживаемыеТипыВО);
	// Конец ПодключаемоеОборудование
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	// ПодключаемоеОборудование
	Если Источник = "ПодключаемоеОборудование"
	   И ВводДоступен() Тогда
		Если ИмяСобытия = "TracksData" Тогда
			Если Параметр[1] = Неопределено Тогда
				ДанныеДорожек = Параметр[0];
			Иначе
				ДанныеДорожек = Параметр[1][1];
			КонецЕсли;
			
			ОчиститьСообщения();
			Если НЕ МенеджерОборудованияКлиент.КодСоответствуетШаблонуМК(ДанныеДорожек, ДанныеШаблона) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Карта не соответствует шаблону!';uk='Карта не відповідає шаблону!'"));
				Возврат;
			КонецЕсли;
			
			// Выводим зашифрованные поля
			Если Параметр[1][3] = Неопределено
				ИЛИ Параметр[1][3].Количество() = 0 Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не удалось распознать ни одного поля. Возможно, поля шаблона настроены неверно.';uk='Не вдалося розпізнати жодного поля. Можливо, поля шаблону настроєні невірно.'"));
			Иначе
				НайденШаблон = Неопределено;
				Для каждого текШаблон Из Параметр[1][3] Цикл
					Если текШаблон.Шаблон = ДанныеШаблона.Ссылка Тогда
						НайденШаблон = текШаблон;
					КонецЕсли;
				КонецЦикла;
				Если НайденШаблон = Неопределено Тогда
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Код не соответствует данному шаблону. Возможно, шаблон настроен неверно.';uk='Код не відповідає даному шаблону. Можливо, шаблон налаштований невірно.'"));
				Иначе
					ТекстСообщения = НСтр("ru='Карта соответствует шаблону и содержит следующие поля:';uk='Карта відповідає шаблону і містить наступні поля:'")+Символы.ПС+Символы.ПС;
					Итератор = 1;
					Для каждого текПоле Из НайденШаблон.ДанныеДорожек Цикл
						ТекстСообщения = ТекстСообщения + Строка(Итератор)+". "+?(ЗначениеЗаполнено(текПоле.Поле), Строка(текПоле.Поле), "")+" = "+Строка(текПоле.ЗначениеПоля)+Символы.ПС;
						Итератор = Итератор + 1;
					КонецЦикла;
					ПоказатьПредупреждение(,ТекстСообщения, , НСтр("ru='Результат расшифровки кода карты';uk='Результат розшифрування коду карти'"));
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	// Конец ПодключаемоеОборудование
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если ВводДоступен() Тогда
		
		ОписаниеСобытия = Новый Структура();
		ОписаниеОшибки  = "";
		ОписаниеСобытия.Вставить("Источник", Источник);
		ОписаниеСобытия.Вставить("Событие",  Событие);
		ОписаниеСобытия.Вставить("Данные",   Данные);
		
		Результат = МенеджерОборудованияКлиент.ПолучитьСобытиеОтУстройства(ОписаниеСобытия, ОписаниеОшибки);
		Если Результат = Неопределено Тогда 
			ТекстСообщения = НСтр("ru='При обработке внешнего события от устройства произошла ошибка:';uk='При обробці зовнішньої події від пристрою сталася помилка:'")
								+ Символы.ПС + ОписаниеОшибки;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		Иначе
			ОбработкаОповещения(Результат.ИмяСобытия, Результат.Параметр, Результат.Источник);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти