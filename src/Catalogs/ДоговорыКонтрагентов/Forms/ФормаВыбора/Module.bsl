
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	УстановитьНедоступныеОтборыИзПараметров(Параметры.Отбор);
	
	Если Параметры.Свойство("Партнер") Тогда
		
		СписокПартнеров = Новый СписокЗначений;
		ПартнерыИКонтрагенты.ЗаполнитьСписокПартнераСРодителями(Параметры.Партнер, СписокПартнеров);
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, 
			"Партнер", 
			СписокПартнеров, 
			ВидСравненияКомпоновкиДанных.ВСписке,
			, 
			Истина);
		
		Список.Параметры.УстановитьЗначениеПараметра("ПартнерПоУмолчанию", Параметры.Партнер);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, 
			"ПартнерПоУмолчанию", 
			Параметры.Партнер, 
			ВидСравненияКомпоновкиДанных.Равно,
			, 
			Истина);
		
	Иначе
		
		Список.Параметры.УстановитьЗначениеПараметра("ПартнерПоУмолчанию", Справочники.Партнеры.ПустаяСсылка());
		
	КонецЕсли;
	
	Если Параметры.Свойство("Соглашение")
		И ((ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами")
				И Тип("СправочникСсылка.СоглашенияСКлиентами") = ТипЗнч(Параметры.Соглашение))
			ИЛИ
		   (ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСПоставщиками")
				И Тип("СправочникСсылка.СоглашенияСПоставщиками") = ТипЗнч(Параметры.Соглашение)))
		И ЗначениеЗаполнено(Параметры.Соглашение) Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список,
			"ПорядокОплаты",
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Соглашение, "ПорядокОплаты"),
			ВидСравненияКомпоновкиДанных.Равно,
			,
			Истина);
		
		КонецЕсли;
		
    
	Если Параметры.Отбор.Свойство("ХозяйственнаяОперация") И
		Параметры.Отбор.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика И
		Параметры.Свойство("ПоказыватьЗакупкуПоИмпорту") Тогда
		
		МассивХозяйственныхОпераций = Новый Массив();
		МассивХозяйственныхОпераций.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
		МассивХозяйственныхОпераций.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту);

		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, 
			"ХозяйственнаяОперация", 
			МассивХозяйственныхОпераций,
			ВидСравненияКомпоновкиДанных.ВСписке);
			
	КонецЕсли;
	
	ОтборыСписковКлиентСервер.СкопироватьСписокВыбораОтбораПоМенеджеру(
		Элементы.ОтборМенеджер.СписокВыбора, 
		ОбщегоНазначенияУТ.ПолучитьСписокПользователейСПравомДобавления(Метаданные.Справочники.ДоговорыКонтрагентов));
	
	// Обработчик подсистемы "Внешние обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюПечать);
	// Конец СтандартныеПодсистемы.Печать
	
	Параметры.Отбор.Очистить();

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойДанныхИзНастроекНаСервере(Настройки)
	
	Менеджер = Настройки.Получить("Менеджер");
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, 
		"Менеджер", 
		Менеджер, 
		ВидСравненияКомпоновкиДанных.Равно,
		, 
		ЗначениеЗаполнено(Менеджер));
	
	Настройки.Очистить();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборМенеджерПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, 
		"Менеджер", 
		Менеджер, 
		ВидСравненияКомпоновкиДанных.Равно,
		, 
		ЗначениеЗаполнено(Менеджер));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

// Процедура устанавливает отборы, переданные в структуре. Отборы недоступны для изменения.
//
// Параметры:
//	СтруктураОтбора - Структура - Ключ: имя поля компоновки данных, Значение: значение отбора.
//
&НаСервере
Процедура УстановитьНедоступныеОтборыИзПараметров(СтруктураОтбора)
	
	Для Каждого ЭлементОтбора Из СтруктураОтбора Цикл
		
        Если ЭлементОтбора.Ключ = "Контрагент" И ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровКакКонтрагентов") Тогда
            
			РеквизитОтбора = ?(ЗначениеЗаполнено(ЭлементОтбора.Значение),
			                   ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭлементОтбора.Значение, "Партнер"),
			                   Справочники.Партнеры.ПустаяСсылка());
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			   Список, 
			   "Партнер", 
               РеквизитОтбора,
			   ВидСравненияКомпоновкиДанных.Равно);
			
			Продолжить;
			
		КонецЕсли;
		

		Если ТипЗнч(ЭлементОтбора.Значение) = Тип("ФиксированныйМассив") Тогда
			ВидСравненияКомпоновки = ВидСравненияКомпоновкиДанных.Всписке;
		Иначе
			ВидСравненияКомпоновки = ВидСравненияКомпоновкиДанных.Равно;
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, 
			ЭлементОтбора.Ключ, 
			ЭлементОтбора.Значение, 
			ВидСравненияКомпоновки);
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
