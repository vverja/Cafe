////////////////////////////////////////////////////////////////////////////////
//МОДУЛЬ СОДЕРЖИТ ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ РАБОТЫ С ПАКЕТАМИ ОБМЕНА С МОБИЛЬНЫМ ПРИЛОЖЕНИЕМ "ЗАКАЗЫ"
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ФункцииВозратаСтруктурыОбъектовОбменаПакетаXDTO_CustomerOrders

// Возвращает структуру объекта мобильного приложения "Валюты" для обмена.
//
// Возвращаемое значение:
//  Структура
//
Функция СтруктураВалюты() Экспорт
	
	СтруктураВалюты = СтандартнаяСтруктураОбъекта();
	
	СтруктураВалюты.Вставить("Code");
	
	Возврат СтруктураВалюты;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Виды контактной информации" для обмена.
//
// Возвращаемое значение:
//  Структура
//
Функция СтруктураВидаКИ(Знач ЭтоГруппа) Экспорт
	
	СтруктураВидаКИ = СтандартнаяСтруктураОбъекта();
	
	СтруктураВидаКИ.Вставить("IsFolder");
	СтруктураВидаКИ.Вставить("Parent");
	СтруктураВидаКИ.Вставить("PredefinedDataName");
	СтруктураВидаКИ.Вставить("ERPКод");
	
	Если ЭтоГруппа Тогда
		Возврат СтруктураВидаКИ;
	КонецЕсли;
	
	СтруктураВидаКИ.Вставить("Тип");
	СтруктураВидаКИ.Вставить("РеквизитДопУпорядочивания");
	СтруктураВидаКИ.Вставить("РедактированиеТолькоВДиалоге");
	СтруктураВидаКИ.Вставить("МожноИзменятьСпособРедактирования");
	СтруктураВидаКИ.Вставить("АдресТолькоРоссийский");
	СтруктураВидаКИ.Вставить("ВключатьСтрануВПредставление");
	СтруктураВидаКИ.Вставить("ОбязательноеЗаполнение");
	СтруктураВидаКИ.Вставить("ПроверятьКорректность");
	СтруктураВидаКИ.Вставить("СкрыватьНеактуальныеАдреса");
	СтруктураВидаКИ.Вставить("Подсказка");
	СтруктураВидаКИ.Вставить("РазрешитьВводНесколькихЗначений");
	// Поддержка мобильного приложения до версии 3.0.2.
	СтруктураВидаКИ.Вставить("ЗапрещатьВводНекорректного");
	
	Возврат СтруктураВидаКИ;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Виды номенклатуры" для обмена.
//
// Возвращаемое значение:
//  Структура
//
Функция СтруктураВидаНоменклатуры() Экспорт
	
	СтруктураВидаНоменклатуры = СтандартнаяСтруктураОбъекта();
	СтруктураВидаНоменклатуры.Вставить("IsFolder");
	СтруктураВидаНоменклатуры.Вставить("Parent");
	
	СтруктураВидаНоменклатуры.Вставить("ERPКод");
	
	Возврат СтруктураВидаНоменклатуры;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Виды цен" для обмена.
//
// Возвращаемое значение:
//  Структура
//
Функция СтруктураВидаЦены() Экспорт
	
	СтруктураВидаЦены = СтандартнаяСтруктураОбъекта();
	
	СтруктураВидаЦены.Вставить("ERPКод");
	СтруктураВидаЦены.Вставить("ВалютаЦены");
	СтруктураВидаЦены.Вставить("ЦенаВключаетНДС");
	
	Возврат СтруктураВидаЦены;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Договоры клиентов" для обмена.
//
// Возвращаемое значение:
//  Структура
//
Функция СтруктураДоговора() Экспорт
	
	СтруктураДоговора = СтандартнаяСтруктураОбъекта();
	
	СтруктураДоговора.Вставить("ERPКодДоговора");
	СтруктураДоговора.Вставить("ERPКодСоглашения");
	СтруктураДоговора.Вставить("ВалютаВзаиморасчетов");
	СтруктураДоговора.Вставить("ВидЦены");
	СтруктураДоговора.Вставить("Дата");
	СтруктураДоговора.Вставить("Действует");
	СтруктураДоговора.Вставить("Клиент");
	СтруктураДоговора.Вставить("Комиссия");
	СтруктураДоговора.Вставить("Контрагент");
	СтруктураДоговора.Вставить("Номер");
	СтруктураДоговора.Вставить("Организация");
	СтруктураДоговора.Вставить("Пояснение");
	СтруктураДоговора.Вставить("Склад");
	СтруктураДоговора.Вставить("УникальныйКлюч");
	СтруктураДоговора.Вставить("Типовое");
	СтруктураДоговора.Вставить("ЕстьУточнениеЦен");
	СтруктураДоговора.Вставить("ИспользуютсяДоговорыКонтрагентов");
	СтруктураДоговора.Вставить("ФормаОплаты");
	
	Возврат СтруктураДоговора;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Единицы измерения" для обмена.
//
// Возвращаемое значение:
//  Структура
//
Функция СтруктураЕдиницыИзмерения() Экспорт
	
	СтруктураЕдиницыИзмерения = СтандартнаяСтруктураОбъекта();
	СтруктураЕдиницыИзмерения.Вставить("Code");
	СтруктураЕдиницыИзмерения.Вставить("PredefinedDataName");
	
	СтруктураЕдиницыИзмерения.Вставить("МеждународноеСокращение");
	СтруктураЕдиницыИзмерения.Вставить("НаименованиеПолное");
	
	Возврат СтруктураЕдиницыИзмерения;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Контактные лица клиента" для обмена.
//
// Возвращаемое значение:
//  Структура
//
Функция СтруктураКонтактногоЛица() Экспорт
	
	СтруктураКонтактногоЛица = СтандартнаяСтруктураОбъекта();
	СтруктураКонтактногоЛица.Вставить("Owner", "");
	
	СтруктураКонтактногоЛица.Вставить("ERPКод", "");
	СтруктураКонтактногоЛица.Вставить("ДатаРождения", Дата("00010101"));
	СтруктураКонтактногоЛица.Вставить("ДолжностьПоВизитке", "");
	СтруктураКонтактногоЛица.Вставить("Комментарий", "");
	СтруктураКонтактногоЛица.Вставить("КонтактнаяИнформация");
	
	Возврат СтруктураКонтактногоЛица;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Контрагента" для обмена.
//
// Возвращаемое значение:
//  Структура
//
Функция СтруктураКонтрагента() Экспорт
	
	СтруктураКонтрагента = СтандартнаяСтруктураОбъекта();
	
	СтруктураКонтрагента.Вставить("ERPКод");
	СтруктураКонтрагента.Вставить("Клиент");
	СтруктураКонтрагента.Вставить("НаименованиеПолное");
	СтруктураКонтрагента.Вставить("ПредставлениеКонтрагента");
	СтруктураКонтрагента.Вставить("ЮрФизЛицо");
	СтруктураКонтрагента.Вставить("КодПоЕДРПОУ");
	
	Возврат СтруктураКонтрагента;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Номенклатура" для обмена.
//
// Возвращаемое значение:
//  Структура
//
Функция СтруктураНоменклатуры() Экспорт
	
	СтруктураНоменклатуры = СтандартнаяСтруктураОбъекта();
	СтруктураНоменклатуры.Вставить("IsFolder");
	СтруктураНоменклатуры.Вставить("Parent");
	СтруктураНоменклатуры.Вставить("Code");
	
	СтруктураНоменклатуры.Вставить("ERPКодНоменклатура");
	СтруктураНоменклатуры.Вставить("ERPКодХарактеристика");
	СтруктураНоменклатуры.Вставить("Артикул");
	СтруктураНоменклатуры.Вставить("ВидНоменклатуры");
	СтруктураНоменклатуры.Вставить("ЕдиницаЗаказа");
	СтруктураНоменклатуры.Вставить("ЕдиницаИзмерения");
	СтруктураНоменклатуры.Вставить("НаименованиеПолное");
	СтруктураНоменклатуры.Вставить("СтавкаНДСЧислом");
	СтруктураНоменклатуры.Вставить("СтрокаПоиска");
	СтруктураНоменклатуры.Вставить("Услуга");
	СтруктураНоменклатуры.Вставить("ЦеноваяГруппа");
	
	СтруктураНоменклатуры.Вставить("ВесЕдиницаИзмерения");
	СтруктураНоменклатуры.Вставить("ВесЗнаменатель");
	СтруктураНоменклатуры.Вставить("ВесИспользовать");
	СтруктураНоменклатуры.Вставить("ВесМожноУказыватьВДокументах");
	СтруктураНоменклатуры.Вставить("ВесЧислитель");
	СтруктураНоменклатуры.Вставить("Описание");
	СтруктураНоменклатуры.Вставить("ФайлКартинки");
	
	Возврат СтруктураНоменклатуры;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Номенклатура" для обмена.
//
// Возвращаемое значение:
//  Структура
//
Функция СтруктураНоменклатурыПрисоединенныеФайлы() Экспорт
	
	СтруктураНоменклатурыПрисоединенныеФайлы = СтандартнаяСтруктураОбъекта();
	
	СтруктураНоменклатурыПрисоединенныеФайлы.Вставить("ВладелецФайла");
	СтруктураНоменклатурыПрисоединенныеФайлы.Вставить("ДатаСоздания");
	СтруктураНоменклатурыПрисоединенныеФайлы.Вставить("Описание");
	СтруктураНоменклатурыПрисоединенныеФайлы.Вставить("Размер");
	СтруктураНоменклатурыПрисоединенныеФайлы.Вставить("Расширение");
	СтруктураНоменклатурыПрисоединенныеФайлы.Вставить("ХранимыйФайл");
	
	Возврат СтруктураНоменклатурыПрисоединенныеФайлы;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Клиенты" для обмена.
//
// Возвращаемое значение:
//  Структура
//
Функция СтруктураПартнера() Экспорт
	
	СтруктураПартнера = СтандартнаяСтруктураОбъекта();
	
	СтруктураПартнера.Вставить("Parent");
	СтруктураПартнера.Вставить("Code");
	
	СтруктураПартнера.Вставить("ERPКод");
	СтруктураПартнера.Вставить("ВидЦены");
	СтруктураПартнера.Вставить("ВремяДоставкиПо");
	СтруктураПартнера.Вставить("ВремяДоставкиС");
	СтруктураПартнера.Вставить("ДополнительнаяИнформацияПоДоставке");
	СтруктураПартнера.Вставить("ОтгрузкаЗапрещена");
	СтруктураПартнера.Вставить("ПричинаДобавленияВСтопЛист");
	СтруктураПартнера.Вставить("Самовывоз");
	СтруктураПартнера.Вставить("Склад");
	СтруктураПартнера.Вставить("СтрокаПоиска");
	СтруктураПартнера.Вставить("ФормаОплаты");
	СтруктураПартнера.Вставить("ДополнительнаяИнформация");
	СтруктураПартнера.Вставить("КонтактнаяИнформация");
	СтруктураПартнера.Вставить("УдалитьАдрес");
	СтруктураПартнера.Вставить("УдалитьАдресДоставки");
	СтруктураПартнера.Вставить("УдалитьКонтактноеЛицо");
	СтруктураПартнера.Вставить("УдалитьТелефон");
	СтруктураПартнера.Вставить("УдалитьЭлектроннаяПочта");
	
	Возврат СтруктураПартнера;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Организации" для обмена.
//
// Возвращаемое значение:
//  Структура
//
Функция СтруктураОрганизации() Экспорт
	
	СтруктураОрганизации = СтандартнаяСтруктураОбъекта();
	
	СтруктураОрганизации.Вставить("ERPКод");
	СтруктураОрганизации.Вставить("Префикс");
	СтруктураОрганизации.Вставить("СистемаНалогообложения");
	СтруктураОрганизации.Вставить("КонтактнаяИнформация");
	
	Возврат СтруктураОрганизации;
КонецФункции

// Возвращает структуру ответного сообщения для обмена.
//
// Возвращаемое значение:
//  КомпонентыОбмена - Структура
//
Функция СтруктураОтвета() Экспорт
	
	КомпонентыОбмена = Новый Структура;
	КомпонентыОбмена.Вставить("КлючСообщенияЖурналаРегистрации",
		ОбменДаннымиСервер.СобытиеЖурналаРегистрацииОбменДанными());
	КомпонентыОбмена.Вставить("УзелКорреспондента", НЕОПРЕДЕЛЕНО);
	КомпонентыОбмена.Вставить("Комментарий", "");
	КомпонентыОбмена.Вставить("ДействиеПриОбмене", НЕОПРЕДЕЛЕНО);
	КомпонентыОбмена.Вставить("РезультатВыполненияОбмена", НЕОПРЕДЕЛЕНО);
	КомпонентыОбмена.Вставить("ДатаНачала", Дата("00010101000000"));
	КомпонентыОбмена.Вставить("ДатаОкончания", Дата("00010101000000"));
	
	КомпонентыОбмена.Вставить("ResultMessage", "");
	КомпонентыОбмена.Вставить("Success", ИСТИНА);
	КомпонентыОбмена.Вставить("Continue", ЛОЖЬ);
	
	Возврат КомпонентыОбмена;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Номенклатура" для обмена для групп.
//
// Возвращаемое значение:
//  Структура
//
Функция СтруктураРодителяНоменклатуры() Экспорт
	
	СтруктураРодителяНоменклатуры = СтандартнаяСтруктураОбъекта();
	СтруктураРодителяНоменклатуры.Вставить("IsFolder");
	СтруктураРодителяНоменклатуры.Вставить("Parent");
	СтруктураРодителяНоменклатуры.Вставить("Code");
	
	СтруктураРодителяНоменклатуры.Вставить("ERPКодНоменклатура");
	СтруктураРодителяНоменклатуры.Вставить("СтрокаПоиска");
	
	Возврат СтруктураРодителяНоменклатуры;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Склады" для обмена.
//
// Параметры:
//  ЭтоГруппа - Булево - призанк содания структуры для группы.
//
// Возвращаемое значение:
//  Структура
//
Функция СтруктураСклада(Знач ЭтоГруппа) Экспорт
	
	СтруктураСклада = СтандартнаяСтруктураОбъекта();
	
	СтруктураСклада.Вставить("IsFolder");
	СтруктураСклада.Вставить("Parent");
	
	СтруктураСклада.Вставить("ERPКод");
	
	Если ЭтоГруппа Тогда
		Возврат СтруктураСклада;
	КонецЕсли;
	
	СтруктураСклада.Вставить("ГруппаСкладов");
	СтруктураСклада.Вставить("УдалитьАдрес");
	СтруктураСклада.Вставить("УдалитьТелефон");
	СтруктураСклада.Вставить("УдалитьЭлектроннаяПочта");
	СтруктураСклада.Вставить("КонтактнаяИнформация");
	
	Возврат СтруктураСклада;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Страны мира" для обмена.
//
// Возвращаемое значение:
//  Структура
//
Функция СтруктураСтраны() Экспорт
	
	СтруктураСтраны = СтандартнаяСтруктураОбъекта();
	
	СтруктураСтраны.Вставить("Code");
	СтруктураСтраны.Вставить("PredefinedDataName");
	СтруктураСтраны.Вставить("НаименованиеПолное");
	СтруктураСтраны.Вставить("КодАльфа2");
	СтруктураСтраны.Вставить("КодАльфа3");
	
	Возврат СтруктураСтраны;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Упаковки" для обмена.
//
// Возвращаемое значение:
//  Структура
//
Функция СтруктураУпаковки() Экспорт
	
	СтруктураУпаковки = СтандартнаяСтруктураОбъекта();
	СтруктураУпаковки.Вставить("Owner");
	СтруктураУпаковки.Вставить("Parent");
	
	СтруктураУпаковки.Вставить("ERPКод");
	СтруктураУпаковки.Вставить("ЕдиницаИзмерения");
	СтруктураУпаковки.Вставить("Коэффициент");
	СтруктураУпаковки.Вставить("НаименованиеПолное");
	
	Возврат СтруктураУпаковки;
КонецФункции

// Возвращает структуру объекта мобильного приложения "Ценовые группы" для обмена.
//
// Возвращаемое значение:
//  Структура
//
Функция СтруктураЦеновойГруппы() Экспорт
	
	СтруктураЦеновойГруппы = СтандартнаяСтруктураОбъекта();
	СтруктураЦеновойГруппы.Вставить("Описание");
	
	Возврат СтруктураЦеновойГруппы;
КонецФункции

#КонецОбласти

#Область Вспомогательные

// Возвращает строковое представление URI пространства имен web -сервиса.
//
// Возвращаемое значение:
//  Строка
//
Функция URIПространстваИмен() Экспорт
	
	Возврат "http://www.1c.ru/CustomerOrders/Exchange";
КонецФункции

// Возвращает валюту мобильного приложения.
//
// Возвращаемое значение:
//  СправочникСсылка.Валюты
//
Функция ВалютаЗаказов() Экспорт
	
	НаборВалют = Константы.СоздатьНабор("ВалютаРегламентированногоУчета, ВалютаУправленческогоУчета");
	НаборВалют.Прочитать();
	ВалютаЗаказов = ?(ЗначениеЗаполнено(НаборВалют.ВалютаРегламентированногоУчета),
		НаборВалют.ВалютаРегламентированногоУчета, НаборВалют.ВалютаУправленческогоУчета);
	
	Возврат ВалютаЗаказов;
КонецФункции

// Возвращает строковое представление идентификатора валюты.
//
// Возвращаемое значение:
//  Строка
//
Функция ИдентификаторВалютыЗаказов() Экспорт
	
	Валюта = ВалютаЗаказов();
	
	Возврат СокрЛП(Валюта.УникальныйИдентификатор());
КонецФункции

// Возвращает настройки компоновки для узла обмена
// Параметры:
//  УзелОбмена - узел обмена с мобильным приложением.
//
// Возвращаемое знаение:
//  КомпоновщикНастроекКомпоновкиДанных
//
Функция ПолучитьНастройкиОбмена(УзелОбмена) Экспорт
	
	ВидНастройкиОбмена = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(УзелОбмена, "ВидНастройкиОбмена");
	Если ЗначениеЗаполнено(ВидНастройкиОбмена) Тогда
		ХранилищеНастроек = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидНастройкиОбмена, "НастройкиОбмена");
	Иначе
		ХранилищеНастроек = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(УзелОбмена, "НастройкиОбмена");
	КонецЕсли;
	Возврат ХранилищеНастроек.Получить();
КонецФункции

// Возвращает строковое представление пустой ссылки.
//
// Возвращаемое значение:
//  Строка
//
Функция ПустойИдентификатор() Экспорт
	
	Возврат "00000000-0000-0000-0000-000000000000";
КонецФункции

// Возвращает текст запроса контактных лиц клиента.
//
// Возвращаемое значение:
//  Строка
//
Функция ТекстЗапросаКонтактныхЛицКлиента() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КонтактныеЛицаПартнеров.Ссылка КАК Ссылка,
	|	КонтактныеЛицаПартнеров.ПометкаУдаления КАК DeletionMark,
	|	КонтактныеЛицаПартнеров.Наименование КАК Description,
	|	&КодВладельца КАК Owner,
	|	"""" КАК ERPКод,
	|	КонтактныеЛицаПартнеров.Комментарий,
	|	КонтактныеЛицаПартнеров.ДолжностьПоВизитке,
	|	КонтактныеЛицаПартнеров.ДатаРождения
	|ИЗ
	|	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
	|ГДЕ
	|	КонтактныеЛицаПартнеров.Владелец = &Партнер";
	
	Возврат ТекстЗапроса;
КонецФункции

// Возвращает текст запроса поиска договора.
//
// Возвращаемое значение:
//  Строка
//
Функция ТекстЗапросаПоискаДоговора() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	0 КАК Приоритет,
	|	ДоговорыКонтрагентов.Ссылка КАК Договор
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Контрагент = &Контрагент
	|	И ДоговорыКонтрагентов.Организация = &Организация
	|	И ДоговорыКонтрагентов.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И ДоговорыКонтрагентов.Согласован
	|	И ДоговорыКонтрагентов.Номер = &Номер
	|	И ДоговорыКонтрагентов.Дата = &Дата
	|	И ДоговорыКонтрагентов.Партнер = &Партнер
	|	И ДоговорыКонтрагентов.Партнер.ОбслуживаетсяТорговымиПредставителями
	|	И ДоговорыКонтрагентов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Действует)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	ДоговорыКонтрагентов.Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Контрагент = &Контрагент
	|	И ДоговорыКонтрагентов.Организация = &Организация
	|	И ДоговорыКонтрагентов.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И ДоговорыКонтрагентов.Согласован
	|	И ДоговорыКонтрагентов.Номер = &Номер
	|	И ДоговорыКонтрагентов.Дата = &Дата
	|	И ДоговорыКонтрагентов.Партнер = &Партнер
	|	И ДоговорыКонтрагентов.Партнер.ОбслуживаетсяТорговымиПредставителями
	|	И НЕ ДоговорыКонтрагентов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Закрыт)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	ДоговорыКонтрагентов.Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Контрагент = &Контрагент
	|	И ДоговорыКонтрагентов.Организация = &Организация
	|	И ДоговорыКонтрагентов.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И ДоговорыКонтрагентов.Согласован
	|	И ДоговорыКонтрагентов.Номер = &Номер
	|	И ДоговорыКонтрагентов.Партнер = &Партнер
	|	И НЕ ДоговорыКонтрагентов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Закрыт)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	ДоговорыКонтрагентов.Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Контрагент = &Контрагент
	|	И ДоговорыКонтрагентов.Организация = &Организация
	|	И ДоговорыКонтрагентов.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И ДоговорыКонтрагентов.Согласован
	|	И ДоговорыКонтрагентов.Партнер = &Партнер
	|	И НЕ ДоговорыКонтрагентов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Закрыт)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4,
	|	ДоговорыКонтрагентов.Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Контрагент = &Контрагент
	|	И ДоговорыКонтрагентов.Организация = &Организация
	|	И ДоговорыКонтрагентов.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И ДоговорыКонтрагентов.Согласован
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	5,
	|	ДоговорыКонтрагентов.Ссылка
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Контрагент = &Контрагент
	|	И ДоговорыКонтрагентов.Организация = &Организация
	|	И ДоговорыКонтрагентов.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И НЕ ДоговорыКонтрагентов.Согласован
	|	И ДоговорыКонтрагентов.Номер = &Номер
	|	И ДоговорыКонтрагентов.Дата = &Дата
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет";
	
	Возврат ТекстЗапроса;
КонецФункции

// Возвращает текст запроса поиска индивидуальных соглашений.
//
// Возвращаемое значение:
//  Строка
//
Функция ТекстЗапросаПоискаИндивидуальныхСоглашений() Экспорт
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	0 КАК Приоритет,
	|	СоглашенияСКлиентами.Ссылка КАК Соглашение,
	|	СоглашенияСКлиентами.ИспользуютсяДоговорыКонтрагентов
	|ИЗ
	|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	|ГДЕ
	|	СоглашенияСКлиентами.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И НЕ СоглашенияСКлиентами.Типовое
	|	И СоглашенияСКлиентами.Партнер = &Партнер
	|	И СоглашенияСКлиентами.Организация = &Организация
	|	И СоглашенияСКлиентами.ВидЦен = &ВидЦен
	|	И СоглашенияСКлиентами.Контрагент = &Контрагент
	|	И СоглашенияСКлиентами.Склад = &Склад
	|	И СоглашенияСКлиентами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Действует)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	СоглашенияСКлиентами.Ссылка,
	|	СоглашенияСКлиентами.ИспользуютсяДоговорыКонтрагентов
	|ИЗ
	|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	|ГДЕ
	|	СоглашенияСКлиентами.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И НЕ СоглашенияСКлиентами.Типовое
	|	И СоглашенияСКлиентами.Партнер = &Партнер
	|	И СоглашенияСКлиентами.Организация = &Организация
	|	И СоглашенияСКлиентами.ВидЦен = &ВидЦен
	|	И СоглашенияСКлиентами.Контрагент = &Контрагент
	|	И СоглашенияСКлиентами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Действует)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	СоглашенияСКлиентами.Ссылка,
	|	СоглашенияСКлиентами.ИспользуютсяДоговорыКонтрагентов
	|ИЗ
	|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	|ГДЕ
	|	СоглашенияСКлиентами.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И НЕ СоглашенияСКлиентами.Типовое
	|	И СоглашенияСКлиентами.Партнер = &Партнер
	|	И СоглашенияСКлиентами.Организация = &Организация
	|	И СоглашенияСКлиентами.ВидЦен = &ВидЦен
	|	И НЕ СоглашенияСКлиентами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Закрыто)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4,
	|	СоглашенияСКлиентами.Ссылка,
	|	СоглашенияСКлиентами.ИспользуютсяДоговорыКонтрагентов
	|ИЗ
	|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	|ГДЕ
	|	СоглашенияСКлиентами.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И НЕ СоглашенияСКлиентами.Типовое
	|	И СоглашенияСКлиентами.Партнер = &Партнер
	|	И ВЫБОР
	|			КОГДА СоглашенияСКлиентами.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСКлиентами.Организация = &Организация
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА СоглашенияСКлиентами.ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСКлиентами.ВидЦен = &ВидЦен
	|		КОНЕЦ
	|	И НЕ СоглашенияСКлиентами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Закрыто)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	5,
	|	СоглашенияСКлиентами.Ссылка,
	|	СоглашенияСКлиентами.ИспользуютсяДоговорыКонтрагентов
	|ИЗ
	|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	|ГДЕ
	|	СоглашенияСКлиентами.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И НЕ СоглашенияСКлиентами.Типовое
	|	И СоглашенияСКлиентами.Партнер = &Партнер
	|	И ВЫБОР
	|			КОГДА СоглашенияСКлиентами.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСКлиентами.Организация = &Организация
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА СоглашенияСКлиентами.ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСКлиентами.ВидЦен = &ВидЦен
	|		КОНЕЦ
	|	И СоглашенияСКлиентами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Закрыто)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет";
	
	Возврат ТекстЗапроса;
КонецФункции

// Возвращает текст запроса поиска типовых соглашений.
//
// Возвращаемое значение:
//  Строка
//
Функция ТекстЗапросаПоискаТиповыхСоглашений() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	0 КАК Приоритет,
	|	СоглашенияСКлиентами.Ссылка КАК Соглашение,
	|	СоглашенияСКлиентами.ИспользуютсяДоговорыКонтрагентов
	|ИЗ
	|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПартнерыСегмента КАК СегментыПартнеров
	|		ПО (ВЫБОР
	|				КОГДА НЕ &ИспользуютсяСегментыПартнеров
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ВЫБОР
	|						КОГДА СоглашенияСКлиентами.СегментПартнеров = ЗНАЧЕНИЕ(Справочник.СегментыПартнеров.ПустаяСсылка)
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ СоглашенияСКлиентами.СегментПартнеров = СегментыПартнеров.Сегмент
	|								И &Партнер = СегментыПартнеров.Партнер
	|					КОНЕЦ
	|			КОНЕЦ)
	|ГДЕ
	|	СоглашенияСКлиентами.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И СоглашенияСКлиентами.Типовое
	|	И СоглашенияСКлиентами.Организация = &Организация
	|	И СоглашенияСКлиентами.ВидЦен = &ВидЦен
	|	И СоглашенияСКлиентами.Склад = &Склад
	|	И СоглашенияСКлиентами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Действует)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1,
	|	СоглашенияСКлиентами.Ссылка,
	|	СоглашенияСКлиентами.ИспользуютсяДоговорыКонтрагентов
	|ИЗ
	|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПартнерыСегмента КАК СегментыПартнеров
	|		ПО (ВЫБОР
	|				КОГДА НЕ &ИспользуютсяСегментыПартнеров
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ВЫБОР
	|						КОГДА СоглашенияСКлиентами.СегментПартнеров = ЗНАЧЕНИЕ(Справочник.СегментыПартнеров.ПустаяСсылка)
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ СоглашенияСКлиентами.СегментПартнеров = СегментыПартнеров.Сегмент
	|								И &Партнер = СегментыПартнеров.Партнер
	|					КОНЕЦ
	|			КОНЕЦ)
	|ГДЕ
	|	СоглашенияСКлиентами.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И СоглашенияСКлиентами.Типовое
	|	И СоглашенияСКлиентами.Организация = &Организация
	|	И СоглашенияСКлиентами.ВидЦен = &ВидЦен
	|	И ВЫБОР
	|			КОГДА СоглашенияСКлиентами.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСКлиентами.Склад = &Склад
	|		КОНЕЦ
	|	И НЕ СоглашенияСКлиентами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Закрыто)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2,
	|	СоглашенияСКлиентами.Ссылка,
	|	СоглашенияСКлиентами.ИспользуютсяДоговорыКонтрагентов
	|ИЗ
	|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПартнерыСегмента КАК СегментыПартнеров
	|		ПО (ВЫБОР
	|				КОГДА НЕ &ИспользуютсяСегментыПартнеров
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ВЫБОР
	|						КОГДА СоглашенияСКлиентами.СегментПартнеров = ЗНАЧЕНИЕ(Справочник.СегментыПартнеров.ПустаяСсылка)
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ СоглашенияСКлиентами.СегментПартнеров = СегментыПартнеров.Сегмент
	|								И &Партнер = СегментыПартнеров.Партнер
	|					КОНЕЦ
	|			КОНЕЦ)
	|ГДЕ
	|	СоглашенияСКлиентами.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И СоглашенияСКлиентами.Типовое
	|	И СоглашенияСКлиентами.Организация = &Организация
	|	И ВЫБОР
	|			КОГДА СоглашенияСКлиентами.ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСКлиентами.ВидЦен = &ВидЦен
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА СоглашенияСКлиентами.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСКлиентами.Склад = &Склад
	|		КОНЕЦ
	|	И НЕ СоглашенияСКлиентами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Закрыто)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	3,
	|	СоглашенияСКлиентами.Ссылка,
	|	СоглашенияСКлиентами.ИспользуютсяДоговорыКонтрагентов
	|ИЗ
	|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПартнерыСегмента КАК СегментыПартнеров
	|		ПО (ВЫБОР
	|				КОГДА НЕ &ИспользуютсяСегментыПартнеров
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ВЫБОР
	|						КОГДА СоглашенияСКлиентами.СегментПартнеров = ЗНАЧЕНИЕ(Справочник.СегментыПартнеров.ПустаяСсылка)
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ СоглашенияСКлиентами.СегментПартнеров = СегментыПартнеров.Сегмент
	|								И &Партнер = СегментыПартнеров.Партнер
	|					КОНЕЦ
	|			КОНЕЦ)
	|ГДЕ
	|	СоглашенияСКлиентами.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И СоглашенияСКлиентами.Типовое
	|	И ВЫБОР
	|			КОГДА СоглашенияСКлиентами.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСКлиентами.Организация = &Организация
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА СоглашенияСКлиентами.ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСКлиентами.ВидЦен = &ВидЦен
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА СоглашенияСКлиентами.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСКлиентами.Склад = &Склад
	|		КОНЕЦ
	|	И НЕ СоглашенияСКлиентами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Закрыто)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	4,
	|	СоглашенияСКлиентами.Ссылка,
	|	СоглашенияСКлиентами.ИспользуютсяДоговорыКонтрагентов
	|ИЗ
	|	Справочник.СоглашенияСКлиентами КАК СоглашенияСКлиентами
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПартнерыСегмента КАК СегментыПартнеров
	|		ПО (ВЫБОР
	|				КОГДА &ЭтоНовыйПартнер
	|					ТОГДА ИСТИНА
	|				КОГДА НЕ &ИспользуютсяСегментыПартнеров
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ВЫБОР
	|						КОГДА СоглашенияСКлиентами.СегментПартнеров = ЗНАЧЕНИЕ(Справочник.СегментыПартнеров.ПустаяСсылка)
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ СоглашенияСКлиентами.СегментПартнеров = СегментыПартнеров.Сегмент
	|								И &Партнер = СегментыПартнеров.Партнер
	|					КОНЕЦ
	|			КОНЕЦ)
	|ГДЕ
	|	СоглашенияСКлиентами.ХозяйственнаяОперация = &ХозяйственнаяОперация
	|	И СоглашенияСКлиентами.Типовое
	|	И ВЫБОР
	|			КОГДА СоглашенияСКлиентами.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСКлиентами.Организация = &Организация
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА СоглашенияСКлиентами.ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСКлиентами.ВидЦен = &ВидЦен
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА СоглашенияСКлиентами.Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ СоглашенияСКлиентами.Склад = &Склад
	|		КОНЕЦ
	|	И СоглашенияСКлиентами.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСКлиентами.Закрыто)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет";
	
	Возврат ТекстЗапроса;
КонецФункции

// Возвращает текст запроса для выборки реквизитов объектов.
//
// Возвращаемое значение:
//  Строка
//
Функция ТекстЗапросаРеквизитовОбъектовПрайса(Индивидуальный) Экспорт
	
	ТекстЗапроса = СтрШаблон(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	%1
	|	ТаблицаПрайса.ВидЦены КАК ВидЦены,
	|	ТаблицаПрайса.Цена КАК Цена,
	|	ТаблицаПрайса.ВидНоменклатуры КАК ВидНоменклатуры,
	|	ТаблицаПрайса.РодительНоменклатуры КАК РодительНоменклатуры,
	|	ТаблицаПрайса.ЦеноваяГруппа КАК ЦеноваяГруппа,
	|	ТаблицаПрайса.СтрокаПоиска КАК СтрокаПоиска,
	|	ТаблицаПрайса.НоменклатураСсылка КАК НоменклатураСсылка,
	|	ТаблицаПрайса.УпаковкаСсылка КАК УпаковкаСсылка,
	|	ТаблицаПрайса.ВладелецУпаковкиСсылка КАК ВладелецУпаковкиСсылка,
	|	ТаблицаПрайса.ЕдиницаИзмеренияСсылка КАК ЕдиницаИзмеренияСсылка,
	|	ТаблицаПрайса.ХарактеристикаСсылка КАК ХарактеристикаСсылка,
	|	ТаблицаПрайса.ВидЦеныСсылка КАК ВидЦеныСсылка,
	|	ТаблицаПрайса.ИспользоватьУпаковки КАК ИспользоватьУпаковки,
	|	ТаблицаПрайса.ХарактеристикиИспользуются КАК ХарактеристикиИспользуются,
	|	ТаблицаПрайса.ИдНоменклатуры КАК ИдНоменклатуры,
	|	ТаблицаПрайса.ИдХарактеристики КАК ИдХарактеристики,
	|	ТаблицаПрайса.ИдУпаковки КАК ИдУпаковки,
	|	ТаблицаПрайса.Номенклатура КАК Номенклатура,
	|	ТаблицаПрайса.Упаковка КАК Упаковка,
	|	ТаблицаПрайса.ИспользоватьВес КАК ИспользоватьВес,
	|	ТаблицаПрайса.ИспользоватьКартинки КАК ИспользоватьКартинки,
	|	ТаблицаПрайса.ФайлКартинкиСсылка КАК ФайлКартинкиСсылка,
	|	ТаблицаПрайса.ТребуетсяОтправкаКартинки КАК ТребуетсяОтправкаКартинки,
	|	ТаблицаПрайса.ТребуетсяОтправкаТовара КАК ТребуетсяОтправкаТовара
	|ПОМЕСТИТЬ ВременныйПрайс
	|ИЗ
	|	&ТаблицаПрайса КАК ТаблицаПрайса
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	%2
	|	ВидЦены,
	|	Цена,
	|	ВидНоменклатуры,
	|	РодительНоменклатуры,
	|	ЦеноваяГруппа,
	|	СтрокаПоиска,
	|	НоменклатураСсылка,
	|	УпаковкаСсылка,
	|	ВладелецУпаковкиСсылка,
	|	ЕдиницаИзмеренияСсылка,
	|	ХарактеристикаСсылка,
	|	ВидЦеныСсылка,
	|	ИспользоватьУпаковки,
	|	ХарактеристикиИспользуются,
	|	ИдНоменклатуры,
	|	ИдХарактеристики,
	|	ИдУпаковки,
	|	Номенклатура,
	|	Упаковка,
	|	ИспользоватьВес,
	|	ИспользоватьКартинки,
	|	ФайлКартинкиСсылка,
	|	ТребуетсяОтправкаКартинки,
	|	ТребуетсяОтправкаТовара
	|;",
	?(Индивидуальный, "ТаблицаПрайса.ДоговорКлиента КАК ДоговорКлиента,", ""),
	?(Индивидуальный, "ДоговорКлиента,", ""));
	
	ТекстЗапроса = ТекстЗапроса + "
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	%1,
	|	ТаблицаПрайса.ВидЦены,
	|	ТаблицаПрайса.Цена,
	|	ТаблицаПрайса.ВидНоменклатуры,
	|	ТаблицаПрайса.РодительНоменклатуры,
	|	ТаблицаПрайса.ЦеноваяГруппа,
	|	ТаблицаПрайса.СтрокаПоиска,
	|	ТаблицаПрайса.НоменклатураСсылка,
	|	ТаблицаПрайса.УпаковкаСсылка,
	|	ТаблицаПрайса.ВладелецУпаковкиСсылка,
	|	ТаблицаПрайса.ЕдиницаИзмеренияСсылка КАК НоменклатураЕдиницаИзмерения,
	|	ТаблицаПрайса.ХарактеристикаСсылка,
	|	ТаблицаПрайса.ВидЦеныСсылка,
	|	ТаблицаПрайса.ИспользоватьУпаковки,
	|	ТаблицаПрайса.ХарактеристикиИспользуются,
	|	ТаблицаПрайса.ИдНоменклатуры,
	|	ТаблицаПрайса.ИдХарактеристики,
	|	ТаблицаПрайса.ИдУпаковки,
	|	ТаблицаПрайса.ИспользоватьВес,
	|	ТаблицаПрайса.ФайлКартинкиСсылка,
	|	ТаблицаПрайса.ТребуетсяОтправкаКартинки,
	|	ТаблицаПрайса.ТребуетсяОтправкаТовара, %2, %3, %4, %5, %6
	|ИЗ
	|	ВременныйПрайс КАК ТаблицаПрайса
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО (СправочникНоменклатура.Ссылка = ТаблицаПрайса.НоменклатураСсылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЦен КАК СправочникВидыЦен
	|		ПО (СправочникВидыЦен.Ссылка = ТаблицаПрайса.ВидЦеныСсылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|		ПО (УпаковкиНоменклатуры.Ссылка = ТаблицаПрайса.УпаковкаСсылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ПО (ТаблицаПрайса.ХарактеристикиИспользуются)
	|			И (ХарактеристикиНоменклатуры.Ссылка = ТаблицаПрайса.ХарактеристикаСсылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыМобильногоПриложения1СЗаказы КАК СоответствиеУпаковки
	|		ПО (СоответствиеУпаковки.ИдНоменклатуры = ТаблицаПрайса.ИдНоменклатуры)
	|			И (СоответствиеУпаковки.ИдХарактеристики = ТаблицаПрайса.ИдХарактеристики)
	|			И (СоответствиеУпаковки.ИдУпаковки = ТаблицаПрайса.ИдУпаковки)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеНоменклатурыМобильногоПриложения1СЗаказы КАК СоответствиеНоменклатуры
	|		ПО (СоответствиеНоменклатуры.ИдНоменклатуры = ТаблицаПрайса.ИдНоменклатуры)
	|			И (СоответствиеНоменклатуры.ИдХарактеристики = ТаблицаПрайса.ИдХарактеристики)
	|			И (СоответствиеНоменклатуры.ИдУпаковки = """")
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НоменклатураПрисоединенныеФайлы КАК ФайлыНоменклатуры
	|		ПО (ФайлыНоменклатуры.Ссылка = СправочникНоменклатура.ФайлКартинки)
	|			И (ТаблицаПрайса.ТребуетсяОтправкаКартинки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВременныйПрайс";
	
	ТекстНоменклатура = "
	|	СправочникНоменклатура.ПометкаУдаления КАК НоменклатураПометкаУдаления,
	|	СправочникНоменклатура.Код КАК НоменклатураКод,
	|	СправочникНоменклатура.НаименованиеПолное КАК НоменклатураНаименованиеПолное,
	|	СправочникНоменклатура.Артикул КАК НоменклатураАртикул,
	|	СправочникНоменклатура.СтавкаНДС КАК СтавкаНДССсылка,
	|	ВЫБОР
	|		КОГДА НЕ СправочникНоменклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Услуга,
	|	СправочникНоменклатура.Родитель КАК НоменклатураРодитель,
	|	СправочникНоменклатура.Родитель.ПометкаУдаления КАК НоменклатураРодительПометкаУдаления,
	|	СправочникНоменклатура.Родитель.Родитель КАК НоменклатураРодительРодитель,
	|	СправочникНоменклатура.Родитель.Код КАК НоменклатураРодительКод,
	|	СправочникНоменклатура.ВидНоменклатуры КАК НоменклатураВидНоменклатуры,
	|	СправочникНоменклатура.ВидНоменклатуры.ПометкаУдаления КАК НоменклатураВидНоменклатурыПометкаУдаления,
	|	СправочникНоменклатура.ВидНоменклатуры.Родитель КАК НоменклатураВидНоменклатурыРодитель,
	|	СправочникНоменклатура.ЦеноваяГруппа КАК НоменклатураЦеноваяГруппа,
	|	СправочникНоменклатура.ЦеноваяГруппа.ПометкаУдаления КАК НоменклатураЦеноваяГруппаПометкаУдаления,
	|	СправочникНоменклатура.ЦеноваяГруппа.Описание КАК НоменклатураЦеноваяГруппаОписание,
	|	СправочникНоменклатура.ЕдиницаИзмерения.Код КАК НоменклатураЕдиницаИзмеренияКод,
	|	СправочникНоменклатура.ЕдиницаИзмерения.ПометкаУдаления КАК НоменклатураЕдиницаИзмеренияПометкаУдаления,
	|	СправочникНоменклатура.ЕдиницаИзмерения.МеждународноеСокращение КАК НоменклатураЕдиницаИзмеренияМеждународноеСокращение,
	|	СправочникНоменклатура.ЕдиницаИзмерения.НаименованиеПолное КАК НоменклатураЕдиницаИзмеренияНаименованиеПолное,
	|	СправочникНоменклатура.ЕдиницаИзмерения.ИмяПредопределенныхДанных КАК НоменклатураЕдиницаИзмеренияИмяПредопределенныхДанных,
	|	СправочникНоменклатура.ВесЕдиницаИзмерения КАК ВесУпаковкаСсылка,
	|	СправочникНоменклатура.ВесИспользовать,
	|	СправочникНоменклатура.ВесМожноУказыватьВДокументах,
	|	СправочникНоменклатура.ВесЗнаменатель,
	|	СправочникНоменклатура.ВесЧислитель,
	|	ВЫРАЗИТЬ(СправочникНоменклатура.Описание КАК СТРОКА(1000)) КАК НоменклатураОписание";
	
	ТекстФайлаКартинки = "
	|	ЕСТЬNULL(ФайлыНоменклатуры.Наименование, """") КАК ФайлКартинкиНаименование,
	|	ЕСТЬNULL(ФайлыНоменклатуры.ПометкаУдаления, ЛОЖЬ) КАК ФайлКартинкиПометкаУдаления,
	|	ЕСТЬNULL(ФайлыНоменклатуры.ВладелецФайла, """") КАК ФайлКартинкиВладелецФайла,
	|	ЕСТЬNULL(ФайлыНоменклатуры.ДатаСоздания, """") КАК ФайлКартинкиДатаСоздания,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ФайлыНоменклатуры.Описание, """") КАК СТРОКА(1000)) КАК ФайлКартинкиОписание,
	|	ЕСТЬNULL(ФайлыНоменклатуры.Размер, 0) КАК ФайлКартинкиРазмер,
	|	ЕСТЬNULL(ФайлыНоменклатуры.Расширение, """") КАК ФайлКартинкиРасширение";
	
	ТекстУпаковка = "
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ПометкаУдаления, ЛОЖЬ) КАК УпаковкиНоменклатурыПометкаУдаления,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.Наименование, """") КАК УпаковкиНоменклатурыНаименование,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК УпаковкиНоменклатурыКоэффициент,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК УпаковкиНоменклатурыЕдиницаИзмерения,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ЕдиницаИзмерения.Код, """") КАК УпаковкиНоменклатурыЕдиницаИзмеренияКод,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ЕдиницаИзмерения.ПометкаУдаления, ЛОЖЬ) КАК УпаковкиНоменклатурыЕдиницаИзмеренияПометкаУдаления,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ЕдиницаИзмерения.МеждународноеСокращение, """") КАК УпаковкиНоменклатурыЕдиницаИзмеренияМеждународноеСокращение,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ЕдиницаИзмерения.НаименованиеПолное, """") КАК УпаковкиНоменклатурыЕдиницаИзмеренияНаименованиеПолное,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ЕдиницаИзмерения.ИмяПредопределенныхДанных, """") КАК УпаковкиНоменклатурыЕдиницаИзмеренияИмяПредопределенныхДанных,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ВесЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК УпаковкиНоменклатурыВесЕдиницаИзмерения,
	|	ЕСТЬNULL(&ТекстЗапросаВесУпаковки, 0) КАК УпаковкиНоменклатурыВес,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ВесЕдиницаИзмерения.Код, """") КАК УпаковкиНоменклатурыВесЕдиницаИзмеренияКод,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ВесЕдиницаИзмерения.ПометкаУдаления, ЛОЖЬ) КАК УпаковкиНоменклатурыВесЕдиницаИзмеренияПометкаУдаления,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ВесЕдиницаИзмерения.МеждународноеСокращение, """") КАК УпаковкиНоменклатурыВесЕдиницаИзмеренияМеждународноеСокращение,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ВесЕдиницаИзмерения.НаименованиеПолное, """") КАК УпаковкиНоменклатурыВесЕдиницаИзмеренияНаименованиеПолное,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ВесЕдиницаИзмерения.ИмяПредопределенныхДанных, """") КАК УпаковкиНоменклатурыВесЕдиницаИзмеренияИмяПредопределенныхДанных,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.Родитель, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК УпаковкиНоменклатурыРодитель";
	
	ТекстПрочее = "
	|	ЕСТЬNULL(ХарактеристикиНоменклатуры.НаименованиеПолное, """") КАК ХарактеристикаНаименованиеПолное,
	|	СправочникВидыЦен.Наименование КАК ВидЦеныНаименование,
	|	СправочникВидыЦен.ПометкаУдаления КАК ВидЦеныПометкаУдаления,
	|	СправочникВидыЦен.ЦенаВключаетНДС КАК ВидЦеныЦенаВключаетНДС";
	
	ТекстПоискаСоответствия = "
	|	ВЫБОР
	|		КОГДА ТаблицаПрайса.ХарактеристикиИспользуются
	|			ТОГДА ЕСТЬNULL(СоответствиеНоменклатуры.ИдОбъектаМП, """")
	|		ИНАЧЕ ТаблицаПрайса.ИдНоменклатуры
	|	КОНЕЦ КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ТаблицаПрайса.ХарактеристикиИспользуются
	|			ТОГДА ВЫБОР
	|					КОГДА СоответствиеНоменклатуры.ИдОбъектаМП ЕСТЬ NULL 
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЗаписатьСоответствиеНоменклатуры,
	|	ВЫБОР
	|		КОГДА ТаблицаПрайса.ХарактеристикиИспользуются
	|			ТОГДА ЕСТЬNULL(СоответствиеУпаковки.ИдОбъектаМП, """")
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТаблицаПрайса.ИспользоватьУпаковки
	|					ТОГДА ВЫБОР
	|							КОГДА ТИПЗНАЧЕНИЯ(ТаблицаПрайса.ВладелецУпаковкиСсылка) = ТИП(Справочник.Номенклатура)
	|								ТОГДА ВЫБОР
	|										КОГДА НЕ ТаблицаПрайса.УпаковкаСсылка = ТаблицаПрайса.ЕдиницаИзмеренияСсылка
	|											ТОГДА ТаблицаПрайса.ИдУпаковки
	|										ИНАЧЕ ЕСТЬNULL(СоответствиеУпаковки.ИдОбъектаМП, """")
	|									КОНЕЦ
	|							ИНАЧЕ ЕСТЬNULL(СоответствиеУпаковки.ИдОбъектаМП, """")
	|						КОНЕЦ
	|				ИНАЧЕ ЕСТЬNULL(СоответствиеУпаковки.ИдОбъектаМП, """")
	|			КОНЕЦ
	|	КОНЕЦ КАК Упаковка,
	|	ВЫБОР
	|		КОГДА ТаблицаПрайса.ХарактеристикиИспользуются
	|			ТОГДА ВЫБОР
	|					КОГДА СоответствиеУпаковки.ИдОбъектаМП ЕСТЬ NULL 
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ТаблицаПрайса.ИспользоватьУпаковки
	|					ТОГДА ВЫБОР
	|							КОГДА ТИПЗНАЧЕНИЯ(ТаблицаПрайса.ВладелецУпаковкиСсылка) = ТИП(Справочник.Номенклатура)
	|								ТОГДА ВЫБОР
	|										КОГДА НЕ ТаблицаПрайса.УпаковкаСсылка = ТаблицаПрайса.ЕдиницаИзмеренияСсылка
	|											ТОГДА ЛОЖЬ
	|										ИНАЧЕ ВЫБОР
	|												КОГДА СоответствиеУпаковки.ИдОбъектаМП ЕСТЬ NULL 
	|													ТОГДА ИСТИНА
	|												ИНАЧЕ ЛОЖЬ
	|											КОНЕЦ
	|									КОНЕЦ
	|						КОНЕЦ
	|				ИНАЧЕ ВЫБОР
	|						КОГДА СоответствиеУпаковки.ИдОбъектаМП ЕСТЬ NULL 
	|							ТОГДА ИСТИНА
	|						ИНАЧЕ ЛОЖЬ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК ЗаписатьСоответствиеУпаковки";
	
	ТекстЗапроса = СтрШаблон(ТекстЗапроса, ?(Индивидуальный, "ТаблицаПрайса.ДоговорКлиента", "ЛОЖЬ КАК Выгружен"),
		ТекстНоменклатура, ТекстФайлаКартинки, ТекстУпаковка, ТекстПрочее, ТекстПоискаСоответствия);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"УпаковкиНоменклатуры", "СправочникНоменклатура"));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаВесУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаВесУпаковки(
			"УпаковкиНоменклатуры", "СправочникНоменклатура"));
	
	Возврат ТекстЗапроса;
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СтандартнаяСтруктураОбъекта()
	
	СтруктураСправочника = Новый Структура;
	СтруктураСправочника.Вставить("ref");
	СтруктураСправочника.Вставить("DeletionMark");
	СтруктураСправочника.Вставить("Description");
	
	Возврат СтруктураСправочника;
КонецФункции

#КонецОбласти
