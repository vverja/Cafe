#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДокументОснование = Параметры.ДокументОснование;	
	
	Если Не ДокументОснование.Проведен Тогда
		ТекстОшибки = НСтр("ru='Документ %ДокументОснование% не проведен. Оформление налоговых документов на основании непроведенного документа запрещено.';uk='Документ %ДокументОснование% не проведено. Оформлення податкових документів на підставі непроведенного документа заборонено.'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ДокументОснование%", ДокументОснование);
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;

	ДатаОкончания = ДокументОснование.Дата;
	Организация   = ДокументОснование.Организация;
	Партнер       = ДокументОснование.Партнер;
	Контрагент    = ДокументОснование.Контрагент;
	
	ОбновитьДатуАктуальностиРасчетовСервер();

	НастроитьЭлементыФормы();
	УстановитьОтборДинамическихСписков();
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюПечать);
	// Конец СтандартныеПодсистемы.Печать


КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	НастроитьЭлементыФормы();
	УстановитьОтборДинамическихСписков();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьДатуАктуальностиРасчетов(Команда)
	
	ОбновитьДатуАктуальностиРасчетовСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура АктуализироватьРасчеты(Команда)
	
	ДополнительныеСвойства = Новый Структура();
	Оповещение = Новый ОписаниеОповещения("АктуализироватьРасчетыПродолжение", ЭтотОбъект, ДополнительныеСвойства);
	
	ТекстВопроса = НСтр("ru='Актуализировать расчеты с клиентами?';uk='Актуалізувати розрахунки з клієнтами?'");
	
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
	
КонецПроцедуры

&НаКлиенте
Процедура АктуализироватьРасчетыПродолжение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	АктуализироватьРасчетыСервер();

	Элементы.СписокКПроверке.Обновить();	
	
	ПоказатьОповещениеПользователя(
		НСтр("ru='Актуализация расчетов';uk='Актуалізація розрахунків'"),
		,
		НСтр("ru='Расчеты с клиентами актуализированы. Состояние НН и П2 актуально до ';uk='Розрахунки з клієнтами актуалізовані. Стан ПН та Д2 актуальний до '") + Формат(ДатаАктуальностиРасчетов, "ДФ=dd.MM.yyyy; ДП='Нет данных'"),
		БиблиотекаКартинок.Информация32
	);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьНалоговыеДокументы(Команда)
	
	ОбновитьДатуАктуальностиРасчетовСервер();
	
	Если КонецДня(ДатаАктуальностиРасчетов) > КонецДня(ДатаОкончания) Тогда
		ПоказатьПредупреждение( ,
			НСтр("ru='Список сформированных налоговых документов актуален и не требует переформирования';uk='Список сформованих податкових документів актуальний і не потребує переформування'"),
			,
			НСтр("ru='Формирование не требуется';uk='Формування не потрібне'")
		);
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура ("Организация, Партнер, Контрагент"
											, ?(ЗначениеЗаполнено(Организация), Организация, Неопределено)
											, ?(ЗначениеЗаполнено(Партнер), Партнер, Неопределено)
											, ?(ЗначениеЗаполнено(Контрагент), Контрагент, Неопределено));
	
	Если (КонецДня(ДатаАктуальностиРасчетов) < КонецДня(ДатаОкончания)) И (ЗначениеЗаполнено(Партнер) ИЛИ  ЗначениеЗаполнено(Контрагент)) Тогда
		
		ДополнительныеСвойства = Новый Структура("СтруктураПараметров", СтруктураПараметров);
		Оповещение = Новый ОписаниеОповещения("СформироватьНалоговыеДокументыПродолжение", ЭтотОбъект, ДополнительныеСвойства);
		
		ТекстВопроса = НСтр("ru='Внимание! Формирование налоговых документов за несколько дней рекомендуется 
                                                          |выполнять по организации в целом, без отбора по клиенту и контрагенту. В противном 
                                                          |случае может нарушиться последовательность нумерации налоговых документов.
                                                          |
                                                          |Продолжить формирование с отбором по клиенту и/или контрагенту?'
                                                          |;uk='Увага! Формування податкових документів за кілька днів рекомендується 
                                                          |виконувати по організації в цілому, без відбору за клієнтом та контрагентом. В іншому 
                                                          |випадку може порушитися послідовність нумерації податкових документів.
                                                          |
                                                          |Продовжити формування з відбором за клієнтом та/або контрагентом?'");
								  
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, НСтр("ru='Продолжить с отбором';uk='Продовжити з відбором'"));
		Кнопки.Добавить(КодВозвратаДиалога.Нет, НСтр("ru='Убрать отбор';uk='Прибрати відбір'"));
		Кнопки.Добавить(КодВозвратаДиалога.Отмена);
		ПоказатьВопрос(Оповещение, ТекстВопроса, Кнопки, , КодВозвратаДиалога.Нет, НСтр("ru='Формирование налоговых документов';uk='Формування податкових документів'"));
		
		
	Иначе
	
		СформироватьНалоговыеДокументыЗавершение(СтруктураПараметров);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьНалоговыеДокументыПродолжение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		ДополнительныеПараметры.СтруктураПараметров.Партнер = Неопределено;
		ДополнительныеПараметры.СтруктураПараметров.Контрагент = Неопределено;
	КонецЕсли;
	
	СформироватьНалоговыеДокументыЗавершение(ДополнительныеПараметры.СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьНалоговыеДокументыЗавершение(СтруктураПараметров)
	
	СформироватьНалоговыеДокументыСервер(СтруктураПараметров);
	
	ПоказатьОповещениеПользователя(
		НСтр("ru='Формирование налоговых документов';uk='Формування податкових документів'"),
		,
		НСтр("ru='Формирование успешно завершено';uk='Формування успішно завершено'"),
		БиблиотекаКартинок.Информация32
	);
	
	ПараметрОповещения = Новый Структура;
	ПараметрОповещения.Вставить("Организация", Организация);
	ПараметрОповещения.Вставить("ДокументОснование", ДокументОснование);
	Если ТипЗнч(ЭтаФорма.ВладелецФормы) = Тип("УправляемаяФорма") Тогда
		ПараметрОповещения.Вставить("ФормаВладелец", ЭтаФорма.ВладелецФормы.УникальныйИдентификатор);
	КонецЕсли;
	
	Оповестить("Формирование_НалоговыеДокументы", ПараметрОповещения, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Элементы.СписокКПроверке);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

&НаКлиенте
Процедура ОтображатьВыданныеНалоговыеДокументыПриИзменении(Элемент)
	
	УстановитьДопОтборДинамическихСписков();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьЭлементыФормы()

	ЦветДатыАктуальностиРасчетов = ?(ДатаАктуальностиРасчетов < КонецДня(ТекущаяДата()+1), ЦветаСтиля.ПоясняющийОшибкуТекст, ЦветаСтиля.ПоясняющийТекст);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДатаАктуальностиРасчетов", "ЦветТекстаЗаголовка", ЦветДатыАктуальностиРасчетов);
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДатаАктуальностиРасчетов", "ЦветТекста", ЦветДатыАктуальностиРасчетов);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьНалоговыеДокументыСервер(СтруктураПараметров)
			
	НДСИсходящийСервер.СформироватьНалоговыеНакладные(КонецДня(ДатаОкончания), СтруктураПараметров, Пользователи.АвторизованныйПользователь());
	
	УстановитьОтборДинамическихСписков();
	
	Элементы.СписокКПроверке.Обновить();
	
	ОбновитьДатуАктуальностиРасчетовСервер();	
		
КонецПроцедуры

&НаСервере
Процедура ОбновитьДатуАктуальностиРасчетовСервер()
	
	ДатаАктуальностиРасчетов = НДСИсходящийСервер.ПолучитьДатуНачалаФормированияНалоговыхДокументов();
	Если НЕ ЗначениеЗаполнено(ДатаАктуальностиРасчетов) Тогда
		ДатаАктуальностиРасчетов = КонецДня(ТекущаяДата())+1; // Переписать!
	КонецЕсли;
	
	НастроитьЭлементыФормы();
	
КонецПроцедуры

// Процедура устанавливает отбор динамических списков формы.
//
&НаСервере
Процедура УстановитьОтборДинамическихСписков()
	
	СписокНалоговыхДокументов = Новый СписокЗначений;
	СписокНалоговыхДокументов.ЗагрузитьЗначения(
				НДСИсходящийСервер.НалоговыеДокументыПоОснованию(ДокументОснование, ДокументОснование.Организация).ВыгрузитьКолонку("Ссылка"));
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СписокКПроверке, 
		"Ссылка", 
		СписокНалоговыхДокументов, 
		ВидСравненияКомпоновкиДанных.ВСписке,
		, 
		Истина
	);
	
	УстановитьДопОтборДинамическихСписков();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДопОтборДинамическихСписков()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		СписокКПроверке, 
		"СтатусРегистрацииВЕРНН", 
		Перечисления.СтатусыРегистрацииВЕРНННалоговыхДокументов.ЗарегистрированВЕРНН,
		ВидСравненияКомпоновкиДанных.НеРавно, 
		, 
		Не ОтображатьНалоговыеДокументыЗарегистрированныеВЕРНН
	);
	
КонецПроцедуры

&НаСервере
Процедура АктуализироватьРасчетыСервер()
	
	ОкончаниеПериодаРасчета = КонецМесяца(ТекущаяДатаСеанса()) + 1;
	РаспределениеВзаиморасчетов.РаспределитьВсеРасчетыСКлиентами(ОкончаниеПериодаРасчета);
	
	ОбновитьДатуАктуальностиРасчетовСервер();
	
КонецПроцедуры

#КонецОбласти
