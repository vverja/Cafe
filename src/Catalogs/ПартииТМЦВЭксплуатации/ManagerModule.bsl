#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Обработчик перед записью документа передачи в эксплуатацию
// 		Заполняется реквизит "ПартияТМЦВЭксплуатации" в табличной части
// 		При необходимости создаются новые элементы справочника партий
// 		Ссылки на партии, не используемые в дальнейшем, помечаются для удаления
//
// Параметры:
// 		Объект - ДокументОбъект.ВнутреннееПотреблениеТоваров, ДокументОбъект.ВводОстатков - объект документа передачи
// 		Отказ - Булево - Возвращаемый признак удачного выполнения обработчика
//
Процедура ЗаполнитьПартии(Объект, Отказ) Экспорт
	
	ДопСвойства = Объект.ДополнительныеСвойства;
	ЭтоВнутреннееПотребление = (ТипЗнч(Объект) = Тип("ДокументОбъект.ВнутреннееПотреблениеТоваров"));
	ЭтоВводОстатков = (ТипЗнч(Объект) = Тип("ДокументОбъект.ВводОстатков"));
	
	ЭтоОперацияПередачи = (
		(ЭтоВнутреннееПотребление И Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПередачаВЭксплуатацию)
		Или (ЭтоВводОстатков И Объект.ТипОперации = Перечисления.ТипыОперацийВводаОстатков.ОстаткиТМЦВЭксплуатации));
	
	ПометкаУдаленияПартий = Объект.ПометкаУдаления Или Не ЭтоОперацияПередачи;
	
	Если ДопСвойства.РежимЗаписи = РежимЗаписиДокумента.Запись И Не ПометкаУдаленияПартий Тогда
		Возврат;
	КонецЕсли;
	
	СсылкаНаДокумент = Объект.Ссылка;
	Если ДопСвойства.ЭтоНовый Тогда
		Если ЭтоВнутреннееПотребление Тогда
			СсылкаНаДокумент = Документы.ВнутреннееПотреблениеТоваров.ПолучитьСсылку();
		ИначеЕсли ЭтоВводОстатков Тогда
			СсылкаНаДокумент = Документы.ВводОстатков.ПолучитьСсылку();
		КонецЕсли;
		Объект.УстановитьСсылкуНового(СсылкаНаДокумент);
	КонецЕсли;
	
	ТабличнаяЧасть = ?(ЭтоВводОстатков, Объект.ТМЦВЭксплуатации.Выгрузить(), Объект.Товары.Выгрузить());
	Если ЭтоВнутреннееПотребление Тогда
		
		ТабличнаяЧасть.Колонки.Добавить("ДатаПередачиВЭксплуатацию", Новый ОписаниеТипов("Дата"));
		ТабличнаяЧасть.ЗаполнитьЗначения(НачалоДня(Объект.Дата), "ДатаПередачиВЭксплуатацию");
		
		ТабличнаяЧасть.Колонки.Добавить("НалоговоеНазначение", Новый ОписаниеТипов("СправочникСсылка.НалоговыеНазначенияАктивовИЗатрат"));
		ТабличнаяЧасть.ЗаполнитьЗначения(Объект.НалоговоеНазначение, "НалоговоеНазначение");
		
	КонецЕсли;
	
	#Область ЗапросПоТабличнойЧасти
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(Таблица.НомерСтроки КАК ЧИСЛО) КАК НомерСтроки,
		|	ВЫРАЗИТЬ(Таблица.ДатаПередачиВЭксплуатацию КАК ДАТА) КАК ДатаПередачиВЭксплуатацию,
		|	ВЫРАЗИТЬ(Таблица.КатегорияЭксплуатации КАК Справочник.КатегорииЭксплуатации) КАК КатегорияЭксплуатации,
		|	ВЫРАЗИТЬ(Таблица.НалоговоеНазначение КАК Справочник.НалоговыеНазначенияАктивовИЗатрат) КАК НалоговоеНазначение,
		|	ВЫРАЗИТЬ(Таблица.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов) КАК СтатьяРасходов,
		|	Таблица.АналитикаРасходов КАК АналитикаРасходов,
		|	ВЫРАЗИТЬ(Таблица.ФизическоеЛицо КАК Справочник.ФизическиеЛица) КАК ФизическоеЛицо,
		|	ВЫРАЗИТЬ(Таблица.ПартияТМЦВЭксплуатации КАК Справочник.ПартииТМЦВЭксплуатации) КАК ПартияТМЦВЭксплуатации
		|ПОМЕСТИТЬ ДанныеДокумента
		|ИЗ
		|	&ТабличнаяЧасть КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Таблица.НомерСтроки КАК НомерСтроки,
		|	Таблица.ДатаПередачиВЭксплуатацию КАК Дата,
		|	Таблица.КатегорияЭксплуатации КАК КатегорияЭксплуатации,
		|	Таблица.НалоговоеНазначение КАК НалоговоеНазначение,
		|	Таблица.СтатьяРасходов КАК СтатьяРасходов,
		|	Таблица.АналитикаРасходов КАК АналитикаРасходов,
		|	Таблица.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Таблица.КатегорияЭксплуатации.СрокЭксплуатации КАК СрокЭксплуатации,
		|	Таблица.ПартияТМЦВЭксплуатации КАК ПартияТМЦВЭксплуатации
		|ПОМЕСТИТЬ Таблица
		|ИЗ
		|	ДанныеДокумента КАК Таблица
		|ГДЕ
		|	НЕ &ПометкаУдаленияПартий
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Таблица.НомерСтроки - 1 КАК ИндексСтроки,
		|	ЕСТЬNULL(СправочникПартий.Ссылка, ЗНАЧЕНИЕ(Справочник.ПартииТМЦВЭксплуатации.ПустаяСсылка)) КАК ПартияТМЦВЭксплуатации,
		|	&Документ КАК Документ,
		|	Таблица.Дата КАК Дата,
		|	Таблица.КатегорияЭксплуатации КАК КатегорияЭксплуатации,
		|	Таблица.СрокЭксплуатации КАК СрокЭксплуатации,
		|	Таблица.НалоговоеНазначение КАК НалоговоеНазначение,
		|	Таблица.СтатьяРасходов КАК СтатьяРасходов,
		|	Таблица.АналитикаРасходов КАК АналитикаРасходов,
		|	Таблица.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВЫБОР
		|		КОГДА НЕ СправочникПартий.Ссылка ЕСТЬ NULL 
		|				И СправочникПартий.Документ = &Документ
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ТребуетсяНоваяПартия,
		|	ВЫБОР
		|		КОГДА НЕ СправочникПартий.Ссылка ЕСТЬ NULL 
		|				И НЕ СправочникПартий.ПометкаУдаления
		|				И СправочникПартий.Документ = &Документ
		|				И Таблица.Дата = СправочникПартий.Дата
		|				И Таблица.КатегорияЭксплуатации = СправочникПартий.КатегорияЭксплуатации
		|				И Таблица.СрокЭксплуатации = СправочникПартий.СрокЭксплуатации
		|				И Таблица.ФизическоеЛицо = СправочникПартий.ФизическоеЛицо
		|					И Таблица.НалоговоеНазначение = СправочникПартий.НалоговоеНазначение
		|				И Таблица.СтатьяРасходов = СправочникПартий.СтатьяРасходов
		|				И Таблица.АналитикаРасходов = СправочникПартий.АналитикаРасходов
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ТребуетсяПерезаполнитьПартию
		|ПОМЕСТИТЬ ТаблицаДокумента
		|ИЗ
		|	Таблица КАК Таблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПартииТМЦВЭксплуатации КАК СправочникПартий
		|		ПО Таблица.ПартияТМЦВЭксплуатации = СправочникПартий.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаДокумента.ПартияТМЦВЭксплуатации,
		|	ТаблицаДокумента.Документ,
		|	ТаблицаДокумента.Дата,
		|	ТаблицаДокумента.КатегорияЭксплуатации,
		|	ТаблицаДокумента.СрокЭксплуатации,
		|	ТаблицаДокумента.НалоговоеНазначение,
		|	ТаблицаДокумента.СтатьяРасходов,
		|	ТаблицаДокумента.АналитикаРасходов,
		|	ТаблицаДокумента.ФизическоеЛицо
		|ИЗ
		|	ТаблицаДокумента КАК ТаблицаДокумента
		|ГДЕ
		|	НЕ ТаблицаДокумента.ТребуетсяПерезаполнитьПартию
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокумента.ИндексСтроки,
		|	ТаблицаДокумента.ПартияТМЦВЭксплуатации,
		|	ТаблицаДокумента.Документ,
		|	ТаблицаДокумента.Дата,
		|	ТаблицаДокумента.КатегорияЭксплуатации,
		|	ТаблицаДокумента.СрокЭксплуатации,
		|	ТаблицаДокумента.НалоговоеНазначение,
		|	ТаблицаДокумента.СтатьяРасходов,
		|	ТаблицаДокумента.АналитикаРасходов,
		|	ТаблицаДокумента.ФизическоеЛицо,
		|	ТаблицаДокумента.ТребуетсяНоваяПартия
		|ИЗ
		|	ТаблицаДокумента КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.ТребуетсяПерезаполнитьПартию
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.ПартияТМЦВЭксплуатации КАК Ссылка
		|ИЗ
		|	ДанныеДокумента КАК Таблица
		|ГДЕ
		|	Таблица.ПартияТМЦВЭксплуатации <> ЗНАЧЕНИЕ(Справочник.ПартииТМЦВЭксплуатации.ПустаяСсылка)
		|	И НЕ Таблица.ПартияТМЦВЭксплуатации В
		|				(ВЫБРАТЬ
		|					ТаблицаДокумента.ПартияТМЦВЭксплуатации
		|				ИЗ
		|					ТаблицаДокумента КАК ТаблицаДокумента
		|				ГДЕ
		|					НЕ ТаблицаДокумента.ТребуетсяПерезаполнитьПартию)"
	);
	
	#КонецОбласти
	
	Запрос.УстановитьПараметр("Документ", СсылкаНаДокумент);
	Запрос.УстановитьПараметр("Дата", НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("ПометкаУдаленияПартий", ПометкаУдаленияПартий);
	Запрос.УстановитьПараметр("ТабличнаяЧасть", ТабличнаяЧасть);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат = Запрос.ВыполнитьПакет();
	
	СтруктураПоискаПартии = Новый Структура(
		"Документ, Дата, КатегорияЭксплуатации,
		|СрокЭксплуатации, НалоговоеНазначение, 
		|СтатьяРасходов, АналитикаРасходов, ФизическоеЛицо");
	
	АктуальныеПартии = Новый Соответствие;
	ТаблицаАктуальныхПартий = Новый ТаблицаЗначений;
	ТаблицаАктуальныхПартий.Колонки.Добавить("ПартияТМЦВЭксплуатации");
	Для Каждого КлючИЗначение Из СтруктураПоискаПартии Цикл
		ТаблицаАктуальныхПартий.Колонки.Добавить(КлючИЗначение.Ключ);
	КонецЦикла;
	
	Если Не Результат[3].Пустой() Тогда
		
		Выборка = Результат[3].Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ТаблицаАктуальныхПартий.Добавить(), Выборка);
			АктуальныеПартии.Вставить(Выборка.ПартияТМЦВЭксплуатации, Истина);
		КонецЦикла;
		
	КонецЕсли;
	
	ТабличнаяЧасть = ?(ЭтоВводОстатков, Объект.ТМЦВЭксплуатации, Объект.Товары);
	
	Если Не Результат[4].Пустой() Тогда
		
		Выборка = Результат[4].Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			СтрокаТабличнойЧасти = ТабличнаяЧасть[Выборка.ИндексСтроки];
			
			ЗаполнитьЗначенияСвойств(СтруктураПоискаПартии, Выборка);
			НайденныеСтроки = ТаблицаАктуальныхПартий.НайтиСтроки(СтруктураПоискаПартии);
			Если НайденныеСтроки.Количество() <> 0 Тогда
				СтрокаТабличнойЧасти.ПартияТМЦВЭксплуатации = НайденныеСтроки[0].ПартияТМЦВЭксплуатации;
				Продолжить;
			КонецЕсли;
			
			ОбъектПартии = Неопределено;
			Если Выборка.ТребуетсяНоваяПартия Или АктуальныеПартии.Получить(СтрокаТабличнойЧасти.ПартияТМЦВЭксплуатации) <> Неопределено Тогда
				ОбъектПартии = Справочники.ПартииТМЦВЭксплуатации.СоздатьЭлемент();
			Иначе
				ОбъектПартии = СтрокаТабличнойЧасти.ПартияТМЦВЭксплуатации.ПолучитьОбъект();
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(ОбъектПартии, Выборка);
			ОбъектПартии.ПометкаУдаления = Ложь;
			
			Попытка
				ОбъектПартии.Записать();
			Исключение
				Отказ = Истина;
				ВызватьИсключение ИнформацияОбОшибке().Описание;
			КонецПопытки;
			
			СтрокаТабличнойЧасти.ПартияТМЦВЭксплуатации = ОбъектПартии.Ссылка;
			АктуальныеПартии.Вставить(СтрокаТабличнойЧасти.ПартияТМЦВЭксплуатации, Истина);
			
			СтрокаАктуальнойПартии = ТаблицаАктуальныхПартий.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаАктуальнойПартии, Выборка);
			СтрокаАктуальнойПартии.ПартияТМЦВЭксплуатации = СтрокаТабличнойЧасти.ПартияТМЦВЭксплуатации;
			
		КонецЦикла;
	КонецЕсли;
	
	Если Не Результат[5].Пустой() Тогда
		
		Выборка = Результат[5].Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Если АктуальныеПартии.Получить(Выборка.Ссылка) = Неопределено Тогда
				
				ОбъектПартии = Выборка.Ссылка.ПолучитьОбъект();
				ОбъектПартии.ПометкаУдаления = Истина;
				Попытка
					ОбъектПартии.Записать();
				Исключение
					Отказ = Истина;
					ВызватьИсключение ИнформацияОбОшибке().Описание;
				КонецПопытки;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры


#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ОграничениеВыбора") И Параметры.ОграничениеВыбора Тогда
		
		Результат = РезультатЗапросаДанныхВыбора(Параметры);
		Если Результат.Пустой() Тогда
			СтандартнаяОбработка = Ложь;
		Иначе
			Параметры.Отбор.Вставить("Ссылка", Результат.Выгрузить().ВыгрузитьКолонку("Ссылка"));
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция РезультатЗапросаДанныхВыбора(Параметры)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТМЦВЭксплуатацииОбороты.Партия КАК Ссылка
		|ИЗ
		|	РегистрНакопления.ТМЦВЭксплуатации.Обороты(
		|			,
		|			,
		|			,
		|			НЕ Партия.ПометкаУдаления
		|				И (НЕ &ОтборДата Или Партия.ДатаЗавершенияЭксплуатации > &Дата)
		|				И (НЕ &ОтборОрганизация Или Организация = &Организация)
		|				И (НЕ &ОтборПодразделение Или Подразделение = &Подразделение)
		|				И (НЕ &ОтборФизическоеЛицо Или ФизическоеЛицо = &ФизическоеЛицо)
		|				И (НЕ &ОтборНоменклатура Или Номенклатура = &Номенклатура)
		|				И (НЕ &ОтборХарактеристика Или Характеристика = &Характеристика)) КАК ТМЦВЭксплуатацииОбороты");
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("Дата", Дата(1, 1, 1, 0, 0, 0));
	ПараметрыЗапроса.Вставить("Организация", Справочники.Организации.ПустаяСсылка());
	ПараметрыЗапроса.Вставить("Подразделение", Справочники.СтруктураПредприятия.ПустаяСсылка());
	ПараметрыЗапроса.Вставить("ФизическоеЛицо", Справочники.ФизическиеЛица.ПустаяСсылка());
	ПараметрыЗапроса.Вставить("Номенклатура", Справочники.Номенклатура.ПустаяСсылка());
	ПараметрыЗапроса.Вставить("Характеристика", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	
	ЗаполнитьЗначенияСвойств(ПараметрыЗапроса, Параметры);
	
	Для Каждого КлючИЗначение Из ПараметрыЗапроса Цикл
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
		Запрос.УстановитьПараметр("Отбор" + КлючИЗначение.Ключ, ЗначениеЗаполнено(КлючИЗначение.Значение));
	КонецЦикла;
	
	ДанныеВыбора = Новый СписокЗначений;
	
	Возврат Запрос.Выполнить();
	
КонецФункции

#КонецОбласти

