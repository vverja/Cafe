#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура создает запись в регистре по переданным данным.
//
//	Параметры:
//		Организация - СправочникСсылка - ссылка на элемент справочника "Организации".
//		Период - Дата - Период записи регистра.
//		УчетнаяПолитика - СправочникСсылка - ссылка на элемент справочника "Учетные политики организаций".
//
Процедура СоздатьЗаписьРегистра(Знач Организация, Период, ИННПлательщикаНДС, НомерСвидетельстваПлательщикаНДС, Знач УчетнаяПолитика) Экспорт
	
	Если Организация = Неопределено ИЛИ Организация = Справочники.Организации.ПустаяСсылка() Тогда
		Возврат;
	КонецЕсли;
	

	НоваяЗапись = РегистрыСведений.УчетнаяПолитикаОрганизаций.СоздатьМенеджерЗаписи();
	НоваяЗапись.Период = НачалоГода(ТекущаяДатаСеанса());
	НоваяЗапись.Организация = Организация;
	НоваяЗапись.Период = Период;
	НоваяЗапись.УчетнаяПолитика = УчетнаяПолитика;
	НоваяЗапись.ИННПлательщикаНДС                    = ИННПлательщикаНДС;
	НоваяЗапись.НомерСвидетельстваПлательщикаНДС     = НомерСвидетельстваПлательщикаНДС;
	Попытка
		НоваяЗапись.Записать();
	Исключение
		ЗаписьЖурналаРегистрации(НСтр("ru='Запись в регистр сведений Учетная политика организаций';uk='Запис в регістр відомостей Облікова політика організацій'",ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка,,,
			ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;

КонецПроцедуры

// Функция возвращает структуру параметров действующей для организации учетной политики.
//
//	Параметры:
//		Организация - СправочникСсылка - ссылка на элемент справочника "Организации".
//		Период - Дата - Дата, на которую необходимо получить действующую учетную политику.
//
Функция ПараметрыУчетнойПолитики(Организация, Период) Экспорт
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	УчетныеПолитики.Наименование,
		|	УчетныеПолитики.МетодОценкиСтоимостиТоваров,
		|	УчетныеПолитики.СистемаНалогообложения,
		|	ДанныеРегистра.ИННПлательщикаНДС,
		|   ДанныеРегистра.НомерСвидетельстваПлательщикаНДС,
		|	ДанныеРегистра.ПлательщикНалогаНаПрибыль,
		|	ДанныеРегистра.ПлательщикНДС,
		|	ЕСТЬNULL(СтатусыПлательщиковЕдиногоНалога.ПлательщикЕН, ЛОЖЬ) КАК ПлательщикЕН,
		|   УчетныеПолитики.ГруппаПлательщикаЕдиногоНалога,
		|	УчетныеПолитики.ИнформацияОСтатусеПлательщикаНалогов,
		|	УчетныеПолитики.НалогНаПрибыльБезКорректировокФинансовогоРезультата,
		|	УчетныеПолитики.ВключатьСуммуДооценокОСВСоставНераспределеннойПрибыли,		
		|	УчетныеПолитики.ИспользуемыеКлассыСчетовРасходов,
		|	УчетныеПолитики.ПроводкиПоРаботникам
		|ИЗ
		|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&Период,
		|							Организация = &Организация) КАК ДанныеРегистра
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыПлательщиковЕдиногоНалога.СрезПоследних(&Период,
		|							Организация = &Организация) КАК СтатусыПлательщиковЕдиногоНалога
		|		ПО ИСТИНА
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УчетныеПолитикиОрганизаций КАК УчетныеПолитики
		|		ПО ДанныеРегистра.УчетнаяПолитика = УчетныеПолитики.Ссылка");

	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Организация", Организация);

	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	СтруктураПараметров = Новый Структура;
	Для Каждого Колонка Из Результат.Колонки Цикл
		СтруктураПараметров.Вставить(Колонка.Имя, Выборка[Колонка.Имя]);
	КонецЦикла;
	
	Возврат СтруктураПараметров;
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы


Процедура ОбновитьСлужебныеРесурсы() Экспорт
	
	НаборЗаписей = РегистрыСведений.УчетнаяПолитикаОрганизаций.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	НаборЗаписей.Записать();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли