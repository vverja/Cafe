#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


Функция ТипСтатьи(ХарактерДоговора) Экспорт
	
	Возврат ?(ХарактерДоговора = Перечисления.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм,НСтр("ru='расходов';uk='витрат'"),НСтр("ru='доходов';uk='доходів'"));
	
КонецФункции

Функция ЗаполненыСтатьиУчета(Договор, ВыводитьСообщения = Истина, МассивСообщений = Неопределено) Экспорт
	
	СтатьиДДС_ОК = ЗаполненыСтатьиДДС(Договор, ВыводитьСообщения, МассивСообщений);
	СтатьиДоходовРасходов_ОК = ЗаполненыСтатьиДоходовРасходов(Договор, ВыводитьСообщения,МассивСообщений);
	ИспользоватьУчетПрочихДоходовРасходов = ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов");
	
	Возврат СтатьиДДС_ОК И (СтатьиДоходовРасходов_ОК Или Не ИспользоватьУчетПрочихДоходовРасходов);
	
КонецФункции

Процедура СообщитьОбОшибкахЗаполнения(СписокДоговоров, ИдентификаторФормы = Неопределено, ШаблонТекста) Экспорт
	
	Для Каждого Договор Из СписокДоговоров Цикл
		
		МассивСообщений = Новый Массив;
		Справочники.ДоговорыКредитовИДепозитов.ЗаполненыСтатьиУчета(Договор.Значение, Ложь, МассивСообщений);
		
		ШаблонТекста = ШаблонТекста + Символы.ПС + НСтр("ru='по причине не верного заполнения статей учета договора!';uk='внаслідок не вірного заповнення статей обліку договору!'");
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекста, Договор.Значение.Номер, Формат(Договор.Значение.Дата, "ДЛФ=D"), Договор.Значение);
		
		СообщитьПользователю(Текст,Договор.Значение,,ИдентификаторФормы);
		Для Каждого Сообщение Из МассивСообщений Цикл
			СообщитьПользователю(Символы.Таб + Сообщение.Текст, Договор.Значение, Сообщение.Поле, ИдентификаторФормы);
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Функция СоздатьЗаявкиНаРасходДС(Параметры) Экспорт
	
	Параметры.Вставить("ВВалютеПлатежа", Перечисления.СпособыПланированияОплатыЗаявок.ВВалютеПлатежа);
	Параметры.Вставить("ВВалютеВзаиморасчетов", Перечисления.СпособыПланированияОплатыЗаявок.ВВалютеВзаиморасчетов);
	Параметры.Вставить("ЗаявкиЗаПериод", ЗаявкиЗаПериод(Параметры.ДатаНачала, Параметры.ДатаОкончания, Параметры.Договоры));
	Параметры.Вставить("ОшибочныеДоговора", Новый Соответствие);
	Параметры.Вставить("ВсегоСоздано", 0);
	
	РезультатЗапроса = ОплатыЗаПериод(Параметры.ДатаНачала, Параметры.ДатаОкончания, Параметры.Договоры, Параметры.Контрагенты);
	Если РезультатЗапроса.Пустой() Тогда
		Возврат 0;
	КонецЕсли;
	// Заявки формируются отдельно
	// для каждой Организации, по каждой хоз.операции списания (Оплата по кредитам, Перечисление на депозит, Выдача займа),
	// по каждому договору кредита(депозита, займа), по каждой валюте, по каждому банковскому счету(кассе) организации, 
	// по каждому контрагенту, по каждому счету контрагента, на каждый день оплаты
	// суммы оплаты в расшифровке платежа заявки
	ВыборкаОрганизаций = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	Пока ВыборкаОрганизаций.Следующий() Цикл
		ВыборкаПоОперациям = ВыборкаОрганизаций.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоОперациям.Следующий() Цикл
			ВалютаДоговора = ВыборкаПоОперациям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВалютаДоговора.Следующий() Цикл
				ФормаОплаты = ВалютаДоговора.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ФормаОплаты.Следующий() Цикл
					БанковскиеСчета = ФормаОплаты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока БанковскиеСчета.Следующий() Цикл
						Кассы = БанковскиеСчета.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока Кассы.Следующий() Цикл
							Контрагенты = Кассы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока Контрагенты.Следующий() Цикл
								СчетаКонтрагента = Контрагенты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Пока СчетаКонтрагента.Следующий() Цикл
									ДатаОплаты = СчетаКонтрагента.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
									Пока ДатаОплаты.Следующий() Цикл
										
										СформироватьЗаявкуНаОплату(ДатаОплаты, Параметры);
										
									КонецЦикла;//по Датам оплаты
								КонецЦикла;//по Счетам контрагента
							КонецЦикла;// по Контрагентам
						КонецЦикла;// по Кассам
					КонецЦикла;//по Банковским счетам организации
				КонецЦикла;//по Формам оплаты
			КонецЦикла;//по Валютам договора
		КонецЦикла;//по Хозяйственным операциям
	КонецЦикла;//по Организациям
	СообщитьОбОшибкахЗаполнения(Параметры.ОшибочныеДоговора,Параметры.ИдентификаторФормы,НСтр("ru='Заявки по договору №%1 от %2 ""%3"" не созданы,';uk='Заявки за договором №%1 від %2 ""%3"" не створені,'"));
	
	Возврат Параметры.ВсегоСоздано;
	
КонецФункции

Функция ХарактерДоговораПоОперации(ХозяйственнаяОперация) Экспорт
	
	ХозОперации = Перечисления.ХозяйственныеОперации;
	ХарактерыДоговоров = Перечисления.ХарактерДоговораКредитовИДепозитов;
	Результат = Неопределено;
	Если ХозяйственнаяОперация = ХозОперации.НачисленияПоКредитам
		ИЛИ ХозяйственнаяОперация = ХозОперации.ПоступлениеДенежныхСредствПоКредитам
		ИЛИ ХозяйственнаяОперация = ХозОперации.ОплатаПоКредитам Тогда
		Результат = ХарактерыДоговоров.КредитИлиЗайм;
		
	ИначеЕсли ХозяйственнаяОперация = ХозОперации.НачисленияПоДепозитам 
		ИЛИ ХозяйственнаяОперация = ХозОперации.ПоступлениеДенежныхСредствПоДепозитам
		ИЛИ ХозяйственнаяОперация = ХозОперации.ПеречислениеНаДепозиты Тогда
		Результат = ХарактерыДоговоров.Депозит;
		
	ИначеЕсли ХозяйственнаяОперация = ХозОперации.НачисленияПоЗаймамВыданным
		ИЛИ ХозяйственнаяОперация = ХозОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным
		ИЛИ ХозяйственнаяОперация = ХозОперации.ВыдачаЗаймов Тогда
		Результат = ХарактерыДоговоров.ЗаймВыданный;
		
	КонецЕсли;
	Возврат Результат;
	
КонецФункции

Функция ОперацияПоХарактеруДоговора(ХарактерДоговора, ЭтоПоступление = Ложь) Экспорт
	
	Результат = Неопределено;
	ХозОперации = Перечисления.ХозяйственныеОперации;
	ХарактерыДоговоров = Перечисления.ХарактерДоговораКредитовИДепозитов;
	Если ХарактерДоговора = ХарактерыДоговоров.КредитИлиЗайм Тогда
		Результат = ?(ЭтоПоступление, ХозОперации.ПоступлениеДенежныхСредствПоКредитам, ХозОперации.ОплатаПоКредитам);
		
	ИначеЕсли ХарактерДоговора = ХарактерыДоговоров.Депозит Тогда
		Результат = ?(ЭтоПоступление, ХозОперации.ПоступлениеДенежныхСредствПоДепозитам, ХозОперации.ПеречислениеНаДепозиты);
		
	ИначеЕсли ХарактерДоговора = ХарактерыДоговоров.ЗаймВыданный Тогда
		Результат = ?(ЭтоПоступление, ХозОперации.ПоступлениеДенежныхСредствПоЗаймамВыданным, ХозОперации.ВыдачаЗаймов);
		
	КонецЕсли;
	Возврат Результат;
	
КонецФункции

Функция ДанныеЗаполненияДокументаДДС(ДоговорКредитаДепозита, ЭтоПоступление = Ложь) Экспорт
	
	ДанныеЗаполнения = ДанныеШапкиДокументаДДС(ДоговорКредитаДепозита, ЭтоПоступление);
	РасшифровкаПлатежа = ДанныеРасшифровкиПлатежаДокументаДДС(ДоговорКредитаДепозита, ЭтоПоступление);
	Если РасшифровкаПлатежа.Количество() > 0 Тогда
		ДанныеЗаполнения.БанковскийСчетКонтрагента = РасшифровкаПлатежа[0].БанковскийСчетКонтрагента;
	КонецЕсли;
	ДанныеЗаполнения.Вставить("РасшифровкаПлатежа",РасшифровкаПлатежа);
	
	Возврат ДанныеЗаполнения;
	
КонецФункции

// Функция получает массив действующих договоров с контрагентом по заданным параметрам.
//
// Параметры:
//	Организация - СправочникСсылка.Организации - Организация, от имено которой заключен договор с контрагентом.
//	Контрагент - СправочникСсылка.Контрагенты - Контрагент, с которым заключен договор.
//	ХарактерДоговора - ПеречислениеСсылка.ХарактерДоговораКредитовИДепозитов - характер договора.
//	ДокументСсылка - ДокументСсылка.ПриходныйКассовыйОрдер,
//                   ДокументСсылка.ПоступлениеБезналичныхДенежныхСредств - Документ, движения которого следует исключить.
//
// Возвращаемое значение:
//	Массив - массив договоров.
//
Функция ДействующиеДоговорыПоКонтрагенту(Организация, Контрагент, ХарактерДоговора) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДоговорыКредитовИДепозитов.Ссылка КАК Договор
	|ИЗ
	|	Справочник.ДоговорыКредитовИДепозитов КАК ДоговорыКредитовИДепозитов
	|ГДЕ
	|	ДоговорыКредитовИДепозитов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Действует)
	|	И ДоговорыКредитовИДепозитов.Организация = &Организация
	|	И ДоговорыКредитовИДепозитов.Контрагент = &Контрагент
	|	И ДоговорыКредитовИДепозитов.ХарактерДоговора = &ХарактерДоговора";
	
	Запрос.УстановитьПараметр("Контрагент",        Контрагент);
	Запрос.УстановитьПараметр("Организация",       Организация);
	Запрос.УстановитьПараметр("ХарактерДоговора",  ХарактерДоговора);
	
	МассивДоговоров = Новый Массив;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		МассивДоговоров.Добавить(Выборка.Договор);
	КонецЦикла;
	
	Возврат МассивДоговоров;
	
КонецФункции

// Функция возвращает таблицу расшифровки платежа по договору кредита \ депозита.
//
// Параметры:
//	ДоговорКредитаДепозита - СправочникСсылка.ДоговорыКредитовИДепозитов - Договор, данные по которому требуется получить.
//	ЭтоПоступление - Булево - Признак, определяющий направление движения денежных средств: выплата или послупление.
//	ДокументИсключение - ДокументСсылка.РасходныйКассовыйОрдер,
//                       ДокументСсылка.СписаниеБезналичныхДенежныхСредств,
//                       ДокументСсылка.ПриходныйКассовыйОрдер,
//                       ДокументСсылка.ПоступлениеБезналичныхДенежныхСредств - Документ, движения которого следует исключить.
//
// Возвращаемое значение:
//	ТаблицаЗначений - Расшифровка платежа.
//
Функция ДанныеРасшифровкиПлатежаДокументаДДС(ДоговорКредитаДепозита, ЭтоПоступление = Ложь, ДокументИсключение = Неопределено) Экспорт
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
		ДоговорКредитаДепозита.ВалютаВзаиморасчетов,
		?(ДоговорКредитаДепозита.ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВГривнах, ВалютаРеглУчета, ДоговорКредитаДепозита.ВалютаВзаиморасчетов),
		ТекущаяДата());
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДоговорыКредитовИДепозитов.Ссылка КАК ДоговорКредитаДепозита,
	|	ДоговорыКредитовИДепозитов.Партнер,
	|	ДоговорыКредитовИДепозитов.СтатьяДДСПоступленияВыдачи КАК СтатьяДвиженияДенежныхСредств,
	|	ДоговорыКредитовИДепозитов.Подразделение,
	|	ДоговорыКредитовИДепозитов.ВалютаВзаиморасчетов,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыГрафикаКредитовИДепозитов.Транши) КАК ТипГрафика,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг) КАК ТипСуммы,
	|	СУММА(ГрафикТраншейКредитовИДепозитов.Сумма) КАК СуммаГрафика,
	|	ДоговорыКредитовИДепозитов.БанковскийСчетКонтрагента
	|ПОМЕСТИТЬ втДанныеГрафика
	|ИЗ
	|	Справочник.ДоговорыКредитовИДепозитов КАК ДоговорыКредитовИДепозитов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикТраншейКредитовИДепозитов КАК ГрафикТраншейКредитовИДепозитов
	|		ПО ДоговорыКредитовИДепозитов.Ссылка = ГрафикТраншейКредитовИДепозитов.ВариантГрафика.Владелец
	|ГДЕ
	|	ГрафикТраншейКредитовИДепозитов.ВариантГрафика = &ВариантГрафика
	|	И ГрафикТраншейКредитовИДепозитов.Период <= &НаДату
	|	И &ЭтоПоступление = ИСТИНА
	|	И ГрафикТраншейКредитовИДепозитов.Сумма > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоговорыКредитовИДепозитов.Ссылка,
	|	ДоговорыКредитовИДепозитов.Партнер,
	|	ДоговорыКредитовИДепозитов.СтатьяДДСПоступленияВыдачи,
	|	ДоговорыКредитовИДепозитов.Подразделение,
	|	ДоговорыКредитовИДепозитов.ВалютаВзаиморасчетов,
	|	ДоговорыКредитовИДепозитов.БанковскийСчетКонтрагента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДоговорыКредитовИДепозитов.Ссылка,
	|	ДоговорыКредитовИДепозитов.Партнер,
	|	ДоговорыКредитовИДепозитов.СтатьяДДСОсновногоДолга,
	|	ДоговорыКредитовИДепозитов.Подразделение,
	|	ДоговорыКредитовИДепозитов.ВалютаВзаиморасчетов,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыГрафикаКредитовИДепозитов.Оплаты),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг),
	|	СУММА(ГрафикОплатКредитовИДепозитов.Сумма),
	|	ДоговорыКредитовИДепозитов.БанковскийСчетКонтрагента
	|ИЗ
	|	Справочник.ДоговорыКредитовИДепозитов КАК ДоговорыКредитовИДепозитов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикОплатКредитовИДепозитов КАК ГрафикОплатКредитовИДепозитов
	|		ПО ДоговорыКредитовИДепозитов.Ссылка = ГрафикОплатКредитовИДепозитов.ВариантГрафика.Владелец
	|ГДЕ
	|	ГрафикОплатКредитовИДепозитов.ВариантГрафика = &ВариантГрафика
	|	И ГрафикОплатКредитовИДепозитов.Период <= &НаДату
	|	И &ЭтоПоступление = ЛОЖЬ
	|	И ГрафикОплатКредитовИДепозитов.Сумма > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоговорыКредитовИДепозитов.Ссылка,
	|	ДоговорыКредитовИДепозитов.Партнер,
	|	ДоговорыКредитовИДепозитов.Подразделение,
	|	ДоговорыКредитовИДепозитов.ВалютаВзаиморасчетов,
	|	ДоговорыКредитовИДепозитов.СтатьяДДСОсновногоДолга,
	|	ДоговорыКредитовИДепозитов.БанковскийСчетКонтрагента
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДоговорыКредитовИДепозитов.Ссылка,
	|	ДоговорыКредитовИДепозитов.Партнер,
	|	ДоговорыКредитовИДепозитов.СтатьяДДСПроцентов,
	|	ДоговорыКредитовИДепозитов.Подразделение,
	|	ДоговорыКредитовИДепозитов.ВалютаВзаиморасчетов,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыГрафикаКредитовИДепозитов.Оплаты),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты),
	|	СУММА(ГрафикОплатКредитовИДепозитов.Проценты),
	|	ВЫБОР
	|		КОГДА ДоговорыКредитовИДепозитов.БанковскийСчетПроцентов = ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
	|			ТОГДА ДоговорыКредитовИДепозитов.БанковскийСчетКонтрагента
	|		ИНАЧЕ ДоговорыКредитовИДепозитов.БанковскийСчетПроцентов
	|	КОНЕЦ
	|ИЗ
	|	Справочник.ДоговорыКредитовИДепозитов КАК ДоговорыКредитовИДепозитов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикОплатКредитовИДепозитов КАК ГрафикОплатКредитовИДепозитов
	|		ПО ДоговорыКредитовИДепозитов.Ссылка = ГрафикОплатКредитовИДепозитов.ВариантГрафика.Владелец
	|ГДЕ
	|	ГрафикОплатКредитовИДепозитов.ВариантГрафика = &ВариантГрафика
	|	И ГрафикОплатКредитовИДепозитов.Период <= &НаДату
	|	И &ЭтоПоступление = ЛОЖЬ
	|	И ГрафикОплатКредитовИДепозитов.Проценты > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоговорыКредитовИДепозитов.Ссылка,
	|	ДоговорыКредитовИДепозитов.Партнер,
	|	ДоговорыКредитовИДепозитов.Подразделение,
	|	ДоговорыКредитовИДепозитов.ВалютаВзаиморасчетов,
	|	ДоговорыКредитовИДепозитов.СтатьяДДСПроцентов,
	|	ВЫБОР
	|		КОГДА ДоговорыКредитовИДепозитов.БанковскийСчетПроцентов = ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
	|			ТОГДА ДоговорыКредитовИДепозитов.БанковскийСчетКонтрагента
	|		ИНАЧЕ ДоговорыКредитовИДепозитов.БанковскийСчетПроцентов
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДоговорыКредитовИДепозитов.Ссылка,
	|	ДоговорыКредитовИДепозитов.Партнер,
	|	ДоговорыКредитовИДепозитов.СтатьяДДСКомиссии,
	|	ДоговорыКредитовИДепозитов.Подразделение,
	|	ДоговорыКредитовИДепозитов.ВалютаВзаиморасчетов,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыГрафикаКредитовИДепозитов.Оплаты),
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия),
	|	СУММА(ГрафикОплатКредитовИДепозитов.Комиссия),
	|	ВЫБОР
	|		КОГДА ДоговорыКредитовИДепозитов.БанковскийСчетКомиссии = ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
	|			ТОГДА ДоговорыКредитовИДепозитов.БанковскийСчетКонтрагента
	|		ИНАЧЕ ДоговорыКредитовИДепозитов.БанковскийСчетКомиссии
	|	КОНЕЦ
	|ИЗ
	|	Справочник.ДоговорыКредитовИДепозитов КАК ДоговорыКредитовИДепозитов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикОплатКредитовИДепозитов КАК ГрафикОплатКредитовИДепозитов
	|		ПО ДоговорыКредитовИДепозитов.Ссылка = ГрафикОплатКредитовИДепозитов.ВариантГрафика.Владелец
	|ГДЕ
	|	ГрафикОплатКредитовИДепозитов.ВариантГрафика = &ВариантГрафика
	|	И ГрафикОплатКредитовИДепозитов.Период <= &НаДату
	|	И &ЭтоПоступление = ЛОЖЬ
	|	И ГрафикОплатКредитовИДепозитов.Комиссия > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоговорыКредитовИДепозитов.Ссылка,
	|	ДоговорыКредитовИДепозитов.Партнер,
	|	ДоговорыКредитовИДепозитов.Подразделение,
	|	ДоговорыКредитовИДепозитов.ВалютаВзаиморасчетов,
	|	ВЫБОР
	|		КОГДА ДоговорыКредитовИДепозитов.БанковскийСчетКомиссии = ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
	|			ТОГДА ДоговорыКредитовИДепозитов.БанковскийСчетКонтрагента
	|		ИНАЧЕ ДоговорыКредитовИДепозитов.БанковскийСчетКомиссии
	|	КОНЕЦ,
	|	ДоговорыКредитовИДепозитов.СтатьяДДСКомиссии
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДоговорКредитаДепозита,
	|	ТипСуммы,
	|	ТипГрафика,
	|	СтатьяДвиженияДенежныхСредств
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыПоДоговорамКредитовИДепозитов.Договор КАК Договор,
	|	РасчетыПоДоговорамКредитовИДепозитов.ТипСуммы КАК ТипСуммы,
	|	РасчетыПоДоговорамКредитовИДепозитов.ТипГрафика КАК ТипГрафика,
	|	РасчетыПоДоговорамКредитовИДепозитов.СтатьяАналитики КАК СтатьяАналитики,
	|	СУММА(РасчетыПоДоговорамКредитовИДепозитов.СуммаВВалюте) КАК СуммаВВалюте
	|ПОМЕСТИТЬ втОстатки
	|ИЗ
	|	РегистрНакопления.РасчетыПоДоговорамКредитовИДепозитов КАК РасчетыПоДоговорамКредитовИДепозитов
	|ГДЕ
	|	РасчетыПоДоговорамКредитовИДепозитов.Период <= &НаДату
	|	И РасчетыПоДоговорамКредитовИДепозитов.Договор = &Ссылка
	|	И РасчетыПоДоговорамКредитовИДепозитов.ТипГрафика <> ЗНАЧЕНИЕ(Перечисление.ТипыГрафикаКредитовИДепозитов.Начисления)
	|	И РасчетыПоДоговорамКредитовИДепозитов.Регистратор <> &ДокументИсключение
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыПоДоговорамКредитовИДепозитов.СтатьяАналитики,
	|	РасчетыПоДоговорамКредитовИДепозитов.ТипГрафика,
	|	РасчетыПоДоговорамКредитовИДепозитов.ТипСуммы,
	|	РасчетыПоДоговорамКредитовИДепозитов.Договор
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Договор,
	|	ТипСуммы,
	|	ТипГрафика,
	|	СтатьяАналитики
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДанныеГрафика.ДоговорКредитаДепозита,
	|	втДанныеГрафика.Партнер,
	|	втДанныеГрафика.СтатьяДвиженияДенежныхСредств,
	|	втДанныеГрафика.Подразделение,
	|	втДанныеГрафика.ВалютаВзаиморасчетов,
	|	втДанныеГрафика.ТипГрафика,
	|	втДанныеГрафика.ТипСуммы,
	|	втДанныеГрафика.ТипСуммы КАК ТипСуммыКредитаДепозита,
	|	втДанныеГрафика.СуммаГрафика,
	|	ЕСТЬNULL(втОстатки.СуммаВВалюте, 0) КАК СуммаВВалюте,
	|	втДанныеГрафика.БанковскийСчетКонтрагента,
	|	ВЫБОР
	|		КОГДА втДанныеГрафика.СуммаГрафика - ЕСТЬNULL(втОстатки.СуммаВВалюте, 0) > 0
	|			ТОГДА (втДанныеГрафика.СуммаГрафика - ЕСТЬNULL(втОстатки.СуммаВВалюте, 0)) * &КоэффициентПересчетаВВалютуДокумента
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА втДанныеГрафика.СуммаГрафика - ЕСТЬNULL(втОстатки.СуммаВВалюте, 0) > 0
	|			ТОГДА втДанныеГрафика.СуммаГрафика - ЕСТЬNULL(втОстатки.СуммаВВалюте, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВзаиморасчетов
	|ИЗ
	|	втДанныеГрафика КАК втДанныеГрафика
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОстатки КАК втОстатки
	|		ПО втДанныеГрафика.ДоговорКредитаДепозита = втОстатки.Договор
	|			И втДанныеГрафика.ТипСуммы = втОстатки.ТипСуммы
	|			И втДанныеГрафика.ТипГрафика = втОстатки.ТипГрафика
	|			И втДанныеГрафика.СтатьяДвиженияДенежныхСредств = втОстатки.СтатьяАналитики
	|ГДЕ
	|	втДанныеГрафика.СуммаГрафика - ЕСТЬNULL(втОстатки.СуммаВВалюте, 0) > 0";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	ЭтоПриход = ?(ДоговорКредитаДепозита.ХарактерДоговора = Перечисления.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм,ЭтоПоступление,НЕ ЭтоПоступление);
	Запрос.УстановитьПараметр("ЭтоПоступление", ЭтоПриход);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуДокумента", Коэффициенты.КоэффициентПересчетаВВалютуВзаиморасчетов);
	Запрос.УстановитьПараметр("Ссылка", ДоговорКредитаДепозита);
	Запрос.УстановитьПараметр("ВариантГрафика", Справочники.ВариантыГрафиковКредитовИДепозитов.ТекущийВариантГрафика(ДоговорКредитаДепозита));
	Запрос.УстановитьПараметр("ТипГрафика",?(ЭтоПоступление,Перечисления.ТипыГрафикаКредитовИДепозитов.Транши,Перечисления.ТипыГрафикаКредитовИДепозитов.Оплаты));
	Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
	Запрос.УстановитьПараметр("ДокументИсключение", ДокументИсключение);
	
	ДанныеРасшифровки = Запрос.Выполнить().Выгрузить();
	
	Возврат ДанныеРасшифровки;
	
КонецФункции

// Возвращает имена блокируемых реквизитов для механизма блокирования реквизитов БСП
//
// Возвращаемое значание:
//	Массив - имена блокируемых реквизитов
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("ХарактерДоговора");
	Результат.Добавить("ТипДоговора");
	Результат.Добавить("Партнер");
	Результат.Добавить("Контрагент");
	Результат.Добавить("Организация");
	Результат.Добавить("ПорядокОплаты");
	Результат.Добавить("ВалютаВзаиморасчетов");
	
	Результат.Добавить("СтатьяДДСПоступленияВыдачи");
	Результат.Добавить("СтатьяДДСОсновногоДолга");
	Результат.Добавить("СтатьяДДСПроцентов");
	Результат.Добавить("СтатьяДДСКомиссии");
	
	Результат.Добавить("СтатьяДоходовРасходовПроцентов");
	Результат.Добавить("СтатьяДоходовРасходовКомиссии");
	
	Результат.Добавить("ГруппаФинансовогоУчетаДенежныхСредств");
	Результат.Добавить("ГруппаФинансовогоУчета");
	
	Возврат Результат;
КонецФункции
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область КонтрольСтатейУчета

Процедура ВывестиСообщение(Текст, КлючДанных, Поле = "", ВыводитьСообщения, МассивСообщений)
	
	Если ВыводитьСообщения Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст, КлючДанных, Поле);
	Иначе
		МассивСообщений.Добавить(Новый Структура("Текст,Поле", Текст, Поле));
	КонецЕсли;
	
КонецПроцедуры

Функция ЗаполненыСтатьиДДС(Договор, ВыводитьСообщения, МассивСообщений)
	
	Параметры = ПараметрыКонтроля(Договор, ВыводитьСообщения, МассивСообщений);
	Параметры.ТаблицаКонтроля = ТаблицаКонтроляСтатейДДС(Договор);
	Параметры.ШаблонЗаполнено = НСтр("ru='Не указана статья ДДС %1!';uk='Не зазначена стаття РГК %1!'");
	Параметры.ТекстРазличны = НСтр("ru='Статьи ДДС на закладке ""Доп.счета\Статьи учета"" должны быть различными!';uk='Статті РГК на закладці ""Дод.рахунки\Статті обліку"" повинні бути різними!'");
	Параметры.ПутьКДанным = "Объект.СтатьяДДС";
	
	Возврат СтатьиУчетаЗаполненыВерно(Параметры);
	
КонецФункции

Функция ЗаполненыСтатьиДоходовРасходов(Договор, ВыводитьСообщения, МассивСообщений)
	
	Параметры = ПараметрыКонтроля(Договор, ВыводитьСообщения, МассивСообщений);
	Параметры.ТаблицаКонтроля = ТаблицаКонтроляСтатейДоходовРасходов(Договор);
	ТипСтатьи = ТипСтатьи(Договор.ХарактерДоговора);
	Параметры.ШаблонЗаполнено = СтрЗаменить(НСтр("ru='Не указана статья %Тип% %1!';uk='Не зазначена стаття %Тип% %1!'"), "%Тип%", ТипСтатьи);
	Параметры.ТекстРазличны = СтрЗаменить(НСтр("ru='Статьи %Тип% должны быть различными!';uk='Статті %Тип% повинні бути різними!'"), "%Тип%", ТипСтатьи);
	Параметры.ПутьКДанным = "Объект.СтатьяДоходовРасходов";
	
	Возврат СтатьиУчетаЗаполненыВерно(Параметры);
	
КонецФункции

Функция ПараметрыКонтроля(Договор = Неопределено, ВыводитьСообщения = Истина, МассивСообщений = Неопределено)
	
	Результат = Новый Структура("Договор,ВыводитьСообщения,МассивСообщений,ТаблицаКонтроля,ШаблонЗаполнено,ТекстРазличны,ПутьКДанным");
	Результат.Договор = Договор;
	Результат.ВыводитьСообщения = ВыводитьСообщения;
	Результат.МассивСообщений = МассивСообщений;
	
	Возврат Результат;
	
КонецФункции

Функция СтатьиУчетаЗаполненыВерно(Параметры)
	
	Результат = Истина;
	ВыводитьСообщения = Параметры.ВыводитьСообщения;
	МассивСообщений = Параметры.МассивСообщений;
	ТаблицаКонтроля = Параметры.ТаблицаКонтроля;
	
	Если МассивСообщений = Неопределено Тогда
		МассивСообщений = Новый Массив;
	КонецЕсли;
	
	Если ТипЗнч(Параметры.Договор) = Тип("СправочникСсылка.ДоговорыКредитовИДепозитов") Тогда
		КлючДанных = Параметры.Договор;
	КонецЕсли;
	
	ВсегоПолей = ТаблицаКонтроля.Количество();
	НомерСтроки = 0;
	Результат = Истина;
	Пока НомерСтроки < ТаблицаКонтроля.Количество() Цикл
	
		Стр = ТаблицаКонтроля[НомерСтроки];
		Если НЕ ЗначениеЗаполнено(Стр.Значение) Тогда
			Результат = Ложь;
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Параметры.ШаблонЗаполнено, Стр.Назначение);
			ВывестиСообщение(Текст, КлючДанных, "", ВыводитьСообщения, МассивСообщений);
			ТаблицаКонтроля.Удалить(Стр);
			Продолжить;
		КонецЕсли;
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;//по ТаблицеКонтроля
	
	Если Результат Тогда
		ТаблицаКонтроля.Свернуть("Значение");
		Если ТаблицаКонтроля.Количество() > 0 
			И ТаблицаКонтроля.Количество() < ВсегоПолей Тогда
			Результат = Ложь;
			ВывестиСообщение(Параметры.ТекстРазличны, КлючДанных, "", ВыводитьСообщения, МассивСообщений);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ТаблицаКонтроляСтатейДДС(Договор)
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ПутьКДанным");
	Таблица.Колонки.Добавить("Назначение");
	Таблица.Колонки.Добавить("Значение");
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ПутьКДанным = "Поступления";
	НоваяСтрока.Назначение = НСтр("ru='поступления';uk='надходження'");
	НоваяСтрока.Значение = Договор.СтатьяДДСПоступленияВыдачи;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ПутьКДанным = "ОсновногоДолга";
	НоваяСтрока.Назначение = НСтр("ru='основного долга';uk='основного боргу'");
	НоваяСтрока.Значение = Договор.СтатьяДДСОсновногоДолга;
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ПутьКДанным = "Процентов";
	НоваяСтрока.Назначение = НСтр("ru='процентов';uk='відсотків'");
	НоваяСтрока.Значение = Договор.СтатьяДДСПроцентов;
	
	Если Договор.ТипКомиссии <> Перечисления.ТипыКомиссииКредитовИДепозитов.Нет Тогда
	
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.ПутьКДанным = "Комиссии";
		НоваяСтрока.Назначение = НСтр("ru='комиссии';uk='комісії'");
		НоваяСтрока.Значение = Договор.СтатьяДДСКомиссии;
		
	КонецЕсли;
	
	Возврат Таблица;
	
КонецФункции

Функция ТаблицаКонтроляСтатейДоходовРасходов(Договор)
	
	Таблица = Новый ТаблицаЗначений();
	Таблица.Колонки.Добавить("ПутьКДанным");
	Таблица.Колонки.Добавить("Назначение");
	Таблица.Колонки.Добавить("Значение");
	
	НоваяСтрока = Таблица.Добавить();
	НоваяСтрока.ПутьКДанным = "Процентов";
	НоваяСтрока.Назначение = НСтр("ru='процентов';uk='відсотків'");
	НоваяСтрока.Значение = Договор.СтатьяДоходовРасходовПроцентов;
	
	Если Договор.ТипКомиссии <> Перечисления.ТипыКомиссииКредитовИДепозитов.Нет Тогда
	
		НоваяСтрока = Таблица.Добавить();
		НоваяСтрока.ПутьКДанным = "Комиссии";
		НоваяСтрока.Назначение = НСтр("ru='комиссии';uk='комісії'");
		НоваяСтрока.Значение = Договор.СтатьяДоходовРасходовКомиссии;
		
	КонецЕсли;
	
	Возврат Таблица;
	
КонецФункции

Процедура СообщитьПользователю(Текст,КлючДанных = Неопределено,Поле = "", ИдентификаторФормы = Неопределено)
	
	Сообщение = Новый СообщениеПользователю;
	Если ИдентификаторФормы <> Неопределено Тогда
		Сообщение.ИдентификаторНазначения = ИдентификаторФормы;
	КонецЕсли;
	Сообщение.КлючДанных = КлючДанных;
	Сообщение.Поле = Поле;
	Сообщение.Текст = Текст;
	Сообщение.Сообщить();
	
КонецПроцедуры

#КонецОбласти

#Область ВводДокументовДвеженияДенежныхСредств

Функция ДанныеШапкиДокументаДДС(ДоговорКредитаДепозита, ЭтоПоступление = Ложь)
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Договора.Организация,
	|	Договора.ДоговорКредитаДепозита,
	|	Договора.ХозяйственнаяОперация,
	|	Договора.СуммаДокумента,
	|	Договора.Подразделение,
	|	Договора.Контрагент,
	|	Договора.КонтрагентНаименование,
	|	Договора.КонтрагентНаименованиеПолное,
	|	ВЫБОР
	|		КОГДА Договора.ПорядокОплаты = ЗНАЧЕНИЕ(Перечисление.ПорядокОплатыПоСоглашениям.РасчетыВВалютеОплатаВГривнах)
	|			ТОГДА &ВалютаРеглУчета
	|		ИНАЧЕ Договора.Валюта
	|	КОНЕЦ КАК Валюта,
	|	Договора.ПорядокОплаты,
	|	Договора.ФормаОплаты,
	|	Договора.Статус,
	|	Договора.Касса,
	|	Договора.БанковскийСчет,
	|	Договора.БанковскийСчетКонтрагента
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДоговорКредитаДепозита.Организация КАК Организация,
	|		ДоговорКредитаДепозита.Ссылка КАК ДоговорКредитаДепозита,
	|		&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|		0 КАК СуммаДокумента,
	|		ДоговорКредитаДепозита.Подразделение КАК Подразделение,
	|		ДоговорКредитаДепозита.Контрагент КАК Контрагент,
	|		ДоговорКредитаДепозита.Контрагент.Наименование КАК КонтрагентНаименование,
	|		ДоговорКредитаДепозита.Контрагент.НаименованиеПолное КАК КонтрагентНаименованиеПолное,
	|		ДоговорКредитаДепозита.ВалютаВзаиморасчетов КАК Валюта,
	|		ДоговорКредитаДепозита.ПорядокОплаты КАК ПорядокОплаты,
	|		ДоговорКредитаДепозита.ФормаОплаты КАК ФормаОплаты,
	|		ДоговорКредитаДепозита.Статус КАК Статус,
	|		ДоговорКредитаДепозита.Касса КАК Касса,
	|		ДоговорКредитаДепозита.БанковскийСчет КАК БанковскийСчет,
	|		ДоговорКредитаДепозита.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента
	|	ИЗ
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДоговорКредитаДепозита
	|	ГДЕ
	|		ДоговорКредитаДепозита.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДоговорКредитаДепозита.Организация,
	|		ДоговорКредитаДепозита.Ссылка,
	|		&ХозяйственнаяОперация,
	|		0,
	|		ДоговорКредитаДепозита.Подразделение,
	|		ДоговорКредитаДепозита.Контрагент,
	|		ДоговорКредитаДепозита.Контрагент.Наименование,
	|		ДоговорКредитаДепозита.Контрагент.НаименованиеПолное,
	|		ДоговорКредитаДепозита.ВалютаВзаиморасчетов,
	|		ДоговорКредитаДепозита.ПорядокОплаты,
	|		ДоговорКредитаДепозита.ФормаОплаты,
	|		ДоговорКредитаДепозита.Статус,
	|		ДоговорКредитаДепозита.Касса,
	|		ДоговорКредитаДепозита.БанковскийСчет,
	|		ДоговорКредитаДепозита.БанковскийСчетКонтрагента
	|	ИЗ
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДоговорКредитаДепозита
	|	ГДЕ
	|		ДоговорКредитаДепозита.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДоговорКредитаДепозита.Организация,
	|		ДоговорКредитаДепозита.Ссылка,
	|		&ХозяйственнаяОперация,
	|		0,
	|		ДоговорКредитаДепозита.Подразделение,
	|		ДоговорКредитаДепозита.Контрагент,
	|		ДоговорКредитаДепозита.Контрагент.Наименование,
	|		ДоговорКредитаДепозита.Контрагент.НаименованиеПолное,
	|		ДоговорКредитаДепозита.ВалютаВзаиморасчетов,
	|		ДоговорКредитаДепозита.ПорядокОплаты,
	|		ДоговорКредитаДепозита.ФормаОплаты,
	|		ДоговорКредитаДепозита.Статус,
	|		ДоговорКредитаДепозита.Касса,
	|		ДоговорКредитаДепозита.БанковскийСчет,
	|		ДоговорКредитаДепозита.БанковскийСчетКонтрагента
	|	ИЗ
	|		Справочник.ДоговорыКредитовИДепозитов КАК ДоговорКредитаДепозита
	|	ГДЕ
	|		ДоговорКредитаДепозита.Ссылка = &Ссылка) КАК Договора";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", ДоговорКредитаДепозита);
	Запрос.УстановитьПараметр("ВалютаРеглУчета", ВалютаРеглУчета);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", ОперацияПоХарактеруДоговора(ДоговорКредитаДепозита.ХарактерДоговора, ЭтоПоступление));
	
	РезультатЗапроса = Запрос.Выполнить();
	ДанныеШапки = Новый Структура;
	Для Каждого Колонка Из РезультатЗапроса.Колонки Цикл
		ДанныеШапки.Вставить(Колонка.Имя);
	КонецЦикла;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(ДанныеШапки, Выборка);
	
	Возврат ДанныеШапки;
	
КонецФункции

#КонецОбласти

#Область СозданиеЗаявокНаРасходованиеДенежныхСредств

Функция ТекстЗапросаПоОплатам()
	
	Возврат
	"ВЫБРАТЬ
	|	ГрафикОплат.Период КАК ДатаОплаты,
	|	ДоговорыКредитовИДепозитов.Организация КАК Организация,
	|	ДоговорыКредитовИДепозитов.БанковскийСчет КАК БанковскийСчет,
	|	ДоговорыКредитовИДепозитов.Партнер,
	|	ДоговорыКредитовИДепозитов.Контрагент КАК Контрагент,
	|	ДоговорыКредитовИДепозитов.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента,
	|	ГрафикОплат.Сумма КАК СуммаВзаиморасчетов,
	|	ДоговорыКредитовИДепозитов.СтатьяДДСОсновногоДолга КАК СтатьяДвиженияДенежныхСредств,
	|	ДоговорыКредитовИДепозитов.Ссылка КАК ДоговорКредитаДепозита,
	|	ДоговорыКредитовИДепозитов.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДоговорыКредитовИДепозитов.ФормаОплаты КАК ФормаОплатыЗаявки,
	|	ДоговорыКредитовИДепозитов.Касса КАК Касса,
	|	ВЫБОР
	|		КОГДА ДоговорыКредитовИДепозитов.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФормаОплатыБезналичная,
	|	ВЫБОР
	|		КОГДА ДоговорыКредитовИДепозитов.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФормаОплатыНаличная,
	|	ВЫБОР
	|		КОГДА ДоговорыКредитовИДепозитов.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПлатежнаяКарта)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФормаОплатыПлатежнаяКарта,
	|	ВЫБОР
	|		КОГДА ДоговорыКредитовИДепозитов.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам)
	|		КОГДА ДоговорыКредитовИДепозитов.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.Депозит)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты)
	|		КОГДА ДоговорыКредитовИДепозитов.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.ЗаймВыданный)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	ДоговорыКредитовИДепозитов.ПорядокОплаты,
	|	ГрафикОплат.ВариантГрафика,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг) КАК ТипСуммыКредитаДепозита
	|ПОМЕСТИТЬ ОплатыПоГрафику
	|ИЗ
	|	РегистрСведений.ГрафикОплатКредитовИДепозитов КАК ГрафикОплат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКредитовИДепозитов КАК ДоговорыКредитовИДепозитов
	|		ПО ГрафикОплат.ВариантГрафика.Владелец = ДоговорыКредитовИДепозитов.Ссылка
	|ГДЕ
	|	НЕ ГрафикОплат.ВариантГрафика.ПометкаУдаления
	|	И ГрафикОплат.ВариантГрафика.Используется
	|	И ДоговорыКредитовИДепозитов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Действует)
	|	И ГрафикОплат.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ГрафикОплат.Сумма > 0
	|	И ДоговорыКредитовИДепозитов.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм)
	|{ГДЕ
	|	ДоговорыКредитовИДепозитов.Ссылка.* КАК Договор,
	|	ДоговорыКредитовИДепозитов.Контрагент.*}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ГрафикОплат.Период,
	|	ДоговорыКредитовИДепозитов.Организация,
	|	ДоговорыКредитовИДепозитов.БанковскийСчет,
	|	ДоговорыКредитовИДепозитов.Партнер,
	|	ДоговорыКредитовИДепозитов.Контрагент,
	|	ВЫБОР
	|		КОГДА ДоговорыКредитовИДепозитов.БанковскийСчетПроцентов = ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
	|			ТОГДА ДоговорыКредитовИДепозитов.БанковскийСчетКонтрагента
	|		ИНАЧЕ ДоговорыКредитовИДепозитов.БанковскийСчетПроцентов
	|	КОНЕЦ,
	|	ГрафикОплат.Проценты,
	|	ДоговорыКредитовИДепозитов.СтатьяДДСПроцентов,
	|	ДоговорыКредитовИДепозитов.Ссылка,
	|	ДоговорыКредитовИДепозитов.ВалютаВзаиморасчетов,
	|	ДоговорыКредитовИДепозитов.ФормаОплаты,
	|	ДоговорыКредитовИДепозитов.Касса,
	|	ВЫБОР
	|		КОГДА ДоговорыКредитовИДепозитов.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДоговорыКредитовИДепозитов.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДоговорыКредитовИДепозитов.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПлатежнаяКарта)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДоговорыКредитовИДепозитов.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам)
	|		КОГДА ДоговорыКредитовИДепозитов.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.Депозит)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты)
	|		КОГДА ДоговорыКредитовИДепозитов.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.ЗаймВыданный)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|	КОНЕЦ,
	|	ДоговорыКредитовИДепозитов.ПорядокОплаты,
	|	ГрафикОплат.ВариантГрафика,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Проценты) КАК ТипСуммыКредитаДепозита
	|ИЗ
	|	РегистрСведений.ГрафикОплатКредитовИДепозитов КАК ГрафикОплат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКредитовИДепозитов КАК ДоговорыКредитовИДепозитов
	|		ПО ГрафикОплат.ВариантГрафика.Владелец = ДоговорыКредитовИДепозитов.Ссылка
	|ГДЕ
	|	НЕ ГрафикОплат.ВариантГрафика.ПометкаУдаления
	|	И ГрафикОплат.ВариантГрафика.Используется
	|	И ДоговорыКредитовИДепозитов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Действует)
	|	И ГрафикОплат.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ГрафикОплат.Проценты > 0
	|	И ДоговорыКредитовИДепозитов.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм)
	|{ГДЕ
	|	ДоговорыКредитовИДепозитов.Ссылка.* КАК Договор,
	|	ДоговорыКредитовИДепозитов.Контрагент.*}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ГрафикОплат.Период,
	|	ДоговорыКредитовИДепозитов.Организация,
	|	ДоговорыКредитовИДепозитов.БанковскийСчет,
	|	ДоговорыКредитовИДепозитов.Партнер,
	|	ДоговорыКредитовИДепозитов.Контрагент,
	|	ВЫБОР
	|		КОГДА ДоговорыКредитовИДепозитов.БанковскийСчетКомиссии = ЗНАЧЕНИЕ(Справочник.БанковскиеСчетаКонтрагентов.ПустаяСсылка)
	|			ТОГДА ДоговорыКредитовИДепозитов.БанковскийСчетКонтрагента
	|		ИНАЧЕ ДоговорыКредитовИДепозитов.БанковскийСчетКомиссии
	|	КОНЕЦ,
	|	ГрафикОплат.Комиссия,
	|	ДоговорыКредитовИДепозитов.СтатьяДДСКомиссии,
	|	ДоговорыКредитовИДепозитов.Ссылка,
	|	ДоговорыКредитовИДепозитов.ВалютаВзаиморасчетов,
	|	ДоговорыКредитовИДепозитов.ФормаОплаты,
	|	ДоговорыКредитовИДепозитов.Касса,
	|	ВЫБОР
	|		КОГДА ДоговорыКредитовИДепозитов.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДоговорыКредитовИДепозитов.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДоговорыКредитовИДепозитов.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПлатежнаяКарта)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДоговорыКредитовИДепозитов.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам)
	|		КОГДА ДоговорыКредитовИДепозитов.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.Депозит)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты)
	|		КОГДА ДоговорыКредитовИДепозитов.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.ЗаймВыданный)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|	КОНЕЦ,
	|	ДоговорыКредитовИДепозитов.ПорядокОплаты,
	|	ГрафикОплат.ВариантГрафика,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.Комиссия) КАК ТипСуммыКредитаДепозита
	|ИЗ
	|	РегистрСведений.ГрафикОплатКредитовИДепозитов КАК ГрафикОплат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКредитовИДепозитов КАК ДоговорыКредитовИДепозитов
	|		ПО ГрафикОплат.ВариантГрафика.Владелец = ДоговорыКредитовИДепозитов.Ссылка
	|ГДЕ
	|	НЕ ГрафикОплат.ВариантГрафика.ПометкаУдаления
	|	И ГрафикОплат.ВариантГрафика.Используется
	|	И ДоговорыКредитовИДепозитов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Действует)
	|	И ГрафикОплат.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ГрафикОплат.Комиссия > 0
	|	И ДоговорыКредитовИДепозитов.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм)
	|{ГДЕ
	|	ДоговорыКредитовИДепозитов.Ссылка.* КАК Договор,
	|	ДоговорыКредитовИДепозитов.Контрагент.*}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ГрафикТраншейКредитовИДепозитов.Период,
	|	ДоговорыКредитовИДепозитов.Организация,
	|	ДоговорыКредитовИДепозитов.БанковскийСчет,
	|	ДоговорыКредитовИДепозитов.Партнер,
	|	ДоговорыКредитовИДепозитов.Контрагент,
	|	ДоговорыКредитовИДепозитов.БанковскийСчетКонтрагента,
	|	ГрафикТраншейКредитовИДепозитов.Сумма,
	|	ДоговорыКредитовИДепозитов.СтатьяДДСПоступленияВыдачи,
	|	ДоговорыКредитовИДепозитов.Ссылка,
	|	ДоговорыКредитовИДепозитов.ВалютаВзаиморасчетов,
	|	ДоговорыКредитовИДепозитов.ФормаОплаты,
	|	ДоговорыКредитовИДепозитов.Касса,
	|	ВЫБОР
	|		КОГДА ДоговорыКредитовИДепозитов.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичная)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДоговорыКредитовИДепозитов.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличная)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДоговорыКредитовИДепозитов.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПлатежнаяКарта)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДоговорыКредитовИДепозитов.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам)
	|		КОГДА ДоговорыКредитовИДепозитов.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.Депозит)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты)
	|		КОГДА ДоговорыКредитовИДепозитов.ХарактерДоговора = ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.ЗаймВыданный)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|	КОНЕЦ,
	|	ДоговорыКредитовИДепозитов.ПорядокОплаты,
	|	ГрафикТраншейКредитовИДепозитов.ВариантГрафика,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыСуммГрафикаКредитовИДепозитов.ОсновнойДолг) КАК ТипСуммыКредитаДепозита
	|ИЗ
	|	РегистрСведений.ГрафикТраншейКредитовИДепозитов КАК ГрафикТраншейКредитовИДепозитов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКредитовИДепозитов КАК ДоговорыКредитовИДепозитов
	|		ПО ГрафикТраншейКредитовИДепозитов.ВариантГрафика.Владелец = ДоговорыКредитовИДепозитов.Ссылка
	|ГДЕ
	|	НЕ ГрафикТраншейКредитовИДепозитов.ВариантГрафика.ПометкаУдаления
	|	И ГрафикТраншейКредитовИДепозитов.ВариантГрафика.Используется
	|	И ДоговорыКредитовИДепозитов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Действует)
	|	И ГрафикТраншейКредитовИДепозитов.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ГрафикТраншейКредитовИДепозитов.Сумма > 0
	|	И ДоговорыКредитовИДепозитов.ХарактерДоговора <> ЗНАЧЕНИЕ(Перечисление.ХарактерДоговораКредитовИДепозитов.КредитИлиЗайм)
	|{ГДЕ
	|	ДоговорыКредитовИДепозитов.Ссылка.* КАК Договор,
	|	ДоговорыКредитовИДепозитов.Контрагент.*}
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОплатыПоГрафику.ДатаОплаты КАК ДатаОплаты,
	|	ОплатыПоГрафику.Организация КАК Организация,
	|	ОплатыПоГрафику.БанковскийСчет КАК БанковскийСчет,
	|	ОплатыПоГрафику.Партнер,
	|	ОплатыПоГрафику.Контрагент КАК Контрагент,
	|	ОплатыПоГрафику.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента,
	|	СУММА(ОплатыПоГрафику.СуммаВзаиморасчетов) КАК СуммаВзаиморасчетов,
	|	ОплатыПоГрафику.СтатьяДвиженияДенежныхСредств,
	|	ОплатыПоГрафику.ДоговорКредитаДепозита,
	|	ОплатыПоГрафику.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ОплатыПоГрафику.ФормаОплатыЗаявки КАК ФормаОплатыЗаявки,
	|	ОплатыПоГрафику.Касса КАК Касса,
	|	ОплатыПоГрафику.ФормаОплатыБезналичная,
	|	ОплатыПоГрафику.ФормаОплатыНаличная,
	|	ОплатыПоГрафику.ФормаОплатыПлатежнаяКарта,
	|	ОплатыПоГрафику.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ОплатыПоГрафику.ПорядокОплаты,
	|	ОплатыПоГрафику.ВариантГрафика,
	|	ОплатыПоГрафику.ТипСуммыКредитаДепозита
	|ИЗ
	|	ОплатыПоГрафику КАК ОплатыПоГрафику
	|{ГДЕ
	|	ОплатыПоГрафику.Контрагент.*,
	|	ОплатыПоГрафику.ДоговорКредитаДепозита.* КАК Договор}
	|
	|СГРУППИРОВАТЬ ПО
	|	ОплатыПоГрафику.ДатаОплаты,
	|	ОплатыПоГрафику.Организация,
	|	ОплатыПоГрафику.БанковскийСчет,
	|	ОплатыПоГрафику.Партнер,
	|	ОплатыПоГрафику.Контрагент,
	|	ОплатыПоГрафику.БанковскийСчетКонтрагента,
	|	ОплатыПоГрафику.СтатьяДвиженияДенежныхСредств,
	|	ОплатыПоГрафику.ДоговорКредитаДепозита,
	|	ОплатыПоГрафику.ВалютаВзаиморасчетов,
	|	ОплатыПоГрафику.ФормаОплатыЗаявки,
	|	ОплатыПоГрафику.Касса,
	|	ОплатыПоГрафику.ФормаОплатыБезналичная,
	|	ОплатыПоГрафику.ФормаОплатыНаличная,
	|	ОплатыПоГрафику.ФормаОплатыПлатежнаяКарта,
	|	ОплатыПоГрафику.ХозяйственнаяОперация,
	|	ОплатыПоГрафику.ПорядокОплаты,
	|	ОплатыПоГрафику.ВариантГрафика,
	|	ОплатыПоГрафику.ТипСуммыКредитаДепозита
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОплатыПоГрафику.ДатаОплаты
	|ИТОГИ
	|	СУММА(СуммаВзаиморасчетов)
	|ПО
	|	Организация,
	|	ХозяйственнаяОперация,
	|	ВалютаВзаиморасчетов,
	|	ФормаОплатыЗаявки,
	|	БанковскийСчет,
	|	Касса,
	|	Контрагент,
	|	БанковскийСчетКонтрагента,
	|	ДатаОплаты";
	
КонецФункции

Функция ТекстЗапросаПоЗаявкам()
	
	Возврат
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаявкаНаРасходДСРасшифровкаПлатежа.Ссылка КАК Заявка,
	|	ЗаявкаНаРасходДСРасшифровкаПлатежа.НомерСтроки,
	|	ЗаявкаНаРасходДСРасшифровкаПлатежа.СтатьяДвиженияДенежныхСредств,
	|	ЗаявкаНаРасходДСРасшифровкаПлатежа.Ссылка.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЗаявкаНаРасходДСРасшифровкаПлатежа.Ссылка.Контрагент КАК Контрагент,
	|	ЗаявкаНаРасходДСРасшифровкаПлатежа.СуммаВзаиморасчетов,
	|	ЗаявкаНаРасходДСРасшифровкаПлатежа.ДоговорКредитаДепозита
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК ЗаявкаНаРасходДСРасшифровкаПлатежа
	|ГДЕ
	|	ВЫБОР
	|		КОГДА ЗаявкаНаРасходДСРасшифровкаПлатежа.Ссылка.ЖелательнаяДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1) ТОГДА
	|			ЗаявкаНаРасходДСРасшифровкаПлатежа.Ссылка.ЖелательнаяДатаПлатежа
	|		КОГДА ЗаявкаНаРасходДСРасшифровкаПлатежа.Ссылка.ДатаПлатежа <> ДАТАВРЕМЯ(1, 1, 1) ТОГДА
	|			ЗаявкаНаРасходДСРасшифровкаПлатежа.Ссылка.ДатаПлатежа
	|		ИНАЧЕ
	|			ЗаявкаНаРасходДСРасшифровкаПлатежа.Ссылка.Дата
	|	КОНЕЦ МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И НЕ ЗаявкаНаРасходДСРасшифровкаПлатежа.Ссылка.ПометкаУдаления
	|	И ЗаявкаНаРасходДСРасшифровкаПлатежа.ДоговорКредитаДепозита <> ЗНАЧЕНИЕ(Справочник.ДоговорыКредитовИДепозитов.ПустаяСсылка)
	|	И ЗаявкаНаРасходДСРасшифровкаПлатежа.Ссылка.ХозяйственнаяОперация В (
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеНаДепозиты), 
	|			ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов))
	|{ГДЕ
	|	ЗаявкаНаРасходДСРасшифровкаПлатежа.ДоговорКредитаДепозита.* КАК Договор}";
	
КонецФункции

Функция ОплатыЗаПериод(ДатаНачала, ДатаОкончания, Договоры, Контрагенты)
	
	ТекстЗапроса = ТекстЗапросаПоОплатам();
	
	ПостроительЗапроса = Новый ПостроительЗапроса(ТекстЗапроса);
	ПостроительЗапроса.Параметры.Вставить("ДатаНачала", ДатаНачала);
	ПостроительЗапроса.Параметры.Вставить("ДатаОкончания", ДатаОкончания);
	ПостроительЗапроса.Параметры.Вставить("ВалютаРегл",Константы.ВалютаРегламентированногоУчета.Получить());
	ПоляОтбора = ПостроительЗапроса.Отбор.ПолучитьДоступныеПоля();
	ПостроительЗапроса.Отбор.УстановитьДоступныеПоля(ПоляОтбора);
	
	Если ЗначениеЗаполнено(Контрагенты) Тогда
		
		Отбор = ПостроительЗапроса.Отбор.Добавить("Контрагент");
		Отбор.ВидСравнения = ВидСравнения.ВСписке;
		Отбор.Значение = Контрагенты;
		Отбор.Использование = Истина;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Договоры) Тогда
		
		Отбор = ПостроительЗапроса.Отбор.Добавить("Договор");
		Отбор.ВидСравнения = ВидСравнения.ВСписке;
		Отбор.Значение = Договоры;
		Отбор.Использование = Истина;
		
	КонецЕсли;
	
	ПостроительЗапроса.Выполнить();
	Возврат ПостроительЗапроса.Результат;
	
КонецФункции

Функция ЗаявкиЗаПериод(ДатаНачала, ДатаОкончания, Договоры)
	
	ПостроительЗапроса = Новый ПостроительЗапроса(ТекстЗапросаПоЗаявкам());
	ПостроительЗапроса.Параметры.Вставить("ДатаНачала", ДатаНачала);
	ПостроительЗапроса.Параметры.Вставить("ДатаОкончания", ДатаОкончания);
	
	Если ЗначениеЗаполнено(Договоры) Тогда
		
		ОтборДоговора = ПостроительЗапроса.Отбор.Добавить("Договор");
		ОтборДоговора.Установить(Договоры);
		ОтборДоговора.ВидСравнения = ВидСравнения.ВСписке;
		
	КонецЕсли;
	
	ПостроительЗапроса.Выполнить();
	Возврат ПостроительЗапроса.Результат.Выгрузить();
	
КонецФункции

Функция ЕстьЗаявкаНаСуммуГрафика(Оплата, ЗаявкиЗаПериод, ИдентификаторФормы = Неопределено)
	
	Результат = Ложь;
	ОтборЗаявок = Новый Структура("СтатьяДвиженияДенежныхСредств,ХозяйственнаяОперация,Контрагент,ДоговорКредитаДепозита");
	Если ЗаявкиЗаПериод.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(ОтборЗаявок,Оплата);
		НайденныеЗаявки = ЗаявкиЗаПериод.НайтиСтроки(ОтборЗаявок);
		Если НайденныеЗаявки.Количество() > 0 Тогда
			Для Каждого Документ Из НайденныеЗаявки Цикл
				ТекстДокумента = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("№%1 от %2", Документ.Заявка.Номер, Формат(Документ.Заявка.Дата, "ДЛФ=D"));
				Договор = Оплата.ДоговорКредитаДепозита;
				ТекстДоговора = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("№%1 от %2 ""%3""", Договор.Номер, Формат(Договор.Дата, "ДЛФ=D"), Договор);
				Если Оплата.СуммаВзаиморасчетов = Документ.СуммаВзаиморасчетов Тогда
					ШаблонТекста = НСтр("ru='На сумму оплаты %1 по графику ""%2""
                                            |	договора %3 контрагента ""%4""
                                            |	уже создана заявка на оплату %5
                                            |При формировании новой заявки строка графика пропущена!'
                                            |;uk='На суму оплати %1 за графіком ""%2""
                                            |   договору %3 контрагента ""%4""
                                            |   вже створена заявка на оплату %5
                                            |При формуванні нової заявки рядок графіка пропущений!'");
					Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								ШаблонТекста,
								Оплата.СуммаВзаиморасчетов,
								Оплата.ВариантГрафика,
								ТекстДоговора,
								Оплата.Контрагент,
								ТекстДокумента);
				Иначе
					ШаблонТекста = НСтр("ru='Обнаружена заявка на оплату %1 
                                            |	по договору %2 контрагента ""%3"" 
                                            |	на дату оплаты %4, сумма в заявке %5 по статье ""%6"" 
                                            |	отличается от суммы графика ""%7""
                                            |При формировании новой заявки строка графика пропущена!'
                                            |;uk='Виявлена заявка на оплату %1 
                                            |  за договором %2 контрагента ""%3"" 
                                            |  на дату оплати %4 сума у заявці %5 по статті ""%6"" 
                                            |  відрізняється від суми графіка ""%7""
                                            |При формуванні нової заявки рядок графіка пропущений!'");
					Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								ШаблонТекста, 
								ТекстДокумента, 
								ТекстДоговора, 
								Оплата.Контрагент, 
								Оплата.ДатаОплаты,
								Документ.СуммаВзаиморасчетов,
								Оплата.СтатьяДвиженияДенежныхСредств,
								Оплата.ВариантГрафика);
				КонецЕсли;
				СообщитьПользователю(Текст, Документ.Заявка, , ИдентификаторФормы);
			КонецЦикла;//по найденным заявкам
			Результат = Истина;
		КонецЕсли;//нашлись уже созданные заявки
	КонецЕсли;//вообще есть заявки за период
	
	Возврат Результат;
	
КонецФункции

Процедура СформироватьЗаявкуНаОплату(ДатаОплаты, Параметры)
	
	ЗаявкиЗаПериод = Параметры.ЗаявкиЗаПериод;
	ОшибочныеДоговора = Параметры.ОшибочныеДоговора;
	
	НоваяЗаявка = Документы.ЗаявкаНаРасходованиеДенежныхСредств.СоздатьДокумент();
	НоваяЗаявка.Приоритет = Справочники.Приоритеты.ПолучитьПриоритетПоУмолчанию(НоваяЗаявка.Приоритет);
	НоваяЗаявка.Дата = ТекущаяДата();
	НоваяЗаявка.ЖелательнаяДатаПлатежа = ДатаОплаты.ДатаОплаты;
	НоваяЗаявка.ДатаПлатежа = НоваяЗаявка.Дата;
	Если ДатаОплаты.ДатаОплаты > НоваяЗаявка.Дата Тогда
		НоваяЗаявка.ДатаПлатежа = ДатаОплаты.ДатаОплаты;
	КонецЕсли;
	НоваяЗаявка.Статус = Перечисления.СтатусыЗаявокНаРасходованиеДенежныхСредств.НеСогласована;
	ЗаполнитьЗначенияСвойств(НоваяЗаявка,ДатаОплаты);
	НоваяЗаявка.КтоЗаявил = Пользователи.ТекущийПользователь();
	НоваяЗаявка.Подразделение = ЗначениеНастроекПовтИсп.ПодразделениеПользователя(НоваяЗаявка.КтоЗаявил, НоваяЗаявка.Подразделение);
	
	ФлагиФормыОплаты = Неопределено;
	ВалютаВзаиморасчетов = Неопределено;
	Оплата = ДатаОплаты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Оплата.Следующий() Цикл
		
		Если НЕ ЗаполненыСтатьиУчета(Оплата.ДоговорКредитаДепозита,Ложь) Тогда
			ОшибочныеДоговора.Вставить(Оплата.ДоговорКредитаДепозита,Оплата.ДоговорКредитаДепозита);
			Продолжить;
		КонецЕсли;
		
		Если ЕстьЗаявкаНаСуммуГрафика(Оплата, ЗаявкиЗаПериод, Параметры.ИдентификаторФормы) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ВалютаВзаиморасчетов = Неопределено Тогда
			ВалютаВзаиморасчетов = Оплата.ВалютаВзаиморасчетов;
		КонецЕсли;
		
		Если ФлагиФормыОплаты = Неопределено Тогда
			ФлагиФормыОплаты = Новый Структура("ФормаОплатыНаличная,ФормаОплатыБезналичная,ФормаОплатыПлатежнаяКарта");
			ЗаполнитьЗначенияСвойств(ФлагиФормыОплаты,Оплата);
		КонецЕсли;
		
		НоваяСтрока = НоваяЗаявка.РасшифровкаПлатежа.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Оплата);
		НоваяСтрока.Сумма = Оплата.СуммаВзаиморасчетов;
		
	КонецЦикла;//по Оплатам
	
	Если НоваяЗаявка.РасшифровкаПлатежа.Количество() > 0 Тогда
		
		НоваяЗаявка.Валюта = ВалютаВзаиморасчетов;
		Если ФлагиФормыОплаты.ФормаОплатыНаличная Тогда
			ВалютаПлатежа = НоваяЗаявка.Касса.ВалютаДенежныхСредств;
		Иначе
			ВалютаПлатежа = НоваяЗаявка.БанковскийСчет.ВалютаДенежныхСредств;
		КонецЕсли;
		
		Если ВалютаВзаиморасчетов = ВалютаПлатежа Тогда
			НоваяЗаявка.ПланированиеСуммы = Параметры.ВВалютеПлатежа;
		Иначе
			НоваяЗаявка.ПланированиеСуммы = Параметры.ВВалютеВзаиморасчетов;
		КонецЕсли;
		
		НоваяЗаявка.СуммаДокумента = НоваяЗаявка.РасшифровкаПлатежа.Итог("Сумма");
		ЗаполнитьЗначенияСвойств(НоваяЗаявка,ФлагиФормыОплаты);
		
		НоваяЗаявка.УстановитьНовыйНомер();
		НоваяЗаявка.Записать(РежимЗаписиДокумента.Проведение);
		Параметры.ВсегоСоздано = Параметры.ВсегоСоздано + 1;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область Отчеты

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуПланФактныйАнализДоговора(КомандыОтчетов);

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
