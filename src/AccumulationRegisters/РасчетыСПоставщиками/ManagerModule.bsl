#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы


Процедура ИсправитьДвижения_ДанныеДляОбновления(Параметры) Экспорт
	
	ДополнительныеПараметры = ОбновлениеИнформационнойБазы.ДополнительныеПараметрыОтметкиОбработки();
	ДополнительныеПараметры.ЭтоДвижения = Истина;
	ДополнительныеПараметры.ПолноеИмяРегистра = "РегистрНакопления.РасчетыСПоставщиками";
	
#Область АналитикаУчетаПоПартнерам

	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Расчеты.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками КАК Расчеты
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|		ПО Расчеты.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
	|			И (Аналитика.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК Договоры
	|		ПО (Договоры.Ссылка = 
	|				ВЫБОР КОГДА Расчеты.ЗаказПоставщику ССЫЛКА Справочник.ДоговорыКонтрагентов
	|					ТОГДА Расчеты.ЗаказПоставщику
	|				ИНАЧЕ Расчеты.ЗаказПоставщику.Договор
	|			КОНЕЦ)
	|ГДЕ
	|	    Расчеты.Регистратор ССЫЛКА Документ.АвансовыйОтчет
	|	ИЛИ Расчеты.Регистратор ССЫЛКА Документ.ВводОстатков
	|	ИЛИ Расчеты.Регистратор ССЫЛКА Документ.ВзаимозачетЗадолженности
	|	ИЛИ Расчеты.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
	|	ИЛИ Расчеты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
	|	ИЛИ Расчеты.Регистратор ССЫЛКА Документ.ВыкупВозвратнойТарыУПоставщика
	|	ИЛИ Расчеты.Регистратор ССЫЛКА Документ.ЗаказПоставщику
	|	ИЛИ Расчеты.Регистратор ССЫЛКА Документ.ЗаявкаНаРасходованиеДенежныхСредств
	|	ИЛИ Расчеты.Регистратор ССЫЛКА Документ.ОтчетКомиссионера
	|	ИЛИ Расчеты.Регистратор ССЫЛКА Документ.ОтчетКомитенту
	|	ИЛИ Расчеты.Регистратор ССЫЛКА Документ.ОтчетКомитентуОСписании
	|	ИЛИ Расчеты.Регистратор ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациями
	|	ИЛИ Расчеты.Регистратор ССЫЛКА Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании
	|	ИЛИ Расчеты.Регистратор ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
	|	ИЛИ Расчеты.Регистратор ССЫЛКА Документ.ПоступлениеБезналичныхДенежныхСредств
	|	ИЛИ Расчеты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|	ИЛИ Расчеты.Регистратор ССЫЛКА Документ.ПоступлениеУслугПрочихАктивов
	|	ИЛИ Расчеты.Регистратор ССЫЛКА Документ.ПриходныйКассовыйОрдер
	|	ИЛИ Расчеты.Регистратор ССЫЛКА Документ.РасходныйКассовыйОрдер
	|	ИЛИ Расчеты.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|	ИЛИ Расчеты.Регистратор ССЫЛКА Документ.СписаниеЗадолженности
	|	ИЛИ Расчеты.Регистратор ССЫЛКА Документ.ТаможеннаяДекларацияИмпорт
	|");
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Регистраторы, ДополнительныеПараметры);
	
#КонецОбласти


#Область УдалениеПустыхДвижений
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Расчеты.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками КАК Расчеты
	|	
	|ГДЕ
	|	Расчеты.Сумма = 0
	|	И Расчеты.Оплачивается = 0
	|	И Расчеты.КОплате = 0
	|	И Расчеты.КПоступлению = 0
	|");
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Регистраторы, ДополнительныеПараметры);
	
#КонецОбласти

#Область АвансовыйОтчет
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеРегистра.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками КАК ДанныеРегистра
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.АвансовыйОтчет.ОплатаПоставщикам КАК ОплатаПоставщикам
	|	ПО
	|		ДанныеРегистра.Регистратор = ОплатаПоставщикам.Ссылка
	|		И ОплатаПоставщикам.Заказ = НЕОПРЕДЕЛЕНО
	|
	|ГДЕ
	|	ДанныеРегистра.Регистратор ССЫЛКА Документ.АвансовыйОтчет
	|	
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРегистра.Регистратор
	|	
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОплатаПоставщикам.Контрагент) > 1
	|	ИЛИ КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОплатаПоставщикам.Поставщик) > 1
	|";
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Регистраторы, ДополнительныеПараметры);
#КонецОбласти

КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.3
// Производит замену измерения "АналитикаУчетаПоПартнерам" с учетом договора.
Процедура ИсправитьДвижения(Параметры) Экспорт
	
	Регистраторы = Новый Массив;
	Регистраторы.Добавить("Документ.АвансовыйОтчет");
	Регистраторы.Добавить("Документ.ВводОстатков");
	Регистраторы.Добавить("Документ.ВзаимозачетЗадолженности");
	Регистраторы.Добавить("Документ.ВозвратТоваровМеждуОрганизациями");
	Регистраторы.Добавить("Документ.ВозвратТоваровПоставщику");
	Регистраторы.Добавить("Документ.ВыкупВозвратнойТарыУПоставщика");
	Регистраторы.Добавить("Документ.ЗаказПоставщику");
	Регистраторы.Добавить("Документ.ЗаявкаНаРасходованиеДенежныхСредств");
	Регистраторы.Добавить("Документ.ОтчетКомиссионера");
	Регистраторы.Добавить("Документ.ОтчетКомитенту");
	Регистраторы.Добавить("Документ.ОтчетКомитентуОСписании");
	Регистраторы.Добавить("Документ.ОтчетПоКомиссииМеждуОрганизациями");
	Регистраторы.Добавить("Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании");
	Регистраторы.Добавить("Документ.ПередачаТоваровМеждуОрганизациями");
	Регистраторы.Добавить("Документ.ПоступлениеБезналичныхДенежныхСредств");
	Регистраторы.Добавить("Документ.ПоступлениеТоваровУслуг");
	Регистраторы.Добавить("Документ.ПоступлениеУслугПрочихАктивов");
	Регистраторы.Добавить("Документ.ПриходныйКассовыйОрдер");
	Регистраторы.Добавить("Документ.РасходныйКассовыйОрдер");
	Регистраторы.Добавить("Документ.СписаниеБезналичныхДенежныхСредств");
	Регистраторы.Добавить("Документ.СписаниеЗадолженности");
	Регистраторы.Добавить("Документ.ТаможеннаяДекларацияИмпорт");
	
	ОбработкаЗавершена = ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
		Регистраторы,
		"РегистрНакопления.РасчетыСПоставщиками",
		Параметры.Очередь
    );
	
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
	
КонецПроцедуры



#КонецОбласти

#КонецОбласти

#КонецЕсли