#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Получает статью движения денежных средств для выбранной хозяйственной операции.
//
// Параметры:
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа
//
// Возвращаемое значение:
// 	СправочникСсылка.СтатьиДвиженияДенежныхСредств - Найденная статья ДДС
//
Функция СтатьяДвиженияДенежныхСредствПоХозяйственнойОперации(ХозяйственнаяОперация) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 2
		|	СтатьиДвиженияДенежныхСредств.Ссылка КАК СтатьяДвиженияДенежныхСредств
		|ИЗ
		|	Справочник.СтатьиДвиженияДенежныхСредств.ХозяйственныеОперации КАК СтатьиДвиженияДенежныхСредствХозяйственныеОперации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДвиженияДенежныхСредств
		|		ПО СтатьиДвиженияДенежныхСредствХозяйственныеОперации.Ссылка = СтатьиДвиженияДенежныхСредств.Ссылка
		|			И (НЕ СтатьиДвиженияДенежныхСредств.ПометкаУдаления)
		|			И (СтатьиДвиженияДенежныхСредствХозяйственныеОперации.ХозяйственнаяОперация = &ХозяйственнаяОперация)");
	
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", ХозяйственнаяОперация);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		СтатьяДвиженияДенежныхСредств = Выборка.СтатьяДвиженияДенежныхСредств;
	Иначе
		СтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.ПустаяСсылка();
	КонецЕсли;
	
	Возврат СтатьяДвиженияДенежныхСредств;

КонецФункции

// Получает предопределенную статью движения денежных средств для выбранной хозяйственной операции.
//
// Параметры:
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа
//	Валюта - СправочникСсылка.Валюты - Валюта документа
//
// Возвращаемое значение:
// 	СправочникСсылка.СтатьиДвиженияДенежныхСредств - Предопределенная статья ДДС
//
Функция ПредопределеннаяСтатьяДДС(ХозяйственнаяОперация, Валюта = Неопределено) Экспорт
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзБанка
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИнкассацияДенежныхСредствИзБанка
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СнятиеНаличныхДенежныхСредств Тогда
		Если Не ЗначениеЗаполнено(Валюта)
		 ИЛИ Валюта = Константы.ВалютаРегламентированногоУчета.Получить() Тогда
			СтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.ПоступлениеДенежныхСредствИзБанка;
		Иначе
			СтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.ПоступлениеДенежныхСредствИзБанкаВИностраннойВалюте;
		КонецЕсли;
			
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СдачаДенежныхСредствВБанк
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ИнкассацияДенежныхСредствВБанк
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыНаРасчетныйСчет Тогда
		Если Не ЗначениеЗаполнено(Валюта)
		 ИЛИ Валюта = Константы.ВалютаРегламентированногоУчета.Получить() Тогда
			СтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.СдачаДенежныхСредствВБанк;
		Иначе
			СтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.СдачаДенежныхСредствВБанкВИностраннойВалюте;
		КонецЕсли;
		
	Иначе
		Соответствие = Новый Соответствие;
		Соответствие.Вставить(Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу, 
			Справочники.СтатьиДвиженияДенежныхСредств.ВыдачаДенежныхСредствВДругуюКассу);
			
		Соответствие.Вставить(Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию, 
			Справочники.СтатьиДвиженияДенежныхСредств.ОплатаДенежныхСредствВДругуюОрганизацию);
			
		Соответствие.Вставить(Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствВКассуККМ,
			Справочники.СтатьиДвиженияДенежныхСредств.ВыдачаДенежныхСредствВДругуюКассу);	

		Соответствие.Вставить(Перечисления.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет,
			Справочники.СтатьиДвиженияДенежныхСредств.ПеречислениеДенежныхСредствНаДругойСчет);

		Соответствие.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойКассы,
			Справочники.СтатьиДвиженияДенежныхСредств.ВыдачаДенежныхСредствВДругуюКассу);
			
		Соответствие.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации,
			Справочники.СтатьиДвиженияДенежныхСредств.ОплатаДенежныхСредствВДругуюОрганизацию);
			
		Соответствие.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыККМ,
			Справочники.СтатьиДвиженияДенежныхСредств.ВыдачаДенежныхСредствВДругуюКассу);

		Соответствие.Вставить(Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствВКассуККМ,
			Справочники.СтатьиДвиженияДенежныхСредств.ВыдачаДенежныхСредствВКассуККМ);
			
		Соответствие.Вставить(Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыККМ,
			Справочники.СтатьиДвиженияДенежныхСредств.ПоступлениеДенежныхСредствИзКассыККМ);
			
		Соответствие.Вставить(Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты,
			Справочники.СтатьиДвиженияДенежныхСредств.ВыплатаЗаработнойПлаты);
			
		Соответствие.Вставить(Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту,
			Справочники.СтатьиДвиженияДенежныхСредств.ВыплатаЗаработнойПлаты);
			
		Соответствие.Вставить(Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета,
			Справочники.СтатьиДвиженияДенежныхСредств.ВыплатаЗаработнойПлаты);
			
		Соответствие.Вставить(Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыЧерезКассу,
			Справочники.СтатьиДвиженияДенежныхСредств.ВыплатаЗаработнойПлаты);
			
		Соответствие.Вставить(Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыРаздатчиком,
			Справочники.СтатьиДвиженияДенежныхСредств.ВыплатаЗаработнойПлаты);
			
		Соответствие.Вставить(Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыРаботнику,
			Справочники.СтатьиДвиженияДенежныхСредств.ВыплатаЗаработнойПлаты);
			
		Соответствие.Вставить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыДСПрибыль,
			Справочники.СтатьиДвиженияДенежныхСредств.КурсовыеРазницыПрибыль);
			
		Соответствие.Вставить(Перечисления.ХозяйственныеОперации.КурсовыеРазницыДСУбыток,
			Справочники.СтатьиДвиженияДенежныхСредств.КурсовыеРазницыУбыток);
		
		СтатьяДвиженияДенежныхСредств = Соответствие.Получить(ХозяйственнаяОперация);
	КонецЕсли; 
	
	Если СтатьяДвиженияДенежныхСредств = Неопределено Тогда
		СтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.ПустаяСсылка();
	КонецЕсли;
	
	Возврат СтатьяДвиженияДенежныхСредств;
	
КонецФункции

// Получает список хозяйственных операций соответствующих расходу денежных средств.
//
// Возвращаемое значение:
// 	Массив - массив хозяйственных операций
//
Функция ХозяйственныеОперацииРасходаДенежныхСредств() Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	НастройкиХозяйственныхОпераций.ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ИЗ
	|	Справочник.НастройкиХозяйственныхОпераций КАК НастройкиХозяйственныхОпераций
	|ГДЕ
	|	НастройкиХозяйственныхОпераций.Расход = ЗНАЧЕНИЕ(Перечисление.ТипыДанныхУчета.ДенежныеСредства)
	|	И НастройкиХозяйственныхОпераций.Приход <> ЗНАЧЕНИЕ(Перечисление.ТипыДанныхУчета.ПустаяСсылка)
	|	И НастройкиХозяйственныхОпераций.ХозяйственнаяОперация Не В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыРаботнику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыЧерезКассу),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыРаздатчиком),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплаты)"); 
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ХозяйственнаяОперация");
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбновлениеИнформационнойБазы

Процедура ЗаполнитьПредопределенныеСтатьиДвиженияДенежныхСредств(СтатьяДДС = Неопределено) Экспорт
	
	Соответствие = Новый Соответствие;
	Если СтатьяДДС = Справочники.СтатьиДвиженияДенежныхСредств.ВыдачаДенежныхСредствВДругуюКассу ИЛИ НЕ ЗначениеЗаполнено(СтатьяДДС) Тогда
		Соответствие.Вставить(Справочники.СтатьиДвиженияДенежныхСредств.ВыдачаДенежныхСредствВДругуюКассу,
			Новый Структура("ХозяйственнаяОперация, КорреспондирующийСчет, ВидДвиженияДенежныхСредств",
				Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствВДругуюКассу,
				"301",
				Перечисления.ВидыДвиженийДенежныхСредств.ПустаяСсылка()));
	КонецЕсли;
	Если СтатьяДДС = Справочники.СтатьиДвиженияДенежныхСредств.ОплатаПоставщику ИЛИ НЕ ЗначениеЗаполнено(СтатьяДДС) Тогда
		Соответствие.Вставить(Справочники.СтатьиДвиженияДенежныхСредств.ОплатаПоставщику,
			Новый Структура("ХозяйственнаяОперация, КорреспондирующийСчет, ВидДвиженияДенежныхСредств",
				Перечисления.ХозяйственныеОперации.ОплатаПоставщику,
				"631",
				Перечисления.ВидыДвиженийДенежныхСредств.ОплатаТоваровУслуг));
	КонецЕсли;
	Если СтатьяДДС = Справочники.СтатьиДвиженияДенежныхСредств.ПеречислениеДенежныхСредствНаДругойСчет ИЛИ НЕ ЗначениеЗаполнено(СтатьяДДС) Тогда
		Соответствие.Вставить(Справочники.СтатьиДвиженияДенежныхСредств.ПеречислениеДенежныхСредствНаДругойСчет,
			Новый Структура("ХозяйственнаяОперация, КорреспондирующийСчет, ВидДвиженияДенежныхСредств",
				Перечисления.ХозяйственныеОперации.ПеречислениеДенежныхСредствНаДругойСчет,
				"311",
				Перечисления.ВидыДвиженийДенежныхСредств.ПустаяСсылка()));
	КонецЕсли;
	Если СтатьяДДС = Справочники.СтатьиДвиженияДенежныхСредств.ПоступлениеДенежныхСредствИзБанка ИЛИ НЕ ЗначениеЗаполнено(СтатьяДДС) Тогда
		Соответствие.Вставить(Справочники.СтатьиДвиженияДенежныхСредств.ПоступлениеДенежныхСредствИзБанка,
			Новый Структура("ХозяйственнаяОперация, КорреспондирующийСчет, ВидДвиженияДенежныхСредств",
				Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзБанка,
				"311",
				Перечисления.ВидыДвиженийДенежныхСредств.ПустаяСсылка()));
	КонецЕсли;
	Если СтатьяДДС = Справочники.СтатьиДвиженияДенежныхСредств.ПоступлениеДенежныхСредствИзБанкаВИностраннойВалюте ИЛИ НЕ ЗначениеЗаполнено(СтатьяДДС) Тогда
		Соответствие.Вставить(Справочники.СтатьиДвиженияДенежныхСредств.ПоступлениеДенежныхСредствИзБанкаВИностраннойВалюте,
			Новый Структура("ХозяйственнаяОперация, КорреспондирующийСчет, ВидДвиженияДенежныхСредств",
				Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзБанка,
				"312",
				Перечисления.ВидыДвиженийДенежныхСредств.ПустаяСсылка()));
	КонецЕсли;
	Если СтатьяДДС = Справочники.СтатьиДвиженияДенежныхСредств.ПоступлениеОплатыОтКлиента ИЛИ НЕ ЗначениеЗаполнено(СтатьяДДС) Тогда
		Соответствие.Вставить(Справочники.СтатьиДвиженияДенежныхСредств.ПоступлениеОплатыОтКлиента,
			Новый Структура("ХозяйственнаяОперация, КорреспондирующийСчет, ВидДвиженияДенежныхСредств",
				Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента,
				"361",
				Перечисления.ВидыДвиженийДенежныхСредств.ВыручкаОтРеализацииТоваровУслуг));
	КонецЕсли;
	Если СтатьяДДС = Справочники.СтатьиДвиженияДенежныхСредств.СдачаДенежныхСредствВБанк ИЛИ НЕ ЗначениеЗаполнено(СтатьяДДС) Тогда
		Соответствие.Вставить(Справочники.СтатьиДвиженияДенежныхСредств.СдачаДенежныхСредствВБанк,
			Новый Структура("ХозяйственнаяОперация, КорреспондирующийСчет, ВидДвиженияДенежныхСредств",
				Перечисления.ХозяйственныеОперации.СдачаДенежныхСредствВБанк,
				"311",
				Перечисления.ВидыДвиженийДенежныхСредств.ПустаяСсылка()));
	КонецЕсли;
	Если СтатьяДДС = Справочники.СтатьиДвиженияДенежныхСредств.СдачаДенежныхСредствВБанкВИностраннойВалюте ИЛИ НЕ ЗначениеЗаполнено(СтатьяДДС) Тогда
		Соответствие.Вставить(Справочники.СтатьиДвиженияДенежныхСредств.СдачаДенежныхСредствВБанкВИностраннойВалюте,
			Новый Структура("ХозяйственнаяОперация, КорреспондирующийСчет, ВидДвиженияДенежныхСредств",
				Перечисления.ХозяйственныеОперации.СдачаДенежныхСредствВБанк,
				"312",
				Перечисления.ВидыДвиженийДенежныхСредств.ПустаяСсылка()));
	КонецЕсли;
	Если СтатьяДДС = Справочники.СтатьиДвиженияДенежныхСредств.ОплатаДенежныхСредствВДругуюОрганизацию ИЛИ НЕ ЗначениеЗаполнено(СтатьяДДС) Тогда
		Соответствие.Вставить(Справочники.СтатьиДвиженияДенежныхСредств.ОплатаДенежныхСредствВДругуюОрганизацию,
			Новый Структура("ХозяйственнаяОперация, КорреспондирующийСчет, ВидДвиженияДенежныхСредств",
				Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию,
				"633",
				Перечисления.ВидыДвиженийДенежныхСредств.ОплатаТоваровУслуг));
	КонецЕсли;
	Если СтатьяДДС = Справочники.СтатьиДвиженияДенежныхСредств.ВыдачаДенежныхСредствВКассуККМ ИЛИ НЕ ЗначениеЗаполнено(СтатьяДДС) Тогда
		Соответствие.Вставить(Справочники.СтатьиДвиженияДенежныхСредств.ВыдачаДенежныхСредствВКассуККМ,
			Новый Структура("ХозяйственнаяОперация, КорреспондирующийСчет, ВидДвиженияДенежныхСредств",
				Перечисления.ХозяйственныеОперации.ВыдачаДенежныхСредствВКассуККМ,
				"309",
				Перечисления.ВидыДвиженийДенежныхСредств.ВозвратАвансовПокупателей));
	КонецЕсли;
	Если СтатьяДДС = Справочники.СтатьиДвиженияДенежныхСредств.ПоступлениеДенежныхСредствИзКассыККМ ИЛИ НЕ ЗначениеЗаполнено(СтатьяДДС) Тогда
		Соответствие.Вставить(Справочники.СтатьиДвиженияДенежныхСредств.ПоступлениеДенежныхСредствИзКассыККМ,
			Новый Структура("ХозяйственнаяОперация, КорреспондирующийСчет, ВидДвиженияДенежныхСредств",
				Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзКассыККМ,
				"309",
				Перечисления.ВидыДвиженийДенежныхСредств.ВыручкаОтРеализацииТоваровУслуг));
	КонецЕсли;
	Если СтатьяДДС = Справочники.СтатьиДвиженияДенежныхСредств.ВыплатаЗаработнойПлаты ИЛИ НЕ ЗначениеЗаполнено(СтатьяДДС) Тогда
		Соответствие.Вставить(Справочники.СтатьиДвиженияДенежныхСредств.ВыплатаЗаработнойПлаты,
			Новый Структура("ХозяйственнаяОперация, КорреспондирующийСчет, ВидДвиженияДенежныхСредств",
				Перечисления.ХозяйственныеОперации.ВыплатаЗарплаты,
				"661",
				Перечисления.ВидыДвиженийДенежныхСредств.ОплатаТруда));
	КонецЕсли;
	Если СтатьяДДС = Справочники.СтатьиДвиженияДенежныхСредств.ВозвратДенежныхСредствОтПоставщика ИЛИ НЕ ЗначениеЗаполнено(СтатьяДДС) Тогда
		Соответствие.Вставить(Справочники.СтатьиДвиженияДенежныхСредств.ВозвратДенежныхСредствОтПоставщика,
			Новый Структура("ХозяйственнаяОперация, КорреспондирующийСчет, ВидДвиженияДенежныхСредств",
				Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика,
				"631",
				Перечисления.ВидыДвиженийДенежныхСредств.ВозвратАвансовПоставщиков));
	КонецЕсли;
	Если СтатьяДДС = Справочники.СтатьиДвиженияДенежныхСредств.ВозвратОплатыКлиенту ИЛИ НЕ ЗначениеЗаполнено(СтатьяДДС) Тогда
		Соответствие.Вставить(Справочники.СтатьиДвиженияДенежныхСредств.ВозвратОплатыКлиенту,
			Новый Структура("ХозяйственнаяОперация, КорреспондирующийСчет, ВидДвиженияДенежныхСредств",
				Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту,
				"361",
				Перечисления.ВидыДвиженийДенежныхСредств.ВозвратАвансовПокупателей));
	КонецЕсли;
	Если СтатьяДДС = Справочники.СтатьиДвиженияДенежныхСредств.КурсовыеРазницыПрибыль ИЛИ НЕ ЗначениеЗаполнено(СтатьяДДС) Тогда
		Соответствие.Вставить(Справочники.СтатьиДвиженияДенежныхСредств.КурсовыеРазницыПрибыль,
			Новый Структура("ХозяйственнаяОперация, КорреспондирующийСчет, ВидДвиженияДенежныхСредств",
				Перечисления.ХозяйственныеОперации.КурсовыеРазницыДСПрибыль,
				"714",
				Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеПоступленияПоОперационнойДеятельности));
	КонецЕсли;
	Если СтатьяДДС = Справочники.СтатьиДвиженияДенежныхСредств.КурсовыеРазницыУбыток ИЛИ НЕ ЗначениеЗаполнено(СтатьяДДС) Тогда
		Соответствие.Вставить(Справочники.СтатьиДвиженияДенежныхСредств.КурсовыеРазницыУбыток,
			Новый Структура("ХозяйственнаяОперация, КорреспондирующийСчет, ВидДвиженияДенежныхСредств",
				Перечисления.ХозяйственныеОперации.КурсовыеРазницыДСУбыток,
				"945",
				Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоОперационнойДеятельности));
	КонецЕсли;
	Если СтатьяДДС = Справочники.СтатьиДвиженияДенежныхСредств.ПоступлениеДенежныхСредствОтДругойОрганизации ИЛИ НЕ ЗначениеЗаполнено(СтатьяДДС) Тогда
		Соответствие.Вставить(Справочники.СтатьиДвиженияДенежныхСредств.ПоступлениеДенежныхСредствОтДругойОрганизации,
			Новый Структура("ХозяйственнаяОперация, КорреспондирующийСчет, ВидДвиженияДенежныхСредств",
				Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации,
				"363",
				Перечисления.ВидыДвиженийДенежныхСредств.ВыручкаОтРеализацииТоваровУслуг));
	КонецЕсли;
	Если СтатьяДДС = Справочники.СтатьиДвиженияДенежныхСредств.ВозвратДенежныхСредствОтДругойОрганизации ИЛИ НЕ ЗначениеЗаполнено(СтатьяДДС) Тогда
		Соответствие.Вставить(Справочники.СтатьиДвиженияДенежныхСредств.ВозвратДенежныхСредствОтДругойОрганизации ,
			Новый Структура("ХозяйственнаяОперация, КорреспондирующийСчет, ВидДвиженияДенежныхСредств",
				Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации,
				"633",
				Перечисления.ВидыДвиженийДенежныхСредств.ВозвратАвансовПоставщиков));
	КонецЕсли;
	
	Для Каждого Элемент Из Соответствие Цикл
	
		СтатьяДДСОбъект = Элемент.Ключ.ПолучитьОбъект();
		ЗаполнитьЗначенияСвойств(СтатьяДДСОбъект, Элемент.Значение);
		Если СтатьяДДСОбъект.ХозяйственныеОперации.Найти(Элемент.Значение.ХозяйственнаяОперация) = Неопределено Тогда
			СтатьяДДСОбъект.ХозяйственныеОперации.Добавить().ХозяйственнаяОперация = Элемент.Значение.ХозяйственнаяОперация;
		КонецЕсли;
		Попытка
			СтатьяДДСОбъект.Записать();
		Исключение
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры


Процедура ЗаполнитьСтатьиДругойОрганизации() Экспорт
	
	ЗаполнитьПредопределенныеСтатьиДвиженияДенежныхСредств(Справочники.СтатьиДвиженияДенежныхСредств.ПоступлениеДенежныхСредствОтДругойОрганизации);
	ЗаполнитьПредопределенныеСтатьиДвиженияДенежныхСредств(Справочники.СтатьиДвиженияДенежныхСредств.ВозвратДенежныхСредствОтДругойОрганизации);
	
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.2
// Заменяет в хозяйственных операциях
// 	-ПрочиеДоходы на ПрочееПоступлениеДС
// 	-СторнированиеПрочихРасходов на ПрочееПоступлениеДС
// 	-ПрочиеРасходы на ПрочаяВыдачаДС
// Переносит значение реквизита УдалитьХозяйственнаяОперация в табличную часть ХозяйственныеОперации.
Процедура ОбработатьХозяйственныеОперации() Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтатьиДвиженияДенежныхСредств.Ссылка
	|ПОМЕСТИТЬ НеПереносить
	|ИЗ
	|	Справочник.СтатьиДвиженияДенежныхСредств.ХозяйственныеОперации КАК СтатьиДвиженияДенежныхСредствХозяйственныеОперации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДвиженияДенежныхСредств
	|		ПО СтатьиДвиженияДенежныхСредствХозяйственныеОперации.Ссылка = СтатьиДвиженияДенежныхСредств.Ссылка
	|			И СтатьиДвиженияДенежныхСредствХозяйственныеОперации.ХозяйственнаяОперация = СтатьиДвиженияДенежныхСредств.УдалитьХозяйственнаяОперация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьПрочиеДоходы) КАК ЕстьПрочиеДоходы,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьПрочиеРасходы) КАК ЕстьПрочиеРасходы,
	|	МАКСИМУМ(ВложенныйЗапрос.ЕстьСторнированиеПрочихРасходов) КАК ЕстьСторнированиеПрочихРасходов,
	|	МАКСИМУМ(ВложенныйЗапрос.ПеренестиХозяйственнуюОперацию) КАК ПеренестиХозяйственнуюОперацию
	|ИЗ
	|	(ВЫБРАТЬ
	|		ХозяйственныеОперации.Ссылка КАК Ссылка,
	|		ВЫБОР
	|			КОГДА ХозяйственныеОперации.ХозяйственнаяОперация = &ПрочиеДоходы
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ЕстьПрочиеДоходы,
	|		ВЫБОР
	|			КОГДА ХозяйственныеОперации.ХозяйственнаяОперация = &ПрочиеРасходы
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ЕстьПрочиеРасходы,
	|		ВЫБОР
	|			КОГДА ХозяйственныеОперации.ХозяйственнаяОперация = &СторнированиеПрочихРасходов
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК ЕстьСторнированиеПрочихРасходов,
	|		ЛОЖЬ КАК ПеренестиХозяйственнуюОперацию
	|	ИЗ
	|		Справочник.СтатьиДвиженияДенежныхСредств.ХозяйственныеОперации КАК ХозяйственныеОперации
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СтатьиДвиженияДенежныхСредств.Ссылка,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ЛОЖЬ,
	|		ИСТИНА
	|	ИЗ
	|		Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДвиженияДенежныхСредств
	|			ЛЕВОЕ СОЕДИНЕНИЕ НеПереносить КАК НеПереносить
	|			ПО (НеПереносить.Ссылка = СтатьиДвиженияДенежныхСредств.Ссылка)
	|	ГДЕ
	|		НеПереносить.Ссылка ЕСТЬ NULL 
	|		И НЕ СтатьиДвиженияДенежныхСредств.ЭтоГруппа
	|		И СтатьиДвиженияДенежныхСредств.УдалитьХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Ссылка
	|
	|ИМЕЮЩИЕ
	|	(МАКСИМУМ(ВложенныйЗапрос.ЕстьПрочиеДоходы)
	|		ИЛИ МАКСИМУМ(ВложенныйЗапрос.ЕстьПрочиеРасходы)
	|		ИЛИ МАКСИМУМ(ВложенныйЗапрос.ЕстьСторнированиеПрочихРасходов)
	|		ИЛИ МАКСИМУМ(ВложенныйЗапрос.ПеренестиХозяйственнуюОперацию))");
	
	ПрочиеДоходы = Перечисления.ХозяйственныеОперации.ПрочиеДоходы; 
	Запрос.УстановитьПараметр("ПрочиеДоходы", ПрочиеДоходы);
	
	ПрочиеРасходы = Перечисления.ХозяйственныеОперации.ПрочиеРасходы;
	Запрос.УстановитьПараметр("ПрочиеРасходы", ПрочиеРасходы);
	
	СторнированиеПрочихРасходов = Перечисления.ХозяйственныеОперации.СторнированиеПрочихРасходов;
	Запрос.УстановитьПараметр("СторнированиеПрочихРасходов", СторнированиеПрочихРасходов);
	
	ПрочаяВыдачаДС = Перечисления.ХозяйственныеОперации.ПрочаяВыдачаДенежныхСредств;
	ПрочееПоступлениеДС = Перечисления.ХозяйственныеОперации.ПрочееПоступлениеДенежныхСредств; 
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		
		Если Выборка.ЕстьПрочиеДоходы ИЛИ Выборка.ЕстьСторнированиеПрочихРасходов Тогда
			
			Если Выборка.ЕстьПрочиеДоходы Тогда
				СтрокаТЧ = Объект.ХозяйственныеОперации.Найти(ПрочиеДоходы, "ХозяйственнаяОперация");
				Объект.ХозяйственныеОперации.Удалить(СтрокаТЧ);
			КонецЕсли;
			
			Если Выборка.ЕстьСторнированиеПрочихРасходов Тогда
				СтрокаТЧ = Объект.ХозяйственныеОперации.Найти(СторнированиеПрочихРасходов, "ХозяйственнаяОперация");
				Объект.ХозяйственныеОперации.Удалить(СтрокаТЧ);
			КонецЕсли;
			
			ЕстьПрочееПоступлениеДС = (Объект.ХозяйственныеОперации.Найти(ПрочееПоступлениеДС, "ХозяйственнаяОперация") <> Неопределено);
			
			Если НЕ ЕстьПрочееПоступлениеДС Тогда
				НоваяСтрока = Объект.ХозяйственныеОперации.Добавить();
				НоваяСтрока.ХозяйственнаяОперация = ПрочееПоступлениеДС;
			КонецЕсли;
			
		КонецЕсли;
		
		Если Выборка.ЕстьПрочиеРасходы Тогда
			
			СтрокаТЧ = Объект.ХозяйственныеОперации.Найти(ПрочиеРасходы, "ХозяйственнаяОперация");
			Объект.ХозяйственныеОперации.Удалить(СтрокаТЧ);
			
			ЕстьПрочаяВыдачаДС = (Объект.ХозяйственныеОперации.Найти(ПрочаяВыдачаДС, "ХозяйственнаяОперация") <> Неопределено);
			
			Если НЕ ЕстьПрочаяВыдачаДС Тогда
				НоваяСтрока = Объект.ХозяйственныеОперации.Добавить();
				НоваяСтрока.ХозяйственнаяОперация = ПрочаяВыдачаДС;
			КонецЕсли;
			
		КонецЕсли;
		
		Если Выборка.ПеренестиХозяйственнуюОперацию Тогда
			
			НоваяСтрока = Объект.ХозяйственныеОперации.Добавить();
			НоваяСтрока.ХозяйственнаяОперация = Объект.УдалитьХозяйственнаяОперация;
			
		КонецЕсли;
		
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(Объект);
		
	КонецЦикла;
	
КонецПроцедуры


#КонецОбласти

#КонецОбласти

#КонецЕсли

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ТолькоРасходДенежныхСредств") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	НастройкиХозяйственныхОпераций.ХозяйственнаяОперация КАК Ссылка
		|ПОМЕСТИТЬ ХозяйственныеОперацииРасхода 
		|ИЗ
		|	Справочник.НастройкиХозяйственныхОпераций КАК НастройкиХозяйственныхОпераций
		|ГДЕ
		|	НастройкиХозяйственныхОпераций.Расход = ЗНАЧЕНИЕ(Перечисление.ТипыДанныхУчета.ДенежныеСредства)
		|	И НастройкиХозяйственныхОпераций.Приход <> ЗНАЧЕНИЕ(Перечисление.ТипыДанныхУчета.ПустаяСсылка)
		|	
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|/////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтатьиДвиженияДенежныхСредствХозОперации.Ссылка
		|ИЗ
		|	Справочник.СтатьиДвиженияДенежныхСредств.ХозяйственныеОперации КАК СтатьиДвиженияДенежныхСредствХозОперации
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ХозяйственныеОперацииРасхода КАК ХозяйственныеОперацииРасхода
		|	ПО
		|		СтатьиДвиженияДенежныхСредствХозОперации.ХозяйственнаяОперация = ХозяйственныеОперацииРасхода.Ссылка");
		
		ДанныеВыбора = Новый СписокЗначений;
		ДанныеВыбора.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	Если ВидФормы = "ФормаВыбора" Тогда
		Если Параметры.Свойство("Отбор")
			И Параметры.Отбор.Свойство("ХозяйственнаяОперация")
			И ТипЗнч(Параметры.Отбор.ХозяйственнаяОперация) = Тип("ПеречислениеСсылка.ХозяйственныеОперации") Тогда
			ВыбраннаяФорма = "ФормаВыбораПоХозяйственнойОперации";
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
