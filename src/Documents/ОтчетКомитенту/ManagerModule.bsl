#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт


	Документы.ЗаявкаНаРасходованиеДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);

	Документы.ПоступлениеБезналичныхДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);

	Документы.ПриходныйКассовыйОрдер.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);

	Документы.РасходныйКассовыйОрдер.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);

	Документы.СписаниеБезналичныхДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);

	Документы.СчетНаОплатуКлиенту.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);

	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);
	
	ВводНаОснованииПереопределяемый.ДобавитьКомандыСоздатьНаОснованииПисмаПоШаблону(КомандыСоздатьНаОсновании);


КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.ОтчетКомитенту) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ОтчетКомитенту.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.ОтчетКомитенту);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьКомиссиюПриЗакупках";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСостояниеРасчетовСКомитентами(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуТоварыПринятыеНаКомиссию(КомандыОтчетов);

КонецПроцедуры


// Процедура заполняет массивы реквизитов, зависимых от хозяйственной операции документа.
//
// Параметры:
//	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Выбранная хозяйственная операция
//	МассивВсехРеквизитов - Массив - Массив всех имен реквизитов, зависимых от хозяйственной операции
//	МассивРеквизитовОперации - Массив - Массив имен реквизитов, используемых в выбранной хозяйственной операции
//
Функция ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(СпособРасчетаВознаграждения, МассивВсехРеквизитов, МассивРеквизитовОперации) Экспорт
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("ПроцентВознаграждения");
	МассивВсехРеквизитов.Добавить("СтавкаНДСВознаграждения");
	МассивВсехРеквизитов.Добавить("СуммаНДСВознаграждения");
	МассивВсехРеквизитов.Добавить("УдержатьВознаграждение");
	МассивВсехРеквизитов.Добавить("Услуга");
	МассивВсехРеквизитов.Добавить("ДатаПлатежа");
	МассивВсехРеквизитов.Добавить("Товары.СуммаВознаграждения");
	
	МассивРеквизитовОперации = Новый Массив;
	Если СпособРасчетаВознаграждения <> Перечисления.СпособыРасчетаКомиссионногоВознаграждения.НеРассчитывается Тогда
		МассивРеквизитовОперации.Добавить("ПроцентВознаграждения");
		МассивРеквизитовОперации.Добавить("СтавкаНДСВознаграждения");
		МассивРеквизитовОперации.Добавить("СуммаНДСВознаграждения");
		МассивРеквизитовОперации.Добавить("УдержатьВознаграждение");
		МассивРеквизитовОперации.Добавить("Услуга");
		МассивРеквизитовОперации.Добавить("ДатаПлатежа");
		МассивРеквизитовОперации.Добавить("Товары.СуммаВознаграждения");
	КонецЕсли;
	
КонецФункции

// Функция определяет реквизиты документа.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ОтчетКомитенту - Ссылка на документ
//
// Возвращаемое значение:
//	Структура - Реквизиты выбранного документа
//
Функция РеквизитыДокумента(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Валюта КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаДокумента,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.ПорядокРасчетов КАК ПорядокРасчетов,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.УдержатьВознаграждение ТОГДА
	|		ДанныеДокумента.СуммаДокумента - ДанныеДокумента.СуммаВознаграждения
	|	ИНАЧЕ
	|		ДанныеДокумента.СуммаДокумента
	|	КОНЕЦ КАК СуммаВзаиморасчетов,
	|	ДанныеДокумента.СуммаВознаграждения КАК СуммаВознаграждения,
	|
	|	ДанныеДокумента.Проведен КАК Проведен,
	|	ДанныеДокумента.НачалоПериода КАК НачалоПериода,
	|	ДанныеДокумента.КонецПериода КАК КонецПериода
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Дата = Выборка.Дата;
		Организация = Выборка.Организация;
		Партнер = Выборка.Партнер;
		Контрагент = Выборка.Контрагент;
		Договор = Выборка.Договор;
		ПорядокРасчетов = Выборка.ПорядокРасчетов;
		ВалютаВзаиморасчетов = Выборка.ВалютаВзаиморасчетов;
		СуммаДокумента = Выборка.СуммаДокумента;
		СуммаВзаиморасчетов = ?(Выборка.Проведен, Выборка.СуммаВзаиморасчетов, 0);
		СуммаВознаграждения = ?(Выборка.Проведен, Выборка.СуммаВознаграждения, 0);
		НачалоПериода = Выборка.НачалоПериода;
		КонецПериода = Выборка.КонецПериода;
	Иначе
		Дата = Дата(1,1,1);
		Организация = Справочники.Организации.ПустаяСсылка();
		Партнер = Справочники.Партнеры.ПустаяСсылка();
		Контрагент = Справочники.Контрагенты.ПустаяСсылка();
		Договор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПустаяСсылка();
		ВалютаВзаиморасчетов = Справочники.Валюты.ПустаяСсылка();
		СуммаДокумента = 0;
		СуммаВзаиморасчетов = 0;
		СуммаВознаграждения = 0;
		НачалоПериода = Неопределено;
		КонецПериода = Неопределено;
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Дата, Организация, Партнер, Контрагент, Договор, ПорядокРасчетов, ВалютаВзаиморасчетов, ХозяйственнаяОперация, СуммаДокумента, СуммаВзаиморасчетов, СуммаВознаграждения, НачалоПериода, КонецПериода",
		Дата,
		Организация,
		Партнер,
		Контрагент,
		Договор,
		ПорядокРасчетов,
		ВалютаВзаиморасчетов,
		Перечисления.ХозяйственныеОперации.ОтчетКомитенту,
		СуммаДокумента,
		СуммаВзаиморасчетов,
		СуммаВознаграждения,
		НачалоПериода,
		КонецПериода);
	
	Возврат СтруктураРеквизитов;

КонецФункции



#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаВыручкаИСебестоимостьПродаж(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаЗакупки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладных(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСРасчетНалоговогоКредита(Запрос, ТекстыЗапроса, Регистры);
 	
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата                                         КАК Период,
	|	ДанныеДокумента.Ссылка                                       КАК Ссылка,
	|	ДанныеДокумента.Валюта                                       КАК Валюта,
	|	ДанныеДокумента.Организация                                  КАК Организация,
	|	ДанныеДокумента.Партнер                                      КАК Партнер,
	|	ДанныеДокумента.Контрагент                                   КАК Контрагент,
	|	ДанныеДокумента.Услуга                                       КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)                     КАК Склад,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Переоценка) КАК ВидПоставкиПоТоварам,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Поставка) КАК ВидПоставкиПоУслуге,
	|	ДанныеДокумента.СтавкаНДСВознаграждения	КАК СтавкаНДСВознаграждения,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)          КАК Серия,
	|	ДанныеДокумента.Договор                                      КАК Договор,
	|	ДанныеДокумента.Менеджер                                     КАК Менеджер,
	|	ВЫБОР КОГДА ДанныеДокумента.ПорядокРасчетов = ЗНАЧЕНИЕ(Перечисление.ПорядокРасчетов.ПоДоговорамКонтрагентов) ТОГДА
	|		ИСТИНА
	|	ИНАЧЕ
	|		ЛОЖЬ
	|	КОНЕЦ                                                        КАК РасчетыПоДоговорам,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.КонецПериода = ДАТАВРЕМЯ(1, 1, 1)
	|		ИЛИ ДанныеДокумента.КонецПериода > ДанныеДокумента.Дата
	|	ТОГДА
	|		ДанныеДокумента.Дата
	|	ИНАЧЕ
	|		ДанныеДокумента.КонецПериода
	|	КОНЕЦ                                                        КАК КонецПериода,
	|	ДанныеДокумента.Подразделение                                КАК Подразделение,
	|	ДанныеДокумента.ГруппаФинансовогоУчета                       КАК ГруппаФинансовогоУчета,
	|	ДанныеДокумента.Соглашение                                   КАК Соглашение,
	|	ДанныеДокумента.НаправлениеДеятельности                      КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",                            Реквизиты.Период);
	Запрос.УстановитьПараметр("КонецПериода",                      КонецДня(Реквизиты.КонецПериода));
	Запрос.УстановитьПараметр("Валюта",                            Реквизиты.Валюта);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",             Перечисления.ХозяйственныеОперации.ОтчетКомитенту);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",    Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("Договор",                           Реквизиты.Договор);
	Запрос.УстановитьПараметр("РасчетыПоДоговорам",                Реквизиты.РасчетыПоДоговорам);
	Запрос.УстановитьПараметр("Организация",                       Реквизиты.Организация);
	Запрос.УстановитьПараметр("Контрагент",                        Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("Номенклатура",                      Реквизиты.Номенклатура);
	Запрос.УстановитьПараметр("Характеристика",                    Реквизиты.Характеристика);
	Запрос.УстановитьПараметр("Склад",                             Реквизиты.Склад);
	Запрос.УстановитьПараметр("Серия",                             Реквизиты.Серия);
	Запрос.УстановитьПараметр("Менеджер",                          Реквизиты.Менеджер);
	Запрос.УстановитьПараметр("Партнер",                           Реквизиты.Партнер);
	Запрос.УстановитьПараметр("Подразделение",                     Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ГруппаФинансовогоУчета",            Реквизиты.ГруппаФинансовогоУчета);
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", 
	                                                               ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Запрос.УстановитьПараметр("Соглашение",                        Реквизиты.Соглашение);
	
	Запрос.УстановитьПараметр("НаправлениеДеятельности",           Реквизиты.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("ОрганизацияПлательщикНДС",          НДСОбщегоНазначенияСервер.ОрганизацияКонтрагентПлательщикНДС(Реквизиты.Организация, Реквизиты.Период));
	Запрос.УстановитьПараметр("ВидПоставкиПоТоварам",              Реквизиты.ВидПоставкиПоТоварам);
	Запрос.УстановитьПараметр("ВидПоставкиПоУслуге",               Реквизиты.ВидПоставкиПоУслуге);
	Запрос.УстановитьПараметр("МоментОпределенияБазыНДСПоТоварам", НДСВходящийСервер.ОпределитьМоментОпределенияБазыНДС(Реквизиты.ВидПоставкиПоТоварам, Перечисления.ХозяйственныеОперации.ОтчетКомитенту, Реквизиты.Организация, Реквизиты.Договор));
	Запрос.УстановитьПараметр("СтавкаНДСВознаграждения", Реквизиты.СтавкаНДСВознаграждения);
	Запрос.УстановитьПараметр("НалоговоеНазначениеВознаграждения", НДСОбщегоНазначенияСервер.ПолучитьНалоговоеНазначениеПоСтавкеНДС(Реквизиты.Организация, Реквизиты.Период, Реквизиты.СтавкаНДСВознаграждения));
	
КонецПроцедуры


Функция ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюОтчетовКомитенту";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                    КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)            КАК ВидДвижения,
	|	&КонецПериода                                     КАК Период,
	|	ТаблицаВидыЗапасов.ВидЗапасов                     КАК ВидЗапасов,
	|	&Валюта                                           КАК Валюта,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры     КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура                            КАК Номенклатура,
	|	Аналитика.Характеристика                          КАК Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД                       КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество                     КАК Количество,
	|	ТаблицаВидыЗапасов.СуммаСНДС                      КАК СуммаВыручки,
	|	ТаблицаВидыЗапасов.СуммаВознаграждения            КАК СуммаВознаграждения,
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение 	  КАК НалоговоеНазначение,
	|	ТаблицаВидыЗапасов.СтавкаНДС 	  				  КАК СтавкаНДС,
	|	&ХозяйственнаяОперация                            КАК ХозяйственнаяОперация
	|ИЗ
	|	Документ.ОтчетКомитенту.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуУпр")
		И Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуРегл") Тогда
		Возврат;
	КонецЕсли;
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
		Запрос.Параметры.Валюта, 
		, // ВалютаВзаиморасчетов
		Запрос.Параметры.Период);

	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр",  Коэффициенты.КоэффициентПересчетаВВалютуУПР);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаУчетаПоПартнерам") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерам", РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(Запрос.Параметры));
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСПоставщиками";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЭтапыГрафикаОплаты.НомерСтроки                      КАК НомерСтроки,
	|	КонецПериода(ЭтапыГрафикаОплаты.ДатаПлатежа, ДЕНЬ)  КАК Период,
	|	КонецПериода(ЭтапыГрафикаОплаты.ДатаПлатежа, ДЕНЬ)  КАК ДатаПлатежа,
	|	&Период                                             КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)              КАК ВидДвижения,
	|
	|	&АналитикаУчетаПоПартнерам                          КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		&Ссылка
	|	КОНЕЦ                                               КАК ЗаказПоставщику,
	|
	|	&Валюта                                             КАК Валюта,
	|	
	|	&ХозяйственнаяОперация                              КАК ХозяйственнаяОперация,
	|	
	|	0                                                   КАК Сумма,
	|	ЭтапыГрафикаОплаты.СуммаПлатежа                     КАК КОплате,
	|	0                                                   КАК СуммаРегл,
	|	0                                                   КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетКомитенту.ЭтапыГрафикаОплаты КАК ЭтапыГрафикаОплаты
	|	
	|ГДЕ
	|	ЭтапыГрафикаОплаты.Ссылка = &Ссылка
	|	И ЭтапыГрафикаОплаты.СуммаПлатежа > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЭтапыГрафикаОплаты.НомерСтроки                      КАК НомерСтроки,
	|	&Период                                             КАК Период,
	|	КонецПериода(ЭтапыГрафикаОплаты.ДатаПлатежа, ДЕНЬ)  КАК ДатаПлатежа,
	|	&Период                                             КАК ДатаРегистратора,
	|
	|	ВЫБОР КОГДА ЭтапыГрафикаОплаты.СуммаПлатежа < 0 ТОГДА
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ                                               КАК ВидДвижения,
	|
	|	&АналитикаУчетаПоПартнерам                          КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		&Ссылка
	|	КОНЕЦ                                               КАК ЗаказПоставщику,
	|
	|	&Валюта                                             КАК Валюта,
	|	
	|	&ХозяйственнаяОперация                              КАК ХозяйственнаяОперация,
	|	
	|	ВЫБОР КОГДА ЭтапыГрафикаОплаты.СуммаПлатежа < 0 ТОГДА
	|		-ЭтапыГрафикаОплаты.СуммаПлатежа
	|	ИНАЧЕ
	|		ЭтапыГрафикаОплаты.СуммаПлатежа
	|	КОНЕЦ                                               КАК Сумма,
	|
	|	ВЫБОР КОГДА ЭтапыГрафикаОплаты.СуммаПлатежа < 0 ТОГДА
	|		-ЭтапыГрафикаОплаты.СуммаПлатежа
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ                                               КАК КОплате,
	|	ВЫБОР КОГДА ЭтапыГрафикаОплаты.СуммаПлатежа < 0 ТОГДА
	|		ВЫРАЗИТЬ(-ЭтапыГрафикаОплаты.СуммаПлатежа * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ЭтапыГрафикаОплаты.СуммаПлатежа * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	КОНЕЦ                                               КАК СуммаРегл,
	|	ВЫБОР КОГДА ЭтапыГрафикаОплаты.СуммаПлатежа < 0 ТОГДА
	|		ВЫРАЗИТЬ(-ЭтапыГрафикаОплаты.СуммаПлатежа * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ЭтапыГрафикаОплаты.СуммаПлатежа * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	КОНЕЦ                                               КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетКомитенту.ЭтапыГрафикаОплаты КАК ЭтапыГрафикаОплаты
	|	
	|ГДЕ
	|	ЭтапыГрафикаОплаты.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0                                      КАК НомерСтроки,
	|	&Период                                КАК Период,
	|	&Период                                КАК ДатаПлатежа,
	|	&Период                                КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|
	|	&АналитикаУчетаПоПартнерам             КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		&Ссылка
	|	КОНЕЦ                                  КАК ЗаказПоставщику,
	|
	|	&Валюта                                КАК Валюта,
	|	
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.СуммаВознаграждения    КАК Сумма,
	|	ДанныеДокумента.СуммаВознаграждения    КАК КОплате,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))  КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.УдержатьВознаграждение
	|	И ДанныеДокумента.СуммаВознаграждения <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСКлиентами";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                   КАК Период,
	|	ДанныеДокумента.ДатаПлатежа               КАК ДатаПлатежа,
	|	&Период                                   КАК ДатаРегистратора,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаВознаграждения < 0 ТОГДА
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ                                     КАК ВидДвижения,
	|
	|	&АналитикаУчетаПоПартнерам                КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		&Ссылка
	|	КОНЕЦ                                     КАК ЗаказКлиента,
	|
	|	&Валюта                                   КАК Валюта,
	|	
	|	&ХозяйственнаяОперация                    КАК ХозяйственнаяОперация,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаВознаграждения < 0 ТОГДА
	|		-ДанныеДокумента.СуммаВознаграждения
	|	ИНАЧЕ
	|		ДанныеДокумента.СуммаВознаграждения
	|	КОНЕЦ                                     КАК Сумма,
	|	0                                         КАК КОплате,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаВознаграждения < 0 ТОГДА
	|		ВЫРАЗИТЬ(-ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	КОНЕЦ                                     КАК СуммаРегл,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаВознаграждения < 0 ТОГДА
	|		ВЫРАЗИТЬ(-ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	КОНЕЦ                                     КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.СуммаВознаграждения <> 0
	|	И НЕ ДанныеДокумента.УдержатьВознаграждение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаПлатежа, День)   КАК Период,
	|	ДанныеДокумента.ДатаПлатежа                       КАК ДатаПлатежа,
	|	&Период                                           КАК ДатаРегистратора,
	|
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаВознаграждения < 0 ТОГДА
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ                                             КАК ВидДвижения,
	|
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		&Ссылка
	|	КОНЕЦ                                             КАК ЗаказКлиента,
	|
	|	&Валюта                                           КАК Валюта,
	|	
	|	&ХозяйственнаяОперация                            КАК ХозяйственнаяОперация,
	|	
	|	0                                                 КАК Сумма,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаВознаграждения < 0 ТОГДА
	|		-ДанныеДокумента.СуммаВознаграждения
	|	ИНАЧЕ
	|		ДанныеДокумента.СуммаВознаграждения
	|	КОНЕЦ                                             КАК КОплате,
	|	0                                                 КАК СуммаРегл,
	|	0                                                 КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.СуммаВознаграждения <> 0
	|	И НЕ ДанныеДокумента.УдержатьВознаграждение";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрЗапросаАналитикаУчетаНоменклатуры(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаУчетаНоменклатуры") Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Запрос.Параметры.Номенклатура) Тогда
		Запрос.УстановитьПараметр("АналитикаУчетаНоменклатуры", 
		                           РегистрыСведений.АналитикаУчетаНоменклатуры.ЗначениеКлючаАналитики(Запрос.Параметры));
	Иначе
		Запрос.УстановитьПараметр("АналитикаУчетаНоменклатуры", Неопределено);
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаВыручкаИСебестоимостьПродаж(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ВыручкаИСебестоимостьПродаж";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос);
	УстановитьПараметрЗапросаАналитикаУчетаНоменклатуры(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период                                       КАК Период,
	|	&АналитикаУчетаПоПартнерам                    КАК АналитикаУчетаПоПартнерам,
	|	Неопределено                                  КАК ЗаказКлиента,
	|	&АналитикаУчетаНоменклатуры                   КАК АналитикаУчетаНоменклатуры,
	|	ДанныеДокумента.Подразделение                 КАК Подразделение,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)     КАК ТипЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
	|
	|	&Менеджер КАК Менеджер,
	|	&НалоговоеНазначениеВознаграждения КАК НалоговоеНазначение,
	|	&ХозяйственнаяОперация                        КАК ХозяйственнаяОперация,
	|
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения 
	|		* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК СуммаВыручки,
	|
	|	ВЫРАЗИТЬ((ДанныеДокумента.СуммаВознаграждения
	|			- ДанныеДокумента.СуммаНДСВознаграждения)
	|		* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК СуммаВыручкиБезНДС,
	|
	|	ВЫРАЗИТЬ((ДанныеДокумента.СуммаВознаграждения
	|			- ДанныеДокумента.СуммаНДСВознаграждения)
	|		* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК СуммаВыручкиРегл,
	|
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаВознаграждения
	|		* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК СуммаВыручкиСНДСРегл,
	|
	|	0 КАК СуммаРучнойСкидки,
	|	0 КАК СуммаАвтоматическойСкидки,
	|
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ДанныеДокумента.Договор                  КАК Договор,
	|	ДанныеДокумента.Соглашение               КАК Соглашение,
	|
	|	ДанныеДокумента.Валюта                   КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.СуммаВознаграждения      КАК СуммаВВалютеВзаиморасчетов,
	|	ДанныеДокумента.СуммаВознаграждения - ДанныеДокумента.СуммаНДСВознаграждения КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ДанныеДокумента.Валюта                   КАК ВалютаДокумента,
	|	ДанныеДокумента.СуммаВознаграждения      КАК СуммаВВалютеДокумента,
	|	ДанныеДокумента.СуммаВознаграждения - ДанныеДокумента.СуммаНДСВознаграждения КАК СуммаБезНДСВВалютеДокумента,
	|
	|	ДанныеДокумента.Услуга                   КАК ИсточникГФУНоменклатуры,
	|	ВЫБОР КОГДА &РасчетыПоДоговорам
	|		ТОГДА ДанныеДокумента.Договор
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ                                    КАК ИсточникГФУРасчетов
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.СуммаВознаграждения <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции


// Функция формирует текст запроса для таблицы сумм в валюте регл. учета.
//
Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ПересчитатьТаблицуТоваровВВалютуРегл(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                             КАК НомерСтроки,
	|	&Период                                                    КАК Период,
	|	&Валюта                                                    КАК Валюта,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки                     КАК ИдентификаторСтроки,
	|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС                                КАК СуммаНДС,
	|	ТаблицаДокументаРегл.СуммаБезНДС                           КАК СуммаБезНДСРегл,
	|	ТаблицаДокументаРегл.СуммаНДС                              КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО                                               КАК ТипРасчетов
	|
	|ИЗ
	|	Документ.ОтчетКомитенту.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаТоваровПредварительная КАК ТаблицаДокументаРегл
	|	ПО
	|		ТаблицаВидыЗапасов.ИдентификаторСтроки = ТаблицаДокументаРегл.ИдентификаторСтроки
	|
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|	И &Валюта <> &ВалютаРегламентированногоУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0                                                              КАК НомерСтроки,
	|	&Период                                                        КАК Период,
	|	&Валюта                                                        КАК Валюта,
	|	""""                                                           КАК ИдентификаторСтроки,
	|	Документ.СтавкаНДСВознаграждения                               КАК СтавкаНДС,
	|	Документ.СуммаВознаграждения - Документ.СуммаНДСВознаграждения КАК СуммаБезНДС,
	|	Документ.СуммаНДСВознаграждения                                КАК СуммаНДС,
	|
	|	ВЫБОР КОГДА Документ.СуммаВознаграждения - Документ.СуммаНДСВознаграждения = ЕСТЬNULL(ДанныеРегистра.СуммаБезНДС, 0) ТОГДА
	|		ЕСТЬNULL(ДанныеРегистра.СуммаБезНДСРегл, 0)
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ                                                          КАК СуммаБезНДСРегл,
	|
	|	ВЫБОР КОГДА Документ.СуммаНДСВознаграждения = ЕСТЬNULL(ДанныеРегистра.СуммаНДС, 0) ТОГДА
	|		ЕСТЬNULL(ДанныеРегистра.СуммаНДСРегл, 0)
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ                                                           КАК СуммаНДСРегл,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ТипыРасчетовСПартнерами.РасчетыСКлиентом) КАК ТипРасчетов
	|
	|ИЗ
	|	Документ.ОтчетКомитенту КАК Документ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК ДанныеРегистра
	|	ПО
	|		ДанныеРегистра.Регистратор = &Ссылка
	|		И ДанныеРегистра.ИдентификаторСтроки = """"
	|
	|ГДЕ
	|	Документ.Ссылка = &Ссылка
	|	И &Валюта <> &ВалютаРегламентированногоУчета
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЗакупки(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "Закупки";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса =
	// Отражение задолженности перед комитентом 
	"ВЫБРАТЬ
	|	&Период                                       КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеЗадолженностиПередКомитентом) КАК ХозяйственнаяОперация,
	|	&Организация                                  КАК Организация,
	|	&Подразделение                                КАК Подразделение,
	|	&Менеджер                                     КАК Менеджер,
	|
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.Склад                               КАК Склад,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов      КАК ТипЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов                 КАК ВидЗапасов,
	|
	|	&Партнер                                      КАК Партнер,
	|	&Контрагент                                   КАК Контрагент,
	|	&Соглашение                                   КАК Соглашение,
	|	&Договор                                      КАК Договор,
	|	НЕОПРЕДЕЛЕНО                                  КАК Заказ,
	|
	|	0                                             КАК Количество,
	|
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))   КАК Сумма,
	|	ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС)
	|		* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))                                       КАК СуммаБезНДС,
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС)
	|		* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2))                                      КАК СуммаРеглБезНДС,
	|	0                                              КАК СуммаСкидки,
	|
	|	0                                              КАК Стоимость,
	|	0                                              КАК СтоимостьБезНДС,
	|	0                                              КАК СтоимостьРегл,
	|	0                                              КАК СуммаДопРасходов,
	|	0                                              КАК СуммаДопРасходовБезНДС,
	|
	|	&Валюта                                        КАК ВалютаДокумента,
	|	ТаблицаВидыЗапасов.СуммаСНДС                   КАК СуммаВВалютеДокумента,
	|	ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС КАК СуммаБезНДСВВалютеДокумента,
	|
	|	&Валюта                                        КАК ВалютаВзаиморасчетов,
	|	ТаблицаВидыЗапасов.СуммаСНДС                   КАК СуммаВВалютеВзаиморасчетов,
	|	ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ Аналитика.Номенклатура
	|	КОНЕЦ                                          КАК ИсточникГФУНоменклатуры,
	|	ВЫБОР КОГДА &РасчетыПоДоговорам
	|		ТОГДА &Договор
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ                                          КАК ИсточникГФУРасчетов
	|ИЗ
	|	Документ.ОтчетКомитенту.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка"; 
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции


Функция ТекстЗапросаТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладных(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладных";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос);	
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	
	|	&Период                                 КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 	КАК ВидДвижения,
	|	&АналитикаУчетаПоПартнерам 				КАК АналитикаУчетаПоПартнерам,
	|
	|	ВЫБОР КОГДА &РасчетыПоДоговорам ТОГДА
	|		&Договор
	|	ИНАЧЕ
	|		&Ссылка
	|	КОНЕЦ 									КАК ОбъектРасчетов, 
	|
	|	&ВидПоставкиПоУслуге КАК ВидПоставки,
	|	&Валюта 								КАК Валюта,
	|
	|	ЗНАЧЕНИЕ(Перечисление.СпособыЗаполненияНоменклатурыНалоговыхДокументов.ТоварыУслуги) КАК СпособЗаполнения,
	|
	|	ДанныеДокумента.СтавкаНДСВознаграждения	КАК СтавкаНДС,
	|	Неопределено                            КАК НомерГТД,
	|	ДанныеДокумента.Услуга 					КАК Номенклатура,
	|	Неопределено							КАК Характеристика,
	|	Неопределено							КАК Упаковка,
	|	ДанныеДокумента.СуммаВознаграждения - ДанныеДокумента.СуммаНДСВознаграждения КАК ЦенаНН,
	|	ДанныеДокумента.Ссылка 					КАК ДокументПоставки,
	|   НЕОПРЕДЕЛЕНО							КАК ДокументПоставкиДляВозвратов,
	|	1 										КАК КоличествоУпаковок,
	|	ДанныеДокумента.СуммаВознаграждения 	КАК СуммаВзаиморасчетов
	|
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ДанныеДокумента
	|
	|ГДЕ
	|	&ОрганизацияПлательщикНДС И
	|	ДанныеДокумента.СуммаВознаграждения <> 0 И
	|	ДанныеДокумента.Ссылка = &Ссылка
	|
	|
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции


Функция ТекстЗапросаТаблицаНДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов(Запрос, ТекстыЗапроса, Регистры)
    
    ИмяРегистра = "НДССоставПоставкиДляРегистрацииВходящихНалоговыхДокументов";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос);	
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|
	|	&Ссылка КАК ОбъектРасчетов,
	|	&ВидПоставкиПоТоварам КАК ВидПоставки,
	|
	|	ТаблицаТовары.СтавкаНДС КАК СтавкаНДС,
	|   ВЫБОР 
	|		КОГДА НЕ &ОрганизацияПлательщикНДС  
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|		КОГДА ТаблицаТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|		КОГДА ТаблицаТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НеНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая)
	|	КОНЕЦ КАК НалоговоеНазначение,
	|	СУММА(ТаблицаТовары.СуммаПродажи - ТаблицаТовары.СуммаСНДС) КАК СуммаВзаиморасчетов,
	|	СУММА(ВЫБОР 
	|		КОГДА НЕ &ОрганизацияПлательщикНДС  
	|			ТОГДА 0
	|		КОГДА ТаблицаТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|			ТОГДА 0
	|		КОГДА ТаблицаТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НеНДС)
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|			КОГДА ТаблицаТовары.СтавкаНДСПродажи = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|				ТОГДА (ВЫРАЗИТЬ(ТаблицаТовары.СуммаПродажи / 6 КАК ЧИСЛО(15, 2))) - ТаблицаТовары.СуммаНДС
    |			КОГДА ТаблицаТовары.СтавкаНДСПродажи = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС14)
    |				ТОГДА (ВЫРАЗИТЬ(ТаблицаТовары.СуммаПродажи * 14 / 114 КАК ЧИСЛО(15, 2))) - ТаблицаТовары.СуммаНДС
	|			КОГДА ТаблицаТовары.СтавкаНДСПродажи = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС7)
	|				ТОГДА (ВЫРАЗИТЬ(ТаблицаТовары.СуммаПродажи * 7 / 107 КАК ЧИСЛО(15, 2))) - ТаблицаТовары.СуммаНДС
	|			КОГДА ТаблицаТовары.СтавкаНДСПродажи = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|				ТОГДА -ТаблицаТовары.СуммаНДС
	|			ИНАЧЕ 0
	|			КОНЕЦ 
	|		КОНЕЦ) КАК СуммаНДСКредит,
	|
	|	НЕОПРЕДЕЛЕНО КАК ДатаВходящегоНалоговогоДокумента,
	|	&Ссылка КАК ДокументПоставки
	|ИЗ
	|	Документ.ОтчетКомитенту.Товары КАК ТаблицаТовары
	|ГДЕ
	|   &ОрганизацияПлательщикНДС
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.КоличествоУпаковок > 0
	|   И &ВалютаРегламентированногоУчета = &Валюта
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.СтавкаНДС
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаТовары.СуммаПродажи - ТаблицаТовары.СуммаСНДС) <> 0
	|
	|
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ТекстЗапросаТаблицаНДСРасчетНалоговогоКредита(Запрос, ТекстыЗапроса, Регистры)
    
    ИмяРегистра = "НДСРасчетНалоговогоКредита";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 

	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|
	|	&Ссылка КАК ОбъектРасчетов,
	|	&ВидПоставкиПоТоварам КАК ВидПоставки, 
	|
	|	&Ссылка КАК ДокументПоставки,
	|	&МоментОпределенияБазыНДСПоТоварам КАК МоментОпределенияБазыНДС,
	|
	|	СУММА(ТаблицаТовары.СуммаПродажи - ТаблицаТовары.СуммаСНДС) КАК СуммаПоставкиТребующаяРегистрацииНН,
	|   0 КАК СуммаПоставкиНеТребующаяРегистрацииНН
	|ИЗ
	|	Документ.ОтчетКомитенту.Товары КАК ТаблицаТовары
	|
	|ГДЕ
	|	&ОрганизацияПлательщикНДС
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.КоличествоУпаковок > 0
	|   И &ВалютаРегламентированногоУчета = &Валюта
	|
	|ИМЕЮЩИЕ 
	|	СУММА(ТаблицаТовары.СуммаПродажи - ТаблицаТовары.СуммаСНДС) <> 0
	|
	|/////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);

	Возврат ТекстЗапроса;
	
КонецФункции


Процедура ПересчитатьТаблицуТоваровВВалютуРегл(Запрос)
	
	Если Запрос.Параметры.Свойство("ТаблицаТоваровВВалютуРеглПересчитана") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросТоварыДокумента = Новый Запрос;
	ЗапросТоварыДокумента.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	
	ЗапросТоварыДокумента.УстановитьПараметр("Ссылка",        Запрос.Параметры.Ссылка);
	ЗапросТоварыДокумента.УстановитьПараметр("Период",        Запрос.Параметры.Период);
	ЗапросТоварыДокумента.УстановитьПараметр("Валюта",        Запрос.Параметры.Валюта);
	ЗапросТоварыДокумента.УстановитьПараметр("ВалютаРегламентированногоУчета", 
	                                                          Запрос.Параметры.ВалютаРегламентированногоУчета);
	ЗапросТоварыДокумента.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                           КАК НомерСтроки,
	|	ТаблицаДокумента.ИдентификаторСтроки                   КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СтавкаНДС                             КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС                              КАК СуммаНДС,
	|	&Валюта                                                КАК Валюта,
	|	&Период                                                КАК Дата
	|
	|ПОМЕСТИТЬ ТаблицаТоваровПредварительная
	|ИЗ
	|	Документ.ОтчетКомитенту.ВидыЗапасов КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И &Валюта <> &ВалютаРегламентированногоУчета";
	
	ЗапросТоварыДокумента.Выполнить();
	
	ОбщегоНазначенияУТ.ПересчитатьТаблицуТоваровВВалютуРегл(Запрос.МенеджерВременныхТаблиц);
	
	Запрос.УстановитьПараметр("ТаблицаТоваровВВалютуРеглПересчитана", Истина);
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	Если ПравоДоступа("Изменение", Метаданные.Документы.ОтчетКомитенту) Тогда
		// Акт об оказании услуг
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьАктОбОказанииУслуг";
		КомандаПечати.Идентификатор = "Акт";
		КомандаПечати.Представление = НСтр("ru='Акт об оказании услуг';uk='Акт про надання послуг'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 20;
	КонецЕсли;

	Если Пользователи.ЭтоПолноправныйПользователь() Тогда
		// Акт выполненных работ (Microsoft Word)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик     = "УправлениеПечатьюУТКлиент.ПечатьАктВыполненныхРаботMicrosoftWord";
		КомандаПечати.МенеджерПечати = "";
		КомандаПечати.Идентификатор  = "АктMicrosoftWord";
		КомандаПечати.Представление  = УправлениеПечатьюУТВызовСервера.ПредставлениеКомандыПечатьАктВыполненныхРаботMicrosoftWord(Ложь);
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 21;
		
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Обработчик     = "УправлениеПечатьюУТКлиент.ПечатьАктВыполненныхРаботMicrosoftWordАльтернативныйЯзык";
		КомандаПечати.МенеджерПечати = "";
		КомандаПечати.Идентификатор  = "АктMicrosoftWordАльтернативныйЯзык";
		КомандаПечати.Представление  = УправлениеПечатьюУТВызовСервера.ПредставлениеКомандыПечатьАктВыполненныхРаботMicrosoftWord(Истина);
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 22;
	КонецЕсли;
	
	Если НЕ ПраваПользователяПовтИсп.ЭтоПартнер() Тогда
		// Отчет комитенту о продажах
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
		КомандаПечати.Идентификатор = "ОтчетКомиссионера";
		КомандаПечати.Представление = НСтр("ru='Отчет комитенту о продажах';uk='Звіт комітенту про продажі'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		КомандаПечати.Порядок = 10;
	КонецЕсли;


КонецПроцедуры




Функция ПолучитьДанныеДляПечатнойФормыОтчетПоКомиссии(ПараметрыПечати, МассивОбъектов) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ 
	|   ИСТИНА КАК УчитыватьНДС,
	|   Товары.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ТаблицаУчитыватьНДС
	|ИЗ
	|	Документ.ОтчетКомитенту.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов) И Товары.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НеНДС)
	|СГРУППИРОВАТЬ ПО Товары.Ссылка 
	|;
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Контрагент КАК Комитент,
	|	ДанныеДокумента.Организация КАК Комиссионер,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	ДанныеДокумента.СуммаВознаграждения КАК СуммаВознаграждения,
	|	Истина КАК ЦенаВключаетНДС, // Суммы комитента, продажи и вознаграждения всегда выводятся с НДС
	|   ЕСТЬNULL(ТаблицаУчитыватьНДС.УчитыватьНДС, Ложь) КАК УчитыватьНДС,
	|	ДанныеДокумента.МестоСоставленияДокумента КАК МестоСоставленияДокумента,
	|	ДанныеДокумента.Договор.НаименованиеДляПечати КАК ДоговорНаименованиеДляПечати,
	|	Ложь КАК ЭтоОтчетКомиссионера,
	|	НЕОПРЕДЕЛЕНО КАК БанковскийСчетКомитента,
	|	ДанныеДокумента.БанковскийСчет КАК БанковскийСчетКомиссионера,
	|	"""" КАК ПредставительКомиссионераСтрокой,
	|	ДанныеДокумента.ПредставительОрганизацииДолжность КАК ПредставительКомиссионераДолжность,
	|	ДанныеДокумента.ПредставительОрганизации КАК ПредставительКомиссионера,
	|	ДанныеДокумента.ПредставительКонтрагента КАК ПредставительКомитентаСтрокой,
	|	"""" КАК ПредставительКомитентаДолжность,
	|	"""" КАК ПредставительКомитента
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаУчитыватьНДС КАК ТаблицаУчитыватьНДС
	|		ПО ДанныеДокумента.Ссылка = ТаблицаУчитыватьНДС.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивДокументов)
	|	И ДанныеДокумента.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура.Код КАК Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул КАК Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ВложенныйЗапрос.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.Упаковка.Наименование
	|	КОНЕЦ КАК Упаковка,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	СУММА(ВложенныйЗапрос.СуммаКомитента) КАК СуммаКомитента,
	|	СУММА(ВложенныйЗапрос.СуммаПродажи) КАК СуммаПродажи,
	|	СУММА(ВложенныйЗапрос.СуммаВознаграждения) КАК СуммаВознаграждения,
	|	МАКСИМУМ(ВложенныйЗапрос.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаТовары.Ссылка КАК Ссылка,
	|		ТаблицаТовары.Номенклатура КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|				ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|			ИНАЧЕ ТаблицаТовары.Упаковка
	|		КОНЕЦ КАК ЕдиницаИзмерения,
	|		ТаблицаТовары.Характеристика КАК Характеристика,
	|		ТаблицаТовары.Упаковка КАК Упаковка,
	|		ТаблицаТовары.КоличествоУпаковок КАК Количество,
	|		ТаблицаТовары.Цена КАК Цена,
	|		ТаблицаТовары.СуммаСНДС КАК СуммаКомитента,
	|		ТаблицаТовары.СуммаПродажи КАК СуммаПродажи,
	|		ТаблицаТовары.СуммаВознаграждения КАК СуммаВознаграждения,
	|		ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		Документ.ОтчетКомитенту.Товары КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка В(&МассивДокументов)
	|		И ТаблицаТовары.Номенклатура.ТипНоменклатуры В
	|			(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|			 ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара),
	|			 ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга))) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Упаковка,
	|	ВложенныйЗапрос.Цена,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное,
	|	ВложенныйЗапрос.Номенклатура.Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление,
	|	ВложенныйЗапрос.Характеристика.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.Упаковка.Наименование
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(СуммаКомитента),
	|	СУММА(СуммаПродажи),
	|	СУММА(СуммаВознаграждения)
	|ПО
	|	Ссылка");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ВложенныйЗапрос.Упаковка",
			"ВложенныйЗапрос.Номенклатура"));
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Заголовок = НСтр("ru='Отчет комитенту о продажах';uk='Звіт комітенту про продажі'");
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[1];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[2];
	СтруктураДанныхДляПечати 	= Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти, Заголовок",
		РезультатПоШапке,
		РезультатПоТабличнойЧасти,
		Заголовок);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции


Функция ПолучитьДанныеДляПечатнойФормыАктОбОказанииУслуг(ПараметрыПечати, МассивОбъектов) Экспорт
	
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ОтветственныеЛицаСервер.СформироватьВременнуюТаблицуОтветственныхЛицДокументов(МассивОбъектов, МенеджерВременныхТаблиц);	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	Истина КАК ЦенаВключаетНДС, // По взаиморасчетам проходит сумма с НДС из реквизита СуммаВознаграждения
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.СтавкаНДСВознаграждения = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НеНДС)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК УчитыватьНДС,
	|	"""" КАК ДополнительнаяИнформация,
	|	"""" КАК ДополнительнаяИнформацияШапки,
	|	ДанныеДокумента.Договор КАК Договор,
	|	ДанныеДокумента.Договор.НаименованиеДляПечати КАК ДоговорНаименованиеДляПечати,
	|	ЛОЖЬ КАК ПечататьЗаказ,
	|	НЕОПРЕДЕЛЕНО КАК Заказ,
	|	ДанныеДокумента.Соглашение КАК Соглашение,
	|	ТаблицаОтветственныеЛица.РуководительНаименование                       КАК РуководительОрганизации,
	|	ТаблицаОтветственныеЛица.РуководительДолжность                          КАК ДолжностьРуководителяОрганизации,
	|	"""" КАК РуководительКонтрагента,
	|	"""" КАК ДолжностьРуководителяКонтрагента,
	|	ДанныеДокумента.ПредставительОрганизации КАК ПредставительОрганизации,
	|	ДанныеДокумента.ПредставительОрганизацииДолжность КАК ПредставительОрганизацииДолжность,
	|	ДанныеДокумента.ПредставительКонтрагента КАК ПредставительКонтрагента,
	|	"""" КАК ПредставительОрганизацииПолучателя,
	|	"""" КАК ПредставительОрганизацииПолучателяДолжность,
	|	ДанныеДокумента.МестоСоставленияДокумента КАК МестоСоставленияДокумента,
	|	ДанныеДокумента.БанковскийСчет КАК БанковскийСчетОрганизации,
	|	НЕОПРЕДЕЛЕНО КАК БанковскийСчетКонтрагента
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаОтветственныеЛица КАК ТаблицаОтветственныеЛица
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОтветственныеЛица.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Содержание КАК УслугаНаименованиеПолное,
	|	ВложенныйЗапрос.Номенклатура.Код КАК Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул КАК Артикул,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименованиеПолное,
	|	ВложенныйЗапрос.СтавкаНДС КАК СтавкаНДС,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	ВложенныйЗапрос.Количество КАК Количество,
	|	ВложенныйЗапрос.Сумма КАК Сумма,
	|	ВложенныйЗапрос.СуммаНДС КАК СуммаНДС,
	|	ВложенныйЗапрос.СуммаСкидки КАК СуммаСкидки,
	|	ВложенныйЗапрос.СуммаБезСкидки КАК СуммаБезСкидки,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапрос.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеДокумента.Ссылка КАК Ссылка,
	|		ДанныеДокумента.Услуга КАК Номенклатура,
	|		ДанныеДокумента.Услуга.НаименованиеПолное КАК Содержание,
	|		1 КАК Коэффициент,
	|		0 КАК ПроцентСкидки,
	|		ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|		ДанныеДокумента.СтавкаНДСВознаграждения КАК СтавкаНДС,
	|		ДанныеДокумента.СуммаВознаграждения КАК Цена,
	|		1 КАК Количество,
	|		ДанныеДокумента.СуммаВознаграждения КАК Сумма,
	|		0 КАК СуммаСкидки,
	|		ДанныеДокумента.СуммаВознаграждения КАК СуммаБезСкидки,
	|		ДанныеДокумента.СуммаНДСВознаграждения КАК СуммаНДС,
	|		1 КАК НомерСтроки,
	|		ДанныеДокумента.Услуга.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|	ИЗ
	|		Документ.ОтчетКомитенту КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.Ссылка В(&МассивДокументов)
	|		И ДанныеДокумента.СпособРасчетаВознаграждения <> ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаКомиссионногоВознаграждения.НеРассчитывается)) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(СуммаСкидки)
	|ПО
	|	Ссылка 
	|";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	Возврат Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти",
		МассивРезультатов[0],
		МассивРезультатов[1]
	);
	
КонецФункции // ПолучитьДанныеДляПечатнойФормыАктОбОказанииУслуг

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаДанныхДокументов с полями:
//		Ссылка.
//
//	ПараметрыЗаполнения - Структура - структура, возвращаемая функцией ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения = Неопределено) Экспорт
	
	Если ПараметрыЗаполнения = Неопределено Тогда
		ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ПересчитыватьВВалютуРегл",       ПараметрыЗаполнения.ПересчитыватьВВалютуРегл);
	
	Если ПараметрыЗаполнения.ПересчитыватьВВалютуРегл И ПараметрыЗаполнения.АктуализироватьРасчеты Тогда
		
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РасчетыСКлиентами.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
		|ИЗ
		|	РегистрНакопления.РасчетыСКлиентами КАК РасчетыСКлиентами
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		ТаблицаДанныхДокументов КАК ДанныеДокументов
		|	ПО
		|		РасчетыСКлиентами.Регистратор = ДанныеДокументов.Ссылка
		|
		|ГДЕ
		|	ДанныеДокументов.Валюта <> &ВалютаРегламентированногоУчета
		|	И РасчетыСКлиентами.Активность
		|";
		ТаблицаАналитик = Запрос.Выполнить().Выгрузить();
		МассивАналитикУчетаПоПартнерам = ТаблицаАналитик.ВыгрузитьКолонку("АналитикаУчетаПоПартнерам");
		
		ОкончаниеПериодаРасчета = ТекущаяДатаСеанса();
		РаспределениеВзаиморасчетов.РаспределитьВсеРасчетыСКлиентами(ОкончаниеПериодаРасчета, МассивАналитикУчетаПоПартнерам);
		
	КонецЕсли;
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                      КАК Ссылка,
	|	1                                                            КАК НомерСтроки,
	|	ТаблицаДокумента.Услуга                                      КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)                  КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)       КАК Упаковка,
	|	1                                                            КАК Количество,
	|	1                                                            КАК КоличествоУпаковок,
	|	ТаблицаДокумента.СтавкаНДСВознаграждения                     КАК СтавкаНДС,
	|
	|	ЕСТЬNULL(
	|		СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,
	|		ТаблицаДокумента.СуммаВознаграждения - ТаблицаДокумента.СуммаНДСВознаграждения
	|	)                                                            КАК СуммаБезНДС,
	|	ЕСТЬNULL(
	|		СуммыДокументовВВалютеРегл.СуммаНДСРегл,
	|		ТаблицаДокумента.СуммаНДСВознаграждения
	|	)                                                            КАК СуммаНДС,
	|	
	|	ЛОЖЬ                                                         КАК ЭтоТовар,
	|	ЛОЖЬ                                                         КАК ВернутьМногооборотнуюТару
	|
	|ПОМЕСТИТЬ ОтчетКомитентуТаблицаТоваров
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|	ПО
	|		ТаблицаДокумента.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|		И СуммыДокументовВВалютеРегл.ИдентификаторСтроки = """"
	|		И СуммыДокументовВВалютеРегл.Активность
	|		И &ПересчитыватьВВалютуРегл
	|;";
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ЗаполнитьСтруктуруПолучателейПечатныхФорм(СтруктураДанныхОбъектаПечати) Экспорт
	
	СтруктураДанныхОбъектаПечати.ОсновнойПолучатель = "Партнер";
	
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Партнер");
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда 
		СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Контрагент");
	КонецЕсли;
	СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("КонтактноеЛицо");
	
КонецПроцедуры

Функция ДоступныеДляШаблоновПечатныеФормы() Экспорт

	МассивДоступныхПечатныхФорм = Новый Массив;
	
	МассивДоступныхПечатныхФорм.Добавить(ШаблоныСообщенийСервер.СтруктураПараметровДоступнойПечатнойФормы(
	                                     "ОтчетКомиссионера", НСтр("ru='Отчет комиссионера';uk='Звіт комісіонера'"), "Обработка.ПечатьОбщихФорм", Неопределено));
	
	Возврат МассивДоступныхПечатныхФорм

КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#КонецОбласти

#КонецЕсли
