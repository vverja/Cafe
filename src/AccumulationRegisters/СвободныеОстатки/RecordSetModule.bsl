#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);

	Если ПроведениеСервер.РассчитыватьИзменения(ДополнительныеСвойства)
		И ПроведениеСервер.КонтролироватьОбеспечение(ДополнительныеСвойства) Тогда

		ДанныеБлокировки = ДанныеБлокировки();

		Если ДанныеБлокировки.ТаблицаБлокируемыхИзмерений.Количество() = 0 Тогда
			ДополнительныеСвойства.РассчитыватьИзменения = Ложь;
		КонецЕсли;

	КонецЕсли;

	Если ПроведениеСервер.РассчитыватьИзменения(ДополнительныеСвойства)
		И ПроведениеСервер.КонтролироватьОбеспечение(ДополнительныеСвойства) Тогда

		Блокировка = Новый БлокировкаДанных();

		Если ДанныеБлокировки.ТребуетсяУправляемаяБлокировка Тогда

			//Устанавливаем блокировку только по тем измерениям, по которым необходим контроль остатков.
			ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.СвободныеОстатки");
			ЭлементБлокировки.Режим          = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.ИсточникДанных = ДанныеБлокировки.ТаблицаБлокируемыхИзмерений;
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура",   "Номенклатура");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад",          "Склад");

		Иначе
			//Устанавливаем блокировку по всем измерениям, так как контролируюстя остатки по всем позициям набора записей.
			БлокироватьДляИзменения = Истина;
		КонецЕсли;

		//Устанавливаем блокировку второго регистра, данные которого понадобятся для контроля по измерениям,
		//присутствующим в наборе записей регистра "Движение товаров".
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ДоступныеОстаткиПланируемыхПоступлений");
		ЭлементБлокировки.Режим          = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = ДанныеБлокировки.ТаблицаБлокируемыхИзмерений;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура",   "Номенклатура");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад",          "Склад");

		Блокировка.Заблокировать();

		СформироватьТаблицуИсходныхДвижений();

	КонецЕсли;

КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ПроведениеСервер.РассчитыватьИзменения(ДополнительныеСвойства)
		И ПроведениеСервер.КонтролироватьОбеспечение(ДополнительныеСвойства) Тогда
		СформироватьТаблицуИзмененийДвижений();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеБлокировки()

	ЕстьСтрокиБезКонтроля = Ложь;

	Набор = Новый ТаблицаЗначений();
	Набор.Колонки.Добавить("Номенклатура",   Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Набор.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	Набор.Колонки.Добавить("Склад",          Новый ОписаниеТипов("СправочникСсылка.Склады"));
	НоваяСтрока = Неопределено;

	Для Каждого Запись Из ЭтотОбъект Цикл

		Если Запись.ВРезервеСоСклада <> 0 Или
			Запись.ВидДвижения = ВидДвиженияНакопления.Расход И (Запись.ВНаличии > 0 Или Запись.ВРезервеПодЗаказ <> 0) Тогда

			Если НоваяСтрока = Неопределено Или
					НоваяСтрока.Номенклатура <> Запись.Номенклатура Или
					НоваяСтрока.Характеристика <> Запись.Характеристика Или
					НоваяСтрока.Склад <> Запись.Склад Тогда

				НоваяСтрока = Набор.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Запись);

			КонецЕсли;

		Иначе
			ЕстьСтрокиБезКонтроля = Истина;
		КонецЕсли;

	КонецЦикла;

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Т.Номенклатура        КАК Номенклатура,
	|	Т.Характеристика      КАК Характеристика,
	|	Т.Склад               КАК Склад
	|ПОМЕСТИТЬ ВтНаборЗаписей
	|
	|ИЗ
	|	&НаборЗаписей КАК Т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура, Характеристика, Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НаборЗаписей.Номенклатура   КАК Номенклатура,
	|	НаборЗаписей.Характеристика КАК Характеристика,
	|	НаборЗаписей.Склад          КАК Склад
	|
	|ИЗ
	|	ВтНаборЗаписей КАК НаборЗаписей
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаХарактеристика
	|		ПО НаборЗаписей.Склад = НастройкаХарактеристика.Склад
	|		 И НаборЗаписей.Номенклатура = НастройкаХарактеристика.Номенклатура
	|		 И НаборЗаписей.Характеристика = НастройкаХарактеристика.Характеристика
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаНоменклатура
	|		ПО НаборЗаписей.Склад = НастройкаНоменклатура.Склад
	|		 И НаборЗаписей.Номенклатура = НастройкаНоменклатура.Номенклатура
	|		 И НастройкаНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		 И НастройкаХарактеристика.Склад   ЕСТЬ NULL
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаСклад
	|		ПО НаборЗаписей.Склад = НастройкаСклад.Склад
	|		 И НастройкаСклад.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		 И НастройкаСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		 И НастройкаХарактеристика.Склад   ЕСТЬ NULL
	|		 И НастройкаНоменклатура.Склад     ЕСТЬ NULL
	|
	|ГДЕ
	|	ЕСТЬNULL(НастройкаХарактеристика.Контролировать,
	|		ЕСТЬNULL(НастройкаНоменклатура.Контролировать,
	|		НастройкаСклад.Контролировать))";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НаборЗаписей", Набор);
	ТаблицаБлокируемыхИзмерений = Запрос.Выполнить().Выгрузить();
	
	ТребуетсяУправляемаяБлокировка = ЕстьСтрокиБезКонтроля Или ТаблицаБлокируемыхИзмерений.Количество() < Набор.Количество();

	Возврат Новый Структура("ТребуетсяУправляемаяБлокировка, ТаблицаБлокируемыхИзмерений",
		ТребуетсяУправляемаяБлокировка, ТаблицаБлокируемыхИзмерений);

КонецФункции

Процедура СформироватьТаблицуИсходныхДвижений()

	// Текущее состояние набора помещается во временную таблицу "ДвиженияПередЗаписью",
	// чтобы при записи получить изменение нового набора относительно текущего.
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("ЭтоНовый",    ДополнительныеСвойства.ЭтоНовый);
	Запрос.УстановитьПараметр("ТекущаяДата", НачалоДня(ТекущаяДата()));
	Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;

	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Таблица.Номенклатура                                  КАК Номенклатура,
		|	Таблица.Характеристика                                КАК Характеристика,
		|	Таблица.Склад                                         КАК Склад,
		|
		|	ВЫБОР
		|		КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|			-Таблица.ВНаличии
		|		ИНАЧЕ
		|			0
		|	КОНЕЦ                                                 КАК ВНаличииПередЗаписьюРасход,
		|
		|	ВЫБОР
		|		КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|			-Таблица.ВРезервеПодЗаказ
		|		ИНАЧЕ
		|			0
		|	КОНЕЦ                                                 КАК ВРезервеПодЗаказПередЗаписьюРасход,
		|
		|	ВЫБОР
		|		КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|			-Таблица.ВРезервеСоСклада
		|		ИНАЧЕ
		|			0
		|	КОНЕЦ                                                 КАК ВРезервеСоСкладаПередЗаписьюПриход,
		|
		|	ВЫБОР
		|		КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|			-Таблица.ВРезервеСоСклада
		|		ИНАЧЕ
		|			0
		|	КОНЕЦ                                                 КАК ВРезервеСоСкладаПередЗаписьюРасход
		|
		|ПОМЕСТИТЬ СвободныеОстаткиПередЗаписью
		|ИЗ
		|	РегистрНакопления.СвободныеОстатки КАК Таблица
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаХарактеристика
		|		ПО Таблица.Склад = НастройкаХарактеристика.Склад
		|		 И Таблица.Номенклатура = НастройкаХарактеристика.Номенклатура
		|		 И Таблица.Характеристика = НастройкаХарактеристика.Характеристика
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаНоменклатура
		|		ПО Таблица.Склад = НастройкаНоменклатура.Склад
		|		 И Таблица.Номенклатура = НастройкаНоменклатура.Номенклатура
		|		 И НастройкаНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|		 И НастройкаХарактеристика.Склад   ЕСТЬ NULL
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаСклад
		|		ПО Таблица.Склад = НастройкаСклад.Склад
		|		 И НастройкаСклад.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|		 И НастройкаСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|		 И НастройкаХарактеристика.Склад   ЕСТЬ NULL
		|		 И НастройкаНоменклатура.Склад     ЕСТЬ NULL
		|ГДЕ
		|	Таблица.Регистратор = &Регистратор
		|	И НЕ &ЭтоНовый
		|	И ЕСТЬNULL(НастройкаХарактеристика.Контролировать,
		|		ЕСТЬNULL(НастройкаНоменклатура.Контролировать,
		|		НастройкаСклад.Контролировать))";

	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();

КонецПроцедуры

Процедура СформироватьТаблицуИзмененийДвижений()

	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	//Рассчитывается изменение нового набора относительно текущего с учетом накопленных изменений
	//и помещается во временную таблицу.
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаИзменений.Номенклатура                  КАК Номенклатура,
		|	ТаблицаИзменений.Характеристика                КАК Характеристика,
		|	ТаблицаИзменений.Склад                         КАК Склад,
		|	СУММА(ТаблицаИзменений.ВНаличииРасход)         КАК ВНаличииРасход,
		|	СУММА(ТаблицаИзменений.ВРезервеПодЗаказРасход) КАК ВРезервеПодЗаказРасход,
		|	СУММА(ТаблицаИзменений.ВРезервеСоСкладаРасход) КАК ВРезервеСоСкладаРасход,
		|	СУММА(ТаблицаИзменений.ВРезервеСоСкладаПриход) КАК ВРезервеСоСкладаПриход
		|
		|ПОМЕСТИТЬ ДвиженияСвободныеОстаткиИзменение
		|ИЗ(
		|	ВЫБРАТЬ
		|		Таблица.Номенклатура                       КАК Номенклатура,
		|		Таблица.Характеристика                     КАК Характеристика,
		|		Таблица.Склад                              КАК Склад,
		|
		|		Таблица.ВНаличииПередЗаписьюРасход         КАК ВНаличииРасход,
		|
		|		Таблица.ВРезервеСоСкладаПередЗаписьюПриход КАК ВРезервеСоСкладаПриход,
		|		Таблица.ВРезервеСоСкладаПередЗаписьюРасход КАК ВРезервеСоСкладаРасход,
		|
		|		Таблица.ВРезервеПодЗаказПередЗаписьюРасход КАК ВРезервеПодЗаказРасход
		|
		|	ИЗ
		|		СвободныеОстаткиПередЗаписью КАК Таблица
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Таблица.Номенклатура                       КАК Номенклатура,
		|		Таблица.Характеристика                     КАК Характеристика,
		|		Таблица.Склад                              КАК Склад,
		|
		|		ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|					Таблица.ВНаличии
		|				ИНАЧЕ 0
		|		КОНЕЦ                                      КАК ВНаличииРасход,
		|
		|		ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|					Таблица.ВРезервеСоСклада
		|				ИНАЧЕ 0
		|		КОНЕЦ                                      КАК ВРезервеСоСкладаПриход,
		|		ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|					Таблица.ВРезервеСоСклада
		|				ИНАЧЕ 0
		|		КОНЕЦ                                      КАК ВРезервеСоСкладаРасход,
		|
		|		ВЫБОР КОГДА Таблица.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|					Таблица.ВРезервеПодЗаказ
		|				ИНАЧЕ 0
		|		КОНЕЦ                                      КАК ВРезервеПодЗаказРасход
		|	ИЗ
		|		РегистрНакопления.СвободныеОстатки КАК Таблица
		|
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаХарактеристика
		|			ПО Таблица.Склад = НастройкаХарактеристика.Склад
		|			 И Таблица.Номенклатура = НастройкаХарактеристика.Номенклатура
		|			 И Таблица.Характеристика = НастройкаХарактеристика.Характеристика
		|
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаНоменклатура
		|			ПО Таблица.Склад = НастройкаНоменклатура.Склад
		|			 И Таблица.Номенклатура = НастройкаНоменклатура.Номенклатура
		|			 И НастройкаНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|			 И НастройкаХарактеристика.Склад   ЕСТЬ NULL
		|
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаСклад
		|			ПО Таблица.Склад = НастройкаСклад.Склад
		|			 И НастройкаСклад.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|			 И НастройкаСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|			 И НастройкаХарактеристика.Склад   ЕСТЬ NULL
		|			 И НастройкаНоменклатура.Склад     ЕСТЬ NULL
		|	ГДЕ
		|		Таблица.Регистратор = &Регистратор
		|		И ЕСТЬNULL(НастройкаХарактеристика.Контролировать,
		|			ЕСТЬNULL(НастройкаНоменклатура.Контролировать,
		|			НастройкаСклад.Контролировать))
		|
		|	) КАК ТаблицаИзменений
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаИзменений.Номенклатура,
		|	ТаблицаИзменений.Характеристика,
		|	ТаблицаИзменений.Склад
		|
		|ИМЕЮЩИЕ
		|	СУММА(ТаблицаИзменений.ВНаличииРасход) > 0 ИЛИ СУММА(ТаблицаИзменений.ВРезервеПодЗаказРасход) > 0
		|		ИЛИ (СУММА(ТаблицаИзменений.ВНаличииРасход) - СУММА(ТаблицаИзменений.ВРезервеПодЗаказРасход) > 0) // смена обособленной отгрузки на необособленную.
		|		ИЛИ СУММА(ТаблицаИзменений.ВРезервеСоСкладаРасход) > 0 ИЛИ СУММА(ТаблицаИзменений.ВРезервеСоСкладаПриход) > 0
		|
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|
		|УНИЧТОЖИТЬ СвободныеОстаткиПередЗаписью
		|";

	Результат = Запрос.ВыполнитьПакет();

	// Добавляется информация о ее существовании и наличии в ней записей об изменении.
	Выборка = Результат[0].Выбрать();
	Выборка.Следующий();
	СтруктураВременныеТаблицы.Вставить("ДвиженияСвободныеОстаткиИзменение", Выборка.Количество > 0);

КонецПроцедуры

#КонецОбласти

#КонецЕсли