
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест"
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Параметры.Свойство("Идентификатор", Идентификатор);
	//Параметры.Свойство("ДрайверОборудования", ДрайверОборудования);
	
	Заголовок = НСтр("ru='ФР';uk='ФР'") + " """ + Строка(Идентификатор) + """";
	ЦветТекста = ЦветаСтиля.ЦветТекстаФормы;
	ЦветОшибки = ЦветаСтиля.ЦветОтрицательногоЧисла;

	СпПорт = Элементы.Порт.СписокВыбора;
	Индекс = Неопределено;
	Для Индекс = 1 По 99 Цикл
		СпПорт.Добавить(Индекс, "COM" + СокрЛП(Индекс));
	КонецЦикла;

	СпСкорость = Элементы.Скорость.СписокВыбора;
	СпСкорость.Добавить(1,   "4800");
	СпСкорость.Добавить(2,   "9600");
	СпСкорость.Добавить(3,  "19200");
	СпСкорость.Добавить(4,  "38400");
	СпСкорость.Добавить(5,  "57600");
	СпСкорость.Добавить(6, "115200");

    ЗаполнитьСписокВыбораТипСоединения();
	
	времТипСоединения	           = Неопределено;
	времIP	                       = Неопределено;
	времПортIP	                   = Неопределено;
	времПорт                       = Неопределено;
	времСкорость                   = Неопределено;
	времМодель                     = Неопределено;
	времТаблицаСоответствий        = Неопределено;
	времМерчантИД= Неопределено;


	времНесколькоАкцизныхМарокДляОдногоТовара = Неопределено;
	времШтрихкодАкцизнойМаркиВВидеШтрихкода	  = Неопределено;
	времКодПоУКТВЭДВВидеШтрихкода 			  = Неопределено;
	
	Параметры.ПараметрыОборудования.Свойство("ТипСоединения"  , времТипСоединения);
	Параметры.ПараметрыОборудования.Свойство("IP"             , времIP);
	Параметры.ПараметрыОборудования.Свойство("ПортIP"         , времПортIP);
	Параметры.ПараметрыОборудования.Свойство("Порт"           , времПорт);
	Параметры.ПараметрыОборудования.Свойство("Скорость"       , времСкорость);
	Параметры.ПараметрыОборудования.Свойство("Модель"         , времМодель);
	Параметры.ПараметрыОборудования.Свойство("ТаблицаСоответствийНалоговыхГрупп", времТаблицаСоответствий);
	Параметры.ПараметрыОборудования.Свойство("НесколькоАкцизныхМарокДляОдногоТовара", времНесколькоАкцизныхМарокДляОдногоТовара);
	Параметры.ПараметрыОборудования.Свойство("ШтрихкодАкцизнойМаркиВВидеШтрихкода"  , времШтрихкодАкцизнойМаркиВВидеШтрихкода);
	Параметры.ПараметрыОборудования.Свойство("КодПоУКТВЭДВВидеШтрихкода"            , времКодПоУКТВЭДВВидеШтрихкода);
	Параметры.ПараметрыОборудования.Свойство("МерчантИД"            , времМерчантИД);

	
	ТипСоединения              = ?(времТипСоединения              = Неопределено, 0, времТипСоединения);
	IP	                       = ?(времIP	                      = Неопределено, ?(ЭтоTCPIPСоединение(ТипСоединения),"192.168.0.1",""), времIP);
	ПортIP                     = ?(времПортIP	                  = Неопределено, ?(ЭтоTCPIPСоединение(ТипСоединения),4545,0), времПортIP);
	Порт                       = ?(времПорт                       = Неопределено, 1, времПорт);
	Скорость                   = ?(времСкорость                   = Неопределено, 0, времСкорость);
	Модель                     = ?(времМодель                     = Неопределено, Элементы.Модель.СписокВыбора[0], времМодель);
		МерчантИД                     = ?(времМерчантИД                     = Неопределено, 0, времМерчантИД);

	НесколькоАкцизныхМарокДляОдногоТовара = ?(времНесколькоАкцизныхМарокДляОдногоТовара = Неопределено, Ложь, времНесколькоАкцизныхМарокДляОдногоТовара);
	ШтрихкодАкцизнойМаркиВВидеШтрихкода	  = ?(времШтрихкодАкцизнойМаркиВВидеШтрихкода   = Неопределено, Ложь, времШтрихкодАкцизнойМаркиВВидеШтрихкода);
	КодПоУКТВЭДВВидеШтрихкода			  = ?(времКодПоУКТВЭДВВидеШтрихкода             = Неопределено, Ложь, времКодПоУКТВЭДВВидеШтрихкода);
	
	ЗаполнитьТаблицуСоответствийИзПараметров(времТаблицаСоответствий);
	
	//Элементы.ТестУстройства.Видимость    = (ПараметрыСеанса.РабочееМестоКлиента
	//                                        = Идентификатор.РабочееМесто);
	//Элементы.УстановитьДрайвер.Видимость = (ПараметрыСеанса.РабочееМестоКлиента
	//                                        = Идентификатор.РабочееМесто);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОбновитьИнформациюОДрайвере();

	//Если ЗначениеЗаполнено(ТекстПредупрежденияПриСтарте) Тогда
	//	ПоказатьПредупреждение(,ТекстПредупрежденияПриСтарте,,НСтр("ru='Внимание!';uk='Увага!'"));
	//КонецЕсли;
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД ФОРМЫ

// Процедура представляет обработчик события "Нажатие" кнопки
// "ОК" командной панели "ОсновныеДействияФормы".
//
// Параметры:
//  Кнопка - <КнопкаКоманднойПанели>
//         - Кнопка, с которой связано данное событие (кнопка "ОК").
//
&НаКлиенте
Процедура ЗаписатьИЗакрытьВыполнить()
	
	НовыеЗначениеПараметров = Новый Структура;
	НовыеЗначениеПараметров.Вставить("ТипСоединения"   , ТипСоединения);
	НовыеЗначениеПараметров.Вставить("IP"              , IP);
	НовыеЗначениеПараметров.Вставить("ПортIP"          , ПортIP);
	НовыеЗначениеПараметров.Вставить("Порт"            , Порт);
	НовыеЗначениеПараметров.Вставить("Скорость"        , Скорость);
	НовыеЗначениеПараметров.Вставить("Модель"          , Модель);
		НовыеЗначениеПараметров.Вставить("МерчантИД"          , МерчантИД);

	
	Результат = Новый Структура;
	Результат.Вставить("Идентификатор", Идентификатор);
	Результат.Вставить("ПараметрыОборудования", НовыеЗначениеПараметров);
	
	Закрыть(Результат);

КонецПроцедуры

&НаКлиенте
Процедура ТестУстройства(Команда)

		РезультатТеста    = Неопределено;

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("ТипСоединения"             , ТипСоединения);
	времПараметрыУстройства.Вставить("IP"                        , IP);
	времПараметрыУстройства.Вставить("ПортIP"                    , ПортIP);
	времПараметрыУстройства.Вставить("Порт"                      , Порт);
	времПараметрыУстройства.Вставить("Скорость"                  , Скорость);
	времПараметрыУстройства.Вставить("Модель"                    , Модель);
	времПараметрыУстройства.Вставить("МерчантИД"                    , МерчантИД);

	времПараметрыУстройства.Вставить("ТаблицаСоответствийНалоговыхГрупп", ПолучитьПараметрыИзТаблицыСоответствий());


	АктивированДемоРежим = "";
	Dest = "";
	
	Если  ТипСоединения = 0 Тогда
		
		Dest = "COM"+Строка(Порт);
		
	ИначеЕсли ТипСоединения =1 Тогда

		Dest = СокрЛП(IP);
	иначе
		Dest = "demo";
	АктивированДемоРежим = "Активовано"
	КонецЕсли;	
	
	
	Попытка   
		ДрайверТест = Новый COMОбъект("WebCheck.ClassCardserv");
		
		Исключение
		Результат = Ложь;
		РезультатТеста = "Помилка створення объекта " ;

	КонецПопытки;


	Ответ=ДрайверТест.Cardserv("<?xml version=""1.0"" encoding=""UTF-8""?> <InputParameters> <Parameters  type="""+Модель+"""  dest="""+Dest+"""  method= ""Identify"" merchantId = """+МерчантИД+"""  /></InputParameters>");
	//  Ответ = истина;
	СтруктураПараметров = Новый Структура;
	Если  Ответ Тогда
		
		СтрокаXMLОтвет = ДрайверТест.StatusBarXML();                                                                                                      
		
		Если СтрДлина(СтрокаXMLОтвет)>0 Тогда
			ЧтениеXML = Новый ЧтениеXML;
			ЧтениеXML.УстановитьСтроку(СтрокаXMLОтвет);
			ЧтениеXML.ПерейтиКСодержимому();
			
			Пока ЧтениеXML.Прочитать() Цикл
				Если ЧтениеXML.Имя = "Parameters" И ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда  
					Пока ЧтениеXML.ПрочитатьАтрибут() Цикл
						СтруктураПараметров.Вставить(ЧтениеXML.Имя,ЧтениеXML.Значение);	
					КонецЦикла;	
				КонецЕсли;
			КонецЦикла;	
		КонецЕсли;
	КонецЕсли;
	
		Если Ответ Тогда
				РезультатТеста = "Під'єднано банківський термінал: "+СтруктураПараметров.vendor +" "+СтруктураПараметров.model;
		Иначе
			Результат = Ложь;
				РезультатТеста = "Помилка під'єднання присторою по інтерфейсу  " +Dest;
		КонецЕсли;

	
		ТекстСообщения = РезультатТеста;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьДрайверИзАрхиваПриЗавершении(Результат) Экспорт 
	
	
КонецПроцедуры 

&НаКлиенте
Процедура УстановитьДрайверИзДистрибутиваПриЗавершении(Результат, Параметры) Экспорт 
	
	Если Результат Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Установка драйвера завершена.';uk='Установку драйвера завершено.'")); 
		ОбновитьИнформациюОДрайвере();
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='При установке драйвера из дистрибутива произошла ошибка.';uk='При установці драйвера з дистрибутива відбулася помилка.'")); 
	КонецЕсли;

КонецПроцедуры 

&НаКлиенте
Процедура УстановитьДрайвер(Команда)

	//ОчиститьСообщения();
	//ОповещенияДрайверИзДистрибутиваПриЗавершении = Новый ОписаниеОповещения("УстановитьДрайверИзДистрибутиваПриЗавершении", ЭтотОбъект);
	//ОповещенияДрайверИзАрхиваПриЗавершении = Новый ОписаниеОповещения("УстановитьДрайверИзАрхиваПриЗавершении", ЭтотОбъект);
	//МенеджерОборудованияКлиент.УстановитьДрайвер(ДрайверОборудования, ОповещенияДрайверИзДистрибутиваПриЗавершении, ОповещенияДрайверИзАрхиваПриЗавершении);

КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ОбновитьИнформациюОДрайвере()

	ВходныеПараметры  = Неопределено;
	ВыходныеПараметры = Неопределено;

	времПараметрыУстройства = Новый Структура();
	времПараметрыУстройства.Вставить("ТипСоединения"             , ТипСоединения);
	времПараметрыУстройства.Вставить("IP"              	       	 , IP);
	времПараметрыУстройства.Вставить("ПортIP"          	       	 , ПортIP);
	времПараметрыУстройства.Вставить("Порт"                      , Порт);
	времПараметрыУстройства.Вставить("Скорость"                  , Скорость);
	времПараметрыУстройства.Вставить("Модель"                    , Модель);
	времПараметрыУстройства.Вставить("ТаблицаСоответствийНалоговыхГрупп", ПолучитьПараметрыИзТаблицыСоответствий());

	
	
		Попытка
			ДрайверТест = Новый COMОбъект("WebCheck.ClassCardserv");
		Драйвер = "Встановлено";
		Исключение
			Драйвер = "Не встановлений";
		КонецПопытки;

		

	Элементы.Драйвер.ЦветТекста = ?(Драйвер = НСтр("Не встановлений"), ЦветОшибки, ЦветТекста);
	Элементы.Версия.ЦветТекста  = ?(Версия  = НСтр("ru='Не определена';uk='Не визначена'"), ЦветОшибки, ЦветТекста);

//	Элементы.УстановитьДрайвер.Доступность = Не (Драйвер = НСтр("ru='Установлен';uk='Встановлений'"));

	Если ЭтоTCPIPСоединение(ТипСоединения) Тогда
		Элементы.IP.Видимость       = Истина;
		Элементы.ПортIP.Видимость   = Ложь;
		Элементы.Порт.Видимость     = Ложь;
		Элементы.Скорость.Видимость = Ложь;
		Элементы.Декорация1.Видимость = Ложь;

		
	ИначеЕсли  ТипСоединения = 0  Тогда
		Элементы.IP.Видимость       = Ложь;
		Элементы.ПортIP.Видимость   = Ложь;
		Элементы.Порт.Видимость     = Истина;
		Элементы.Скорость.Видимость = Истина;
			Элементы.Декорация1.Видимость = Ложь;

	иначе
		 	Элементы.IP.Видимость       = Ложь;
		Элементы.ПортIP.Видимость   = Ложь;
		Элементы.Порт.Видимость     = Ложь;
		Элементы.Скорость.Видимость = Ложь;
			Элементы.Декорация1.Видимость = Истина;


	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуСоответствийИзПараметров(ТаблицаСоответствийИзПараметров = Неопределено)
	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыИзТаблицыСоответствий()
	
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоTCPIPСоединение(ТипСоединения)
	
	// "ТипСоединения = 1" - условие, когда соединение по протоколу TCP/IP
	Возврат (ТипСоединения = 1);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокВыбораТипСоединения()
	
	СписокВыбора = Элементы.ТипСоединения.СписокВыбора;
	
	СписокВыбора.Очистить();
	
	СписокВыбора.Добавить(0, НСтр("ru='COM';uk='COM'"));
	СписокВыбора.Добавить(1, НСтр("ru='TCP/IP';uk='TCP/IP'"));
		СписокВыбора.Добавить(2, НСтр("ru='demo';uk='demo'"));

	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ РЕКВИЗИТОВ ФОРМЫ

&НаКлиенте
Процедура ТаблицаСоответствийСтавкаНДСПриИзменении(Элемент)
	//ДанныеСтроки = Элементы.ТаблицаСоответствий.ТекущиеДанные;
	//
	//НалоговаяГруппаРРО = УправлениеНебольшойФирмойПовтИсп.ПолучитьНомерНалога(ДанныеСтроки.СтавкаНДС);
	//
	//ДанныеСтроки.НалоговаяГруппаРРО = НалоговаяГруппаРРО;
КонецПроцедуры

&НаКлиенте
Процедура МодельПриИзменении(Элемент)
	
	ОбновитьИнформациюОДрайвере();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипСоединенияПриИзменении(Элемент)
	
	Если ЭтоTCPIPСоединение(ТипСоединения) Тогда
		IP       = "192.168.0.1";
		ПортIP   = 2000;
		Порт     = 1;
		Скорость = 0;
	Иначе
		IP       = "";
		ПортIP   = 0;
		Порт     = 1;
		Скорость = 0;
	КонецЕсли;
	
	ОбновитьИнформациюОДрайвере();
	
КонецПроцедуры

&НаКлиенте
Процедура МерчантОтримати(Команда)
		Попытка
		Драйвер1 = Новый COMОбъект("WebCheck.ClassCardserv");
	исключение
		Сообщить("Помилка створення WebCheck.ClassCardserv");
	конецпопытки;	
	
	
	Если ЭтоTCPIPСоединение(ТипСоединения) Тогда
		номерком = IP;
		
		
	ИначеЕсли  ТипСоединения = 0  Тогда
		номерком = "com"+СТрока(Порт);
	иначе
		номерком = "demo";
		
	КонецЕсли;
	
	
	
	
	Ответ=Драйвер1.Cardserv("<?xml version=""1.0"" encoding=""UTF-8""?> <InputParameters> <Parameters  type="""+Модель+"""  dest="""+номерком+"""  method= ""getMerchantList""   merchantId = """+МерчантИД+""" /></InputParameters>");
	СтрокаXMLОтвет = Драйвер1.StatusBarXML();
	Сообщить (СтрокаXMLОтвет);
	

КонецПроцедуры



