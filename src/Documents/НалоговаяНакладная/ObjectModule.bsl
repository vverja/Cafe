#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий	

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	МассивНесогласованныхСтатусов = Новый Массив;
	МассивНесогласованныхСтатусов.Добавить(Перечисления.СтатусыНалоговыхДокументов.КПроверке);
	МассивНесогласованныхСтатусов.Добавить(Перечисления.СтатусыНалоговыхДокументов.Сформирован);
	
	ОбщегоНазначенияУТ.ИзменитьПризнакСогласованностиДокумента(
		ЭтотОбъект,
		РежимЗаписи,
		МассивНесогласованныхСтатусов);

	Если ЗначениеЗаполнено(СтатусРегистрацииВЕРНН) И СтатусРегистрацииВЕРНН <> Перечисления.СтатусыРегистрацииВЕРНННалоговыхДокументов.НеЗарегистрированВЕРНН
		И СтатусАвтокорректировки = Перечисления.СтатусыАвтокорректировкиНалоговыхДокументов.ИсправлятьТекущийДокумент Тогда
		СтатусАвтокорректировки = Перечисления.СтатусыАвтокорректировкиНалоговыхДокументов.ФормироватьПриложение2;
	КонецЕсли;

	Если СтатусАвтокорректировки = Перечисления.СтатусыАвтокорректировкиНалоговыхДокументов.ФормироватьПриложение2 Тогда
		РазрешенаАвтоКорректировка = Ложь;
	Иначе
		РазрешенаАвтоКорректировка = Истина;
	КонецЕсли;
	
	ЭтоУсловнаяПродажа = (ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.УсловнаяПродажа 
							ИЛИ ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.СводнаяУсловнаяПродажа
							ИЛИ ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.УсловнаяПродажаНеоборотныхАктивов);
	
	Если ЭтоУсловнаяПродажа
	 ИЛИ ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОблагаемыеОперации
	 ИЛИ ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.УсловнаяПродажаСписаниеОС
	 ИЛИ ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОсвобожденныеОперации Тогда
		ОчиститьВзаиморасчеты = Истина;
	Иначе
		ОчиститьВзаиморасчеты = Ложь;
	КонецЕсли;
	
	Если ЭтоУсловнаяПродажа
	 ИЛИ ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.ПродажаНижеОбычнойЦены
	 ИЛИ ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.УсловнаяПродажаСписаниеОС
	 ИЛИ ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.РаботыОтНерезидента Тогда
		ОбъектРасчетов = Неопределено;
	КонецЕсли;
	
	Если ОчиститьВзаиморасчеты Тогда
		Контрагент = Неопределено;
		Партнер = Неопределено;
		Договор = Неопределено;
		Если ТипЗнч(ОбъектРасчетов) <> Тип("ПеречислениеСсылка.СтавкиНДС") Тогда
			ОбъектРасчетов = Неопределено;
		КонецЕсли;
		ДатаДоговора = Неопределено;
		НомерДоговора = Неопределено;
		ВидДоговора = Неопределено;
	КонецЕсли;
	
	Если ЭтоУсловнаяПродажа Тогда
		Сводная = Истина;
	КонецЕсли;

	Если ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.УсловнаяПродажаСписаниеОС Тогда
		Сводная = Ложь;
	КонецЕсли;
		
	Если ЭтоУсловнаяПродажа
	 ИЛИ ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.ПродажаНижеОбычнойЦены
	 ИЛИ ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.УсловнаяПродажаСписаниеОС
	 ИЛИ ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.РаботыОтНерезидента Тогда
		Товары.Очистить();
	КонецЕсли;
	
	Если НЕ СтатусАвтокорректировки = Перечисления.СтатусыАвтокорректировкиНалоговыхДокументов.ИсправлятьТехническуюТЧ Тогда
		ТоварыПоДаннымПользователя.Очистить();
	КонецЕсли;

	ОчиститьВозвратнуюТару = Документы.НалоговаяНакладная.МассивВидовОперацийНеИспользуетсяВозвратнаяТара().Найти(ВидОперации) <> Неопределено;
	Если ОчиститьВозвратнуюТару Тогда
		СуммаВозвратнойТары = 0;
	КонецЕсли; 

	ТабличныеЧасти = Новый Массив;
	ТабличныеЧасти.Добавить("Товары");
	ТабличныеЧасти.Добавить("ТоварыПоДаннымПользователя");
	Для каждого ИмяТабличнойЧасти Из ТабличныеЧасти Цикл
		Для каждого СтрокаТовары Из ЭтотОбъект[ИмяТабличнойЧасти] Цикл
			// Это обычный товар или услуга
			Если ЗначениеЗаполнено(СтрокаТовары.Номенклатура) И ЗначениеЗаполнено(СтрокаТовары.ЕдиницаИзмерения) Тогда
				СтрокаТовары.ЕдиницаИзмерения = Неопределено;	
			КонецЕсли;
			// Это прочий актив
			Если Не ЗначениеЗаполнено(СтрокаТовары.Номенклатура) И ЗначениеЗаполнено(СтрокаТовары.Упаковка) Тогда
				СтрокаТовары.Упаковка = Неопределено;	
			КонецЕсли;
		КонецЦикла;		
	КонецЦикла;

// Для табличной части "ТоварыПоДаннымПользователя"
	НаименованиеОчищаемыхРеквизитов = Новый Массив;
	
	Если НЕ ЭтоУсловнаяПродажа Тогда
		НаименованиеОчищаемыхРеквизитов.Добавить("НалоговоеНазначение");
		НаименованиеОчищаемыхРеквизитов.Добавить("НалоговоеНазначениеПоФактуУсловнаяПродажа");
		Если НЕ ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.УсловнаяПродажаСписаниеОС Тогда
			НаименованиеОчищаемыхРеквизитов.Добавить("ОбъектЗаполненияСодержанияУсловнаяПродажа");
			НаименованиеОчищаемыхРеквизитов.Добавить("СтатьяРасходовУсловнаяПродажа");
			НаименованиеОчищаемыхРеквизитов.Добавить("АналитикаРасходовУсловнаяПродажа");
		КонецЕсли;
	КонецЕсли;

	ЭтоПродажаНижеОбычнойЦены = (ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.ПродажаНижеОбычнойЦены);
    // Реквизит ДатаОтгрузкиОплаты табличной части ТоварыПоДаннымПользователя используется 
	// при операции ПродажаНижеОбычнойЦены, если не указана основная налоговая
	Для каждого СтрокаТовары Из ТоварыПоДаннымПользователя Цикл
		Если ЗначениеЗаполнено(СтрокаТовары.ДатаОтгрузкиОплаты) И 
			(Не ЭтоПродажаНижеОбычнойЦены ИЛИ ЗначениеЗаполнено(СтрокаТовары.ОсновнаяНалоговаяПриПродажеНижеОбычнойЦены)) Тогда
			СтрокаТовары.ДатаОтгрузкиОплаты = Неопределено;	
		КонецЕсли;
		Для Каждого ЭлементМассива Из НаименованиеОчищаемыхРеквизитов Цикл
			Если ЗначениеЗаполнено(СтрокаТовары[СокрЛП(ЭлементМассива)]) Тогда
				СтрокаТовары[СокрЛП(ЭлементМассива)] = Неопределено;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;		
	
	Если ЭтоПродажаНижеОбычнойЦены Тогда
		Сводная = Истина;
	КонецЕсли;
	
	Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.Организации") Тогда
		Партнер = Справочники.Партнеры.НашеПредприятие;
	КонецЕсли;
	
	Если Не ПодтверждаетсяГТД И ЗначениеЗаполнено(НомерГТД) Тогда
		НомерГТД = Неопределено;
	КонецЕсли;
	
	Если СтатусАвтокорректировки = Перечисления.СтатусыАвтокорректировкиНалоговыхДокументов.ИсправлятьТехническуюТЧ Тогда
		СуммаДокумента = ТоварыПоДаннымПользователя.Итог("СуммаСНДС");
	Иначе
		СуммаДокумента = Товары.Итог("СуммаСНДС");
	КонецЕсли;	
	
	СписокНастроекНумерации = РегистрыСведений.НастройкаНумерацииНалоговыхДокументов.СрезПоследних(Дата, Новый Структура("Организация", Организация));
	Если НЕ СписокНастроекНумерации.Количество() = 0 тогда
		НастройкиНумерации = СписокНастроекНумерации[0];
	КонецЕсли;
	

	Если ТипПричиныНевыдачиПокупателю >= 1
		И Дата >= '2014-03-01' Тогда
		
		Если НЕ ПодтверждаетсяГТД Тогда
			ЭлектронныйДокумент = Ложь;
		КонецЕсли;
		
	    ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных = Ложь;
		
	КонецЕсли;

	// поставим флаг "Требует регистрация в реестре"
	Если Дата >= '2015-01-01' Тогда
		ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных = Истина;
		ЭлектронныйДокумент = Истина;
	ИначеЕсли ТипПричиныНевыдачиПокупателю > 0 Тогда
		// мы не управляем флажком ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных
		// для налоговых накладных, которые не выдаются покупателю
		// согласно разъяснению ЕБНЗ такие налоговые не должны регистрироваться в Едином реестре
		
	ИначеЕсли ЭлектронныйДокумент = Истина Тогда
		
		ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных = истина;	
		
		
	Иначе	
		
		ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных = Ложь;
		
		Если СтатусАвтокорректировки = Перечисления.СтатусыАвтокорректировкиНалоговыхДокументов.ИсправлятьТехническуюТЧ Тогда
			НДСРегл = ТоварыПоДаннымПользователя.Итог("СуммаНДСРегл");
		Иначе
			НДСРегл = Товары.Итог("СуммаНДСРегл");
		КонецЕсли;
		
		Если Дата >= '20120101' Тогда
			// или сумма НДС в документе больше 10 000 грн
			Если НДСРегл > 10000 Тогда
				ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных = Истина;
				
			// или имеются подакцизные/импортированные товары
			// этот факт определим так - если в строке указан код УКТЗЭД - считаем что условие выполняется.
			ИначеЕсли   Товары.НайтиСтроки(Новый Структура("НомерГТД", Справочники.НоменклатураГТД.ПустаяСсылка())).Количество() 	<> Товары.Количество() Тогда
				ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных = Истина;
			КонецЕсли;
		ИначеЕсли Дата >= '20110701' Тогда
			// сумма НДС в документе больше 100 000 грн
			Если НДСРегл > 100000 Тогда
				ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных = Истина;
			КонецЕсли;
		ИначеЕсли Дата >= '20110401' Тогда
			// сумма НДС в документе больше 500 000 грн
			Если НДСРегл > 500000 Тогда
				ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных = Истина;
			КонецЕсли;
		ИначеЕсли Дата >= '20110101' Тогда
			// сумма НДС в документе больше 1 000 000 грн
			Если НДСРегл > 1000000 Тогда
				ТребуетВключенияВЕдиныйРеестрНалоговыхНакладных = Истина;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если '2014-12-01' <= Дата  Тогда
		// уже приняли новую форму, использование в спец. режиме особого значение - не допустимо.
		Если СпецРежимНалогообложения = 7 Тогда
			СпецРежимНалогообложения = 0;
		КонецЕсли;
	Иначе	
		// еще не приняли новую форму, для НН с НДС 7% нужно в спец. режиме указывать особое занчение (7)
		Отбор = Новый Структура("СтавкаНДС", Перечисления.СтавкиНДС.НДС7);
		Если НДСИсходящийСервер.ВДокументеЕстьСтавкаНДС7(ЭтотОбъект) Тогда
			СпецРежимНалогообложения = 7;
		Иначе	
			Если СпецРежимНалогообложения = 7 Тогда
				СпецРежимНалогообложения = 0;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

    Если НДСОбщегоНазначенияПовтИсп.ДатаНачалаДействияФормыНДС14() <= Дата Тогда
    	// уже приняли новую форму для НН С НДС 14%, необходимо снять спец. реквизит НалоговаяНакладнаяПоСтавке14, если есть
    	Если НалоговаяНакладнаяПоСтавке14 Тогда
    		НалоговаяНакладнаяПоСтавке14 = Ложь;
    	КонецЕсли;
    Иначе	
    	// еще не приняли новую форму, для НН с НДС 14% необходимо установить спец. реквизит НалоговаяНакладнаяПоСтавке14
    	Отбор = Новый Структура("СтавкаНДС", Перечисления.СтавкиНДС.НДС14);
    	Если НДСИсходящийСервер.ВДокументеЕстьСтавкаНДС14(ЭтотОбъект) Тогда
    		НалоговаяНакладнаяПоСтавке14 = Истина;
    	Иначе	
    		Если НалоговаяНакладнаяПоСтавке14 Тогда
    			НалоговаяНакладнаяПоСтавке14 = Ложь;
    		КонецЕсли;
    	КонецЕсли;
    КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);

	Если ТипДанныхЗаполнения = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("ДокументОснование") И ДанныеЗаполнения.Свойство("ВидОперации") Тогда
			
			ЗаполнитьДокументНаОснованииЧекаККМ(ДанныеЗаполнения.ДокументОснование, ДанныеЗаполнения.ВидОперации);
			
		КонецЕсли;
	КонецЕсли;

	ИнициализироватьДокумент();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если СтатусАвтокорректировки = Перечисления.СтатусыАвтокорректировкиНалоговыхДокументов.ИсправлятьТехническуюТЧ Тогда
		ИмяАктивнойТЧ = "ТоварыПоДаннымПользователя";
		// Для т.ч. Товары - корректность заполнения гарантируется системой
	Иначе
		ИмяАктивнойТЧ = "Товары";
		// Т.ч. ТоварыПоДаннымПользователя будет очищена ПриЗаписи(...)
	КонецЕсли;
	ПрефиксРеквизитовНеАктивнойТЧ = ?(ИмяАктивнойТЧ = "Товары", "ТоварыПоДаннымПользователя", "Товары") + ".";
	Для каждого ИмяПроверяемогоРеквизита Из ПроверяемыеРеквизиты Цикл
		Если Лев(ИмяПроверяемогоРеквизита, СтрДлина(ПрефиксРеквизитовНеАктивнойТЧ)) = ПрефиксРеквизитовНеАктивнойТЧ Тогда
			МассивНепроверяемыхРеквизитов.Добавить(ИмяПроверяемогоРеквизита);
		КонецЕсли;
	КонецЦикла;
	ПараметрыПроверкиЗаполненияХарактеристик = НоменклатураСервер.ПараметрыПроверкиЗаполненияХарактеристик();
	ПараметрыПроверкиЗаполненияХарактеристик.ИмяТЧ = ИмяАктивнойТЧ;
	НоменклатураСервер.ПроверитьЗаполнениеХарактеристик(ЭтотОбъект, МассивНепроверяемыхРеквизитов, Отказ, ПараметрыПроверкиЗаполненияХарактеристик);

	Если ЗначениеЗаполнено(Организация) И Не НДСОбщегоНазначенияСервер.ОрганизацияКонтрагентПлательщикНДС(Организация, Дата) Тогда
		ТекстОшибки = НСтр("ru='Организация не является плательщиком НДС';uk='Організація не є платником ПДВ'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			ЭтотОбъект,
			"Организация",
			,
			Отказ
		);
	КонецЕсли;

	Если ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.УсловнаяПродажа
	 ИЛИ ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.СводнаяУсловнаяПродажа
	 ИЛИ ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.УсловнаяПродажаНеоборотныхАктивов
	 ИЛИ ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.УсловнаяПродажаСписаниеОС
	 ИЛИ ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОблагаемыеОперации
	 ИЛИ ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.ИтоговаяРозницаОсвобожденныеОперации 
	 ИЛИ ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.ПродажаНижеОбычнойЦены Тогда 
		МассивНепроверяемыхРеквизитов.Добавить("Контрагент");
		МассивНепроверяемыхРеквизитов.Добавить("Партнер");
	КонецЕсли;

	Если '2014-12-01' > Дата  Тогда
		Если НДСИсходящийСервер.ВДокументеЕстьСтавкаНДС7ИДругиеСтавки(ЭтотОбъект) Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;

    Если НДСОбщегоНазначенияПовтИсп.ДатаНачалаДействияФормыНДС14() > Дата Тогда
    	Если НДСИсходящийСервер.ВДокументеЕстьСтавкаНДС14ИДругиеСтавки(ЭтотОбъект) Тогда
    		Отказ = Истина;
    	КонецЕсли;
    КонецЕсли;

	Если Не ВключаетсяВУточняющийРасчет Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ДатаОтгрузкиОплаты");
	КонецЕсли;

	Если НЕ (ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.УсловнаяПродажа
				ИЛИ ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.СводнаяУсловнаяПродажа
				ИЛИ ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.УсловнаяПродажаНеоборотныхАктивов) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ТоварыПоДаннымПользователя.НалоговоеНазначение"); 
		МассивНепроверяемыхРеквизитов.Добавить("ТоварыПоДаннымПользователя.НалоговоеНазначениеПоФактуУсловнаяПродажа");
		Если НЕ ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.УсловнаяПродажаСписаниеОС Тогда
			МассивНепроверяемыхРеквизитов.Добавить("ТоварыПоДаннымПользователя.СтатьяРасходовУсловнаяПродажа");
			МассивНепроверяемыхРеквизитов.Добавить("ТоварыПоДаннымПользователя.АналитикаРасходовУсловнаяПродажа");
		КонецЕсли;
	ИначеЕсли ТоварыПоДаннымПользователя.Итог("СуммаНДСРегл") = ТоварыПоДаннымПользователя.Итог("СуммаНДСРеглПоРегиструУсловнаяПродажа") Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ТоварыПоДаннымПользователя.СтатьяРасходовУсловнаяПродажа");
		МассивНепроверяемыхРеквизитов.Добавить("ТоварыПоДаннымПользователя.АналитикаРасходовУсловнаяПродажа");
	КонецЕсли;
	
	Если НЕ (ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.СводнаяУсловнаяПродажа
				ИЛИ ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.УсловнаяПродажаНеоборотныхАктивов) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ТоварыПоДаннымПользователя.ОбъектЗаполненияСодержанияУсловнаяПродажа");
	КонецЕсли;

	Если Дата >= '2015-01-01' И Дата < '2016-04-01' Тогда
		Если ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.ПродажаНижеОбычнойЦены Тогда
			СуммаДокументаСНДС = ТоварыПоДаннымПользователя.Итог("СуммаСНДС");
			Если (ТипПричиныНевыдачиПокупателю = 1 ИЛИ ТипПричиныНевыдачиПокупателю = 15) И СуммаДокументаСНДС = 0 Тогда
				// разрешаем проводить
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru='Указан неверное значение реквизита ""Тип причины (01,12,15,16)"". Значение должно быть 12!';uk='У реквізита ""Тип причини (01, 12, 15, 16)"" невірне значення. Значення має бути 12!'"),
					ЭтотОбъект,
					"ТипПричиныНевыдачиПокупателю",
					,
				);
			ИначеЕсли ТипПричиныНевыдачиПокупателю = 12 И СуммаДокументаСНДС <> 0 Тогда
				// разрешаем проводить
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru='Указан неверное значение реквизита ""Тип причины (01,12,15,16)"". Значение должно быть 1 или 15!';uk='Вказано невірне значення реквізиту ""Тип причини (01,12,15,16)"". Значення повинно бути 1 або 15!'"),
					ЭтотОбъект,
					"ТипПричиныНевыдачиПокупателю",
					,
				);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты,МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	Документы.НалоговаяНакладная.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	
	НДСИсходящийСервер.ОтразитьНДСНоменклатурныйСоставДляНалоговыхНакладных(ДополнительныеСвойства, Движения, Отказ);
	
	НДСИсходящийСервер.ОтразитьНДСРеестрВыданныхНалоговыхДокументов(ДополнительныеСвойства, Движения, Отказ);
	
	НДСИсходящийСервер.ОтразитьНДСУсловныеПродажи(ДополнительныеСвойства, Движения, Отказ);
	
	

	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);


	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);


	
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Согласован             = Ложь;
	Статус                 = Перечисления.СтатусыНалоговыхДокументов.КПроверке;
	СтатусВыдачиПокупателю = Перечисления.СтатусыВыдачиПокупателюНалоговыхДокументов.НеВыданПокупателю;
	СтатусРегистрацииВЕРНН = Перечисления.СтатусыРегистрацииВЕРНННалоговыхДокументов.НеЗарегистрированВЕРНН;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияИЗаполнение

Процедура ЗаполнитьДокументНаОснованииЧекаККМ(Знач ДокументОснование, Знач ВидОперации)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЧекККМ.Ссылка КАК ДокументОснование,
	|	ЧекККМ.Дата КАК Дата,
	|	ЧекККМ.Валюта КАК Валюта,
	|	ЧекККМ.Организация КАК Организация,
	|	ЧекККМ.КартаЛояльности.Партнер КАК Партнер,
	|	ЧекККМ.КартаЛояльности.Контрагент КАК Контрагент,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыНалоговыхДокументов.КПроверке) КАК Статус,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыАвтокорректировкиНалоговыхДокументов.ИсправлятьТекущийДокумент) КАК СтатусАвтокорректировки,
	|	ЧекККМ.СуммаДокумента КАК СуммаДокумента,
	|	&ВидОперации КАК ВидОперации,
	|	ОтчетОРозничныхПродажах.Ссылка КАК ДокументПоставки
	|ИЗ
	|	Документ.ЧекККМ КАК ЧекККМ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|		ПО ЧекККМ.КассоваяСмена = ОтчетОРозничныхПродажах.КассоваяСмена
	|			И (ОтчетОРозничныхПродажах.Проведен)
	|ГДЕ
	|	ЧекККМ.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Упаковка КАК Упаковка,
	|	Товары.КоличествоУпаковок КАК КоличествоУпаковок,
	|	Товары.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА Товары.КоличествоУпаковок <> 0
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Ссылка.ЦенаВключаетНДС
	|						ТОГДА Товары.Сумма - Товары.СуммаНДС
	|					ИНАЧЕ Товары.Сумма
	|				КОНЕЦ / Товары.КоличествоУпаковок
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Цена,
	|	ВЫБОР
	|		КОГДА Товары.Ссылка.ЦенаВключаетНДС
	|			ТОГДА Товары.Сумма - Товары.СуммаНДС
	|		ИНАЧЕ Товары.Сумма
	|	КОНЕЦ КАК СуммаБезНДС,
	|	Товары.СтавкаНДС КАК СтавкаНДС,
	|	Товары.СуммаНДС КАК СуммаНДС,
	|	ВЫБОР
	|		КОГДА Товары.Ссылка.ЦенаВключаетНДС
	|			ТОГДА Товары.Сумма
	|		ИНАЧЕ Товары.Сумма + Товары.СуммаНДС
	|	КОНЕЦ КАК СуммаСНДС
	|ИЗ
	|	Документ.ЧекККМ.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|	И (&ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОблагаемыеОперации)
    |				И Товары.СтавкаНДС В (ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС14), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС7), ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0))
	|			ИЛИ &ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОсвобожденныеОперации)
	|				И Товары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ОплатаПлатежнымиКартами.Сумма), 0) КАК Сумма
	|ИЗ
	|	Документ.ЧекККМ.ОплатаПлатежнымиКартами КАК ОплатаПлатежнымиКартами
	|ГДЕ
	|	ОплатаПлатежнымиКартами.Ссылка = &ДокументОснование";

	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("ВидОперации", ВидОперации);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	ШапкаЧекаККМ      = РезультатыЗапроса[0].Выбрать();
	ТоварыЧекаККМ     = РезультатыЗапроса[1].Выгрузить();
	БезналичнаяОплата = РезультатыЗапроса[2].Выбрать();
	
	ШапкаЧекаККМ.Следующий();
	
	// Заполнение шапки
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ШапкаЧекаККМ);
	
	Договор = ПродажиСервер.ПолучитьДоговорПоУмолчанию(
		ЭтотОбъект,
		,//ХозяйственнаяОперацияДоговора
		Валюта
	);
	
	НаправленияДеятельностиСервер.ЗаполнитьНаправлениеПоУмолчанию(НаправлениеДеятельности, , Договор);

	ФормаРасчетов = "";
	СуммаБезналичнойОплаты = 0;
	Если БезналичнаяОплата.Следующий() Тогда
		СуммаБезналичнойОплаты = БезналичнаяОплата.Сумма;
	КонецЕсли;	
	Если СуммаБезналичнойОплаты > 0 Тогда
		ФормаРасчетов = "Безготівковий розрахунок";
	КонецЕсли;
	Если ШапкаЧекаККМ.СуммаДокумента - СуммаБезналичнойОплаты > 0 Тогда		
		Если ФормаРасчетов = "" Тогда
			ФормаРасчетов = "Готівка";
		Иначе
			ФормаРасчетов = ФормаРасчетов + ", готівка";
		КонецЕсли; 
	КонецЕсли;
	
	Товары.Загрузить(ТоварыЧекаККМ);	
	Для каждого ТекущаяСтрока Из Товары Цикл
		Документы.НалоговаяНакладная.ЗаполнитьСтатьюДекларацииНДСНалоговыеОбязательства(ЭтотОбъект, ТекущаяСтрока.СтатьяДекларацииНДСНалоговыеОбязательства, ТекущаяСтрока.СтавкаНДС);
		НДСИсходящийСервер.ЗаполнитьНоменклатуруГТДПоУмолчанию(ТекущаяСтрока);
		ТекущаяСтрока.ДокументПоставки = ШапкаЧекаККМ.ДокументПоставки;
	КонецЦикла;
	
	Документы.НалоговаяНакладная.ЗаполнитьСуммыРеглВТабличныхЧастях(ЭтотОбъект);
	
	Документы.НалоговаяНакладная.ОбновитьЗначениеЛьготыНДС(ВидОперации, ЛьготаНДС, , Товары.Выгрузить().ВыгрузитьКолонку("Номенклатура"));		
	
	Документы.НалоговаяНакладная.УстановитьТипПричиныНевыдачиПокупателюПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

Процедура ИнициализироватьДокумент()
	
	Валюта = НДСОбщегоНазначенияСервер.ПолучитьВалютуРегламентированногоУчета(Валюта);
	
	Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию(Организация);
	
	ОбособленноеПодразделение = НДСИсходящийСервер.ОпределитьОбособленноеПодразделениеПоУмолчанию(
		Организация, 
		Договор
	);
	
	КтоВыписалНалоговуюНакладную = НДСИсходящийСервер.ОпределитьОтветственногоЗаВыпискуНалоговыхДокументов(
		Организация, 
		Договор
	);

	Если ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОблагаемыеОперации
	 ИЛИ ВидОперации = Перечисления.ВидыОперацийНалоговыхДокументов.РозницаКонрагентуОсвобожденныеОперации Тогда
	 	Если Не ЗначениеЗаполнено(Партнер) Тогда
			Партнер = Справочники.Партнеры.РозничныйПокупатель;
		КонецЕсли;	
	КонецЕсли;


КонецПроцедуры


#КонецОбласти

#Область Прочее


Процедура ЗаполнитьРеквизитыПослеАвтоформирования(ЭтоНовыйОбъект = Истина) Экспорт
	
	Если ЭтоНовыйОбъект Тогда
		
		Если СтатусВыдачиПокупателю = Перечисления.СтатусыВыдачиПокупателюНалоговыхДокументов.ВыданПокупателю Тогда
			СтатусВыдачиПокупателю = Перечисления.СтатусыВыдачиПокупателюНалоговыхДокументов.ПодлежитПовторнойВыдаче;
		Иначе
			СтатусВыдачиПокупателю = Перечисления.СтатусыВыдачиПокупателюНалоговыхДокументов.НеВыданПокупателю;
		КонецЕсли;
		
		СтатусРегистрацииВЕРНН = Перечисления.СтатусыРегистрацииВЕРНННалоговыхДокументов.НеЗарегистрированВЕРНН;
		
	КонецЕсли;
	
	
	КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
	КоличествоСтрок = Товары.Количество();
	
	Для Ин=1 по КоличествоСтрок Цикл
		
		СтрокаТовары = Товары[КоличествоСтрок - Ин];
		
		Если СтрокаТовары.КоличествоУпаковок = 0 И СтрокаТовары.СуммаСНДС = 0 Тогда
			Товары.Удалить(СтрокаТовары);
			Продолжить;
		КонецЕсли;

		Если ЗначениеЗаполнено(СтрокаТовары.ДокументПоставки) И СтрокаТовары.НеПересчитыватьСумму Тогда
			СтрокаТовары.НеПересчитыватьСумму = Ложь;
		КонецЕсли; 
		
		ПроцентНДС = НДСОбщегоНазначенияКлиентСервер.ПолучитьСтавкуНДСЧислом(СтрокаТовары.СтавкаНДС);
		СтрокаТовары.СуммаНДС = ЦенообразованиеКлиентСервер.РассчитатьСуммуНДС(СтрокаТовары.СуммаСНДС, ПроцентНДС, Истина);
		
		СтрокаТовары.СуммаБезНДС = СтрокаТовары.СуммаСНДС - СтрокаТовары.СуммаНДС;
		
		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
		НДСИсходящийСервер.ОбработатьСтрокуТЧ(СтрокаТовары, СтруктураДействий, КэшированныеЗначения);
		
		Если НЕ ЗначениеЗаполнено(СтрокаТовары.СтатьяДекларацииНДСНалоговыеОбязательства) Тогда
			Документы.НалоговаяНакладная.ЗаполнитьСтатьюДекларацииНДСНалоговыеОбязательства(ЭтотОбъект, СтрокаТовары.СтатьяДекларацииНДСНалоговыеОбязательства, СтрокаТовары.СтавкаНДС);
		КонецЕсли;
		
		Если ЭтоНовыйОбъект ИЛИ НЕ ЗначениеЗаполнено(СтрокаТовары.КодНоменклатурыПоКлассификатору) Тогда
			НДСИсходящийСервер.ЗаполнитьНоменклатуруГТДПоУмолчанию(СтрокаТовары);
		КонецЕсли;
		
	КонецЦикла;
		

	Если НЕ ЗначениеЗаполнено(СтатусАвтокорректировки) Тогда
		СтатусАвтокорректировки = Перечисления.СтатусыАвтокорректировкиНалоговыхДокументов.ИсправлятьТекущийДокумент;
	КонецЕсли;

	Если  ЭтоНовыйОбъект Тогда
		


		Документы.НалоговаяНакладная.УстановитьТипПричиныНевыдачиПокупателюПоУмолчанию(ЭтотОбъект);
		
		Если ТипПричиныНевыдачиПокупателю = 7 Тогда
			ДатаОтгрузкиОплаты = Дата;
		КонецЕсли;
		
		Документы.НалоговаяНакладная.ОбновитьЗначениеЛьготыНДС(ВидОперации, ЛьготаНДС, , Товары.ВыгрузитьКолонку("Номенклатура"));
		
		ОбособленноеПодразделение = НДСИсходящийСервер.ОпределитьОбособленноеПодразделениеПоУмолчанию(
			Организация, 
			Договор
		);
		
		КтоВыписалНалоговуюНакладную = НДСИсходящийСервер.ОпределитьОтветственногоЗаВыпискуНалоговыхДокументов(
			Организация, 
			Договор
		);

	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоАвтоформирование", Истина);
		
	Если ЗначениеЗаполнено(ДатаОтгрузкиОплаты) И (НачалоМесяца(ДатаОтгрузкиОплаты) <> НачалоМесяца(Дата)) Тогда
		ВключаетсяВУточняющийРасчет = Истина;
	КонецЕсли;
	
	Документы.НалоговаяНакладная.ЗаполнитьСуммыРеглВТабличныхЧастях(ЭтотОбъект, "Товары");
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыПослеФормированияПоУсловнымПродажам() Экспорт
	
	Валюта = НДСОбщегоНазначенияСервер.ПолучитьВалютуРегламентированногоУчета(Валюта);
	
	ОбособленноеПодразделение = НДСИсходящийСервер.ОпределитьОбособленноеПодразделениеПоУмолчанию(
		Организация, 
		Договор
	);
	
	КтоВыписалНалоговуюНакладную = НДСИсходящийСервер.ОпределитьОтветственногоЗаВыпискуНалоговыхДокументов(
		Организация, 
		Договор
	);
	
	

	КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
	
	КоличествоСтрок = ТоварыПоДаннымПользователя.Количество();
	
	Для Ин=1 по КоличествоСтрок Цикл
		
		СтрокаТовары = ТоварыПоДаннымПользователя[КоличествоСтрок - Ин];
		
		СтрокаТовары.СуммаСНДС = СтрокаТовары.СуммаБезНДС + СтрокаТовары.СуммаНДС;
		
		СтрокаТовары.Упаковка = ПодборТоваровВызовСервера.ПолучитьУпаковкуХранения(СтрокаТовары.Номенклатура);
		
		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ПересчитатьКоличествоУпаковок");
		СтруктураДействий.Вставить("ПересчитатьЦенуСкидкуПоСуммеВПродажах", ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаЦеныСкидкиВПродажахВТЧ(ЭтотОбъект, Истина));
		НДСИсходящийСервер.ОбработатьСтрокуТЧ(СтрокаТовары, СтруктураДействий, КэшированныеЗначения);
		
		Если НЕ ЗначениеЗаполнено(СтрокаТовары.СтатьяДекларацииНДСНалоговыеОбязательства) Тогда
			Документы.НалоговаяНакладная.ЗаполнитьСтатьюДекларацииНДСНалоговыеОбязательства(ЭтотОбъект, СтрокаТовары.СтатьяДекларацииНДСНалоговыеОбязательства, СтрокаТовары.СтавкаНДС);
		КонецЕсли;
		
		НДСИсходящийСервер.ЗаполнитьНоменклатуруГТДПоУмолчанию(СтрокаТовары, Ложь);
		
		Если НЕ ЗначениеЗаполнено(СтрокаТовары.Номенклатура) Тогда
			Документы.НалоговаяНакладная.ЗаполнитьСодержаниеДляУсловнойПродажи(СтрокаТовары.ОбъектЗаполненияСодержанияУсловнаяПродажа, СтрокаТовары.Содержание);
		КонецЕсли;
		
	КонецЦикла;
	
	
	Если НЕ ЗначениеЗаполнено(СтатусАвтокорректировки) Тогда
		СтатусАвтокорректировки = Перечисления.СтатусыАвтокорректировкиНалоговыхДокументов.ИсправлятьТехническуюТЧ;
	КонецЕсли;
	
  	Если Не ЗначениеЗаполнено(ТипПричиныНевыдачиПокупателю) Тогда
		Документы.НалоговаяНакладная.УстановитьТипПричиныНевыдачиПокупателюПоУмолчанию(ЭтотОбъект);
	КонецЕсли;                 

	Документы.НалоговаяНакладная.ЗаполнитьСуммыРеглВТабличныхЧастях(ЭтотОбъект, "ТоварыПоДаннымПользователя");

КонецПроцедуры

Процедура ЗаполнитьСпецРежимНалогообложения() Экспорт

	Если '2014-12-01'<= Дата Тогда
		// уже приняли новую форму НН С НДС 7%, использование в спец. режиме особого значения - не допустимо.
		Если СпецРежимНалогообложения = 7 Тогда
			СпецРежимНалогообложения = 0;
		КонецЕсли;
	Иначе	
		// еще не приняли новую форму, для НН с НДС 7% нужно в спец. режиме указывать особое значение (7)
		Отбор = Новый Структура("СтавкаНДС", Перечисления.СтавкиНДС.НДС7);
		Если НДСИсходящийСервер.ВДокументеЕстьСтавкаНДС7(ЭтотОбъект) Тогда
			СпецРежимНалогообложения = 7;
		Иначе	
			Если СпецРежимНалогообложения = 7 Тогда
				СпецРежимНалогообложения = 0;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

    Если НДСОбщегоНазначенияПовтИсп.ДатаНачалаДействияФормыНДС14() <= Дата Тогда
    	// уже приняли новую форму для НН С НДС 14%, необходимо снять спец. реквизит НалоговаяНакладнаяПоСтавке14, если есть
    	Если НалоговаяНакладнаяПоСтавке14 Тогда
    		НалоговаяНакладнаяПоСтавке14 = Ложь;
    	КонецЕсли;
    Иначе	
    	// еще не приняли новую форму, для НН с НДС 14% необходимо установить спец. реквизит НалоговаяНакладнаяПоСтавке14
    	Отбор = Новый Структура("СтавкаНДС", Перечисления.СтавкиНДС.НДС14);
    	Если НДСИсходящийСервер.ВДокументеЕстьСтавкаНДС14(ЭтотОбъект) Тогда
    		НалоговаяНакладнаяПоСтавке14 = Истина;
    	Иначе	
    		Если НалоговаяНакладнаяПоСтавке14 Тогда
    			НалоговаяНакладнаяПоСтавке14 = Ложь;
    		КонецЕсли;
    	КонецЕсли;
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли