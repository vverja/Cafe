#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область Обеспечение

// Получает оформленное накладными по заказам количество.
//
// Параметры:
//  ТаблицаОтбора - ТаблицаЗначений - Таблица с полями "Ссылка" и "КодСтроки", строки должны быть уникальными.
//
// Возвращаемое значение:
//  ТаблицаЗначений - Таблица с полями "Ссылка", "КодСтроки", "Количество". Для каждой пары Заказ-КодСтроки содержит
//                    оформленное накладными количество.
//
Функция ТаблицаОформлено(ТаблицаОтбора) Экспорт

	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Таблица.Ссылка    КАК Ссылка,
		|	Таблица.КодСтроки КАК КодСтроки
		|ПОМЕСТИТЬ ВтОтбор
		|ИЗ
		|	&ТаблицаОтбора КАК Таблица
		|ГДЕ
		|	Таблица.КодСтроки > 0
		|;
		|
		|//////////////////////////////////
		|ВЫБРАТЬ
		|	Отбор.КодСтроки КАК КодСтроки,
		|	Отбор.Ссылка    КАК Ссылка,
		|	МАКСИМУМ(РегистрЗаказы.Номенклатура)   КАК Номенклатура,
		|	МАКСИМУМ(РегистрЗаказы.Характеристика) КАК Характеристика,
		|	МАКСИМУМ(РегистрЗаказы.Склад)          КАК Склад,
		|	МАКСИМУМ(РегистрЗаказы.Серия)          КАК Серия,
		|
		|	СУММА(ВЫБОР КОГДА РегистрЗаказы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) ТОГДА
		|				РегистрЗаказы.КОформлению
		|			ИНАЧЕ
		|				0
		|		КОНЕЦ)           КАК Количество,
		|	СУММА(ВЫБОР КОГДА РегистрЗаказы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) ТОГДА
		|				РегистрЗаказы.КОформлению
		|			ИНАЧЕ
		|				0
		|		КОНЕЦ)           КАК КоличествоПриход,
		|	СУММА(ВЫБОР КОГДА РегистрЗаказы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			И РегистрЗаказы.КОформлению < 0 И НЕ Расхождения.Ссылка ЕСТЬ NULL ТОГДА
		|				- РегистрЗаказы.КОформлению
		|			ИНАЧЕ
		|				0
		|		КОНЕЦ)           КАК КоличествоКорректировка
		|ИЗ
		|	ВтОтбор КАК Отбор
		|
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыКлиентов КАК РегистрЗаказы
		|		ПО РегистрЗаказы.ЗаказКлиента = Отбор.Ссылка
		|		 И РегистрЗаказы.КодСтроки = Отбор.КодСтроки
		|		 И РегистрЗаказы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|		 И РегистрЗаказы.КОформлению <> 0
		|		 И РегистрЗаказы.Активность
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Расхождения КАК Расхождения
		|		ПО Расхождения.Ссылка = РегистрЗаказы.Регистратор
		|		 И Расхождения.ЗаказКлиента = РегистрЗаказы.ЗаказКлиента
		|		 И Расхождения.КодСтроки = РегистрЗаказы.КодСтроки
		|		 И Расхождения.ВариантОтражения
		|			= ЗНАЧЕНИЕ(Перечисление.ВариантыОтраженияКорректировокРеализаций.УменьшитьРеализациюУчестьПриИнвентаризации)
		|СГРУППИРОВАТЬ ПО
		|	Отбор.Ссылка, Отбор.КодСтроки";

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТаблицаОтбора", ТаблицаОтбора);
	УстановитьПривилегированныйРежим(Истина);
	Таблица = Запрос.Выполнить().Выгрузить();
	УстановитьПривилегированныйРежим(Ложь);
	Таблица.Индексы.Добавить("Ссылка, КодСтроки");

	Возврат Таблица;

КонецФункции

//Возвращает текст запроса заказанного количества из заказов, согласно отборам компоновки.
//Строки заказов с вариантами обеспечения Отгрузить и Отгрузить обособленно не учитываются.
//Текст запроса используется в обработке "Состояние обеспечения" для получения заказанного по заказам количества.
//
//Параметры:
//	ЕстьФильтр - Булево - Признак, определяющий необходимость предварительной фильтрации выборки по заказам,
//	                      передаваемым параметром "Заказы",
//	ПолучатьНесогласованные - Булево - Признак, определяющий, нужно ли учитывать заказы в статусе "Не согласован".
//
//Возвращаемое значение:
//	Строка - Текст запроса.
//
Функция ТекстЗапросаЗаказовКОбеспечению(ЕстьФильтр, ПолучатьНесогласованные) Экспорт

	ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Т.ЗаказКлиента          КАК Заказ,
		|	Т.КодСтроки             КАК КодСтроки,
		|	Т.ЗаказаноПриход - Т.КОформлениюПриход КАК Количество
		|ПОМЕСТИТЬ ВтРегистрЗаказыКлиентов
		|ИЗ
		|	РегистрНакопления.ЗаказыКлиентов.ОстаткиИОбороты(,,,,
		|		{Склад.* КАК Склад,
		|		ЗаказКлиента.* КАК Заказ}
		|		Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга) И ЗаказКлиента В (&Заказы)) КАК Т
		|ГДЕ
		|	Т.ЗаказаноПриход - Т.КОформлениюПриход > 0";

	Если ПолучатьНесогласованные И ПравоДоступа("Чтение", Метаданные.Документы.ЗаказКлиента) Тогда

		ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";

		ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Т.Ссылка       КАК Заказ,
			|	Т.КодСтроки    КАК КодСтроки,
			|	Т.Количество   КАК Количество
			|ИЗ
			|	Документ.ЗаказКлиента.Товары КАК Т
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК Документ
			|		ПО Т.Ссылка = Документ.Ссылка
			|		И Документ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.НеСогласован)
			|		И Документ.Проведен
			|		И НЕ Т.Отменено
			|		И Т.Номенклатура.ТипНоменклатуры В(
			|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
			|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара),
			|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			|		И Т.Ссылка В (&Заказы)
			|{ГДЕ
			|	Т.Склад.* КАК Склад, Т.Ссылка.* КАК Заказ}";

	КонецЕсли;

	Если ПолучатьНесогласованные И ПравоДоступа("Чтение", Метаданные.Документы.ЗаявкаНаВозвратТоваровОтКлиента) Тогда

		ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";

		ТекстЗапроса = ТекстЗапроса + "

			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Т.Ссылка       КАК Заказ,
			|	Т.КодСтроки    КАК КодСтроки,
			|	Т.Количество   КАК Количество
			|ИЗ
			|	Документ.ЗаявкаНаВозвратТоваровОтКлиента.ЗаменяющиеТовары КАК Т
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК Документ
			|		ПО Т.Ссылка = Документ.Ссылка
			|		И Документ.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.НеСогласована)
			|		И Документ.Проведен
			|		И НЕ Т.Отменено
			|		И Т.Номенклатура.ТипНоменклатуры В(
			|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
			|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара),
			|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			|		И Т.Ссылка В (&Заказы)
			|{ГДЕ
			|	Т.Ссылка.Склад.* КАК Склад, Т.Ссылка.* КАК Заказ}";

	КонецЕсли;

	Если Не ЕстьФильтр Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, " И ЗаказКлиента В (&Заказы)", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И Т.Ссылка В (&Заказы)", "");
	КонецЕсли;

	ТекстЗапроса = ТекстЗапроса + "
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Заказ, КодСтроки
		|;
		|
		|////////////////////////////////////////////
		|";

	Возврат ТекстЗапроса;

КонецФункции

//Возвращает текст запроса заказов, согласно отборам компоновки.
//Строки заказов с вариантами обеспечения Отгрузить и Отгрузить обособленно не учитываются.
//Учитываются только товары и тара.
//Текст запроса используется в обработке "Состояние обеспечения" для получения заказов,
//содержащих указанную номенклатуру на указанном складе.
//
//Параметры:
//	ПолучатьНесогласованные - Булево - Признак, определяющий, нужно ли учитывать заказы в статусе "Не согласован".
//
//Возвращаемое значение:
//	Строка - Текст запроса.
//
Функция ТекстЗапросаЗаказовНоменклатуры(ПолучатьНесогласованные) Экспорт

	ТекстЗапроса =
		"ВЫБРАТЬ
		|	Т.ЗаказКлиента КАК Заказ
		|ИЗ
		|	РегистрНакопления.ЗаказыКлиентов.ОстаткиИОбороты(,,,,
		|		Номенклатура.ТипНоменклатуры В(
		|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
		|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара),
		|			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
		|		{Склад.* КАК Склад, Номенклатура.* КАК Номенклатура}) КАК Т
		|ГДЕ
		|	Т.ЗаказаноПриход - Т.КОформлениюПриход > 0";

	Если ПолучатьНесогласованные Тогда

		ТекстЗапроса = ТекстЗапроса + "
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|";

		ТекстЗапроса = ТекстЗапроса + "
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Т.Ссылка       КАК Заказ
			|ИЗ
			|	Документ.ЗаказКлиента.Товары КАК Т
			|ГДЕ
			|	Т.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовКлиентов.НеСогласован)
			|	И Т.Ссылка.Проведен
			|	И НЕ Т.Отменено
			|	И Т.ВариантОбеспечения <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется)
			|	И Т.Номенклатура.ТипНоменклатуры В(
			|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
			|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара),
			|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			|{ГДЕ
			|	Т.Склад.* КАК Склад, Т.Номенклатура.* КАК Номенклатура}
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Т.Ссылка       КАК Заказ
			|ИЗ
			|	Документ.ЗаявкаНаВозвратТоваровОтКлиента.ЗаменяющиеТовары КАК Т
			|ГДЕ
			|	Т.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаВозвратТоваровОтКлиентов.НеСогласована)
			|	И Т.Ссылка.Проведен
			|	И НЕ Т.Отменено
			|	И Т.ВариантОбеспечения <> ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.НеТребуется)
			|	И Т.Номенклатура.ТипНоменклатуры В(
			|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
			|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара),
			|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
			|{ГДЕ
			|	Т.Ссылка.Склад.* КАК Склад, Т.Номенклатура.* КАК Номенклатура}";

	КонецЕсли;

	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы


Процедура ИсправитьДвижения_ДанныеДляОбновления(Параметры) Экспорт
	
	ИмяРегистра       = "ЗаказыКлиентов";
	ПолноеИмяРегистра = "РегистрНакопления." + ИмяРегистра;
	
#Область ЗаказКлиента
	ТекстЗапросаАдаптированный = Документы.ЗаказКлиента.АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
	Регистраторы = ОбновлениеИнформационнойБазыУТ.РегистраторыДляПерепроведения(
        ТекстЗапросаАдаптированный,
		ПолноеИмяРегистра,
		"Документ.ЗаказКлиента"
    );
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
    
    Документы.ЗаказКлиента.ИсправлениеДвиженийЗаказыКлиентовЗарегистрироватьДанныеДляКОбработке(Параметры);
#КонецОбласти

#Область ЗаявкаНаВозвратТоваровОтКлиента
	ТекстЗапросаАдаптированный = Документы.ЗаявкаНаВозвратТоваровОтКлиента.АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
	Регистраторы = ОбновлениеИнформационнойБазыУТ.РегистраторыДляПерепроведения(
        ТекстЗапросаАдаптированный,
		ПолноеИмяРегистра,
		"Документ.ЗаявкаНаВозвратТоваровОтКлиента"
    );
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
    
    Документы.ЗаявкаНаВозвратТоваровОтКлиента.ИсправлениеДвиженийЗаказыКлиентовЗарегистрироватьДанныеДляКОбработке(Параметры);
#КонецОбласти
	
#Область РеализацияТоваровУслуг
	ТекстЗапросаАдаптированный = Документы.РеализацияТоваровУслуг.АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
	Регистраторы = ОбновлениеИнформационнойБазыУТ.РегистраторыДляПерепроведения(
        ТекстЗапросаАдаптированный,
		ПолноеИмяРегистра,
		"Документ.РеализацияТоваровУслуг"
    );
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, Регистраторы, ПолноеИмяРегистра);
#КонецОбласти

	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаказыКлиентов.Регистратор КАК Ссылка
	|ИЗ
	|	РегистрНакопления.ЗаказыКлиентов КАК ЗаказыКлиентов
	|ГДЕ
	|	ЗаказыКлиентов.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
	|	И ЗаказыКлиентов.Регистратор.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРеализацийТоваровУслуг.Отгружено)
	|	И ЗаказыКлиентов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ЗаказыКлиентов.Заказано = 0
	|	И ЗаказыКлиентов.КОформлению <> 0
	|	И ЗаказыКлиентов.КодСтроки <> 0
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ТЧДокумента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаказКлиента.Товары КАК ТЧДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаказКлиента КАК ШапкаДокумента
	|	ПО ТЧДокумента.Ссылка = ШапкаДокумента.Ссылка
	|ГДЕ
	|	ТЧДокумента.СтатусУказанияСерий = 10
	|	И ТЧДокумента.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	ИЛИ (ТЧДокумента.СтатусУказанияСерий В (11, 15) 
	|	И ТЧДокумента.ВариантОбеспечения В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить), ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)))
	|	И ШапкаДокумента.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ 
	|	ТЧДокумента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ЗаявкаНаВозвратТоваровОтКлиента.ЗаменяющиеТовары КАК ТЧДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаявкаНаВозвратТоваровОтКлиента КАК ШапкаДокумента
	|	ПО ТЧДокумента.Ссылка = ШапкаДокумента.Ссылка
	|ГДЕ
	|	ТЧДокумента.СтатусУказанияСерий = 10
	|	И ТЧДокумента.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	ИЛИ (ТЧДокумента.СтатусУказанияСерий В (11, 15) 
	|	И ТЧДокумента.ВариантОбеспечения В (ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.Отгрузить), ЗНАЧЕНИЕ(Перечисление.ВариантыОбеспечения.ОтгрузитьОбособленно)))
	|	И ШапкаДокумента.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТЧДокумента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК ТЧДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК ШапкаДокумента
	|	ПО ТЧДокумента.Ссылка = ШапкаДокумента.Ссылка
	|ГДЕ
	|	ТЧДокумента.СтатусУказанияСерий = 10
	|	И ТЧДокумента.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И ШапкаДокумента.Проведен";
	
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(
		Параметры,
		Регистраторы,
		"РегистрНакопления.ЗаказыКлиентов"
    );
        
		
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.3
Процедура ИсправитьДвижения(Параметры) Экспорт
	
	Регистраторы = Новый Массив;
	Регистраторы.Добавить("Документ.ЗаказКлиента");
	Регистраторы.Добавить("Документ.ЗаявкаНаВозвратТоваровОтКлиента");
	Регистраторы.Добавить("Документ.РеализацияТоваровУслуг");
	
	ОбработкаЗавершена = ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
        Регистраторы,
	    "РегистрНакопления.ЗаказыКлиентов",
	    Параметры.Очередь
    );
	
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
	
КонецПроцедуры



#КонецОбласти

#КонецОбласти

#КонецЕсли