#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт


	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);


КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.ОтчетОРозничныхПродажах) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ОтчетОРозничныхПродажах.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.ОтчетОРозничныхПродажах);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьРозничныеПродажи";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуОстаткиТоваровОрганизаций(КомандыОтчетов);

КонецПроцедуры


#Область Серии

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад,Дата";
	
	Возврат ИменаРеквизитов;
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение
//			Тип Структура
//				Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ОтчетОРозничныхПродажах";
	
	ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Склад, Истина);
	
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтгрузкаВРозницу);
	
	Если СкладыСервер.ИспользоватьСкладскиеПомещения(Объект.Склад) Тогда
		ПараметрыУказанияСерий.ПоляСвязи.Добавить("Помещение");
	КонецЕсли;
	
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;
	ПараметрыУказанияСерий.ПланированиеОтгрузки = Ложь;
	ПараметрыУказанияСерий.ФактОтбора = Истина;
	ПараметрыУказанияСерий.Дата = Объект.Дата;
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("ВидВозвратаЧерезКассу");
	
	Возврат ПараметрыУказанияСерий;
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий (С помещениями)
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийСПомещениями()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Помещение,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.ВидВозвратаЧерезКассу,
	|	Товары.Серия,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Помещение,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.ВидВозвратаЧерезКассу,
	|	ВЫБОР
	|		КОГДА Товары.ВидВозвратаЧерезКассу = ЗНАЧЕНИЕ(Перечисление.ВидыВозвратовЧерезКассу.ВозвратНеЭтойСмены)
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КоэффициентВозврат,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Помещение,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.ВидВозвратаЧерезКассу,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Помещение,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.ВидВозвратаЧерезКассу,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Помещение,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.ВидВозвратаЧерезКассу,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Помещение,
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.ВидВозвратаЧерезКассу
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА &ТолькоСерииДляСебестоимости
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА (ТоварыДляЗапроса.Количество * ТоварыДляЗапроса.КоэффициентВозврат) = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И (ТоварыДляЗапроса.Количество * ТоварыДляЗапроса.КоэффициентВозврат) > 0
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO
	|						ТОГДА ВЫБОР
	|								КОГДА (ТоварыДляЗапроса.Количество * ТоварыДляЗапроса.КоэффициентВозврат) = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И (ТоварыДляЗапроса.Количество * ТоварыДляЗапроса.КоэффициентВозврат) > 0
	|									ТОГДА 6
	|								ИНАЧЕ 5
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА (ТоварыДляЗапроса.Количество * ТоварыДляЗапроса.КоэффициентВозврат) = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И (ТоварыДляЗапроса.Количество * ТоварыДляЗапроса.КоэффициентВозврат) > 0
	|								ТОГДА 8
	|							ИНАЧЕ 7
	|						КОНЕЦ
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПоФактуОтбора
	|				И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеВРозницу
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА (ТоварыДляЗапроса.Количество * ТоварыДляЗапроса.КоэффициентВозврат) = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И (ТоварыДляЗапроса.Количество * ТоварыДляЗапроса.КоэффициентВозврат) > 0
	|									ТОГДА 4
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА (ТоварыДляЗапроса.Количество * ТоварыДляЗапроса.КоэффициентВозврат) = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И (ТоварыДляЗапроса.Количество * ТоварыДляЗапроса.КоэффициентВозврат) > 0
	|								ТОГДА 2
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.ВидВозвратаЧерезКассу = СерииДляЗапроса.ВидВозвратаЧерезКассу
	|				И ТоварыДляЗапроса.Помещение = СерииДляЗапроса.Помещение
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|				ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|			ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.ВидВозвратаЧерезКассу = ТоварыДляЗапроса.ВидВозвратаЧерезКассу
	|			И Товары.Помещение = ТоварыДляЗапроса.Помещение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий (Без помещений)
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерийБезПомещений()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.ВидВозвратаЧерезКассу,
	|	Товары.Серия,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.ВидВозвратаЧерезКассу,
	|	ВЫБОР
	|		КОГДА Товары.ВидВозвратаЧерезКассу = ЗНАЧЕНИЕ(Перечисление.ВидыВозвратовЧерезКассу.ВозвратНеЭтойСмены)
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КоэффициентВозврат,
	|	СУММА(Товары.Количество) КАК Количество,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ТоварыДляЗапроса
	|ИЗ
	|	Товары КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.ВидВозвратаЧерезКассу,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.ВидВозвратаЧерезКассу,
	|	Серии.Количество
	|ПОМЕСТИТЬ Серии
	|ИЗ
	|	&Серии КАК Серии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.ВидВозвратаЧерезКассу,
	|	СУММА(Серии.Количество) КАК Количество
	|ПОМЕСТИТЬ СерииДляЗапроса
	|ИЗ
	|	Серии КАК Серии
	|
	|СГРУППИРОВАТЬ ПО
	|	Серии.Номенклатура,
	|	Серии.Характеристика,
	|	Серии.ВидВозвратаЧерезКассу
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|			ТОГДА ВЫБОР
	|					КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|						ТОГДА 14
	|					ИНАЧЕ 13
	|				КОНЕЦ
	|		КОГДА &ТолькоСерииДляСебестоимости
	|			ТОГДА 0
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
	|			ТОГДА ВЫБОР
	|					КОГДА (ТоварыДляЗапроса.Количество * ТоварыДляЗапроса.КоэффициентВозврат) = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|							И (ТоварыДляЗапроса.Количество * ТоварыДляЗапроса.КоэффициентВозврат) > 0
	|						ТОГДА 10
	|					ИНАЧЕ 9
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO
	|						ТОГДА ВЫБОР
	|								КОГДА (ТоварыДляЗапроса.Количество * ТоварыДляЗапроса.КоэффициентВозврат) = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И (ТоварыДляЗапроса.Количество * ТоварыДляЗапроса.КоэффициентВозврат) > 0
	|									ТОГДА 6
	|								ИНАЧЕ 5
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА (ТоварыДляЗапроса.Количество * ТоварыДляЗапроса.КоэффициентВозврат) = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И (ТоварыДляЗапроса.Количество * ТоварыДляЗапроса.КоэффициентВозврат) > 0
	|								ТОГДА 8
	|							ИНАЧЕ 7
	|						КОНЕЦ
	|				КОНЕЦ
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПоФактуОтбора
	|				И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриОтгрузкеВРозницу
	|			ТОГДА ВЫБОР
	|					КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
	|						ТОГДА ВЫБОР
	|								КОГДА (ТоварыДляЗапроса.Количество * ТоварыДляЗапроса.КоэффициентВозврат) = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|										И (ТоварыДляЗапроса.Количество * ТоварыДляЗапроса.КоэффициентВозврат) > 0
	|									ТОГДА 4
	|								ИНАЧЕ 3
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА (ТоварыДляЗапроса.Количество * ТоварыДляЗапроса.КоэффициентВозврат) = ЕСТЬNULL(СерииДляЗапроса.Количество, 0)
	|									И (ТоварыДляЗапроса.Количество * ТоварыДляЗапроса.КоэффициентВозврат) > 0
	|								ТОГДА 2
	|							ИНАЧЕ 1
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтатусУказанияСерий
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыДляЗапроса КАК ТоварыДляЗапроса
	|			ЛЕВОЕ СОЕДИНЕНИЕ СерииДляЗапроса КАК СерииДляЗапроса
	|			ПО ТоварыДляЗапроса.Номенклатура = СерииДляЗапроса.Номенклатура
	|				И ТоварыДляЗапроса.Характеристика = СерииДляЗапроса.Характеристика
	|				И ТоварыДляЗапроса.ВидВозвратаЧерезКассу = СерииДляЗапроса.ВидВозвратаЧерезКассу
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|				ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|			ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|				И ТоварыДляЗапроса.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
	|		ПО Товары.Номенклатура = ТоварыДляЗапроса.Номенклатура
	|			И Товары.Характеристика = ТоварыДляЗапроса.Характеристика
	|			И Товары.ВидВозвратаЧерезКассу = ТоварыДляЗапроса.ВидВозвратаЧерезКассу
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ЕстьПомещения = (ПараметрыУказанияСерий.ПоляСвязи.Найти("Помещение") <> Неопределено);
	Если ЕстьПомещения Тогда
		Возврат ТекстЗапросаЗаполненияСтатусовУказанияСерийСПомещениями();
	Иначе
		Возврат ТекстЗапросаЗаполненияСтатусовУказанияСерийБезПомещений();
	КонецЕсли;
	
КонецФункции

#КонецОбласти


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаВыручкаИСебестоимостьПродаж(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыПоЭквайрингу(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДенежныеСредстваВКассахККМ(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияДенежныеСредстваКонтрагент(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаПодарочныеСертификаты(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаИсторияПодарочныхСертификатов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаБонусныеБаллы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСРасчетНалоговыхОбязательств(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладныхТовары(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладныхВидыЗапасов(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаКнигаДоходовРасходовПоЕдиномуНалогу(Запрос, ТекстыЗапроса, Регистры);
    ТекстЗапросаТаблицаРозничныеПродажиПодакцизныхТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДенежныеСредстваВПути(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
	ДополнитьТаблицыДляДвижений(Запрос, ДополнительныеСвойства.ТаблицыДляДвижений);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                            КАК Ссылка,
	|	ДанныеДокумента.Организация                       КАК Организация,
	|	ДанныеДокумента.КассаККМ.ТипКассы                 КАК ТипКассы,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.РозничныйПокупатель) КАК Партнер,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)     КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ДанныеДокумента.Дата                              КАК Период,
	|	ДанныеДокумента.Валюта                            КАК Валюта,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияВРозницу) КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Подразделение                     КАК Подразделение,
	|	ДанныеДокумента.Склад                             КАК Склад,
	|	ДанныеДокумента.ЦенаВключаетНДС                   КАК ЦенаВключаетНДС,
	|	ДанныеДокумента.КассоваяСмена                     КАК КассоваяСмена,
	|	ДанныеДокумента.КассоваяСмена.СтатусКассовойСмены КАК СтатусКассовойСмены,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя) КАК ХозяйственнаяОперацияВозвратЗакрытойСмены,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Розница)       КАК ВидПоставки,
	|	ДанныеДокумента.Организация.ФормироватьИтоговыеНалоговыеВРозницеСводноПоНоменклатуре КАК ФормироватьИтоговыеНалоговыеВРозницеСводноПоНоменклатуре,
	|	ДанныеДокумента.СтатьяДекларацииПоЕдиномуНалогу   КАК СтатьяДекларацииПоЕдиномуНалогу,
	|	ДанныеДокумента.НалогообложениеНДС                КАК НалогообложениеНДС
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Если Реквизиты.ТипКассы = Перечисления.ТипыКассККМ.ФискальныйРегистратор И ЗначениеЗаполнено(Реквизиты.КассоваяСмена) Тогда
		ПолноеПроведение = (Реквизиты.СтатусКассовойСмены = Перечисления.СтатусыКассовойСмены.ЗакрытаЧекиЗаархивированы);
	Иначе
		ПолноеПроведение = Истина;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка",                                   ДокументСсылка);
	Запрос.УстановитьПараметр("ПолноеПроведение",                         ПолноеПроведение);
	Запрос.УстановитьПараметр("ЦенаВключаетНДС",                          ?(Реквизиты.ЦенаВключаетНДС, 0, 1));
	Запрос.УстановитьПараметр("ЦенаНеВключаетНДС",                        ?(Реквизиты.ЦенаВключаетНДС, -1, 0));
	
	Запрос.УстановитьПараметр("Склад",                                    Реквизиты.Склад);
	Запрос.УстановитьПараметр("Период",                                   Реквизиты.Период);
	Запрос.УстановитьПараметр("НачалоМесяцаПериода",                      НачалоМесяца(Реквизиты.Период));
	Запрос.УстановитьПараметр("Валюта",                                   Реквизиты.Валюта);
	Запрос.УстановитьПараметр("Организация",                              Реквизиты.Организация);
	Запрос.УстановитьПараметр("Партнер",                                  Реквизиты.Партнер);
	Запрос.УстановитьПараметр("Контрагент",                               Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("Договор",                                  Реквизиты.Договор);
	Запрос.УстановитьПараметр("Подразделение",                            Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация",                    Реквизиты.ХозяйственнаяОперация);
	Запрос.УстановитьПараметр("ХозяйственнаяОперацияВозвратЗакрытойСмены",Реквизиты.ХозяйственнаяОперацияВозвратЗакрытойСмены);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета",           Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("НалогообложениеНДС",                       Реквизиты.НалогообложениеНДС);
	
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов",     ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("ИспользоватьПартионныйУчет",                      ПолучитьФункциональнуюОпцию("ИспользоватьПартионныйУчет"));
	Запрос.УстановитьПараметр("ИспользоватьПродажуАгентскихУслуг",               ПолучитьФункциональнуюОпцию("ИспользоватьПродажуАгентскихУслуг"));
	Запрос.УстановитьПараметр("ВидПоставки",                              Реквизиты.ВидПоставки);
	Запрос.УстановитьПараметр("МоментОпределенияБазыНДС",                 НДСИсходящийСервер.ОпределитьМоментОпределенияБазыНДС(Реквизиты.ВидПоставки, Перечисления.ХозяйственныеОперации.РеализацияВРозницу, Реквизиты.Валюта, Реквизиты.Организация));
	Запрос.УстановитьПараметр("ОрганизацияПлательщикНДС", НДСОбщегоНазначенияСервер.ОрганизацияКонтрагентПлательщикНДС(Реквизиты.Организация, Реквизиты.Период));
	Запрос.УстановитьПараметр("ТипКассы",                                 Реквизиты.ТипКассы);
	Запрос.УстановитьПараметр("ФормироватьИтоговыеНалоговыеВРозницеСводноПоНоменклатуре", Реквизиты.ФормироватьИтоговыеНалоговыеВРозницеСводноПоНоменклатуре);
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерамРозничная", РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(Новый Структура("Организация, Партнер, Контрагент, Договор, НаправлениеДеятельности", 
																					Реквизиты.Организация, Справочники.Партнеры.ПустаяСсылка(), Неопределено, Справочники.ДоговорыКонтрагентов.ПустаяСсылка(), Справочники.НаправленияДеятельности.ПустаяСсылка())));
	
	Запрос.УстановитьПараметр("СтатьяДекларацииПоЕдиномуНалогу",          Реквизиты.СтатьяДекларацииПоЕдиномуНалогу);
	
	Запрос.УстановитьПараметр("НаправлениеДеятельности",                  Справочники.НаправленияДеятельности.ПустаяСсылка());
	
	СоответствиеВидовЗапасов = ИнициализироватьВидыЗапасов(Реквизиты);
	Запрос.УстановитьПараметр("СоответствиеВидовЗапасов", СоответствиеВидовЗапасов);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаРасчетыПоЭквайрингу(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыПоЭквайрингу";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаПлатежей.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	ВЫБОР
	|		КОГДА ТаблицаПлатежей.Сумма > 0
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	ВЫБОР
	|		КОГДА ТаблицаПлатежей.Сумма > 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредствПоЭквайрингу.ПоступлениеПоПлатежнойКарте)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредствПоЭквайрингу.СписаниеПоПлатежнойКарте)
	|	КОНЕЦ КАК ТипДенежныхСредств,
	|	&Организация КАК Организация,
	|	&Валюта КАК Валюта,
	|	ТаблицаПлатежей.ЭквайринговыйТерминал КАК ЭквайринговыйТерминал,
	|	ТаблицаПлатежей.КодАвторизации КАК КодАвторизации,
	|	ТаблицаПлатежей.НомерПлатежнойКарты КАК НомерПлатежнойКарты,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&Период КАК ДатаПлатежа,
	|	ВЫБОР
	|		КОГДА ТаблицаПлатежей.Сумма > 0
	|			ТОГДА ТаблицаПлатежей.Сумма
	|		ИНАЧЕ -ТаблицаПлатежей.Сумма
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ОплатаПлатежнымиКартами КАК ТаблицаПлатежей
	|
	|ГДЕ
	|	&ПолноеПроведение
	|	И ТаблицаПлатежей.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыНаСкладах";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаСерииТоваров", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаСерииТоваров(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Помещение                КАК Помещение,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ТаблицаТовары.Количество               КАК ВНаличии
	|
	|ИЗ
	|	ВтТаблицаСерииТоваров КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Количество > 0
	|	И &ПолноеПроведение
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Помещение                КАК Помещение,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	-ТаблицаТовары.Количество              КАК ВНаличии
	|
	|ИЗ
	|	ВтТаблицаСерииТоваров КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Количество < 0
	|	И &ПолноеПроведение
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СвободныеОстатки";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаСерииТоваров", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаСерииТоваров(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Количество               КАК ВНаличии
	|ИЗ
	|	ВтТаблицаСерииТоваров КАК ТаблицаТовары
	|ГДЕ
	|	&ПолноеПроведение
	|	И ТаблицаТовары.Количество > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	-ТаблицаТовары.Количество               КАК ВНаличии
	|ИЗ
	|	ВтТаблицаСерииТоваров КАК ТаблицаТовары
	|ГДЕ
	|	&ПолноеПроведение
	|	И ТаблицаТовары.Количество < 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	// Продажи и возвраты этой смены
	|	0 КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Склад КАК Склад,
	|	&Организация КАК ОрганизацияОтгрузки,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасовВладельца.Организация
	|	ИНАЧЕ
	|		&Организация
	|	КОНЕЦ КАК Организация,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасовВладельца
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	КОНЕЦ КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|	ЛОЖЬ КАК Первичное,
	|
	|   ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение КАК НалоговоеНазначение
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
    |ГДЕ
    |	ТаблицаВидыЗапасов.Количество > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	//  Возвраты закрытых смен
	|	1 КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Склад КАК Склад,
	|	&Организация КАК ОрганизацияОтгрузки,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасовВладельца.Организация
	|	ИНАЧЕ
	|		&Организация
	|	КОНЕЦ КАК Организация,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасовВладельца
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	КОНЕЦ КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&ХозяйственнаяОперацияВозвратЗакрытойСмены КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.АналитикаРеализации КАК КорАналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасовОтгрузки = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.ВидЗапасовОтгрузки
	|	КОНЕЦ КАК КорВидЗапасов,
	|	ЛОЖЬ КАК Первичное,
	|   ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение КАК НалоговоеНазначение
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
    |ГДЕ
    |	ТаблицаВидыЗапасов.Количество < 0
	|УПОРЯДОЧИТЬ ПО
	|	Порядок, 
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизацийКПередаче";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	0 КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Склад КАК Склад,
	|	ТаблицаВидыЗапасов.ВидЗапасовВладельца.Организация КАК ОрганизацияВладелец,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасовПродавца,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	0 КАК Возвращено,
	|	ТаблицаВидыЗапасов.Количество КАК Количество
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации
    |	И ТаблицаВидыЗапасов.Количество > 0
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Склад КАК Склад,
	|	ТаблицаВидыЗапасов.ВидЗапасовВладельца.Организация КАК ОрганизацияВладелец,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасовПродавца,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество КАК Возвращено,
	|	0 КАК Количество
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации
    |	И ТаблицаВидыЗапасов.Количество < 0
	|УПОРЯДОЧИТЬ ПО
	|	Порядок, 
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюОтчетовКомитенту";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтКурсыВалют", ТекстыЗапроса) Тогда
		ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	0 КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаВидыЗапасов.Валюта КАК Валюта,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыКомитента КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	&Ссылка КАК ДокументРеализации,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение     КАК НалоговоеНазначение,
	|	ТаблицаВидыЗапасов.СтавкаНДС     				  КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.Валюта = &Валюта ТОГДА
	|		ТаблицаВидыЗапасов.СуммаСНДС
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.СуммаСНДС * КурсыВалют.КоэффициентПересчета
	|	КОНЕЦ КАК СуммаВыручки
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтКурсыВалют КАК КурсыВалют
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасов.Валюта = КурсыВалют.Валюта
	|
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
    |	И ТаблицаВидыЗапасов.Количество > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ВидыЗапасовВладельца.Валюта КАК Валюта,
	|	ВидыЗапасовВладельца.Ссылка КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	КлючиКомитента.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	&Ссылка КАК ДокументРеализации,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение     КАК НалоговоеНазначение,
	|	ТаблицаВидыЗапасов.СтавкаНДС     				  КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|
	|	ВЫБОР КОГДА ВидыЗапасовВладельца.Валюта = &Валюта ТОГДА
	|		ТаблицаВидыЗапасов.СуммаСНДС
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.СуммаСНДС * КурсыВалют.КоэффициентПересчета
	|	КОНЕЦ КАК СуммаВыручки
	|
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК ВидыЗапасовВладельца
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасовВладельца = ВидыЗапасовВладельца.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтКурсыВалют КАК КурсыВалют
	|	ПО
	|		ВидыЗапасовВладельца.Валюта = КурсыВалют.Валюта
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиКомитента
	|	ПО
	|		ТаблицаВидыЗапасов.Номенклатура = КлючиКомитента.Номенклатура
	|		И ТаблицаВидыЗапасов.Характеристика = КлючиКомитента.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = КлючиКомитента.Серия
	|		И ВидыЗапасовВладельца.Комитент = КлючиКомитента.Склад
	|
	|ГДЕ
	|	ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И ВидыЗапасовВладельца.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
    |	И ТаблицаВидыЗапасов.Количество > 0
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаВидыЗапасов.Валюта КАК Валюта,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыКомитента КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	&Ссылка КАК ДокументРеализации,
	|	&ХозяйственнаяОперацияВозвратЗакрытойСмены КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение     КАК НалоговоеНазначение,
	|	ТаблицаВидыЗапасов.СтавкаНДС     				  КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.Валюта = &Валюта ТОГДА
	|		ТаблицаВидыЗапасов.СуммаСНДС
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.СуммаСНДС * КурсыВалют.КоэффициентПересчета
	|	КОНЕЦ КАК СуммаВыручки
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВтКурсыВалют КАК КурсыВалют
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасов.Валюта = КурсыВалют.Валюта
	|
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
    |	И ТаблицаВидыЗапасов.Количество < 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаВыручкаИСебестоимостьПродаж(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ВыручкаИСебестоимостьПродаж";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтРаботыУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРаботыУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	// Товары проданные
	|	0 КАК Порядок, 
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Подразделение КАК Подразделение,
	|	РегистрАналитикаУчетаПоПартнерам.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНаборов КАК АналитикаУчетаНаборов,
	|	ТаблицаВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	ТаблицаВидыЗапасов.Продавец КАК Менеджер,
	|
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС
	|		* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК СуммаВыручки,
	|
	|	ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС
	|			-ТаблицаВидыЗапасов.СуммаНДС)
	|			* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК СуммаВыручкиБезНДС,
	|
	|	ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС
	|			-ТаблицаВидыЗапасов.СуммаНДС)
	|			* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК СуммаВыручкиРегл,
	|
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС
	|			* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК СуммаВыручкиСНДСРегл,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) Тогда
	|		ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК Себестоимость,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) Тогда
	|			ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС
	|					-ТаблицаВидыЗапасов.СуммаНДС)
	|					* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СебестоимостьБезНДС,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) Тогда
	|			ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС
	|					-ТаблицаВидыЗапасов.СуммаНДС)
	|					* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2))
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СебестоимостьРегл,
	|
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаРучнойСкидки
	|		* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК СуммаРучнойСкидки,
	|
	|	ТаблицаВидыЗапасов.Склад КАК Склад,
	|	НЕОПРЕДЕЛЕНО КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК Соглашение,
	|
	|	&Валюта КАК ВалютаВзаиморасчетов,
	|	ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаВВалютеВзаиморасчетов,
	|	ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	&Валюта КАК ВалютаДокумента,
	|	ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаВВалютеДокумента,
	|	ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС КАК СуммаБезНДСВВалютеДокумента,
	|
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение КАК НалоговоеНазначение,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|
	|	ТаблицаВидыЗапасов.Номенклатура КАК ИсточникГФУНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|	ПО
	|		РегистрАналитикаУчетаПоПартнерам.Организация = &Организация
	|		И РегистрАналитикаУчетаПоПартнерам.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|		И ТаблицаВидыЗапасов.Партнер = РегистрАналитикаУчетаПоПартнерам.Партнер
	|		И РегистрАналитикаУчетаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|		И РегистрАналитикаУчетаПоПартнерам.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|
	|ГДЕ
    |	ТаблицаВидыЗапасов.Количество > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	// Услуги проданные
	|	1 КАК Порядок, 
	|	ТаблицаТовары.НомерСтроки                      КАК НомерСтроки,
	|	&Период                                        КАК Период,
	|	&Подразделение                                 КАК Подразделение,
	|	РегистрАналитикаУчетаПоПартнерам.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры       КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.АналитикаУчетаНаборов            КАК АналитикаУчетаНаборов,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.Принципал <> НЕОПРЕДЕЛЕНО
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.АгентскаяУслуга)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Услуга)
	|	КОНЕЦ                                          КАК ТипЗапасов,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|	ТаблицаТовары.Продавец                         КАК Менеджер,
	|
	|	ТаблицаТовары.Количество КАК Количество,
	|	ВЫРАЗИТЬ(
	|		(ТаблицаТовары.Сумма
	|		+ &ЦенаВключаетНДС * ТаблицаТовары.СуммаНДС)
	|	 	* &КоэффициентПересчетаВВалютуУпр
	|		КАК ЧИСЛО(15,2)
	|	) КАК СуммаВыручки,
	|
	|	ВЫРАЗИТЬ(
	|		(ТаблицаТовары.Сумма
	|			+ &ЦенаВключаетНДС * ТаблицаТовары.СуммаНДС - ТаблицаТовары.СуммаНДС)
	|	 		* &КоэффициентПересчетаВВалютуУпр
	|		КАК ЧИСЛО(15,2)
	|	) КАК СуммаВыручкиБезНДС,
	|
	|	ВЫРАЗИТЬ(
	|		(ТаблицаТовары.Сумма
	|			+ &ЦенаВключаетНДС * ТаблицаТовары.СуммаНДС - ТаблицаТовары.СуммаНДС)
	|	 		* &КоэффициентПересчетаВВалютуРегл
	|		КАК ЧИСЛО(15,2)) КАК СуммаВыручкиРегл,
	|
	|	ВЫРАЗИТЬ(
	|		(ТаблицаТовары.Сумма + &ЦенаВключаетНДС * ТаблицаТовары.СуммаНДС)
	|	 		* &КоэффициентПересчетаВВалютуРегл
	|		КАК ЧИСЛО(15,2)) КАК СуммаВыручкиСНДСРегл,
	|
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Принципал <> НЕОПРЕДЕЛЕНО
	|		ТОГДА ВЫРАЗИТЬ(
	|				(ТаблицаТовары.Сумма + &ЦенаВключаетНДС * ТаблицаТовары.СуммаНДС)
	|					* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Себестоимость,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Принципал <> НЕОПРЕДЕЛЕНО
	|		ТОГДА ВЫРАЗИТЬ((ТаблицаТовары.Сумма + &ЦенаВключаетНДС * ТаблицаТовары.СуммаНДС - ТаблицаТовары.СуммаНДС)
	|			* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СебестоимостьБезНДС,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Принципал <> НЕОПРЕДЕЛЕНО
	|		ТОГДА ВЫРАЗИТЬ((ТаблицаТовары.Сумма + &ЦенаВключаетНДС * ТаблицаТовары.СуммаНДС - ТаблицаТовары.СуммаНДС)
	|					* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СебестоимостьРегл,
	|
	|	ВЫРАЗИТЬ(ТаблицаТовары.СуммаРучнойСкидки
	|		* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК СуммаРучнойСкидки,
	|
	|	&Склад КАК Склад,
	|	НЕОПРЕДЕЛЕНО КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК Соглашение,
	|
	|	&Валюта КАК ВалютаВзаиморасчетов,
	|	(ТаблицаТовары.Сумма + &ЦенаВключаетНДС * ТаблицаТовары.СуммаНДС) КАК СуммаВВалютеВзаиморасчетов,
	|	(ТаблицаТовары.Сумма + &ЦенаВключаетНДС * ТаблицаТовары.СуммаНДС) - ТаблицаТовары.СуммаНДС КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	&Валюта КАК ВалютаДокумента,
	|	(ТаблицаТовары.Сумма + &ЦенаВключаетНДС * ТаблицаТовары.СуммаНДС) КАК СуммаВВалютеДокумента,
	|	(ТаблицаТовары.Сумма + &ЦенаВключаетНДС * ТаблицаТовары.СуммаНДС) - ТаблицаТовары.СуммаНДС КАК СуммаБезНДСВВалютеДокумента,
	|
	|	ТаблицаТовары.ЦелевоеНалоговоеНазначение КАК НалоговоеНазначение,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаТовары.Номенклатура КАК ИсточникГФУНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтРаботыУслуги КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|	ПО
	|		РегистрАналитикаУчетаПоПартнерам.Организация = &Организация
	|		И РегистрАналитикаУчетаПоПартнерам.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|		И ТаблицаТовары.Партнер = РегистрАналитикаУчетаПоПартнерам.Партнер
	|		И РегистрАналитикаУчетаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|		И РегистрАналитикаУчетаПоПартнерам.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|ГДЕ
	|	ТаблицаТовары.Количество <> 0
    |
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	// Возвраты товаров закрытых смен
	|	2 КАК Порядок, 
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Подразделение КАК Подразделение,
	|	РегистрАналитикаУчетаПоПартнерам.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНаборов КАК АналитикаУчетаНаборов,
	|	ТаблицаВидыЗапасов.ТипЗапасов КАК ТипЗапасов,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасовОтгрузки <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА
	|			ТаблицаВидыЗапасов.ВидЗапасовОтгрузки
	|		ИНАЧЕ
	|			ТаблицаВидыЗапасов.ВидЗапасов
	|		КОНЕЦ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	ТаблицаВидыЗапасов.Продавец КАК Менеджер,
	|
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС
	|		* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК СуммаВыручки,
	|
	|	ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС
	|			-ТаблицаВидыЗапасов.СуммаНДС)
	|			* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК СуммаВыручкиБезНДС,
	|
	|	ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС
	|			-ТаблицаВидыЗапасов.СуммаНДС)
	|			* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК СуммаВыручкиРегл,
	|
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС
	|			* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК СуммаВыручкиСНДСРегл,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) Тогда
	|		ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК Себестоимость,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) Тогда
	|			ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС
	|					-ТаблицаВидыЗапасов.СуммаНДС)
	|					* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2))
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СебестоимостьБезНДС,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) Тогда
	|			ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС
	|					-ТаблицаВидыЗапасов.СуммаНДС)
	|					* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2))
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК СебестоимостьРегл,
	|
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаРучнойСкидки
	|		* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК СуммаРучнойСкидки,
	|
	|	ТаблицаВидыЗапасов.СкладОтгрузки КАК Склад,
	|	НЕОПРЕДЕЛЕНО КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК Соглашение,
	|
	|	&Валюта КАК ВалютаВзаиморасчетов,
	|	ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаВВалютеВзаиморасчетов,
	|	ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	&Валюта КАК ВалютаДокумента,
	|	ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаВВалютеДокумента,
	|	ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС КАК СуммаБезНДСВВалютеДокумента,
	|
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение КАК НалоговоеНазначение,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ПериодПродажи < &НачалоМесяцаПериода ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|
	|	ТаблицаВидыЗапасов.Номенклатура КАК ИсточникГФУНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|	ПО
	|		РегистрАналитикаУчетаПоПартнерам.Организация = &Организация
	|		И РегистрАналитикаУчетаПоПартнерам.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|		И ТаблицаВидыЗапасов.Партнер = РегистрАналитикаУчетаПоПартнерам.Партнер
	|		И РегистрАналитикаУчетаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|		И РегистрАналитикаУчетаПоПартнерам.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|
	|ГДЕ
    |	ТаблицаВидыЗапасов.Количество < 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок, 
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтРаботыУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРаботыУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос);
	УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос);
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
 		
	ТекстЗапроса = "
	|ВЫБРАТЬ
	// Продажи товаров с учетом возвратов текущей смены
	|	0 КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Организация КАК Организация,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах)
	|	КОНЕЦ КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|   	ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	ТаблицаВидыЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение КАК КорНалоговоеНазначение,
	|
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаВидыЗапасов.ДокументРеализации.Дата КАК ПериодПродажи,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	РегистрАналитикаУчетаПоПартнерам.КлючАналитики КАК АналитикаУчетаПоПартнерам,
    |	ТаблицаВидыЗапасов.ПодразделениеРеализации КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК КорСтоимость,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
    |	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|	ПО
	|		&Организация = РегистрАналитикаУчетаПоПартнерам.Организация
	|		И ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) = РегистрАналитикаУчетаПоПартнерам.Контрагент
	|		И ТаблицаВидыЗапасов.Партнер = РегистрАналитикаУчетаПоПартнерам.Партнер
	|		И РегистрАналитикаУчетаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|		И РегистрАналитикаУчетаПоПартнерам.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|ГДЕ
	|	ТаблицаВидыЗапасов.Номенклатура.ТипНоменклатуры В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТаблицаВидыЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар))
    |	И ТаблицаВидыЗапасов.Количество > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
    //  Продажи услуг
	|	1 КАК Порядок,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) КАК РазделУчета,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|	ТаблицаТовары.ЦелевоеНалоговоеНазначение КАК НалоговоеНазначение,
	|	ТаблицаТовары.ЦелевоеНалоговоеНазначение КАК КорНалоговоеНазначение,
	|
	|	ТаблицаТовары.Количество КАК Количество,
	|	ДатаВремя(1,1,1) КАК ПериодПродажи,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	&АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
    |	&Подразделение КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК КорСтоимость,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
    |	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки
	|ИЗ
	|	ВтРаботыУслуги КАК ТаблицаТовары
	|
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
    |
	|ОБЪЕДИНИТЬ ВСЕ
    |
	|ВЫБРАТЬ
	// Возвраты товаров закрытых смен прошлых периодов
	// В кор. части необходимо указать аналитику продажи, если товар возвращается на склад, отличный от склада реализации.
	|	2 КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|   	ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
    |
	|	ТаблицаВидыЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение КАК КорНалоговоеНазначение,
	|
	|	-ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаВидыЗапасов.ПериодПродажи КАК ПериодПродажи,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов) КАК ХозяйственнаяОперация,
	|	РегистрАналитикаУчетаПоПартнерам.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаВидыЗапасов.ПодразделениеРеализации КАК Подразделение,
	|
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.СкладОтгрузки <> &Склад
	|	ТОГДА
	|		ТаблицаВидыЗапасов.АналитикаРеализации
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорАналитикаУчетаНоменклатуры,
	|
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасовОтгрузки <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА
	|			ТаблицаВидыЗапасов.ВидЗапасовОтгрузки
	|		КОГДА ТаблицаВидыЗапасов.СкладОтгрузки <> &Склад ТОГДА
	|			ТаблицаВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|		КОНЕЦ
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорВидЗапасов,
	|
	|	- ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК КорСтоимость,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров) КАК СтатьяРасходовСписания,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров) КАК СтатьяДоходов,
	|	ТаблицаВидыЗапасов.Партнер КАК АналитикаРасходов,
	|	ТаблицаВидыЗапасов.Партнер КАК АналитикаДоходов,
    |	ТаблицаВидыЗапасов.ИдентификаторСтроки КАК ИдентификаторСтроки
	|
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|	ПО
	|		&Организация = РегистрАналитикаУчетаПоПартнерам.Организация
	|		И ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) = РегистрАналитикаУчетаПоПартнерам.Контрагент
	|		И ТаблицаВидыЗапасов.Партнер = РегистрАналитикаУчетаПоПартнерам.Партнер
	|		И РегистрАналитикаУчетаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|		И РегистрАналитикаУчетаПоПартнерам.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
    |
	|ГДЕ
	|	ТаблицаВидыЗапасов.Количество < 0
	|	И ТаблицаВидыЗапасов.ПериодПродажи < &НачалоМесяцаПериода
	|	И ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	// Сторнирование реализации текущего периода. Используется аналитика продажи.
	|ВЫБРАТЬ
	|	3 КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаВидыЗапасов.АналитикаРеализации КАК АналитикаУчетаНоменклатуры,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасовОтгрузки <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА
	|			ТаблицаВидыЗапасов.ВидЗапасовОтгрузки
	|		ИНАЧЕ
	|			ТаблицаВидыЗапасов.ВидЗапасов
	|		КОНЕЦ
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
    |
	|	ТаблицаВидыЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение КАК КорНалоговоеНазначение,
	|
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаВидыЗапасов.ПериодПродажи КАК ПериодПродажи,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноРеализации) КАК ХозяйственнаяОперация,
	|	РегистрАналитикаУчетаПоПартнерам.КлючАналитики КАК АналитикаУчетаПоПартнерам,
	|	ТаблицаВидыЗапасов.ПодразделениеРеализации КАК Подразделение,
	|
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК КорСтоимость,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров) КАК СтатьяРасходовСписания,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров) КАК СтатьяДоходов,
	|	ТаблицаВидыЗапасов.Партнер КАК АналитикаРасходов,
	|	ТаблицаВидыЗапасов.Партнер КАК АналитикаДоходов,
    |	ТаблицаВидыЗапасов.ИдентификаторСтроки КАК ИдентификаторСтроки
	|
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК РегистрАналитикаУчетаПоПартнерам
	|	ПО
	|		&Организация = РегистрАналитикаУчетаПоПартнерам.Организация
	|		И ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) = РегистрАналитикаУчетаПоПартнерам.Контрагент
	|		И ТаблицаВидыЗапасов.Партнер = РегистрАналитикаУчетаПоПартнерам.Партнер
	|		И РегистрАналитикаУчетаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|		И РегистрАналитикаУчетаПоПартнерам.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
    
	|ГДЕ
	|	ТаблицаВидыЗапасов.Количество < 0
	|	И ТаблицаВидыЗапасов.ПериодПродажи >= &НачалоМесяцаПериода
	|	И ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	// Перемещение с реализации на возврат - списание
	|ВЫБРАТЬ
	|	4 КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаВидыЗапасов.АналитикаРеализации КАК АналитикаУчетаНоменклатуры,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасовОтгрузки <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА
	|			ТаблицаВидыЗапасов.ВидЗапасовОтгрузки
	|		ИНАЧЕ
	|			ТаблицаВидыЗапасов.ВидЗапасов
	|		КОНЕЦ
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
    |
	|	ТаблицаВидыЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение КАК КорНалоговоеНазначение,
	|
	|	-ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ДатаВремя(1,1,1) КАК ПериодПродажи,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК КорРазделУчета,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК КорВидЗапасов,
	|
	|	0 КАК КорСтоимость,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
    |	ТаблицаВидыЗапасов.ИдентификаторСтроки КАК ИдентификаторСтроки
	|
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.Количество < 0
	|	И ТаблицаВидыЗапасов.ПериодПродажи >= &НачалоМесяцаПериода
	|	И ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И (ТаблицаВидыЗапасов.СкладОтгрузки <> &Склад
	|		ИЛИ (ТаблицаВидыЗапасов.ВидЗапасовОтгрузки <> ТаблицаВидыЗапасов.ВидЗапасов И &УчитыватьСебестоимостьТоваровПоВидамЗапасов)
	|	)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	// Перемещение с реализации на возврат - оприходование
	|ВЫБРАТЬ
	|	5 КАК Порядок,
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
    |
	|	ТаблицаВидыЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение КАК КорНалоговоеНазначение,
	|
	|	-ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ДатаВремя(1,1,1) КАК ПериодПродажи,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя) КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|
	|	НЕОПРЕДЕЛЕНО КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК КорРазделУчета,
	|	НЕОПРЕДЕЛЕНО КАК КорВидЗапасов,
	|
	|	- ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК КорСтоимость,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров) КАК СтатьяРасходовСписания,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.РазницыСтоимостиВозвратаИФактическойСтоимостиТоваров) КАК СтатьяДоходов,
	|	ТаблицаВидыЗапасов.Партнер КАК АналитикаРасходов,
	|	ТаблицаВидыЗапасов.Партнер КАК АналитикаДоходов,
    |	ТаблицаВидыЗапасов.ИдентификаторСтроки КАК ИдентификаторСтроки
	|
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.Количество < 0
	|	И ТаблицаВидыЗапасов.ПериодПродажи >= &НачалоМесяцаПериода
	|	И ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	И (ТаблицаВидыЗапасов.СкладОтгрузки <> &Склад
	|		ИЛИ (ТаблицаВидыЗапасов.ВидЗапасовОтгрузки <> ТаблицаВидыЗапасов.ВидЗапасов И &УчитыватьСебестоимостьТоваровПоВидамЗапасов)
	|	)
	|
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок, 
	|	НомерСтрокиДокумента
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваВКассахККМ(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваВКассахККМ";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтСуммаПлатежнымиКартами", ТекстыЗапроса) Тогда
		ТекстЗапросаВтСуммаПлатежнымиКартами(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтСуммаБонусныеБаллы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтСуммаБонусныеБаллы(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтСуммаПодарочныеСертификаты", ТекстыЗапроса) Тогда
		ТекстЗапросаВтСуммаПодарочныеСертификаты(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ДанныеДокумента.КассаККМ.Владелец КАК Организация,
	|	ДанныеДокумента.КассаККМ КАК КассаККМ,
	|	ДанныеДокумента.СуммаДокумента           
	|	- ЕСТЬNULL(ВтСуммаПлатежнымиКартами.Сумма, 0)
	|	- ЕСТЬNULL(ВтСуммаПодарочныеСертификаты.Сумма, 0) КАК Сумма,
	|	ВЫРАЗИТЬ((ДанныеДокумента.СуммаДокумента
	|	- ЕСТЬNULL(ВтСуммаПодарочныеСертификаты.Сумма, 0)
	|	- ЕСТЬNULL(ВтСуммаПлатежнымиКартами.Сумма, 0)) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ((ДанныеДокумента.СуммаДокумента
	|	- ЕСТЬNULL(ВтСуммаПодарочныеСертификаты.Сумма, 0)
	|	- ЕСТЬNULL(ВтСуммаПлатежнымиКартами.Сумма, 0)) * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммаПлатежнымиКартами КАК ВтСуммаПлатежнымиКартами
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммаПодарочныеСертификаты КАК ВтСуммаПодарочныеСертификаты
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ДанныеДокумента.СуммаДокумента - ЕСТЬNULL(ВтСуммаПлатежнымиКартами.Сумма, 0) <> 0
	|	И ДанныеДокумента.Ссылка = &Ссылка
	|	И &ПолноеПроведение
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура КАК Номенклатура,
	|	ТаблицаСерии.Характеристика КАК Характеристика,
	|	ТаблицаСерии.Серия КАК Серия,
	|	ТаблицаСерии.Количество КАК Количество,
	|	&Ссылка КАК Документ,
	|	&Склад КАК Отправитель,
	|	ТаблицаСерии.Помещение КАК ПомещениеОтправителя,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаВРозницу) КАК СкладскаяОперация,
	|	НЕОПРЕДЕЛЕНО КАК Получатель,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка) КАК ПомещениеПолучателя,
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ИСТИНА КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И &ПолноеПроведение
	|	И ТаблицаСерии.ВидВозвратаЧерезКассу <> ЗНАЧЕНИЕ(Перечисление.ВидыВозвратовЧерезКассу.ВозвратНеЭтойСмены) 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура         КАК Номенклатура,
	|	ТаблицаСерии.Характеристика       КАК Характеристика,
	|	ТаблицаСерии.Серия                КАК Серия,
	|	ТаблицаСерии.Количество           КАК Количество,
	|	&Ссылка                           КАК Документ,
	|	Значение(Справочник.Партнеры.РозничныйПокупатель) КАК Отправитель,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка) КАК ПомещениеОтправителя,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПоВозвратуОтКлиента) КАК СкладскаяОперация,
	|	&Склад                            КАК Получатель,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка) КАК ПомещениеПолучателя,
	|	&Период                           КАК Период,
	|	&Ссылка                           КАК Регистратор,
	|	ИСТИНА КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Серии КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|	И &ПолноеПроведение
	|	И ТаблицаСерии.ВидВозвратаЧерезКассу = ЗНАЧЕНИЕ(Перечисление.ВидыВозвратовЧерезКассу.ВозвратНеЭтойСмены) 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество,
	|	&Ссылка,
	|	&Склад,
	|	ТаблицаСерии.Помещение,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтгрузкаВРозницу),
	|	НЕОПРЕДЕЛЕНО,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка),
	|	&Период,
	|	&Ссылка,
	|	ИСТИНА
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И &ПолноеПроведение
	|	И ТаблицаСерии.ВидВозвратаЧерезКассу <> ЗНАЧЕНИЕ(Перечисление.ВидыВозвратовЧерезКассу.ВозвратНеЭтойСмены) 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия,
	|	ТаблицаТовары.Количество,
	|	&Ссылка,
	|	Значение(Справочник.Партнеры.РозничныйПокупатель),
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПриемкаПоВозвратуОтКлиента),
	|	&Склад,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка),
	|	&Период,
	|	&Ссылка,
	|	ИСТИНА
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И &ПолноеПроведение
	|	И ТаблицаТовары.ВидВозвратаЧерезКассу = ЗНАЧЕНИЕ(Перечисление.ВидыВозвратовЧерезКассу.ВозвратНеЭтойСмены)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции


Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ПересчитатьТаблицуТоваровВВалютуРегл(Запрос);
    УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Валюта КАК Валюта,
	|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.Сумма КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|	0 КАК СуммаНДС,
	|	ТаблицаДокумента.Сумма * &КоэффициентПересчетаВВалютуРегл КАК СуммаБезНДСРегл,
	|	0 КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО КАК ТипРасчетов
	|
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ОплатаПлатежнымиКартами КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И &Валюта <> &ВалютаРегламентированногоУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Валюта КАК Валюта,
	|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокументаРегл.СуммаБезНДС КАК СуммаБезНДСРегл,
	|	ТаблицаДокументаРегл.СуммаНДС КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО КАК ТипРасчетов
	|
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаТоваровПредварительная КАК ТаблицаДокументаРегл
	|	ПО
	|		ТаблицаДокумента.ИдентификаторСтроки = ТаблицаДокументаРегл.ИдентификаторСтроки
	|
	|ГДЕ
	|	&Валюта <> &ВалютаРегламентированногоУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Валюта КАК Валюта,
	|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	
	|	ВЫБОР КОГДА &ЦенаВключаетНДС = 0 ТОГДА
	|		ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС
	|	ИНАЧЕ
	|		ТаблицаДокумента.Сумма
	|	КОНЕЦ КАК СуммаБезНДС,
	|	
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокументаРегл.СуммаБезНДС КАК СуммаБезНДСРегл,
	|	ТаблицаДокументаРегл.СуммаНДС КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО КАК ТипРасчетов
	|
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаТоваровПредварительная КАК ТаблицаДокументаРегл
	|	ПО
	|		ТаблицаДокумента.ИдентификаторСтроки = ТаблицаДокументаРегл.ИдентификаторСтроки
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И ТаблицаДокумента.Номенклатура.ТипНоменклатуры НЕ В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И &Валюта <> &ВалютаРегламентированногоУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Валюта КАК Валюта,
	|	ТаблицаДокумента.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.Сумма КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|	0 КАК СуммаНДС,
	|	ТаблицаДокумента.Сумма * &КоэффициентПересчетаВВалютуРегл КАК СуммаБезНДСРегл,
	|	0 КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО КАК ТипРасчетов
	|
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ПодарочныеСертификаты КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И &Валюта <> &ВалютаРегламентированногоУчета
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции 

Функция ТекстЗапросаТаблицаМатериалыИРаботыВПроизводстве(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "МатериалыИРаботыВПроизводстве";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтРаботыУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтРаботыУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	&Период КАК ДатаРегистратора,
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.ЦелевоеНалоговоеНазначение КАК НалоговоеНазначение
	|ИЗ
	|	ВтРаботыУслуги КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаИсторияПодарочныхСертификатов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ИсторияПодарочныхСертификатов";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период                                                          КАК Период,
	|	ТабличнаяЧасть.ПодарочныйСертификат                              КАК ПодарочныйСертификат,
	|	ВЫБОР КОГДА ТабличнаяЧасть.ПодарочныйСертификат.Владелец.ЧастичнаяОплата ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ЧастичноПогашен)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ПолностьюПогашен)
	|	КОНЕЦ КАК Статус
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ПодарочныеСертификаты КАК ТабличнаяЧасть
	|ГДЕ
	|	&ПолноеПроведение
	|	И ТабличнаяЧасть.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПодарочныеСертификаты(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПодарочныеСертификаты";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период                                КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ТабличнаяЧасть.ПодарочныйСертификат    КАК ПодарочныйСертификат,
	|	ТабличнаяЧасть.СуммаВВалютеСертификата                  КАК Сумма,
	|	ТабличнаяЧасть.Сумма * &КоэффициентПересчетаВВалютуРегл КАК СуммаРегл,
	|	ТабличнаяЧасть.ИдентификаторСтроки     КАК ИдентификаторСтроки
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ПодарочныеСертификаты КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &ПолноеПроведение
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаБонусныеБаллы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "БонусныеБаллы";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтБонусныеБаллы", ТекстыЗапроса) Тогда
		ТекстЗапросаВтБонусныеБаллы(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	БонусныеБаллы.Период КАК Период,
	|	БонусныеБаллы.ВидДвижения КАК ВидДвижения,
	|	БонусныеБаллы.БонуснаяПрограммаЛояльности КАК БонуснаяПрограммаЛояльности,
	|	БонусныеБаллы.Партнер КАК Партнер,
	|	СУММА(БонусныеБаллы.Начислено) КАК Начислено,
	|	СУММА(БонусныеБаллы.КСписанию) КАК КСписанию
	|ИЗ
	|	ВтБонусныеБаллы КАК БонусныеБаллы
	|
	|СГРУППИРОВАТЬ ПО
	|	БонусныеБаллы.БонуснаяПрограммаЛояльности,
	|	БонусныеБаллы.Партнер,
	|	БонусныеБаллы.Период,
	|	БонусныеБаллы.ВидДвижения
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияДенежныеСредстваКонтрагент(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияДенежныеСредстваКонтрагент";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтСуммаПлатежнымиКартами", ТекстыЗапроса) Тогда
		ТекстЗапросаВтСуммаПлатежнымиКартами(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
    УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	Значение(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента) КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|
	|	ДанныеДокумента.КассаККМ КАК ДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.Наличные) КАК ТипДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК ВалютаПлатежа,
	|
	|	Значение(Справочник.Партнеры.РозничныйПокупатель) КАК Партнер,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	НЕОПРЕДЕЛЕНО КАК РасчетныйДокумент,
	|	
	|	ВЫРАЗИТЬ((ДанныеДокумента.СуммаДокумента - ЕСТЬNULL(ВтСуммаПлатежнымиКартами.Сумма, 0))
	|			 * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КАК СуммаОплаты,
	|	ВЫРАЗИТЬ((ДанныеДокумента.СуммаДокумента - ЕСТЬNULL(ВтСуммаПлатежнымиКартами.Сумма, 0))
	|			 * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаОплатыРегл,
	|	ДанныеДокумента.СуммаДокумента - ЕСТЬNULL(ВтСуммаПлатежнымиКартами.Сумма, 0) КАК СуммаОплатыВВалютеПлатежа,
	|
	|	0 КАК СуммаПостоплаты,
	|	0 КАК СуммаПостоплатыРегл,
	|	0 КАК СуммаПостоплатыВВалютеПлатежа,
	|	
	|	0 КАК СуммаПредоплаты,
	|	0 КАК СуммаПредоплатыРегл,
	|	0 КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|	ДанныеДокумента.Валюта КАК ВалютаВзаиморасчетов,
	|
	|	ДанныеДокумента.СуммаДокумента - ЕСТЬNULL(ВтСуммаПлатежнымиКартами.Сумма, 0) КАК СуммаОплатыВВалютеВзаиморасчетов,
	|	0 КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|	0 КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУРасчетов
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСуммаПлатежнымиКартами КАК ВтСуммаПлатежнымиКартами
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ДанныеДокумента.СуммаДокумента - ЕСТЬNULL(ВтСуммаПлатежнымиКартами.Сумма, 0) <> 0
	|	И ДанныеДокумента.Ссылка = &Ссылка
	|	И &ПолноеПроведение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Период,
	|	Значение(Перечисление.ХозяйственныеОперации.ПоступлениеОплатыОтКлиентаПоПлатежнойКарте) КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|
	|	ТаблицаОплатаПлатежнымиКартами.ЭквайринговыйТерминал КАК ДенежныеСредства,
	|	Значение(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваУЭквайера) КАК ТипДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО КАК СтатьяДвиженияДенежныхСредств,
	|	ДанныеДокумента.Валюта КАК ВалютаПлатежа,
	|
	|	Значение(Справочник.Партнеры.РозничныйПокупатель) КАК Партнер,
	|	НЕОПРЕДЕЛЕНО КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|	НЕОПРЕДЕЛЕНО КАК РасчетныйДокумент,
	|	
	|	ВЫРАЗИТЬ(ТаблицаОплатаПлатежнымиКартами.Сумма * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КАК СуммаОплаты,
	|	ВЫРАЗИТЬ(ТаблицаОплатаПлатежнымиКартами.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаОплатыРегл,
	|	ТаблицаОплатаПлатежнымиКартами.Сумма КАК СуммаОплатыВВалютеПлатежа,
	|
	|	0 КАК СуммаПостоплаты,
	|	0 КАК СуммаПостоплатыРегл,
	|	0 КАК СуммаПостоплатыВВалютеПлатежа,
	|		
	|	0 КАК СуммаПредоплаты,
	|	0 КАК СуммаПредоплатыРегл,
	|	0 КАК СуммаПредоплатыВВалютеПлатежа,
	|
	|	ДанныеДокумента.Валюта КАК ВалютаВзаиморасчетов,
	|
	|	ТаблицаОплатаПлатежнымиКартами.Сумма КАК СуммаОплатыВВалютеВзаиморасчетов,
	|	0 КАК СуммаПостоплатыВВалютеВзаиморасчетов,
	|	0 КАК СуммаПредоплатыВВалютеВзаиморасчетов,
	|
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО КАК ИсточникГФУРасчетов
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ДанныеДокумента
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ОтчетОРозничныхПродажах.ОплатаПлатежнымиКартами КАК ТаблицаОплатаПлатежнымиКартами
	|	ПО
	|		ДанныеДокумента.Ссылка = ТаблицаОплатаПлатежнымиКартами.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И &ПолноеПроведение
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДенежныеСредстваВПути(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДенежныеСредстваВПути";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
    УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаПлатежей.НомерСтроки                                                          КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)                                               КАК ВидДвижения,
	|	&Период                                                                              КАК Период,
	
	|	&Организация                                                                         КАК Организация,
	|	ТаблицаПлатежей.ЭквайринговыйТерминал.БанковскийСчет                                 КАК Получатель,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПереводовДенежныхСредств.ПоступлениеОтБанкаПоЭквайрингу)   КАК ВидПереводаДенежныхСредств,
	|	ТаблицаПлатежей.ЭквайринговыйТерминал.Эквайер                                        КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО                                                                         КАК ПлатежныйДокумент,
	|	&Валюта                                                                              КАК Валюта,
	
	|	ТаблицаПлатежей.Сумма                                                                КАК Сумма,
	|	ТаблицаПлатежей.Сумма * &КоэффициентПересчетаВВалютуУпр                              КАК СуммаУпр,
	|	ТаблицаПлатежей.Сумма * &КоэффициентПересчетаВВалютуРегл                             КАК СуммаРегл
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ОплатаПлатежнымиКартами КАК ТаблицаПлатежей
	|
	|ГДЕ
	|	&ПолноеПроведение
	|	И ТаблицаПлатежей.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции


Процедура ПересчитатьТаблицуТоваровВВалютуРегл(Запрос)
	
	Если Запрос.Параметры.Свойство("ТаблицаТоваровПредварительнаяРасчитана") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросПредварительный = Новый Запрос;
	ЗапросПредварительный.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросПредварительный.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                КАК Ссылка,
	|	ТаблицаДокумента.ИдентификаторСтроки                   КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СтавкаНДС                             КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаСНДС                             КАК СуммаСНДС,
	|	ТаблицаДокумента.СуммаНДС                              КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС КАК СуммаБезНДС,
	|	&Валюта                                                КАК Валюта,
	|	&Период                                                КАК Дата
	|
	|ПОМЕСТИТЬ ТаблицаТоваровПредварительная
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ВидыЗапасов КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И &Валюта <> &ВалютаРегламентированногоУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                 КАК Ссылка,
	|	ТаблицаДокумента.ИдентификаторСтроки                    КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СтавкаНДС                             КАК СтавкаНДС,
	|	-ТаблицаДокумента.СуммаСНДС                             КАК СуммаСНДС,
	|	-ТаблицаДокумента.СуммаНДС                              КАК СуммаНДС,
	|	-ТаблицаДокумента.СуммаСНДС + ТаблицаДокумента.СуммаНДС КАК СуммаБезНДС,
	|	&Валюта                                                 КАК Валюта,
	|	&Период                                                 КАК Дата
	|
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ВидыЗапасовПоВозвратамЗакрытойСмены КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И &Валюта <> &ВалютаРегламентированногоУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                КАК Ссылка,
	|	ТаблицаДокумента.ИдентификаторСтроки                   КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СтавкаНДС                             КАК СтавкаНДС,
	|	
	|	ТаблицаДокумента.Сумма
	|	 + ТаблицаДокумента.СуммаНДС * &ЦенаВключаетНДС        КАК СуммаСНДС,
	|	
	|	ТаблицаДокумента.СуммаНДС                              КАК СуммаНДС,
	|	
	|	ВЫБОР КОГДА &ЦенаВключаетНДС = 0 ТОГДА
	|		ТаблицаДокумента.Сумма - ТаблицаДокумента.СуммаНДС
	|	ИНАЧЕ
	|		ТаблицаДокумента.Сумма
	|	КОНЕЦ                                                  КАК СуммаБезНДС,
	|	
	|	&Валюта                                                КАК Валюта,
	|	&Период                                                КАК Дата
	|
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И ТаблицаДокумента.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И &Валюта <> &ВалютаРегламентированногоУчета
	|";
	ЗапросПредварительный.УстановитьПараметр("Ссылка",                         Запрос.Параметры.Ссылка);
	ЗапросПредварительный.УстановитьПараметр("Период",                         Запрос.Параметры.Период);
	ЗапросПредварительный.УстановитьПараметр("Валюта",                         Запрос.Параметры.Валюта);
	ЗапросПредварительный.УстановитьПараметр("ВалютаРегламентированногоУчета", Запрос.Параметры.ВалютаРегламентированногоУчета);
	ЗапросПредварительный.УстановитьПараметр("ЦенаВключаетНДС",                Запрос.Параметры.ЦенаВключаетНДС);
	
	ЗапросПредварительный.Выполнить();
	
	ОбщегоНазначенияУТ.ПересчитатьТаблицуТоваровВВалютуРегл(Запрос.МенеджерВременныхТаблиц);
	
	Запрос.УстановитьПараметр("ТаблицаТоваровПредварительнаяРасчитана", Истина);
	
КонецПроцедуры


Функция ТекстЗапросаВтТаблицаСерииТоваров(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаСерииТоваров";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Помещение,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	ТаблицаТовары.Серия КАК Серия
	|ПОМЕСТИТЬ ВтТаблицаСерииТоваров
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Количество <> 0
	|	И (НЕ ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Помещение,
	|	ВЫБОР КОГДА ТаблицаСерии.ВидВозвратаЧерезКассу = ЗНАЧЕНИЕ(Перечисление.ВидыВозвратовЧерезКассу.ВозвратНеЭтойСмены) 
	|		ТОГДА -ТаблицаСерии.Количество
	|		ИНАЧЕ ТаблицаСерии.Количество
	|	КОНЕЦ,
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий),
	|	ТаблицаСерии.Серия
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Серии КАК ТаблицаСерии
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.Помещение = ТаблицаТовары.Помещение
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ТипНоменклатуры В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаСерии.Количество <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Помещение,
	|	ТаблицаСерии.ВидВозвратаЧерезКассу,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество,
	|	ТаблицаСерии.НомерСтроки
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (4, 6, 8, 10)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтВидыЗапасов";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                                   КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.ВидЗапасов.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	ТаблицаВидыЗапасов.ВидЗапасов                                    КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ВидЗапасовВладельца                КАК ВидЗапасовВладельца,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Валюта                             КАК Валюта,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов                         КАК ТипЗапасов,
	|	Аналитика.Номенклатура                                           КАК Номенклатура,
	|	Аналитика.Характеристика                                         КАК Характеристика,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры                    КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНаборов                         КАК АналитикаУчетаНаборов,
	|	АналитикаКомитента.КлючАналитики                                 КАК АналитикаНоменклатурыКомитента,
	|	ТаблицаВидыЗапасов.НомерГТД                                      КАК НомерГТД,
	|	НЕОПРЕДЕЛЕНО                                                     КАК ДокументРеализации,
	|	ТаблицаВидыЗапасов.Количество                                    КАК Количество,
	|	ТаблицаВидыЗапасов.СуммаСНДС                                     КАК СуммаСНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС                                      КАК СуммаНДС,
	|	ТаблицаВидыЗапасов.СуммаРучнойСкидки                             КАК СуммаРучнойСкидки,
	|	ТаблицаВидыЗапасов.СтавкаНДС                                     КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.ВидЗапасов.НалоговоеНазначение                КАК НалоговоеНазначение,
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение                    КАК ЦелевоеНалоговоеНазначение,
	|	ТаблицаВидыЗапасов.Продавец                                      КАК Продавец,
	|	ТаблицаВидыЗапасов.Партнер                                       КАК Партнер,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки                           КАК ИдентификаторСтроки,
    |	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)                    КАК ВидЗапасовОтгрузки,
    |	НЕОПРЕДЕЛЕНО                                                     КАК СкладОтгрузки,
    |	НЕОПРЕДЕЛЕНО                                                     КАК АналитикаРеализации,
    |	НЕОПРЕДЕЛЕНО                                                     КАК ПериодПродажи,
    |	НЕОПРЕДЕЛЕНО                                                     КАК ПодразделениеРеализации,
	|	Аналитика.Склад                                                  КАК Склад
	|
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК ВидыЗапасовКомитентов
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасов = ВидыЗапасовКомитентов.Ссылка
	|		И ВидыЗапасовКомитентов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК ВидыЗапасовВладельцев
	|	ПО
	|		ВидыЗапасовКомитентов.ВидЗапасовВладельца = ВидыЗапасовВладельцев.Ссылка
	|		И ВидыЗапасовВладельцев.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомитента
	|	ПО
	|		Аналитика.Номенклатура = АналитикаКомитента.Номенклатура
	|		И Аналитика.Характеристика = АналитикаКомитента.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = АналитикаКомитента.Серия
	|		И ТаблицаВидыЗапасов.ВидЗапасов.Комитент = АналитикаКомитента.Склад
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки,
	|	ТаблицаВидыЗапасов.ВидЗапасов.РеализацияЗапасовДругойОрганизации,
	|	ТаблицаВидыЗапасов.ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ВидЗапасовВладельца,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Валюта,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНаборов,
	|	АналитикаКомитента.КлючАналитики,
	|	ТаблицаВидыЗапасов.НомерГТД,
	|	ТаблицаВидыЗапасов.ДокументРеализации,
	|	-ТаблицаВидыЗапасов.Количество,
	|	-ТаблицаВидыЗапасов.СуммаСНДС,
	|	-ТаблицаВидыЗапасов.СуммаНДС,
	|	-ТаблицаВидыЗапасов.СуммаРучнойСкидки,
	|	ТаблицаВидыЗапасов.СтавкаНДС,
	|	ТаблицаВидыЗапасов.ВидЗапасов.НалоговоеНазначение                КАК НалоговоеНазначение,
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение                    КАК ЦелевоеНалоговоеНазначение,
	|	ТаблицаВидыЗапасов.Продавец,
	|	ТаблицаВидыЗапасов.Партнер,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки,
    |	ТаблицаВидыЗапасов.ВидЗапасовОтгрузки                            КАК ВидЗапасовОтгрузки,    
	|	ТаблицаВидыЗапасов.СкладОтгрузки                                 КАК СкладОтгрузки,
    |	КлючиОтгрузки.КлючАналитики                                      КАК АналитикаРеализации,
    |	ТаблицаВидыЗапасов.ДокументРеализации.Дата                       КАК ПериодПродажи,
	|	ЕСТЬNULL(ТаблицаВидыЗапасов.ДокументРеализации.Подразделение, &Подразделение) КАК ПодразделениеРеализации,
	|	Аналитика.Склад
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ВидыЗапасовПоВозвратамЗакрытойСмены КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК ВидыЗапасовКомитентов
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасов = ВидыЗапасовКомитентов.Ссылка
	|		И ВидыЗапасовКомитентов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК ВидыЗапасовВладельцев
	|	ПО
	|		ВидыЗапасовКомитентов.ВидЗапасовВладельца = ВидыЗапасовВладельцев.Ссылка
	|		И ВидыЗапасовВладельцев.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомитента
	|	ПО
	|		Аналитика.Номенклатура = АналитикаКомитента.Номенклатура
	|		И Аналитика.Характеристика = АналитикаКомитента.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = АналитикаКомитента.Серия
	|		И ТаблицаВидыЗапасов.ВидЗапасов.Комитент = АналитикаКомитента.Склад
    |
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиОтгрузки
	|		ПО
	|			Аналитика.Номенклатура = КлючиОтгрузки.Номенклатура
    |			И Аналитика.Характеристика = КлючиОтгрузки.Характеристика
	|			И Аналитика.Серия = КлючиОтгрузки.Серия
	|			И ТаблицаВидыЗапасов.СкладОтгрузки = КлючиОтгрузки.Склад
    |
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтАгентскиеУслуги(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтАгентскиеУслуги";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР КОГДА НЕ Услуги.Ссылка ЕСТЬ NULL 
	|		ТОГДА Услуги.Ссылка
	|		ИНАЧЕ ЕСТЬNULL(Соглашение.Ссылка, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК Соглашение,
	|	ВЫБОР КОГДА НЕ Услуги.Ссылка ЕСТЬ NULL 
	|		ТОГДА Услуги.Ссылка.Валюта
	|		ИНАЧЕ ЕСТЬNULL(Соглашение.Валюта, &Валюта)
	|	КОНЕЦ КАК Валюта,
	|	КОформлению.Номенклатура КАК Номенклатура,
	|	КОформлению.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(КОформлению.Характеристика.Принципал, КОформлению.Номенклатура.Принципал) КАК Принципал
	|ПОМЕСТИТЬ ВтАгентскиеУслуги
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК КОформлению
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСПоставщиками КАК Соглашение
	|	ПО Соглашение.Партнер = ЕСТЬNULL(КОформлению.Характеристика.Принципал, КОформлению.Номенклатура.Принципал)
	|		И Соглашение.Организация = &Организация
	|		И Соглашение.ХозяйственнаяОперация
	|				= ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОказаниеАгентскихУслуг)
	|		И Соглашение.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыСоглашенийСПоставщиками.Действует)
	|		И (&Период >= Соглашение.ДатаНачалаДействия
	|			И (&Период <= Соглашение.ДатаОкончанияДействия
	|			ИЛИ Соглашение.ДатаОкончанияДействия = ДАТАВРЕМЯ(1,1,1))
	|		)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСПоставщиками.АгентскиеУслуги КАК Услуги
	|	ПО Соглашение.Ссылка = Услуги.Ссылка
	|		И КОформлению.Номенклатура = Услуги.Номенклатура
	|		И КОформлению.Характеристика = Услуги.Характеристика
	|ГДЕ
	|	КОформлению.Ссылка = &Ссылка
	|	И КОформлению.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|	И ЕСТЬNULL(КОформлению.Характеристика.Принципал, КОформлению.Номенклатура.Принципал) <> &Организация
	|	И ЕСТЬNULL(КОформлению.Характеристика.Принципал, КОформлению.Номенклатура.Принципал) <> НЕОПРЕДЕЛЕНО
	|	И &ИспользоватьПродажуАгентскихУслуг
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтРаботыУслуги(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтРаботыУслуги";
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтАгентскиеУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтАгентскиеУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтСоответствиеВидовЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтСоответствиеВидовЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТовары.АналитикаУчетаНаборов КАК АналитикаУчетаНаборов,
	|	ТаблицаТовары.Продавец КАК Продавец,
	|	СпрНоменклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Партнер КАК Партнер,
	|   ВЫБОР 
	|		КОГДА НЕ &ОрганизацияПлательщикНДС  
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|		КОГДА ТаблицаТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|		КОГДА ТаблицаТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НеНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая)
	|	КОНЕЦ КАК ЦелевоеНалоговоеНазначение,
	|	ТаблицаТовары.Количество КАК Количество,
	|	(ТаблицаТовары.Сумма
	|		+ &ЦенаВключаетНДС * ТаблицаТовары.СуммаНДС) КАК СуммаСНДС,
	|	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	|	ТаблицаТовары.Сумма КАК Сумма,
	|	ТаблицаТовары.СуммаРучнойСкидки КАК СуммаРучнойСкидки,
	|
	|	АгентскиеУслуги.Соглашение КАК Соглашение,
	|	АгентскиеУслуги.Валюта КАК Валюта,
	|	ЕСТЬNULL(КлючиПринципала.КлючАналитики, НЕОПРЕДЕЛЕНО) КАК АналитикаНоменклатурыПринципала,
	|	ЕСТЬNULL(АгентскиеУслуги.Принципал, НЕОПРЕДЕЛЕНО) КАК Принципал,
	|	ВтСоответствиеВидовЗапасов.ВидЗапасов КАК ВидЗапасов
	|ПОМЕСТИТЬ ВтРаботыУслуги
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ТаблицаТовары
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|	ПО СпрНоменклатура.Ссылка = ТаблицаТовары.Номенклатура
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтАгентскиеУслуги КАК АгентскиеУслуги
	|	ПО ТаблицаТовары.Номенклатура = АгентскиеУслуги.Номенклатура
	|		И ТаблицаТовары.Характеристика = АгентскиеУслуги.Характеристика
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиПринципала
	|	ПО КлючиПринципала.Номенклатура = АгентскиеУслуги.Номенклатура
	|		И КлючиПринципала.Характеристика = АгентскиеУслуги.Характеристика
	|		И КлючиПринципала.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		И КлючиПринципала.Склад = АгентскиеУслуги.Принципал
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтСоответствиеВидовЗапасов КАК ВтСоответствиеВидовЗапасов
	|		ПО ТаблицаТовары.НомерСтроки = ВтСоответствиеВидовЗапасов.НомерСтроки
	|		И НЕ ВтСоответствиеВидовЗапасов.НомерСтроки = 0
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И СпрНоменклатура.ТипНоменклатуры В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|	)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтСуммаПлатежнымиКартами(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтСуммаПлатежнымиКартами";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	СУММА(ТабличнаяЧасть.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВтСуммаПлатежнымиКартами
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ОплатаПлатежнымиКартами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтСуммаПодарочныеСертификаты(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтСуммаПодарочныеСертификаты";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	СУММА(ТабличнаяЧасть.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВтСуммаПодарочныеСертификаты
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ПодарочныеСертификаты КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтБонусныеБаллы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтБонусныеБаллы";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаНачисления КАК Период,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СуммаБонусныхБаллов > 0
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	ТабличнаяЧасть.Партнер КАК Партнер,
	|	ТабличнаяЧасть.БонуснаяПрограммаЛояльности КАК БонуснаяПрограммаЛояльности,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СуммаБонусныхБаллов > 0
	|			ТОГДА ТабличнаяЧасть.СуммаБонусныхБаллов
	|		ИНАЧЕ -ТабличнаяЧасть.СуммаБонусныхБаллов
	|	КОНЕЦ КАК Начислено,
	|	0 КАК КСписанию
	|ПОМЕСТИТЬ ВтБонусныеБаллы
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.НачислениеБонусныхБаллов КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &ПолноеПроведение
	|	И ТабличнаяЧасть.ДатаНачисления <> ДАТАВРЕМЯ(1, 1, 1)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаСписания,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СуммаБонусныхБаллов > 0
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ,
	|	ТабличнаяЧасть.Партнер,
	|	ТабличнаяЧасть.БонуснаяПрограммаЛояльности,
	|	0,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СуммаБонусныхБаллов > 0
	|			ТОГДА ТабличнаяЧасть.СуммаБонусныхБаллов
	|		ИНАЧЕ -ТабличнаяЧасть.СуммаБонусныхБаллов
	|	КОНЕЦ
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.НачислениеБонусныхБаллов КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &ПолноеПроведение
	|	И ТабличнаяЧасть.ДатаСписания <> ДАТАВРЕМЯ(1, 1, 1)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ДатаОплаты,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СуммаБонусныхБаллов > 0
	|			ТОГДА ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ,
	|	ТабличнаяЧасть.Партнер,
	|	ТабличнаяЧасть.БонуснаяПрограммаЛояльности,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СуммаБонусныхБаллов > 0
	|			ТОГДА ТабличнаяЧасть.СуммаБонусныхБаллов
	|		ИНАЧЕ -ТабличнаяЧасть.СуммаБонусныхБаллов
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТабличнаяЧасть.СуммаБонусныхБаллов > 0
	|			ТОГДА ТабличнаяЧасть.СуммаБонусныхБаллов
	|		ИНАЧЕ -ТабличнаяЧасть.СуммаБонусныхБаллов
	|	КОНЕЦ
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ОплатаБонуснымиБаллами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И &ПолноеПроведение
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтСуммаБонусныеБаллы(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтСуммаБонусныеБаллы";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	СУММА(ТабличнаяЧасть.СуммаБонусныхБаллов) КАК Сумма
	|ПОМЕСТИТЬ ВтСуммаБонусныеБаллы
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ОплатаБонуснымиБаллами КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтКурсыВалют(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтКурсыВалют";
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтАгентскиеУслуги", ТекстыЗапроса) Тогда
		ТекстЗапросаВтАгентскиеУслуги(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	КурсыВалют.Валюта КАК Валюта,
	|
	|	(КурсВалютыДокумента.Курс * КурсыВалют.Кратность)
	|   / (КурсВалютыДокумента.Кратность * КурсыВалют.Курс) КАК КоэффициентПересчета
	|
	|ПОМЕСТИТЬ ВтКурсыВалют
	|ИЗ
	|	РегистрСведений.КурсыВалют.СрезПоследних(&Период,
	|		Валюта В (
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ТаблицаВидыЗапасов.ВидЗапасов.Валюта КАК Валюта
	|			ИЗ
	|				Документ.ОтчетОРозничныхПродажах.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|			ГДЕ
	|				ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|				И ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|			ОБЪЕДИНИТЬ
	|
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ТаблицаВидыЗапасов.ВидЗапасов.ВидЗапасовВладельца.Валюта КАК Валюта
	|			ИЗ
	|				Документ.ОтчетОРозничныхПродажах.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|			ГДЕ
	|				ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|				И ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|				И ТаблицаВидыЗапасов.ВидЗапасов.ВидЗапасовВладельца.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|			ОБЪЕДИНИТЬ
	|
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ТаблицаВидыЗапасов.ВидЗапасов.Валюта КАК Валюта
	|			ИЗ
	|				Документ.ОтчетОРозничныхПродажах.ВидыЗапасовПоВозвратамЗакрытойСмены КАК ТаблицаВидыЗапасов
	|
	|			ГДЕ
	|				ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|				И ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|			ОБЪЕДИНИТЬ
	|
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				АгентскиеУслуги.Валюта КАК Валюта
	|			ИЗ
	|				ВтАгентскиеУслуги КАК АгентскиеУслуги
	|			)
	|	) КАК КурсыВалют
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.КурсыВалют.СрезПоследних(&Период, Валюта = &Валюта) КАК КурсВалютыДокумента
	|	ПО
	|		Истина
	|
	|ГДЕ
	|	КурсВалютыДокумента.Кратность <> 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСРасчетНалоговыхОбязательств(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСРасчетНалоговыхОбязательств";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ	
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&АналитикаУчетаПоПартнерамРозничная КАК АналитикаУчетаПоПартнерам,
	|
	|	ТаблицаТоваров.СтавкаНДС КАК ОбъектРасчетов,
	|
	// Сворачиваем так же как и при подготовке временных таблиц для заполнения видов запасов 
	|	&ВидПоставки КАК ВидПоставки,
	|	&Валюта КАК Валюта,
	|
	|	ТаблицаТоваров.Ссылка КАК ДокументПоставки,
	|	&МоментОпределенияБазыНДС КАК МоментОпределенияБазыНДС,
	|
	|	СУММА(ВЫБОР 
	|			КОГДА ТаблицаТоваров.Ссылка.ЦенаВключаетНДС ТОГДА
 	|				ТаблицаТоваров.Сумма - ТаблицаТоваров.СуммаАкцизногоНалога 
	|			ИНАЧЕ
	|				ТаблицаТоваров.Сумма + ТаблицаТоваров.СуммаНДС
	|		КОНЕЦ) КАК СуммаПоставкиТребующаяРегистрацииНН,
	|
	|	0 КАК СуммаПоставкиНеТребующаяРегистрацииНН
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ТаблицаТоваров
	|
	|ГДЕ
	|	&ОрганизацияПлательщикНДС
	|	И ТаблицаТоваров.Ссылка = &Ссылка
	|	И &ТипКассы <> ЗНАЧЕНИЕ(Перечисление.ТипыКассККМ.АвтономнаяККМ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.СтавкаНДС,
	|	ТаблицаТоваров.Ссылка

	|ОБЪЕДИНИТЬ ВСЕ

	|ВЫБРАТЬ
	|	ОтчетОРозничныхПродажахВыручка.ОтчетОРозничнойВыручке.Дата,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&АналитикаУчетаПоПартнерамРозничная,
	|	ОтчетОРозничныхПродажахВыручка.СтавкаНДС,
	|	&ВидПоставки,
	|	&Валюта,
	|	НЕОПРЕДЕЛЕНО,
	|	&МоментОпределенияБазыНДС,
	|	-ОтчетОРозничныхПродажахВыручка.Сумма,
	|	0
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Выручка КАК ОтчетОРозничныхПродажахВыручка
	|ГДЕ
	|	&ОрганизацияПлательщикНДС
	|	И ОтчетОРозничныхПродажахВыручка.Ссылка = &Ссылка
	|	И &ТипКассы = ЗНАЧЕНИЕ(Перечисление.ТипыКассККМ.АвтономнаяККМ)

	|ОБЪЕДИНИТЬ ВСЕ

	|ВЫБРАТЬ
	|	ОтчетОРозничныхПродажахВыручка.ОтчетОРозничнойВыручке.Дата,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&АналитикаУчетаПоПартнерамРозничная,
	|	ОтчетОРозничныхПродажахВыручка.СтавкаНДС,
	|	&ВидПоставки,
	|	&Валюта,
	|	ОтчетОРозничныхПродажахВыручка.Ссылка,
	|	&МоментОпределенияБазыНДС,
	|	ОтчетОРозничныхПродажахВыручка.Сумма,
	|	0
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Выручка КАК ОтчетОРозничныхПродажахВыручка
	|ГДЕ
	|	&ОрганизацияПлательщикНДС
	|	И ОтчетОРозничныхПродажахВыручка.Ссылка = &Ссылка
	|	И &ТипКассы = ЗНАЧЕНИЕ(Перечисление.ТипыКассККМ.АвтономнаяККМ)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладныхТовары(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСНоменклатурныйСоставДляНалоговыхНакладныхТовары";
	ИмяРегистраДляПроверки = "НДСНоменклатурныйСоставДляНалоговыхНакладных";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистраДляПроверки, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&АналитикаУчетаПоПартнерамРозничная КАК АналитикаУчетаПоПартнерам,
	|
	|	ТаблицаТоваров.СтавкаНДС КАК ОбъектРасчетов,
	|
	// Сворачиваем так же как и при подготовке временных таблиц для заполнения видов запасов 
	|	&ВидПоставки КАК ВидПоставки,
	|
	|	ТаблицаТоваров.Ссылка КАК ДокументПоставки,
	|   НЕОПРЕДЕЛЕНО КАК ДокументПоставкиДляВозвратов,
	|
	|	&Валюта КАК Валюта,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыЗаполненияНоменклатурыНалоговыхДокументов.ТоварыУслуги) КАК СпособЗаполнения,
	|
	|	ТаблицаТоваров.СтавкаНДС      КАК СтавкаНДС,
	|	НЕОПРЕДЕЛЕНО                  КАК НомерГТД,
	|	ТаблицаТоваров.Номенклатура   КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.Упаковка       КАК Упаковка,
	|
	|	(ВЫБОР КОГДА ТаблицаТоваров.Ссылка.ЦенаВключаетНДС ТОГДА
 	|		ТаблицаТоваров.Сумма - ТаблицаТоваров.СуммаНДС - ТаблицаТоваров.СуммаАкцизногоНалога
	|	ИНАЧЕ
	|		ТаблицаТоваров.Сумма
	|	КОНЕЦ) / ТаблицаТоваров.КоличествоУпаковок КАК ЦенаНН,
	|
	|	ВЫБОР КОГДА ТаблицаТоваров.Ссылка.ЦенаВключаетНДС ТОГДА
	|		ТаблицаТоваров.Сумма
	|	ИНАЧЕ
 	|		ТаблицаТоваров.Сумма + ТаблицаТоваров.СуммаНДС + ТаблицаТоваров.СуммаАкцизногоНалога
	|	КОНЕЦ КАК СуммаВзаиморасчетов,
	|
	|	ТаблицаТоваров.Количество КАК Количество,
	|
	|	ТаблицаТоваров.КоличествоУпаковок КАК КоличествоУпаковок
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ТаблицаТоваров
	|
	|ГДЕ
	|	&ОрганизацияПлательщикНДС
	|	И ТаблицаТоваров.Ссылка = &Ссылка
	|	И &ФормироватьИтоговыеНалоговыеВРозницеСводноПоНоменклатуре = ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ	
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&АналитикаУчетаПоПартнерамРозничная КАК АналитикаУчетаПоПартнерам,
	|
	|	ТаблицаТоваров.СтавкаНДС КАК ОбъектРасчетов,
	|
	// Сворачиваем так же как и при подготовке временных таблиц для заполнения видов запасов 
	|	&ВидПоставки КАК ВидПоставки,
	|
	|	ТаблицаТоваров.Ссылка КАК ДокументПоставки,
	|   НЕОПРЕДЕЛЕНО КАК ДокументПоставкиДляВозвратов,
	|
	|	&Валюта КАК Валюта,
	|	ЗНАЧЕНИЕ(Перечисление.СпособыЗаполненияНоменклатурыНалоговыхДокументов.ТоварыУслуги) КАК СпособЗаполнения,
	|
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТоваров.Ссылка.Организация.НоменклатураЗаполненияИтоговыхНалоговыхПоРознице.НоменклатураГТД КАК НомерГТД,
	|	ТаблицаТоваров.Ссылка.Организация.НоменклатураЗаполненияИтоговыхНалоговыхПоРознице   КАК Номенклатура,
	|	НЕОПРЕДЕЛЕНО КАК Характеристика,
	|	НЕОПРЕДЕЛЕНО КАК Упаковка,
	|
	|	0 КАК ЦенаНН,
	|
	|	СУММА(ВЫБОР 
	|			КОГДА ТаблицаТоваров.Ссылка.ЦенаВключаетНДС ТОГДА
	|				ТаблицаТоваров.Сумма
	|			ИНАЧЕ
 	|				ТаблицаТоваров.Сумма + ТаблицаТоваров.СуммаНДС + ТаблицаТоваров.СуммаАкцизногоНалога
	|		КОНЕЦ) КАК СуммаВзаиморасчетов,
	|
	|	0 КАК Количество,
	|
	|	0 КАК КоличествоУпаковок
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ТаблицаТоваров
	|
	|ГДЕ
	|	&ОрганизацияПлательщикНДС
	|	И ТаблицаТоваров.Ссылка = &Ссылка
	|	И &ФормироватьИтоговыеНалоговыеВРозницеСводноПоНоменклатуре
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.СтавкаНДС,
	|	ТаблицаТоваров.Ссылка
	|";
		
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладныхВидыЗапасов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСНоменклатурныйСоставДляНалоговыхНакладныхВидыЗапасов";
	ИмяРегистраДляПроверки = "НДСНоменклатурныйСоставДляНалоговыхНакладных";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистраДляПроверки, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|
	|	НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|
	|	ТаблицаВидыЗапасов.СтавкаНДС      КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.НомерГТД       КАК НомерГТД,
	|	Аналитика.Номенклатура            КАК Номенклатура,
	|	Аналитика.Характеристика          КАК Характеристика,
	|
	|	ТаблицаВидыЗапасов.Количество КАК Количество
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|ГДЕ
	|	&ОрганизацияПлательщикНДС
	|	И ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|
	|	НЕОПРЕДЕЛЕНО КАК ОбъектРасчетов,
	|
	|	ТаблицаВидыЗапасов.СтавкаНДС      КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.НомерГТД       КАК НомерГТД,
	|	Аналитика.Номенклатура            КАК Номенклатура,
	|	Аналитика.Характеристика          КАК Характеристика,
	|
	|	ТаблицаВидыЗапасов.Количество КАК Количество
	// Дополнительные колонки для распределения
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ВидыЗапасовПоВозвратамЗакрытойСмены КАК ТаблицаВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|ГДЕ
	|	&ОрганизацияПлательщикНДС
	|	И ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|	И &ФормироватьИтоговыеНалоговыеВРозницеСводноПоНоменклатуре = ЛОЖЬ
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ДополнитьТаблицуНомеромГТД(ТаблицаЗапросаТовары, ТаблицаЗапросаВидыЗапасов, ПропуститьЗаполнениеНомеровГТД)
	
	Если НЕ ПропуститьЗаполнениеНомеровГТД Тогда
	
		//ТаблицаТовары = ТаблицаЗапроса.Скопировать(, "Номенклатура, Характеристика, СтавкаНДС, Упаковка, ЗаказКлиента, Количество, КоличествоУпаковок");
		//ТаблицаТовары.Свернуть("Номенклатура, Характеристика, Склад, Упаковка, ЗаказКлиента", "Количество, КоличествоУпаковок");
		ПогрешностьПогрешностьСуммаВзаиморасчетов = 0;
		
		СтруктураПоиска = Новый Структура("Номенклатура, Характеристика, ОбъектРасчетов");
		Для Каждого СтрокаВидовЗапасов Из ТаблицаЗапросаВидыЗапасов Цикл
			
			КоличествоКРаспределению = СтрокаВидовЗапасов.Количество;
			
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаВидовЗапасов);
			Для Каждого СтрокаТоваров Из ТаблицаЗапросаТовары.НайтиСтроки(СтруктураПоиска) Цикл
				
				Если СтрокаТоваров.Количество = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				Количество = Мин(КоличествоКРаспределению, СтрокаТоваров.Количество);
				
				НоваяСтрока = ТаблицаЗапросаТовары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТоваров);
				
				НоваяСтрока.НомерГТД = СтрокаВидовЗапасов.НомерГТД;
				НоваяСтрока.Количество = Количество;
				НоваяСтрока.КоличествоУпаковок = ?(СтрокаТоваров.Количество <> 0, СтрокаТоваров.КоличествоУпаковок * Количество / СтрокаТоваров.Количество, 0);
				НоваяСтрока.СуммаВзаиморасчетов = ?(СтрокаТоваров.Количество <> 0, НДСИсходящийСервер.ОкруглитьСУчетомПогрешности(Количество * СтрокаТоваров.СуммаВзаиморасчетов / СтрокаТоваров.Количество, 2, ПогрешностьПогрешностьСуммаВзаиморасчетов), 0);
				
				СтрокаТоваров.Количество = СтрокаТоваров.Количество - НоваяСтрока.Количество;
				СтрокаТоваров.КоличествоУпаковок = СтрокаТоваров.КоличествоУпаковок - НоваяСтрока.КоличествоУпаковок;
				СтрокаТоваров.СуммаВзаиморасчетов = СтрокаТоваров.СуммаВзаиморасчетов - НоваяСтрока.СуммаВзаиморасчетов;
				
				КоличествоКРаспределению = КоличествоКРаспределению - НоваяСтрока.Количество;
				
				Если КоличествоКРаспределению = 0 Тогда
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
		МассивУдаляемыхСтрок = ТаблицаЗапросаТовары.НайтиСтроки(Новый Структура("Количество", 0));
		Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
			ТаблицаЗапросаТовары.Удалить(СтрокаТаблицы);
		КонецЦикла;
		
		ТаблицаЗапросаТовары.Колонки.Удалить("Количество");
		
	КонецЕсли;
		
	Возврат ТаблицаЗапросаТовары;
	
КонецФункции

Функция ТекстЗапросаТаблицаКнигаДоходовРасходовПоЕдиномуНалогу(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "КнигаДоходовРасходовПоЕдиномуНалогу";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&СтатьяДекларацииПоЕдиномуНалогу КАК Статья,
	|	&АналитикаУчетаПоПартнерамРозничная КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО КАК ЗаказКлиента,
	|	НЕОПРЕДЕЛЕНО КАК РасчетныйДокумент,
	|	&Валюта КАК Валюта,
	|	&Период КАК ДатаПлатежа,
	|	ВЫБОР КОГДА &СтатьяДекларацииПоЕдиномуНалогу <> ЗНАЧЕНИЕ(Справочник.СтатьиНалоговыхДеклараций.ЕННК_ДоходыВозвраты) ТОГДА
	|		ОтчетОРознице.СуммаПоЕдиномуНалогу
	|	ИНАЧЕ
	|		- ОтчетОРознице.СуммаПоЕдиномуНалогу
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРознице
	|ГДЕ
	|	ОтчетОРознице.Ссылка = &Ссылка
	|	И &СтатьяДекларацииПоЕдиномуНалогу <> ЗНАЧЕНИЕ(Справочник.СтатьиНалоговыхДеклараций.ПустаяСсылка)
	|	И &СтатьяДекларацииПоЕдиномуНалогу <> ЗНАЧЕНИЕ(Справочник.СтатьиНалоговыхДеклараций.ЕННК_ДоходыДоходомНеПризнается)
	|	И ОтчетОРознице.СуммаПоЕдиномуНалогу <> 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции


Функция ТекстЗапросаТаблицаРозничныеПродажиПодакцизныхТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РозничныеПродажиПодакцизныхТоваров";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Склад КАК Склад,
	|	ВЫБОР
	|		КОГДА ОтчетОРозничныхПродажахТовары.Ссылка.ЦенаВключаетНДС
	|			ТОГДА ОтчетОРозничныхПродажахТовары.Сумма - ОтчетОРозничныхПродажахТовары.СуммаАкцизногоНалога
	|		ИНАЧЕ ОтчетОРозничныхПродажахТовары.Сумма + ОтчетОРозничныхПродажахТовары.СуммаНДС
	|	КОНЕЦ КАК БазаАкцизногоНалога,
	|	ОтчетОРозничныхПродажахТовары.СуммаАкцизногоНалога,
	|	ОтчетОРозничныхПродажахТовары.ПодакцизныеТоварыДляКоммерческогоИспользования КАК ДляКоммерческогоИспользования,
	|	ОтчетОРозничныхПродажахТовары.СтатьяДекларацииПоАкцизномуНалогу
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ОтчетОРозничныхПродажахТовары
	|ГДЕ
	|	ОтчетОРозничныхПродажахТовары.Ссылка = &Ссылка
	|	И &ТипКассы <> ЗНАЧЕНИЕ(Перечисление.ТипыКассККМ.АвтономнаяККМ)
	|	И ОтчетОРозничныхПродажахТовары.СтатьяДекларацииПоАкцизномуНалогу <> ЗНАЧЕНИЕ(Справочник.СтатьиНалоговыхДеклараций.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	   
КонецФункции


Процедура ДополнитьТаблицыДляДвижений(Запрос, Таблицы)
	
	ИтоговыеНалоговыеВРозницеСводно = Неопределено;
	Запрос.Параметры.Свойство("ФормироватьИтоговыеНалоговыеВРозницеСводноПоНоменклатуре", ИтоговыеНалоговыеВРозницеСводно);
	
	Если Таблицы.Свойство("ТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладныхТовары") И Таблицы.Свойство("ТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладныхВидыЗапасов") Тогда
		
		ТаблицаДвиженийДляРегистра = ДополнитьТаблицуНомеромГТД(Таблицы.ТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладныхТовары.Скопировать(),
																Таблицы.ТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладныхВидыЗапасов,
																?(ИтоговыеНалоговыеВРозницеСводно = Неопределено, Ложь, ИтоговыеНалоговыеВРозницеСводно));
		
		Таблицы.Вставить("ТаблицаНДСНоменклатурныйСоставДляНалоговыхНакладных", ТаблицаДвиженийДляРегистра);
		
	КонецЕсли;
	
КонецПроцедуры


Процедура УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуУПР")
		И Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуРегл") Тогда
		Возврат;
	КонецЕсли;
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Запрос.Параметры.Валюта,
	                                                                         Запрос.Параметры.Валюта,
	                                                                         Запрос.Параметры.Период);
	
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУПР",  Коэффициенты.КоэффициентПересчетаВВалютуУПР);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	
КонецПроцедуры

Процедура УстановитьПараметрЗапросаАналитикаУчетаПоПартнерам(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаУчетаПоПартнерам") Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерам", РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(Запрос.Параметры));
	
КонецПроцедуры


Процедура ИнициализироватьКлючиАналитикиУчетаПоПартнерам(Запрос)

	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаПоПартнерамИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ТаблицаТовары.Партнер КАК Партнер,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка) КАК Договор,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности
	|ИЗ (
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаВидыЗапасов.Партнер КАК Партнер
	|	ИЗ
	|		Документ.ОтчетОРозничныхПродажах.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|	ГДЕ
	|		ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТаблицаТовары.Партнер КАК Партнер
	|	ИЗ
	|		Документ.ОтчетОРозничныхПродажах.Товары КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|		И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|
	|	) КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО
	|		Аналитика.Организация = &Организация
	|		И Аналитика.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|		И ТаблицаТовары.Партнер = Аналитика.Партнер
	|		И Аналитика.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|		И Аналитика.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|ГДЕ
	|	Аналитика.КлючАналитики ЕСТЬ NULL
	|");
	ЗапросАналитик.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросАналитик.УстановитьПараметр("Организация", Запрос.Параметры.Организация);

	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаПоПартнерам.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаПоПартнерамИнициализированы", Истина);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Номенклатура		КАК Номенклатура,
	|	ТаблицаТовары.Характеристика	КАК Характеристика,
	|	ТаблицаТовары.Серия				КАК Серия,
	|	ТаблицаТовары.Склад				КАК Склад
	|ИЗ
	|	(
	|		ВЫБРАТЬ
	|			Аналитика.Номенклатура КАК Номенклатура,
	|			Аналитика.Характеристика КАК Характеристика,
	|			ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|			ВидыЗапасовКомитентов.Комитент КАК Склад
	|		ИЗ
	|			Документ.ОтчетОРозничныхПродажах.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|		
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовКомитентов
	|			ПО ТаблицаВидыЗапасов.ВидЗапасов = ВидыЗапасовКомитентов.Ссылка
	|				И ВидыЗапасовКомитентов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовВладельцев
	|			ПО ВидыЗапасовКомитентов.ВидЗапасовВладельца = ВидыЗапасовВладельцев.Ссылка
	|				И ВидыЗапасовВладельцев.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ГДЕ
	|			ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|			И ВидыЗапасовКомитентов.Комитент ЕСТЬ НЕ NULL
	|
	|		ОБЪЕДИНИТЬ ВСЕ
	|
	|		ВЫБРАТЬ
	|			Аналитика.Номенклатура КАК Номенклатура,
	|			Аналитика.Характеристика КАК Характеристика,
	|			ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|			ВидыЗапасовВладельцев.Комитент КАК Склад
	|		ИЗ
	|			Документ.ОтчетОРозничныхПродажах.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|		
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовКомитентов
	|			ПО ТаблицаВидыЗапасов.ВидЗапасов = ВидыЗапасовКомитентов.Ссылка
	|				И ВидыЗапасовКомитентов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовВладельцев
	|			ПО ВидыЗапасовКомитентов.ВидЗапасовВладельца = ВидыЗапасовВладельцев.Ссылка
	|				И ВидыЗапасовВладельцев.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ГДЕ
	|			ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|			И ВидыЗапасовВладельцев.Комитент ЕСТЬ НЕ NULL
	|
	|		ОБЪЕДИНИТЬ ВСЕ
	|
	|		ВЫБРАТЬ
	|			Аналитика.Номенклатура КАК Номенклатура,
	|			Аналитика.Характеристика КАК Характеристика,
	|			ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|			ВидыЗапасовПоВозвратамЗакрытойСмены.СкладОтгрузки КАК Склад
	|		ИЗ
	|			Документ.ОтчетОРозничныхПродажах.ВидыЗапасовПоВозвратамЗакрытойСмены КАК ВидыЗапасовПоВозвратамЗакрытойСмены
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|			ПО ВидыЗапасовПоВозвратамЗакрытойСмены.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|		
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовКомитентов
	|			ПО ВидыЗапасовПоВозвратамЗакрытойСмены.ВидЗапасов = ВидыЗапасовКомитентов.Ссылка
	|				И ВидыЗапасовКомитентов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовВладельцев
	|			ПО ВидыЗапасовКомитентов.ВидЗапасовВладельца = ВидыЗапасовВладельцев.Ссылка
	|				И ВидыЗапасовВладельцев.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ГДЕ
	|			ВидыЗапасовПоВозвратамЗакрытойСмены.Ссылка = &Ссылка
	|			И (ВидыЗапасовКомитентов.Комитент ЕСТЬ НЕ NULL ИЛИ ВидыЗапасовВладельцев.Комитент ЕСТЬ НЕ NULL)
	|		    И ВидыЗапасовПоВозвратамЗакрытойСмены.СкладОтгрузки <> &Склад
	|	) КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомитента
	|	ПО ТаблицаТовары.Номенклатура = АналитикаКомитента.Номенклатура
	|		И ТаблицаТовары.Характеристика	= АналитикаКомитента.Характеристика
	|		И ТаблицаТовары.Серия = АналитикаКомитента.Серия
	|		И ТаблицаТовары.Склад = АналитикаКомитента.Склад
	|ГДЕ
	|	АналитикаКомитента.КлючАналитики ЕСТЬ NULL
	|");
	
	ЗапросАналитик.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросАналитик.УстановитьПараметр("Организация", Запрос.Параметры.Организация);
	ЗапросАналитик.УстановитьПараметр("Склад", Запрос.Параметры.Склад);

	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	// Наборы
	ЗапросАналитик = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.НоменклатураНабора   КАК НоменклатураНабора,
	|	ТаблицаТовары.ХарактеристикаНабора КАК ХарактеристикаНабора
	|
	|ИЗ
	|	(
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Аналитика.НоменклатураНабора   КАК НоменклатураНабора,
	|		Аналитика.ХарактеристикаНабора КАК ХарактеристикаНабора
	|	ИЗ
	|		Документ.ОтчетОРозничныхПродажах.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНаборов КАК Аналитика
	|		ПО
	|			ТаблицаВидыЗапасов.АналитикаУчетаНаборов = Аналитика.КлючАналитики
	|
	|	ГДЕ
	|		ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Аналитика.НоменклатураНабора   КАК НоменклатураНабора,
	|		Аналитика.ХарактеристикаНабора КАК ХарактеристикаНабора
	|	ИЗ
	|		Документ.ОтчетОРозничныхПродажах.ВидыЗапасовПоВозвратамЗакрытойСмены КАК ВидыЗапасовПоВозвратамЗакрытойСмены
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНаборов КАК Аналитика
	|		ПО
	|			ВидыЗапасовПоВозвратамЗакрытойСмены.АналитикаУчетаНаборов = Аналитика.КлючАналитики
	|
	|	ГДЕ
	|		ВидыЗапасовПоВозвратамЗакрытойСмены.Ссылка = &Ссылка
	|
	|	) КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНаборов КАК АналитикаКомитента
	|	ПО
	|		ТаблицаТовары.НоменклатураНабора     = АналитикаКомитента.НоменклатураНабора
	|		И ТаблицаТовары.ХарактеристикаНабора = АналитикаКомитента.ХарактеристикаНабора
	|
	|ГДЕ
	|	АналитикаКомитента.КлючАналитики ЕСТЬ NULL
	|");
	
	ЗапросАналитик.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);

	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНаборов.СоздатьКлючАналитики(Выборка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры

Функция ИнициализироватьВидыЗапасов(Реквизиты)
	
	СоответствиеВидовЗапасов = Новый ТаблицаЗначений;
	СоответствиеВидовЗапасов.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число")); 
	СоответствиеВидовЗапасов.Колонки.Добавить("ВидЗапасов",  Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов")); 
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|   , ВЫБОР 
	|   	КОГДА НЕ &ОрганизацияПлательщикНДС 
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|		КОГДА ТаблицаТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС) 
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|		КОГДА ТаблицаТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НеНДС) 
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность)
	|		ИНАЧЕ
	|   		ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая)
	|	КОНЕЦ КАК ЦелевоеНалоговоеНазначение
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО СпрНоменклатура.Ссылка = ТаблицаТовары.Номенклатура
	|		И СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|
	|ИТОГИ ПО
	|	ЦелевоеНалоговоеНазначение
	|");
	
	Запрос.УстановитьПараметр("Ссылка", Реквизиты.Ссылка);
	Запрос.УстановитьПараметр("ОрганизацияПлательщикНДС", НДСОбщегоНазначенияСервер.ОрганизацияКонтрагентПлательщикНДС(Реквизиты.Организация, Реквизиты.Период));
	Результат = Запрос.Выполнить();
	
#Область СоответствиеВидовЗапасовПоРаботам
	Если Не Результат.Пустой() Тогда
		
		ДопКолонки = Новый Структура("Комитент, Соглашение, Валюта, НалоговоеНазначение, НалоговоеНазначениеОрганизации, Поставщик, Подразделение, Менеджер, Сделка, Наначение");
		ДопКолонки.Вставить("ОбособленныйУчетТоваровПоСделке",	Ложь);
		ДопКолонки.Вставить("ВидЗапасов",						Справочники.ВидыЗапасов.ПустаяСсылка());
		ДопКолонки.Вставить("ГруппаФинансовогоУчета",			Справочники.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка());
		ДопКолонки.Вставить("Организация",						Реквизиты.Организация);
		ДопКолонки.Вставить("ТипЗапасов",						Перечисления.ТипыЗапасов.Услуга);
		ДопКолонки.Вставить("ВариантОбособленногоУчетаТоваров",	Перечисления.ВариантыОбособленногоУчетаТоваров.НеВедется);
		ДопКолонки.Вставить("ХозяйственнаяОперация",			Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
		ДопКолонки.Вставить("Назначение",						Справочники.Назначения.ПустаяСсылка());
		
			
		ВыборкаПоНазначениям = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоНазначениям.Следующий() Цикл
		
		ДопКолонки.Вставить("НалоговоеНазначение", ВыборкаПоНазначениям.ЦелевоеНалоговоеНазначение);
        ДопКолонки.Вставить("НалоговоеНазначениеОрганизации", Справочники.Организации.НалоговоеНазначениеНДС(Реквизиты.Организация, Реквизиты.Период));
		
		ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
			ДопКолонки.Организация,
			ДопКолонки.ХозяйственнаяОперация,
			ДопКолонки);
		
		Выборка = ВыборкаПоНазначениям.Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = СоответствиеВидовЗапасов.Добавить();
			НоваяСтрока.НомерСтроки	= Выборка.НомерСтроки;
			НоваяСтрока.ВидЗапасов	= ВидЗапасов;
		КонецЦикла;
		
		КонецЦикла;
	КонецЕсли;
#КонецОбласти
	
	Возврат СоответствиеВидовЗапасов;
	
КонецФункции

Функция ТекстЗапросаВтСоответствиеВидовЗапасов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтСоответствиеВидовЗапасов";
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	СоответствиеВидовЗапасов.НомерСтроки КАК НомерСтроки,
	|	СоответствиеВидовЗапасов.ВидЗапасов  КАК ВидЗапасов
	|ПОМЕСТИТЬ ВтСоответствиеВидовЗапасов
	|ИЗ
	|	&СоответствиеВидовЗапасов КАК СоответствиеВидовЗапасов";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти


#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт


	// Отчет о розничных продажах
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьТоварногоЧека";
	КомандаПечати.Идентификатор = "ТоварныйЧек";
	КомандаПечати.Представление = НСтр("ru='Отчет о розничных продажах';uk='Звіт про роздрібні продажі'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	

КонецПроцедуры

// Процедура печати документа.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
КонецПроцедуры

// Функция получает данные для формирования печатной формы Товарный чек.
//
Функция ПолучитьДанныеДляПечатнойФормыТоварныйЧек(ПараметрыПечати, МассивОбъектов, ПараметрыВывода) Экспорт
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	
	УстановитьПривилегированныйРежим(Истина);

	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ДокЧек.Номер                        КАК Номер,
	|	ДокЧек.Дата                         КАК Дата,
	|	ДокЧек.Ссылка                       КАК Ссылка,
	|	ДокЧек.Склад                        КАК Склад,
	|	ДокЧек.КассаККМ                     КАК КассаККМ,
	|	ДокЧек.Валюта                       КАК Валюта,
	|	ДокЧек.ЦенаВключаетНДС              КАК ЦенаВключаетНДС,
	|	ДокЧек.КассаККМ.Представление       КАК Покупатель,
	|	ДокЧек.Ответственный.ФизическоеЛицо КАК Ответственный,
	|	ДокЧек.Организация                  КАК Организация,
	|	ДокЧек.Организация.Префикс       КАК Префикс,
	|	ДокЧек.Организация.Представление КАК Поставщик,
	|	ДокЧек.СуммаДокумента            КАК СуммаДокумента,
	|	ВЫБОР 
	|		КОГДА 
	|			ДокЧек.Подразделение.СоответствуетСтруктуреЮридическихЛиц 
	|		ТОГДА
	|			ДокЧек.Подразделение
	|		ИНАЧЕ
	|			НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Подразделение
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ДокЧек
	|ГДЕ
	|	ДокЧек.Ссылка В (&МассивДокументов)
	|УПОРЯДОЧИТЬ ПО
	|	ДокЧек.МоментВремени
	|;
	|
	|ВЫБРАТЬ
	|	Таблица.Ссылка                            КАК Ссылка,
	|
	|	ВариантыКомплектацииНоменклатуры.Ссылка                                    КАК ВариантКомплектацииНоменклатуры,
	|	ВариантыКомплектацииНоменклатуры.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ВариантыКомплектацииНоменклатуры.ВариантРасчетаЦеныНабора                  КАК ВариантРасчетаЦеныНабора,
	|	Таблица.НоменклатураНабора                                                 КАК НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора                                               КАК ХарактеристикаНабора,
	|
	|	Таблица.НомерСтроки        КАК НомерСтроки,
	|	Таблица.Номенклатура       КАК Номенклатура,
	|	Таблица.Характеристика     КАК Характеристика,
	|	Таблица.Количество         КАК Количество,
	|	Таблица.КоличествоУпаковок КАК КоличествоУпаковок,
	|	Таблица.Упаковка                          КАК Упаковка,
	|	Таблица.Цена                              КАК Цена,
	|	Таблица.КоличествоУпаковок * Таблица.Цена - Таблица.Сумма КАК СуммаСкидки,
	|	Таблица.КоличествоУпаковок * Таблица.Цена                 КАК СуммаБезСкидки,
	|	Таблица.Сумма                                             КАК Сумма,
	|	Таблица.СуммаНДС                                          КАК СуммаНДС,
	|	Таблица.Помещение                                         КАК Помещение
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.Товары КАК Таблица
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыКомплектацииНоменклатуры КАК ВариантыКомплектацииНоменклатуры
	|		ПО ВариантыКомплектацииНоменклатуры.Владелец = Таблица.НоменклатураНабора
	|		И ВариантыКомплектацииНоменклатуры.Характеристика = Таблица.ХарактеристикаНабора
	|		И ВариантыКомплектацииНоменклатуры.Основной
	|
	|ГДЕ
	|	Таблица.Ссылка В (&МассивДокументов)
	|;
	|
	|
	|ВЫБРАТЬ
	|	Таблица.Ссылка                 КАК Ссылка,
	|	Таблица.НоменклатураНабора     КАК НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора   КАК ХарактеристикаНабора,
	|	МИНИМУМ(Таблица.НомерСтроки)   КАК НомерСтроки,
	|	СУММА(Таблица.Сумма)                       КАК Сумма,
	|	СУММА(Таблица.СуммаНДС)                    КАК СуммаНДС,
	|	СУММА(Таблица.СуммаСкидки)                 КАК СуммаСкидки,
	|	СУММА(Таблица.Сумма - Таблица.СуммаСкидки) КАК СуммаБезСкидки
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыПодготовка
	|ИЗ
	|	Товары КАК Таблица
	|
	|ГДЕ
	|	Таблица.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Ссылка,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка                                    КАК Ссылка,
	|	Товары.ВариантКомплектацииНоменклатуры           КАК ВариантКомплектацииНоменклатуры,
	|	Товары.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	Товары.ВариантРасчетаЦеныНабора                  КАК ВариантРасчетаЦеныНабора,
	|	Товары.НоменклатураНабора,
	|	Товары.ХарактеристикаНабора,
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	ВЫБОР КОГДА Товары.ВариантКомплектацииНоменклатуры.НоменклатураОсновногоКомпонента = Товары.Номенклатура
	|		И Товары.ВариантКомплектацииНоменклатуры.ХарактеристикаОсновногоКомпонента = Товары.Характеристика ТОГДА
	|		Истина
	|	ИНАЧЕ
	|		Ложь
	|	КОНЕЦ КАК ОсновнаяКомплектующая,
	|	0 КАК КоличествоПоУмолчанию,
	|	Товары.Количество КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьПервая
	|ИЗ
	|	Товары КАК Товары
	|
	|ГДЕ
	|	Товары.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Т.Ссылка                                                                                КАК Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка                                           КАК ВариантКомплектацииНоменклатуры,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.ВариантРасчетаЦеныНабора                  КАК ВариантРасчетаЦеныНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец                                  КАК НоменклатураНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика                            КАК ХарактеристикаНабора,
	|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура   КАК Номенклатура,
	|	ВариантыКомплектацииНоменклатурыТовары.Характеристика КАК Характеристика,
	|	ЛОЖЬ КАК ОсновнаяКомплектующая,
	|	СУММА(ВариантыКомплектацииНоменклатурыТовары.Количество) КАК КоличествоПоУмолчанию,
	|	0 КАК Количество
	|ИЗ
	|	Справочник.ВариантыКомплектацииНоменклатуры.Товары КАК ВариантыКомплектацииНоменклатурыТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.Ссылка ИЗ Товары КАК Т) КАК Т
	|		ПО ИСТИНА
	|ГДЕ
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка В (ВЫБРАТЬ РАЗЛИЧНЫЕ Т.ВариантКомплектацииНоменклатуры ИЗ Товары КАК Т)
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Владелец,
	|	ВариантыКомплектацииНоменклатурыТовары.Ссылка.Характеристика,
	|	ВариантыКомплектацииНоменклатурыТовары.Номенклатура,
	|	ВариантыКомплектацииНоменклатурыТовары.Характеристика,
	|	ВариантыКомплектацииНоменклатурыТовары.Упаковка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.Ссылка,
	|	Таблица.ВариантКомплектацииНоменклатуры,
	|	Таблица.ВариантРасчетаЦеныНабора,
	|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	МАКСИМУМ(Таблица.ОсновнаяКомплектующая) КАК ОсновнаяКомплектующая,
	|	СУММА(Таблица.КоличествоПоУмолчанию) КАК КоличествоПоУмолчанию,
	|	СУММА(Таблица.Количество) КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительноЧастьВторая
	|ИЗ
	|	ВременнаяТаблицаНаборыДополнительноЧастьПервая КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Ссылка,
	|	Таблица.ВариантКомплектацииНоменклатуры,
	|	Таблица.ВариантРасчетаЦеныНабора,
	|	Таблица.ВариантПредставленияНабораВПечатныхФормах,
	|	Таблица.НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Результат.Ссылка,
	|	Результат.ВариантКомплектацииНоменклатуры,
	|	Результат.ВариантРасчетаЦеныНабора,
	|	Результат.ВариантПредставленияНабораВПечатныхФормах,
	|	Результат.НоменклатураНабора,
	|	Результат.ХарактеристикаНабора,
	|	ВЫРАЗИТЬ(МИНИМУМ(ВЫБОР
	|			КОГДА Результат.КоличествоПоУмолчанию <> 0 И Результат.ОсновнаяКомплектующая
	|				ТОГДА Результат.Количество / Результат.КоличествоПоУмолчанию
	|			ИНАЧЕ null
	|		КОНЕЦ) + 0.5 КАК Число(10,0)) - 1 КАК Количество
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборыДополнительно
	|ИЗ
	|	ВременнаяТаблицаНаборыДополнительноЧастьВторая КАК Результат
	|СГРУППИРОВАТЬ ПО
	|	Результат.Ссылка,
	|	Результат.ВариантКомплектацииНоменклатуры,
	|	Результат.ВариантРасчетаЦеныНабора,
	|	Результат.ВариантПредставленияНабораВПечатныхФормах,
	|	Результат.НоменклатураНабора,
	|	Результат.ХарактеристикаНабора	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВременнаяТаблицаНаборыДополнительно.ВариантКомплектацииНоменклатуры,
	|	ВременнаяТаблицаНаборыДополнительно.ВариантПредставленияНабораВПечатныхФормах,
	|	ВременнаяТаблицаНаборыДополнительно.ВариантРасчетаЦеныНабора,
	
	|	Таблица.Ссылка                            КАК Ссылка,
	|	Таблица.НоменклатураНабора                КАК НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора              КАК ХарактеристикаНабора,
	|	Таблица.НомерСтроки                       КАК НомерСтроки,
	|	ЕСТЬNULL(ВременнаяТаблицаНаборыДополнительно.Количество, 1) КАК КоличествоУпаковок,
	|	ЕСТЬNULL(ВременнаяТаблицаНаборыДополнительно.Количество, 1) КАК Количество,
	|	Таблица.Сумма                             КАК Сумма,
	|	Таблица.СуммаНДС                          КАК СуммаНДС,
	|	Таблица.СуммаСкидки                       КАК СуммаСкидки,
	|	Таблица.СуммаБезСкидки                    КАК СуммаБезСкидки
	|ПОМЕСТИТЬ ВременнаяТаблицаНаборы
	|ИЗ
	|	ВременнаяТаблицаНаборыПодготовка КАК Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборыДополнительно КАК ВременнаяТаблицаНаборыДополнительно
	|		ПО Таблица.НоменклатураНабора = ВременнаяТаблицаНаборыДополнительно.НоменклатураНабора
	|		И Таблица.ХарактеристикаНабора = ВременнаяТаблицаНаборыДополнительно.ХарактеристикаНабора
	|		И Таблица.Ссылка = ВременнаяТаблицаНаборыДополнительно.Ссылка
	
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|
	|
	|ВЫБРАТЬ
	|	Таблица.Ссылка                            КАК Ссылка,
	|
	|	Таблица.Ссылка                                    КАК ВариантКомплектацииНоменклатуры,
	|	Таблица.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|	Таблица.ВариантРасчетаЦеныНабора                  КАК ВариантРасчетаЦеныНабора,
	|	Таблица.НоменклатураНабора                        КАК НоменклатураНабора,
	|	Таблица.ХарактеристикаНабора                      КАК ХарактеристикаНабора,
	|	Таблица.ЭтоКомплектующие                          КАК ЭтоКомплектующие,
	|	Таблица.ЭтоНабор                                  КАК ЭтоНабор,
	|
	|	Таблица.НомерСтроки                       КАК НомерСтроки,
	|	Таблица.Номенклатура.НаименованиеПолное   КАК ПолноеНаименованиеНоменклатуры,
	|	Таблица.Номенклатура.Код                  КАК Код,
	|	Таблица.Номенклатура.Артикул              КАК Артикул,
	|	Таблица.Характеристика.НаименованиеПолное КАК ПолноеНаименованиеХарактеристики,
	|	ВЫБОР КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Таблица.Упаковка.Наименование
	|	КОНЕЦ                      КАК НаименованиеУпаковки,
	|	Таблица.КоличествоУпаковок КАК Количество,
	|	ВЫБОР
	|		КОГДА Таблица.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(Таблица.Номенклатура.ЕдиницаИзмерения)
	|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(Таблица.Упаковка)
	|	КОНЕЦ                                     КАК ЕдиницаИзмерения,
	|	Таблица.Упаковка                          КАК Упаковка,
	|	Таблица.Цена                              КАК Цена,
	|	Таблица.КоличествоУпаковок * Таблица.Цена - Таблица.Сумма КАК СуммаСкидки,
	|	Таблица.Сумма                                             КАК Сумма,
	|	Таблица.СуммаНДС                                          КАК СуммаНДС,
	|	Таблица.Помещение                                         КАК Помещение
	|ИЗ
	|(
	|	ВЫБРАТЬ
	|		Таблица.ВариантПредставленияНабораВПечатныхФормах КАК ВариантПредставленияНабораВПечатныхФормах,
	|		Таблица.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
	|		Таблица.Ссылка,
	|		Таблица.НоменклатураНабора,
	|		Таблица.ХарактеристикаНабора,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			Истина
	|		ИНАЧЕ
	|			Ложь
	|		КОНЕЦ КАК ЭтоКомплектующие,
	|		Ложь КАК ЭтоНабор,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.НомерСтроки, 0) <> 0 ТОГДА
	|			ВременнаяТаблицаНаборы.НомерСтроки
	|		ИНАЧЕ
	|			Таблица.НомерСтроки
	|		КОНЕЦ КАК НомерСтроки,
	|		Таблица.Номенклатура,
	|		Таблица.Количество,
	|		Таблица.КоличествоУпаковок,
	|		Таблица.Цена,
	|		Таблица.Сумма,
	|		Таблица.СуммаНДС,
	|		Таблица.Характеристика,
	|		Таблица.Упаковка,
	|		Таблица.СуммаСкидки,
	|		Таблица.СуммаБезСкидки,
	|		Таблица.Помещение
	|	ИЗ
	|		Товары КАК Таблица
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
	|			ПО ВременнаяТаблицаНаборы.НоменклатураНабора = Таблица.НоменклатураНабора
	|			 И ВременнаяТаблицаНаборы.ХарактеристикаНабора = Таблица.ХарактеристикаНабора
	|			 И ВременнаяТаблицаНаборы.Ссылка = Таблица.Ссылка
	|
	|	ГДЕ
	|		Таблица.НоменклатураНабора = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		ИЛИ (Таблица.НоменклатураНабора <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	        И Таблица.ВариантПредставленияНабораВПечатныхФормах В (ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоКомплектующие),
	|	                                                                ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие)))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах,
	|		ВременнаяТаблицаНаборы.ВариантРасчетаЦеныНабора КАК ВариантРасчетаЦеныНабора,
	|		ВременнаяТаблицаНаборы.Ссылка,
	|		ВременнаяТаблицаНаборы.НоменклатураНабора,
	|		ВременнаяТаблицаНаборы.ХарактеристикаНабора,
	|		Ложь КАК ЭтоКомплектующие,
	|		Истина КАК ЭтоНабор,
	|		ВременнаяТаблицаНаборы.НомерСтроки,
	|		ВременнаяТаблицаНаборы.НоменклатураНабора,
	|		ВременнаяТаблицаНаборы.Количество,
	|		ВременнаяТаблицаНаборы.КоличествоУпаковок,
	|		ВЫБОР КОГДА ЕСТЬNULL(ВременнаяТаблицаНаборы.КоличествоУпаковок, 1) <> 0 ТОГДА
	|			ВременнаяТаблицаНаборы.СуммаБезСкидки / ЕСТЬNULL(ВременнаяТаблицаНаборы.КоличествоУпаковок, 1)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК Цена,
	|		ВременнаяТаблицаНаборы.Сумма КАК Сумма,
	|		ВременнаяТаблицаНаборы.СуммаНДС,
	|		ВременнаяТаблицаНаборы.ХарактеристикаНабора,
	|		ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
	|		ВременнаяТаблицаНаборы.СуммаСкидки,
	|		ВременнаяТаблицаНаборы.СуммаБезСкидки,
	|		Неопределено КАК Помещение
	|	ИЗ
	|		ВременнаяТаблицаНаборы КАК ВременнаяТаблицаНаборы
	|	ГДЕ
	|		ВременнаяТаблицаНаборы.ВариантПредставленияНабораВПечатныхФормах В (ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.ТолькоНабор),
	|	                                                           ЗНАЧЕНИЕ(Перечисление.ВариантыПредставленияНаборовВПечатныхФормах.НаборИКомплектующие))
	|) КАК Таблица
	|
	|УПОРЯДОЧИТЬ ПО
	|	Таблица.НомерСтроки,
	|	ЭтоНабор УБЫВ
	|");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Таблица.Упаковка",
			"Таблица.Номенклатура"));
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("ПредставлениеДокумента", НСтр("ru='Отчет о розничных продажах';uk='Звіт про роздрібні продажі'"));
	Запрос.УстановитьПараметр("ПредставлениеВОшибке",   НСтр("ru='отчета о розничных продажах';uk='звіту про роздрібні продажі'"));
	ПакетРезультатовЗапроса = Запрос.ВыполнитьПакет();
	
	СтруктураДанныхДляПечати = Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти, ЗаголовокДокумента",
		ПакетРезультатовЗапроса[0],
		ПакетРезультатовЗапроса[ПакетРезультатовЗапроса.Количество() - 1],
 		НСтр("ru='Отчет о розничных продажах';uk='Звіт про роздрібні продажі'",КодЯзыкаПечать));
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции


#Область ОбновлениеИнформационнойБазы

Процедура СоздатьДвиженияДенежныеСредстваВПути_ДанныеДляОбновления(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ 
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ОплатаПлатежнымиКартами КАК ДанныеДокумента
	|	    ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДенежныеСредстваВПути КАК ДенежныеСредстваВПути
	|	        ПО ДенежныеСредстваВПути.Регистратор = ДанныеДокумента.Ссылка
    |
	|ГДЕ
	|	ДанныеДокумента.Ссылка.Проведен
	|	И (ДанныеДокумента.Ссылка.КассоваяСмена.СтатусКассовойСмены = ЗНАЧЕНИЕ(Перечисление.СтатусыКассовойСмены.ЗакрытаЧекиЗаархивированы)
	|		ИЛИ ДанныеДокумента.Ссылка.КассаККМ.ТипКассы <> ЗНАЧЕНИЕ(Перечисление.ТипыКассККМ.ФискальныйРегистратор)
    |   )
	|	И ДенежныеСредстваВПути.Регистратор ЕСТЬ NULL
	|
    |";
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(
        Параметры, 
        Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка")
    );	

КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.1
// Проводит документы по регистру "Денежные средства в пути"
Процедура СоздатьДвиженияДенежныеСредстваВПути(Параметры) Экспорт
    
    ПолноеИмяОбъекта = "Документ.ОтчетОРозничныхПродажах"; 
    
	Выборка = ОбновлениеИнформационнойБазы.ВыбратьСсылкиДляОбработки(
        Параметры.Очередь, 
        ПолноеИмяОбъекта
    );
    
	Пока Выборка.Следующий() Цикл
    
		НачатьТранзакцию();
		
		Попытка	
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(ПолноеИмяОбъекта);
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
            ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			Блокировка.Заблокировать();
			
            ДопСвойства = Новый Структура;
            ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Выборка.Ссылка, ДопСвойства);
            ИнициализироватьДанныеДокумента(Выборка.Ссылка, ДопСвойства, "ДенежныеСредстваВПути");
            
			НаборЗаписей = РегистрыНакопления.ДенежныеСредстваВПути.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Ссылка);
            НаборЗаписей.Загрузить(ДопСвойства.ТаблицыДляДвижений["ТаблицаДенежныеСредстваВПути"]);
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписей);
            ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
            
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
            ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(Выборка.Ссылка);
										
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
        Параметры.Очередь, 
        ПолноеИмяОбъекта
    );
    
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли
