#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

// Механизм расчета себестоимости теперь находится в общем модуле РасчетСебестоимости

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		Дата		= ДанныеЗаполнения.Дата;
		Организация = ДанныеЗаполнения.Организация;
		
		// Возможно только повышение статуса существующего документа: Предварительный -> Фактический.
		// При выполнении некоторых этапов закрытия месяца (распределение расходов на продукцию)
		// возможен пересчет предварительной себестоимости по документу с признаком "Фактический расчет".
		// При этом корректируются только движения по регистру сведений СтоимостьТоваров,
		// остальные движения останутся от расчета фактической себестоимости.
		Если ЭтоНовый() ИЛИ ПредварительныйРасчет Тогда
			ПредварительныйРасчет = ДанныеЗаполнения.ПредварительныйРасчет;
		КонецЕсли;
		
		// Метод оценки нужен только для фактического расчета
		МетодОценки = ?(ПредварительныйРасчет, Неопределено, ДанныеЗаполнения.МетодОценки);
		
		// Продублируем организацию в табличной части для обратной совместимости
		Организации.Очистить();
		Организации.Добавить().Организация = Организация;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	МассивНепроверяемыхРеквизитов = Новый Массив;

	Если Организации.Количество() = 0 И НЕ ЗначениеЗаполнено(Организация) Тогда

		ТекстОшибки = НСтр("ru='Не указана организация для расчета себестоимости';uk='Не вказана організація для розрахунку собівартості'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			ЭтотОбъект,
			"Организации",
			, // ПутьКДанным 
			Отказ);

		Возврат;

	КонецЕсли;

	Если ПредварительныйРасчет Тогда
		МассивНепроверяемыхРеквизитов.Добавить("МетодОценки");
	КонецЕсли;

	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(
		ПроверяемыеРеквизиты,
		МассивНепроверяемыхРеквизитов);

КонецПроцедуры


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоНовый",    ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Если ЗначениеЗаполнено(Организация) Тогда
		Если Организации.Количество() <> 1 ИЛИ Организации[0].Организация <> Организация Тогда
			// Продублируем организацию в табличной части для обратной совместимости
			Организации.Очистить();
			Организации.Добавить().Организация = Организация;
		КонецЕсли;
	КонецЕсли;
	
	НовоеПредставлениеОрганизаций = РасчетСебестоимости.ПредставлениеОрганизаций(Организации.ВыгрузитьКолонку("Организация"), ", ");
	Если ПредставлениеОрганизаций <> НовоеПредставлениеОрганизаций Тогда
		ПредставлениеОрганизаций = НовоеПредставлениеОрганизаций;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	ПроведениеСервер.ОчиститьДополнительныеСвойстваДляПроведения(ДополнительныеСвойства);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ПроведениеСервер.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства);
	ПроведениеСервер.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	ПроведениеСервер.ЗаписатьНаборыЗаписей(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
