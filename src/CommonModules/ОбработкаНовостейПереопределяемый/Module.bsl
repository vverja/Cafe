////////////////////////////////////////////////////////////////////////////////
// Подсистема "Новости".
// ОбщийМодуль.ОбработкаНовостейПереопределяемый.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ДополнительнаяОбработкаКлассификаторов

// Если после получения и записи классификатора надо что-то сделать, то это можно сделать в этой процедуре.
// Классификатор уже записан в базу данных, поэтому можно менять связанные справочники и регистры сведений.
// Для обеспечения целостности приходящих с серверов 1С данных, обработчика ПередЗаписью нет,
//  т.е. манипулировать отменой записи нельзя. Также отсутствует параметр Отказ.
// Шаблон для переопределения:
// Если ТипЗнч(КлассификаторСсылка) = Тип("СправочникСсылка.ЗначенияКатегорийНовостей") Тогда
//	Если НЕ КлассификаторСсылка.Пустая() Тогда
//		//
//	КонецЕсли;
// ИначеЕсли ТипЗнч(КлассификаторСсылка) = Тип("СправочникСсылка.ЛентыНовостей") Тогда
//	Если НЕ КлассификаторСсылка.Пустая() Тогда
//		//
//	КонецЕсли;
// ИначеЕсли ТипЗнч(КлассификаторСсылка) = Тип("ПланВидовХарактеристикСсылка.КатегорииНовостей") Тогда
//	Если НЕ КлассификаторСсылка.Пустая() Тогда
//		//
//	КонецЕсли;
// КонецЕсли;
//
// Параметры:
//  КлассификаторСсылка - СправочникСсылка - Классификатор, который был только что записан.
//
Процедура ДополнительноОбработатьКлассификаторПослеПолученияПослеЗаписи(КлассификаторСсылка) Экспорт

КонецПроцедуры

#КонецОбласти

#Область ДополнительнаяОбработкаТекстаНовости

// Если перед выводом новости пользователю, разработчику надо "доработать" ее текст - заменить какие-то тэги, удалить блоки текста и т.п.,
//  то это можно сделать в этой процедуре.
// При формировании текста происходит несколько стадий:
//  вначале компонуется ХТМЛ-текст одной или списка новостей (то, что внутри <body></body>),
//  затем полученный текст обрамляется тегами <html></html> и стилями.
//  В этой процедуре можно обработать текст одной новости, без стилей (то, что внутри <body></body>).
// Здесь можно изменить окончательный текст новости, например:
//   найти тэги <div> с идентификатором id="MainOrganization" и заменить на наименование основной организации;
//   найти тэги <a> с идентификатором id="Total51AccountTurnover" и заменить на общую сумму оборота по 51 счету;
//   найти комментарий <!-- Вставить здесь html-текст для бухгалтера --> и заменить.
// Примеры:
// // Преобразовать текст ХТМЛ в документДОМ для обработки
// ЧтениеХТМЛ = Новый ЧтениеHTML;
// ЧтениеХТМЛ.УстановитьСтроку(ТекстХТМЛ);
// ПостроительДОМ = Новый ПостроительDOM;
// ДокументДОМ = ПостроительДОМ.Прочитать(ЧтениеХТМЛ);
// // Найти и заменить элементы внутри body (только первого уровня вложенности!)
// Для каждого ТекущийЭлементХТМЛ Из ДокументДОМ.Тело.ДочерниеУзлы Цикл
//	// Дополнение текстов
//	Если ТекущийЭлементХТМЛ.ТипУзла = ТипУзлаDOM.Элемент Тогда
//		Если ВРег(ТекущийЭлементХТМЛ.Идентификатор) = ВРег("MainOrganization") Тогда
//			ТекущийЭлементХТМЛ.ТекстовоеСодержимое = ТекущийЭлементХТМЛ.ТекстовоеСодержимое + ", ...";
//		КонецЕсли;
//	КонецЕсли;
// КонецЦикла;
// // Преобразовать документДОМ обратно в строку
// ЗаписьХТМЛ = Новый ЗаписьHTML;
// ЗаписьХТМЛ.УстановитьСтроку();
// ЗаписьДОМ = Новый ЗаписьDOM;
// ЗаписьДОМ.Записать(ДокументДОМ, ЗаписьХТМЛ);
// ТекстХТМЛ = ЗаписьХТМЛ.Закрыть();
// // Можно обрабатывать текст ХТМЛ как строку - это быстрее чем ДОМ
// // Заменить "длинную" ссылку на полный текст новости на гиперссылку с надписью "здесь"
// НайденоНачалоБлока = Найти(ТекстХТМЛ, "<div id=""newsHyperlink"">");
// Если НайденоНачалоБлока > 0 Тогда
//	НайденКонецБлока = 0;
//	Для С=НайденоНачалоБлока+24 По СтрДлина(ТекстХТМЛ)-6 Цикл
//		Если ВРег(Сред(ТекстХТМЛ, С, 6)) = ВРег("</div>") Тогда
//			НайденКонецБлока = С;
//			Прервать;
//		КонецЕсли;
//	КонецЦикла;
//	Если НайденКонецБлока > 0 Тогда
//		// Все что между - это <a href="...">...</a>, можно заменить
//		НачалоГиперссылки = НайденоНачалоБлока + 24;
//		КонецГиперссылки = НайденКонецБлока;
//		ВременныйТекстХТМЛ =
//			Лев(ТекстХТМЛ, НачалоГиперссылки)
//			+ Символы.Таб + Символы.Таб + Символы.Таб + Символы.Таб + Символы.Таб + "%СсылкаНаПолныйТекстНовости%" + Символы.ПС
//			+ Символы.Таб + Символы.Таб + Символы.Таб + Символы.Таб + Прав(ТекстХТМЛ, СтрДлина(ТекстХТМЛ) - КонецГиперссылки + 1);
//		Если ПустаяСтрока(ОбъектНовости.СсылкаНаПолныйТекстНовости) Тогда
//			ВременныйТекстХТМЛ = СтрЗаменить(ВременныйТекстХТМЛ, "%СсылкаНаПолныйТекстНовости%", "");
//		Иначе
//			// Всегда писать "здесь"
//			ВременныйТекстХТМЛ = СтрЗаменить(
//				ВременныйТекстХТМЛ,
//				"%СсылкаНаПолныйТекстНовости%",
//				"Полный текст новости <a href=""" + СокрЛП(ОбъектНовости.СсылкаНаПолныйТекстНовости) + """>здесь</a>");
//		КонецЕсли;
//		ТекстХТМЛ = ВременныйТекстХТМЛ;
//	КонецЕсли;
// КонецЕсли;
//
// Параметры:
//  ОбъектНовости - СправочникОбъект.Новости - Новость, для которой необходимо изменить уже подготовленный текст;
//  ТекстХТМЛ     - Строка - уже подготовленный текст, который по-умолчанию будет отображен в форме просмотра новости.
//
// Возвращаемое значение:
//   Строка - окончательный текст новости (то, что внутри <body></body>).
//
Процедура ДополнительноОбработатьТекстНовостиПередПоказом(ОбъектНовости, ТекстХТМЛ) Экспорт

КонецПроцедуры

// Если перед выводом новости пользователю, разработчику надо "доработать" ее текст - заменить какие-то тэги, стили, удалить блоки текста и т.п.,
//  то это можно сделать в этой процедуре.
// При формировании текста происходит несколько стадий:
//  вначале компонуется ХТМЛ-текст одной или списка новостей (то, что внутри <body></body>),
//  затем полученный текст обрамляется тегами <html></html> и стилями.
//  В этой процедуре можно обработать результирующий текст одной или списка новости, включая заголовки, стили и т.п.
// Здесь можно изменить окончательный текст новости, например:
//   найти тэги <div> с идентификатором id="MainOrganization" и заменить на наименование основной организации
//   найти тэги <a> с идентификатором id="Total51AccountTurnover" и заменить на общую сумму оборота по 51 счету
//   найти стиль с описанием класса с именем class="ShowOnlyIfAutoUpdateAvailable" и заменить
//     .ShowOnlyIfAutoUpdateAvailable:{display:block} на
//     .ShowOnlyIfAutoUpdateAvailable:{display:none}, в случае, если недоступно автообновление из интернет
//   найти комментарий <!-- Вставить здесь html-текст для бухгалтера --> и заменить.
// // Преобразовать текст ХТМЛ в документДОМ для обработки
// ЧтениеХТМЛ = Новый ЧтениеHTML;
// ЧтениеХТМЛ.УстановитьСтроку(ТекстХТМЛ);
// ПостроительДОМ = Новый ПостроительDOM;
// ДокументДОМ = ПостроительДОМ.Прочитать(ЧтениеХТМЛ);
// // Найти и заменить элементы внутри body (только первого уровня вложенности!)
// Для каждого ТекущийЭлементХТМЛ Из ДокументДОМ.Тело.ДочерниеУзлы Цикл
//	// Дополнение текстов
//	Если ТекущийЭлементХТМЛ.ТипУзла = ТипУзлаDOM.Элемент Тогда
//		Если ВРег(ТекущийЭлементХТМЛ.Идентификатор) = ВРег("MainOrganization") Тогда
//			ТекущийЭлементХТМЛ.ТекстовоеСодержимое = ТекущийЭлементХТМЛ.ТекстовоеСодержимое + ", ...";
//		КонецЕсли;
//	КонецЕсли;
// КонецЦикла;
// // Преобразовать документДОМ обратно в строку
// ЗаписьХТМЛ = Новый ЗаписьHTML;
// ЗаписьХТМЛ.УстановитьСтроку();
// ЗаписьДОМ = Новый ЗаписьDOM;
// ЗаписьДОМ.Записать(ДокументДОМ, ЗаписьХТМЛ);
// ТекстХТМЛ = ЗаписьХТМЛ.Закрыть();
// // Можно обрабатывать текст ХТМЛ как строку - это быстрее чем ДОМ
//
// Параметры:
//  ТекстХТМЛ     - Строка - уже подготовленный текст, который по-умолчанию будет отображен в форме просмотра новости.
//
// Возвращаемое значение:
//   Строка - окончательный текст одной или списка новости.
//
Процедура ДополнительноОбработатьТекстСпискаНовостейПередПоказом(ТекстХТМЛ) Экспорт

КонецПроцедуры

// Если после получения новости надо "доработать" ее текст, реквизиты, категории и т.п.,
//  то это можно сделать в этой процедуре.
// Объект новости еще не записан, можно менять все его реквизиты (например, пометку удаления, чтобы управлять видимостью новости).
// Дополнительно передается НовостьХДТО - на случай, если передаются дополнительные тэги, их можно отсюда получить.
// Здесь можно изменить все данные новости перед записью, например:
//   для новостей с определенными идентификаторами, которые в НовостномЦентре выдаются специфическим новостям,
//   изменить тексты новости и т.п.
//
// Параметры:
//  ОбъектНовости - СправочникОбъект.Новости - Новость, у которой необходимо изменить данные;
//  НовостьХДТО   - ОбъектXDTO - полученный объект новости.
//
Процедура ДополнительноОбработатьНовостьПослеПолученияПередЗаписью(ОбъектНовости, НовостьХДТО) Экспорт
	
КонецПроцедуры

// Если после получения новости надо "доработать" ее текст, реквизиты, категории и т.п.,
//  то это можно сделать в этой процедуре.
// Новость уже записана в базу данных, поэтому можно менять связанные регистры сведений.
// Здесь можно изменить все данные, связанные с новостью, после записью, например регистры сведений.
// Для изменения внутри объекта новости, лучше использовать процедуру ДополнительноОбработатьНовостьПослеПолученияПередЗаписью,
//  которая вызывается ДО записи новости.
//
// Параметры:
//  НовостьСсылка - СправочникСсылка.Новости - Новость, у которой необходимо изменить данные.
//
Процедура ДополнительноОбработатьНовостьПослеПолученияПослеЗаписи(НовостьСсылка) Экспорт

КонецПроцедуры

// Если после сеанса получения новостей надо что-то с ними сделать,
//  то это можно сделать в этой процедуре.
// Новости уже записаны в базу данных, обработки по "пересчету" категорий и отборов уже запущены,
//  поэтому можно менять связанные регистры сведений.
// Должно работать в модели сервиса, т.к. запускается из неразделенного сеанса.
// Здесь можно выполнить какие-либо действия после получения всех новостей, например:
//  проанализировать полученные новости и на основании каких-либо данных;
//  сформировать емейл (пришла новость об обновлении конфигурации - написать письмо администратору) и т.п.
// Пример:
// В конфигурации есть общие реквизиты с разделением и включена ФО РаботаВМоделиСервиса.
// Если ОбщегоНазначенияПовтИсп.РазделениеВключено() Тогда
//	// В модели сервиса
// Иначе
//	// Без разделения данных
// КонецЕсли;
//
// Параметры:
//  ТаблицаДатЗагрузокНовостейПередПолучением - Таблица значений - состав колонок соответствует
//    регистру сведений ДатыЗагрузкиПоследнихНовостей.
//
Процедура ДополнительноОбработатьНовостиПослеПолучения(ТаблицаДатЗагрузокНовостейПередПолучением) Экспорт

КонецПроцедуры

#КонецОбласти

#Область ДополнительнаяОбработкаСписковНовостей

// Вызывается из ОбработкаНовостей.ПолучитьКонтекстныеНовости после получения массива структур контекстных новостей.
// Можно прописать обработку полученного массива контекстных новостей, например удаление некоторых
//  контекстных новостей или изменение их важности.
// Здесь можно изменить данные в уже полученном массиве контекстных новостей, например:
//   если это новый пользователь, то сбросить важность у новостей, у которых есть категория "Только для новых пользователей = Истина";
//   если это новый пользователь, то удалить строки с определенной лентой новостей.
//
// Параметры:
//  ИдентификаторМетаданных          - Строка - Идентификатор метаданных, должен совпадать с таким же идентификатором в самой новости;
//  ИдентификаторФормы               - Строка - Идентификатор формы, должен совпадать с таким же идентификатором в самой новости;
//  ИдентификаторыСобытийПриОткрытии - Строка, Массив - строка или массив строк идентификаторов события "ПриОткрытии".
//                                     Если передано какое-то значение, то будет подсчитано количество очень важных контекстных
//                                     новостей. И если это количество > 0, то открывающая форма инициирует
//                                     открытие формы просмотра таких новостей.
//  МассивСтруктурНовостей           - Массив структур с ключами:
//   * НомерСтрокиНовости      - Число;
//   * ЛентаНовостей           - СправочникСсылка.ЛентаНовостей;
//   * Новость                 - СправочникСсылка.Новости;
//   * НовостьНаименование     - Строка;
//   * НовостьПодзаголовок     - Строка;
//   * УИННовости              - Строка;
//   * ДатаПубликации          - Дата;
//   * Важность                - Число;
//   * Актуальность            - Булево;
//   * Метаданные              - Строка;
//   * Форма                   - Строка;
//   * Событие                 - Строка;
//   * ПоказыватьВФормеОбъекта - Булево;
//   * ЭтоПостояннаяНовость    - Булево;
//   * Прочтена                - Булево;
//   * ОповещениеВключено      - Булево.
//  Этот массив новостей можно редактировать, например, удалить некоторые ненужные новости или понизить их важность и т.п.
//
Процедура ДополнительноОбработатьМассивКонтекстныхНовостей(
			Знач ИдентификаторМетаданных,
			Знач ИдентификаторФормы,
			Знач ИдентификаторыСобытийПриОткрытии,
			МассивСтруктурНовостей) Экспорт

КонецПроцедуры

// Вызывается из Справочник.Новости.ФормаКонтекстныхНовостей после получения таблицы контекстных новостей.
// Можно прописать обработку полученной таблицы контекстных новостей, например удаление некоторых
//  контекстных новостей или изменение их важности.
// Здесь можно изменить данные в уже полученной таблице контекстных новостей, например:
//   если это новый пользователь, то сбросить важность у новостей, у которых есть категория "Только для новых пользователей = Истина";
//   если это новый пользователь, то удалить строки с определенной лентой новостей;
//   изменить сортировку строк.
//
// Параметры:
//  ИдентификаторМетаданных          - Строка - Идентификатор метаданных, должен совпадать с таким же идентификатором в самой новости;
//  ИдентификаторФормы               - Строка - Идентификатор формы, должен совпадать с таким же идентификатором в самой новости;
//  ИдентификаторыСобытийПриОткрытии - Строка, Массив - строка или массив строк идентификаторов события "ПриОткрытии".
//                                     Если передано какое-то значение, то будет подсчитано количество очень важных контекстных
//                                     новостей. И если это количество > 0, то открывающая форма инициирует
//                                     открытие формы просмотра таких новостей.
//  ТаблицаКонтекстныхНовостей       - Таблица значений с колонками:
//   * НомерСтрокиНовости      - Число;
//   * ЛентаНовостей           - СправочникСсылка.ЛентаНовостей;
//   * Новость                 - СправочникСсылка.Новости;
//   * НовостьНаименование     - Строка;
//   * НовостьПодзаголовок     - Строка;
//   * УИННовости              - Строка;
//   * ДатаПубликации          - Дата;
//   * Важность                - Число;
//   * Актуальность            - Булево;
//   * Метаданные              - Строка;
//   * Форма                   - Строка;
//   * Событие                 - Строка;
//   * ПоказыватьВФормеОбъекта - Булево;
//   * ЭтоПостояннаяНовость    - Булево;
//   * Прочтена                - Булево;
//   * ОповещениеВключено      - Булево.
//  Этот массив новостей можно редактировать, например, удалить некоторые ненужные новости или понизить их важность и т.п.
//
Процедура ДополнительноОбработатьТаблицуКонтекстныхНовостей(
			Знач ИдентификаторМетаданных,
			Знач ИдентификаторФормы,
			Знач ИдентификаторыСобытийПриОткрытии,
			ТаблицаКонтекстныхНовостей) Экспорт

КонецПроцедуры

// Процедура переопределяет список лент новостей, по которым надо получать контекстные новости.
// По-умолчанию (значение Неопределено) контекстные новости "собираются" по всем лентам новостей.
// Необходимо понимать, что эта процедура "обходит" стандартные проверки на видимость лент новостей и новостей по этим лентам:
// - Помеченные на удаление ленты новостей не показываются;
// - Лента новостей может быть скрыта от пользователя администратором (настраивается в Справочник.ЛентыНовостей,
//     реквизит ВидимостьПоУмолчанию и табличная часть ИсключенияВидимости);
// - Лента новостей отключена пользователем вручную (регистр сведений ОтключенныеЛентыНовостей).
// Здесь можно изменить список лент новостей для поиска контекстных новостей, например:
//  если это новый пользователь, то сформировать свой список лент новостей;
//  можно "собирать" контекстные новости только из видимых лент новостей.
// Необходимо обратить внимание, что здесь можно переопределить список полностью,
//  т.е. разрешить смотреть отключенные администратором ленты новостей,
//  разрешить смотреть ленты новостей, помеченные на удаление и т.п.
// Если во время сеанса этот список не меняется, то имеет смысл список отдельно готовить в процедуре в модуле
//  с повторно используемыми значениями, а отсюда вызывать эту процедуру.
//
// Параметры:
//  СписокЛентНовостей - СписокЗначений - Список лент новостей, разрешенных для просмотра (рассчитан по-умолчанию, можно изменить).
//
// Возвращаемое значение:
//   СписокЗначений, Массив, Неопределено - список (массив) лент новостей, по которым надо получать контекстные новости,
//         или Неопределено (по-умолчанию), если получать надо по всем лентам новостей.
//
Процедура ПереопределитьСписокЛентНовостейДляКонтекстныхНовостей(СписокЛентНовостей = Неопределено) Экспорт

КонецПроцедуры

// Процедура позволяет изменить условное оформление формы контекстных новостей, например добавить свои элементы
//  условного оформления или удалить / изменить уже настроенные элементы.
// Здесь можно изменить условное оформление в форме контекстных новостей, например:
//   если у новости в наименовании есть слово "Видео", то выделить красным;
//   если у новости есть категория "География=Россия", то изменить цвет фона.
// Пример:
// Таблица новостей, которая уже загружена в форму;
// ТаблицаНовостей = ФормаКонтекстныхНовостей.ТаблицаНовостей; // Убедиться, что имя реквизита не изменилось!
// МассивПоказываемыхНовостей = ФормаКонтекстныхНовостей.ТаблицаНовостей.Выгрузить(, "Новость").ВыгрузитьКолонку("Новость");
// Условное оформление устанавливается при создании формы, поэтому можно посмотреть параметры, переданные в форму;
// Если Найти(ФормаКонтекстныхНовостей.Параметры.ИмяМетаданных, ".РазделУчета.") > 0 Тогда
//	//
// КонецЕсли;
// Список "особенных" новостей, который можно вычислить каким-нибудь запросом.
// СписокЗначенийНовостей = Новый СписокЗначений;
// Добавить элемент условного оформления по условию "ВСписке"
//	Элемент = УсловноеОформлениеФормы.Элементы.Добавить();
//	// Оформляемые поля
//	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
//	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ТаблицаНовостейНаименование");
//	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
//	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ТаблицаНовостейПодзаголовок");
//	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
//	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ТаблицаНовостейДатаПубликации");
//	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
//	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("ТаблицаНовостейЛентаНовостей");
//	// Отбор
//	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
//	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаНовостей.Новость");
//	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
//	ОтборЭлемента.ПравоеЗначение = СписокЗначенийНовостей;
//	// Оформление
//	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(ШрифтыСтиля.ШрифтНовостей, , , Истина)); // Жирный
//	// Использование
//	Элемент.Использование = Истина;
//
// Параметры:
//  ФормаКонтекстныхНовостей - УправляемаяФорма - форма контекстных новостей;
//  УсловноеОформление       - УсловноеОформление - настройки условного оформления формы.
//
Процедура ДополнительноУстановитьУсловноеОформлениеФормыКонтекстныхНовостей(ФормаКонтекстныхНовостей, УсловноеОформлениеФормы) Экспорт

КонецПроцедуры

#КонецОбласти

#Область ДополнительнаяОбработкаНовостей

// Процедура переопределяет сброс состояния новости при её записи.
// По-умолчанию, если новость "приходит" заново (в результате перепубликации, например),
//  то ей заново устанавливаются свойства "Не прочтена", "Оповещение включено" и т.п.
// Здесь можно переопределить поведение по-умолчанию и в зависимости от своих условий сбрасывать или не сбрасывать состояние новости.
// Важное замечание: нельзя вносить изменения в ОбъектНовость, т.к. процедура вызывается из события ПриЗаписи.
// Если новость новая, то эта процедура не вызывается, т.е. нельзя переопределить сброс свойств для новых новостей.
// В ОбъектНовость.ДополнительныеСвойства есть полезное свойство "ВажностьДоЗаписи". Если увеличилась важность,
//  то рекомендуется сбросить свойства новости до "Не прочтена", "Оповещение включено" (т.е. установить СброситьСостояниеНовости = Истина).
// Возможны и более сложные сценарии: например, сбрасывать состояние новости только
//  если в тексте есть комментарий "<!-- Сбросить состояние новости -->".
//
//
// Параметры:
//  ОбъектНовость            - СправочникОбъект.Новости - записываемая новость;
//  СброситьСостояниеНовости - Булево - В эту переменную необходимо вернуть "Истина", если необходимо установить
//                             свойства "Не прочтена", "Оповещение ввключено",
//                             или Ложь, если надо оставить эти свойства в текущем состоянии.
//
Процедура ПереопределитьСбросСостоянияНовостиПриЗаписи(Знач ОбъектНовость, СброситьСостояниеНовости) Экспорт

КонецПроцедуры

// Процедура переопределяет создание новости при неактивности ленты новостей.
//
// Параметры:
//  ЛентаНовостей - СправочникСсылка.ЛентыНовостей - Лента новостей;
//  НовостьОбъект - СправочникОбъект.Новости - заполненный объект справочника Новости, который будет создан или изменен;
//  Отказ         - Булево - в этот параметр надо передать Истина, Если создание / изменение новости надо отменить.
//
Процедура ПереопределитьДействияКогдаНайденаНеактивнаяЛентаНовостей(ЛентаНовостей, НовостьОбъект, Отказ) Экспорт

	

КонецПроцедуры

#КонецОбласти

#Область ДополнительнаяОбработкаФормИЭлементовУправления

// В этой процедуре можно переопределить внешний вид созданных элементов управления для вызова контекстных новостей
//  (только в том случае, если они созданы программно) и другие действия с управляемой формой.
//
// Процедура выполняет все необходимые действия для управления контекстными новостями. Должна вызываться из ПриСозданииНаСервере().
// Она используется в том случае, если выбрана стратегия расчета списка контекстных новостей в ПриСозданииНаСервере.
// Здесь можно выполнить произвольные действия после включения механизма контекстных новостей.
// Например, изменить внешний вид созданной кнопки / подменю - в заголовке написать общее количество новостей и т.п.
//
// Параметры:
//  Форма                                    - УправляемаяФорма - форма, в которой был включен механизм контекстных новостей;
//  НастройкиЗаполненияНовостями             - Структура - структура, определяющая стратегию получения и хранения новостей.
//                                             Можно получать новости на сервере в ПриСозданииНаСервере - это будет тратить время при каждом
//                                               открытии формы, но позволит реализовать сценарий показа новостей при наступлении клиентских
//                                               событий (ПриИзмененииГалочки, ПриУстановкеДатыБольше2014 и т.п.).
//                                             Можно получать новости в обработчике ожидания после открытия формы, также будет задействован клиентский кэш.
//                                               Это сократит время открытия формы, но некоторые сценарии станут недоступны.
//                                             Ключи:
//   * ПолучатьНовостиНаСервере                - Булево - если Истина, то новости будут получаться в этой процедуре. По-умолчанию = Истина;
//   * ХранитьМассивНовостейТолькоНаСервере    - Булево - если Истина, то на клиента не передается массив новостей.
//                                             Это сокращает размер передаваемых данных, но не дает возможность показывать новости
//                                             по другим событиям, отличным от ПриОткрытии.
//                                             Имеет смысл только если ПолучатьНовостиНаСервере = Истина. По-умолчанию = Ложь.
//  ИдентификаторыСобытийПриОткрытии         - Строка, Массив - строка или массив строк идентификаторов события "ПриОткрытии".
//                                             Если передано какое-то значение, то будет подсчитано количество очень важных контекстных
//                                             новостей. И если это количество > 0, то открывающая форма инициирует
//                                             открытие формы просмотра таких новостей;
//  СозданнаяКнопкаИлиПодменюНовости         - ГруппаФормы, КнопкаФормы, Неопределено - кнопка или подменю для открытия
//                                             формы контекстных новостей (только в случае, если она создавалась программно);
//  МассивСтруктурНовостей                   - Массив - Массив структур контекстных новостей для этой формы с ключами:
//   * НомерСтрокиНовости      - Число;
//   * ЛентаНовостей           - СправочникСсылка.ЛентаНовостей;
//   * Новость                 - СправочникСсылка.Новости;
//   * НовостьНаименование     - Строка;
//   * НовостьПодзаголовок     - Строка;
//   * УИННовости              - Строка;
//   * ДатаПубликации          - Дата;
//   * Важность                - Число;
//   * Актуальность            - Булево;
//   * Метаданные              - Строка;
//   * Форма                   - Строка;
//   * Событие                 - Строка;
//   * ПоказыватьВФормеОбъекта - Булево;
//   * ЭтоПостояннаяНовость    - Булево;
//   * Прочтена                - Булево;
//   * ОповещениеВключено      - Булево;
//
Процедура ДополнительноОбработатьФормуПриСозданииНаСервере(
			Форма,
			НастройкиЗаполненияНовостями,
			ИдентификаторыСобытийПриОткрытии,
			СозданнаяКнопкаИлиПодменюНовости,
			МассивСтруктурНовостей) Экспорт

КонецПроцедуры

// В этой процедуре можно переопределить состав новостей формы показа новостей и другие действия с управляемой формой.
//
// Параметры:
//  Форма                - УправляемаяФорма - форма просмотра новостей для рабочего стола;
//  Отказ                - Булево - Признак отказа от создания формы. Если установить данному параметру значение Истина,
//                            то форма создана не будет;
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//                            Если в установить данному параметру значение Ложь, стандартная обработка события производиться не будет.
//
Процедура ДополнительноОбработатьФормуПросмотраНовостейПриСозданииНаСервере(
			Форма,
			Отказ,
			СтандартнаяОбработка) Экспорт

КонецПроцедуры

// В этой процедуре можно переопределить состав новостей формы показа новостей для рабочего стола и другие действия с управляемой формой.
//
// Примеры:
//   ВозвращаемыеЗначения = Новый Структура("ПропуститьЗаполнениеНовостями", Истина);
//   НоваяСтрока = Форма.Новости.Добавить();
//   НоваяСтрока.Наименование = НСтр("ru='Как обновить конфигурацию'");
//   НоваяСтрока.Ссылка = Справочники.Новости.НайтиПоРеквизиту("УИННовости", "123456"); // Новость должна присутствовать в справочнике!
//   НоваяСтрока = Форма.Новости.Добавить();
//   НоваяСтрока.Наименование = НСтр("ru='Как настроить автообновление'");
//   НоваяСтрока.Ссылка = Справочники.Новости.НайтиПоРеквизиту("УИННовости", "234567"); // Новость должна присутствовать в справочнике!
//
// Параметры:
//  Форма                - УправляемаяФорма - форма просмотра новостей для рабочего стола;
//  ВозвращаемыеЗначения - Структура - структура с возвращаемыми значениями для дальнейшей обработки формой. Может содержать ключи:
//    * ПропуститьЗаполнениеНовостями - Булево - если Истина, то форма рабочего стола не будет проводить заполнение новостями.
//
Процедура ДополнительноОбработатьФормуПросмотраНовостейДляРабочегоСтолаПриСозданииНаСервере(
			Форма,
			ВозвращаемыеЗначения) Экспорт
			
	ОбработкаНовостейУТ.ЗаполнитьОтборыПользователяДляЧтенияНовостей();
	
КонецПроцедуры

// В этой процедуре можно переопределить действия с управляемой формой просмотра списка контекстных новостей (ФормаКонтекстныхНовостей).
//
// Параметры:
//  Форма                - УправляемаяФорма - форма просмотра списка контекстных новостей;
//  Отказ                - Булево - Признак отказа от создания формы. Если установить данному параметру значение Истина,
//                            то форма создана не будет;
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//                            Если в установить данному параметру значение Ложь, стандартная обработка события производиться не будет.
//
Процедура ДополнительноОбработатьФормуКонтекстныхНовостейПриСозданииНаСервере(
			Форма,
			Отказ,
			СтандартнаяОбработка) Экспорт

КонецПроцедуры

// В этой процедуре можно переопределить действия с управляемой формой просмотра списка
//  очень важных контекстных новостей (ФормаНовостей, ФормаНовостейСоСписком).
//
// Параметры:
//  Форма                - УправляемаяФорма - форма просмотра списка очень важных контекстных новостей;
//  Отказ                - Булево - Признак отказа от создания формы. Если установить данному параметру значение Истина,
//                            то форма создана не будет;
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//                            Если в установить данному параметру значение Ложь, стандартная обработка события производиться не будет.
//
Процедура ДополнительноОбработатьФормуОченьВажныхНовостейПриСозданииНаСервере(
			Форма,
			Отказ,
			СтандартнаяОбработка) Экспорт

КонецПроцедуры

// В этой процедуре можно переопределить действия с управляемой формой просмотра новости.
//
// Параметры:
//  Форма                - УправляемаяФорма - форма просмотра новости;
//  Отказ                - Булево - Признак отказа от создания формы. Если установить данному параметру значение Истина,
//                            то форма создана не будет;
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//                            Если в установить данному параметру значение Ложь, стандартная обработка события производиться не будет.
//
Процедура ДополнительноОбработатьФормуНовостиПриСозданииНаСервере(
			Форма,
			Отказ,
			СтандартнаяОбработка) Экспорт

КонецПроцедуры

#КонецОбласти

#Область ИнтерактивнаяРаботаСТекстомНовости

// В этой процедуре можно переопределить реакцию системы на нажатие гиперссылки в тексте новости.
// По-умолчанию система при нажатии на, например, 1C:ShowPict001 ищет в самой новости действие с таким же идентификатором,
//  что заставляет в каждой новости прописывать действие и его параметры. С помощью этого переопределения можно заполнять
//  параметры в коде на стороне клиента, что упростит написание текстов новостей.
// Здесь можно заполнить параметры Действие и СписокПараметров произвольными значениями, которые будут переданы в
//   ОбработкаНовостейКлиент.ОбработкаНавигационнойСсылки.
//
// Процедура заполняет параметры Действие и СписокПараметров для объекта
//  новости по переданному уникальному идентификатору гиперссылки.
// 
// Параметры:
//  Объект           - Данные формы коллекция, ДокументСсылка.Новости, СправочникСсылка.Новости;
//  УИНДействия      - Строка;
//  Действие         - Строка;
//  СписокПараметров - СписокЗначений.
//
Процедура ДополнительноПодготовитьПараметрыНавигационнойСсылки(
			Знач Объект,
			УИНДействия,
			Действие,
			СписокПараметров) Экспорт

КонецПроцедуры

#КонецОбласти

#Область ДругиеДополнительныеОбработки

// В этой процедуре можно задать действия при записи пользователя.
// Например, при записи нового пользователя можно определить текущую версию конфигурации
//  и отметить новости для старых версий как прочтенные.
// Здесь можно задать действия при записи пользователя.
// Например, для нового пользователя отметить прочтенными новости для предыдущих версий конфигурации.
//
// Параметры:
//  ПользовательОбъект   - СправочникОбъект.Пользователи - записываемый объект;
//  ЭтоНовыйПользователь - Булево - Истина, если записывается новый пользователь;
//  Отказ                - Булево - установить в Истина, если надо отменить запись.
//
Процедура ОбработатьЗаписьПользователя(
			ПользовательОбъект,
			ЭтоНовыйПользователь,
			Отказ) Экспорт

КонецПроцедуры

#КонецОбласти

#Область ВзаимодействиеСБСП

// Процедура-обработчик перехода с другой программы, например с БухгалтерияБазовая на БухгалтерияПРОФ;
// Действия по-умолчанию: в случае перехода с другой программы надо будет загрузить новости
//   по новой программе (БухгалтерияПРОФ) за 1 месяц, для этого необходимо отредактировать
//   данные регистра сведений ДатыЗагрузкиПоследнихНовостей.
// Здесь можно задать действия при переходе с другой программы,
//   если действия по умолчанию (загрузить новости за 1 месяц) не устраивает.
// Например, можно вообще очистить регистр сведений ДатыЗагрузкиПоследнихНовостей.
//
// Параметры:
//  Нет.
//
Процедура ПриПереходеСДругойПрограммы() Экспорт

КонецПроцедуры

#Область ОбновлениеИБ

// Процедура вызывается при первом запуске библиотеки БИП.
// Обработчики из библиотеки для общих данных и для области данных уже были вызваны.
// Процедура - для всех областей данных.
// Здесь можно задать действия при первоначальном запуске ИБ.
// Например, программно добавить новости, или изменить свойства лент новостей.
//
// Параметры:
//  Нет.
//
Процедура ОбновлениеИнформационнойБазы_ОбщиеДанные_ПервыйЗапуск() Экспорт

КонецПроцедуры

// Процедура вызывается при обновлении библиотеки БИП на любую новую версию.
// Обработчики из библиотеки для общих данных и для области данных уже были вызваны.
// Процедура - для всех областей данных.
// Здесь можно задать действия при обновлении ИБ.
// Например, программно добавить новости, или изменить свойства лент новостей, или изменить расписание регламентного задания ВсеОбновленияНовостей.
//
// Параметры:
//  Нет.
//
Процедура ОбновлениеИнформационнойБазы_ОбщиеДанные_ПерейтиНаВерсию() Экспорт

КонецПроцедуры

// Процедура вызывается при обновлении библиотеки БИП на новую версию.
// Обработчики из библиотеки для общих данных и для области данных уже были вызваны.
// Процедура - для всех областей данных.
// Здесь можно задать действия при обновлении ИБ.
// Например, программно добавить новости, или изменить свойства лент новостей, или изменить расписание регламентного задания ВсеОбновленияНовостей.
//
// Параметры:
//  Нет.
//
Процедура ОбновлениеИнформационнойБазы_ОбщиеДанные_ПерейтиНаВерсию_2_1_4() Экспорт

КонецПроцедуры

// Процедура вызывается при обновлении библиотеки БИП на новую версию.
// Обработчики из библиотеки для общих данных и для области данных уже были вызваны.
// Процедура - для всех областей данных.
// Здесь можно задать действия при обновлении ИБ.
// Например, программно добавить новости, или изменить свойства лент новостей, или изменить расписание регламентного задания ВсеОбновленияНовостей.
//
// Параметры:
//  Нет.
//
Процедура ОбновлениеИнформационнойБазы_ОбщиеДанные_ПерейтиНаВерсию_2_1_5() Экспорт

КонецПроцедуры

// Процедура вызывается при первом запуске библиотеки БИП.
// Обработчики из библиотеки для общих данных и для области данных уже были вызваны.
// Процедура - для каждой области данных.
// Здесь можно задать действия при первоначальном запуске ИБ.
// Например, произвести настройки пользователей.
//
// Параметры:
//  Нет.
//
Процедура ОбновлениеИнформационнойБазы_ОбластьДанных_ПервыйЗапуск() Экспорт

КонецПроцедуры

// Процедура вызывается при обновлении библиотеки БИП на любую новую версию.
// Обработчики из библиотеки для общих данных и для области данных уже были вызваны.
// Процедура - для каждой области данных.
// Здесь можно задать действия при обновлении ИБ в области данных.
// Например, произвести настройки пользователей.
//
// Параметры:
//  Нет.
//
Процедура ОбновлениеИнформационнойБазы_ОбластьДанных_ПерейтиНаВерсию() Экспорт

КонецПроцедуры

// Процедура вызывается при обновлении библиотеки БИП на новую версию.
// Обработчики из библиотеки для общих данных и для области данных уже были вызваны.
// Процедура - для каждой области данных.
// Здесь можно задать действия при обновлении ИБ в области данных.
// Например, произвести настройки пользователей.
//
// Параметры:
//  Нет.
//
Процедура ОбновлениеИнформационнойБазы_ОбластьДанных_ПерейтиНаВерсию_2_1_4() Экспорт

КонецПроцедуры

// Процедура вызывается при обновлении библиотеки БИП на новую версию.
// Обработчики из библиотеки для общих данных и для области данных уже были вызваны.
// Процедура - для каждой области данных.
// Здесь можно задать действия при обновлении ИБ в области данных.
// Например, произвести настройки пользователей.
//
// Параметры:
//  Нет.
//
Процедура ОбновлениеИнформационнойБазы_ОбластьДанных_ПерейтиНаВерсию_2_1_5() Экспорт

КонецПроцедуры

Процедура ОбновлениеИнформационнойБазы_ОбщиеДанные_ПерейтиНаВерсию_ERP_2_1_2() Экспорт
	// Вызывается при переходе на ERP_2_1_2
	Константы.РазрешенаРаботаСНовостями.Установить(Ложь);
	Константы.РазрешенаРаботаСНовостямиЧерезИнтернет.Установить(Ложь);
	
КонецПроцедуры


#КонецОбласти

#КонецОбласти

#Область ИнтерактивныеДействия

// Процедура заполняет "интерактивные действия", которые возвращаются в форму ФормаПросмотраНовостей
//   или ФормаПросмотраНовостейРабочийСтол для дальнейшей обработки на клиенте.
//
// Параметры:
//  ТаблицаНовостей       - ДанныеФормыКоллекция - эту таблицу необходимо заполнить;
//  Пользователь          - СправочникСсылка.Пользователи - текущий пользователь;
//  Отбор                 - Структура с ключами:
//   * ВариантОтбора - значение варианта отбора:
//     - 0 - все новости (без учета корзины);
//     - 1 - по ленте новостей (без учета корзины), должен быть ключ ЛентаНовостей. Если ключа "ЛентаНовостей" нет, или он пустой,
//           или неправильного типа, то будут отобраны все новости (без учета корзины);
//     - 2 - результат поиска. Также должен быть передан ключ "СписокНайденныхНовостей" типа СписокЗначений;
//     - 3 - контекстные новости (новости по объекту метаданных / форме). Также должны быть переданы структура с ключами "Метаданные"
//           и "Форма". Если значение ключа Форма = Неопределено, то будут получены новости по всем формам для этого объекта метаданных;
//     - 4 - Помеченные новости (без учета корзины). Также должен быть передан ключ "Тэг" типа Строка.
//           Избранные новости отбираются этим же вариантом отбора, только тэг = "Пометка1";
//     - 5 - Важные новости (без учета корзины), у которых важность = "важно" или "очень важно";
//     - 6 - Популярная тема. Также должен быть передан ключ "ИмяТемы" типа Строка;
//     - 7 - Пользовательский отбор. Также должен быть передан ключ "ИмяОтбора" типа Строка
//           (это имя фильтра из ХранилищаНастроек.НастройкиНовостей);
//     - 8 - Корзина.
//  ИнтерактивныеДействия - Массив - массив, который будет заполнен произвольными интерактивными действиями, которые будут отбработаны на клиенте.
//
Процедура ЗаполнитьИнтерактивныеДействияПослеПолученияНовостей(
			ТаблицаНовостей,
			Пользователь,
			Отбор,
			ИнтерактивныеДействия) Экспорт

КонецПроцедуры

#КонецОбласти

#Область ПриНачалеРаботыСистемы

// Процедура вызывается из модуля управляемого приложения,
//  затем ОбработкаНовостейКлиент.ПриНачалеРаботыСистемы,
//  затем ОбработкаНовостейВызовСервера.ПриНачалеРаботыСистемы,
//  затем ОбработкаНовостей.ПриНачалеРаботыСистемы,
//  затем ОбработкаНовостейПереопределяемый.ПриНачалеРаботыСистемы.
//
// Параметры:
//  Нет.
//
Процедура ПриНачалеРаботыСистемы() Экспорт

КонецПроцедуры

#КонецОбласти

#Область ПолучениеЗначенийКатегорий

// Функция возвращает значение категории, если для нее установлено свойство "ЗаполняетсяАвтоматически".
// Переопределение функции имеет смысл только если необходимо возвращать значения, отличные от значений по-умолчанию.
//
// Параметры:
//  Категория           - ПланВидовХарактеристикСсылка.КатегорииНовостей;
//  ПредыдущийРезультат - Произвольный - предыдущее значение, которое можно изменить.
//
// Возвращаемое значение:
//  Произвольное (Строка, список значений).
//
Функция ПолучитьЗначениеПредопределеннойКатегории(Категория, Знач ПредыдущийРезультат) Экспорт

	НовыйРезультат = "";

	Если ТипЗнч(Категория) = Тип("ПланВидовХарактеристикСсылка.КатегорииНовостей") Тогда
		КатегорияКод = СокрЛП(Категория.Код);
	ИначеЕсли ТипЗнч(Категория) = Тип("Строка") Тогда
		КатегорияКод = СокрЛП(Категория);
	Иначе
		Возврат ПредыдущийРезультат;
	КонецЕсли;

	Если ВРег(КатегорияКод) = ВРег("ProductName") Тогда // В плане видов характеристик "КатегорииНовостей" такого элемента нет.
		Если ПолучитьФункциональнуюОпцию("УправлениеПредприятием") Тогда
            НовыйРезультат = "BASERP";
		ИначеЕсли ПолучитьФункциональнуюОпцию("КомплекснаяАвтоматизация") Тогда
			НовыйРезультат = "BASTradeManagement";
		Иначе
			Если ПолучитьФункциональнуюОпцию("БазоваяВерсия") Тогда
				НовыйРезультат = "BASTradeBase";
			Иначе
				НовыйРезультат = "BASTrade";
			КонецЕсли;
		КонецЕсли;


	КонецЕсли;

	Возврат НовыйРезультат;

КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

	

#КонецОбласти

