#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);

	Если ПроведениеСервер.РассчитыватьИзменения(ДополнительныеСвойства)
		И ПроведениеСервер.КонтролироватьОбеспечение(ДополнительныеСвойства) Тогда

		ДанныеБлокировки = ДанныеБлокировки();

		Если ДанныеБлокировки.ТаблицаБлокируемыхИзмерений.Количество() = 0 Тогда
			ДополнительныеСвойства.РассчитыватьИзменения = Ложь;
		КонецЕсли;

	КонецЕсли;

	Если ПроведениеСервер.РассчитыватьИзменения(ДополнительныеСвойства)
		И ПроведениеСервер.КонтролироватьОбеспечение(ДополнительныеСвойства) Тогда

		ЗаблокироватьРегистрыДляКонтроляОстатков(ДанныеБлокировки);
		СформироватьТаблицуИсходныхДвижений();

	КонецЕсли;

	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ПоместитьВременнуюТаблицуИсходныхДвижений(Отбор.Регистратор.Значение, МенеджерВременныхТаблиц);
	ДополнительныеСвойства.Вставить("ГрафикОтгрузкиТоваровМенеджерВременныхТаблиц", МенеджерВременныхТаблиц);

КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	Если ПроведениеСервер.РассчитыватьИзменения(ДополнительныеСвойства)
		И ПроведениеСервер.КонтролироватьОбеспечение(ДополнительныеСвойства) Тогда
		СформироватьТаблицуИзмененийДвижений();
	КонецЕсли;

	МенеджерВременныхТаблиц = ДополнительныеСвойства.ГрафикОтгрузкиТоваровМенеджерВременныхТаблиц;
	ЕстьИзменения = ПоместитьВременнуюТаблицуИзмененийДвижений(Отбор.Регистратор.Значение, МенеджерВременныхТаблиц);

	Если ЕстьИзменения Тогда

		РегистрыСведений.ДоступныеОстаткиПланируемыхПоступлений.РассчитатьОстаткиГрафикаДвиженияТоваров(МенеджерВременныхТаблиц);

	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ДанныеБлокировки()

	ЕстьСтрокиБезКонтроля = Ложь;

	Набор = Новый ТаблицаЗначений();
	Набор.Колонки.Добавить("Номенклатура",   Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Набор.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	Набор.Колонки.Добавить("Склад",          Новый ОписаниеТипов("СправочникСсылка.Склады"));
	НоваяСтрока = Неопределено;

	Для Каждого Запись Из ЭтотОбъект Цикл

		Если Запись.КоличествоИзЗаказов <> 0 Тогда

			Если НоваяСтрока = Неопределено Или
					НоваяСтрока.Номенклатура <> Запись.Номенклатура Или
					НоваяСтрока.Характеристика <> Запись.Характеристика Или
					НоваяСтрока.Склад <> Запись.Склад Тогда

				НоваяСтрока = Набор.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Запись);

			КонецЕсли;

		Иначе
			ЕстьСтрокиБезКонтроля = Истина;
		КонецЕсли;

	КонецЦикла;

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Т.Номенклатура        КАК Номенклатура,
	|	Т.Характеристика      КАК Характеристика,
	|	Т.Склад               КАК Склад
	|ПОМЕСТИТЬ ВтНаборЗаписей
	|
	|ИЗ
	|	&НаборЗаписей КАК Т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура, Характеристика, Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НаборЗаписей.Номенклатура   КАК Номенклатура,
	|	НаборЗаписей.Характеристика КАК Характеристика,
	|	НаборЗаписей.Склад          КАК Склад
	|
	|ИЗ
	|	ВтНаборЗаписей КАК НаборЗаписей
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаХарактеристика
	|		ПО НаборЗаписей.Склад = НастройкаХарактеристика.Склад
	|		 И НаборЗаписей.Номенклатура = НастройкаХарактеристика.Номенклатура
	|		 И НаборЗаписей.Характеристика = НастройкаХарактеристика.Характеристика
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаНоменклатура
	|		ПО НаборЗаписей.Склад = НастройкаНоменклатура.Склад
	|		 И НаборЗаписей.Номенклатура = НастройкаНоменклатура.Номенклатура
	|		 И НастройкаНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		 И НастройкаХарактеристика.Склад   ЕСТЬ NULL
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаСклад
	|		ПО НаборЗаписей.Склад = НастройкаСклад.Склад
	|		 И НастройкаСклад.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		 И НастройкаСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		 И НастройкаХарактеристика.Склад   ЕСТЬ NULL
	|		 И НастройкаНоменклатура.Склад     ЕСТЬ NULL
	|
	|ГДЕ
	|	ЕСТЬNULL(НастройкаХарактеристика.Контролировать,
	|		ЕСТЬNULL(НастройкаНоменклатура.Контролировать,
	|		НастройкаСклад.Контролировать))";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НаборЗаписей", Набор);
	ТаблицаБлокируемыхИзмерений = Запрос.Выполнить().Выгрузить();
	
	ТребуетсяУправляемаяБлокировка = ЕстьСтрокиБезКонтроля Или ТаблицаБлокируемыхИзмерений.Количество() < Набор.Количество();

	Возврат Новый Структура("ТребуетсяУправляемаяБлокировка, ТаблицаБлокируемыхИзмерений",
		ТребуетсяУправляемаяБлокировка, ТаблицаБлокируемыхИзмерений);

КонецФункции

Процедура ЗаблокироватьРегистрыДляКонтроляОстатков(ДанныеБлокировки)

	Блокировка = Новый БлокировкаДанных();

	//Устанавливаем блокировку только по тем измерениям, по которым необходим контроль остатков.
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ДоступныеОстаткиПланируемыхПоступлений");
	ЭлементБлокировки.Режим          = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = ДанныеБлокировки.ТаблицаБлокируемыхИзмерений;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура",   "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад",          "Склад");

	//Устанавливаем блокировку второго регистра, данные которого понадобятся для контроля по измерениям, присутствующим в наборе записей
	//регистра "Движение товаров".
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.СвободныеОстатки");
	ЭлементБлокировки.Режим          = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = ДанныеБлокировки.ТаблицаБлокируемыхИзмерений;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура",   "Номенклатура");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Характеристика", "Характеристика");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад",          "Склад");

	Блокировка.Заблокировать();

КонецПроцедуры

Процедура СформироватьТаблицуИсходныхДвижений()

	// Формирование таблиц.
	// Текущее состояние набора помещается во временную таблицу "ДвиженияПередЗаписью",
	// чтобы при записи получить изменение нового набора относительно текущего.
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.УстановитьПараметр("ЭтоНовый",    ДополнительныеСвойства.ЭтоНовый);
	Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Период                           КАК Период,
	|	Таблица.Номенклатура                     КАК Номенклатура,
	|	Таблица.Характеристика                   КАК Характеристика,
	|	Таблица.Склад                            КАК Склад,
	|	-Таблица.КоличествоИзЗаказов             КАК КоличествоИзЗаказовПередЗаписью
	|
	|ПОМЕСТИТЬ ГрафикОтгрузкиТоваровПередЗаписью
	|
	|ИЗ
	|	РегистрНакопления.ГрафикОтгрузкиТоваров КАК Таблица
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаХарактеристика
	|		ПО Таблица.Склад = НастройкаХарактеристика.Склад
	|		 И Таблица.Номенклатура = НастройкаХарактеристика.Номенклатура
	|		 И Таблица.Характеристика = НастройкаХарактеристика.Характеристика
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаНоменклатура
	|		ПО Таблица.Склад = НастройкаНоменклатура.Склад
	|		 И Таблица.Номенклатура = НастройкаНоменклатура.Номенклатура
	|		 И НастройкаНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		 И НастройкаХарактеристика.Склад   ЕСТЬ NULL
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаСклад
	|		ПО Таблица.Склад = НастройкаСклад.Склад
	|		 И НастройкаСклад.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		 И НастройкаСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		 И НастройкаХарактеристика.Склад   ЕСТЬ NULL
	|		 И НастройкаНоменклатура.Склад     ЕСТЬ NULL
	|
	|ГДЕ
	|	Таблица.Регистратор = &Регистратор
	|
	|	И Таблица.КоличествоИзЗаказов > 0
	|	И (НЕ &ЭтоНовый)
	|
	|	И ЕСТЬNULL(НастройкаХарактеристика.Контролировать,
	|		ЕСТЬNULL(НастройкаНоменклатура.Контролировать,
	|		НастройкаСклад.Контролировать))";
	
	Запрос.Выполнить();

КонецПроцедуры

Процедура СформироватьТаблицуИзмененийДвижений()

	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	// Рассчитывается изменение нового набора относительно текущего с учетом накопленных изменений
	// и помещается во временную таблицу.

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаИзменений.Номенклатура                                 КАК Номенклатура,
	|	ТаблицаИзменений.Характеристика                               КАК Характеристика,
	|	ТаблицаИзменений.Склад                                        КАК Склад,
	|	ТаблицаИзменений.Период                                       КАК Период,
	|	СУММА(ТаблицаИзменений.КоличествоИзЗаказовИзменение)          КАК КоличествоИзЗаказовИзменение
	|
	|ПОМЕСТИТЬ ДвиженияГрафикОтгрузкиТоваровИзменение
	|ИЗ
	|	(ВЫБРАТЬ
	|		Таблица.Период                          КАК Период,
	|		Таблица.Номенклатура                    КАК Номенклатура,
	|		Таблица.Характеристика                  КАК Характеристика,
	|		Таблица.Склад                           КАК Склад,
	|		Таблица.КоличествоИзЗаказовПередЗаписью КАК КоличествоИзЗаказовИзменение
	|	ИЗ
	|		ГрафикОтгрузкиТоваровПередЗаписью КАК Таблица
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Таблица.Период                          КАК Период,
	|		Таблица.Номенклатура                    КАК Номенклатура,
	|		Таблица.Характеристика                  КАК Характеристика,
	|		Таблица.Склад                           КАК Склад,
	|		Таблица.КоличествоИзЗаказов             КАК КоличествоИзЗаказовИзменение
	|	ИЗ
	|		РегистрНакопления.ГрафикОтгрузкиТоваров КАК Таблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаХарактеристика
	|		ПО Таблица.Склад = НастройкаХарактеристика.Склад
	|		 И Таблица.Номенклатура = НастройкаХарактеристика.Номенклатура
	|		 И Таблица.Характеристика = НастройкаХарактеристика.Характеристика
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаНоменклатура
	|		ПО Таблица.Склад = НастройкаНоменклатура.Склад
	|		 И Таблица.Номенклатура = НастройкаНоменклатура.Номенклатура
	|		 И Таблица.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		 И Таблица.Склад   ЕСТЬ NULL
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаСклад
	|		ПО Таблица.Склад = НастройкаСклад.Склад
	|		 И НастройкаСклад.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		 И НастройкаСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		 И НастройкаХарактеристика.Склад   ЕСТЬ NULL
	|		 И НастройкаНоменклатура.Склад     ЕСТЬ NULL
	|
	|	ГДЕ
	|		Таблица.Регистратор = &Регистратор
	|
	|		И Таблица.КоличествоИзЗаказов > 0
	|
	|		И ЕСТЬNULL(НастройкаХарактеристика.Контролировать,
	|			ЕСТЬNULL(НастройкаНоменклатура.Контролировать,
	|			НастройкаСклад.Контролировать))
	|
	|	) КАК ТаблицаИзменений
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИзменений.Период,
	|	ТаблицаИзменений.Номенклатура,
	|	ТаблицаИзменений.Характеристика,
	|	ТаблицаИзменений.Склад
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаИзменений.КоличествоИзЗаказовИзменение) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ГрафикОтгрузкиТоваровПередЗаписью";

	Выборка = Запрос.ВыполнитьПакет()[0].Выбрать();
	Выборка.Следующий();

	// Добавляется информация о ее существовании и наличии в ней записей об изменении.
	СтруктураВременныеТаблицы.Вставить("ДвиженияГрафикОтгрузкиТоваровИзменение", Выборка.Количество > 0);

КонецПроцедуры

Процедура ПоместитьВременнуюТаблицуИсходныхДвижений(Ссылка, МенеджерВременныхТаблиц)

	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Т.Номенклатура   КАК Номенклатура,
		|	Т.Характеристика КАК Характеристика,
		|	Т.Склад          КАК Склад,
		|
		|	Т.ДатаОтгрузки        КАК ДатаОтгрузки,
		|	Т.КоличествоИзЗаказов КАК КоличествоПередЗаписью
		|
		|ПОМЕСТИТЬ ВТГрафикОтгрузкиТоваровПередЗаписью
		|ИЗ
		|	РегистрНакопления.ГрафикОтгрузкиТоваров КАК Т
		|ГДЕ
		|	Т.Регистратор = &Регистратор
		|	И Т.КоличествоИзЗаказов <> 0");

	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();

КонецПроцедуры

Функция ПоместитьВременнуюТаблицуИзмененийДвижений(Ссылка, МенеджерВременныхТаблиц)

	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Набор.Номенклатура   КАК Номенклатура,
		|	Набор.Характеристика КАК Характеристика,
		|	Набор.Склад          КАК Склад
		|
		|ПОМЕСТИТЬ ВтТовары
		|ИЗ(
		|	ВЫБРАТЬ
		|		ПередЗаписью.Номенклатура           КАК Номенклатура,
		|		ПередЗаписью.Характеристика         КАК Характеристика,
		|		ПередЗаписью.Склад                  КАК Склад,
		|
		|		ПередЗаписью.ДатаОтгрузки            КАК ДатаОтгрузки,
		|		-ПередЗаписью.КоличествоПередЗаписью КАК КоличествоИзменение
		|	ИЗ
		|		ВТГрафикОтгрузкиТоваровПередЗаписью КАК ПередЗаписью
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ПриЗаписи.Номенклатура           КАК Номенклатура,
		|		ПриЗаписи.Характеристика         КАК Характеристика,
		|		ПриЗаписи.Склад                  КАК Склад,
		|
		|		ПриЗаписи.ДатаОтгрузки           КАК ДатаОтгрузки,
		|		ПриЗаписи.КоличествоИзЗаказов    КАК КоличествоИзменение
		|	ИЗ
		|		РегистрНакопления.ГрафикОтгрузкиТоваров КАК ПриЗаписи
		|	ГДЕ
		|		ПриЗаписи.Регистратор = &Регистратор
		|		И ПриЗаписи.КоличествоИзЗаказов <> 0) КАК Набор
		|
		|СГРУППИРОВАТЬ ПО
		|	Набор.Номенклатура, Набор.Характеристика, Набор.Склад,
		|	Набор.ДатаОтгрузки
		|
		|ИМЕЮЩИЕ
		|	СУММА(Набор.КоличествоИзменение) <> 0");

	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Регистратор", Отбор.Регистратор.Значение);
	РезультатЗапроса = Запрос.Выполнить();
	Возврат Не РезультатЗапроса.Пустой();

КонецФункции

#КонецОбласти

#КонецЕсли