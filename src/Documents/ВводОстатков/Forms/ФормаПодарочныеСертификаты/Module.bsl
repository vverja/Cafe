
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();

	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ИзменитьВидимостьЭлементов();
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	УстановитьЗаголовок();
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	ВводНаОсновании.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюСоздатьНаОсновании);
	
	МенюОтчеты.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюОтчеты);


КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ПараметрыЗаписи.Вставить("ТипОперации", Объект.ТипОперации);
	Оповестить("Запись_ВводОстатков", ПараметрыЗаписи, Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// Обработчик механизма "ДатыЗапретаИзменения"
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьЗаголовок();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидПодарочногоСертификатаПриИзменении(Элемент)
	
	ВидПодарочногоСертификатаПриИзмененииНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовПодвалаФормы

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования, 
		ЭтотОбъект, 
		"Объект.Комментарий");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПодарочныеСертификаты

&НаКлиенте
Процедура ПодарочныеСертификатыПодарочныйСертификатПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ПодарочныеСертификаты.ТекущиеДанные;
	
	Если Не ЗначениеЗаполнено(ТекущиеДанные.ПодарочныйСертификат) Тогда
		Возврат;
	КонецЕсли;
	
	Данные = ПодарочныеСертификатыВызовСервера.ПолучитьДанныеПодарочногоСертификата(ТекущиеДанные.ПодарочныйСертификат);
	ТекущиеДанные.МагнитныйКод = Данные.МагнитныйКод;
	ТекущиеДанные.Штрихкод = Данные.Штрихкод;
	ТекущиеДанные.СерийныйНомер = Данные.СерийныйНомер;
	
	ЗаполнитьСуммуРегл(
		Элементы.ПодарочныеСертификаты.ТекущиеДанные.СуммаВВалютеСертификата,
		Объект.ВидПодарочногоСертификата,
		ВалютаРегламентированногоУчета,
		Объект.Дата,
		Элементы.ПодарочныеСертификаты.ТекущиеДанные.СуммаРегл);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодарочныеСертификатыСуммаВВалютеСертификатаПриИзменении(Элемент)
	
	ЗаполнитьСуммуРегл(
		Элементы.ПодарочныеСертификаты.ТекущиеДанные.СуммаВВалютеСертификата,
		Объект.ВидПодарочногоСертификата,
		ВалютаРегламентированногоУчета,
		Объект.Дата,
		Элементы.ПодарочныеСертификаты.ТекущиеДанные.СуммаРегл);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	МенюОтчетыКлиент.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуСоздатьНаОсновании(Команда)
	
	ВводНаОснованииКлиент.ВыполнитьПодключаемуюКомандуСоздатьНаОсновании(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры


&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПодарочныеСертификатыСерийныйНомер.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПодарочныеСертификатыШтрихкод.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПодарочныеСертификатыМагнитныйКод.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ПодарочныеСертификаты.ПодарочныйСертификат");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	Элемент.Оформление.УстановитьЗначениеПараметра("Доступность", Ложь);

КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовок()
	
	АвтоЗаголовок = Ложь;
	Заголовок = Документы.ВводОстатков.ЗаголовокДокументаПоТипуОперации(Объект.Ссылка,
																						  Объект.Номер,
																						  Объект.Дата,
																						  Объект.ТипОперации);
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьВидимостьЭлементов()
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ВидПодарочногоСертификата, "ТипКарты");
	Если ЗначенияРеквизитов.ТипКарты = Перечисления.ТипыКарт.Магнитная Тогда
		Элементы.ПодарочныеСертификатыМагнитныйКод.Видимость = Истина;
		Элементы.ПодарочныеСертификатыШтрихкод.Видимость     = Ложь;
	ИначеЕсли ЗначенияРеквизитов.ТипКарты = Перечисления.ТипыКарт.Штриховая Тогда
		Элементы.ПодарочныеСертификатыМагнитныйКод.Видимость = Ложь;
		Элементы.ПодарочныеСертификатыШтрихкод.Видимость     = Истина;
	Иначе
		Элементы.ПодарочныеСертификатыМагнитныйКод.Видимость = Истина;
		Элементы.ПодарочныеСертификатыШтрихкод.Видимость     = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВидПодарочногоСертификатаПриИзмененииНаСервере()
	
	ИзменитьВидимостьЭлементов();
	
	Для Каждого СтрокаТЧ Из Объект.ПодарочныеСертификаты Цикл
		СтрокаТЧ.ПодарочныйСертификат = Неопределено;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаполнитьСуммуРегл(Сумма, ВидПодарочногоСертификата, ВалютаРегламентированногоУчета, ДатаДокумента, СуммаРегл)
	
	Если ЗначениеЗаполнено(ВидПодарочногоСертификата) Тогда
		
		Валюта = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидПодарочногоСертификата, "Валюта");
		
		Если Валюта = ВалютаРегламентированногоУчета Тогда
			СуммаРегл = Сумма;
		Иначе
			КоэффициентПересчета = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентПересчетаИзВалютыВВалюту(Валюта, ВалютаРегламентированногоУчета, ДатаДокумента);
			СуммаРегл = Окр(Сумма * КоэффициентПересчета, 2, 1);
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти
