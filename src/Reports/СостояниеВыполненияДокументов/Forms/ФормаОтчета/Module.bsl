
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ПараметрКоманды") Тогда
		ВходящиеДокументы.ЗагрузитьЗначения(Параметры.ПараметрКоманды);
	ИначеЕсли ЗначениеЗаполнено(Параметры.ВходящиеДокументы) Тогда
		ВходящиеДокументы = Параметры.ВходящиеДокументы;
	Иначе
		Отказ = Истина;
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		СформироватьОтчет();
	Иначе
		ВызватьИсключение НСтр("ru='Отчет не предназначен для интерактивного открытия.';uk='Звіт не призначений для інтерактивного відкриття.'");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыОтчета

&НаКлиенте
Процедура ТаблицаОтчетаВыбор(Элемент, Область, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Область.Расшифровка) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	СтруктураПараметров = Область.Расшифровка;
	
	Если СтруктураПараметров.Действие = "ОткрытьСостояниеОбеспечения" Тогда
		ПараметрыФормы = ПодготовитьДанныеДляОбеспеченияЗаказа(СтруктураПараметров.Заказ);
		ОткрытьФорму("Обработка.СостояниеОбеспечения.Форма", ПараметрыФормы, ЭтаФорма, УникальныйИдентификатор);
	ИначеЕсли СтруктураПараметров.Действие = "ОткрытьЗначение" Тогда
		ПоказатьЗначение(,СтруктураПараметров.Заказ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
	ОчиститьСообщения();
	СформироватьОтчет();
КонецПроцедуры 

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьОтчет()
	
	ТаблицаОтчета.Очистить();
	Отчеты.СостояниеВыполненияДокументов.СформироватьОтчетСостояниеВыполненияДокументов(ВходящиеДокументы, ТаблицаОтчета);
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьДанныеДляОбеспеченияЗаказа(Заказ)
	
	СписокЗаказы = Новый СписокЗначений;
	СписокЗаказы.Добавить(Заказ);
	
	Возврат Новый Структура("Заказы, ТолькоПросмотр", СписокЗаказы, Истина);
	
КонецФункции


#КонецОбласти
