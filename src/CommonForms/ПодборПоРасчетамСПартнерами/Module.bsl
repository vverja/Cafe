
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Организация = Параметры.Организация;
	ХозяйственнаяОперация = Параметры.ХозяйственнаяОперация;
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями
	Тогда
		Партнер = Справочники.Партнеры.НашеПредприятие;
	Иначе
		Партнер = Параметры.Партнер;
	КонецЕсли;
	
	Контрагент = Параметры.Контрагент;
	Если Контрагент = Неопределено Тогда
		Контрагент = Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;
	
	Если ТекущийВариантИнтерфейсаКлиентскогоПриложения() = ВариантИнтерфейсаКлиентскогоПриложения.Версия8_2 Тогда
		Элементы.ГруппаИтого.ЦветФона = Новый Цвет();
	КонецЕсли;
		
	Валюта         = Параметры.Валюта;
	СуммаДокумента = Параметры.СуммаДокумента;
	ДатаДокумента  = Параметры.ДатаДокумента;
	ТипРасчетов    = Параметры.ТипРасчетов;
	АдресПлатежейВХранилище = Параметры.АдресПлатежейВХранилище;
	
	Если Не Параметры.Свойство("УчитыватьФилиалы", УчитыватьФилиалы) Тогда
		УчитыватьФилиалы = Истина;
	КонецЕсли;
	
	ЗаполнитьТаблицуПоРасчетамСПартнерами();
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РассчитатьСуммуПлатежей();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПартнерПриИзменении(Элемент)
	
	ЗаполнитьТаблицуПоРасчетамСПартнерами();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	ЗаполнитьТаблицуПоРасчетамСПартнерами();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОстатковРасчетовПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	РассчитатьСуммуПлатежей();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОстатковРасчетовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ТаблицаОстатковРасчетовЗаказ" Тогда
		СтрокаТаблицы = Элементы.ТаблицаОстатковРасчетов.ТекущиеДанные;
		Если СтрокаТаблицы <> Неопределено
		 И ЗначениеЗаполнено(СтрокаТаблицы.Заказ) Тогда
			ПоказатьЗначение(Неопределено, СтрокаТаблицы.Заказ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПеренестиВДокументВыполнить()

	ПоместитьПлатежиВХранилище();
	Закрыть(КодВозвратаДиалога.OK);
	
	Структура = Новый Структура("АдресПлатежейВХранилище, ХозяйственнаяОперация", АдресПлатежейВХранилище, ХозяйственнаяОперация);
	ОповеститьОВыборе(Структура);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПлатежиВыполнить()

	Для Каждого СтрокаТаблицы Из ТаблицаОстатковРасчетов Цикл
		СтрокаТаблицы.Выбран = Истина;
	КонецЦикла;
	РассчитатьСуммуПлатежей();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьПлатежиВыполнить()

	Для Каждого СтрокаТаблицы Из ТаблицаОстатковРасчетов Цикл
		СтрокаТаблицы.Выбран = Ложь
	КонецЦикла;
	РассчитатьСуммуПлатежей();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВыделенныеПлатежи(Команда)
	
	МассивСтрок = Элементы.ТаблицаОстатковРасчетов.ВыделенныеСтроки;
	Для Каждого НомерСтроки Из МассивСтрок Цикл
		СтрокаТаблицы = ТаблицаОстатковРасчетов.НайтиПоИдентификатору(НомерСтроки);
		Если СтрокаТаблицы <> Неопределено Тогда
			СтрокаТаблицы.Выбран = Истина;
		КонецЕсли;
	КонецЦикла;
	РассчитатьСуммуПлатежей();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьВыделенныеПлатежи(Команда)
	
	МассивСтрок = Элементы.ТаблицаОстатковРасчетов.ВыделенныеСтроки;
	Для Каждого НомерСтроки Из МассивСтрок Цикл
		СтрокаТаблицы = ТаблицаОстатковРасчетов.НайтиПоИдентификатору(НомерСтроки);
		Если СтрокаТаблицы <> Неопределено Тогда
			СтрокаТаблицы.Выбран = Ложь;
		КонецЕсли;
	КонецЦикла;
	РассчитатьСуммуПлатежей();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТаблицаОстатковРасчетов.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаОстатковРасчетов.Выбран");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.RosyBrown);
	
	
КонецПроцедуры

#Область УправлениеЭлементамиФормы

&НаСервере
Процедура УстановитьВидимость()
	
	Перем МассивВсехРеквизитов;
	Перем МассивРеквизитовОперации;
	
	ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(
		ХозяйственнаяОперация, 
		МассивВсехРеквизитов, 
		МассивРеквизитовОперации);
	ДенежныеСредстваСервер.УстановитьВидимостьЭлементовПоМассиву(
		Элементы,
		МассивВсехРеквизитов,
		МассивРеквизитовОперации);
	
	Элементы.Контрагент.ТолькоПросмотр = (ХозяйственнаяОперация <> Перечисления.ХозяйственныеОперации.АвансовыйОтчет);
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями
	Тогда
		Заголовок = НСтр("ru='Подбор по расчетам между организациями';uk='Підбір за розрахунками між організаціями'");
	КонецЕсли;
	
	ПартнерыИКонтрагенты.ЗаголовокРеквизитаВЗависимостиОтФОИспользоватьПартнеровКакКонтрагентов(
	                       ЭтотОбъект, "ТаблицаОстатковРасчетовДолгПартнера", НСтр("ru='Долг контрагента';uk='Борг контрагента'"));
	
	ЕстьФилиалы = Справочники.Организации.ФилиалыСРасчетамиЧерезГоловнуюОрганизацию(Организация).Количество() > 0;
	Элементы.ТаблицаОстатковРасчетовОрганизация.Видимость = ЕстьФилиалы;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура ПоместитьПлатежиВХранилище() 
	
	Платежи = ТаблицаОстатковРасчетов.Выгрузить(, "Выбран, Сумма, Заказ, СтатьяДвиженияДенежныхСредств, ВалютаВзаиморасчетов, Партнер, Контрагент, Договор, ТипРасчетов, Организация");
	МассивУдаляемыхСтрок = Новый Массив;
	Для Каждого СтрокаТаблицы Из Платежи Цикл
		Если Не СтрокаТаблицы.Выбран Тогда
			МассивУдаляемыхСтрок.Добавить(СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		Платежи.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
	Если Платежи.Итог("Сумма") < СуммаДокумента Тогда
		СтрокаТаблицы = Платежи.Добавить();
		СтрокаТаблицы.Сумма = СуммаДокумента - Платежи.Итог("Сумма");
		Если ЗначениеЗаполнено(Партнер) Тогда
			СтрокаТаблицы.Партнер = Партнер;
		Иначе
			СтрокаТаблицы.Партнер = ДенежныеСредстваСервер.ПолучитьПартнераПоКонтрагенту(Контрагент);
		КонецЕсли; 
		Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
			СтрокаТаблицы.Заказ = ДоговорКонтрагента;
		Иначе
			СтрокаТаблицы.Заказ = ДенежныеСредстваСервер.ДоговорПоУмолчанию(
				Неопределено,
				СтрокаТаблицы.Партнер,
				Контрагент,
				Организация,
				ПолучитьХозяйственнуюОперациюДоговора(ХозяйственнаяОперация));
		КонецЕсли; 
	КонецЕсли; 
	
	Платежи.Колонки.Добавить("ОснованиеПлатежа");
	Платежи.ЗагрузитьКолонку(Платежи.ВыгрузитьКолонку("Заказ"), "ОснованиеПлатежа");
	
	АдресПлатежейВХранилище = ПоместитьВоВременноеХранилище(Платежи, УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьХозяйственнуюОперациюДоговора(ОперацияДокумента)
	
	ХозяйственнаяОперацияДоговора = Новый Массив;
	Если ОперацияДокумента = Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента
	 ИЛИ ОперацияДокумента = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту Тогда
		
		ХозяйственнаяОперацияДоговора.Добавить(Перечисления.ХозяйственныеОперации.РеализацияКлиенту);
		ХозяйственнаяОперацияДоговора.Добавить(Перечисления.ХозяйственныеОперации.ПередачаНаКомиссию);
		
	ИначеЕсли ОперацияДокумента = Перечисления.ХозяйственныеОперации.ОплатаПоставщику
	 ИЛИ ОперацияДокумента = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика Тогда
		
		ХозяйственнаяОперацияДоговора.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика);
		ХозяйственнаяОперацияДоговора.Добавить(Перечисления.ХозяйственныеОперации.ЗакупкаПоИмпорту);
		ХозяйственнаяОперацияДоговора.Добавить(Перечисления.ХозяйственныеОперации.ПриемНаКомиссию);
		
	КонецЕсли;
	
	Возврат ХозяйственнаяОперацияДоговора;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуПоРасчетамСПартнерами()
	
	Реквизиты = Новый Структура("Дата, Организация, СуммаДокумента, Валюта, Контрагент, Партнер, ХозяйственнаяОперация",
		ДатаДокумента,
		Организация,
		СуммаДокумента,
		Валюта,
		Контрагент,
		Партнер,
		ХозяйственнаяОперация);
		
	Если ЗначениеЗаполнено(ТипРасчетов) Тогда
		Реквизиты.Вставить("ТипРасчетов", ТипРасчетов);
	КонецЕсли;
	
	ВзаиморасчетыСервер.ЗаполнитьТаблицуОстатковРасчетов(Реквизиты, АдресПлатежейВХранилище, ТаблицаОстатковРасчетов, УчитыватьФилиалы);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаполнитьИменаРеквизитовПоХозяйственнойОперации(ХозяйственнаяОперация, МассивВсехРеквизитов, МассивРеквизитовОперации)
	
	МассивВсехРеквизитов = Новый Массив;
	МассивВсехРеквизитов.Добавить("Партнер");
	МассивВсехРеквизитов.Добавить("Контрагент");
	МассивВсехРеквизитов.Добавить("ТаблицаОстатковРасчетов.Заказ");
	МассивВсехРеквизитов.Добавить("ТаблицаОстатковРасчетов.КОплате");
	МассивВсехРеквизитов.Добавить("ТаблицаОстатковРасчетов.КОплатеВалюта");
	МассивВсехРеквизитов.Добавить("ТаблицаОстатковРасчетов.НашДолг");
	МассивВсехРеквизитов.Добавить("ТаблицаОстатковРасчетов.ДолгПартнера");
	МассивВсехРеквизитов.Добавить("ТаблицаОстатковРасчетов.Партнер");
	МассивВсехРеквизитов.Добавить("ТаблицаОстатковРасчетов.ТипРасчетов");
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеОплатыОтКлиента Тогда
		МассивРеквизитовОперации = Новый Массив;
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.Партнер");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.Заказ");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.КОплате");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.КОплатеВалюта");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.ДолгПартнера");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента
	 ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя
	Тогда
		МассивРеквизитовОперации = Новый Массив;
		МассивРеквизитовОперации.Добавить("Партнер");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.Заказ");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.КОплате");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.КОплатеВалюта");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.ДолгПартнера");	
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОплатыКлиенту Тогда
		МассивРеквизитовОперации = Новый Массив;
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.Партнер");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.Заказ");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.НашДолг");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаПоставщику
	 ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеТаможне Тогда
		МассивРеквизитовОперации = Новый Массив;
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.Партнер");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.Заказ");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.КОплате");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.КОплатеВалюта");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.НашДолг");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровПоставщику Тогда
		МассивРеквизитовОперации = Новый Массив;
		МассивРеквизитовОперации.Добавить("Партнер");
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.Заказ");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.КОплате");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.КОплатеВалюта");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.НашДолг");	
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПоступлениеДенежныхСредствИзДругойОрганизации
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтДругойОрганизации
		Или ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровМеждуОрганизациями
	Тогда
		МассивРеквизитовОперации = Новый Массив;
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.Заказ");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.КОплате");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.НашДолг");	
	
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратДенежныхСредствОтПоставщика Тогда
		МассивРеквизитовОперации = Новый Массив;
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.Партнер");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.Заказ");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.ДолгПартнера");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеДебиторскойЗадолженности Тогда
		МассивРеквизитовОперации = Новый Массив;
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.Партнер");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.Заказ");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.ДолгПартнера");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.ТипРасчетов");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеКредиторскойЗадолженности Тогда
		МассивРеквизитовОперации = Новый Массив;
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.Партнер");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.Заказ");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.НашДолг");	
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.ТипРасчетов");
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.АвансовыйОтчет Тогда	
		МассивРеквизитовОперации = Новый Массив;
		МассивРеквизитовОперации.Добавить("Контрагент");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.Партнер");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.Заказ");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.КОплате");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.КОплатеВалюта");
		МассивРеквизитовОперации.Добавить("ТаблицаОстатковРасчетов.НашДолг");	
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура РассчитатьСуммуПлатежей()
	
	СуммаПлатежей = 0;
	Для Каждого СтрокаТаблицы Из ТаблицаОстатковРасчетов Цикл
		
		Если СтрокаТаблицы.Выбран Тогда
			СуммаПлатежей = СуммаПлатежей + СтрокаТаблицы.Сумма;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
