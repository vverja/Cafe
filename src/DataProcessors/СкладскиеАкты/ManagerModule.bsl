#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Акт об оприходовании товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ОприходованиеИзлишковТоваров";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ДокументСсылка.ОприходованиеИзлишковТоваров"));
	КомандаПечати.ТипыОбъектовПечати = МассивТипов;
	КомандаПечати.Идентификатор = "АктОбОприходованииТоваров";
	КомандаПечати.Представление = НСтр("ru='Акт об оприходовании товаров';uk='Акт про оприбуткування товарів'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

	// Задание на размещение товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьЗаданияНаОтборРазмещениеТоваров";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ДокументСсылка.ОприходованиеИзлишковТоваров"));
	КомандаПечати.ТипыОбъектовПечати = МассивТипов;
	КомандаПечати.Идентификатор = "ЗаданиеНаОтборРазмещениеТовара";
	КомандаПечати.Представление = НСтр("ru='Задание на размещение товаров';uk='Завдання на розміщення товарів'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ИмяФормы", "ЗаданиеНаРазмещение");
	КомандаПечати.ДополнительныеПараметры.Вставить("БезДопКолонки");
	
	// Акт о списании товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.СписаниеНедостачТоваров";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ДокументСсылка.СписаниеНедостачТоваров"));
	КомандаПечати.ТипыОбъектовПечати = МассивТипов;
	КомандаПечати.Идентификатор = "АктСписанияТоваров";
	КомандаПечати.Представление = НСтр("ru='Акт о списании товаров';uk='Акт про списання товарів'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;


	// Акт о порче товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктПорчиТоваров";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ДокументСсылка.ПорчаТоваров"));
	КомандаПечати.ТипыОбъектовПечати = МассивТипов;
	КомандаПечати.МенеджерПечати = "Документ.ПорчаТоваров";
	КомандаПечати.ФункциональныеОпции = "ИспользоватьКачествоТоваров";
	КомандаПечати.Представление = НСтр("ru='Акт о порче товаров';uk='Акт про псування товарів'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	// Акт о пересортице товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.ПересортицаТоваров";
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ДокументСсылка.ПересортицаТоваров"));
	КомандаПечати.ТипыОбъектовПечати = МассивТипов;
	КомандаПечати.Идентификатор = "АктПересортицыТоваров";
	КомандаПечати.Представление = НСтр("ru='Акт о пересортице товаров';uk='Акт про пересортицю товарів'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
	Если ПравоДоступа("Изменение", Метаданные.Документы.ИнвентаризационнаяОпись) Тогда
		
		// Инвентаризационная опись (М21)
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.МенеджерПечати = "Обработка.ПечатьМ21";
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("ДокументСсылка.ИнвентаризационнаяОпись"));
		КомандаПечати.ТипыОбъектовПечати = МассивТипов;
		КомандаПечати.Идентификатор = "М21";
		КомандаПечати.Представление = НСтр("ru='Инвентаризационная опись (М21)';uk='Інвентаризаційний опис (М21)'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ТекущиеДела

// Заполняет список текущих дел пользователя.
// Описание параметров процедуры см. в ТекущиеДелаСлужебный.НоваяТаблицаТекущихДел()
//
Процедура ПриЗаполненииСпискаТекущихДел(ТекущиеДела) Экспорт
	
	ИмяФормы = "Обработка.СкладскиеАкты.Форма.ФормаСписка";
	
	ОбщиеПараметрыЗапросов = ТекущиеДелаСлужебный.ОбщиеПараметрыЗапросов();
	
	// Определим доступны ли текущему пользователю показатели группы
	Доступность =
		(ОбщиеПараметрыЗапросов.ЭтоПолноправныйПользователь
			Или ПравоДоступа("Просмотр", Метаданные.Документы.СписаниеНедостачТоваров))
		И (ПравоДоступа("Добавление", Метаданные.Документы.СписаниеНедостачТоваров)
			ИЛИ ПравоДоступа("Добавление", Метаданные.Документы.ОприходованиеИзлишковТоваров)
			ИЛИ ПравоДоступа("Добавление", Метаданные.Документы.ПересортицаТоваров)
			ИЛИ ПравоДоступа("Добавление", Метаданные.Документы.ПорчаТоваров))
		И ПравоДоступа("Чтение", Метаданные.РегистрыНакопления.ТоварыКОформлениюИзлишковНедостач);
	
	Если НЕ Доступность Тогда
		Возврат;
	КонецЕсли;
	
	// Расчет показателей
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО(1) КАК ОснованияКОформлениюСкладскихАктов
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ТоварыКОформлениюИзлишковНедостачОстатки.Номенклатура КАК Номенклатура,
	|		ТоварыКОформлениюИзлишковНедостачОстатки.Характеристика КАК Характеристика
	|	ИЗ
	|		РегистрНакопления.ТоварыКОформлениюИзлишковНедостач.Остатки(, ) КАК ТоварыКОформлениюИзлишковНедостачОстатки
	|	ГДЕ
	|		ТоварыКОформлениюИзлишковНедостачОстатки.КОформлениюАктовОстаток <> 0) КАК ОстаткиКОформлению";
	
	Результат = ТекущиеДелаСлужебный.ЧисловыеПоказателиТекущихДел(Запрос, ОбщиеПараметрыЗапросов);
	
	// Заполнение дел.
	// ОформлениеСкладскихАктов
	ДелоРодитель = ТекущиеДела.Добавить();
	ДелоРодитель.Идентификатор  = "ОформлениеСкладскихАктов";
	ДелоРодитель.Представление  = НСтр("ru='Оформление складских актов';uk='Оформлення складських актів'");
	ДелоРодитель.ЕстьДела       = Результат.ОснованияКОформлениюСкладскихАктов > 0;
	ДелоРодитель.Владелец       = Метаданные.Подсистемы.Склад;
	
	// ОснованияКОформлениюСкладскихАктов
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ИмяТекущейСтраницы", "СтраницаОснования");
	
	Дело = ТекущиеДела.Добавить();
	Дело.Идентификатор  = "ОснованияКОформлениюСкладскихАктов";
	Дело.ЕстьДела       = Результат.ОснованияКОформлениюСкладскихАктов > 0;
	Дело.Представление  = НСтр("ru='Товары к оформлению';uk='Товари до оформлення'");
	Дело.Количество     = Результат.ОснованияКОформлениюСкладскихАктов;
	Дело.Важное         = Ложь;
	Дело.Форма          = ИмяФормы;
	Дело.ПараметрыФормы = ПараметрыФормы;
	Дело.Владелец       = "ОформлениеСкладскихАктов";
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
