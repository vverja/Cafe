#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
    
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
    
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
    
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
    
	ТекстыЗапроса = Новый СписокЗначений;
    ТекстЗапросаТаблицаНДСРасчетНалоговыхОбязательств(Запрос, ТекстыЗапроса, Регистры);
    ТекстЗапросаТаблицаКнигаДоходовРасходовПоЕдиномуНалогу(Запрос, ТекстыЗапроса, Регистры);
    ТекстЗапросаТаблицаРозничныеПродажиПодакцизныхТоваров(Запрос, ТекстыЗапроса, Регистры);
    
	////////////////////////////////////////////////////////////////////////////
	// Поместим результаты запроса в дополнительные свойства
                                                                                                                                 
    ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);    
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                            КАК Ссылка,
	|	ДанныеДокумента.Организация                       КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Партнеры.РозничныйПокупатель) КАК Партнер,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)     КАК Контрагент,
	|	ДанныеДокумента.КассаККМ.ТипКассы                 КАК ТипКассы,
	|	ДанныеДокумента.Дата                              КАК Период,
	|	ДанныеДокумента.Валюта                            КАК Валюта,
	|	ДанныеДокумента.Подразделение                     КАК Подразделение,
	|	ДанныеДокумента.Склад                             КАК Склад,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыПоставки.Розница)       КАК ВидПоставки,
	|	ДанныеДокумента.СтатьяДекларацииПоЕдиномуНалогу   КАК СтатьяДекларацииПоЕдиномуНалогу
	|ИЗ
	|	Документ.ОтчетОРозничнойВыручке КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Ссылка",                                   ДокументСсылка);
	Запрос.УстановитьПараметр("Склад",                                    Реквизиты.Склад);
	Запрос.УстановитьПараметр("Период",                                   Реквизиты.Период);
	Запрос.УстановитьПараметр("Валюта",                                   Реквизиты.Валюта);
	Запрос.УстановитьПараметр("Организация",                              Реквизиты.Организация);
	Запрос.УстановитьПараметр("Подразделение",                            Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("ОрганизацияПлательщикНДС",                 НДСОбщегоНазначенияСервер.ОрганизацияКонтрагентПлательщикНДС(Реквизиты.Организация, Реквизиты.Период));
	Запрос.УстановитьПараметр("ВидПоставки",                              Реквизиты.ВидПоставки);
	Запрос.УстановитьПараметр("МоментОпределенияБазыНДС",                 НДСИсходящийСервер.ОпределитьМоментОпределенияБазыНДС(Реквизиты.ВидПоставки, Перечисления.ХозяйственныеОперации.РеализацияВРозницу, Реквизиты.Валюта, Реквизиты.Организация));
	Запрос.УстановитьПараметр("ТипКассы",                                 Реквизиты.ТипКассы);
	Запрос.УстановитьПараметр("АналитикаУчетаПоПартнерамРозничная", РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(Новый Структура("Организация, Партнер, Контрагент, Договор, НаправлениеДеятельности", 
																					Реквизиты.Организация, Справочники.Партнеры.ПустаяСсылка(), Неопределено, Справочники.ДоговорыКонтрагентов.ПустаяСсылка(), Справочники.НаправленияДеятельности.ПустаяСсылка())));
	Запрос.УстановитьПараметр("СтатьяДекларацииПоЕдиномуНалогу",          Реквизиты.СтатьяДекларацииПоЕдиномуНалогу);

КонецПроцедуры

Функция ТекстЗапросаТаблицаНДСРасчетНалоговыхОбязательств(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "НДСРасчетНалоговыхОбязательств";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
    КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|
	|	&АналитикаУчетаПоПартнерамРозничная КАК АналитикаУчетаПоПартнерам,
	|	ОтчетОРозницеВыручка.СтавкаНДС КАК ОбъектРасчетов,
	|
	|	&ВидПоставки КАК ВидПоставки,
	|
	|	НЕОПРЕДЕЛЕНО КАК ДокументПоставки,
	|
	|	&МоментОпределенияБазыНДС КАК МоментОпределенияБазыНДС,
	|	&Валюта КАК Валюта,
	|
	|	СУММА(ВЫБОР 
	|			КОГДА ОтчетОРозницеВыручка.Возврат
	|				ТОГДА -(ОтчетОРозницеВыручка.Сумма - ОтчетОРозницеВыручка.СуммаАкцизногоНалога)
	|			ИНАЧЕ (ОтчетОРозницеВыручка.Сумма - ОтчетОРозницеВыручка.СуммаАкцизногоНалога)
	|		КОНЕЦ) КАК СуммаПоставкиТребующаяРегистрацииНН,
	|	0 КАК СуммаПоставкиНеТребующаяРегистрацииНН
	|ИЗ
	|	Документ.ОтчетОРозничнойВыручке.Выручка КАК ОтчетОРозницеВыручка
	|ГДЕ
	|	&ОрганизацияПлательщикНДС
	|	И ОтчетОРозницеВыручка.Ссылка = &Ссылка
	|	И ОтчетОРозницеВыручка.Сумма <> 0
	|	И &ТипКассы = ЗНАЧЕНИЕ(Перечисление.ТипыКассККМ.АвтономнаяККМ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОтчетОРозницеВыручка.СтавкаНДС
	|
	|";
	
    ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции


Функция ТекстЗапросаТаблицаКнигаДоходовРасходовПоЕдиномуНалогу(Запрос, ТекстыЗапроса, Регистры)
    
	ИмяРегистра = "КнигаДоходовРасходовПоЕдиномуНалогу";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
    КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&СтатьяДекларацииПоЕдиномуНалогу КАК Статья,
	|	&АналитикаУчетаПоПартнерамРозничная КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО КАК ЗаказКлиента,
	|	НЕОПРЕДЕЛЕНО КАК РасчетныйДокумент,
	|	&Валюта КАК Валюта,
	|	&Период КАК ДатаПлатежа,
	|	ВЫБОР КОГДА &СтатьяДекларацииПоЕдиномуНалогу <> ЗНАЧЕНИЕ(Справочник.СтатьиНалоговыхДеклараций.ЕННК_ДоходыВозвраты) ТОГДА
	|		ОтчетОРознице.СуммаПоЕдиномуНалогу
	|	ИНАЧЕ
	|		- ОтчетОРознице.СуммаПоЕдиномуНалогу
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	Документ.ОтчетОРозничнойВыручке КАК ОтчетОРознице
	|ГДЕ
	|	ОтчетОРознице.Ссылка = &Ссылка
	|	И &СтатьяДекларацииПоЕдиномуНалогу <> ЗНАЧЕНИЕ(Справочник.СтатьиНалоговыхДеклараций.ПустаяСсылка)
	|	И &СтатьяДекларацииПоЕдиномуНалогу <> ЗНАЧЕНИЕ(Справочник.СтатьиНалоговыхДеклараций.ЕННК_ДоходыДоходомНеПризнается)
	|	И ОтчетОРознице.СуммаПоЕдиномуНалогу <> 0
	|	
	|";
	
    ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРозничныеПродажиПодакцизныхТоваров(Запрос, ТекстыЗапроса, Регистры)
    
	ИмяРегистра = "РозничныеПродажиПодакцизныхТоваров";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
    КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Организация КАК Организация,
	|	&Склад КАК Склад,
	|	ВЫБОР КОГДА ОтчетОРозничнойВыручкеВыручка.Возврат ТОГДА
	|		-(ОтчетОРозничнойВыручкеВыручка.Сумма - ОтчетОРозничнойВыручкеВыручка.СуммаАкцизногоНалога)
	|	ИНАЧЕ
	|		ОтчетОРозничнойВыручкеВыручка.Сумма - ОтчетОРозничнойВыручкеВыручка.СуммаАкцизногоНалога
	|	КОНЕЦ КАК БазаАкцизногоНалога,
	|	ВЫБОР КОГДА ОтчетОРозничнойВыручкеВыручка.Возврат ТОГДА
	|		-ОтчетОРозничнойВыручкеВыручка.СуммаАкцизногоНалога
	|	ИНАЧЕ
	|		ОтчетОРозничнойВыручкеВыручка.СуммаАкцизногоНалога
	|	КОНЕЦ КАК СуммаАкцизногоНалога,
	|	ОтчетОРозничнойВыручкеВыручка.ПодакцизныеТоварыДляКоммерческогоИспользования КАК ДляКоммерческогоИспользования,
	|	ОтчетОРозничнойВыручкеВыручка.СтатьяДекларацииПоАкцизномуНалогу
	|ИЗ
	|	Документ.ОтчетОРозничнойВыручке.Выручка КАК ОтчетОРозничнойВыручкеВыручка
	|ГДЕ
	|	ОтчетОРозничнойВыручкеВыручка.Ссылка = &Ссылка
	|	И &ТипКассы = ЗНАЧЕНИЕ(Перечисление.ТипыКассККМ.АвтономнаяККМ)
	|	И ОтчетОРозничнойВыручкеВыручка.СтатьяДекларацииПоАкцизномуНалогу <> ЗНАЧЕНИЕ(Справочник.СтатьиНалоговыхДеклараций.ПустаяСсылка)
    |";
	
    ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	   
КонецФункции


#КонецОбласти

#Область СозданиеНаОсновании

Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);
	
	ВводНаОснованииПереопределяемый.ДобавитьКомандыСоздатьНаОснованииПисмаПоШаблону(КомандыСоздатьНаОсновании);
	
КонецПроцедуры

#КонецОбласти

#Область Отчеты

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);
	
	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#КонецОбласти

#КонецЕсли
