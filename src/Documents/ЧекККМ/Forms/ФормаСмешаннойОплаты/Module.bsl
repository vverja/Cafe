
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	РозничныеПродажи.ПодписатьГорячиеКлавишиНаКнопках(ЭтотОбъект);
	Дисплеи.ЗагрузитьЗначения(МенеджерОборудованияВызовСервера.ПолучитьСписокОборудования("ДисплейПокупателя"));
	
	КоличествоСимволовПослеЗапятой = 2;
	ПервыйВвод = Истина;
	
	ИнформацияОбОплате = Параметры.ИнформацияОбОплате;
	Документ = ИнформацияОбОплате.Документ;
	НастроитьВидимостьЭлементов(ИнформацияОбОплате);
	
	КОплате           = ИнформацияОбОплате.СуммаКОплате;
	ПолученоНаличными = Формат(ИнформацияОбОплате.Наличные, "ЧЦ=15; ЧДЦ=2; ЧГ=3,0");
	ОплаченоСертификатами = ИнформацияОбОплате.ПодарочныеСертификаты;
	ОплаченоБонуснымиБаллами = ИнформацияОбОплате.БонусныеБаллы;
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.ЧекККМВозврат")
		ИЛИ ТипЗнч(Документ) = Тип("ДокументСсылка.ВозвратПодарочныхСертификатов") Тогда
		ОплаченоПлатежнымиКартами = ИнформацияОбОплате.ПлатежныеКартыОтменено;
	Иначе
		ОплаченоПлатежнымиКартами = ИнформацияОбОплате.ПлатежныеКарты;
	КонецЕсли;
	
	РассчитатьИтоги(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("ВывестиИнформациюНаДисплейПокупателя", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ПринудительноЗакрытьФорму Тогда
		Возврат;
	КонецЕсли;
	
	Если ПривестиСтрокуКЧислу(ПолученоНаличными) <> 0
		ИЛИ ОплаченоПлатежнымиКартами <> 0
		ИЛИ ОплаченоСертификатами <> 0
		ИЛИ ОплаченоБонуснымиБаллами Тогда
		
		Отказ = Истина;
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить("ОтменитьОплату", НСтр("ru='Отменить оплату';uk='Скасувати оплату'"));
		Кнопки.Добавить("Отмена", НСтр("ru='Отмена';uk='Відмінити'"));
		
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ПередЗакрытиемВопросЗавершение", ЭтотОбъект),
			НСтр("ru='Перед закрытием формы оплаты требуется отменить произведенную оплату.';uk='Перед закриттям форми оплати потрібно скасувати проведену оплату.'"), Кнопки);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Команда0(Команда)
	
	ДобавитьЦифру("0")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда1(Команда)
	
	ДобавитьЦифру("1")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда2(Команда)
	
	ДобавитьЦифру("2")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда3(Команда)
	
	ДобавитьЦифру("3")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда4(Команда)
	
	ДобавитьЦифру("4")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда5(Команда)
	
	ДобавитьЦифру("5")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда6(Команда)
	
	ДобавитьЦифру("6")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда7(Команда)
	
	ДобавитьЦифру("7")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда8(Команда)
	
	ДобавитьЦифру("8")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда9(Команда)
	
	ДобавитьЦифру("9")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда0ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("0")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда1ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("1")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда2ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("2")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда3ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("3")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда4ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("4")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда5ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("5")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда6ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("6")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда7ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("7")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда8ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("8")
	
КонецПроцедуры

&НаКлиенте
Процедура Команда9ПраваяКлавиатура(Команда)
	
	ДобавитьЦифру("9")
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаТочка(Команда)
	
	Если ПервыйВвод Тогда
		ПолученоНаличными = "";
		ПервыйВвод = Ложь;
	КонецЕсли;
	
	Если ПолученоНаличными = "" Тогда
		ПолученоНаличными = "0";
	КонецЕсли;
	
	ЧислоВхождений = СтрЧислоВхождений(ПолученоНаличными, ",");
	
	Если Не ЧислоВхождений > 0 Тогда
		ПолученоНаличными = ПолученоНаличными + ",";
	КонецЕсли;
	
	РассчитатьИтоги(ЭтотОбъект);
	ПодключитьОбработчикОжидания("ВывестиИнформациюНаДисплейПокупателя", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСтереть(Команда)
	
	ПолученоНаличными = "";
	ПервыйВвод = Ложь;
	
	РассчитатьИтоги(ЭтотОбъект);
	ПодключитьОбработчикОжидания("ВывестиИнформациюНаДисплейПокупателя", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПробитьЧек(Команда)
	
	СуммаОплатыЧисло = ПривестиСтрокуКЧислу(ПолученоНаличными);
	
	ПринудительноЗакрытьФорму = Истина;
	Закрыть(СуммаОплатыЧисло);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	ПринудительноЗакрытьФорму = Истина;
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ОплатаПлатежнаяКарта(Команда)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ОповещениеВФормуОплаты", Новый ОписаниеОповещения("ОплатаЗавершение", ЭтотОбъект));
	ДополнительныеПараметры.Вставить("ПолученоНаличными", ПривестиСтрокуКЧислу(ПолученоНаличными));
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.ЧекККМ")
		ИЛИ ТипЗнч(Документ) = Тип("ДокументСсылка.РеализацияПодарочныхСертификатов") Тогда
		ВыполнитьОбработкуОповещения(
			Новый ОписаниеОповещения("ДобавитьОплатуКартой", ВладелецФормы, ДополнительныеПараметры));
	Иначе
		ВыполнитьОбработкуОповещения(
			Новый ОписаниеОповещения("ОтменитьОплату", ВладелецФормы, ДополнительныеПараметры));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОплатаПодарочныйСертификат(Команда)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ОповещениеВФормуОплаты", Новый ОписаниеОповещения("ОплатаЗавершение", ЭтотОбъект));
	ДополнительныеПараметры.Вставить("ПолученоНаличными", ПривестиСтрокуКЧислу(ПолученоНаличными));
	
	ВыполнитьОбработкуОповещения(
		Новый ОписаниеОповещения("ДобавитьОплатуПодарочнымСертификатом", ВладелецФормы, ДополнительныеПараметры),
		Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОплатаБонусныеБаллы(Команда)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ОповещениеВФормуОплаты", Новый ОписаниеОповещения("ОплатаЗавершение", ЭтотОбъект));
	ДополнительныеПараметры.Вставить("ПолученоНаличными", ПривестиСтрокуКЧислу(ПолученоНаличными));
	
	ВыполнитьОбработкуОповещения(
		Новый ОписаниеОповещения("ДобавитьОплатуБонуснымиБаллами", ВладелецФормы, ДополнительныеПараметры),
		Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСторно(Команда)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ОповещениеВФормуОплаты", Новый ОписаниеОповещения("ОплатаЗавершение", ЭтотОбъект));
	ДополнительныеПараметры.Вставить("ПолученоНаличными", ПривестиСтрокуКЧислу(ПолученоНаличными));
	
	ВыполнитьОбработкуОповещения(
		Новый ОписаниеОповещения("ОтменитьОплатыПлатежнымиКартами", ВладелецФормы, ДополнительныеПараметры),
		Истина);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДобавитьЦифру(ВведеннаяЦифраСтрокой)
	
	Если ПервыйВвод Тогда
		Если ВведеннаяЦифраСтрокой = "0" Тогда
			Возврат;
		КонецЕсли;
		ПолученоНаличными = "";
		ПервыйВвод = Ложь;
	КонецЕсли;
	
	Запятая = Сред(ПолученоНаличными, СтрДлина(ПолученоНаличными) - КоличествоСимволовПослеЗапятой, 1);
	
	Если НЕ Запятая = "," Тогда
		ПолученоНаличными = ПолученоНаличными + ВведеннаяЦифраСтрокой;
	КонецЕсли;
	
	РассчитатьИтоги(ЭтотОбъект);
	ПодключитьОбработчикОжидания("ВывестиИнформациюНаДисплейПокупателя", 0.1, Истина);
	
КонецПроцедуры

// Функция выполняет приведение строки к числу.
// Параметры:
//  ЧислоСтрокой           - Строка - Строка приводимая к числу.
//  ВозвращатьНеопределено - Булево - Если Истина и строка содержит некорректное значение, то возвращать Неопределено.
//
// Возвращаемое значение:
//  Число
//
&НаКлиентеНаСервереБезКонтекста
Функция ПривестиСтрокуКЧислу(ЧислоСтрокой)
	
	ОписаниеТипаЧисла = Новый ОписаниеТипов("Число");
	ЗначениеЧисла = ОписаниеТипаЧисла.ПривестиЗначение(ЧислоСтрокой);
	
	Возврат ЗначениеЧисла;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура РассчитатьИтоги(Форма)
	
	Форма.СуммаОплаты = ПривестиСтрокуКЧислу(Форма.ПолученоНаличными)
	                  + Форма.ОплаченоБонуснымиБаллами
	                  + Форма.ОплаченоПлатежнымиКартами
	                  + Форма.ОплаченоСертификатами;
	
	Если Форма.СуммаОплаты >= Форма.КОплате Тогда
		
		Форма.СуммаСдачи   = Форма.СуммаОплаты - Форма.КОплате;
		Форма.СуммаДоплаты = 0;
		
		Форма.Элементы.ГруппаИтого.ТекущаяСтраница = Форма.Элементы.ГруппаСдача;
		Форма.Элементы.КомандаПробитьЧек.Доступность = Истина;
		
		Форма.ТекущийЭлемент = Форма.Элементы.КомандаПробитьЧек;
		
	Иначе
		
		Форма.СуммаСдачи   = 0;
		Форма.СуммаДоплаты = Форма.КОплате - Форма.СуммаОплаты;
		
		Форма.Элементы.ГруппаИтого.ТекущаяСтраница = Форма.Элементы.ГруппаДоплата;
		Форма.Элементы.КомандаПробитьЧек.Доступность = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОплатаЗавершение(ИнформацияОбОплате, ДополнительныеПараметры) Экспорт
	
	КОплате = ИнформацияОбОплате.СуммаКОплате;
	
	ПолученоНаличными = ИнформацияОбОплате.Наличные;
	
	ОплаченоСертификатами = ИнформацияОбОплате.ПодарочныеСертификаты;
	ОплаченоБонуснымиБаллами = ИнформацияОбОплате.БонусныеБаллы;
	
	Если ТипЗнч(ИнформацияОбОплате.Документ) = Тип("ДокументСсылка.ЧекККМВозврат")
		ИЛИ ТипЗнч(ИнформацияОбОплате.Документ) = Тип("ДокументСсылка.ВозвратПодарочныхСертификатов") Тогда
		ОплаченоПлатежнымиКартами = ИнформацияОбОплате.ПлатежныеКартыОтменено;
	Иначе
		ОплаченоПлатежнымиКартами = ИнформацияОбОплате.ПлатежныеКарты;
	КонецЕсли;
	
	РассчитатьИтоги(ЭтотОбъект);
	ПодключитьОбработчикОжидания("ВывестиИнформациюНаДисплейПокупателя", 0.1, Истина);
	
	Если ПринудительноЗакрытьФормуПриУспешнойОтменеОплаты Тогда
		
		Если ИнформацияОбОплате.ИтогоОплачено = 0 Тогда
			ПринудительноЗакрытьФорму = Истина;
			Закрыть();
		Иначе
			ПринудительноЗакрытьФормуПриУспешнойОтменеОплаты = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемВопросЗавершение(ОтветНаВопрос, ДополнительныеПараметры) Экспорт
	
	Если ОтветНаВопрос = "ОтменитьОплату" Тогда
		
		ПринудительноЗакрытьФормуПриУспешнойОтменеОплаты = Истина;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ОповещениеВФормуОплаты", Новый ОписаниеОповещения("ОплатаЗавершение", ЭтотОбъект));
		ДополнительныеПараметры.Вставить("ПолученоНаличными", ПривестиСтрокуКЧислу(ПолученоНаличными));
		
		Если ТипЗнч(Документ) = Тип("ДокументСсылка.ЧекККМВозврат")
			ИЛИ ТипЗнч(Документ) = Тип("ДокументСсылка.ВозвратПодарочныхСертификатов") Тогда
			ВыполнитьОбработкуОповещения(
				Новый ОписаниеОповещения("ОтменитьОплатуСторно", ВладелецФормы, ДополнительныеПараметры));
		Иначе
			ВыполнитьОбработкуОповещения(
				Новый ОписаниеОповещения("ОтменитьОплату", ВладелецФормы, ДополнительныеПараметры));
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьВидимостьЭлементов(ИнформацияОбОплате)
	
	ДоступныеВидыОплаты = ИнформацияОбОплате.ДоступныеВидыОплаты;
	
	Элементы.ПолеОплаченоПлатежнымиКартами.Видимость = ДоступныеВидыОплаты.ПлатежныеКарты;
	Элементы.ОплатаПлатежнаяКарта.Видимость          = ДоступныеВидыОплаты.ПлатежныеКарты;
	Элементы.КомандаСторно.Видимость                 = ДоступныеВидыОплаты.ПлатежныеКарты;
	
	Элементы.ПолеОплаченоСертификатами.Видимость     = ДоступныеВидыОплаты.ПодарочныеСертификаты;
	Элементы.ОплатаПодарочныйСертификат.Видимость    = ДоступныеВидыОплаты.ПодарочныеСертификаты;
	
	Элементы.ПолеОплаченоБонуснымиБаллами.Видимость  = ДоступныеВидыОплаты.БонусныеБаллы;
	Элементы.ОплатаБонусныеБаллы.Видимость           = ДоступныеВидыОплаты.БонусныеБаллы;
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.ЧекККМВозврат")
		ИЛИ ТипЗнч(Документ) = Тип("ДокументСсылка.ВозвратПодарочныхСертификатов") Тогда
		
		Заголовок = НСтр("ru='Возврат смешанной оплаты';uk='Повернення змішаної оплати'");
		
		Элементы.КОплате.Заголовок                    = НСтр("ru='К возврату';uk='До повернення'");
		Элементы.ОплатаПлатежнаяКарта.Заголовок       = НСтр("ru='Отменить оплату платежными картами';uk='Скасувати оплату платіжними картками'");
		Элементы.ОплатаПодарочныйСертификат.Заголовок = НСтр("ru='Вернуть оплату подарочным сертификатом';uk='Повернути оплату подарунковим сертифікатом'");
		Элементы.ОплатаБонусныеБаллы.Заголовок        = НСтр("ru='Отменить оплату бонусными баллами';uk='Скасувати оплату бонусними балами'");
		
		Элементы.СуммаСдачи.Заголовок   = НСтр("ru='Получить сдачу';uk='Отримати здачу'");
		Элементы.СуммаДоплаты.Заголовок = НСтр("ru='Осталось вернуть';uk='Залишилося повернути'");
		
		Элементы.КомандаСторно.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиИнформациюНаДисплейПокупателя()
	
	Если Не ВводДоступен() Тогда
		Возврат;
	КонецЕсли;
	
	Дисплей = Неопределено;
	ФорматнаяСтрока = "ЧДЦ=2; ЧРГ=' '; ЧН=0.00; ЧГ=0";
	ДлинаТекста = 20;
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.ЧекККМ")
		ИЛИ ТипЗнч(Документ) = Тип("ДокументСсылка.РеализацияПодарочныхСертификатов") Тогда
		ТекстКОплате = НСтр("ru='К оплате';uk='До оплати'")  + ":";
		ТекстСдача   = НСтр("ru='Сдача';uk='Здача'")     + ":";
		ТекстДоплата = НСтр("ru='Доплатить';uk='Доплатити'") + ":";
	Иначе
		ТекстКОплате = НСтр("ru='К возврату';uk='До повернення'") + ":";
		ТекстСдача   = НСтр("ru='Сдача';uk='Здача'")      + ":";
		ТекстДоплата = НСтр("ru='Вернуть';uk='Повернути'")    + ":";
	КонецЕсли;
	
	ДПТекст1 = РозничныеПродажиКлиент.ПодготовитьСтрокуКВыводуНаДисплейПокупателя(ТекстКОплате, КОплате);
	
	Если СуммаДоплаты > 0 Тогда
		ДПТекст2 = РозничныеПродажиКлиент.ПодготовитьСтрокуКВыводуНаДисплейПокупателя(ТекстДоплата, СуммаДоплаты);
	ИначеЕсли СуммаСдачи > 0 Тогда
		ДПТекст2 = РозничныеПродажиКлиент.ПодготовитьСтрокуКВыводуНаДисплейПокупателя(ТекстСдача, СуммаСдачи);
	Иначе
		ДПТекст2 = "";
	КонецЕсли;
	
	Для каждого ЭлементСписка Из Дисплеи Цикл
		
		Дисплей = ЭлементСписка.Значение;
		
		Если Не МенеджерОборудованияКлиентПереопределяемый.ОборудованиеПодключено(Дисплей.Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		// Очистка
		ВходныеПараметры  = Новый Массив();
		ВыходныеПараметры = Неопределено;
		
		Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(
			Дисплей.Ссылка,
			"ClearText",
			ВходныеПараметры,
			ВыходныеПараметры);
		
		Пока СтрДлина(ДПТекст1) < ДлинаТекста Цикл
			ДПТекст1 = ДПТекст1 + " ";
		КонецЦикла;
		
		Пока СтрДлина(ДПТекст2) < ДлинаТекста Цикл
			ДПТекст2 = ДПТекст2 + " ";
		КонецЦикла;
		
		// Подготовка данных
		ВходныеПараметры  = Новый Массив();
		ВыходныеПараметры = Неопределено;
		
		ВходныеПараметры.Добавить(ДПТекст1 + Символы.ПС + ДПТекст2);
		
		Результат = МенеджерОборудованияКлиент.ВыполнитьКоманду(
			Дисплей.Ссылка,
			"DisplayText",
			ВходныеПараметры,
			ВыходныеПараметры);
		
		Если Не Результат Тогда
			ТекстСообщения = НСтр("ru='При использовании дисплея покупателя произошла ошибка.
                |Дополнительное описание:
                |%ДополнительноеОписание%'
                |;uk='При використанні дисплея покупця сталася помилка.
                |Додатковий опис:
                |%ДополнительноеОписание%'");
			ТекстСообщения = СтрЗаменить(
				ТекстСообщения,
				"%ДополнительноеОписание%",
				ВыходныеПараметры[1]);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти