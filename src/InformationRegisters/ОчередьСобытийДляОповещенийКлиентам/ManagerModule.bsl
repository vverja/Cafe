
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

// Выполняет запись в регистр.
//
// Параметры:
//  ВидОповещения  - СправочникСсылка.ВидыОповещенийКлиентам - вид оповещения.
//  Подписчик  - СправочникСсылка.Партнеры - подписчик оповещения.
//  ИсточникОповещения  - Произвольный - источник оповещения.
//  ДатаОтправки  - Дата - Дата, в которую должно отправиться оповещение.
//  ДатаОтправки  - Дата - Дата, до которой имеет смысл отправлять оповещение.
//
Процедура ВыполнитьЗаписьВРегистр(ВидОповещения, 
	                              Подписчик, 
	                              ИсточникОповещения, 
	                              ДатаОтправки, 
	                              ДатаАктуальностиОтправки) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	Запись = РегистрыСведений.ОчередьСобытийДляОповещенийКлиентам.СоздатьМенеджерЗаписи();
	Запись.Период                   = ТекущаяДатаСеанса();
	Запись.ВидОповещения            = ВидОповещения;
	Запись.Подписчик                = Подписчик;
	Запись.ИсточникОповещения       = ИсточникОповещения;
	Запись.ДатаОтправки             = ДатаОтправки;
	Запись.ДатаАктуальностиОтправки = ДатаАктуальностиОтправки;
	
	Запись.Записать(Истина);

КонецПроцедуры

// Удаляет записи из очереди по виду оповещения ранее даты отработки.
//
// Параметры:
//  ВидОповещения  - СправочникСсылка.ВидыОповещенийКлиентам - вид оповещения, события по которому должны быть удалены.
//  ДатаУдаления  - Дата - Дата, ранее которой удаляются оповещения из очереди.
//
Процедура УдалитьЗаписиПоВидуОповещенияИзОчереди(ВидОповещения, ДатаУдаления) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ОчередьСобытийДляОповещенийКлиентам.Период,
	|	ОчередьСобытийДляОповещенийКлиентам.ВидОповещения,
	|	ОчередьСобытийДляОповещенийКлиентам.ИсточникОповещения
	|ИЗ
	|	РегистрСведений.ОчередьСобытийДляОповещенийКлиентам КАК ОчередьСобытийДляОповещенийКлиентам
	|ГДЕ
	|	ОчередьСобытийДляОповещенийКлиентам.ВидОповещения = &ВидОповещения
	|	И ОчередьСобытийДляОповещенийКлиентам.Период <= &ДатаУдаления";
	
	Запрос.УстановитьПараметр("ВидОповещения", ВидОповещения);
	Запрос.УстановитьПараметр("ДатаУдаления", ДатаУдаления);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НаборЗаписей = РегистрыСведений.ОчередьСобытийДляОповещенийКлиентам.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Период.Установить(Выборка.Период);
		НаборЗаписей.Отбор.ВидОповещения.Установить(Выборка.ВидОповещения);
		НаборЗаписей.Отбор.ИсточникОповещения.Установить(Выборка.ИсточникОповещения);
		НаборЗаписей.Записать(Истина);
	КонецЦикла;
	
КонецПроцедуры
#КонецЕсли