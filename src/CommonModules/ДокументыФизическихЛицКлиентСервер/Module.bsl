////////////////////////////////////////////////////////////////////////////////
// Подсистема "Физические лица".
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возвращает тип серии документа удостоверяющего личность.
//
// Параметры:
//	ВидДокумента - Справочник.ВидыДокументовФизическихЛиц
//
// Возвращаемое значение:
//	Число	- тип серии для документа, 0 - требований к серии нет.
//
Функция ТипСерииДокументаУдостоверяющегоЛичность(ВидДокумента) Экспорт
	
	ТипДокумента = 0;
	
 	Если ВидДокумента = ПредопределенноеЗначение("Справочник.ВидыДокументовФизическихЛиц.СвидетельствоОРождении") Тогда
		ТипДокумента = 1;
		
	ИначеЕсли ВидДокумента = ПредопределенноеЗначение("Справочник.ВидыДокументовФизическихЛиц.ВоенныйБилет")
		Или ВидДокумента = ПредопределенноеЗначение("Справочник.ВидыДокументовФизическихЛиц.Паспорт") Тогда
		ТипДокумента = 2;
		
	ИначеЕсли ВидДокумента = ПредопределенноеЗначение("Справочник.ВидыДокументовФизическихЛиц.ПаспортМоряка")
		Или ВидДокумента = ПредопределенноеЗначение("Справочник.ВидыДокументовФизическихЛиц.ДипломатическийПаспорт")
		Или ВидДокумента = ПредопределенноеЗначение("Справочник.ВидыДокументовФизическихЛиц.Загранпаспорт")  Тогда
		
		ТипДокумента = 3;
	
	КонецЕсли;
	
	Возврат ТипДокумента;
	
КонецФункции

// Возвращает тип номера документа удостоверяющего личность.
//
// Параметры:
//	ВидДокумента - Справочник.ВидыДокументовФизическихЛиц
//
// Возвращаемое значение:
//	Число	- тип номера для документа, 0 - требований к номеру нет.
//
Функция ТипНомераДокументаУдостоверяющегоЛичность(ВидДокумента) Экспорт
	
	ТипДокумента = 0;
	
    Если ВидДокумента = ПредопределенноеЗначение("Справочник.ВидыДокументовФизическихЛиц.СвидетельствоОРождении")
		ИЛИ ВидДокумента = ПредопределенноеЗначение("Справочник.ВидыДокументовФизическихЛиц.ДипломатическийПаспорт")
		ИЛИ ВидДокумента = ПредопределенноеЗначение("Справочник.ВидыДокументовФизическихЛиц.Загранпаспорт") Тогда
		ТипДокумента = 1;
		
	ИначеЕсли ВидДокумента = ПредопределенноеЗначение("Справочник.ВидыДокументовФизическихЛиц.ПаспортМоряка") 
		ИЛИ ВидДокумента = ПредопределенноеЗначение("Справочник.ВидыДокументовФизическихЛиц.ВоенныйБилет") ТОГДА

		ТипДокумента = 3;
		
	ИначеЕсли ВидДокумента = ПредопределенноеЗначение("Справочник.ВидыДокументовФизическихЛиц.Паспорт") Тогда
		ТипДокумента = 4;
		
	КонецЕсли;
	
	
	Возврат ТипДокумента;
	
КонецФункции

// Проверяет, что серия документа для переданного вида документа указана правильно.
//
// Параметры:
//	ВидДокумента - СправочникСсылка.ВидыДокументовФизическихЛиц	- вид документа, для которого необходимо
//																проверить правильность серии.
//	Серия - Строка												- серия документа.
//	ТекстОшибки - Строка										- текст ошибки, если серия указана неправильно.
//
// Возвращаемое значение:
//	Булево - результат проверки, Истина - правильно, Ложь - нет.
//
Функция СерияДокументаУказанаПравильно(ВидДокумента, Знач Серия , ТекстОшибки) Экспорт
	
	ТипДокумента = ТипСерииДокументаУдостоверяющегоЛичность(ВидДокумента);
	
	Серия = СокрЛП(Серия);
	
	Если ТипДокумента = 1 Тогда // Свидетельство о рождении.
		
		Поз = СтрНайти(Серия, "-");
		Если Поз = 0 Тогда
			ТекстОшибки = НСтр("ru='Серия документа должна состоять из двух частей, разделенных символом ""-"".';uk='Серія документа повинна складатися із двох частин, розділених символом ""-"".'");
			Возврат Ложь;
		КонецЕсли;
		
		ЧастьСерии1 = Лев(Серия, Поз - 1);
		ЧастьСерии2 = СокрЛП(Сред(Серия, Поз + 1));
		
		Поз = СтрНайти(ЧастьСерии2, "-");
		Если Поз <> 0 Тогда
			ТекстОшибки = НСтр("ru='В серии документа должно быть только две группы символов.';uk='У серії документа повинне бути тільки дві групи символів.'");
			Возврат Ложь;
		КонецЕсли;
		
		Если ПустаяСтрока(ЧастьСерии1) Тогда
			ТекстОшибки = НСтр("ru='В серии документа отсутствует числовая часть.';uk='У серії документа відсутня числова частина.'");
			Возврат Ложь;
			
		ИначеЕсли  ПустаяСтрока(СтроковыеФункцииКлиентСервер.ЗаменитьОдниСимволыДругими("IVXLC1УХЛС", ЧастьСерии1, "          ")) = 0 Тогда
			ТекстОшибки = НСтр("ru='Числовая часть серии документа должна указываться символами 1 У Х Л С  или  I V X L C.';uk='Числова частина серії документа повинна вказуватися символами 1 У Х Л С  або  I V X L C.'");
			Возврат Ложь;
			
		ИначеЕсли СтроковыеФункцииКлиентСервер.ЗаменитьОдниСимволыДругими("IVXLC", ЧастьСерии1, "1УХЛС") <> СтроковыеФункцииКлиентСервер.ПреобразоватьЧислоВРимскуюНотацию(СтроковыеФункцииКлиентСервер.ПреобразоватьЧислоВАрабскуюНотацию(СтроковыеФункцииКлиентСервер.ЗаменитьОдниСимволыДругими("IVXLC", ЧастьСерии1, "1УХЛС"))) Тогда
			ТекстОшибки = НСтр("ru='Числовая часть серии документа указана некорректно.';uk='Числова частина серії документа зазначена некоректно.'");
			Возврат Ложь;
			
		ИначеЕсли СтрДлина(ЧастьСерии2) <> 2 Или Не ПустаяСтрока(СтроковыеФункцииКлиентСервер.ЗаменитьОдниСимволыДругими("АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ", ЧастьСерии2, "                                 ")) Тогда
			ТекстОшибки = НСтр("ru='После разделителя ""-"" в серии документа должны быть ДВЕ русские заглавные буквы.';uk='Після роздільника ""-"" в серії документа повинні бути ДВІ російські великі літери.'");
			Возврат Ложь;
			
		КонецЕсли;
		
	ИначеЕсли ТипДокумента = 2 Тогда // Серия - две буквы: военный билет, различные паспорта	
		Если СтрДлина(Серия) = 0 Тогда
	         // у ID карточки нет серии 
		ИначеЕсли СтрДлина(Серия) <> 2 Или Не ПустаяСтрока(СтроковыеФункцииКлиентСервер.ЗаменитьОдниСимволыДругими("АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯІЇЄ", Серия, "                                 ")) Тогда
			ТекстОшибки = НСтр("ru='В серии документа должны быть ДВЕ украинские заглавные буквы.';uk='У серії документа повинні бути ДВІ українські великі літери.'");
			Возврат Ложь;
		КонецЕсли;

	ИначеЕсли ТипДокумента = 3 Тогда // Серия - две латинские буквы: загран паспорта
 		Если СтрДлина(Серия) <> 2 Или Не ПустаяСтрока(СтроковыеФункцииКлиентСервер.ЗаменитьОдниСимволыДругими("ABCDEFGHIJKLMNOPQRSTUVWXYZ", Серия, "                                 ")) Тогда
			ТекстОшибки = НСтр("ru='В серии документа должны быть ДВЕ латинские заглавные буквы.';uk='У серії документа повинні бути ДВІ латинські заголовні літери.'");
			Возврат Ложь;
		КонецЕсли;
		
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

// Проверяет, что номер документа для переданного вида документа указан правильно.
//
// Параметры:
//	ВидДокумента - СправочникСсылка.ВидыДокументовФизическихЛиц	- вид документа, для которого необходимо
//																проверить правильность номера.
//	Номер - Строка												- номер документа.
//	ТекстОшибки - Строка										- текст ошибки, если номер указан неправильно.
//
// Возвращаемое значение:
//	Булево - результат проверки, Истина - правильно, Ложь - нет.
//
Функция НомерДокументаУказанПравильно(ВидДокумента, Знач Номер, ТекстОшибки) Экспорт
	
	Если Не ПустаяСтрока(СтроковыеФункцииКлиентСервер.ЗаменитьОдниСимволыДругими("0123456789", Номер, "          ")) Тогда
		ТекстОшибки = НСтр("ru='В номере документа присутствуют недопустимые символы.';uk='У номері документа присутні неприпустимі символи.'");
		Возврат Ложь;
	КонецЕсли;
	
	ТипДокумента = ТипНомераДокументаУдостоверяющегоЛичность(ВидДокумента);
	
	ДлинаНомера = СтрДлина(СокрЛП(Номер));
	
	Если ТипДокумента = 1 Тогда
		Если ДлинаНомера <> 6 Тогда
			ТекстОшибки = НСтр("ru='Номер документа должен состоять из 6 символов.';uk='Номер документа повинен складатися з 6 символів.'");
			Возврат Ложь;
		КонецЕсли;
		
	ИначеЕсли ТипДокумента = 2 Тогда
		Если ДлинаНомера <> 7 Тогда
			ТекстОшибки = НСтр("ru='Номер документа должен состоять из 7 символов.';uk='Номер документа повинен складатися з 7 символів.'");
			Возврат Ложь;
		КонецЕсли;
		
	ИначеЕсли ТипДокумента = 3 Тогда
		Если (ДлинаНомера < 6 ) Или ( ДлинаНомера > 7 ) Тогда
			ТекстОшибки = НСтр("ru='Номер документа должен состоять из 6 или 7 символов.';uk='Номер документа повинен складатися з 6 або 7 символів.'");
			Возврат Ложь;
		КонецЕсли;
		
	ИначеЕсли ТипДокумента = 4 Тогда
		Если НЕ ((ДлинаНомера  = 6 ) Или ( ДлинаНомера = 9 )) Тогда
			ТекстОшибки = НСтр("ru='Номер документа должен состоять из 6 или 9 символов.';uk='Номер документу повинен складатися з 6 або 9 символів.'");
			Возврат Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти
