////////////////////////////////////////////////////////////////////////////////
// МОДУЛЬ СОДЕРЖИТ ПРОЦЕДУРЫ И ФУНКЦИИ РЕГИСТРАЦИИ ОБЪЕКТОВ ОБМЕНА С МОБИЛЬНЫМ ПРИЛОЖЕНИЕМ "ЗАКАЗЫ"
// - регистрация объектов в узлах обмена
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Обработчик подписки на событие "ПередЗаписью" справочника.
//
Процедура ЗарегистрироватьИзмененияСправочникаПередЗаписьюДляОбменаСМобильнымПриложениемЗаказы (Источник, Отказ) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьМобильноеПриложение1СЗаказы") Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	ЗарегистрироватьКартинкуНоменклатуры = Ложь;
	Если ЗначениеЗаполнено(Источник.ФайлКартинки) Тогда
		Если Источник.ЭтоНовый() Тогда
			ЗарегистрироватьКартинкуНоменклатуры = Истина;
		Иначе
			СтарыйФайлКартинки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Источник.Ссылка, "ФайлКартинки");
			Если НЕ Источник.ФайлКартинки = СтарыйФайлКартинки Тогда
				ЗарегистрироватьКартинкуНоменклатуры = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если ЗарегистрироватьКартинкуНоменклатуры Тогда
		ЗарегистрироватьИзменения(Источник.ФайлКартинки, Ложь);
	КонецЕсли;
КонецПроцедуры

// Обработчик подписки на событие "ПриЗаписи" справочника.
//
Процедура ЗарегистрироватьИзмененияПриЗаписиСправочникаДляОбменаСЗаказамиКлиентов(Источник, Отказ) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьМобильноеПриложение1СЗаказы") Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ЗарегистрироватьИзменения(Источник);
КонецПроцедуры

// Обработчик подписки на событие "ПриЗаписиЗадания".
//
Процедура ЗарегистрироватьИзмененияПриЗаписиЗаданияДляОбменаСЗаказамиКлиентов(Источник, Отказ) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьМобильноеПриложение1СЗаказы") Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ЗаказКлиента") Тогда
		Если ТипЗнч(Источник.ДокументОснование) 
			= Тип("ДокументСсылка.ЗаданиеТорговомуПредставителю") Тогда		
			Источник = Источник.ДокументОснование.ПолучитьОбъект();
			МассивУзлов = ПолучитьМассивУзловДляРегистрацииЗаданий(Источник.ТорговыйПредставитель);
			ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов, Источник);
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	НеРегистрироватьИзменения = Ложь;
	Если Источник.ДополнительныеСвойства.Свойство("НеРегистрироватьИзменения", НеРегистрироватьИзменения) Тогда
		Если НеРегистрироватьИзменения Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если Источник.Статус = Перечисления.СтатусыЗаданийТорговымПредставителям.КОтработке Тогда
		МассивУзлов = ПолучитьМассивУзловДляРегистрацииЗаданий(Источник.ТорговыйПредставитель);
		ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов, Источник);
	КонецЕсли;
КонецПроцедуры

// Обработчик подписки на событие "ПередЗаписьюРегистраСведений".
//
Процедура ЗарегистрироватьИзмененияРегистраСведенийДляОбменаСМобильнымПриложениемЗаказыКлиентовПередЗаписью(Источник, Отказ, Замещение) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьМобильноеПриложение1СЗаказы") Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ЗарегистрироватьИзменения(Источник);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗарегистрироватьИзменения(Объект, ЭтоОбъект = Истина)
	
	УстановитьПривилегированныйРежим(Истина);
	
	МассивИсключенийУзлов = Новый Массив;
	МассивИсключенийУзлов.Добавить(ПланыОбмена.МобильноеПриложениеЗаказыКлиентов.ЭтотУзел());
	
	Если ЭтоОбъект И Объект.ОбменДанными.Загрузка Тогда
		МассивИсключенийУзлов.Добавить(Объект.ОбменДанными.Отправитель);
	КонецЕсли;
	
	МассивУзлов = ПолучитьМассивУзловДляРегистрации(МассивИсключенийУзлов);
	
	МобильноеПриложениеЗаказыКлиентовПереопределяемый.ЗарегистрироватьИзмененияДляУзловОбмена(МассивУзлов, Объект);
КонецПроцедуры

// Возвращает массив узлов плана обмена с учетом исключаемых.
//
// Параметры:
//  МассивИсключенийУзлов - Массив - массив узлов, для которых регистрацию изменений проводить не надо.
//
// Возвращаемое значение:
//  Массив - массив узлов для регистрации изменений.
//
Функция ПолучитьМассивУзловДляРегистрации(МассивИсключенийУзлов)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	МобильноеПриложениеЗаказыКлиентов.Ссылка
	|ИЗ
	|	ПланОбмена.МобильноеПриложениеЗаказыКлиентов КАК МобильноеПриложениеЗаказыКлиентов
	|ГДЕ
	|	НЕ МобильноеПриложениеЗаказыКлиентов.ПометкаУдаления
	|	И НЕ МобильноеПриложениеЗаказыКлиентов.Ссылка В (&МассивИсключений)");
	
	Запрос.УстановитьПараметр("МассивИсключений", МассивИсключенийУзлов);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
КонецФункции

// Возвращает массив узлов плана обмена с учетом исключаемых.
//
// Параметры:
//  МассивИсключенийУзлов - Массив - массив узлов, для которых регистрацию изменений проводить не надо.
//
// Возвращаемое значение:
//  Массив - массив узлов для регистрации изменений.
//
Функция ПолучитьМассивУзловДляРегистрацииЗаданий(ТорговыйПредставитель)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	МобильноеПриложениеЗаказыКлиентов.Ссылка
	|ИЗ
	|	ПланОбмена.МобильноеПриложениеЗаказыКлиентов КАК МобильноеПриложениеЗаказыКлиентов
	|ГДЕ
	|	НЕ МобильноеПриложениеЗаказыКлиентов.ПометкаУдаления
	|	И МобильноеПриложениеЗаказыКлиентов.Пользователь = &ТорговыйПредставитель");
	
	Запрос.УстановитьПараметр("ТорговыйПредставитель", ТорговыйПредставитель);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
КонецФункции

#КонецОбласти
