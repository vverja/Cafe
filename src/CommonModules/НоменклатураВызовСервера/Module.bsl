
#Область СлужебныеПроцедурыИФункции

// Серверный обработчик события ОбработкаПолученияДанныхВыбора справочника СерииНоменклатуры.
//
Процедура СерииНоменклатурыОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	Если Параметры.Свойство("ВидНоменклатуры") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 50
		|	СерииНоменклатуры.Ссылка КАК Серия,
		|	СерииНоменклатуры.Наименование,
		|	СерииНоменклатуры.ГоденДо КАК ГоденДо,
		|	СерииНоменклатуры.Номер КАК Номер
		|ИЗ
		|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
		|ГДЕ
		|	СерииНоменклатуры.ВидНоменклатуры = &ВидНоменклатуры
		|	И ВЫБОР
		|			КОГДА СерииНоменклатуры.ВидНоменклатуры.ИспользоватьНомерСерии
		|				ТОГДА &НомерНеУказан
		|						ИЛИ СерииНоменклатуры.Номер ПОДОБНО &Номер
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|	И ВЫБОР
		|			КОГДА СерииНоменклатуры.ВидНоменклатуры.ИспользоватьСрокГодностиСерии
		|				ТОГДА &ГоденДоНеУказан
		|						ИЛИ СерииНоменклатуры.ГоденДо = &ГоденДо
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номер,
		|	ГоденДо";
		
		НастройкиИспользованияСерий = ЗначениеНастроекПовтИсп.НастройкиИспользованияСерий(Параметры.ВидНоменклатуры);
		
		Запрос.УстановитьПараметр("ВидНоменклатуры", НастройкиИспользованияСерий.ВладелецСерий);
		Запрос.УстановитьПараметр("ГоденДоНеУказан", Не ЗначениеЗаполнено(Параметры.ГоденДо));
		Запрос.УстановитьПараметр("ГоденДо",		 Параметры.ГоденДо);
		Запрос.УстановитьПараметр("НомерНеУказан",   Не ЗначениеЗаполнено(Параметры.Номер));
		Запрос.УстановитьПараметр("Номер", 			 "%" + СокрЛП(Параметры.Номер) + "%");
		
		ДанныеВыбора = Новый СписокЗначений;
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Значение = Новый Структура("Серия,Номер,ГоденДо");
			ЗаполнитьЗначенияСвойств(Значение, Выборка);
			
			ДанныеВыбора.Добавить(Значение, Выборка.Наименование);
			
		КонецЦикла;
		
	ИначеЕсли Параметры.Свойство("Номенклатура") 
		И ЗначениеЗаполнено(Параметры.Номенклатура) Тогда 	
		
		СтрокаПоиска = Параметры.СтрокаПоиска;
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ ПЕРВЫЕ 50
		|	СпрСерии.Ссылка КАК Серия,
		|	СпрСерии.Наименование КАК СерияПредставление
		|ИЗ
		|	Справочник.Номенклатура КАК СпрНоменклатура
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СпрСерии
		|		ПО (СпрСерии.ВидНоменклатуры = ВЫБОР
		|				КОГДА СпрНоменклатура.ВидНоменклатуры.НастройкиСерийБерутсяИзДругогоВидаНоменклатуры
		|					ТОГДА СпрНоменклатура.ВидНоменклатуры.ВладелецСерий
		|				ИНАЧЕ СпрНоменклатура.ВидНоменклатуры
		|			КОНЕЦ)  
		|ГДЕ
		|	СпрНоменклатура.Ссылка = &Номенклатура
		|	" + ?(СтрокаПоиска = Неопределено, "", "И СпрСерии.Наименование ПОДОБНО &СтрокаПоиска") + "
		|УПОРЯДОЧИТЬ ПО
		|	СерияПредставление";
		
		Запрос.УстановитьПараметр("Номенклатура", Параметры.Номенклатура);
		
		Если СтрокаПоиска <> Неопределено Тогда
			Запрос.УстановитьПараметр("СтрокаПоиска", "%" + СокрЛП(СтрокаПоиска) + "%");
		КонецЕсли;
		
		ДанныеВыбора = Новый СписокЗначений;
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ДанныеВыбора.Добавить(Выборка.Серия, Выборка.СерияПредставление);
		КонецЦикла;
		
	ИначеЕсли Параметры.СтрокаПоиска <> Неопределено Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 50
		|	СерииНоменклатуры.Ссылка КАК Серия,
		|	СерииНоменклатуры.Номер КАК СерияНомер,
		|	ЕСТЬNULL(ДвиженияСерийТоваров.Номенклатура, НЕОПРЕДЕЛЕНО) КАК Номенклатура,
		|	ЕСТЬNULL(ДвиженияСерийТоваров.Номенклатура.Представление, """") КАК НоменклатураПредставление,
		|	ЕСТЬNULL(ДвиженияСерийТоваров.Характеристика, НЕОПРЕДЕЛЕНО) КАК Характеристика,
		|	ЕСТЬNULL(ДвиженияСерийТоваров.Характеристика.Представление, """") КАК ХарактеристикаПредставление
		|ИЗ
		|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияСерийТоваров КАК ДвиженияСерийТоваров
		|		ПО (ДвиженияСерийТоваров.Серия = СерииНоменклатуры.Ссылка)
		|ГДЕ
		|	СерииНоменклатуры.Наименование ПОДОБНО &СтрокаПоиска
		|
		|УПОРЯДОЧИТЬ ПО
		|	СерияНомер,
		|	НоменклатураПредставление";
		
		Запрос.УстановитьПараметр("СтрокаПоиска", "%" + СокрЛП(Параметры.СтрокаПоиска) + "%");
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		ДанныеВыбора = Новый СписокЗначений;
		
		Пока Выборка.Следующий() Цикл
			
			Если ЗначениеЗаполнено(Выборка.Номенклатура) Тогда
				
				ПредставлениеНоменклатуры = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
													Выборка.НоменклатураПредставление,
													Выборка.ХарактеристикаПредставление);
													
				ПредставлениеЗначения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
													НСтр("ru='%1 (%2)';uk='%1 (%2)'"),
													Выборка.СерияНомер,
													ПредставлениеНоменклатуры);
			Иначе
				
				ПредставлениеЗначения = Выборка.СерияНомер;
				
			КонецЕсли; 
											
			ДанныеВыбора.Добавить(Выборка.Серия, ПредставлениеЗначения);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Серверный обработчик события ОбработкаПолученияДанныхВыбора справочника ПолитикиУчетаСерий.
//
Процедура ПолитикиУчетаСерийОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка) Экспорт
	
	НоменклатураСервер.НастроитьОтборВПараметрахПолитикУчетаСерий(Параметры);		
	
КонецПроцедуры

// Серверный обработчик события ОбработкаПолученияДанныхВыбора справочника УпаковкиЕдиницыИзмерения.
//
Процедура УпаковкиЕдиницыИзмеренияОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка) Экспорт
	
	ДанныеВыбора = Новый СписокЗначений;

	Если Параметры.Свойство("ВыборРодителя") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	УпаковкиНоменклатуры.Ссылка КАК Упаковка,
		|	УпаковкиНоменклатуры.ПометкаУдаления КАК ПометкаУдаления,
		|	ПРЕДСТАВЛЕНИЕ(УпаковкиНоменклатуры.Ссылка) КАК УпаковкаПредставление
		|ИЗ
		|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
		|ГДЕ
		|	УпаковкиНоменклатуры.Ссылка <> &Ссылка
		|	И УпаковкиНоменклатуры.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.УПАКОВКА)
		|	И УпаковкиНоменклатуры.Владелец = &Владелец
		|
		|УПОРЯДОЧИТЬ ПО
		|	УпаковкиНоменклатуры.Наименование";
		
		Запрос.УстановитьПараметр("Владелец", Параметры.Отбор.Владелец);
		Запрос.УстановитьПараметр("Ссылка", Параметры.Ссылка);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			ЗначениеСписка = Новый Структура;
			ЗначениеСписка.Вставить("Значение", Выборка.Упаковка);
			ЗначениеСписка.Вставить("ПометкаУдаления", Выборка.ПометкаУдаления);
			ДанныеВыбора.Добавить(ЗначениеСписка, Выборка.УпаковкаПредставление);
		КонецЦикла;
		
		СтандартнаяОбработка = Ложь;
		
	ИначеЕсли Параметры.Свойство("Номенклатура") Тогда 
		
		Номенклатура = Параметры.Номенклатура;
				
		Если Не ЗначениеЗаполнено(Номенклатура) Тогда
			Возврат;
		КонецЕсли;
		
		Склад = Неопределено;
		Помещение = Неопределено;
		Параметры.Свойство("Номенклатура", Номенклатура);
		Если Параметры.Свойство("Склад",Склад) Тогда
			Параметры.Свойство("Помещение",Помещение);
			ДобавлятьЕдиницуХранения = Не СкладыСервер.ИспользоватьАдресноеХранение(Склад,Помещение)
		Иначе
			ДобавлятьЕдиницуХранения = Истина;
		КонецЕсли;
		
		ПоказыватьМерныеЕдиницыИзмерения = Неопределено;
		Если Не Параметры.Свойство("ПоказыватьМерныеЕдиницыИзмерения", ПоказыватьМерныеЕдиницыИзмерения) Тогда
			ПоказыватьМерныеЕдиницыИзмерения = Истина;
		КонецЕсли;
		
		ПолучитьСписокДляВыбораУпаковок(Номенклатура, ДанныеВыбора, Параметры.СтрокаПоиска, ПоказыватьМерныеЕдиницыИзмерения, ДобавлятьЕдиницуХранения);
		
		СтандартнаяОбработка = Ложь;
		
	Иначе
		
		ТипИзмеряемойВеличины = Неопределено;
		
		Если Не Параметры.Свойство("Отбор") 
			Или Не Параметры.Отбор.Свойство("ТипИзмеряемойВеличины",ТипИзмеряемойВеличины)
					И Не Параметры.Свойство("ТипИзмеряемойВеличины",ТипИзмеряемойВеличины) Тогда
			
			Если Не Параметры.Свойство("Отбор") Тогда
				Параметры.Вставить("Отбор", Новый Структура);
			КонецЕсли;
			МассивТиповЕдиниц = Новый Массив;
			МассивТиповЕдиниц.Добавить(Перечисления.ТипыИзмеряемыхВеличин.Вес);
			МассивТиповЕдиниц.Добавить(Перечисления.ТипыИзмеряемыхВеличин.Объем);
			МассивТиповЕдиниц.Добавить(Перечисления.ТипыИзмеряемыхВеличин.Площадь);
			МассивТиповЕдиниц.Добавить(Перечисления.ТипыИзмеряемыхВеличин.Длина);
			МассивТиповЕдиниц.Добавить(Перечисления.ТипыИзмеряемыхВеличин.КоличествоШтук);
			МассивТиповЕдиниц.Добавить(Перечисления.ТипыИзмеряемыхВеличин.ПустаяСсылка());
			Параметры.Отбор.Вставить("ТипИзмеряемойВеличины", МассивТиповЕдиниц);
					
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура УпаковкиЕдиницыИзмеренияОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка) Экспорт 
	
	Если ВидФормы = "ФормаОбъекта" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если Параметры.Свойство("Ключ") 
			И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Ключ, "ТипИзмеряемойВеличины") = Перечисления.ТипыИзмеряемыхВеличин.Упаковка Тогда 				
			ВыбраннаяФорма = "ФормаЭлементаУпаковки";
			Возврат;
		КонецЕсли;
		
		Если Параметры.Свойство("ЗначениеКопирования") 
			И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.ЗначениеКопирования, "ТипИзмеряемойВеличины") = Перечисления.ТипыИзмеряемыхВеличин.Упаковка Тогда
			ВыбраннаяФорма = "ФормаЭлементаУпаковки";
			Возврат;
		КонецЕсли;
		
		Если Параметры.Свойство("ПараметрыВыбора") 
			И Параметры.ПараметрыВыбора.Свойство("ТипИзмеряемойВеличины") 
			И Параметры.ПараметрыВыбора.ТипИзмеряемойВеличины = Перечисления.ТипыИзмеряемыхВеличин.Упаковка Тогда  			
			ВыбраннаяФорма = "ФормаЭлементаУпаковки";
			Возврат;
		КонецЕсли;
		
		ВыбраннаяФорма = "ФормаЭлементаЕдиницыИзмерения";
		
 	ИначеЕсли ВидФормы = "ФормаВыбора" Тогда
		ТипИзмеряемойВеличины = Неопределено;
		
		Если Параметры.Свойство("Отбор") 
			И (Параметры.Отбор.Свойство("ТипИзмеряемойВеличины",ТипИзмеряемойВеличины)
			Или Параметры.Свойство("ТипИзмеряемойВеличины",ТипИзмеряемойВеличины)) Тогда
			
			Если ТипИзмеряемойВеличины = Перечисления.ТипыИзмеряемыхВеличин.Упаковка Тогда
				ВыбраннаяФорма = "ФормаВыбораУпаковки";
			Иначе
				ВыбраннаяФорма = "ФормаВыбораЕдиницыИзмерения";
			КонецЕсли;
			
			СтандартнаяОбработка = Ложь;
		ИначеЕсли Параметры.Свойство("Номенклатура") Тогда 
			ВыбраннаяФорма = "ФормаВыбораИзДокументов";
			СтандартнаяОбработка = Ложь;		
		Иначе
			ВыбраннаяФорма = "ФормаВыбораЕдиницыИзмерения";
			Если Не Параметры.Свойство("Отбор") Тогда
				Параметры.Вставить("Отбор", Новый Структура);
			КонецЕсли;
			МассивТиповЕдиниц = Новый Массив;
			МассивТиповЕдиниц.Добавить(Перечисления.ТипыИзмеряемыхВеличин.Вес);
			МассивТиповЕдиниц.Добавить(Перечисления.ТипыИзмеряемыхВеличин.Объем);
			МассивТиповЕдиниц.Добавить(Перечисления.ТипыИзмеряемыхВеличин.Площадь);
			МассивТиповЕдиниц.Добавить(Перечисления.ТипыИзмеряемыхВеличин.Длина);
			МассивТиповЕдиниц.Добавить(Перечисления.ТипыИзмеряемыхВеличин.КоличествоШтук);
			МассивТиповЕдиниц.Добавить(Перечисления.ТипыИзмеряемыхВеличин.ПустаяСсылка());
			Параметры.Отбор.Вставить("ТипИзмеряемойВеличины", МассивТиповЕдиниц);
			СтандартнаяОбработка = Ложь;
		КонецЕсли;
		
	ИначеЕсли ВидФормы = "ФормаСписка" Тогда
		СтандартнаяОбработка = Ложь;		

		ТекущаяСтрока = Неопределено;
		
		Если Параметры.Свойство("ТекущаяСтрока", ТекущаяСтрока) Тогда
			Владелец = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущаяСтрока, "Владелец");
		ИначеЕсли Параметры.Свойство("Отбор")
			И Параметры.Отбор.Свойство("Владелец") Тогда
			Владелец = Параметры.Отбор.Владелец;	
		Иначе
			Владелец = Неопределено;
		КонецЕсли;
		
		Если Владелец = Справочники.НаборыУпаковок.БазовыеЕдиницыИзмерения Тогда
			ВыбраннаяФорма = "ФормаСпискаЕдиницИзмерения";
		Иначе
			ВыбраннаяФорма = "ФормаСпискаУпаковок";
		КонецЕсли;
		
		Если Владелец <> Неопределено Тогда
			
			Если Не Параметры.Свойство("Отбор") Тогда
				Параметры.Вставить("Отбор", Новый Структура);
			КонецЕсли;
			
			Параметры.Отбор.Вставить("Владелец", Владелец);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Серверный обработчик события ОбработкаПолученияДанныхВыбора справочника ХарактеристикиНоменклатуры.
//
Процедура ХарактеристикиНоменклатурыОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка) Экспорт
	
	Перем Номенклатура;
	
	Если Не Параметры.Свойство("Номенклатура", Номенклатура) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;	
	
	СтрокаПоиска = Параметры.СтрокаПоиска;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 50
	|	СпрХарактеристики.Ссылка КАК Характеристика,
	|	СпрХарактеристики.ПометкаУдаления КАК ПометкаУдаления,
	|	СпрХарактеристики.Наименование КАК ХарактеристикаПредставление
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК СпрХарактеристики
	|		ПО (СпрХарактеристики.Владелец = ВЫБОР
	|				КОГДА СпрНоменклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеДляВидаНоменклатуры)
	|					ТОГДА СпрНоменклатура.ВидНоменклатуры
	|				КОГДА СпрНоменклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ИндивидуальныеДляНоменклатуры)
	|					ТОГДА СпрНоменклатура.Ссылка
	|				КОГДА СпрНоменклатура.ИспользованиеХарактеристик = ЗНАЧЕНИЕ(Перечисление.ВариантыИспользованияХарактеристикНоменклатуры.ОбщиеСДругимВидомНоменклатуры)
	|					ТОГДА СпрНоменклатура.ВладелецХарактеристик
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)
	|ГДЕ
	|	СпрНоменклатура.Ссылка = &Номенклатура
	|	" + ?(СтрокаПоиска = Неопределено, "", "И СпрХарактеристики.Наименование ПОДОБНО &СтрокаПоиска") + "
	|УПОРЯДОЧИТЬ ПО
	|	ХарактеристикаПредставление
	|";

	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
    	
	Если СтрокаПоиска <> Неопределено Тогда
		Запрос.УстановитьПараметр("СтрокаПоиска", СтрокаПоиска + "%");
	КонецЕсли;
	
	ДанныеВыбора = Новый СписокЗначений;

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗначениеСписка = Новый Структура;
		ЗначениеСписка.Вставить("Значение", Выборка.Характеристика);
		ЗначениеСписка.Вставить("ПометкаУдаления", Выборка.ПометкаУдаления);
	
		ДанныеВыбора.Добавить(ЗначениеСписка, Выборка.ХарактеристикаПредставление);
	КонецЦикла;	
	
КонецПроцедуры

// Серверный обработчик события ОбработкаПолученияДанныхВыбора справочника Номенклатура.
//
Процедура НоменклатураОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	// Получим структуру возможных полей отбора справочника номенклатуры
	СтруктураРеквизитов = ЗначениеНастроекПовтИсп.РеквизитыСправочника("Номенклатура");
	
	Запрос        = Новый Запрос;
	СтрокаПоиска  = Параметры.СтрокаПоиска;
	УсловиеОтбора = "ИСТИНА";
	
	Для Каждого КлючИЗначениеОтбора Из Параметры.Отбор Цикл
		Если СтруктураРеквизитов.Свойство(КлючИЗначениеОтбора.Ключ) Тогда
			УсловиеОтбора = УсловиеОтбора + "
				|	И СпрНоменклатура." + КлючИЗначениеОтбора.Ключ + " В (&" + КлючИЗначениеОтбора.Ключ + ")";
			Запрос.УстановитьПараметр(КлючИЗначениеОтбора.Ключ,КлючИЗначениеОтбора.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ Параметры.Отбор.Свойство("ЭтоГруппа") И Параметры.Свойство("ВыборГруппИЭлементов") Тогда
		Если Параметры.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Группы Тогда
			УсловиеОтбора = УсловиеОтбора + "
				|	И СпрНоменклатура.ЭтоГруппа";
		ИначеЕсли Параметры.ВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Элементы Тогда
			УсловиеОтбора = УсловиеОтбора + "
				|	И НЕ СпрНоменклатура.ЭтоГруппа";
		КонецЕсли;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 50
	|	СпрНоменклатура.Ссылка,
	|	СпрНоменклатура.ПометкаУдаления КАК ПометкаУдаления,
	|	СпрНоменклатура.Наименование КАК ПредставлениеСовпадения,
	|	СпрНоменклатура.Качество.Порядок КАК Качество,
	|	0 КАК Порядок,
	|	СпрНоменклатура.Код КАК ПредставлениеНоменклатуры,
	|	СпрНоменклатура.ЭтоГруппа
	|ПОМЕСТИТЬ НоменклатураПоиск
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|ГДЕ
	|	СпрНоменклатура.Наименование ПОДОБНО &СтрокаПоиска
	|	И &УсловиеОтбора
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 50
	|	СпрНоменклатура.Ссылка,
	|	СпрНоменклатура.ПометкаУдаления,
	|	СпрНоменклатура.Код,
	|	СпрНоменклатура.Качество.Порядок,
	|	1,
	|	СпрНоменклатура.Наименование,
	|	NULL
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|ГДЕ
	|	СпрНоменклатура.Код ПОДОБНО &СтрокаПоиска
	|	И &УсловиеОтбора
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 50
	|	СпрНоменклатура.Ссылка,
	|	СпрНоменклатура.ПометкаУдаления,
	|	СпрНоменклатура.Артикул,
	|	СпрНоменклатура.Качество.Порядок,
	|	2,
	|	СпрНоменклатура.Наименование,
	|	NULL
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|ГДЕ
	|	СпрНоменклатура.Артикул ПОДОБНО &СтрокаПоиска
	|	И &УсловиеОтбора
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 50
	|	СпрНоменклатура.Ссылка,
	|	СпрНоменклатура.ПометкаУдаления,
	|	СпрНоменклатура.КодДляПоиска,
	|	СпрНоменклатура.Качество.Порядок,
	|	3,
	|	СпрНоменклатура.Наименование,
	|	NULL
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|ГДЕ
	|	СпрНоменклатура.КодДляПоиска ПОДОБНО &СтрокаПоиска
	|	И &УсловиеОтбора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НоменклатураПоиск.Ссылка,
	|	МИНИМУМ(НоменклатураПоиск.Порядок) КАК Порядок
	|ПОМЕСТИТЬ НоменклатураПоПорядку
	|ИЗ
	|	НоменклатураПоиск КАК НоменклатураПоиск
	|
	|СГРУППИРОВАТЬ ПО
	|	НоменклатураПоиск.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 50
	|	НоменклатураПоиск.Качество КАК Качество,
	|	НоменклатураПоиск.ПометкаУдаления КАК ПометкаУдаления,
	|	НоменклатураПоиск.Ссылка КАК Ссылка,
	|	НоменклатураПоиск.Порядок КАК Порядок,
	|	НоменклатураПоиск.ПредставлениеСовпадения КАК ПредставлениеСовпадения,
	|	НоменклатураПоиск.ПредставлениеНоменклатуры КАК ПредставлениеНоменклатуры
	|ИЗ
	|	НоменклатураПоПорядку КАК НоменклатураПоПорядку
	|		ЛЕВОЕ СОЕДИНЕНИЕ НоменклатураПоиск КАК НоменклатураПоиск
	|		ПО НоменклатураПоПорядку.Ссылка = НоменклатураПоиск.Ссылка
	|			И НоменклатураПоПорядку.Порядок = НоменклатураПоиск.Порядок
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок,
	|	Качество,
	|	ПредставлениеСовпадения,
	|	ПредставлениеНоменклатуры";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбора" ,УсловиеОтбора);
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("СтрокаПоиска", СтрокаПоиска + "%");
	
	ДанныеВыбора = Новый СписокЗначений;

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ТекстЗначения = СокрП(Выборка.ПредставлениеСовпадения) + " (" + Выборка.ПредставлениеНоменклатуры + ")";
		
		ЗначениеСписка = Новый Структура;
		ЗначениеСписка.Вставить("Значение", Выборка.Ссылка);
		ЗначениеСписка.Вставить("ПометкаУдаления", Выборка.ПометкаУдаления);
	
		ДанныеВыбора.Добавить(ЗначениеСписка, ТекстЗначения);
		
	КонецЦикла; 	
	
КонецПроцедуры

// Серверный обработчик события ОбработкаПолученияДанныхВыбора справочника ВидыНоменклатуры.
//
Процедура ВидыНоменклатурыОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка) Экспорт
    
    Если Параметры.Свойство("Номенклатура")
        И ЗначениеЗаполнено(Параметры.Номенклатура) Тогда
        
        СтандартнаяОбработка = Ложь;
        
        УсловияВыбораНовогоВидаНоменклатуры = Справочники.Номенклатура.УсловияВыбораНовогоВидаНоменклатуры();
        
		Запрос = Новый Запрос;
        Запрос.Текст =
        "ВЫБРАТЬ ПЕРВЫЕ 50
        |	НовыйВидНоменклатуры.Ссылка КАК Ссылка,
        |	НовыйВидНоменклатуры.ПометкаУдаления КАК ПометкаУдаления,
        |	НовыйВидНоменклатуры.Наименование КАК Наименование
        |ИЗ
        |	Справочник.ВидыНоменклатуры КАК НовыйВидНоменклатуры
        |ГДЕ
        |	Не НовыйВидНоменклатуры.ЭтоГруппа
        |	";
        
        Для Каждого КлючЗначение Из УсловияВыбораНовогоВидаНоменклатуры Цикл
            
            Запрос.Текст = Запрос.Текст + " И НЕ " + КлючЗначение.Значение;
            
        КонецЦикла;
		
        ПараметрыЗапроса = Запрос.НайтиПараметры();
        
        ИменаРеквизитов = Новый Структура;
        Для Каждого Параметр из ПараметрыЗапроса Цикл
            ИменаРеквизитов.Вставить(Параметр.Имя, "ВидНоменклатуры." + Параметр.Имя);
        КонецЦикла;
        
        СтарыеРеквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.Номенклатура, ИменаРеквизитов);
        Для Каждого Параметр из ПараметрыЗапроса Цикл
            Запрос.УстановитьПараметр(Параметр.Имя, СтарыеРеквизиты[Параметр.Имя]);
        КонецЦикла;
        
        Запрос.Текст = Запрос.Текст + "
        |	И НовыйВидНоменклатуры.Наименование ПОДОБНО &СтрокаПоиска
       	|
        |УПОРЯДОЧИТЬ ПО
        |	НовыйВидНоменклатуры.Наименование";
		
		Запрос.УстановитьПараметр("СтрокаПоиска", Параметры.СтрокаПоиска + "%");
        
        ДанныеВыбора = Новый СписокЗначений;
        
        Выборка = Запрос.Выполнить().Выбрать();
        Пока Выборка.Следующий() Цикл
            
			ЗначениеВыбора = Новый Структура;
			ЗначениеВыбора.Вставить("Значение", Выборка.Ссылка); 
			ЗначениеВыбора.Вставить("ПометкаУдаления", Выборка.ПометкаУдаления); 
			ЗначениеВыбора.Вставить("Предупреждение ", ""); 
			
			ДанныеВыбора.Добавить(ЗначениеВыбора, Выборка.Наименование);
			
        КонецЦикла; 	
        
    КонецЕсли;

КонецПроцедуры


#КонецОбласти

#Область Прочее

Процедура ПолучитьСписокДляВыбораУпаковок(Номенклатура, ДанныеВыбора, СтрокаПоиска, Знач ПоказыватьМерныеЕдиницыИзмерения, ДобавлятьЕдиницуХранения)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УпаковкиНоменклатуры.Ссылка КАК Ссылка,
	|	УпаковкиНоменклатуры.ПометкаУдаления КАК ПометкаУдаления,
	|	УпаковкиНоменклатуры.Наименование КАК Наименование,
	|	ЛОЖЬ КАК ЭтоЕдиницаХранения,
	|	3 КАК Порядок,
	|	&ТекстЗапросаКоэффициентУпаковки КАК Коэффициент
	|ПОМЕСТИТЬ УпаковкиЕдиницыИзмерения
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|		ПО (Номенклатура.ВесИспользовать)
	|			И (Номенклатура.ВесМожноУказыватьВДокументах)
	|			И (УпаковкиНоменклатуры.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес))
	|ГДЕ
	|	Номенклатура.Ссылка = &Номенклатура
	|	И (&ДобавлятьЕдиницуХранения
	|			ИЛИ Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес)
	|			ИЛИ Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем)
	|			ИЛИ Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина)
	|			ИЛИ Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УпаковкиНоменклатуры.Ссылка,
	|	УпаковкиНоменклатуры.ПометкаУдаления,
	|	УпаковкиНоменклатуры.Наименование,
	|	ЛОЖЬ,
	|	4,
	|	&ТекстЗапросаКоэффициентУпаковки
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|		ПО (Номенклатура.ОбъемИспользовать)
	|			И (Номенклатура.ОбъемМожноУказыватьВДокументах)
	|			И (УпаковкиНоменклатуры.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем))
	|ГДЕ
	|	Номенклатура.Ссылка = &Номенклатура
	|	И (&ПоказыватьМерныеЕдиницыИзмерения
	|			ИЛИ Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес)
	|			ИЛИ Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем)
	|			ИЛИ Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина)
	|			ИЛИ Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УпаковкиНоменклатуры.Ссылка,
	|	УпаковкиНоменклатуры.ПометкаУдаления,
	|	УпаковкиНоменклатуры.Наименование,
	|	ЛОЖЬ,
	|	5,
	|	&ТекстЗапросаКоэффициентУпаковки
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|		ПО (Номенклатура.ДлинаИспользовать)
	|			И (Номенклатура.ДлинаМожноУказыватьВДокументах)
	|			И (УпаковкиНоменклатуры.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина))
	|ГДЕ
	|	Номенклатура.Ссылка = &Номенклатура
	|	И (&ПоказыватьМерныеЕдиницыИзмерения
	|			ИЛИ Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес)
	|			ИЛИ Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем)
	|			ИЛИ Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина)
	|			ИЛИ Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УпаковкиНоменклатуры.Ссылка,
	|	УпаковкиНоменклатуры.ПометкаУдаления,
	|	УпаковкиНоменклатуры.Наименование,
	|	ЛОЖЬ,
	|	6,
	|	&ТекстЗапросаКоэффициентУпаковки
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|		ПО (Номенклатура.ПлощадьИспользовать)
	|			И (Номенклатура.ПлощадьМожноУказыватьВДокументах)
	|			И (УпаковкиНоменклатуры.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь))
	|ГДЕ
	|	Номенклатура.Ссылка = &Номенклатура
	|	И (&ПоказыватьМерныеЕдиницыИзмерения
	|			ИЛИ Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Вес)
	|			ИЛИ Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Объем)
	|			ИЛИ Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Длина)
	|			ИЛИ Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Площадь))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СпрУпаковки.Ссылка,
	|	СпрУпаковки.ПометкаУдаления,
	|	СпрУпаковки.Наименование,
	|	ЛОЖЬ,
	|	1,
	|	СпрУпаковки.Числитель / СпрУпаковки.Знаменатель
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК СпрУпаковки
	|		ПО (ВЫБОР
	|				КОГДА СпрНоменклатура.НаборУпаковок = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ИндивидуальныйДляНоменклатуры)
	|					ТОГДА СпрУпаковки.Владелец = СпрНоменклатура.Ссылка
	|				КОГДА СпрНоменклатура.НаборУпаковок <> ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.ПустаяСсылка)
	|					ТОГДА СпрУпаковки.Владелец = СпрНоменклатура.НаборУпаковок
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)
	|ГДЕ
	|	СпрНоменклатура.Ссылка = &Номенклатура
	|	И НЕ СпрУпаковки.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Номенклатура.ЕдиницаИзмерения,
	|	Номенклатура.ЕдиницаИзмерения.ПометкаУдаления,
	|	Номенклатура.ЕдиницаИзмерения.Наименование,
	|	ИСТИНА,
	|	1,
	|	1
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка = &Номенклатура
	|	И &ПоказыватьМерныеЕдиницыИзмерения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УпаковкиЕдиницыИзмерения.Ссылка КАК Упаковка,
	|	УпаковкиЕдиницыИзмерения.ПометкаУдаления КАК ПометкаУдаления,
	|	МАКСИМУМ(УпаковкиЕдиницыИзмерения.ЭтоЕдиницаХранения) КАК ЭтоЕдиницаХранения,
	|	УпаковкиЕдиницыИзмерения.Наименование КАК УпаковкаПредставление,
	|	МИНИМУМ(УпаковкиЕдиницыИзмерения.Порядок) КАК Порядок,
	|	УпаковкиЕдиницыИзмерения.Коэффициент
	|ИЗ
	|	УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
	|ГДЕ
	|	&УсловиеПоСтрокеПоиска
	|
	|СГРУППИРОВАТЬ ПО
	|	УпаковкиЕдиницыИзмерения.Ссылка,
	|	УпаковкиЕдиницыИзмерения.ПометкаУдаления,
	|	УпаковкиЕдиницыИзмерения.Наименование,
	|	УпаковкиЕдиницыИзмерения.Коэффициент
	|
	|УПОРЯДОЧИТЬ ПО
	|	МИНИМУМ(УпаковкиЕдиницыИзмерения.Порядок),
	|	УпаковкиЕдиницыИзмерения.Коэффициент УБЫВ,
	|	УпаковкиЕдиницыИзмерения.Наименование";
	
	Запрос.УстановитьПараметр("ДобавлятьЕдиницуХранения", ДобавлятьЕдиницуХранения);
	Запрос.УстановитьПараметр("ПоказыватьМерныеЕдиницыИзмерения", ПоказыватьМерныеЕдиницыИзмерения);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
								"&УсловиеПоСтрокеПоиска",
								?(СтрокаПоиска = Неопределено, "ИСТИНА", " УпаковкиЕдиницыИзмерения.Наименование ПОДОБНО &СтрокаПоиска"));

	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"УпаковкиНоменклатуры",
		"Номенклатура"));
	
	Если СтрокаПоиска <> Неопределено Тогда
		Запрос.УстановитьПараметр("СтрокаПоиска", СтрокаПоиска + "%");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ЭтоЕдиницаХранения Тогда
			ДанныеВыбора.Добавить(Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка(), Выборка.УпаковкаПредставление);
		Иначе
			ЗначениеСписка = Новый Структура;
			ЗначениеСписка.Вставить("Значение", Выборка.Упаковка);
			ЗначениеСписка.Вставить("ПометкаУдаления", Выборка.ПометкаУдаления);
			ДанныеВыбора.Добавить(ЗначениеСписка, Выборка.УпаковкаПредставление);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры


#КонецОбласти
