#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	// ДополнительныеОтчетыИОбработки
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец ДополнительныеОтчетыИОбработки
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере();
	КонецЕсли;
		
	// Заполнение группы информационных ссылок
	ИнформационныйЦентрСервер.ВывестиКонтекстныеСсылки(ЭтаФорма, Элементы.ИнформационныеСсылки);
	
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Печать
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	// ВводНаОсновании
	ВводНаОсновании.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюСоздатьНаОсновании);
	// Конец ВводНаОсновании
	
	// МенюОтчеты
	МенюОтчеты.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюОтчеты);
	// Конец МенюОтчеты
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПодготовитьФормуНаСервере();
	
	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Если НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДатаДокумента) Тогда
		// Изменение времени не влияет на поведение документа.
		ТекущаяДатаДокумента = Объект.Дата;
		Возврат;
	КонецЕсли;

	ДатаПриИзмененииНаСервере();

	// Запомним новую дату документа.
	ТекущаяДатаДокумента = Объект.Дата;
	
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()
	
	ДатаОбработатьИзменение();
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ДатаОбработатьИзменение()
	
	УстановитьФункциональныеОпцииФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ОрганизацияПриИзмененииНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	ОрганизацияОбработатьИзменение();
	УправлениеФормой(ЭтаФорма);

КонецПроцедуры

&НаСервере
Процедура ОрганизацияОбработатьИзменение()

	УстановитьФункциональныеОпцииФормы();

КонецПроцедуры

&НаКлиенте
Процедура СпецРежимНалогообложенияПриИзменении(Элемент)
	
	ЭлементСпискаЗначений = Элемент.СписокВыбора.НайтиПоЗначению(Объект.СпецРежимНалогообложения);
	РасшифровкаСпецРежимНалогообложения = ?(ЭлементСпискаЗначений = Неопределено, "", ЭлементСпискаЗначений.Представление);

КонецПроцедуры

&НаКлиенте
Процедура ПоДаннымПрошлогоГодаПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьКоэффициент()

	Если Объект.СуммаВсехОпераций = 0 Тогда
		Объект.Коэффициент = 0;
	Иначе
		Объект.Коэффициент = Объект.СуммаОблагаемыхОпераций/Объект.СуммаВсехОпераций;	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	НачПериода = ?(Объект.ПоДаннымПрошлогоГода, 
				   НачалоГода(ДобавитьМесяц(Объект.Дата, -12)), 
				   НачалоМесяца(ДобавитьМесяц(НачалоГода(Объект.Дата), Объект.МесяцРасчета - 1)));
	
	КонПериода = ?(Объект.ПоДаннымПрошлогоГода, 
				   КонецГода(ДобавитьМесяц(Объект.Дата, -12)), 
				   КонецМесяца(ДобавитьМесяц(НачалоГода(Объект.Дата), Объект.МесяцРасчета - 1)));
				   
	СтруктураПродажНДС = НДСВходящийСервер.ПолучитьСуммыОблагаемыхПоставокПоНДС(Объект.Организация, НачПериода, КонПериода);
				   
	Объект.СуммаОблагаемыхОпераций 	= СтруктураПродажНДС.СуммаОблагаемыхОпераций;
	Объект.СуммаВсехОпераций 		= СтруктураПродажНДС.СуммаВсехОпераций;
	
	Объект.Коэффициент = 0;
	РассчитатьКоэффициент();
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцРасчетаСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Объект.МесяцРасчета = Объект.МесяцРасчета + Направление;
	
	Если Объект.МесяцРасчета > 12 Тогда
		Объект.МесяцРасчета = 1;
	КонецЕсли;
	Если Объект.МесяцРасчета < 1 Тогда
		Объект.МесяцРасчета = 12;
	КонецЕсли;
	
	МесяцРасчетаСтрокой = ПолучитьМесяцРасчетаСтрокой(Объект.МесяцРасчета); 
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаОблагаемыхОперацийПриИзменении(Элемент)
	РассчитатьКоэффициент();
КонецПроцедуры

&НаКлиенте
Процедура СуммаВсехОперацийПриИзменении(Элемент)
	РассчитатьКоэффициент();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// ВводНаОсновании
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуСоздатьНаОсновании(Команда)
	
	ВводНаОснованииКлиент.ВыполнитьПодключаемуюКомандуСоздатьНаОсновании(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец ВводНаОсновании

// МенюОтчеты
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	МенюОтчетыКлиент.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтотОбъект, Объект);
	
КонецПроцедуры
// Конец МенюОтчеты

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтотОбъект, Команда);
	
КонецПроцедуры

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_РедактироватьСоставСвойств()
	УправлениеСвойствамиКлиент.РедактироватьСоставСвойств(ЭтаФорма, Объект.Ссылка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
//Конец ИнтеграцияС1СДокументооборотом

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	Если НЕ ДополнительныеОтчетыИОбработкиКлиент.ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда.Имя) Тогда
		РезультатВыполнения = Неопределено;
		ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(Команда.Имя, РезультатВыполнения);
		ДополнительныеОтчетыИОбработкиКлиент.ПоказатьРезультатВыполненияКоманды(ЭтаФорма, РезультатВыполнения);
	КонецЕсли;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки
&НаСервере
Процедура ДополнительныеОтчетыИОбработкиВыполнитьНазначаемуюКомандуНаСервере(ИмяЭлемента, РезультатВыполнения)
	
	ДополнительныеОтчетыИОбработки.ВыполнитьНазначаемуюКомандуНаСервере(ЭтаФорма, ИмяЭлемента, РезультатВыполнения);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьМесяцРасчетаСтрокой(МесяцРасчета)

	Возврат Формат(Дата("2001" + Формат(МесяцРасчета,"ЧЦ=2; ЧДЦ=0; ЧВН=") + "01"),"ДФ=MMMM");
	
КонецФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере()
	
	УстановитьФункциональныеОпцииФормы();
	
	Если Элементы.СпецРежимНалогообложения.СписокВыбора.Количество() = 0 Тогда
		НДСОбщегоНазначенияСервер.ЗаполнитьСписокВыбораСпецРежимаНалогообложения(Элементы.СпецРежимНалогообложения.СписокВыбора);
	КонецЕсли;
	ЭлементСпискаЗначений 				= Элементы.СпецРежимНалогообложения.СписокВыбора.НайтиПоЗначению(Объект.СпецРежимНалогообложения);
	РасшифровкаСпецРежимНалогообложения = ?(ЭлементСпискаЗначений = Неопределено, "", ЭлементСпискаЗначений.Представление);
	
	МесяцРасчетаСтрокой = ПолучитьМесяцРасчетаСтрокой(Объект.МесяцРасчета); 
	
	// Заполнение реквизитов формы
	ТекущаяДатаДокумента           = Объект.Дата;
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();

	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФункциональныеОпцииФормы()

	УстановитьПараметрыФункциональныхОпцийФормы(Новый Структура("Организация", Объект.Организация));

КонецПроцедуры 

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	Элементы.МесяцРасчетаСтрокой.Видимость = НЕ Объект.ПоДаннымПрошлогоГода;
	
КонецПроцедуры


#КонецОбласти


