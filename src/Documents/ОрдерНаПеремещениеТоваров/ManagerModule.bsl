#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Документы.ОтборРазмещениеТоваров.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	
	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);
	
	Обработки.СправочноеРазмещениеНоменклатуры.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	
КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.ОрдерНаПеремещениеТоваров) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ОрдерНаПеремещениеТоваров.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.ОрдерНаПеремещениеТоваров);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьСкладскиеПомещения";
	

		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

КонецПроцедуры

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад,ПомещениеПолучатель,ПомещениеОтправитель,Статус,ДатаОтгрузки";
	
	Возврат ИменаРеквизитов;
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение
//			Тип Структура
//				Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ОрдерНаПеремещениеТоваров";
	
	ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Склад, Ложь);
	
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ПараметрыСерийСклада.ИспользоватьСерииНоменклатуры;
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерий.ИмяТЧТовары  = "ОтгружаемыеТовары";
	ПараметрыУказанияСерий.ИмяТЧСерии   = "ОтгружаемыеТовары";
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ПеремещениеМеждуПомещениями);
	
	ОтправительИспользоватьАдресноеХранение = СкладыСервер.ИспользоватьАдресноеХранение(Объект.Склад, Объект.ПомещениеОтправитель, Объект.ДатаОтгрузки);
	ПолучательИспользоватьАдресноеХранение = СкладыСервер.ИспользоватьАдресноеХранение(Объект.Склад, Объект.ПомещениеПолучатель, Объект.ДатаОтгрузки);
	
	ПараметрыУказанияСерий.ИспользоватьАдресноеХранение = ОтправительИспользоватьАдресноеХранение
	   Или ПолучательИспользоватьАдресноеХранение;
	
	Если Объект.Статус = Перечисления.СтатусыОрдеровНаПеремещение.КОтбору Тогда
		
		ПараметрыУказанияСерий.ПланированиеОтгрузки = Истина;
		ПараметрыУказанияСерий.ПланированиеОтбора = Истина;
		ПараметрыУказанияСерий.ПроверкаОтбора = Ложь;
		ПараметрыУказанияСерий.ФактОтбора = Ложь;
		
	ИначеЕсли Объект.Статус = Перечисления.СтатусыОрдеровНаПеремещение.КПроверке Тогда	
		
		ПараметрыУказанияСерий.ПланированиеОтгрузки = Ложь;
		ПараметрыУказанияСерий.ПланированиеОтбора = Ложь;
		ПараметрыУказанияСерий.ПроверкаОтбора = Истина;
		ПараметрыУказанияСерий.ФактОтбора = Ложь;
			
	ИначеЕсли Объект.Статус = Перечисления.СтатусыОрдеровНаПеремещение.КОтгрузке
		Или Объект.Статус = Перечисления.СтатусыОрдеровНаПеремещение.Принят Тогда
		
		ПараметрыУказанияСерий.ПланированиеОтгрузки = Ложь;
		ПараметрыУказанияСерий.ПланированиеОтбора = Ложь;
		ПараметрыУказанияСерий.ПроверкаОтбора = Ложь;
		ПараметрыУказанияСерий.ФактОтбора = Истина;
		
	КонецЕсли;
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Назначение");
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Действие");
	
	Если ОтправительИспользоватьАдресноеХранение
			И Объект.Статус <> Перечисления.СтатусыОрдеровНаПеремещение.КОтбору
		Или ПолучательИспользоватьАдресноеХранение
			И Объект.Статус = Перечисления.СтатусыОрдеровНаПеремещение.Принят Тогда
		ПараметрыУказанияСерий.ПоляСвязи.Добавить("Упаковка");
		ПараметрыУказанияСерий.ИмяПоляКоличество = "КоличествоУпаковок";
	Иначе
		ПараметрыУказанияСерий.ИмяПоляКоличество = "Количество";
	КонецЕсли;
	
	ПараметрыУказанияСерий.РегистрироватьСерии = НоменклатураКлиентСервер.НеобходимоРегистрироватьСерии(ПараметрыУказанияСерий);
	ПараметрыУказанияСерий.ОсобеннаяПроверкаСтатусовУказанияСерий = Истина;
	
	ПараметрыУказанияСерий.ЭтоОрдер = Истина;
	ПараметрыУказанияСерий.ИмяПоляПомещение = "ПомещениеОтправитель";
	ПараметрыУказанияСерий.Дата = Объект.ДатаОтгрузки;
	
	Возврат ПараметрыУказанияСерий;

КонецФункции

// Возвращает текст запроса для расчета статусов указания серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
    Перем ТекстЗапроса;
    
    Если ПараметрыУказанияСерий.ПоляСвязи.Найти("Упаковка") <> Неопределено Тогда
        ТекстЗапроса = 
        "ВЫБРАТЬ
        |	Товары.Действие,
        |	Товары.Номенклатура,
        |	Товары.Серия,
        |	Товары.КоличествоУпаковок КАК Количество,
        |	Товары.СтатусУказанияСерий,
        |	Товары.НомерСтроки
        |ПОМЕСТИТЬ Товары
        |ИЗ
        |	&Товары КАК Товары";
    Иначе
        ТекстЗапроса = 
        "ВЫБРАТЬ
        |	Товары.Действие,
		|	Товары.Номенклатура,
		|	Товары.Серия,
		|	Товары.Количество,
		|	Товары.СтатусУказанияСерий,
		|	Товары.НомерСтроки
        |ПОМЕСТИТЬ Товары
        |ИЗ
        |	&Товары КАК Товары";
    КонецЕсли; 
    
    ТекстЗапроса = 	ТекстЗапроса + "
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |";
    
    ТекстЗапроса = 	ТекстЗапроса +
    "ВЫБРАТЬ
    |	Товары.НомерСтроки КАК НомерСтроки,
    |	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
    |	ВЫБОР
    |		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
    |			ТОГДА 0
    |		ИНАЧЕ ВЫБОР
    |				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтгрузки
    |					ТОГДА ВЫБОР
    |							КОГДА Товары.Количество > 0
    |									И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
    |								ТОГДА ВЫБОР
    |										КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
    |											ТОГДА 14
    |										ИНАЧЕ 10
    |									КОНЕЦ
    |							ИНАЧЕ ВЫБОР
    |									КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
    |										ТОГДА 13
    |									ИНАЧЕ 9
    |								КОНЕЦ
    |						КОНЕЦ
    |				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПланированииОтбора
    |					ТОГДА ВЫБОР
    |							КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчетСерийПоFEFO
    |								ТОГДА ВЫБОР
    |										КОГДА Товары.Количество > 0
    |												И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
    |											ТОГДА 6
    |										ИНАЧЕ 5
    |									КОНЕЦ
    |							ИНАЧЕ ВЫБОР
    |									КОГДА Товары.Количество > 0
    |											И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
    |										ТОГДА 8
    |									ИНАЧЕ 7
    |								КОНЕЦ
    |						КОНЕЦ
 	|		КОГДА (ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПоФактуОтбора
	|				ИЛИ ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПриемке)
	|				И ПолитикиУчетаСерий.ПолитикаУчетаСерий.УказыватьПриПеремещенииМеждуПомещениями
    |					ТОГДА ВЫБОР
    |							КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьОстаткиСерий
    |								ТОГДА ВЫБОР
    |										КОГДА Товары.Количество > 0
    |												И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
    |											ТОГДА 4
    |										КОГДА Товары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отобрать)
    |												И (НЕ &ИспользоватьАдресноеХранение
    |													ИЛИ &ИспользоватьАдресноеХранение)
    |														И &ПланированиеОтбора
    |											ТОГДА 0
    |										ИНАЧЕ 3
    |									КОНЕЦ
    |							ИНАЧЕ ВЫБОР
    |									КОГДА Товары.Количество > 0
    |											И Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
    |											И Товары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить)
    |										ТОГДА 2
    |									КОГДА Товары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить)
    |										ТОГДА 1
    |									ИНАЧЕ 0
    |								КОНЕЦ
    |						КОНЕЦ
    |				ИНАЧЕ 0
    |			КОНЕЦ
    |	КОНЕЦ КАК СтатусУказанияСерий
    |ПОМЕСТИТЬ ТаблицаСтатусов
    |ИЗ
    |	Товары КАК Товары
    |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
    |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
    |			ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
    |		ПО (ПолитикиУчетаСерий.Склад = &Склад)
    |			И Товары.Номенклатура.ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка
    |;
    |
    |////////////////////////////////////////////////////////////////////////////////
    |ВЫБРАТЬ
    |	ТаблицаСтатусов.НомерСтроки КАК НомерСтроки,
    |	ТаблицаСтатусов.СтатусУказанияСерий КАК СтатусУказанияСерий
    |ИЗ
    |	ТаблицаСтатусов КАК ТаблицаСтатусов
    |ГДЕ
    |	ТаблицаСтатусов.СтатусУказанияСерий <> ТаблицаСтатусов.СтарыйСтатусУказанияСерий
    |
    |УПОРЯДОЧИТЬ ПО
    |	НомерСтроки";
    Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст запроса для получениях доступных назначений
//	Параметры:
//		ПараметрыФормированияЗапроса - Структура - параметры для формирования текстов запросов
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаДоступныхНазначений(ПараметрыФормированияЗапроса) Экспорт
	
	Возврат Справочники.Назначения.ТекстЗапросаНеобеспеченныхНазначенийОбеспечено(ПараметрыФормированияЗапроса);
	
КонецФункции

// Возвращает текст запроса для проверки заполнения серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаПроверкиЗаполненияСерий(ПараметрыУказанияСерий) Экспорт
	
	
	Если ПараметрыУказанияСерий.ИспользоватьАдресноеХранение Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаСерий.НомерСтроки КАК НомерСтроки,
		|	ТаблицаСерий.Серия КАК Серия,
		|	ТаблицаСерий.Номенклатура КАК Номенклатура,
		|	ТаблицаСерий.Характеристика КАК Характеристика,
		|	ВЫБОР
		|		КОГДА ТаблицаСерий.Действие <> ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отобрать)
		|			ТОГДА ТаблицаСерий.Упаковка
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|	КОНЕЦ КАК Упаковка,
		|	ВЫБОР
		|		КОГДА ТаблицаСерий.Действие <> ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отобрать)
		|			ТОГДА ТаблицаСерий.КоличествоУпаковок
		|		ИНАЧЕ ТаблицаСерий.Количество
		|	КОНЕЦ КАК КоличествоУпаковок
		|ПОМЕСТИТЬ ТаблицаСерийДляЗапроса
		|ИЗ
		|	&ТаблицаСерий КАК ТаблицаСерий
		|ГДЕ
		|	ТаблицаСерий.СтатусУказанияСерий > 0
		|	И НЕ ТаблицаСерий.СтатусУказанияСерий В (11, 15)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";
	Иначе
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаСерий.НомерСтроки КАК НомерСтроки,
		|	ТаблицаСерий.Серия КАК Серия,
		|	ТаблицаСерий.Номенклатура КАК Номенклатура,
		|	ТаблицаСерий.Характеристика КАК Характеристика,
		|	ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка) КАК Упаковка,
		|	ТаблицаСерий.Количество КАК КоличествоУпаковок
		|ПОМЕСТИТЬ ТаблицаСерийДляЗапроса
		|ИЗ
		|	&ТаблицаСерий КАК ТаблицаСерий
		|ГДЕ
		|	ТаблицаСерий.СтатусУказанияСерий > 0
		|	И НЕ ТаблицаСерий.СтатусУказанияСерий В (11, 15)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаСерий.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаСерий.Номенклатура КАК Номенклатура,
	|	СУММА(ТаблицаСерий.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТаблицаСерий
	|ИЗ
	|	ТаблицаСерийДляЗапроса КАК ТаблицаСерий
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаСерий.Серия,
	|	ТаблицаСерий.Номенклатура,
	|	ТаблицаСерий.Упаковка,
	|	ТаблицаСерий.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.ТоварПредставление,
	|	""Серия"" КАК ИмяПоляСерия,
	|	МАКСИМУМ(ВложенныйЗапрос.СерияНеЗаполнена) КАК СерияНеЗаполнена,
	|	МАКСИМУМ(ВложенныйЗапрос.ОшибкаКоличества) КАК ОшибкаКоличества,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПРЕДСТАВЛЕНИЕ(ТаблицаСерий.Номенклатура) КАК ТоварПредставление,
	|		ВЫБОР
	|			КОГДА ТаблицаСерий.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ КАК СерияНеЗаполнена,
	|		ЛОЖЬ КАК ОшибкаКоличества,
	|		ТаблицаСерий.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		ТаблицаСерийДляЗапроса КАК ТаблицаСерий
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПРЕДСТАВЛЕНИЕ(ТаблицаСерий.Номенклатура),
	|		ЛОЖЬ,
	|		ВЫБОР
	|			КОГДА НЕ ВЫРАЗИТЬ(ТаблицаСерий.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры.ИспользоватьКоличествоСерии
	|					И ТаблицаСерий.КоличествоУпаковок <> 1
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ,
	|		ТаблицаСерий.НомерСтроки
	|	ИЗ
	|		ТаблицаСерий КАК ТаблицаСерий) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.НомерСтроки,
	|	ВложенныйЗапрос.ТоварПредставление
	|
	|ИМЕЮЩИЕ
	|	(МАКСИМУМ(ВложенныйЗапрос.СерияНеЗаполнена) = ИСТИНА
	|		ИЛИ МАКСИМУМ(ВложенныйЗапрос.ОшибкаКоличества) = ИСТИНА)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.НомерСтроки";
	
	Возврат ТекстЗапроса;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьДействиеВСтроках(Объект) Экспорт
	
	Если Объект.Статус = Перечисления.СтатусыОрдеровНаПеремещение.КОтгрузке
		Или Объект.Статус = Перечисления.СтатусыОрдеровНаПеремещение.Принят Тогда
		НайденныеСтроки = Объект.ОтгружаемыеТовары.НайтиСтроки(Новый Структура("Действие",
		 														Перечисления.ДействияСоСтрокамиОрдеровНаОтгрузку.Отобрать));
		
		Для Каждого СтрМас из НайденныеСтроки Цикл
			СтрМас.Действие = Перечисления.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить;
		КонецЦикла;
		
	КонецЕсли;
		
КонецПроцедуры

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Функция АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра) Экспорт

	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый СписокЗначений;
	
	ПолноеИмяДокумента = "Документ.ОрдерНаПеремещениеТоваров"; 
	
	ПереопределениеРасчетаПараметров = Новый Структура;
	ПереопределениеРасчетаПараметров.Вставить("ИспользоватьАдресноеХранениеПолучатель",
												"ВЫБОР
												|	КОГДА ТаблицаТовары.Ссылка.ПомещениеПолучатель.ИспользоватьАдресноеХранение
												|			И ТаблицаТовары.Ссылка.ДатаОтгрузки >= ТаблицаТовары.Ссылка.ПомещениеПолучатель.ДатаНачалаАдресногоХраненияОстатков
												|		ТОГДА ИСТИНА
												|	ИНАЧЕ ЛОЖЬ
												|КОНЕЦ");
												
	ПереопределениеРасчетаПараметров.Вставить("ИспользоватьАдресноеХранениеОтправитель",
												"ВЫБОР
												|		КОГДА ТаблицаТовары.Ссылка.ПомещениеОтправитель.ИспользоватьАдресноеХранение
												|				И ТаблицаТовары.Ссылка.ДатаОтгрузки >= ТаблицаТовары.Ссылка.ПомещениеОтправитель.ДатаНачалаАдресногоХраненияОстатков
												|			ТОГДА ИСТИНА
												|		ИНАЧЕ ЛОЖЬ
												|	КОНЕЦ");
	
	Если ИмяРегистра = "ТоварыНаСкладах" Тогда
	
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	ИначеЕсли ИмяРегистра = "ТоварыВЯчейках" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыВЯчейках(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	ИначеЕсли ИмяРегистра = "ТоварыКОтбору" Тогда
		
		ТекстЗапроса = ТекстЗапросаТаблицаТоварыКОтбору(Запрос, ТекстыЗапроса, ИмяРегистра);
		СинонимТаблицыДокумента = "ТаблицаТовары";
		
	Иначе
		ТекстИсключения = НСтр("ru='В документе %ПолноеИмяДокумента% не реализована адаптация текста запроса формирования движений по регистру %ИмяРегистра%.';uk='У документі %ПолноеИмяДокумента% не реалізована адаптація тексту запиту формування рухів по регістру %ИмяРегистра%.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ПолноеИмяДокумента%", ПолноеИмяДокумента);
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ИмяРегистра%", ИмяРегистра);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Результат = ОбновлениеИнформационнойБазыУТ.РезультатАдаптацииЗапроса();
	Результат.ТекстЗапроса = ОбновлениеИнформационнойБазыУТ.АдаптироватьЗапросМеханизмаПроведения(ТекстЗапроса,
																								ПолноеИмяДокумента,
																								СинонимТаблицыДокумента,
																								ПереопределениеРасчетаПараметров);

	Возврат Результат;

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт

	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыВЯчейках(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОтбору(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеШапки.ДатаОтгрузки КАК Период,
	|	ДанныеШапки.Склад КАК Склад,
	|	ВЫБОР
	|		КОГДА ДанныеШапки.ПомещениеОтправитель.ИспользоватьАдресноеХранение
	|				И ДанныеШапки.ДатаОтгрузки >= ДанныеШапки.ПомещениеОтправитель.ДатаНачалаАдресногоХраненияОстатков
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИспользоватьАдресноеХранениеОтправитель,
	|	ВЫБОР
	|		КОГДА ДанныеШапки.ПомещениеПолучатель.ИспользоватьАдресноеХранение
	|				И ДанныеШапки.ДатаОтгрузки >= ДанныеШапки.ПомещениеПолучатель.ДатаНачалаАдресногоХраненияОстатков
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИспользоватьАдресноеХранениеПолучатель,
	|	ДанныеШапки.ПомещениеОтправитель КАК ПомещениеОтправитель,
	|	ДанныеШапки.ПомещениеПолучатель КАК ПомещениеПолучатель,
	|	ДанныеШапки.ЗонаОтгрузки КАК ЗонаОтгрузки,
	|	ДанныеШапки.ЗонаПриемки КАК ЗонаПриемки,
	|	ДанныеШапки.Статус КАК Статус
	|ИЗ
	|	Документ.ОрдерНаПеремещениеТоваров КАК ДанныеШапки
	|ГДЕ
	|	ДанныеШапки.Ссылка = &Ссылка";
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();

	Запрос.УстановитьПараметр("Статус",                                  Реквизиты.Статус);
	Запрос.УстановитьПараметр("Период",                                  Реквизиты.Период);
	Запрос.УстановитьПараметр("Склад",                                   Реквизиты.Склад);
	Запрос.УстановитьПараметр("ПомещениеОтправитель",                    Реквизиты.ПомещениеОтправитель);
	Запрос.УстановитьПараметр("ПомещениеПолучатель",                     Реквизиты.ПомещениеПолучатель);
	Запрос.УстановитьПараметр("ЗонаОтгрузки",                            Реквизиты.ЗонаОтгрузки);
	Запрос.УстановитьПараметр("ЗонаПриемки",                             Реквизиты.ЗонаПриемки);
	Запрос.УстановитьПараметр("ИспользоватьАдресноеХранениеОтправитель", Реквизиты.ИспользоватьАдресноеХранениеОтправитель);
	Запрос.УстановитьПараметр("ИспользоватьАдресноеХранениеПолучатель",  Реквизиты.ИспользоватьАдресноеХранениеПолучатель);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыНаСкладах";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	&ПомещениеОтправитель                  КАК Помещение,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	ТаблицаТовары.Количество               КАК ВНаличии,
	|	0                                      КАК КОтгрузке,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10, 14)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяССылка)
	|	КОНЕЦ КАК Серия,
	|   ЛОЖЬ                                   КАК КонтролироватьОстатки
	|ИЗ
	|	Документ.ОрдерНаПеремещениеТоваров.ОтгружаемыеТовары КАК ТаблицаТовары
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОрдеровНаПеремещение.Принят)
	|	И (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отобрать)
	|	ИЛИ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить))
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Склад,
	|	&ПомещениеПолучатель,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Назначение,
	|	ТаблицаТовары.Количество,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10, 14)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяССылка)
	|	КОНЕЦ КАК Серия,
	|   ЛОЖЬ
	|ИЗ
	|	Документ.ОрдерНаПеремещениеТоваров.ОтгружаемыеТовары КАК ТаблицаТовары
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОрдеровНаПеремещение.Принят)
	|	И (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отобрать)
	|	ИЛИ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить))
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Склад,
	|	&ПомещениеОтправитель,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Назначение,
	|	0,
	|	ТаблицаТовары.Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (6, 8, 10, 14)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяССылка)
	|	КОНЕЦ КАК Серия,
	|   ИСТИНА
	|ИЗ
	|	Документ.ОрдерНаПеремещениеТоваров.ОтгружаемыеТовары КАК ТаблицаТовары
	|ГДЕ
	|	&Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОрдеровНаПеремещение.КОтбору)
	|	И (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отобрать)
	|	ИЛИ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить))
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыВЯчейках(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыВЯчейках";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	&ЗонаПриемки                           КАК Ячейка,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|			ТОГДА ТаблицаТовары.Упаковка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Упаковка,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|			ТОГДА ТаблицаТовары.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаТовары.Количество
	|	КОНЕЦ                                  КАК ВНаличии,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10, 14)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяССылка)
	|	КОНЕЦ КАК Серия
	|ИЗ
	|	Документ.ОрдерНаПеремещениеТоваров.ОтгружаемыеТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ИспользоватьАдресноеХранениеПолучатель
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОрдеровНаПеремещение.Принят)
	|	И (ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отобрать)
	|	ИЛИ ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить))
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Назначение,
	|	&ЗонаОтгрузки,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|			ТОГДА ТаблицаТовары.Упаковка
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Упаковка.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.Упаковка)
	|			ТОГДА ТаблицаТовары.КоличествоУпаковок
	|		ИНАЧЕ ТаблицаТовары.Количество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (4, 6, 8, 10, 14)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяССылка)
	|	КОНЕЦ КАК Серия
	|ИЗ
	|	Документ.ОрдерНаПеремещениеТоваров.ОтгружаемыеТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ИспользоватьАдресноеХранениеОтправитель
	|	И ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.НеОтгружать)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОтбору(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОтбору";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	&Ссылка                                КАК Распоряжение,
	|	0                                      КАК КОтбору,
	|	ТаблицаТовары.Количество               КАК Отобрано,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (6, 8, 10, 14)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяССылка)
	|	КОНЕЦ КАК Серия
	|ИЗ
	|	Документ.ОрдерНаПеремещениеТоваров.ОтгружаемыеТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ИспользоватьАдресноеХранениеОтправитель
	|	И ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Назначение,
	|	&Ссылка,
	|	ТаблицаТовары.Количество,
	|	0,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (6, 8, 10, 14)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяССылка)
	|	КОНЕЦ КАК Серия
	|ИЗ
	|	Документ.ОрдерНаПеремещениеТоваров.ОтгружаемыеТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ИспользоватьАдресноеХранениеОтправитель
	|	И ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отобрать)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	&Ссылка                                КАК Распоряжение,
	|	0                                      КАК КОтбору,
	|	-ТаблицаТовары.Количество              КАК Отобрано,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СтатусУказанияСерий В (6, 8, 10, 14)
	|			ТОГДА ТаблицаТовары.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяССылка)
	|	КОНЕЦ КАК Серия
	|ИЗ
	|	Документ.ОрдерНаПеремещениеТоваров.ОтгружаемыеТовары КАК ТаблицаТовары
	|ГДЕ
	|	&ИспользоватьАдресноеХранениеОтправитель
	|	И ТаблицаТовары.Количество <> 0
	|	И ТаблицаТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.НеОтгружать)
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура             КАК Номенклатура,
	|	ТаблицаСерии.Характеристика           КАК Характеристика,
	|	ТаблицаСерии.Назначение               КАК Назначение,
	|	ТаблицаСерии.Серия                    КАК Серия,
	|	ТаблицаСерии.Количество               КАК Количество,
	|	&Склад                                КАК Отправитель,
	|	&ПомещениеОтправитель                 КАК ПомещениеОтправителя,
	|	&Склад                                КАК Получатель,
	|	&ПомещениеПолучатель                  КАК ПомещениеПолучателя,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПеремещениеМеждуПомещениями) КАК СкладскаяОперация,
	|	&Ссылка                               КАК Документ,
	|	&Период                               КАК Период,
	|	ИСТИНА                                КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ОрдерНаПеремещениеТоваров.ОтгружаемыеТовары КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И (ТаблицаСерии.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отобрать)
	|	ИЛИ ТаблицаСерии.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаСерии.Номенклатура,
	|	ТаблицаСерии.Характеристика,
	|	ТаблицаСерии.Назначение,
	|	ТаблицаСерии.Серия,
	|	ТаблицаСерии.Количество,
	|	&Склад,
	|	&ПомещениеОтправитель,
	|	&Склад,
	|	&ПомещениеПолучатель,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ПеремещениеМеждуПомещениями),
	|	&Ссылка,
	|	&Период,
	|	ИСТИНА
	|ИЗ
	|	Документ.ОрдерНаПеремещениеТоваров.ОтгружаемыеТовары КАК ТаблицаСерии
	|ГДЕ
	|	ТаблицаСерии.Ссылка = &Ссылка
	|	И ТаблицаСерии.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	И &Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОрдеровНаПеремещение.Принят)
	|	И ТаблицаСерии.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.НеОтгружать)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	Если ПравоДоступа("Изменение", Метаданные.Документы.ОрдерНаПеремещениеТоваров) Тогда
		// Ордер на перемещение товаров
		КомандаПечати = КомандыПечати.Добавить();
		КомандаПечати.Идентификатор = "ОрдерНаПеремещениеТоваров";
		КомандаПечати.Представление = НСтр("ru='Ордер на перемещение товаров';uk='Ордер на переміщення товарів'");
		КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КонецЕсли;

	// Задание на размещение товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьЗаданияНаОтборРазмещениеТоваров";
	КомандаПечати.Идентификатор = "ЗаданиеНаОтборРазмещениеТовара";
	КомандаПечати.Представление = НСтр("ru='Задание на размещение товаров';uk='Завдання на розміщення товарів'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ИмяФормы", "ЗаданиеНаРазмещение");
	
	// Задание на отбор товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьЗаданияНаОтборРазмещениеТоваров";
	КомандаПечати.Идентификатор = "ЗаданиеНаОтборРазмещениеТовара";
	КомандаПечати.Представление = НСтр("ru='Задание на отбор товаров';uk='Завдання на відбір товарів'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.ДополнительныеПараметры.Вставить("ИмяФормы", "ЗаданиеНаОтбор");

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОрдерНаПеремещениеТоваров") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ОрдерНаПеремещениеТоваров",
			НСтр("ru='Перемещение между помещениями';uk='Переміщення між приміщеннями'"),
 			ПечатьПеремещенияТоваровМеждуПомещениями(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),,,,Истина);
	КонецЕсли;
КонецПроцедуры

Функция ПечатьПеремещенияТоваровМеждуПомещениями(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасходныйОрдерНаТовары_РасходныйОрдерНаТовары";
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
	
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента = НСтр("ru='Ордер на перемещение товаров';uk='Ордер на переміщення товарів'");
	
	ИспользоватьУпаковкиНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	
	ЗапросПоШапке = Новый Запрос;
	ЗапросПоШапке.Текст = 
	"ВЫБРАТЬ
	|	ОрдерНаПеремещениеТоваров.Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ОрдерНаПеремещениеТоваров.Склад) КАК ПредставлениеСклада,
	|	ПРЕДСТАВЛЕНИЕ(ОрдерНаПеремещениеТоваров.ПомещениеОтправитель) КАК ПредставлениеПомещенияОтправителя,
	|	ПРЕДСТАВЛЕНИЕ(ОрдерНаПеремещениеТоваров.ПомещениеПолучатель) КАК ПредставлениеПомещенияПолучателя,
	|	ПРЕДСТАВЛЕНИЕ(ОрдерНаПеремещениеТоваров.ЗонаОтгрузки) КАК ПредставлениеЗоныОтгрузки,
	|	ПРЕДСТАВЛЕНИЕ(ОрдерНаПеремещениеТоваров.ЗонаПриемки) КАК ПредставлениеЗоныПриемки,
	|	ОрдерНаПеремещениеТоваров.Дата,
	|	ОрдерНаПеремещениеТоваров.ДатаОтгрузки,
	|	ОрдерНаПеремещениеТоваров.Номер,
	|	ОрдерНаПеремещениеТоваров.Ответственный.ФизическоеЛицо КАК Ответственный,
	|	ОрдерНаПеремещениеТоваров.Склад КАК Склад,
	|	ОрдерНаПеремещениеТоваров.ПомещениеОтправитель КАК ПомещениеОтправитель,
	|	ОрдерНаПеремещениеТоваров.ПомещениеПолучатель КАК ПомещениеПолучатель,
	|	ОрдерНаПеремещениеТоваров.Склад.ИспользоватьСерииНоменклатуры КАК ИспользоватьСерииНоменклатуры
	|ИЗ
	|	Документ.ОрдерНаПеремещениеТоваров КАК ОрдерНаПеремещениеТоваров
	|ГДЕ
	|	ОрдерНаПеремещениеТоваров.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОрдерНаПеремещениеТоваров.Ссылка
	|ИТОГИ ПО
	|	ИспользоватьСерииНоменклатуры";
	
	ЗапросПоШапке.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	ДеревоОбъектов = ЗапросПоШапке.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для Каждого ИспользованиеСерий Из ДеревоОбъектов.Строки Цикл
						
		ЗапросПоТоварам = Новый Запрос;
		ЗапросПоТоварам.УстановитьПараметр("МассивОбъектов", ИспользованиеСерий.Строки.ВыгрузитьКолонку("Ссылка"));
		
		Если ИспользованиеСерий.ИспользоватьСерииНоменклатуры Тогда
			ТекстЗапросаПоТоварам = 
			"ВЫБРАТЬ
			|	ОрдерНаПеремещениеТоваровОтгружаемыеТовары.Ссылка КАК Ссылка,
			|	ОрдерНаПеремещениеТоваровОтгружаемыеТовары.Номенклатура КАК Номенклатура,
			|	ОрдерНаПеремещениеТоваровОтгружаемыеТовары.Характеристика КАК Характеристика,
			|	ОрдерНаПеремещениеТоваровОтгружаемыеТовары.Серия КАК Серия,
			|	ОрдерНаПеремещениеТоваровОтгружаемыеТовары.КоличествоУпаковок КАК КоличествоУпаковок,
			|	ОрдерНаПеремещениеТоваровОтгружаемыеТовары.Количество КАК Количество,
			|	ВЫБОР
			|		КОГДА ОрдерНаПеремещениеТоваровОтгружаемыеТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.НеОтгружать)
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК НеОтгружать,
			|	ОрдерНаПеремещениеТоваровОтгружаемыеТовары.Упаковка КАК Упаковка
			|ПОМЕСТИТЬ ТаблицаТоваров
			|ИЗ
			|	Документ.ОрдерНаПеремещениеТоваров.ОтгружаемыеТовары КАК ОрдерНаПеремещениеТоваровОтгружаемыеТовары
			|ГДЕ
			|	ОрдерНаПеремещениеТоваровОтгружаемыеТовары.Ссылка В(&МассивОбъектов)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТоваров.Ссылка КАК Ссылка,
			|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
			|	ТаблицаТоваров.Характеристика КАК Характеристика,
			|	ВЫБОР
			|		КОГДА ТаблицаТоваров.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
			|			ТОГДА NULL
			|		ИНАЧЕ ТаблицаТоваров.Серия
			|	КОНЕЦ КАК Серия,
			|	СУММА(ТаблицаТоваров.КоличествоУпаковок) КАК КоличествоУпаковок,
			|	СУММА(ТаблицаТоваров.Количество) КАК Количество,
			|	ТаблицаТоваров.НеОтгружать КАК НеОтгружать,
			|	ТаблицаТоваров.Упаковка КАК Упаковка
			|ПОМЕСТИТЬ СуммированнаяТаблицаТоваров
			|ИЗ
			|	ТаблицаТоваров КАК ТаблицаТоваров
			|
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаТоваров.Ссылка,
			|	ТаблицаТоваров.Номенклатура,
			|	ТаблицаТоваров.Характеристика,
			|	ВЫБОР
			|		КОГДА ТаблицаТоваров.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
			|			ТОГДА NULL
			|		ИНАЧЕ ТаблицаТоваров.Серия
			|	КОНЕЦ,
			|	ТаблицаТоваров.НеОтгружать,
			|	ТаблицаТоваров.Упаковка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаТоваров.Ссылка КАК Ссылка,
			|	" + ?(ВыводитьКоды, "ТаблицаТоваров.Номенклатура." + КолонкаКодов +" КАК ДопКолонка,", "") + "
			|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
			|	ТаблицаТоваров.Характеристика КАК Характеристика,
			|	ТаблицаТоваров.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
			|	ТаблицаТоваров.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
			|	ТаблицаТоваров.Серия.Наименование КАК ПредставлениеСерии,
			|	ТаблицаТоваров.КоличествоУпаковок,
			|	ТаблицаТоваров.Количество,
			|	ТаблицаТоваров.НеОтгружать КАК НеОтгружать,
			|	ПРЕДСТАВЛЕНИЕ(ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
			|	ВЫБОР
			|		КОГДА ТаблицаТоваров.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
			|			ТОГДА ПРЕДСТАВЛЕНИЕ(ТаблицаТоваров.Упаковка)
			|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения)
			|	КОНЕЦ КАК ПредставлениеЕдининицыИзмеренияУпаковки,
			|	ТаблицаТоваров.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий КАК НастройкаИспользованияСерий
			|ИЗ
			|	СуммированнаяТаблицаТоваров КАК ТаблицаТоваров
			|
			|УПОРЯДОЧИТЬ ПО
			|	Ссылка,
			|	ТаблицаТоваров.НеОтгружать,
			|	Номенклатура,
			|	Характеристика
			|ИТОГИ ПО
			|	Ссылка,
			|	НеОтгружать,
			|	Номенклатура,
			|	Характеристика
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ТаблицаТоваров.Ссылка КАК Ссылка,
			|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
			|	ТаблицаТоваров.Характеристика КАК Характеристика,
			|	ТаблицаТоваров.Серия.Наименование КАК ПредставлениеСерии,
			|	ТаблицаТоваров.НеОтгружать КАК НеОтгружать
			|ИЗ
			|	ТаблицаТоваров КАК ТаблицаТоваров
			|ГДЕ
			|	ТаблицаТоваров.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
			|	И НЕ ТаблицаТоваров.Серия ЕСТЬ NULL 
			|
			|УПОРЯДОЧИТЬ ПО
			|	Ссылка,
			|	НеОтгружать,
			|	Номенклатура,
			|	Характеристика,
			|	ПредставлениеСерии";
						
			ЗапросПоТоварам.Текст 	 = ТекстЗапросаПоТоварам;
			РезультатЗапроса		 = ЗапросПоТоварам.ВыполнитьПакет();
			ВыборкаПоТабличнымЧастям = РезультатЗапроса[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			ВыборкаПоСериям 		 = РезультатЗапроса[3].Выбрать();
					
		Иначе
			
			ТекстЗапросаПоТоварам = 
			"ВЫБРАТЬ
			|	ОрдерНаПеремещениеТоваровОтгружаемыеТовары.Ссылка КАК Ссылка,
			|	ОрдерНаПеремещениеТоваровОтгружаемыеТовары.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
			|	" + ?(ВыводитьКоды, "ОрдерНаПеремещениеТоваровОтгружаемыеТовары.Номенклатура." + КолонкаКодов +" КАК ДопКолонка,", "") + "
			|	ОрдерНаПеремещениеТоваровОтгружаемыеТовары.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
			|	"""" КАК ПредставлениеСерии,
			|	ОрдерНаПеремещениеТоваровОтгружаемыеТовары.КоличествоУпаковок,
			|	ОрдерНаПеремещениеТоваровОтгружаемыеТовары.Количество,
			|	ВЫБОР
			|		КОГДА ОрдерНаПеремещениеТоваровОтгружаемыеТовары.Действие = ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.НеОтгружать)
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК НеОтгружать,
			|	ПРЕДСТАВЛЕНИЕ(ОрдерНаПеремещениеТоваровОтгружаемыеТовары.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
			|	ВЫБОР
			|		КОГДА ОрдерНаПеремещениеТоваровОтгружаемыеТовары.Упаковка <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
			|			ТОГДА ПРЕДСТАВЛЕНИЕ(ОрдерНаПеремещениеТоваровОтгружаемыеТовары.Упаковка)
			|		ИНАЧЕ ПРЕДСТАВЛЕНИЕ(ОрдерНаПеремещениеТоваровОтгружаемыеТовары.Номенклатура.ЕдиницаИзмерения)
			|	КОНЕЦ КАК ПредставлениеЕдининицыИзмеренияУпаковки,
			|	ОрдерНаПеремещениеТоваровОтгружаемыеТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий КАК НастройкаИспользованияСерий
			|ИЗ
			|	Документ.ОрдерНаПеремещениеТоваров.ОтгружаемыеТовары КАК ОрдерНаПеремещениеТоваровОтгружаемыеТовары
			|ГДЕ
			|	ОрдерНаПеремещениеТоваровОтгружаемыеТовары.Ссылка В(&МассивОбъектов)
			|
			|УПОРЯДОЧИТЬ ПО
			|	Ссылка,
			|	Номенклатура,
			|	Характеристика
			|ИТОГИ ПО
			|	Ссылка,
			|	НеОтгружать,
			|	Номенклатура,
			|	Характеристика";
			
			ЗапросПоТоварам.Текст = ТекстЗапросаПоТоварам;
			ВыборкаПоТабличнымЧастям = ЗапросПоТоварам.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
		КонецЕсли;
	  
		ПервыйДокумент = Истина;
	
		Для Каждого ВыборкаПоДокументам Из ИспользованиеСерий.Строки Цикл
			
			Если НЕ ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаПоДокументам.Ссылка)) Тогда
				Продолжить;
			КонецЕсли;
			
			ИспользуетсяАдресноеХранениеОтправитель = СкладыСервер.ИспользоватьАдресноеХранение(
				ВыборкаПоДокументам.Склад,ВыборкаПоДокументам.ПомещениеОтправитель,ВыборкаПоДокументам.ДатаОтгрузки);
			ИспользуетсяАдресноеХранениеПолучатель  = СкладыСервер.ИспользоватьАдресноеХранение(
				ВыборкаПоДокументам.Склад,ВыборкаПоДокументам.ПомещениеПолучатель,ВыборкаПоДокументам.ДатаОтгрузки);
			
			ВыводитьУпаковки = ИспользоватьУпаковкиНоменклатуры Или ИспользуетсяАдресноеХранениеОтправитель Или ИспользуетсяАдресноеХранениеПолучатель;
			
			//Макет получаем в цикле,т.к. ширина колонок зависит от склада и помещения в документе
 			Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ОрдерНаПеремещениеТоваров.ПФ_MXL_ОрдерНаПеремещениеТоваров",КодЯзыкаПечать);
			
			ОбластьЗаголовок 		= Макет.ПолучитьОбласть("Заголовок");
			ОбластьШапка 			= Макет.ПолучитьОбласть("Шапка");
			
			ОбластьШапкаТаблицыНачало 	= Макет.ПолучитьОбласть("ШапкаТаблицы|НачалоСтроки");
			ОбластьСтрокаТаблицыНачало 	= Макет.ПолучитьОбласть("СтрокаТаблицы|НачалоСтроки");
			ОбластьПодвалТаблицыНачало 	= Макет.ПолучитьОбласть("ПодвалТаблицы|НачалоСтроки");
			
			ОбластьШапкаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
			ОбластьСтрокаТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаКодов");
			ОбластьПодвалТаблицыКолонкаКодов 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаКодов");
			
			ОбластьШапкаТаблицыКолонкаКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов; 
			
			ОбластьШапкаТаблицыКолонкаУпаковок 		= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаУпаковок");
			ОбластьСтрокаТаблицыКолонкаУпаковок 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаУпаковок");
			ОбластьПодвалТаблицыКолонкаУпаковок		= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаУпаковок");

			ОбластьПодписей = Макет.ПолучитьОбласть("Подписи");
			
			ОбластьЗаголовокНеОтгружать = Макет.ПолучитьОбласть("ЗаголовокНеОтгружать");
			
			ОбластьКолонкаТоваров = Макет.Область("КолонкаТоваров");
			
			Если НЕ ВыводитьКоды Тогда
				ОбластьКолонкаТоваров.ШиринаКолонки = ОбластьКолонкаТоваров.ШиринаКолонки + Макет.Область("КолонкаКодов").ШиринаКолонки;
			КонецЕсли;
			
			Если НЕ ВыводитьУпаковки Тогда
				ОбластьКолонкаТоваров.ШиринаКолонки = ОбластьКолонкаТоваров.ШиринаКолонки + Макет.Область("КолонкаУпаковокКоличество").ШиринаКолонки
				+ Макет.Область("КолонкаУпаковокПредставление").ШиринаКолонки; 		
			КонецЕсли;
			
			ОбластьШапкаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаТоваров");
			ОбластьСтрокаТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КолонкаТоваров");
			ОбластьПодвалТаблицыКолонкаТоваров 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КолонкаТоваров");
			
			ОбластьШапкаТаблицыКонец 	= Макет.ПолучитьОбласть("ШапкаТаблицы|КонецСтроки");
			ОбластьСтрокаТаблицыКонец 	= Макет.ПолучитьОбласть("СтрокаТаблицы|КонецСтроки");
			ОбластьПодвалТаблицыКонец 	= Макет.ПолучитьОбласть("ПодвалТаблицы|КонецСтроки");
			
			ВыборкаПоСтрокамТЧ = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			// Выведем шапку табличного документа
			ПервыйДокумент = Ложь;
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
				
			Если ИспользуетсяАдресноеХранениеОтправитель Тогда
				
				ТекстЗоныОтгрузки = НСтр("ru='Зона отгрузки:';uk= 'Зона відвантаження:'", КодЯзыкаПечать);
 				ЗонаОтгрузкиПредставление = ВыборкаПоДокументам.ПредставлениеЗоныОтгрузки;
				
			Иначе
				
				ТекстЗоныОтгрузки = "";
				ЗонаОтгрузкиПредставление = "";
				
			КонецЕсли;
			
			Если ИспользуетсяАдресноеХранениеПолучатель Тогда
				
				ТекстЗоныПриемки = НСтр("ru='Зона приемки:';uk= 'Зона приймання:'", КодЯзыкаПечать);
				ЗонаПриемкиПредставление = ВыборкаПоДокументам.ПредставлениеЗоныПриемки;
				
			Иначе
				
				ТекстЗоныПриемки = "";
				ЗонаПриемкиПредставление = "";
				
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(РеквизитыДокумента,ВыборкаПоДокументам);
			
			ОбластьЗаголовок.Параметры.ТекстЗаголовка = Локализация.ПолучитьЛокализованноеПредставление(ВыборкаПоДокументам.Ссылка, КодЯзыкаПечать);
 			
			ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьЗаголовок, ВыборкаПоДокументам.Ссылка);
			ТабличныйДокумент.Вывести(ОбластьЗаголовок);
			
			ОбластьШапка.Параметры.Заполнить(ВыборкаПоДокументам);	
			ОбластьШапка.Параметры.ТекстЗоныПриемки 			= ТекстЗоныПриемки;
			ОбластьШапка.Параметры.ПредставлениеЗоныПриемки 	= ЗонаПриемкиПредставление;
			ОбластьШапка.Параметры.ТекстЗоныОтгрузки 			= ТекстЗоныОтгрузки;
			ОбластьШапка.Параметры.ПредставлениеЗоныОтгрузки 	= ЗонаОтгрузкиПредставление;
			
			ТабличныйДокумент.Вывести(ОбластьШапка);
			
			// Выведем шапку таблицы номенклатуры
			ВывестиСтрокуТаблицыТоваров(
				ТабличныйДокумент, ВыводитьКоды, ВыводитьУпаковки,
				ОбластьШапкаТаблицыНачало, ОбластьШапкаТаблицыКолонкаКодов, ОбластьШапкаТаблицыКолонкаТоваров, ОбластьШапкаТаблицыКолонкаУпаковок, ОбластьШапкаТаблицыКонец);

			ВсегоНаименований = 0;
			
			// Создадим табличный документ для неотгружаемой номенклатуры
			ТабличныйДокументНеОтгружать = Новый ТабличныйДокумент;
			ВсегоНаименованийНеОтгружать = 0;
			
			ВыборкаПоПараметруНеОтгружать = ВыборкаПоТабличнымЧастям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаПоПараметруНеОтгружать.Следующий() Цикл
				
				ВыборкаПоСсылкамТЧ = ВыборкаПоПараметруНеОтгружать.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаПоСсылкамТЧ.Следующий() Цикл
					
					ВыборкаПоНоменклатуреТЧ = ВыборкаПоСсылкамТЧ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Пока ВыборкаПоНоменклатуреТЧ.Следующий() Цикл
						
						ВыборкаПоСтрокамТЧ = ВыборкаПоНоменклатуреТЧ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						
						ПерваяСтрока = Истина;
						СтрокаУпаковок = "";
						СтрокаКоличесткаУпаковок = "";
						СтрокаЕдиницИзмерений = "";
						СтрокаКоличества = "";
						
						Пока ВыборкаПоСтрокамТЧ.Следующий() Цикл
							
							Если ВыборкаПоСтрокамТЧ.НастройкаИспользованияСерий = Перечисления.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара Тогда
								
								Если ПерваяСтрока Тогда
									
									// Определим, в какой табличный документ выводим номенклатуру
									Если ВыборкаПоСтрокамТЧ.НеОтгружать = 0 Тогда
										ТабличныйДокументДляВыводаСтроки = ТабличныйДокумент;
										ВсегоНаименований 				 = ВсегоНаименований + 1;
										НомерСтроки 					 = ВсегоНаименований;
									Иначе
										ТабличныйДокументДляВыводаСтроки = ТабличныйДокументНеОтгружать;
										ВсегоНаименованийНеОтгружать 	 = ВсегоНаименованийНеОтгружать + 1;
										НомерСтроки 					 = ВсегоНаименованийНеОтгружать;
									КонецЕсли;
									
									ОбластьСтрокаТаблицыНачало.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
									ОбластьСтрокаТаблицыНачало.Параметры.НомерСтроки = НомерСтроки;
									
									Если ВыводитьКоды Тогда
										ОбластьСтрокаТаблицыКолонкаКодов.Параметры.Артикул = ВыборкаПоСтрокамТЧ.ДопКолонка;
									КонецЕсли;
									
									СтруктураПоиска = Новый Структура;
									СтруктураПоиска.Вставить("Ссылка", ВыборкаПоСтрокамТЧ.Ссылка);
									СтруктураПоиска.Вставить("Номенклатура", ВыборкаПоСтрокамТЧ.Номенклатура);
									СтруктураПоиска.Вставить("Характеристика", ВыборкаПоСтрокамТЧ.Характеристика);
									СтруктураПоиска.Вставить("НеОтгружать", ВыборкаПоСтрокамТЧ.НеОтгружать);
									
									СтрокаСерий = "";
									Пока ВыборкаПоСериям.НайтиСледующий(СтруктураПоиска) Цикл
										СтрокаСерий = СтрокаСерий + ВыборкаПоСериям.ПредставлениеСерии + ", ";
									КонецЦикла;
									
									Если СтрДлина(СтрокаСерий) <> 0 Тогда
										СтрокаСерий = Лев(СтрокаСерий, СтрДлина(СтрокаСерий) - 2);
									КонецЕсли;
									
									ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
										ВыборкаПоСтрокамТЧ.ПредставлениеНоменклатуры,
										ВыборкаПоСтрокамТЧ.ПредставлениеХарактеристики,
										, // Упаковка
										СтрокаСерий);
									
									ПерваяСтрока = Ложь;
									
									ТоварССериейЭкземпляром = Истина;
									
								КонецЕсли;
								
								Если ВыводитьУпаковки Тогда
									СтрокаУпаковок = СтрокаУпаковок + ВыборкаПоСтрокамТЧ.ПредставлениеЕдининицыИзмеренияУпаковки + Символы.ПС;
									СтрокаКоличесткаУпаковок = СтрокаКоличесткаУпаковок + ВыборкаПоСтрокамТЧ.КоличествоУпаковок + Символы.ПС;
								КонецЕсли;
								
								СтрокаЕдиницИзмерений = СтрокаЕдиницИзмерений + ВыборкаПоСтрокамТЧ.ПредставлениеБазовойЕдиницыИзмерения + Символы.ПС;
								СтрокаКоличества = СтрокаКоличества + ВыборкаПоСтрокамТЧ.Количество + Символы.ПС;
								
							Иначе
								
								// Определим, в какой табличный документ выводим номенклатуру
								Если ВыборкаПоСтрокамТЧ.НеОтгружать = 0 Тогда
									ТабличныйДокументДляВыводаСтроки = ТабличныйДокумент;
									ВсегоНаименований 				 = ВсегоНаименований + 1;
									НомерСтроки 					 = ВсегоНаименований;
								Иначе
									ТабличныйДокументДляВыводаСтроки = ТабличныйДокументНеОтгружать;
									ВсегоНаименованийНеОтгружать 	 = ВсегоНаименованийНеОтгружать + 1;
									НомерСтроки 					 = ВсегоНаименованийНеОтгружать;
								КонецЕсли;
								
								ОбластьСтрокаТаблицыНачало.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
								ОбластьСтрокаТаблицыНачало.Параметры.НомерСтроки = НомерСтроки;
								
								Если ВыводитьКоды Тогда
									ОбластьСтрокаТаблицыКолонкаКодов.Параметры.Артикул = ВыборкаПоСтрокамТЧ.ДопКолонка;
								КонецЕсли;
								
								ОбластьСтрокаТаблицыКолонкаТоваров.Параметры.Товар = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
									ВыборкаПоСтрокамТЧ.ПредставлениеНоменклатуры,
									ВыборкаПоСтрокамТЧ.ПредставлениеХарактеристики,
									, // Упаковка
									ВыборкаПоСтрокамТЧ.ПредставлениеСерии);
								
								Если ВыводитьУпаковки Тогда
									ОбластьСтрокаТаблицыКолонкаУпаковок.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
								КонецЕсли;
								
								ОбластьСтрокаТаблицыКонец.Параметры.Заполнить(ВыборкаПоСтрокамТЧ);
								
								ВывестиСтрокуТаблицыТоваров(ТабличныйДокументДляВыводаСтроки, ВыводитьКоды, ВыводитьУпаковки,
									ОбластьСтрокаТаблицыНачало, ОбластьСтрокаТаблицыКолонкаКодов,
									ОбластьСтрокаТаблицыКолонкаТоваров, ОбластьСтрокаТаблицыКолонкаУпаковок, ОбластьСтрокаТаблицыКонец);
									
								ТоварССериейЭкземпляром = Ложь;	
									
							КонецЕсли;
						КонецЦикла;
						
						Если ТоварССериейЭкземпляром Тогда
							
							Если ВыводитьУпаковки Тогда
								ОбластьСтрокаТаблицыКолонкаУпаковок.Параметры.КоличествоУпаковок = СтрокаКоличесткаУпаковок;
								ОбластьСтрокаТаблицыКолонкаУпаковок.Параметры.ПредставлениеЕдининицыИзмеренияУпаковки = СтрокаУпаковок;
							КонецЕсли;
							
							ОбластьСтрокаТаблицыКонец.Параметры.Количество = СтрокаКоличества;
							ОбластьСтрокаТаблицыКонец.Параметры.ПредставлениеБазовойЕдиницыИзмерения = СтрокаЕдиницИзмерений;
							
							ВывестиСтрокуТаблицыТоваров(ТабличныйДокументДляВыводаСтроки, ВыводитьКоды, ВыводитьУпаковки,
								ОбластьСтрокаТаблицыНачало, ОбластьСтрокаТаблицыКолонкаКодов,
								ОбластьСтрокаТаблицыКолонкаТоваров, ОбластьСтрокаТаблицыКолонкаУпаковок, ОбластьСтрокаТаблицыКонец);
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЦикла;
						
			// Выведем подвал таблицы и подписи
			ВывестиСтрокуТаблицыТоваров(
				ТабличныйДокумент, ВыводитьКоды, ВыводитьУпаковки,
				ОбластьПодвалТаблицыНачало, ОбластьПодвалТаблицыКолонкаКодов, ОбластьПодвалТаблицыКолонкаТоваров, ОбластьПодвалТаблицыКолонкаУпаковок, ОбластьПодвалТаблицыКонец);
			
			ОбластьПодписей.Параметры.ПредставлениеОтветственного = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ВыборкаПоДокументам.Ответственный, ВыборкаПоДокументам.Дата);
			
			ТабличныйДокумент.Вывести(ОбластьПодписей);
			
			// Дополним основной табличный документ таблицей неотгружаемой номенклатуры
			Если ВсегоНаименованийНеОтгружать > 0 Тогда
				
				// Выведем заголовок и шапку таблицы неотгружаемой номенклатуры
				ТекстЗаголовка = НСтр("ru='В зоне отгрузки необходимо оставить следующие позиции товаров';uk='В зоні відвантаження необхідно залишити наступні позиції товарів'");
				ОбластьЗаголовокНеОтгружать.Параметры.ТекстЗаголовка = ТекстЗаголовка;
				ТабличныйДокумент.Вывести(ОбластьЗаголовокНеОтгружать);
				
				ВывестиСтрокуТаблицыТоваров(
					ТабличныйДокумент, ВыводитьКоды, ВыводитьУпаковки,
					ОбластьШапкаТаблицыНачало, ОбластьШапкаТаблицыКолонкаКодов, ОбластьШапкаТаблицыКолонкаТоваров, ОбластьШапкаТаблицыКолонкаУпаковок, ОбластьШапкаТаблицыКонец);
				
				// Присоединим таблицу неотгружаемой номенклатуры к основному табличному документу
				ТабличныйДокумент.Вывести(ТабличныйДокументНеОтгружать);
				
				// Выведем подвал таблицы неотгружаемой номенклатуры
				ВывестиСтрокуТаблицыТоваров(
					ТабличныйДокумент, ВыводитьКоды, ВыводитьУпаковки,
					ОбластьПодвалТаблицыНачало, ОбластьПодвалТаблицыКолонкаКодов, ОбластьПодвалТаблицыКолонкаТоваров, ОбластьПодвалТаблицыКолонкаУпаковок, ОбластьПодвалТаблицыКонец);
				
			КонецЕсли;
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаПоДокументам.Ссылка);
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабличныйДокумент;	
	
КонецФункции

Процедура ВывестиСтрокуТаблицыТоваров(ТабличныйДокумент, ВыводитьКоды, ВыводитьУпаковки,
				ОбластьНачало, ОбластьКолонкаКодов, ОбластьКолонкаТоваров, ОбластьКолонкаУпаковок, ОбластьКонец)
	
	ТабличныйДокумент.Вывести(ОбластьНачало);
	
	Если ВыводитьКоды Тогда
		ТабличныйДокумент.Присоединить(ОбластьКолонкаКодов);
	КонецЕсли;
	
	ТабличныйДокумент.Присоединить(ОбластьКолонкаТоваров);
	
	Если ВыводитьУпаковки Тогда
		ТабличныйДокумент.Присоединить(ОбластьКолонкаУпаковок);
	КонецЕсли;
	
	ТабличныйДокумент.Присоединить(ОбластьКонец);
	
КонецПроцедуры

Функция ПолучитьДанныеДляПечатнойФормыОтборРазмещениеТоваров(ПараметрыПечати, МассивДокументов) Экспорт
	
	ВидПомещения = ?(ПараметрыПечати.ИмяФормы = "ЗаданиеНаРазмещение" , "Получатель", "Отправитель");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОрдерНаПеремещениеТоваров.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ОрдерНаПеремещениеТоваров.Ссылка) КАК СсылкаПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ОрдерНаПеремещениеТоваров.Склад) КАК СкладПредставление,
	|	ОрдерНаПеремещениеТоваров.Склад КАК Склад,
	|	ПРЕДСТАВЛЕНИЕ(ОрдерНаПеремещениеТоваров.ПомещениеОтправитель) КАК ПомещениеПредставление,
	|	ОрдерНаПеремещениеТоваров.Дата КАК Дата,
	|	ОрдерНаПеремещениеТоваров.Номер КАК Номер,
	|	ЛОЖЬ КАК НарушенаОрдернаяСхема,
	|	ВЫБОР
	|		КОГДА ОрдерНаПеремещениеТоваров.Склад.ИспользоватьСкладскиеПомещения
	|				И ОрдерНаПеремещениеТоваров.Дата >= ОрдерНаПеремещениеТоваров.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|			ТОГДА ВЫБОР
	|					КОГДА ОрдерНаПеремещениеТоваров.ПомещениеОтправитель.ИспользоватьАдресноеХранениеСправочно
	|							И (НЕ ОрдерНаПеремещениеТоваров.ПомещениеОтправитель.ИспользоватьАдресноеХранение
	|								ИЛИ ОрдерНаПеремещениеТоваров.ДатаОтгрузки < ОрдерНаПеремещениеТоваров.ПомещениеОтправитель.ДатаНачалаАдресногоХраненияОстатков)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ОрдерНаПеремещениеТоваров.Склад.ИспользоватьАдресноеХранениеСправочно
	|						И (НЕ ОрдерНаПеремещениеТоваров.Склад.ИспользоватьАдресноеХранение
	|							ИЛИ ОрдерНаПеремещениеТоваров.ДатаОтгрузки < ОрдерНаПеремещениеТоваров.Склад.ДатаНачалаАдресногоХраненияОстатков)
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|	КОНЕЦ КАК ИспользуетсяСправочноеХранение,
	|	NULL КАК ВидОперации,
	|	ОрдерНаПеремещениеТоваров.Склад.ИспользоватьСерииНоменклатуры КАК ИспользоватьСерииНоменклатуры,
	|	ВЫБОР
	|		КОГДА ОрдерНаПеремещениеТоваров.Склад.ИспользоватьСкладскиеПомещения
	|				И ОрдерНаПеремещениеТоваров.ДатаОтгрузки >= ОрдерНаПеремещениеТоваров.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|			ТОГДА ОрдерНаПеремещениеТоваров.ПомещениеОтправитель.ИспользованиеРабочихУчастков
	|		ИНАЧЕ ОрдерНаПеремещениеТоваров.Склад.ИспользованиеРабочихУчастков
	|	КОНЕЦ КАК ИспользованиеРабочихУчастков,
	|	ВЫБОР
	|		КОГДА ОрдерНаПеремещениеТоваров.Склад.ИспользоватьСкладскиеПомещения
	|				И ОрдерНаПеремещениеТоваров.Дата >= ОрдерНаПеремещениеТоваров.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|			ТОГДА ВЫБОР
	|					КОГДА ОрдерНаПеремещениеТоваров.ПомещениеОтправитель.ИспользоватьАдресноеХранение
	|								И ОрдерНаПеремещениеТоваров.Дата >= ОрдерНаПеремещениеТоваров.ПомещениеОтправитель.ДатаНачалаАдресногоХраненияОстатков
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ОрдерНаПеремещениеТоваров.Склад.ИспользоватьАдресноеХранение
	|							И ОрдерНаПеремещениеТоваров.Дата >= ОрдерНаПеремещениеТоваров.Склад.ДатаНачалаАдресногоХраненияОстатков
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|	КОНЕЦ КАК ИспользуетсяАдресноеХранение
	|ИЗ
	|	Документ.ОрдерНаПеремещениеТоваров КАК ОрдерНаПеремещениеТоваров
	|ГДЕ
	|	ОрдерНаПеремещениеТоваров.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия КАК Серия,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).НаборУпаковок КАК НаборУпаковок,
	|	ТаблицаТовары.Количество КАК Количество
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.ОрдерНаПеремещениеТоваров.ОтгружаемыеТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов) 
	|	И ТаблицаТовары.Действие <> ЗНАЧЕНИЕ(Перечисление.ДействияСоСтрокамиОрдеровНаОтгрузку.НеОтгружать)
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	МИНИМУМ(ТаблицаТовары.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаТовары.Ссылка.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА NULL
	|		ИНАЧЕ ТаблицаТовары.Серия
	|	КОНЕЦ КАК Серия,
	|	ТаблицаТовары.НаборУпаковок КАК НаборУпаковок,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Упаковка,
	|	СУММА(ТаблицаТовары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТаблицаТоваровСуммированная
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Ссылка,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА NULL
	|		ИНАЧЕ ТаблицаТовары.Серия
	|	КОНЕЦ,
	|	ТаблицаТовары.НаборУпаковок,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|			ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ТаблицаТовары.Ссылка.Склад
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваровСуммированная.Ссылка КАК Ссылка,
	|	ТаблицаТоваровСуммированная.Склад КАК Склад,
	|	ТаблицаТоваровСуммированная.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваровСуммированная.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваровСуммированная.Характеристика КАК Характеристика,
	|	ТаблицаТоваровСуммированная.Серия КАК Серия,
	|	ТаблицаТоваровСуммированная.Номенклатура.Код КАК Код,
	|	ТаблицаТоваровСуммированная.Номенклатура.Артикул КАК Артикул,
	|	ТаблицаТоваровСуммированная.Номенклатура.НаименованиеПолное КАК ПредставлениеНоменклатуры,
	|	ТаблицаТоваровСуммированная.Характеристика.НаименованиеПолное КАК ПредставлениеХарактеристики,
	|	ТаблицаТоваровСуммированная.Серия.Наименование КАК ПредставлениеСерии,
	|	ТаблицаТоваровСуммированная.Количество КАК Количество,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТоваровСуммированная.Номенклатура.ЕдиницаИзмерения) КАК ПредставлениеБазовойЕдиницыИзмерения,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбхода,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка, ЗНАЧЕНИЕ(Справочник.СкладскиеЯчейки.ПустаяСсылка)) КАК ОсновнаяЯчейка,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.ПорядокОбхода, 0) КАК ПорядокОбходаДополнительнаяЯчейка,
	|	ПРЕДСТАВЛЕНИЕ(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток) КАК ПредставлениеРабочегоУчастка,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.Код, """") КАК ОсновнаяЯчейкаПредставление,
	|	ЕСТЬNULL(РазмещениеОстальныеЯчейки.Ячейка.Код, """") КАК ЯчейкаПредставление,
	|	ТаблицаТоваровСуммированная.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий КАК НастройкаИспользованияСерий,
	|	ТаблицаТоваровСуммированная.Количество КАК КоличествоУпаковок,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТоваровСуммированная.Упаковка) КАК ПредставлениеЕдининицыИзмеренияУпаковки
	|ИЗ
	|	ТаблицаТоваровСуммированная КАК ТаблицаТоваровСуммированная
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТоваровСуммированная.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТоваровСуммированная.Склад)
	|			И (ВЫБОР
	|				КОГДА ТаблицаТоваровСуммированная.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|						И ТаблицаТоваровСуммированная.Ссылка.ДатаОтгрузки >= ТаблицаТоваровСуммированная.Ссылка.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|					ТОГДА РазмещениеОсновнаяЯчейка.Помещение = ТаблицаТоваровСуммированная.Ссылка.ПомещениеОтправитель
	|				ИНАЧЕ РазмещениеОсновнаяЯчейка.Помещение = ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)
	|			КОНЕЦ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОстальныеЯчейки
	|		ПО ТаблицаТоваровСуммированная.Номенклатура = РазмещениеОстальныеЯчейки.Номенклатура
	|			И (РазмещениеОстальныеЯчейки.ОсновнаяЯчейка = ЛОЖЬ)
	|			И (РазмещениеОстальныеЯчейки.Склад = ТаблицаТоваровСуммированная.Склад)
	|			И (ВЫБОР
	|				КОГДА ТаблицаТоваровСуммированная.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|						И ТаблицаТоваровСуммированная.Ссылка.ДатаОтгрузки >= ТаблицаТоваровСуммированная.Ссылка.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|					ТОГДА РазмещениеОстальныеЯчейки.Помещение = ТаблицаТоваровСуммированная.Ссылка.ПомещениеОтправитель
	|				ИНАЧЕ РазмещениеОстальныеЯчейки.Помещение = ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)
	|			КОНЕЦ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки,
	|	Номенклатура,
	|	Характеристика,
	|	Серия
	|ИТОГИ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваровСуммированная.Ссылка КАК Ссылка,
	|	ТаблицаТоваровСуммированная.Склад КАК Склад,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток,
	|	ТаблицаТоваровСуммированная.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоличествоВУпаковке,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.Ссылка, ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)) КАК Упаковка,
	|	ЕСТЬNULL(УпаковкиНоменклатуры.ЕдиницаИзмерения.Представление, ПРЕДСТАВЛЕНИЕ(ТаблицаТоваровСуммированная.Номенклатура.ЕдиницаИзмерения)) КАК ПредставлениеЕдининицыИзмеренияУпаковки
	|ИЗ
	|	ТаблицаТоваровСуммированная КАК ТаблицаТоваровСуммированная
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиНоменклатуры
	|		ПО (ТаблицаТоваровСуммированная.Номенклатура = УпаковкиНоменклатуры.Владелец
	|				ИЛИ ТаблицаТоваровСуммированная.НаборУпаковок = УпаковкиНоменклатуры.Владелец)
	|			И (НЕ УпаковкиНоменклатуры.ПометкаУдаления)
	|			И ТаблицаТоваровСуммированная.Количество >= &ТекстЗапросаКоэффициентУпаковки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТоваровСуммированная.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТоваровСуммированная.Склад)
	|			И (ВЫБОР
	|				КОГДА ТаблицаТоваровСуммированная.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|						И ТаблицаТоваровСуммированная.Ссылка.ДатаОтгрузки >= ТаблицаТоваровСуммированная.Ссылка.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|					ТОГДА РазмещениеОсновнаяЯчейка.Помещение = ТаблицаТоваровСуммированная.Ссылка.ПомещениеОтправитель
	|				ИНАЧЕ РазмещениеОсновнаяЯчейка.Помещение = ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)
	|			КОНЕЦ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	НомерСтроки,
	|	КоличествоВУпаковке УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Ссылка КАК Ссылка,
	|	ТаблицаТовары.Ссылка.Склад КАК Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия.Наименование КАК ПредставлениеСерии,
	|	ЕСТЬNULL(РазмещениеОсновнаяЯчейка.Ячейка.РабочийУчасток, ЗНАЧЕНИЕ(Справочник.РабочиеУчастки.ПустаяСсылка)) КАК РабочийУчасток
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмещениеНоменклатурыПоСкладскимЯчейкам КАК РазмещениеОсновнаяЯчейка
	|		ПО ТаблицаТовары.Номенклатура = РазмещениеОсновнаяЯчейка.Номенклатура
	|			И (РазмещениеОсновнаяЯчейка.ОсновнаяЯчейка = ИСТИНА)
	|			И (РазмещениеОсновнаяЯчейка.Склад = ТаблицаТовары.Ссылка.Склад)
	|			И (ВЫБОР
	|				КОГДА ТаблицаТовары.Ссылка.Склад.ИспользоватьСкладскиеПомещения
	|						И ТаблицаТовары.Ссылка.ДатаОтгрузки >= ТаблицаТовары.Ссылка.Склад.ДатаНачалаИспользованияСкладскихПомещений
	|					ТОГДА РазмещениеОсновнаяЯчейка.Помещение = ТаблицаТовары.Ссылка.ПомещениеОтправитель
	|				ИНАЧЕ РазмещениеОсновнаяЯчейка.Помещение = ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)
	|			КОНЕЦ)
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ВидНоменклатуры.НастройкаИспользованияСерий = ЗНАЧЕНИЕ(Перечисление.НастройкиИспользованияСерийНоменклатуры.ЭкземплярТовара)
	|	И НЕ ТаблицаТовары.Серия ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Склад,
	|	РабочийУчасток,
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПомещениеОтправитель", "Помещение" + ВидПомещения);
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"УпаковкиНоменклатуры",
			"ТаблицаТоваровСуммированная.Номенклатура"));
			
	Запрос.УстановитьПараметр("МассивОбъектов", МассивДокументов); 
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[0];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[3];
	РезультатПоУпаковкам 		= МассивРезультатов[4];
	РезультатПоСериям 			= МассивРезультатов[5];
	СтруктураДанныхДляПечати 	= Новый Структура("РезультатПоШапке, РезультатПоТабличнойЧасти, РезультатПоУпаковкам, РезультатПоСериям",
													РезультатПоШапке,
													РезультатПоТабличнойЧасти,
													РезультатПоУпаковкам,
													РезультатПоСериям);
	
	Возврат СтруктураДанныхДляПечати;
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы


Процедура ЗаполнитьОтгружаемыеТоварыОрдерНаПеремещениеТоваровОтложенноОтметитьКОбработке(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОрдерНаПеремещениеТоваровУдалитьТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ОрдерНаПеремещениеТоваров.УдалитьТовары КАК ОрдерНаПеремещениеТоваровУдалитьТовары";
	
	Данные = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ОбновлениеИнформационнойБазы.ОтметитьКОбработке(Параметры, Данные);
	
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.2
// Заполняет табличную часть "ОтгружаемыеТовары" по табличным частям "УдалитьТовары" и "УдалитьСерии" отложенно.
Процедура ЗаполнитьОтгружаемыеТоварыОрдерНаПеремещениеТоваровОтложенно(Параметры) Экспорт
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	
	ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуСсылокДляОбработки(
        Параметры.Очередь,
		"Документ.ОрдерНаПеремещениеТоваров",
		МенеджерВТ
    );
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОрдерНаПеремещениеТоваровСерии.Ссылка,
	|	ОрдерНаПеремещениеТоваровСерии.Ссылка.Статус,
	|	ОрдерНаПеремещениеТоваровТовары.Ссылка.Склад КАК Склад,
	|	ОрдерНаПеремещениеТоваровСерии.Номенклатура,
	|	ОрдерНаПеремещениеТоваровСерии.Характеристика,
	|	ОрдерНаПеремещениеТоваровСерии.Упаковка КАК Упаковка,
	|	ОрдерНаПеремещениеТоваровСерии.Назначение,
	|	ОрдерНаПеремещениеТоваровСерии.Серия,
	|	ОрдерНаПеремещениеТоваровТовары.СтатусУказанияСерий,
	|	ОрдерНаПеремещениеТоваровСерии.НеОтгружать,
	|	МАКСИМУМ(ОрдерНаПеремещениеТоваровСерии.КоличествоУпаковок) КАК КоличествоУпаковок,
	|	МАКСИМУМ(ОрдерНаПеремещениеТоваровСерии.Количество) КАК Количество,
	|	ОрдерНаПеремещениеТоваровТовары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ОрдерНаПеремещениеТоваровТовары
	|ИЗ
	|	Документ.ОрдерНаПеремещениеТоваров.УдалитьТовары КАК ОрдерНаПеремещениеТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОрдерНаПеремещениеТоваров.УдалитьСерии КАК ОрдерНаПеремещениеТоваровСерии
	|		ПО (ОрдерНаПеремещениеТоваровСерии.Ссылка = ОрдерНаПеремещениеТоваровТовары.Ссылка)
	|			И (ОрдерНаПеремещениеТоваровСерии.Номенклатура = ОрдерНаПеремещениеТоваровТовары.Номенклатура)
	|			И (ОрдерНаПеремещениеТоваровСерии.Характеристика = ОрдерНаПеремещениеТоваровТовары.Характеристика)
	|			И (ОрдерНаПеремещениеТоваровСерии.Назначение = ОрдерНаПеремещениеТоваровТовары.Назначение)
	|			И (ОрдерНаПеремещениеТоваровСерии.Упаковка = ОрдерНаПеремещениеТоваровТовары.Упаковка
	|				ИЛИ НЕ(ОрдерНаПеремещениеТоваровТовары.Ссылка.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыОрдеровНаПеремещение.КОтбору)
	|							И ВЫБОР
	|								КОГДА ОрдерНаПеремещениеТоваровТовары.Ссылка.ПомещениеОтправитель.ИспользоватьАдресноеХранение
	|										И ОрдерНаПеремещениеТоваровТовары.Ссылка.ДатаОтгрузки >= ОрдерНаПеремещениеТоваровТовары.Ссылка.ПомещениеОтправитель.ДатаНачалаАдресногоХраненияОстатков
	|									ТОГДА ИСТИНА
	|								ИНАЧЕ ЛОЖЬ
	|							КОНЕЦ
	|						ИЛИ ОрдерНаПеремещениеТоваровТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОрдеровНаПеремещение.Принят)
	|							И ВЫБОР
	|								КОГДА ОрдерНаПеремещениеТоваровТовары.Ссылка.ПомещениеПолучатель.ИспользоватьАдресноеХранение
	|										И ОрдерНаПеремещениеТоваровТовары.Ссылка.ДатаОтгрузки >= ОрдерНаПеремещениеТоваровТовары.Ссылка.ПомещениеПолучатель.ДатаНачалаАдресногоХраненияОстатков
	|									ТОГДА ИСТИНА
	|								ИНАЧЕ ЛОЖЬ
	|							КОНЕЦ))
	|			И ОрдерНаПеремещениеТоваровТовары.НеОтгружать = ОрдерНаПеремещениеТоваровСерии.НеОтгружать
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляОбработкиОрдерНаПеремещениеТоваров КАК ОрдераДляОбработки
	|		ПО ОрдерНаПеремещениеТоваровТовары.Ссылка = ОрдераДляОбработки.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ОрдерНаПеремещениеТоваровСерии.Назначение,
	|	ОрдерНаПеремещениеТоваровСерии.Номенклатура,
	|	ОрдерНаПеремещениеТоваровТовары.Ссылка.Склад,
	|	ОрдерНаПеремещениеТоваровСерии.Серия,
	|	ОрдерНаПеремещениеТоваровСерии.Характеристика,
	|	ОрдерНаПеремещениеТоваровСерии.Упаковка,
	|	ОрдерНаПеремещениеТоваровСерии.Ссылка,
	|	ОрдерНаПеремещениеТоваровСерии.Ссылка.Статус,
	|	ОрдерНаПеремещениеТоваровСерии.НомерСтроки,
	|	ОрдерНаПеремещениеТоваровТовары.СтатусУказанияСерий,
	|	ОрдерНаПеремещениеТоваровСерии.НеОтгружать,
	|	ОрдерНаПеремещениеТоваровТовары.НомерСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОрдерНаПеремещениеТоваровТовары.Ссылка,
	|	ОрдерНаПеремещениеТоваровТовары.Ссылка.Статус,
	|	ОрдерНаПеремещениеТоваровТовары.Ссылка.Склад,
	|	ОрдерНаПеремещениеТоваровТовары.Номенклатура,
	|	ОрдерНаПеремещениеТоваровТовары.Характеристика,
	|	ОрдерНаПеремещениеТоваровТовары.Упаковка,
	|	ОрдерНаПеремещениеТоваровТовары.Назначение,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка),
	|	ОрдерНаПеремещениеТоваровТовары.СтатусУказанияСерий,
	|	ОрдерНаПеремещениеТоваровТовары.НеОтгружать,
	|	СУММА(ОрдерНаПеремещениеТоваровТовары.КоличествоУпаковок),
	|	СУММА(ОрдерНаПеремещениеТоваровТовары.Количество),
	|	ОрдерНаПеремещениеТоваровТовары.НомерСтроки
	|ИЗ
	|	Документ.ОрдерНаПеремещениеТоваров.УдалитьТовары КАК ОрдерНаПеремещениеТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляОбработкиОрдерНаПеремещениеТоваров КАК ОрдераДляОбработки
	|		ПО ОрдерНаПеремещениеТоваровТовары.Ссылка = ОрдераДляОбработки.Ссылка
	|ГДЕ
	|	НЕ ОрдерНаПеремещениеТоваровТовары.СтатусУказанияСерий В (2, 4, 6, 8, 10, 14)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОрдерНаПеремещениеТоваровТовары.Упаковка,
	|	ОрдерНаПеремещениеТоваровТовары.Номенклатура,
	|	ОрдерНаПеремещениеТоваровТовары.Ссылка,
	|	ОрдерНаПеремещениеТоваровТовары.Ссылка.Статус,
	|	ОрдерНаПеремещениеТоваровТовары.Назначение,
	|	ОрдерНаПеремещениеТоваровТовары.Характеристика,
	|	ОрдерНаПеремещениеТоваровТовары.НеОтгружать,
	|	ОрдерНаПеремещениеТоваровТовары.СтатусУказанияСерий,
	|	ОрдерНаПеремещениеТоваровТовары.Ссылка.Склад,
	|	ОрдерНаПеремещениеТоваровТовары.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОрдерНаПеремещениеТоваровТовары.Ссылка КАК Ссылка,
	|	ОрдерНаПеремещениеТоваровТовары.Статус,
	|	ОрдерНаПеремещениеТоваровТовары.Склад,
	|	ОрдерНаПеремещениеТоваровТовары.Номенклатура,
	|	ОрдерНаПеремещениеТоваровТовары.Характеристика,
	|	ОрдерНаПеремещениеТоваровТовары.Упаковка,
	|	ОрдерНаПеремещениеТоваровТовары.Назначение,
	|	ОрдерНаПеремещениеТоваровТовары.Серия,
	|	ОрдерНаПеремещениеТоваровТовары.СтатусУказанияСерий,
	|	ОрдерНаПеремещениеТоваровТовары.НеОтгружать,
	|	ОрдерНаПеремещениеТоваровТовары.КоличествоУпаковок,
	|	ОрдерНаПеремещениеТоваровТовары.Количество,
	|	ОрдерНаПеремещениеТоваровТовары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ОрдерНаПеремещениеТоваровТовары КАК ОрдерНаПеремещениеТоваровТовары
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		НачатьТранзакцию();
		
		Попытка
			
			// Устанавливаем управляемую блокировку, чтобы провести ответственное чтение объекта
			Блокировка = Новый БлокировкаДанных;
			
			ЭлементБлокировки = Блокировка.Добавить("Документ.ОрдерНаПеремещениеТоваров");
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			
			Блокировка.Заблокировать();
			
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			
			// Если объект ранее был удален или обработан другими сеансами, пропускаем его.
			Если ДокументОбъект = Неопределено Тогда
				ОтменитьТранзакцию();
				ОбновлениеИнформационнойБазы.ОтметитьВыполнениеОбработки(Выборка.Ссылка);
				Продолжить;
			КонецЕсли;
			
			ОбработатьОрдерНаПеремещениеТоваров(Выборка, ДокументОбъект, Параметры.Очередь);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
            ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(Выборка.Ссылка);
			
		КонецПопытки;
		
	КонецЦикла;
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазы.ОбработкаДанныхЗавершена(
        Параметры.Очередь, 
        "Документ.ОрдерНаПеремещениеТоваров"
    );

КонецПроцедуры

Процедура ОбработатьОрдерНаПеремещениеТоваров(Выборка, ДокументОбъект, Очередь)
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = ДокументОбъект.ОтгружаемыеТовары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Если Выборка.НеОтгружать Тогда
			НоваяСтрока.Действие = Перечисления.ДействияСоСтрокамиОрдеровНаОтгрузку.НеОтгружать;
		ИначеЕсли Выборка.Статус = Перечисления.СтатусыОрдеровНаПеремещение.КОтбору 
			ИЛИ Выборка.Статус = Перечисления.СтатусыОрдеровНаПеремещение.КПроверке 
			ИЛИ Выборка.Статус = Перечисления.СтатусыОрдеровНаПеремещение.ВПроцессеПроверки Тогда
			НоваяСтрока.Действие = Перечисления.ДействияСоСтрокамиОрдеровНаОтгрузку.Отобрать;	
		Иначе
			НоваяСтрока.Действие = Перечисления.ДействияСоСтрокамиОрдеровНаОтгрузку.Отгрузить;
		КонецЕсли;	
		
	КонецЦикла;	
	
	ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
	
КонецПроцедуры


#КонецОбласти

#КонецОбласти

#КонецЕсли
