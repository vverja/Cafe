////////////////////////////////////////////////////////////////////////////////
// Подсистема "Напоминания пользователя".
//
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

// Возвращает массив текстовых представлений стандартных интервалов времени.
Функция ПолучитьСтандартныеИнтервалыОповещения() Экспорт
	
	Результат = Новый Массив;
    
    ИнтервалыВремени = Новый Структура(НСтр("ru='_5м,_10м,_15м,_30м,_1ч,_2ч,_4ч,_8ч,_1д,_2д,_3д,_1н,_2н';uk='_5х,_10х,_15х,_30х,_1г,_2г,_4г,_8г,_1д,_2д,_3д,_1т,_2т'") );
	Для Каждого Интервал Из ИнтервалыВремени Цикл
    	Результат.Добавить(ОформитьВремя(Интервал.Ключ));
	КонецЦикла;
	
	НапоминанияПользователяКлиентСерверПереопределяемый.ПриПолученииСтандартныхИнтерваловОповещения(Результат);
	
	Возврат Результат;
	
КонецФункции

// Возвращает текстовое представление интервала времени, заданного в секундах.
//
// Параметры:
//
//  Время - Число - интервал времени в секундах.
//
//  ПолноеПредставление	- Булево - кратное или полное представление времени.
//		Например, интервал 1 000 000 секунд:
//		- полное представление:  11 дней 13 часов 46 минут 40 секунд;
//		- краткое представление: 11 дней 13 часов.
//
// Возвращаемое значение:
//   Строка - представление интервала времени.
//
Функция ПредставлениеВремени(Знач Время, ПолноеПредставление = Истина, ВыводитьСекунды = Истина) Экспорт
	Результат = "";
	
	// Представление единиц измерения времени в винительном падеже для количеств: 1, 2-4, 5-20.
	ПредставлениеНедель	= НСтр("ru='неделю';uk='тиждень'")  + "," + НСтр("ru='недели';uk='тижня'")    + "," + НСтр("ru='недель';uk='тижнів'");
	ПредставлениеДней	= НСтр("ru='день';uk='день'")       + "," + НСтр("ru='дня';uk='дня'")         + "," + НСтр("ru='дней';uk='днів'");
	ПредставлениеЧасов	= НСтр("ru='час';uk='годину'")      + "," + НСтр("ru='часа';uk='години'")     + "," + НСтр("ru='часов';uk='годин'");
	ПредставлениеМинут	= НСтр("ru='минуту';uk='хвилину'")  + "," + НСтр("ru='минуты';uk='хвилини'")  + "," + НСтр("ru='минут';uk='хвилин'");
	ПредставлениеСекунд	= НСтр("ru='секунду';uk='секунду'") + "," + НСтр("ru='секунды';uk='секунди'") + "," + НСтр("ru='секунд';uk='секунд'");
	
	Время = Число(Время);
	
	Если Время < 0 Тогда
		Время = -Время;
	КонецЕсли;
	
	КоличествоНедель = Цел(Время / 60/60/24/7);
	КоличествоДней   = Цел(Время / 60/60/24);
	КоличествоЧасов  = Цел(Время / 60/60);
	КоличествоМинут  = Цел(Время / 60);
	КоличествоСекунд = Цел(Время);
	
	КоличествоСекунд = КоличествоСекунд - КоличествоМинут * 60;
	КоличествоМинут  = КоличествоМинут - КоличествоЧасов * 60;
	КоличествоЧасов  = КоличествоЧасов - КоличествоДней * 24;
	КоличествоДней   = КоличествоДней - КоличествоНедель * 7;
	
	Если Не ВыводитьСекунды Тогда
		КоличествоСекунд = 0;
	КонецЕсли;
	
	Если КоличествоНедель > 0 И КоличествоДней+КоличествоЧасов+КоличествоМинут+КоличествоСекунд=0 Тогда
		Результат = СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(КоличествоНедель, ПредставлениеНедель);
	Иначе
		КоличествоДней = КоличествоДней + КоличествоНедель * 7;
		
		Счетчик = 0;
		Если КоличествоДней > 0 Тогда
			Результат = Результат + СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(КоличествоДней, ПредставлениеДней) + " ";
			Счетчик = Счетчик + 1;
		КонецЕсли;
		
		Если КоличествоЧасов > 0 Тогда
			Результат = Результат + СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(КоличествоЧасов, ПредставлениеЧасов) + " ";
			Счетчик = Счетчик + 1;
		КонецЕсли;
		
		Если (ПолноеПредставление Или Счетчик < 2) И КоличествоМинут > 0 Тогда
			Результат = Результат + СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(КоличествоМинут, ПредставлениеМинут) + " ";
			Счетчик = Счетчик + 1;
		КонецЕсли;
		
		Если (ПолноеПредставление Или Счетчик < 2) И (КоличествоСекунд > 0 Или КоличествоНедель+КоличествоДней+КоличествоЧасов+КоличествоМинут = 0) Тогда
			Результат = Результат + СтроковыеФункцииКлиентСервер.ЧислоЦифрамиПредметИсчисленияПрописью(КоличествоСекунд, ПредставлениеСекунд);
		КонецЕсли;
		
	КонецЕсли;
			  
	Возврат СокрП(Результат);
	
КонецФункции

// Получает из текстового описания интервал времени в секундах.
//
// Параметры:
//  СтрокаСоВременем - Строка - текстовое описание времени, где числа записаны цифрами,
//								а единицы измерения - строкой. 
//
// Возвращаемое значение
//  Число - интервал времени в секундах.
Функция ПолучитьИнтервалВремениИзСтроки(Знач СтрокаСоВременем) Экспорт
	
	Результат = 0;
	Если Не ПустаяСтрока(СтрокаСоВременем) Тогда
		СтрокаСоВременем = НРег(СтрокаСоВременем);
		
		СтрокаСоВременем = СтрЗаменить(СтрокаСоВременем, Символы.НПП," ");
		СтрокаСоВременем = СтрЗаменить(СтрокаСоВременем, ".",",");
		СтрокаСоВременем = СтрЗаменить(СтрокаСоВременем, "+","");
		
		ПодстрокаСЦифрами = "";
		ПодстрокаСБуквами = "";
		СтрокаДляВычисления = "0";
		
		ПредыдущийСимволЭтоЦифра = Ложь;
		ЕстьДробнаяЧасть = Ложь;
		ЕстьЕдиницаИзмерения = Ложь;
		
		Для Позиция = 1 По СтрДлина(СтрокаСоВременем) Цикл
			ТекущийКодСимвола = КодСимвола(СтрокаСоВременем,Позиция);
			Символ = Сред(СтрокаСоВременем,Позиция,1);
			Если (ТекущийКодСимвола >= КодСимвола("0") И ТекущийКодСимвола <= КодСимвола("9"))
				ИЛИ (Символ="," И ПредыдущийСимволЭтоЦифра И Не ЕстьДробнаяЧасть) Тогда
				Если Не ПустаяСтрока(ПодстрокаСБуквами) Тогда
					СтрокаДляВычисления = СтрокаДляВычисления 
										+ "+"
										+ ?(ПустаяСтрока(ПодстрокаСЦифрами),"1",ПодстрокаСЦифрами)
										+ "*"
										+ ЗаменитьЕдиницуИзмеренияНаМножитель(ПодстрокаСБуквами);
					ПодстрокаСЦифрами = "";
					ПодстрокаСБуквами = "";
					
					ПредыдущийСимволЭтоЦифра = Ложь;
					ЕстьДробнаяЧасть = Ложь;
					ЕстьЕдиницаИзмерения = Ложь;
				КонецЕсли;
				
				ПодстрокаСЦифрами = ПодстрокаСЦифрами + Сред(СтрокаСоВременем,Позиция,1);
				
				ПредыдущийСимволЭтоЦифра = Истина;
				Если Символ = "," Тогда
					ЕстьДробнаяЧасть = Истина;
				КонецЕсли;
			Иначе
				Если Символ = " " И ЗаменитьЕдиницуИзмеренияНаМножитель(ПодстрокаСБуквами)="0" Тогда
					ПодстрокаСБуквами = "";
				КонецЕсли;
				
				ПодстрокаСБуквами = ПодстрокаСБуквами + Сред(СтрокаСоВременем,Позиция,1);
				ПредыдущийСимволЭтоЦифра = Ложь;
			КонецЕсли;
		КонецЦикла;
		
		Если Не ПустаяСтрока(ПодстрокаСБуквами) Тогда
				СтрокаДляВычисления = СтрокаДляВычисления 
									+ "+"
									+ ?(ПустаяСтрока(ПодстрокаСЦифрами),"1",ПодстрокаСЦифрами)
									+ "*"
									+ ЗаменитьЕдиницуИзмеренияНаМножитель(ПодстрокаСБуквами);
		КонецЕсли;

		СтрокаДляВычисления = СтрЗаменить(СтрокаДляВычисления,",",".");
		Результат = Вычислить(СтрокаДляВычисления);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Анализирует слово на предмет соответствия единице времени и, если соответствие установлено,
// возвращает количество секунд, содержащееся в единице времени.
//
// Параметры:
//  Единица - Строка - анализируемое слово.
//
// Возвращаемое значение
//  Число - количество секунд в Единице. Если единица не определена или пустая, то возвращается 0.
Функция ЗаменитьЕдиницуИзмеренияНаМножитель(Знач Единица)
	
	Результат = 0;
	
	Единица = СтрЗаменить(Единица, " ","");
	Единица = СтрЗаменить(Единица, ",","");
	Единица = СтрЗаменить(Единица, ".","");
	
	// Единицу измерения времени будем определять по первым трем символам.
	ПервыеТриСимвола = Лев(Единица,3);
    Если ПервыеТриСимвола = НСтр("ru='нед';uk='тиж'") Или ПервыеТриСимвола = НСтр("ru='н';uk='т'") Тогда	
		Результат = 60*60*24*7;
	ИначеЕсли ПервыеТриСимвола = НСтр("ru='ден';uk='ден'") 
		  Или ПервыеТриСимвола = НСтр("ru='дне';uk='дні'")
		  Или ПервыеТриСимвола = НСтр("ru='дня';uk='дня'")
		  Или ПервыеТриСимвола = НСтр("ru='дн';uk='дн'")
		  Или ПервыеТриСимвола = НСтр("ru='д';uk='д'") Тогда
		Результат = 60*60*24;
    ИначеЕсли ПервыеТриСимвола = НСтр("ru='час';uk='год'") Или ПервыеТриСимвола = НСтр("ru='ч';uk='г'") Тогда    
		Результат = 60*60;
    ИначеЕсли ПервыеТриСимвола = НСтр("ru='мин';uk='хви'") Или ПервыеТриСимвола = НСтр("ru='м';uk='х'") Тогда	
		Результат = 60;
    ИначеЕсли ПервыеТриСимвола = НСтр("ru='сек';uk='сек'") Или ПервыеТриСимвола = НСтр("ru='с';uk='с'") Тогда	    
		Результат = 1;
	КонецЕсли;
	
	Возврат Формат(Результат,"ЧН=0; ЧГ=0");
	
КонецФункции

// Получает из строки интервал времени и возвращает его текстовое представление.
//
// Параметры:
//  ВремяСтрокой - Строка - текстовое описание времени, где числа записаны цифрами,
//							а единицы измерения - строкой.
//
// Возвращаемое значение
//  Строка - оформленное представление времени.
Функция ОформитьВремя(ВремяСтрокой) Экспорт
	Возврат ПредставлениеВремени(ПолучитьИнтервалВремениИзСтроки(ВремяСтрокой));
КонецФункции

// Возвращает структуру напоминания с заполненными значениями.
//
// Параметры:
//  ДанныеДляЗаполнения - Структура - значения для заполнения параметров напоминания.
//  ВсеРеквизиты - Булево - если истина, то возвращает также реквизиты, связанные с настройкой
//                          времени напоминания.
Функция ПолучитьСтруктуруНапоминания(ДанныеДляЗаполнения = Неопределено, ВсеРеквизиты = Ложь) Экспорт
	Результат = Новый Структура("Пользователь,ВремяСобытия,Источник,СрокНапоминания,Описание");
	Если ВсеРеквизиты Тогда 
		Результат.Вставить("СпособУстановкиВремениНапоминания");
		Результат.Вставить("ИнтервалВремениНапоминания");
		Результат.Вставить("ИмяРеквизитаИсточника");
		Результат.Вставить("Расписание");
		Результат.Вставить("ИндексКартинки", 2);
	КонецЕсли;
	Если ДанныеДляЗаполнения <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(Результат, ДанныеДляЗаполнения);
	КонецЕсли;
	Возврат Результат;
КонецФункции

#КонецОбласти
