#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	
	Документы.ЗаявкаНаРасходованиеДенежныхСредств.ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании);
	
	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);
	ВводНаОснованииПереопределяемый.ДобавитьКомандыСоздатьНаОснованииПисмаПоШаблону(КомандыСоздатьНаОсновании);
	
КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт
	КомандаСоздатьНаОсновании = Неопределено;
	Если ПравоДоступа("Добавление", Метаданные.Документы.ОтчетПоКомиссииМеждуОрганизациямиОСписании) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ОтчетПоКомиссииМеждуОрганизациямиОСписании.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.ОтчетПоКомиссииМеждуОрганизациямиОСписании);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		КомандаСоздатьНаОсновании.ФункциональныеОпции = "ИспользоватьПередачиТоваровМеждуОрганизациями";
	КонецЕсли;
	Возврат КомандаСоздатьНаОсновании;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуОформленияОтчетов(КомандыОтчетов);

КонецПроцедуры

// Функция определяет реквизиты документа.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями - Ссылка на документ
//
// Возвращаемое значение:
//	Структура - Реквизиты выбранного документа
//
Функция РеквизитыДокумента(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.Комиссионер КАК Комиссионер,
	|	ДанныеДокумента.Комиссионер КАК ОрганизацияПолучатель,
	|	ДанныеДокумента.Валюта КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаДокумента,
	|
	|	ДанныеДокумента.СуммаДокумента КАК СуммаВзаиморасчетов,
	|	0 КАК СуммаВознаграждения,
	|
	|	ДанныеДокумента.НачалоПериода КАК НачалоПериода,
	|	ДанныеДокумента.КонецПериода КАК КонецПериода,
	|	ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента КАК РасчетыЧерезОтдельногоКонтрагента,
	|	ДанныеДокумента.Партнер КАК Партнер,
	|	ДанныеДокумента.Контрагент КАК Контрагент,
	|	ДанныеДокумента.Проведен КАК Проведен
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Дата = Выборка.Дата;
		Организация = Выборка.Организация;
		ОрганизацияПолучатель = Выборка.ОрганизацияПолучатель;
		ВалютаВзаиморасчетов = Выборка.ВалютаВзаиморасчетов;
		СуммаДокумента = Выборка.СуммаДокумента;
		СуммаВзаиморасчетов = ?(Выборка.Проведен, Выборка.СуммаВзаиморасчетов, 0);
		СуммаВознаграждения = ?(Выборка.Проведен, Выборка.СуммаВознаграждения, 0);
		НачалоПериода = Выборка.НачалоПериода;
		КонецПериода = Выборка.КонецПериода;
		РасчетыЧерезОтдельногоКонтрагента = Выборка.РасчетыЧерезОтдельногоКонтрагента;
		Партнер = ?(РасчетыЧерезОтдельногоКонтрагента, Выборка.Партнер, Справочники.Партнеры.НашеПредприятие);
		Контрагент = ?(РасчетыЧерезОтдельногоКонтрагента, Выборка.Контрагент, Выборка.Организация);
	Иначе
		Дата = Дата(1,1,1);
		Организация = Справочники.Организации.ПустаяСсылка();
		ОрганизацияПолучатель = Справочники.Организации.ПустаяСсылка();
		ВалютаВзаиморасчетов = Справочники.Валюты.ПустаяСсылка();
		СуммаДокумента = 0;
		СуммаВзаиморасчетов = 0;
		СуммаВознаграждения = 0;
		НачалоПериода = Неопределено;
		КонецПериода = Неопределено;
		РасчетыЧерезОтдельногоКонтрагента = Ложь;
		Партнер = Справочники.Партнеры.ПустаяСсылка();
		Контрагент = Справочники.Контрагенты.ПустаяСсылка();
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Дата, Организация, ВалютаВзаиморасчетов, ХозяйственнаяОперация, СуммаДокумента, СуммаВзаиморасчетов, СуммаВознаграждения,
	|ОрганизацияОтправитель, ОрганизацияПолучатель, НачалоПериода, КонецПериода, РасчетыЧерезОтдельногоКонтрагента, Партнер, Контрагент",
		Дата,
		ОрганизацияПолучатель,
		ВалютаВзаиморасчетов,
		Перечисления.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями,
		СуммаДокумента,
		СуммаВзаиморасчетов,
		СуммаВознаграждения,
		Организация,
		ОрганизацияПолучатель,
		НачалоПериода,
		КонецПериода,
		РасчетыЧерезОтдельногоКонтрагента,
		Партнер,
		Контрагент);
	
	Возврат СтруктураРеквизитов;

КонецФункции


#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Отчет комиссионера о списании
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОбщихФорм";
	КомандаПечати.Идентификатор = "ОтчетКомиссионераСписание";
	КомандаПечати.Представление = НСтр("ru='Отчет комиссионера о списании';uk='Звіт комісіонера про списання'");
	КомандаПечати.ДополнительныеПараметры.Вставить("ЭтоОтчетКомиссионера", Истина);
 	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;

КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
КонецПроцедуры

Функция ПолучитьДанныеДляПечатнойФормыОтчетПоКомиссии(ПараметрыПечати, МассивОбъектов) Экспорт
	
	Запрос = Новый Запрос(
	"
	|////////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Комиссионер КАК Комиссионер,
	|	ДанныеДокумента.Организация КАК Комитент,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	ДанныеДокумента.Валюта КАК Валюта,
 	|	0 КАК СуммаВознаграждения,
	|	"""" КАК ПредставительКомитента,
	|	ДанныеДокумента.Менеджер.ФизическоеЛицо КАК ПредставительКомиссионера
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивДокументов)
	|	И ДанныеДокумента.Проведен
	|	И (НЕ ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.Номер,
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Комиссионер,
	|	ДанныеДокумента.Контрагент,
	|	ДанныеДокумента.Организация.Префикс,
	|	ДанныеДокумента.Валюта,
 	|	0,
	|	"""",
	|	ДанныеДокумента.Менеджер.ФизическоеЛицо
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивДокументов)
	|	И ДанныеДокумента.Проведен
	|	И ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
	|	И ДанныеДокумента.Комиссионер <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка,
	|	ДанныеДокумента.НомерВходящегоДокумента,
	|	ДанныеДокумента.ДатаВходящегоДокумента,
	|	ДанныеДокумента.Контрагент,
	|	ДанныеДокумента.Организация,
	|	ДанныеДокумента.Организация.Префикс,
	|	ДанныеДокумента.Валюта,
 	|	0,
	|	"""",
	|	ДанныеДокумента.Менеджер.ФизическоеЛицо
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивДокументов)
	|	И ДанныеДокумента.Проведен
	|	И ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
	|	И ДанныеДокумента.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.УправленческаяОрганизация)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ТАБЛИЧНЫМ ЧАСТЯМ
	|
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура.Код КАК Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул КАК Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ВложенныйЗапрос.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВложенныйЗапрос.Упаковка, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.Упаковка.Наименование
	|	КОНЕЦ КАК Упаковка,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	СУММА(ВложенныйЗапрос.СуммаКомитента) КАК СуммаКомитента,
	|	СУММА(ВложенныйЗапрос.СуммаПродажи) КАК СуммаПродажи,
	|	СУММА(ВложенныйЗапрос.СуммаВознаграждения) КАК СуммаВознаграждения,
	|	МАКСИМУМ(ВложенныйЗапрос.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаТовары.Ссылка КАК Ссылка,
	|		ТаблицаТовары.Номенклатура КАК Номенклатура,
	|		&ТекстЗапросаЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		ТаблицаТовары.Характеристика КАК Характеристика,
	|		ТаблицаТовары.Упаковка КАК Упаковка,
	|		ТаблицаТовары.КоличествоУпаковок КАК Количество,
	|		ТаблицаТовары.Цена КАК Цена,
	|		ТаблицаТовары.СуммаСНДС КАК СуммаКомитента,
	|		ТаблицаТовары.СуммаПродажи КАК СуммаПродажи,
	|		ТаблицаТовары.СуммаВознаграждения КАК СуммаВознаграждения,
	|		ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		Документ.ОтчетПоКомиссииМеждуОрганизациями.Товары КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка В(&МассивДокументов)
	|		И ТаблицаТовары.Номенклатура.ТипНоменклатуры В
	|			(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Упаковка,
	|	ВложенныйЗапрос.Цена,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное,
	|	ВложенныйЗапрос.Номенклатура.Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление,
	|	ВложенныйЗапрос.Характеристика.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВложенныйЗапрос.Упаковка, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.Упаковка.Наименование
 	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(СуммаКомитента),
	|	СУММА(СуммаПродажи),
	|	СУММА(СуммаВознаграждения)
	|ПО
	|	Ссылка");
	
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст,
		"&ТекстЗапросаЕдиницаИзмерения",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаЗначениеРеквизитаЕдиницыИзмерения(
			"Ссылка",
			"ТаблицаТовары.Упаковка",
			"ТаблицаТовары.Номенклатура"));
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	
	Заголовок = НСтр("ru='Отчет комиссионера о продажах';uk='Звіт комісіонера про продажі'");
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
	РезультатПоШапке			= МассивРезультатов[0];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[1];
	СтруктураДанныхДляПечати 	= Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти, Заголовок",
		РезультатПоШапке,
		РезультатПоТабличнойЧасти,
		Заголовок);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

Функция ПолучитьДанныеДляПечатнойФормыОтчетПоКомиссииОСписании(ПараметрыПечати, МассивОбъектов) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|   ИСТИНА КАК УчитыватьНДС,
	|   Товары.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ТаблицаУчитыватьНДС
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов) И Товары.СтавкаНДС <> ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НеНДС)
	|СГРУППИРОВАТЬ ПО Товары.Ссылка 
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|// ЗАПРОС ПО ШАПКЕ
	|ВЫБРАТЬ 
 	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Комитент,
	|	ДанныеДокумента.Комиссионер КАК Комиссионер,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	ДанныеДокумента.Валюта КАК Валюта,
	|	&ЭтоОтчетКомиссионера КАК ЭтоОтчетКомиссионера,
	|	"""" КАК ДоговорНаименованиеДляПечати,
	|	НЕОПРЕДЕЛЕНО КАК БанковскийСчетКомитента,
	|	НЕОПРЕДЕЛЕНО КАК БанковскийСчетКомиссионера,
	|	Истина КАК ЦенаВключаетНДС, // Суммы комитента, продажи и вознаграждения всегда выводятся с НДС
	|   ЕСТЬNULL(ТаблицаУчитыватьНДС.УчитыватьНДС, Ложь) КАК УчитыватьНДС,
	|	ДанныеДокумента.МестоСоставленияДокумента КАК МестоСоставленияДокумента,
	|	"""" КАК ПредставительКомитентаСтрокой,
	|	ДанныеДокумента.ПредставительОрганизацииДолжность КАК ПредставительКомитентаДолжность,
	|	ДанныеДокумента.ПредставительОрганизации КАК ПредставительКомитента,
	|	"""" КАК ПредставительКомиссионераСтрокой,
	|	ДанныеДокумента.ПредставительОрганизацииПолучателяДолжность КАК ПредставительКомиссионераДолжность,
	|	ДанныеДокумента.ПредставительОрганизацииПолучателя КАК ПредставительКомиссионера
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаУчитыватьНДС КАК ТаблицаУчитыватьНДС
	|		ПО ДанныеДокумента.Ссылка = ТаблицаУчитыватьНДС.Ссылка
 	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивДокументов)
	|	И ДанныеДокумента.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Ссылка КАК Ссылка,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура.Код КАК Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул КАК Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ВложенныйЗапрос.Характеристика.НаименованиеПолное КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.Упаковка.Наименование
	|	КОНЕЦ КАК Упаковка,
	|	ВложенныйЗапрос.Цена КАК Цена,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма,
	|	МАКСИМУМ(ВложенныйЗапрос.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаТовары.Ссылка КАК Ссылка,
	|		ТаблицаТовары.Номенклатура КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА ТаблицаТовары.Упаковка = ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
	|				ТОГДА ТаблицаТовары.Номенклатура.ЕдиницаИзмерения
	|			ИНАЧЕ ТаблицаТовары.Упаковка
	|		КОНЕЦ КАК ЕдиницаИзмерения,
	|		ТаблицаТовары.Характеристика КАК Характеристика,
	|		ТаблицаТовары.Упаковка КАК Упаковка,
	|		ТаблицаТовары.КоличествоУпаковок КАК Количество,
	|		ТаблицаТовары.Цена КАК Цена,
	|		ТаблицаТовары.СуммаСНДС КАК Сумма,
	|		ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании.Товары КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка В(&МассивДокументов)
	|		И ТаблицаТовары.Номенклатура.ТипНоменклатуры В
	|			(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Ссылка,
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Упаковка,
	|	ВложенныйЗапрос.Цена,
	|	ВложенныйЗапрос.Номенклатура.НаименованиеПолное,
	|	ВложенныйЗапрос.Номенклатура.Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление,
	|	ВложенныйЗапрос.Характеристика.НаименованиеПолное,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) = 1
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВложенныйЗапрос.Упаковка.Наименование
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(Сумма)
	|ПО
	|	Ссылка");
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ВложенныйЗапрос.Упаковка",
			"ВложенныйЗапрос.Номенклатура"));
	Запрос.УстановитьПараметр("ЭтоОтчетКомиссионера", ПараметрыПечати.ЭтоОтчетКомиссионера);
 	
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Заголовок 					= НСтр("ru='Отчет комитенту о списании';uk='Звіт комітенту про списання'");
	МассивРезультатов 			= Запрос.ВыполнитьПакет();
 	РезультатПоШапке			= МассивРезультатов[1];
	РезультатПоТабличнойЧасти 	= МассивРезультатов[2];
	СтруктураДанныхДляПечати 	= Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти, Заголовок",
		РезультатПоШапке,
		РезультатПоТабличнойЧасти,
		Заголовок);
	
	Возврат СтруктураДанныхДляПечати;
	
КонецФункции

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаДанныхДокументов с полями:
//		Ссылка.
//
//	ПараметрыЗаполнения - Структура - структура, возвращаемая функцией ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПараметрыЗаполнения = Неопределено) Экспорт
	
	Если ПараметрыЗаполнения = Неопределено Тогда
		ПараметрыЗаполнения = ПродажиСервер.ПараметрыЗаполненияВременнойТаблицыТоваров();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПересчитыватьВВалютуРегл", ПараметрыЗаполнения.ПересчитыватьВВалютуРегл);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка                     КАК Ссылка,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Упаковка                   КАК Упаковка,
	|	МАКСИМУМ(ТаблицаТоваров.НомерСтроки)      КАК НомерСтроки
	|
	|ПОМЕСТИТЬ СтрокиТоваров
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями.Товары КАК ТаблицаТоваров
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаТоваров.Ссылка = ДанныеДокументов.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Упаковка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТаблицаТоваров.Ссылка,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Упаковка
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                        КАК Ссылка,
	|	СтрокиТоваров.НомерСтроки                                      КАК НомерСтроки,
	|	Аналитика.Номенклатура                                         КАК Номенклатура,
	|	Аналитика.Характеристика                                       КАК Характеристика,
	|	ТаблицаДокумента.НомерГТД                                      КАК НомерГТД,
	|	СУММА(ТаблицаДокумента.Количество)                             КАК Количество,
	|	СУММА(ТаблицаДокумента.КоличествоУпаковок)                     КАК КоличествоУпаковок,
	|	
	|	СУММА(ЕСТЬNULL(
	|		СуммыДокументовВВалютеРегл.СуммаБезНДСРегл,
	|		ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС
	|	))                                                             КАК СуммаБезНДС,
	|	
	|	ТаблицаДокумента.СтавкаНДС                                     КАК СтавкаНДС,
	|	
	|	СУММА(ЕСТЬNULL(
	|		СуммыДокументовВВалютеРегл.СуммаНДСРегл,
	|		ТаблицаДокумента.СуммаНДС
	|	))                                                             КАК СуммаНДС,
	|	
	|	ИСТИНА                                                         КАК ЭтоТовар,
 	|	ТаблицаДокумента.Упаковка                                      КАК Упаковка
	|
	|ПОМЕСТИТЬ ОтчетПоКомиссииМеждуОрганизациямиТаблицаТоваров
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями.ВидыЗапасов КАК ТаблицаДокумента
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютеРегл КАК СуммыДокументовВВалютеРегл
	|	ПО
	|		ТаблицаДокумента.Ссылка = СуммыДокументовВВалютеРегл.Регистратор
	|		И ТаблицаДокумента.ИдентификаторСтроки = СуммыДокументовВВалютеРегл.ИдентификаторСтроки
	|		И СуммыДокументовВВалютеРегл.Активность
	|		И &ПересчитыватьВВалютуРегл
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СтрокиТоваров КАК СтрокиТоваров
	|	ПО
	|		ТаблицаДокумента.Ссылка                       = СтрокиТоваров.Ссылка
	|		И ТаблицаДокумента.АналитикаУчетаНоменклатуры = СтрокиТоваров.АналитикаУчетаНоменклатуры
	|		И ТаблицаДокумента.Упаковка                   = СтрокиТоваров.Упаковка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаДокумента.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Ссылка,
	|	СтрокиТоваров.НомерСтроки,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	ТаблицаДокумента.СтавкаНДС,
	|	ТаблицаДокумента.Упаковка,
 	|	ТаблицаДокумента.НомерГТД
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|ВЫБРАТЬ
	|	ТаблицаУслуги.Ссылка                                           КАК Ссылка,
	|	ТаблицаУслуги.НомерСтроки                                      КАК НомерСтроки,
	|	ТаблицаУслуги.Номенклатура                                     КАК Номенклатура,
	|	ТаблицаУслуги.Характеристика                                   КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)                    КАК НомерГТД,
	|	СУММА(ТаблицаУслуги.Количество)                                КАК Количество,
	|	СУММА(ТаблицаУслуги.КоличествоУпаковок)                        КАК КоличествоУпаковок,
	|	
	|	СУММА(ТаблицаУслуги.СуммаСНДС - ТаблицаУслуги.СуммаНДС)        КАК СуммаБезНДС,
	|	
	|	ТаблицаУслуги.СтавкаНДС                                        КАК СтавкаНДС,
	|	
	|	СУММА(ТаблицаУслуги.СуммаНДС)                                  КАК СуммаНДС,
	|	
	|	ЛОЖЬ                                                           КАК ЭтоТовар,
 	|	ТаблицаУслуги.Упаковка                                         КАК Упаковка
	|
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациями.Товары КАК ТаблицаУслуги
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаДанныхДокументов КАК ДанныеДокументов
	|	ПО
	|		ТаблицаУслуги.Ссылка = ДанныеДокументов.Ссылка
	|ГДЕ
	|	ТаблицаУслуги.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаУслуги.Ссылка,
	|	ТаблицаУслуги.НомерСтроки,
	|	ТаблицаУслуги.Номенклатура,
	|	ТаблицаУслуги.Характеристика,
	|	ТаблицаУслуги.СтавкаНДС,
	|	ТаблицаУслуги.Упаковка
 	|;
	|/////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СтрокиТоваров
	|";
	
	Запрос.Выполнить();
	
КонецПроцедуры


Процедура ЗаполнитьСтруктуруПолучателейПечатныхФорм(СтруктураДанныхОбъектаПечати) Экспорт
	
	СтруктураДанныхОбъектаПечати.ОсновнойПолучатель = "Партнер";
		
		СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Партнер");
		Если ПолучитьФункциональнуюОпцию("ИспользоватьПартнеровИКонтрагентов") Тогда 
			СтруктураДанныхОбъектаПечати.МассивРеквизитовПолучателей.Добавить("Контрагент");
		КонецЕсли;
	
КонецПроцедуры

Функция ДоступныеДляШаблоновПечатныеФормы() Экспорт

	МассивДоступныхПечатныхФорм = Новый Массив;
	
	МассивДоступныхПечатныхФорм.Добавить(Новый Структура("Имя, Представление , МенеджерПечати, ПараметрыПечати",
	                                     "ОтчетКомиссионера", НСтр("ru='Отчет комиссионера';uk='Звіт комісіонера'"), "Обработка.ПечатьОбщихФорм", Неопределено));
	Возврат МассивДоступныхПечатныхФорм

КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт
	
	ИсточникиДанных = Новый Соответствие;
	
	Возврат ИсточникиДанных;
	
КонецФункции

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата                              КАК Период,
	|	ДанныеДокумента.Ссылка                            КАК Ссылка,
	|	ДанныеДокумента.Валюта                            КАК Валюта,
	|	ДанныеДокумента.Организация                       КАК Комитент,
	|	ДанныеДокумента.Комиссионер                       КАК Комиссионер,
	|	ДанныеДокумента.Подразделение                     КАК Подразделение,
	|	ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента КАК РасчетыЧерезОтдельногоКонтрагента,
	|	ДанныеДокумента.Контрагент                        КАК Контрагент,
	|	ДанныеДокумента.Договор                           КАК Договор,
	|	ДанныеДокумента.Менеджер                          КАК Менеджер,
	|	ДанныеДокумента.СтатьяДоходов                     КАК СтатьяДоходов,
	|	ДанныеДокумента.АналитикаДоходов                  КАК АналитикаДоходов,
	|	ДанныеДокумента.СтатьяРасходов                    КАК СтатьяРасходов,
	|	ДанныеДокумента.АналитикаРасходов                 КАК АналитикаРасходов,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА ДанныеДокумента.Партнер
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|	КОНЕЦ                                             КАК Партнер,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.КонецПериода = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ ДанныеДокумента.КонецПериода > ДанныеДокумента.Дата
	|			ТОГДА ДанныеДокумента.Дата
	|		ИНАЧЕ ДанныеДокумента.КонецПериода
	|	КОНЕЦ                                             КАК КонецПериода,
	|	ДанныеДокумента.ГруппаФинансовогоУчета            КАК ГруппаФинансовогоУчета,
	|	ДанныеДокумента.НаправлениеДеятельности           КАК НаправлениеДеятельности
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	Результат = Запрос.Выполнить();
	Реквизиты = Результат.Выбрать();
	Реквизиты.Следующий();
	
	// установка параметров запроса по ФО и вычисляемым условиям
	Запрос.УстановитьПараметр("Период",                            Реквизиты.Период);
	Запрос.УстановитьПараметр("Валюта",                            Реквизиты.Валюта);
	Запрос.УстановитьПараметр("Комитент",                          Реквизиты.Комитент);
	Запрос.УстановитьПараметр("Комиссионер",                       Реквизиты.Комиссионер);
	Запрос.УстановитьПараметр("Подразделение",                     Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("РасчетыЧерезОтдельногоКонтрагента", Реквизиты.РасчетыЧерезОтдельногоКонтрагента);
	Запрос.УстановитьПараметр("Контрагент",                        Реквизиты.Контрагент);
	Запрос.УстановитьПараметр("Договор",                           Реквизиты.Договор);
	Запрос.УстановитьПараметр("Менеджер",                          Реквизиты.Менеджер);
	Запрос.УстановитьПараметр("СтатьяДоходов",                     Реквизиты.СтатьяДоходов);
	Запрос.УстановитьПараметр("АналитикаДоходов",                  Реквизиты.АналитикаДоходов);
	Запрос.УстановитьПараметр("СтатьяРасходов",                    Реквизиты.СтатьяРасходов);
	Запрос.УстановитьПараметр("АналитикаРасходов",                 Реквизиты.АналитикаРасходов);
	Запрос.УстановитьПараметр("Партнер",                           Реквизиты.Партнер);
	Запрос.УстановитьПараметр("ГруппаФинансовогоУчета",            Реквизиты.ГруппаФинансовогоУчета);
	Запрос.УстановитьПараметр("НаправлениеДеятельности",           Реквизиты.НаправлениеДеятельности);
	Запрос.УстановитьПараметр("КонецПериода",                   КонецДня(Реквизиты.КонецПериода));
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов",     ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Запрос.УстановитьПараметр("ИспользоватьУчетПрочихДоходовРасходов",           ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов")); 
	Запрос.УстановитьПараметр("ИспользоватьПартионныйУчет",                      ПолучитьФункциональнуюОпцию("ИспользоватьПартионныйУчет"));
	Запрос.УстановитьПараметр("ОтчетКомиссионера",     Перечисления.ХозяйственныеОперации.ОтчетКомиссионераОСписании);
	Запрос.УстановитьПараметр("ОтчетКомитенту",        Перечисления.ХозяйственныеОперации.ОтчетКомитентуОСписании);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациямиОСписании);
	Запрос.УстановитьПараметр("РасчетыПоДоговорам", Ложь);
	Запрос.УстановитьПараметр("НалоговоеНазначениеОрганизации", НДСОбщегоНазначенияСервер.ПолучитьНалоговоеНазначениеНДС(Реквизиты.Комитент, Реквизиты.Комиссионер, Реквизиты.Период, Истина));
	Запрос.УстановитьПараметр("ОрганизацияПлательщикНДС",       НДСОбщегоНазначенияСервер.ОрганизацияПлательщикНДС(Реквизиты.Комитент, Реквизиты.Период));
 	
КонецПроцедуры

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	////////////////////////////////////////////////////////////////////////////
	// Создадим запрос инициализации движений
	
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	////////////////////////////////////////////////////////////////////////////
	// Сформируем текст запроса
	
	ТекстыЗапроса = Новый СписокЗначений;
	ТекстЗапросаТоварыПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияНоменклатураДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияКонтрагентДоходыРасходы(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаЗакупки(Запрос, ТекстыЗапроса, Регистры);
	
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Функция ТекстЗапросаТоварыПереданныеНаКомиссию(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыПереданныеНаКомиссию";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	МИНИМУМ(ВидыЗапасов.НомерСтроки)       КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ВидыЗапасов.НомерГТД                   КАК НомерГТД,
	|	ВидыЗапасов.АналитикаУчетаПереданнойНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                           КАК Соглашение,
	|	&Комитент                              КАК Организация,
	|	ВидыЗапасов.ВидЗапасовКомитента        КАК ВидЗапасов,
	|	ВидыЗапасов.НалоговоеНазначение 	   КАК НалоговоеНазначение,
	|	СУММА(ВидыЗапасов.Количество)          КАК Количество,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтТаблицаВидыЗапасов КАК ВидыЗапасов
	|СГРУППИРОВАТЬ ПО
	|	ВидыЗапасов.АналитикаУчетаПереданнойНоменклатуры,
	|	ВидыЗапасов.ВидЗапасовКомитента,
	|	ВидыЗапасов.НалоговоеНазначение,
	|	ВидыЗапасов.НомерГТД
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюОтчетовКомитенту";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки         КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&КонецПериода                          КАК Период,
	|	ТаблицаВидыЗапасов.Валюта              КАК Валюта,
	|	ТаблицаВидыЗапасов.ВидЗапасов          КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.НомерГТД            КАК НомерГТД,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.Количество          КАК КоличествоСписано,
	|	ТаблицаВидыЗапасов.ВидЗапасовКомитента КАК КорВидЗапасов,
	|	ТаблицаВидыЗапасов.НалоговоеНазначениеСписания 	КАК НалоговоеНазначение,
	|	ТаблицаВидыЗапасов.Номенклатура        КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика      КАК Характеристика
	|ИЗ
	|	ВтТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовВладельца
	|	ПО ТаблицаВидыЗапасов.ВидЗапасовВладельца = ВидыЗапасовВладельца.Ссылка
	|
	|ГДЕ
	|	ТаблицаВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Строки.НомерСтроки                     КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&КонецПериода                          КАК Период,
	|	Строки.Валюта                          КАК Валюта,
	|	Строки.ВидЗапасовКомитента             КАК ВидЗапасов,
	|	Аналитика.КлючАналитики                КАК АналитикаУчетаНоменклатуры,
	|	Строки.НомерГТД                        КАК НомерГТД,
	|	&ОтчетКомитенту                        КАК ХозяйственнаяОперация,
	|	Строки.Количество                      КАК КоличествоСписано,
	|	Строки.ВидЗапасовКомитента             КАК КорВидЗапасов,
	|	Строки.НалоговоеНазначениеСписания 	КАК НалоговоеНазначение,
	|	Строки.Номенклатура                    КАК Номенклатура,
	|	Строки.Характеристика                  КАК Характеристика
	|ИЗ
	|	ВтТаблицаВидыЗапасов КАК Строки
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовКомитента
	|		ПО ВидыЗапасовКомитента.Ссылка = Строки.ВидЗапасовКомитента
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО Аналитика.Номенклатура = Строки.Номенклатура
	|		И Аналитика.Характеристика = Строки.Характеристика
	|		И Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		И Аналитика.Склад = ВидыЗапасовКомитента.Комитент
	|ГДЕ
	|	ВидыЗапасовКомитента.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И Строки.ВидЗапасовВладельца = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|	И Строки.ВидЗапасовКомитента <> Строки.ВидЗапасов
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСКлиентами(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСКлиентами";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрыАналитикВзаиморасчетов(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ // Долг комиссионера по списаным товарам
	|	КонецПериода(ДанныеДокумента.ДатаПлатежа, ДЕНЬ) КАК Период,
	|	КонецПериода(ДанныеДокумента.ДатаПлатежа, ДЕНЬ) КАК ДатаПлатежа,
	|	&Период КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомитентКомиссионер КАК АналитикаУчетаПоПартнерам,
	|	&Валюта КАК Валюта,
	|	&Ссылка КАК ЗаказКлиента,
	|	&ОтчетКомиссионера КАК ХозяйственнаяОперация,
	|	
	|	0 КАК Сумма,
	|	ДанныеДокумента.СуммаДокумента КАК КОплате,
	|	0 КАК СуммаРегл,
	|	0 КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.СуммаДокумента > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Долг комиссионера по проданным товарам
	|	&Период КАК Период,
	|	КонецПериода(ДанныеДокумента.ДатаПлатежа, ДЕНЬ) КАК ДатаПлатежа,
	|	&Период КАК ДатаРегистратора,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаДокумента < 0 ТОГДА
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	КОНЕЦ КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомитентКомиссионер КАК АналитикаУчетаПоПартнерам,
	|	&Валюта КАК Валюта,
	|	&Ссылка КАК ЗаказКлиента,
	|	&ОтчетКомиссионера КАК ХозяйственнаяОперация,
	|	
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаДокумента < 0 ТОГДА
	|		-ДанныеДокумента.СуммаДокумента
	|	ИНАЧЕ
	|		ДанныеДокумента.СуммаДокумента
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаДокумента < 0 ТОГДА
	|		-ДанныеДокумента.СуммаДокумента
	|	ИНАЧЕ
	|		0
	|	КОНЕЦ КАК КОплате,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаДокумента < 0 ТОГДА
	|		-ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР КОГДА ДанныеДокумента.СуммаДокумента < 0 ТОГДА
	|		-ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	ИНАЧЕ
	|		ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаРасчетыСПоставщиками(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "РасчетыСПоставщиками";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрыАналитикВзаиморасчетов(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ДанныеДокумента.ДатаПлатежа КАК ДатаПлатежа,
	|	&Период КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомиссионерКомитент КАК АналитикаУчетаПоПартнерам,
	|
	|	&Ссылка КАК ЗаказПоставщику,
	|	&Валюта КАК Валюта,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	
	|	ДанныеДокумента.СуммаДокумента КАК Сумма,
	|	0 КАК КОплате,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15, 2)) КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(ДанныеДокумента.ДатаПлатежа, День) КАК Период,
	|	ДанныеДокумента.ДатаПлатежа КАК ДатаПлатежа,
	|	&Период КАК ДатаРегистратора,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|
	|	&АналитикаВзаиморасчетовКомиссионерКомитент КАК АналитикаУчетаПоПартнерам,
	|
	|	&Ссылка КАК ЗаказПоставщику,
	|	&Валюта КАК Валюта,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	
	|	0 КАК Сумма,
	|	ДанныеДокумента.СуммаДокумента КАК КОплате,
	|	0 КАК СуммаРегл,
	|	0 КАК СуммаУпр
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрыАналитикВзаиморасчетов(Запрос);
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтСоответствиеКорВидовЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтСоответствиеКорВидовЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ВидыЗапасов.НомерСтроки					КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)	КАК ВидДвижения,
	|	&Период									КАК Период,
	|	&Комитент								КАК Организация,
	|
	|	ВидыЗапасов.АналитикаУчетаПереданнойНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПереданныеНаКомиссию) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВидыЗапасов.ВидЗапасовКомитента
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|	ВидыЗапасов.НалоговоеНазначениеКомитента КАК НалоговоеНазначение,
	|	ВидыЗапасов.ЦелевоеНалоговоеНазначение 	 КАК КорНалоговоеНазначение,
	|
	|	ВидыЗапасов.Количество			КАК Количество,
	|	0								КАК Стоимость,
	|	0								КАК СтоимостьБезНДС,
	|	0								КАК СтоимостьРегл,
	|	0								КАК СтоимостьРеглБезНДС,
	|	0								КАК НДСРегл,
	|	&ОтчетКомиссионера				КАК ХозяйственнаяОперация,
	|	ВидыЗапасов.АналитикаРасчетовСКомитентом КАК АналитикаУчетаПоПартнерам,
	|	&СтатьяРасходов					КАК СтатьяРасходовСписания,
	|	&АналитикаРасходов				КАК АналитикаРасходов,
	|	&Подразделение					КАК Подразделение
	|ИЗ
	|	ВтТаблицаВидыЗапасов КАК ВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовКомитента
	|		ПО ВидыЗапасовКомитента.Ссылка = ВидыЗапасов.ВидЗапасовКомитента
	|ГДЕ
	|	(ВидыЗапасовКомитента.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		ИЛИ ВидыЗапасовКомитента.ТипЗапасов ЕСТЬ NULL)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыЗапасов.НомерСтроки					КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)	КАК ВидДвижения,
	|	&Период									КАК Период,
	|	&Комитент								КАК Организация,
	|
	|	ВидыЗапасов.АналитикаУчетаПереданнойНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВидыЗапасов.ВидЗапасовКомитента
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|	ВидыЗапасов.НалоговоеНазначениеКомитента КАК НалоговоеНазначение,
	|	ВидыЗапасов.ЦелевоеНалоговоеНазначение 	 КАК КорНалоговоеНазначение,
	|
	|	ВидыЗапасов.Количество			КАК Количество,
	|	0								КАК Стоимость,
	|	0								КАК СтоимостьБезНДС,
	|	0								КАК СтоимостьРегл,
	|	0								КАК СтоимостьРеглБезНДС,
	|	0								КАК НДСРегл,
	|	&ОтчетКомиссионера				КАК ХозяйственнаяОперация,
	|	ВидыЗапасов.АналитикаРасчетовСКомитентом КАК АналитикаУчетаПоПартнерам,
	|	&СтатьяРасходов					КАК СтатьяРасходовСписания,
	|	&АналитикаРасходов				КАК АналитикаРасходов,
	|	&Подразделение					КАК Подразделение
	|ИЗ
	|	ВтТаблицаВидыЗапасов КАК ВидыЗапасов
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовКомитента
	|		ПО ВидыЗапасовКомитента.Ссылка = ВидыЗапасов.ВидЗапасовКомитента
	|ГДЕ
	|	(ВидыЗапасовКомитента.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ИЛИ ВидыЗапасовКомитента.ТипЗапасов ЕСТЬ NULL)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВидыЗапасов.НомерСтроки					КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	КАК ВидДвижения,
	|	&Период									КАК Период,
	|	&Комиссионер							КАК Организация,
	|
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВтСоответствиеКорВидовЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|	ВидыЗапасов.НалоговоеНазначениеСписания  КАК НалоговоеНазначение,
	|	ВидыЗапасов.НалоговоеНазначение 	     КАК КорНалоговоеНазначение,
	|
	|	ВидыЗапасов.Количество			КАК Количество,
	|	ВидыЗапасов.СуммаСНДС			КАК Стоимость,
	|	ВидыЗапасов.СуммаБезНДС			КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА ВидыЗапасов.НалоговоеНазначениеСписания.ВидДеятельностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыДеятельностиНДС.Необлагаемая) 
	|	ТОГДА
	|		ВидыЗапасов.СтоимостьБезНДСРегл + ВидыЗапасов.НДСРегл
	|	ИНАЧЕ
	|		ВидыЗапасов.СтоимостьБезНДСРегл
	|	КОНЕЦ КАК СтоимостьРегл,
	|	ВидыЗапасов.СтоимостьБезНДСРегл	КАК СтоимостьРеглБезНДС,
	|	ВидыЗапасов.НДСРегл				КАК НДСРегл,
	|	&ОтчетКомитенту					КАК ХозяйственнаяОперация,
	|	&АналитикаКомитентКомиссионер	КАК АналитикаУчетаПоПартнерам,
	|	НЕОПРЕДЕЛЕНО					КАК СтатьяРасходовСписания,
	|	НЕОПРЕДЕЛЕНО					КАК АналитикаРасходов,
	|	&Подразделение					КАК Подразделение
	|ИЗ
	|	ВтТаблицаВидыЗапасов КАК ВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСоответствиеКорВидовЗапасов КАК ВтСоответствиеКорВидовЗапасов
	|		ПО ВидыЗапасов.НалоговоеНазначениеСписания = ВтСоответствиеКорВидовЗапасов.НалоговоеНазначениеСписания
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПрочиеДоходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрочиеДоходы";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Комитент КАК Организация,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ДанныеДокумента.СтатьяДоходов КАК СтатьяДоходов,
	|	ДанныеДокумента.АналитикаДоходов КАК АналитикаДоходов,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК Сумма
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании КАК ДанныеДокумента
	|	
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.СуммаДокумента <> 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	УстановитьПараметрыАналитикВзаиморасчетов(Запрос);
	
	ПересчитатьТаблицуТоваровВВалютуРегл(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	&Период КАК Период,
	|	&Валюта КАК Валюта,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокументаРегл.СуммаБезНДС КАК СуммаБезНДСРегл,
	|	ТаблицаДокументаРегл.СуммаНДС КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО КАК ТипРасчетов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаПоПартнерам
	|
	|ИЗ
	|	ВтТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаТоваровПредварительная КАК ТаблицаДокументаРегл
	|	ПО
	|		ТаблицаВидыЗапасов.ИдентификаторСтроки = ТаблицаДокументаРегл.ИдентификаторСтроки
	|
	|ГДЕ
	|	&Валюта <> &ВалютаРегламентированногоУчета
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции 

Функция ТекстЗапросаТаблицаДвиженияНоменклатураДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияНоменклатураДоходыРасходы";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	&ОтчетКомиссионера КАК ХозяйственнаяОперация,
	|	&Комитент КАК Организация,
	|	&Подразделение КАК Подразделение,
	|
	|	ТаблицаТовары.АналитикаУчетаПереданнойНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК Склад,
	|	ТаблицаТовары.ВидЗапасовКомитента.ТипЗапасов КАК ТипЗапасов,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ТаблицаТовары.ВидЗапасовКомитента
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	&СтатьяРасходов КАК СтатьяДоходовРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|
	|	ТаблицаТовары.Количество КАК Количество,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК СтоимостьРегл,
	|
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ТаблицаТовары.ВидЗапасовКомитента
	|	ИНАЧЕ 
	|		ТаблицаТовары.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры
	|
	|ИЗ
	|	ВтТаблицаВидыЗапасов КАК ТаблицаТовары
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияКонтрагентДоходыРасходы(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияКонтрагентДоходыРасходы";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ДоходыПоОтчетуКомиссионераОСписании) КАК ХозяйственнаяОперация,
	|	&Комитент КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	
	|	&Партнер КАК Партнер,
	|	&Контрагент КАК Контрагент,
	|	&Договор КАК Договор,
	|	ВЫБОР
	|		КОГДА &РасчетыПоДоговорам
	|			ТОГДА &Договор
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ КАК ОбъектРасчетов,
	|	
	|	ДанныеДокумента.СтатьяДоходов КАК СтатьяДоходовРасходов,
	|	ДанныеДокумента.АналитикаДоходов КАК АналитикаДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК Сумма,
	|	0 КАК СуммаБезНДС,
	|	ВЫРАЗИТЬ(ДанныеДокумента.СуммаДокумента * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК СуммаРегл,
	|	0 КАК СуммаРеглБезНДС,
	|	
	|	&Валюта КАК Валюта,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаВВалюте,
	|	0 КАК СуммаБезНДСВВалюте,
	|	
	|	&Валюта КАК ВалютаВзаиморасчетов,
	|	ДанныеДокумента.СуммаДокумента КАК СуммаВВалютеВзаиморасчетов,
	|	0 КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|	
	|	ВЫБОР КОГДА &РасчетыПоДоговорам
	|		ТОГДА &Договор
	|		ИНАЧЕ &Ссылка
	|	КОНЕЦ КАК ИсточникГФУРасчетов
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И ДанныеДокумента.СуммаДокумента <> 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииТоваровОрганизаций";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтСоответствиеКорВидовЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтСоответствиеКорВидовЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|	&КонецПериода                                 КАК Период,
	|	&Ссылка                                       КАК Регистратор,
	|	&Комиссионер                                  КАК Организация,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	&Ссылка                                       КАК ДокументПоступления,
	|	ВтСоответствиеКорВидовЗапасов.ВидЗапасов      КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.АналитикаУчетаПартий       КАК АналитикаУчетаПартий,
	|	ТаблицаВидыЗапасов.Количество                 КАК Количество,
	|	ТаблицаВидыЗапасов.СуммаСНДС                  КАК Стоимость,
	|	ТаблицаВидыЗапасов.СуммаБезНДС                КАК СтоимостьБезНДС,
	|	ТаблицаВидыЗапасов.СтоимостьБезНДСРегл        КАК СтоимостьРегл,
	|	ТаблицаВидыЗапасов.НДСРегл                    КАК НДСРегл,
	|	ТаблицаВидыЗапасов.Номенклатура               КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика             КАК Характеристика,
	|	&ХозяйственнаяОперация                        КАК ХозяйственнаяОперация,
	|	ИСТИНА                                        КАК Первичное,
	|	НЕОПРЕДЕЛЕНО                                  КАК ДокументИсточник
	|ИЗ
	|	ВтТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтСоответствиеКорВидовЗапасов КАК ВтСоответствиеКорВидовЗапасов
	|		ПО ТаблицаВидыЗапасов.НалоговоеНазначениеСписания = ВтСоответствиеКорВидовЗапасов.НалоговоеНазначениеСписания
	|ГДЕ
	|	&ИспользоватьПартионныйУчет
	|	И ТаблицаВидыЗапасов.Количество > 0
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаЗакупки(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "Закупки";
	
	Если НЕ ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеСервер.ЕстьТаблицаЗапроса("ВтТаблицаВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтТаблицаВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	ТекстЗапроса =
	// Отражение задолженности перед комитентом 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОтражениеЗадолженностиПередКомитентом) КАК ХозяйственнаяОперация,
	|	&Комиссионер КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&Менеджер КАК Менеджер,
	|
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.Склад КАК Склад,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|
	|	&Партнер КАК Партнер,
	|	ВЫБОР
	|		КОГДА &РасчетыЧерезОтдельногоКонтрагента
	|			ТОГДА &Контрагент
	|		ИНАЧЕ &Комитент
	|	КОНЕЦ КАК Контрагент,
	|	НЕОПРЕДЕЛЕНО КАК Соглашение,
	|	НЕОПРЕДЕЛЕНО КАК Договор,
	|	НЕОПРЕДЕЛЕНО КАК Заказ,
	|
	|	0 КАК Количество,
	|
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК Сумма,
	|	ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС)
	|		* &КоэффициентПересчетаВВалютуУпр КАК ЧИСЛО(15,2)) КАК СуммаБезНДС,
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)) КАК СуммаРегл,
	|	ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС)
	|		* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК СуммаРеглБезНДС,
	|	0 КАК СуммаСкидки,
	|
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК СтоимостьРегл,
	|	0 КАК СуммаДопРасходов,
	|	0 КАК СуммаДопРасходовБезНДС,
	|
	|	&Валюта КАК ВалютаДокумента,
	|	ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаВВалютеДокумента,
	|	ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС КАК СуммаБезНДСВВалютеДокумента,
	|
	|	&Валюта КАК ВалютаВзаиморасчетов,
	|	ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаВВалютеВзаиморасчетов,
	|	ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС КАК СуммаБезНДСВВалютеВзаиморасчетов,
	|
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаВидыЗапасов.ВидЗапасов
	|		ИНАЧЕ ТаблицаВидыЗапасов.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	&Ссылка КАК ИсточникГФУРасчетов
	|ИЗ
	|	ВтТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВтТаблицаВидыЗапасов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтТаблицаВидыЗапасов";
	
	УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос);
	УстановитьПараметрыАналитикВзаиморасчетов(Запрос);
	ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                  КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.ВидЗапасов                   КАК ВидЗапасов,
	|	Справочник.Валюта                               КАК Валюта,
	|	Справочник.ТипЗапасов                           КАК ТипЗапасов,
	|	Справочник.ВидЗапасовВладельца                  КАК ВидЗапасовВладельца,
	|	Справочник.РеализацияЗапасовДругойОрганизации   КАК РеализацияЗапасовДругойОрганизации,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасовКомитента <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасовКомитента
	|	КОГДА Справочник.РеализацияЗапасовДругойОрганизации ТОГДА
	|		Справочник.ВидЗапасовВладельца
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.ВидЗапасов
	|	КОНЕЦ КАК ВидЗапасовКомитента,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры   КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.АналитикаУчетаПартий         КАК АналитикаУчетаПартий,
	|	АналитикаПереданногоТовара.КлючАналитики        КАК АналитикаУчетаПереданнойНоменклатуры,
	|	Аналитика.Номенклатура                          КАК Номенклатура,
	|	Аналитика.Характеристика                        КАК Характеристика,
	|	ТаблицаВидыЗапасов.НомерГТД                     КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество                   КАК Количество,
	|	ТаблицаВидыЗапасов.СуммаСНДС                    КАК СуммаСНДС,
	|	ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаВидыЗапасов.СуммаНДС                     КАК СуммаНДС,
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаСНДС
	|			* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15, 2)
	|	)                                               КАК СуммаРегл,
	|	ВЫРАЗИТЬ((ТаблицаВидыЗапасов.СуммаСНДС - ТаблицаВидыЗапасов.СуммаНДС)
	|		* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК СтоимостьБезНДСРегл,
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.СуммаНДС
	|		* &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК НДСРегл,
	|	ТаблицаВидыЗапасов.СтавкаНДС                    КАК СтавкаНДС,
	|	ТаблицаВидыЗапасов.ВидЗапасов.НалоговоеНазначение       КАК НалоговоеНазначение,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасовКомитента <> ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) ТОГДА
	|		ТаблицаВидыЗапасов.ВидЗапасовКомитента.НалоговоеНазначение 
	|	КОГДА Справочник.РеализацияЗапасовДругойОрганизации ТОГДА
	|		Справочник.ВидЗапасовВладельца.НалоговоеНазначение 
	|	ИНАЧЕ
	|		ТаблицаВидыЗапасов.ВидЗапасов.НалоговоеНазначение 
	|	КОНЕЦ КАК НалоговоеНазначениеКомитента,
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение           КАК ЦелевоеНалоговоеНазначение,
	|	ТаблицаВидыЗапасов.НалоговоеНазначениеСписания          КАК НалоговоеНазначениеСписания,
	|	ТаблицаВидыЗапасов.ИдентификаторСтроки          КАК ИдентификаторСтроки,
	|	Аналитика.Склад 								КАК Склад,
	|	ВЫБОР КОГДА ТаблицаВидыЗапасов.ВидЗапасовКомитента.Комитент ССЫЛКА Справочник.Партнеры
	|		ТОГДА АналитикаРасчетов.КлючАналитики
	|		ИНАЧЕ &АналитикаКомитентКомиссионер
	|	КОНЕЦ КАК АналитикаРасчетовСКомитентом
	|ПОМЕСТИТЬ ВтТаблицаВидыЗапасов
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК Справочник
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасов = Справочник.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаПереданногоТовара
	|	ПО
	|		Аналитика.Номенклатура		= АналитикаПереданногоТовара.Номенклатура
	|		И Аналитика.Характеристика	= АналитикаПереданногоТовара.Характеристика
	|		И &Комиссионер				= АналитикаПереданногоТовара.Склад
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)= АналитикаПереданногоТовара.Серия
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетов
	|		ПО АналитикаРасчетов.Организация = ТаблицаВидыЗапасов.Ссылка.Организация
	|		И АналитикаРасчетов.Партнер = ТаблицаВидыЗапасов.ВидЗапасовКомитента.Комитент
	|		И АналитикаРасчетов.Контрагент = ТаблицаВидыЗапасов.ВидЗапасовКомитента.Контрагент
	|		И АналитикаРасчетов.Договор = ТаблицаВидыЗапасов.ВидЗапасовКомитента.Договор
	|		И АналитикаРасчетов.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|	И Справочник.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра); 
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ПересчитатьТаблицуТоваровВВалютуРегл(Запрос)
	
	Если Запрос.Параметры.Свойство("ТаблицаТоваровПредварительнаяРасчитана") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросПредварительный = Новый Запрос;
	ЗапросПредварительный.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросПредварительный.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка                                КАК Ссылка,
	|	ТаблицаДокумента.НомерСтроки                           КАК НомерСтроки,
	|	ТаблицаДокумента.ИдентификаторСтроки                   КАК ИдентификаторСтроки,
	|	ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС КАК СуммаБезНДС,
	|	ТаблицаДокумента.СтавкаНДС                             КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС                              КАК СуммаНДС,
	|	&Валюта                                                КАК Валюта,
	|	&Период                                                КАК Дата
	|
	|ПОМЕСТИТЬ ТаблицаТоваровПредварительная
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании.ВидыЗапасов КАК ТаблицаДокумента
	|
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|	И &Валюта <> &ВалютаРегламентированногоУчета
	|";
	ЗапросПредварительный.УстановитьПараметр("Ссылка",                         Запрос.Параметры.Ссылка);
	ЗапросПредварительный.УстановитьПараметр("Период",                         Запрос.Параметры.Период);
	ЗапросПредварительный.УстановитьПараметр("Валюта",                         Запрос.Параметры.Валюта);
	ЗапросПредварительный.УстановитьПараметр("ВалютаРегламентированногоУчета", Запрос.Параметры.ВалютаРегламентированногоУчета);
	
	ЗапросПредварительный.Выполнить();
	
	ОбщегоНазначенияУТ.ПересчитатьТаблицуТоваровВВалютуРегл(Запрос.МенеджерВременныхТаблиц);
	
	Запрос.УстановитьПараметр("ТаблицаТоваровПредварительнаяРасчитана", Истина);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиУчетаНоменклатуры(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиУчетаНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросПредварительный = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура	 КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия			 КАК Серия,
	|	ТаблицаТовары.Склад			 КАК Склад
	|ИЗ (
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Аналитика.Номенклатура,
	|		Аналитика.Характеристика,
	|		&Серия КАК Серия,
	|		&Комиссионер КАК Склад
	|	ИЗ
	|		Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|	ГДЕ
	|		ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		Аналитика.Номенклатура,
	|		Аналитика.Характеристика,
	|		&Серия КАК Серия,
	|		ВидыЗапасовКомитента.Комитент КАК Склад
	|	ИЗ
	|		Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании.ВидыЗапасов КАК Строки
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовПродавца
	|		ПО ВидыЗапасовПродавца.Ссылка = Строки.ВидЗапасов
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовКомитента
	|		ПО ВидыЗапасовКомитента.Ссылка = Строки.ВидЗапасовКомитента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО Аналитика.КлючАналитики = Строки.АналитикаУчетаНоменклатуры
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомитента
	|		ПО АналитикаКомитента.Номенклатура = Аналитика.Номенклатура
	|			И АналитикаКомитента.Характеристика = Аналитика.Характеристика
	|			И АналитикаКомитента.Серия = Аналитика.Серия
	|			И АналитикаКомитента.Склад = ВидыЗапасовКомитента.Комитент
	|	ГДЕ
	|		Строки.Ссылка = &Ссылка
	|		И АналитикаКомитента.Номенклатура ЕСТЬ NULL
	|		И Не ВидыЗапасовПродавца.РеализацияЗапасовДругойОрганизации
	|		И ВидыЗапасовКомитента.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	) КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаТовары.Номенклатура = Аналитика.Номенклатура
	|		И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|		И ТаблицаТовары.Серия = Аналитика.Серия
	|		И ТаблицаТовары.Склад = Аналитика.Склад
	|ГДЕ
	|	Аналитика.Номенклатура ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Склад,
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика,
	|	ТаблицаТовары.Серия
	|");
	
	ЗапросПредварительный.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросПредварительный.УстановитьПараметр("Комиссионер", Запрос.Параметры.Комиссионер);
	ЗапросПредварительный.УстановитьПараметр("Подразделение", Запрос.Параметры.Подразделение);
	ЗапросПредварительный.УстановитьПараметр("Серия", Справочники.СерииНоменклатуры.ПустаяСсылка());
	
	Выборка = ЗапросПредварительный.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка)
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиУчетаНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры

Процедура УстановитьПараметрыАналитикВзаиморасчетов(Запрос)
	
	Если Запрос.Параметры.Свойство("АналитикаКомитентКомиссионер")
		И Запрос.Параметры.Свойство("АналитикаКомиссионерКомитент")
		И Запрос.Параметры.Свойство("АналитикаВзаиморасчетовКомитентКомиссионер")
		И Запрос.Параметры.Свойство("АналитикаВзаиморасчетовКомиссионерКомитент") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураКомитентКомиссионер = Новый Структура("Организация, Партнер, Контрагент, Договор, НаправлениеДеятельности",
		Запрос.Параметры.Комитент,
		Справочники.Партнеры.НашеПредприятие,
		Запрос.Параметры.Комиссионер,
		Справочники.ДоговорыКонтрагентов.ПустаяСсылка(),
		Запрос.Параметры.НаправлениеДеятельности);
	АналитикаКомитентКомиссионер = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураКомитентКомиссионер);
	
	СтруктураКомиссионерКомитент = Новый Структура("Организация, Партнер, Контрагент, Договор, НаправлениеДеятельности",
		Запрос.Параметры.Комиссионер,
		Справочники.Партнеры.НашеПредприятие,
		Запрос.Параметры.Комитент,
		Справочники.ДоговорыКонтрагентов.ПустаяСсылка(),
		Запрос.Параметры.НаправлениеДеятельности);
	АналитикаКомиссионерКомитент = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураКомиссионерКомитент);

	Если Запрос.Параметры.РасчетыЧерезОтдельногоКонтрагента Тогда
		
		СтруктураКомитентКомиссионер = Новый Структура("Организация, Партнер, Контрагент, Договор, НаправлениеДеятельности",
			Запрос.Параметры.Комитент,
			Запрос.Параметры.Партнер,
			Запрос.Параметры.Контрагент,
			Справочники.ДоговорыКонтрагентов.ПустаяСсылка(),
			Запрос.Параметры.НаправлениеДеятельности);
		АналитикаВзаиморасчетовКомитентКомиссионер = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураКомитентКомиссионер);
		
		СтруктураКомиссионерКомитент = Новый Структура("Организация, Партнер, Контрагент, Договор, НаправлениеДеятельности",
			Запрос.Параметры.Комиссионер,
			Запрос.Параметры.Партнер,
			Запрос.Параметры.Контрагент,
			Справочники.ДоговорыКонтрагентов.ПустаяСсылка(),
			Запрос.Параметры.НаправлениеДеятельности);
		АналитикаВзаиморасчетовКомиссионерКомитент = РегистрыСведений.АналитикаУчетаПоПартнерам.ЗначениеКлючаАналитики(СтруктураКомиссионерКомитент);
	Иначе
		АналитикаВзаиморасчетовКомитентКомиссионер = АналитикаКомитентКомиссионер;
		АналитикаВзаиморасчетовКомиссионерКомитент = АналитикаКомиссионерКомитент;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("АналитикаКомитентКомиссионер",               АналитикаКомитентКомиссионер);
	Запрос.УстановитьПараметр("АналитикаКомиссионерКомитент",               АналитикаКомиссионерКомитент);
	Запрос.УстановитьПараметр("АналитикаВзаиморасчетовКомитентКомиссионер", АналитикаВзаиморасчетовКомитентКомиссионер);
	Запрос.УстановитьПараметр("АналитикаВзаиморасчетовКомиссионерКомитент", АналитикаВзаиморасчетовКомиссионерКомитент);
	
КонецПроцедуры


Функция ТекстЗапросаВтСоответствиеКорВидовЗапасов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтСоответствиеКорВидовЗапасов"; 
	
	ИнициализироватьКорВидыЗапасов(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СоответствиеКорВидовЗапасов.НалоговоеНазначениеСписания КАК НалоговоеНазначениеСписания,
	|	СоответствиеКорВидовЗапасов.ВидЗапасов		 			КАК ВидЗапасов
	|ПОМЕСТИТЬ ВтСоответствиеКорВидовЗапасов
	|ИЗ
	|	&СоответствиеКорВидовЗапасов КАК СоответствиеКорВидовЗапасов";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции // ТекстЗапросаВтСоответствиеКорВидовЗапасов

Процедура ИнициализироватьКорВидыЗапасов(Запрос)
	
	Если Запрос.Параметры.Свойство("СоответствиеКорВидовЗапасов") Тогда
		Возврат;
	КонецЕсли;
	
	СоответствиеКорВидовЗапасов = Новый ТаблицаЗначений;
	СоответствиеКорВидовЗапасов.Колонки.Добавить("НалоговоеНазначениеСписания", Новый ОписаниеТипов("СправочникСсылка.НалоговыеНазначенияАктивовИЗатрат")); 
	СоответствиеКорВидовЗапасов.Колонки.Добавить("ВидЗапасов",		 Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов")); 
	
	ЗапросЦелевыхНазначений = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаВидыЗапасов.НалоговоеНазначениеСписания КАК НалоговоеНазначениеСписания
	|ИЗ
	|	Документ.ОтчетПоКомиссииМеждуОрганизациямиОСписании.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|");
	
	ЗапросЦелевыхНазначений.УстановитьПараметр("Ссылка",				Запрос.Параметры.Ссылка);
	
	Выборка = ЗапросЦелевыхНазначений.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		КорВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
			Запрос.Параметры.Комиссионер, 
			Запрос.Параметры.ХозяйственнаяОперация,
			,
			Выборка.НалоговоеНазначениеСписания
		);
		
		НоваяСтрока = СоответствиеКорВидовЗапасов.Добавить();
		НоваяСтрока.НалоговоеНазначениеСписания	= Выборка.НалоговоеНазначениеСписания;
		НоваяСтрока.ВидЗапасов					= КорВидЗапасов;
		
	КонецЦикла;	
	
	Запрос.УстановитьПараметр("СоответствиеКорВидовЗапасов", СоответствиеКорВидовЗапасов);
	
КонецПроцедуры // ИнициализироватьКорВидыЗапасов

Процедура УстановитьПараметрыЗапросаКоэффициентыВалют(Запрос)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуУпр")
		И Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуРегл") Тогда
		Возврат;
	КонецЕсли;
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
		Запрос.Параметры.Валюта, 
		, // ВалютаВзаиморасчетов
		Запрос.Параметры.Период);
	
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуУпр",           Коэффициенты.КоэффициентПересчетаВВалютуУПР);
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл",          Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	
КонецПроцедуры


#КонецОбласти

#КонецОбласти

#КонецЕсли
