
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ЭтоВебКлиент = ОбщегоНазначенияКлиентСервер.ЭтоВебКлиент();
	
	// БазоваяФункциональность
	ЗапрашиватьПодтверждениеПриЗавершенииПрограммы = СтандартныеПодсистемыСервер.ЗапрашиватьПодтверждениеПриЗавершенииПрограммы();
	// Конец БазоваяФункциональность
	
	// работа с пользователями
	ТекущийПользователь = Пользователи.АвторизованныйПользователь();	
	
	// работа с файлами
	СпрашиватьРежимРедактированияПриОткрытииФайла = 
		ХранилищеОбщихНастроек.Загрузить("НастройкиОткрытияФайлов", "СпрашиватьРежимРедактированияПриОткрытииФайла");
	Если СпрашиватьРежимРедактированияПриОткрытииФайла = Неопределено Тогда
		СпрашиватьРежимРедактированияПриОткрытииФайла = Истина;
		ХранилищеОбщихНастроек.Сохранить("НастройкиОткрытияФайлов", "СпрашиватьРежимРедактированияПриОткрытииФайла", СпрашиватьРежимРедактированияПриОткрытииФайла);
	КонецЕсли;
	
	ДействиеПоДвойномуЩелчкуМыши = ХранилищеОбщихНастроек.Загрузить("НастройкиОткрытияФайлов", "ДействиеПоДвойномуЩелчкуМыши");
	Если ДействиеПоДвойномуЩелчкуМыши = Неопределено Тогда
		ДействиеПоДвойномуЩелчкуМыши = Перечисления.ДействияСФайламиПоДвойномуЩелчку.ОткрыватьФайл;
		ХранилищеОбщихНастроек.Сохранить("НастройкиОткрытияФайлов", "ДействиеПоДвойномуЩелчкуМыши", ДействиеПоДвойномуЩелчкуМыши);
	КонецЕсли;
	
	СпособСравненияВерсийФайлов = ХранилищеОбщихНастроек.Загрузить("НастройкиСравненияФайлов", "СпособСравненияВерсийФайлов");
	ПоказыватьПодсказкиПриРедактированииФайлов = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиПрограммы", "ПоказыватьПодсказкиПриРедактированииФайлов");
	ПоказыватьИнформациюЧтоФайлНеБылИзменен = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиПрограммы", "ПоказыватьИнформациюЧтоФайлНеБылИзменен");
	
	ПоказыватьЗанятыеФайлыПриЗавершенииРаботы =  ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("НастройкиПрограммы", "ПоказыватьЗанятыеФайлыПриЗавершенииРаботы");
	Если ПоказыватьЗанятыеФайлыПриЗавершенииРаботы = Неопределено Тогда 
		ПоказыватьЗанятыеФайлыПриЗавершенииРаботы = Истина;
		ХранилищеОбщихНастроек.Сохранить("НастройкиПрограммы", "ПоказыватьЗанятыеФайлыПриЗавершенииРаботы", ПоказыватьЗанятыеФайлыПриЗавершенииРаботы);
	КонецЕсли;
	
	ПоказыватьКолонкуРазмер = ХранилищеОбщихНастроек.Загрузить("НастройкиПрограммы", "ПоказыватьКолонкуРазмер");
	Если ПоказыватьКолонкуРазмер = Неопределено Тогда
		ПоказыватьКолонкуРазмер = Ложь;
		ХранилищеОбщихНастроек.Сохранить("НастройкиПрограммы", "ПоказыватьКолонкуРазмер", ПоказыватьКолонкуРазмер);
	КонецЕсли;
	
	// работа с документами
	ВидВнутреннегоДокумента = ХранилищеОбщихНастроек.Загрузить("НастройкиРаботыСДокументами", "ВидВнутреннегоДокумента");
	ВидВходящегоДокумента	= ХранилищеОбщихНастроек.Загрузить("НастройкиРаботыСДокументами", "ВидВходящегоДокумента");
	ВидИсходящегоДокумента 	= ХранилищеОбщихНастроек.Загрузить("НастройкиРаботыСДокументами", "ВидИсходящегоДокумента");
	
	СпособОтправки  = ХранилищеОбщихНастроек.Загрузить("НастройкиРаботыСДокументами", "СпособОтправки");
	СпособПолучения = ХранилищеОбщихНастроек.Загрузить("НастройкиРаботыСДокументами", "СпособПолучения");
	
	ПоказыватьПредупреждениеПриРегистрации = ХранилищеОбщихНастроек.Загрузить("НастройкиРаботыСДокументами", "ПоказыватьПредупреждениеПриРегистрации");
	Если ПоказыватьПредупреждениеПриРегистрации = Неопределено Тогда 
		ПоказыватьПредупреждениеПриРегистрации = Истина;
		ХранилищеОбщихНастроек.Сохранить("НастройкиРаботыСДокументами", "ПоказыватьПредупреждениеПриРегистрации", ПоказыватьПредупреждениеПриРегистрации);
	КонецЕсли;
	
	Элементы.Группа8.Видимость = ИнтернетПоддержкаПользователейВызовСервера.ДоступнаНастройкаПараметровПодключенияКИнтернетПоддержке();
	
	// Печать
	ЗапрашиватьПодтверждение = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить("ОбщиеНастройкиПользователя", "ЗапрашиватьПодтверждениеПриПечатиКомплектаДокументов");
	Если ЗапрашиватьПодтверждение <> Неопределено Тогда
		ЗапрашиватьПодтверждениеПриПечатиКомплектаДокументов = ЗапрашиватьПодтверждение;
	Иначе
		ЗапрашиватьПодтверждениеПриПечатиКомплектаДокументов = Истина;
		ОбщегоНазначения.ХранилищеОбщихНастроекСохранить("ОбщиеНастройкиПользователя", "ЗапрашиватьПодтверждениеПриПечатиКомплектаДокументов", Истина);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Оповещение = Новый ОписаниеОповещения("ЗаписатьИЗакрытьОповещение", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	МассивСтруктур = Новый Массив;
	
	// работа с файлами
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", "НастройкиОткрытияФайлов");
	Элемент.Вставить("Настройка", "ДействиеПоДвойномуЩелчкуМыши");
	Элемент.Вставить("Значение", ДействиеПоДвойномуЩелчкуМыши);
	МассивСтруктур.Добавить(Элемент);
	
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", "НастройкиОткрытияФайлов");
	Элемент.Вставить("Настройка", "СпрашиватьРежимРедактированияПриОткрытииФайла");
	Элемент.Вставить("Значение", СпрашиватьРежимРедактированияПриОткрытииФайла);
	МассивСтруктур.Добавить(Элемент);
	
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", "НастройкиПрограммы");
	Элемент.Вставить("Настройка", "ПоказыватьПодсказкиПриРедактированииФайлов");
	Элемент.Вставить("Значение", ПоказыватьПодсказкиПриРедактированииФайлов);
	МассивСтруктур.Добавить(Элемент);
	
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", "НастройкиПрограммы");
	Элемент.Вставить("Настройка", "ПоказыватьЗанятыеФайлыПриЗавершенииРаботы");
	Элемент.Вставить("Значение", ПоказыватьЗанятыеФайлыПриЗавершенииРаботы);
	МассивСтруктур.Добавить(Элемент);
	
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", "НастройкиСравненияФайлов");
	Элемент.Вставить("Настройка", "СпособСравненияВерсийФайлов");
	Элемент.Вставить("Значение", СпособСравненияВерсийФайлов);
	МассивСтруктур.Добавить(Элемент);
	
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", "НастройкиПрограммы");
	Элемент.Вставить("Настройка", "ПоказыватьКолонкуРазмер");
	Элемент.Вставить("Значение", ПоказыватьКолонкуРазмер);
	МассивСтруктур.Добавить(Элемент);
	
	// БазоваяФункциональность
	МассивСтруктур.Добавить(ОписаниеНастройки(
	    "ОбщиеНастройкиПользователя",
	    "ЗапрашиватьПодтверждениеПриЗавершенииПрограммы",
	    ЗапрашиватьПодтверждениеПриЗавершенииПрограммы));
	// Конец БазоваяФункциональность
	
	МассивСтруктур.Добавить(ОписаниеНастройки(
	    "НастройкиПрограммы",
	    "ПоказыватьИнформациюЧтоФайлНеБылИзменен",
	    ПоказыватьИнформациюЧтоФайлНеБылИзменен));
	
	// Печать
	МассивСтруктур.Добавить(ОписаниеНастройки(
		"ОбщиеНастройкиПользователя",
		"ЗапрашиватьПодтверждениеПриПечатиКомплектаДокументов",
		ЗапрашиватьПодтверждениеПриПечатиКомплектаДокументов));
	// Конец Печать
	
	ОбщегоНазначенияВызовСервера.ХранилищеОбщихНастроекСохранитьМассив(МассивСтруктур);
	Модифицированность = Ложь;
	Закрыть();
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаРабочегоКаталога(Команда)
	ОткрытьФорму("ОбщаяФорма.НастройкаОсновногоРабочегоКаталога",,,,,, Неопределено, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРасширениеРаботыСФайламиНаКлиенте(Команда)
	НачатьУстановкуРасширенияРаботыСФайлами(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура НастройкаСканирования(Команда)
	
	ФайловыеФункцииКлиент.ОткрытьФормуНастройкиСканирования();
	
КонецПроцедуры

&НаКлиенте
Процедура СведенияОПользователе(Команда)
	
	ПоказатьЗначение(Неопределено, ТекущийПользователь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПараметрыСистемы(Команда)
	
	ОбновитьПовторноИспользуемыеЗначения();
	ОбновитьИнтерфейс();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗадатьДействиеПриВыбореМакетаПечатнойФормы(Команда)
	ОткрытьФорму("РегистрСведений.ПользовательскиеМакетыПечати.Форма.ВыбораРежимаОткрытияМакета");
КонецПроцедуры

&НаКлиенте
Процедура ПерсональнаяНастройкаПроксиСервера(Команда)
	
	ОткрытьФорму("ОбщаяФорма.ПараметрыПроксиСервера",
	                  Новый Структура("НастройкаПроксиНаКлиенте", Истина));
					  
КонецПроцедуры

&НаКлиенте
Процедура НастройкаЭЦП(Команда)
	
	ЭлектроннаяПодписьКлиент.ОткрытьНастройкиЭлектроннойПодписиИШифрования();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРасширениеРаботыСКриптографиейНаКлиенте(Команда)
	НачатьУстановкуРасширенияРаботыСКриптографией(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура НастроитьПараметрыАвторизацииВ1СДокументооборот(Команда)
	ОткрытьФорму("Обработка.ИнтеграцияС1СДокументооборот.Форма.АвторизацияВ1СДокументооборот",,,,,, Неопределено, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
КонецПроцедуры

&НаКлиенте
Процедура НастройкаРабочегоКаталогаИнтеграции(Команда)
	ОткрытьФорму("Обработка.ИнтеграцияС1СДокументооборот.Форма.НастройкаКаталогаФайлов");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаписатьИЗакрытьОповещение(Результат, Неопределен) Экспорт
	ЗаписатьИЗакрыть(Неопределено);
КонецПроцедуры

&НаКлиенте
Функция ОписаниеНастройки(Объект, Настройка, Значение)
	
	Элемент = Новый Структура;
	Элемент.Вставить("Объект", Объект);
	Элемент.Вставить("Настройка", Настройка);
	Элемент.Вставить("Значение", Значение);
	
	Возврат Элемент;
	
КонецФункции

#КонецОбласти
