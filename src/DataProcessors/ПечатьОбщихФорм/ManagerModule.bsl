#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область Печать

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	СтруктураТипов = ОбщегоНазначенияУТ.СоответствиеМассивовПоТипамОбъектов(МассивОбъектов);
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетКомиссионера") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ОтчетКомиссионера",
			НСтр("ru='Отчет комиссионера';uk='Звіт комісіонера'"),
			СформироватьПечатнуюФормуОтчетПоКомиссии(СтруктураТипов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода),
			,
			,
			,
			Истина // ЭтоМногоязычнаяПечатнаяФорма
		);
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ОтчетКомиссионераСписание") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"ОтчетКомиссионераСписание",
			НСтр("ru='Отчет комиссионера';uk='Звіт комісіонера'"),
			СформироватьПечатнуюФормуОтчетПоКомиссииСписание(СтруктураТипов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода),
			,
			,
			,
			Истина // ЭтоМногоязычнаяПечатнаяФорма
		);
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М4") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"М4",
			НСтр("ru='Приходный ордер (М-4)';uk='Прибутковий ордер (М-4)'"),
			СформироватьПечатнуюФормуМ4(СтруктураТипов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РасходнаяНакладная") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм, 
			"РасходнаяНакладная", 
			НСтр("ru='Расходная накладная';uk='Видаткова накладна'"),
			СформироватьПечатнуюФормуРасходнаяНакладная(СтруктураТипов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода),
			,
			,
			,
			Истина // ЭтоМногоязычнаяПечатнаяФорма
		);
		
	КонецЕсли;
	
		
	
	
	
	
	
	
	
	
	
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, СтруктураТипов, КоллекцияПечатныхФорм);
	
КонецПроцедуры

#Область Печать_ОтчетПоКомиссии

Функция СформироватьПечатнуюФормуОтчетПоКомиссии(СтруктураТипов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода)	
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОтчетПоКомиссии";
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		Если СтруктураОбъектов.Ключ = "Документ.ОтчетКомиссионераОСписании"
			Или СтруктураОбъектов.Ключ = "Документ.ОтчетКомитентуОСписании" Тогда
			Продолжить;
		КонецЕсли;

		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыОтчетПоКомиссии(ПараметрыПечати, СтруктураОбъектов.Значение);
		
		ЗаполнитьТабличныйДокументОтчетПоКомиссииОПродажах(
			ТабличныйДокумент,
			ДанныеДляПечати,
			ОбъектыПечати,
			ПараметрыВывода
		);	
			
	КонецЦикла;
	
	Возврат ТабличныйДокумент;

КонецФункции

Функция СформироватьПечатнуюФормуОтчетПоКомиссииСписание(СтруктураТипов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОтчетПоКомиссииСписание";
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		Если СтруктураОбъектов.Ключ = "Документ.ОтчетКомиссионера"
			Или СтруктураОбъектов.Ключ = "Документ.ОтчетКомитенту" Тогда
			Продолжить;
		КонецЕсли;
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыОтчетПоКомиссииОСписании(ПараметрыПечати, СтруктураОбъектов.Значение);
		
		ЗаполнитьТабличныйДокументОтчетПоКомиссииОСписании(
			ТабличныйДокумент,
			ДанныеДляПечати,
			ОбъектыПечати,
			ПараметрыВывода
		);
	КонецЦикла;
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьРеквизитыШапкиОтчетПоКомиссии(ДанныеПечати, Заголовок, Макет, ТабличныйДокумент, КодЯзыкаПечать)
	
	// Выводим общие реквизиты шапки
	СведенияОКомитенте    = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Комитент, ДанныеПечати.Дата, , ДанныеПечати.БанковскийСчетКомитента);
	СведенияОКомиссионере = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Комиссионер, ДанныеПечати.Дата, , ДанныеПечати.БанковскийСчетКомиссионера);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ТекстЗаголовка", ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(ДанныеПечати, Заголовок, КодЯзыкаПечать));

	СтруктураПараметров.Вставить("ПредставлениеКомитента", ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКомитенте, "ПолноеНаименование,"));
	СтруктураПараметров.Вставить("ПредставлениеКомиссионера", ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКомиссионере, "ПолноеНаименование,"));
	
	Если ДанныеПечати.ЭтоОтчетКомиссионера Тогда
		СписокСведенийКомитента    = "НомерСчета,Банк,МФО,/,ЮридическийАдрес,Телефоны,/,КодПоЕДРПОУ,КодПоДРФО,ИНН,НомерСвидетельства,/,ИнформацияОСтатусеПлательщикаНалогов";
		СписокСведенийКомиссионера = "ФактическийАдрес,Телефоны";
	Иначе                              
		СписокСведенийКомитента    = "ФактическийАдрес,Телефоны";
		СписокСведенийКомиссионера = "НомерСчета,Банк,МФО,/,ЮридическийАдрес,Телефоны,/,КодПоЕДРПОУ,КодПоДРФО,ИНН,НомерСвидетельства,/,ИнформацияОСтатусеПлательщикаНалогов";		
	КонецЕсли;
	СтруктураПараметров.Вставить("РеквизитыКомитента",    ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКомитенте, СписокСведенийКомитента, Истина, КодЯзыкаПечать));
	СтруктураПараметров.Вставить("РеквизитыКомиссионера", ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОКомиссионере, СписокСведенийКомиссионера, Истина, КодЯзыкаПечать));
	
	ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	// Выводим дополнительно информацию о договоре и заказе
	СписокДополнительныхПараметров = "ДоговорНаименованиеДляПечати,";	
	МассивСтруктурСтрок = ФормированиеПечатныхФорм.ДополнительнаяИнформация(ДанныеПечати, СписокДополнительныхПараметров, КодЯзыкаПечать);
	ОбластьМакета = Макет.ПолучитьОбласть("ДопИнформация");
	Для каждого СтруктураСтроки Из МассивСтруктурСтрок Цикл
		ОбластьМакета.Параметры.Заполнить(СтруктураСтроки);
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЦикла;		
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыПодвалаОтчетПоКомисии(ДанныеПечати, ВыборкаПоДокументам, Макет, ТабличныйДокумент, КодЯзыкаПечать)
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("СуммаКомитентаВсего", ВыборкаПоДокументам.СуммаКомитента);
	СтруктураПараметров.Вставить("СуммаПродажиВсего", ВыборкаПоДокументам.СуммаПродажи);
	СтруктураПараметров.Вставить("СуммаВознагражденияВсего", ВыборкаПоДокументам.СуммаВознаграждения);
	
	Если ВыборкаПоДокументам.СуммаПродажи < 0 Тогда
		ТекстИтоговаяСтрока = НСтр("ru='Всего возвращено наименований ';uk= 'Всього повернуто найменувань '", КодЯзыкаПечать);
	Иначе
		ТекстИтоговаяСтрока = НСтр("ru='Всего продано наименований ';uk= 'Всього продано найменувань '", КодЯзыкаПечать);
	КонецЕсли;
	
	СтруктураПараметров.Вставить("ИтоговаяСтрока", ТекстИтоговаяСтрока + " "
		+ ВыборкаПоДокументам.Выбрать().Количество()
		+ ", " + НСтр("ru=', на сумму ';uk= ', на суму '", КодЯзыкаПечать) + " "
		+ ФормированиеПечатныхФорм.ФорматСумм(ВыборкаПоДокументам.СуммаПродажи, ДанныеПечати.Валюта));
	
	СтруктураПараметров.Вставить("СуммаПрописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(
		ВыборкаПоДокументам.СуммаПродажи, 
		ДанныеПечати.Валюта,
		,
		КодЯзыкаПечать
		)	
	);
	
	Если ДанныеПечати.СуммаВознаграждения <> 0 Тогда
		СтруктураПараметров.Вставить("СуммаВознаграждения", НСтр("ru='Сумма комиссионного вознаграждения составила';uk= 'Сума комісійної винагороди склала'", КодЯзыкаПечать) + " "
			+ ?(ДанныеПечати.СуммаВознаграждения < 0, НСтр("ru='минус';uk= 'мінус'", КодЯзыкаПечать) + " ", "")
			+ РаботаСКурсамиВалют.СформироватьСуммуПрописью(ДанныеПечати.СуммаВознаграждения, ДанныеПечати.Валюта, , КодЯзыкаПечать));
			
	КонецЕсли;
	
	
	ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	Если ЗначениеЗаполнено(ДанныеПечати.МестоСоставленияДокумента) Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("МестоСоставления");
		СтруктураПараметров.Вставить("МестоСоставления", СокрЛП(ДанныеПечати.МестоСоставленияДокумента));
		ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЕсли;

	ДанныеДляФормированияПодписей = Новый Структура("ПредставительОрганизации, ПредставительОрганизацииДолжность, ПредставительКонтрагента, ПредставительОрганизацииПолучателя, ПредставительОрганизацииПолучателяДолжность");
	Если ДанныеПечати.ЭтоОтчетКомиссионера Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("ПодписиОтчетКомиссионера");
		ДанныеДляФормированияПодписей.ПредставительОрганизации                    = ДанныеПечати.ПредставительКомитента;
		ДанныеДляФормированияПодписей.ПредставительОрганизацииДолжность           = ДанныеПечати.ПредставительКомитентаДолжность;
		ДанныеДляФормированияПодписей.ПредставительКонтрагента                    = ДанныеПечати.ПредставительКомиссионераСтрокой;
		ДанныеДляФормированияПодписей.ПредставительОрганизацииПолучателяДолжность = ДанныеПечати.ПредставительКомиссионераДолжность;
		ДанныеДляФормированияПодписей.ПредставительОрганизацииПолучателя          = ДанныеПечати.ПредставительКомиссионера;
	Иначе
		ОбластьМакета = Макет.ПолучитьОбласть("ПодписиОтчетКомитенту");
		ДанныеДляФормированияПодписей.ПредставительОрганизации                    = ДанныеПечати.ПредставительКомиссионера;
		ДанныеДляФормированияПодписей.ПредставительОрганизацииДолжность           = ДанныеПечати.ПредставительКомиссионераДолжность;
		ДанныеДляФормированияПодписей.ПредставительКонтрагента                    = ДанныеПечати.ПредставительКомитентаСтрокой;
		ДанныеДляФормированияПодписей.ПредставительОрганизацииПолучателяДолжность = ДанныеПечати.ПредставительКомитентаДолжность;
		ДанныеДляФормированияПодписей.ПредставительОрганизацииПолучателя          = ДанныеПечати.ПредставительКомитента;
	КонецЕсли;
	
	ОбластьМакета.Параметры.Заполнить(ФормированиеПечатныхФорм.СведенияОбОтветсвенныхЛицах(ДанныеДляФормированияПодписей, КодЯзыкаПечать));
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	
КонецПроцедуры

Процедура ЗаполнитьТабличныйДокументОтчетПоКомиссииОПродажах(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыВывода) 	
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;	
	
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьОбщихФорм.ПФ_MXL_ОтчетПоКомиссии", КодЯзыкаПечать);
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	
	ДанныеПечати      	= ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	Пока ДанныеПечати.Следующий() Цикл
	
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВыборкаПоДокументам.Сбросить();
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		Если ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска) Тогда
			
			Если ДанныеПечати.ЭтоОтчетКомиссионера Тогда
				Заголовок = НСтр("ru='Отчет комиссионера о продажах';uk= 'Звіт комісіонера про продажі'", КодЯзыкаПечать); 
			Иначе
				Заголовок = НСтр("ru='Отчет комитенту о продажах';uk= 'Звіт комітенту про продажі'", КодЯзыкаПечать);
			КонецЕсли;
		
			// Выводим общие реквизиты шапки
			ЗаполнитьРеквизитыШапкиОтчетПоКомиссии(
				ДанныеПечати,
				Заголовок,
				Макет,
				ТабличныйДокумент,
				КодЯзыкаПечать
			);
			
			СтруктураПараметров = Новый Структура;
			
			// Выводим заголовок таблицы
			Если ЗначениеЗаполнено(КолонкаКодов) Тогда
				ЗаголовокТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыСКодами");
				СтруктураПараметров.Вставить("ИмяКолонкиКодов", КолонкаКодов);
			Иначе
				ЗаголовокТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
			КонецЕсли;
			СтруктураПараметров.Вставить("Валюта", ДанныеПечати.Валюта);
			ЗаголовокТаблицы.Параметры.Заполнить(СтруктураПараметров);
			ЗаполнитьЗначенияСвойств(ЗаголовокТаблицы.Параметры, ФормированиеПечатныхФорм.СформироватьЗаголовкиДляСуммовыхПоказателей(ДанныеПечати, КодЯзыкаПечать, Истина));
			ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
			
			// Выводим многострочную часть документа
			Если ЗначениеЗаполнено(КолонкаКодов) Тогда
				ОбластьМакета = Макет.ПолучитьОбласть("СтрокаСКодами");
			Иначе
				ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			КонецЕсли;
				
			НомерСтроки = 0;
			
			СтрокаТовары = ВыборкаПоДокументам.Выбрать();
			Пока СтрокаТовары.Следующий() Цикл
				НомерСтроки = НомерСтроки + 1;
				
				ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
				
				СтруктураПараметров = Новый Структура;
				
				Если ЗначениеЗаполнено(КолонкаКодов) Тогда
					СтруктураПараметров.Вставить("Артикул", СтрокаТовары[КолонкаКодов]);
				КонецЕсли;
				
				СтруктураПараметров.Вставить("НомерСтроки", НомерСтроки);
				СтруктураПараметров.Вставить("ТоварНаименование", НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					СтрокаТовары.ТоварНаименование,
					СтрокаТовары.Характеристика));
				СтруктураПараметров.Вставить("ЦенаКомитента", ?(СтрокаТовары.Количество = 0, 0, Окр(СтрокаТовары.СуммаКомитента / СтрокаТовары.Количество, 2, 1)));
				СтруктураПараметров.Вставить("ЦенаПродажи", ?(СтрокаТовары.Количество = 0, 0, Окр(СтрокаТовары.СуммаПродажи / СтрокаТовары.Количество, 2, 1)));
				
				ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
				ТабличныйДокумент.Вывести(ОбластьМакета);
			КонецЦикла;
			
			ЗаполнитьРеквизитыПодвалаОтчетПоКомисии(
				ДанныеПечати,
				ВыборкаПоДокументам,
				Макет,
				ТабличныйДокумент,
				КодЯзыкаПечать
			);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
				ТабличныйДокумент,
				НомерСтрокиНачало,
				ОбъектыПечати,
				ДанныеПечати.Ссылка);
			
		КонецЕсли;
	
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнитьРеквизитыПодвалаОтчетПоКомиссииОСписании(ДанныеПечати, ВыборкаПоДокументам, Макет, ТабличныйДокумент, КодЯзыкаПечать)
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("СуммаВсего", ВыборкаПоДокументам.Сумма);
	СтруктураПараметров.Вставить("ИтоговаяСтрока", НСтр("ru='Всего списано наименований';uk= 'Всього списано найменувань'", КодЯзыкаПечать) + " " 
		+ ВыборкаПоДокументам.Выбрать().Количество()
		+ ?(ВыборкаПоДокументам.Сумма <> 0, ", " + НСтр("ru='на сумму';uk= 'на суму'", КодЯзыкаПечать) + " ", "")
		+ ?(ВыборкаПоДокументам.Сумма <> 0, ФормированиеПечатныхФорм.ФорматСумм(ВыборкаПоДокументам.Сумма, ДанныеПечати.Валюта), ""));
	СтруктураПараметров.Вставить("СуммаПрописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(
		ВыборкаПоДокументам.Сумма, 
		ДанныеПечати.Валюта,
		,
		КодЯзыкаПечать
		)
	);
		
	
	ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	Если ЗначениеЗаполнено(ДанныеПечати.МестоСоставленияДокумента) Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("МестоСоставления");
		СтруктураПараметров.Вставить("МестоСоставления", СокрЛП(ДанныеПечати.МестоСоставленияДокумента));
		ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЕсли;

	ДанныеДляФормированияПодписей = Новый Структура("ПредставительОрганизации, ПредставительОрганизацииДолжность, ПредставительКонтрагента, ПредставительОрганизацииПолучателя, ПредставительОрганизацииПолучателяДолжность");
	Если ДанныеПечати.ЭтоОтчетКомиссионера Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("ПодписиОтчетКомиссионера");
		ДанныеДляФормированияПодписей.ПредставительОрганизации                    = ДанныеПечати.ПредставительКомитента;
		ДанныеДляФормированияПодписей.ПредставительОрганизацииДолжность           = ДанныеПечати.ПредставительКомитентаДолжность;
		ДанныеДляФормированияПодписей.ПредставительКонтрагента                    = ДанныеПечати.ПредставительКомиссионераСтрокой;
		ДанныеДляФормированияПодписей.ПредставительОрганизацииПолучателяДолжность = ДанныеПечати.ПредставительКомиссионераДолжность;
		ДанныеДляФормированияПодписей.ПредставительОрганизацииПолучателя          = ДанныеПечати.ПредставительКомиссионера;
	Иначе
		ОбластьМакета = Макет.ПолучитьОбласть("ПодписиОтчетКомитенту");
		ДанныеДляФормированияПодписей.ПредставительОрганизации                    = ДанныеПечати.ПредставительКомиссионера;
		ДанныеДляФормированияПодписей.ПредставительОрганизацииДолжность           = ДанныеПечати.ПредставительКомиссионераДолжность;
		ДанныеДляФормированияПодписей.ПредставительКонтрагента                    = ДанныеПечати.ПредставительКомитентаСтрокой;
		ДанныеДляФормированияПодписей.ПредставительОрганизацииПолучателяДолжность = ДанныеПечати.ПредставительКомитентаДолжность;
		ДанныеДляФормированияПодписей.ПредставительОрганизацииПолучателя          = ДанныеПечати.ПредставительКомитента;
	КонецЕсли;
	
	ОбластьМакета.Параметры.Заполнить(ФормированиеПечатныхФорм.СведенияОбОтветсвенныхЛицах(ДанныеДляФормированияПодписей, КодЯзыкаПечать));
	ТабличныйДокумент.Вывести(ОбластьМакета);
		
КонецПроцедуры

Процедура ЗаполнитьТабличныйДокументОтчетПоКомиссииОСписании(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, ПараметрыВывода) 
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;	
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьОбщихФорм.ПФ_MXL_ОтчетПоКомиссииОСписании", КодЯзыкаПечать);	
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();

	ДанныеПечати      	= ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	Пока ДанныеПечати.Следующий() Цикл
	
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		Если ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска) Тогда
			
			Если ДанныеПечати.ЭтоОтчетКомиссионера Тогда
				Заголовок = НСтр("ru='Отчет комиссионера о списании';uk= 'Звіт комісіонера про списання'", КодЯзыкаПечать);
			Иначе
				Заголовок = НСтр("ru='Отчет комитенту о списании';uk= 'Звіт комітенту про списання'", КодЯзыкаПечать);
			КонецЕсли;
		
			// Выводим общие реквизиты шапки
			ЗаполнитьРеквизитыШапкиОтчетПоКомиссии(
				ДанныеПечати,
				Заголовок,
				Макет,
				ТабличныйДокумент,
				КодЯзыкаПечать
			);
			
			СтруктураПараметров = Новый Структура;
			
			// Выводим заголовок таблицы
			Если ЗначениеЗаполнено(КолонкаКодов) Тогда
				ЗаголовокТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицыСКодами");
				СтруктураПараметров.Вставить("ИмяКолонкиКодов", КолонкаКодов);
			Иначе
				ЗаголовокТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
			КонецЕсли;
			СтруктураПараметров.Вставить("Валюта", ДанныеПечати.Валюта);
			ЗаголовокТаблицы.Параметры.Заполнить(СтруктураПараметров);
			ЗаполнитьЗначенияСвойств(ЗаголовокТаблицы.Параметры, ФормированиеПечатныхФорм.СформироватьЗаголовкиДляСуммовыхПоказателей(ДанныеПечати, КодЯзыкаПечать));
			ТабличныйДокумент.Вывести(ЗаголовокТаблицы);
			
			// Выводим многострочную часть документа
			Если ЗначениеЗаполнено(КолонкаКодов) Тогда
				ОбластьМакета = Макет.ПолучитьОбласть("СтрокаСКодами");
			Иначе
				ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			КонецЕсли;
				
			НомерСтроки = 0;
			
			СтрокаТовары = ВыборкаПоДокументам.Выбрать();
			Пока СтрокаТовары.Следующий() Цикл
				
				НомерСтроки = НомерСтроки + 1;
				
				ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
				
				СтруктураПараметров = Новый Структура;
				
				Если ЗначениеЗаполнено(КолонкаКодов) Тогда
					СтруктураПараметров.Вставить("Артикул", СтрокаТовары[КолонкаКодов]);
				КонецЕсли;
				
				СтруктураПараметров.Вставить("НомерСтроки", НомерСтроки);
				СтруктураПараметров.Вставить("ТоварНаименование", НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					СтрокаТовары.ТоварНаименование,
					СтрокаТовары.Характеристика));
				СтруктураПараметров.Вставить("Цена", ?(СтрокаТовары.Количество = 0, 0, Окр(СтрокаТовары.Сумма / СтрокаТовары.Количество, 2, 1)));
				
				ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			КонецЦикла;
			
			ЗаполнитьРеквизитыПодвалаОтчетПоКомиссииОСписании(
				ДанныеПечати,
				ВыборкаПоДокументам,
				Макет,
				ТабличныйДокумент,
				КодЯзыкаПечать
			);
			
			УправлениеПечатью.ЗадатьОбластьПечатиДокумента(
				ТабличныйДокумент,
				НомерСтрокиНачало,
				ОбъектыПечати,
				ДанныеПечати.Ссылка);
			
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти




#Область Печать_М4

Функция СформироватьПечатнуюФормуМ4(СтруктураТипов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	// Зададим параметры макета
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_М4";
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыМ4(ПараметрыПечати, СтруктураОбъектов.Значение);
		
		ЗаполнитьТабличныйДокументМ4(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати);
	КонецЦикла;
	Возврат ТабличныйДокумент;

КонецФункции

Процедура ЗаполнитьРеквизитыШапкиМ4(ДанныеПечати, ДанныеПоСкладу, Макет, ТабличныйДокумент)
	
	// Выводим общие реквизиты шапки
	СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.ДатаСоставления, ,ДанныеПечати.БанковскийСчетОрганизации);
	НомерДокумента = ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДанныеПечати.Номер, Ложь, Истина);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ПредставлениеОрганизации", ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование,"));
	СтруктураПараметров.Вставить("КодПоЕДРПОУ", СведенияОПокупателе.КодПоЕДРПОУ);
	СтруктураПараметров.Вставить("НомерДокумента", НомерДокумента);
	
	ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	// Выводим заголовок документа
	ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокДокумента");
	ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
	ОбластьМакета.Параметры.Заполнить(ДанныеПоСкладу);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("НомерДокумента", НомерДокумента);
	СтруктураПараметров.Вставить("ДатаСоставления", ДанныеПечати.ДатаСоставления);
	
	СведенияОПоставщике     = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Поставщик, ДанныеПечати.ДатаСоставления);
	ПредставлениеПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование");
	СтруктураПараметров.Вставить("ПоставщикНаименование", ПредставлениеПоставщика);
	ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
	
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыПодвалаМ4(ОбластьПодвала, ДанныеПечати)
	
	
	СтруктураПараметров = Новый Структура;
	КладовщикФИО = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ДанныеПечати.МОЛ, ДанныеПечати.Дата);
	КладовщикПринявшийТоварДолжностьФИО = СокрЛП(ДанныеПечати.ДолжностьМОЛ);
	Если ЗначениеЗаполнено(КладовщикПринявшийТоварДолжностьФИО) И ЗначениеЗаполнено(КладовщикФИО) Тогда
		КладовщикПринявшийТоварДолжностьФИО = КладовщикПринявшийТоварДолжностьФИО + ", ";
	КонецЕсли;
	СтруктураПараметров.Вставить("КладовщикПринявшийТоварДолжностьФИО", КладовщикПринявшийТоварДолжностьФИО + СокрЛП(КладовщикФИО));
	
	ОбластьПодвала.Параметры.Заполнить(СтруктураПараметров);
	
КонецПроцедуры

Процедура ЗаполнитьТабличныйДокументМ4(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати)
	
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	
	ДанныеПечати      	= ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьОбщихФорм.ПФ_MXL_UK_М4", "ru");
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		Если НЕ ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска) Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='В документе %1 отсутствуют товары. Печать приходного ордера не требуется';uk='У документі %1 відсутні товари. Друк прибуткового ордера не потрібний'"),
				ДанныеПечати.Ссылка);
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ДанныеПечати.Ссылка);
			Продолжить;
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВыборкаПоСкладам = ВыборкаПоДокументам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаПоСкладам.Следующий() Цикл
			
			Если Не ПервыйДокумент Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			
			ПервыйДокумент = Ложь;
			
			ЗаполнитьРеквизитыШапкиМ4(ДанныеПечати, ВыборкаПоСкладам, Макет, ТабличныйДокумент);
			
			// Выводим заголовок таблицы
			ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
			ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
			
			НомерСтраницы = 1;
			
			// Создаем массив для проверки вывода
			МассивВыводимыхОбластей = Новый Массив;
			
			// Выводим многострочную часть докмента
			ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
			ОбластьШапкаСтрок       = Макет.ПолучитьОбласть("ШапкаСтрок");
			ОбластьПодвалСтрок      = Макет.ПолучитьОбласть("ПодвалСтрок");
			ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
			
			ЗаполнитьРеквизитыПодвалаМ4(ОбластьПодвала, ДанныеПечати);
			
			СтрокаТовары = ВыборкаПоСкладам.Выбрать();
			КоличествоСтрок = СтрокаТовары.Количество();
			НомерСтроки = 0;
			Пока СтрокаТовары.Следующий() Цикл
				
				ОбластьМакета.Параметры.Заполнить(СтрокаТовары);
				
				НомерСтроки = НомерСтроки + 1;
				
				СтруктураПараметров = Новый Структура;
				СтруктураПараметров.Вставить("ТоварНаименование", НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					СтрокаТовары.ТоварНаименование,
					СтрокаТовары.Характеристика,
					,
					,
					,
					СтрокаТовары.ЭтоВозвратнаяТара,
					"uk"
					)
				);
					
				ОбластьМакета.Параметры.Заполнить(СтруктураПараметров);
				
				Если ДанныеПечати.Валюта <> ВалютаРегламентированногоУчета Тогда
					// Для внешнеэкономических документов(в валюте) регламентированная себестоимость(гривневая) должна расчитываться с учетом курсов полученных
					// авансов. Т.к. в конфигурации отсутствует полнофункциональный расчет регламентированной себестоимости, то рекомендуется указывать суммовые
					// показатели вручную, после определения корректной регламентированной себестоимости (напр. в "Бухгалтерия для Украины",
					// см. комментарий к проводкам "Корректировка суммы зачета аванса по курсам авансов")
					ОбластьМакета.Параметры.Цена = "";
					ОбластьМакета.Параметры.СуммаСНДС = "";					
				КонецЕсли;
				
				МассивВыводимыхОбластей.Очистить();
				МассивВыводимыхОбластей.Добавить(ОбластьМакета);
				МассивВыводимыхОбластей.Добавить(ОбластьПодвалСтрок);
				
				Если НомерСтроки = КоличествоСтрок И НомерСтраницы > 1 Тогда
					МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
				КонецЕсли;
				
				Если Не ТабличныйДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
					НомерСтраницы = НомерСтраницы + 1;
					ПодвалСтрок   = Макет.ПолучитьОбласть("ПодвалСтрок");
					ТабличныйДокумент.Вывести(ПодвалСтрок);
					ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ТабличныйДокумент.Вывести(ОбластьШапкаСтрок);
				КонецЕсли;
				
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			КонецЦикла;
			
			ТабличныйДокумент.Вывести(ОбластьПодвалСтрок);
			
			// Выводим подвал документа
			Если НомерСтраницы = 1 Тогда
				ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();				
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьПодвала);
			
		КонецЦикла; // Конец цикла обхода выборки "ВыборкаПоСкладам"
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла; // Конец цикла обхода выборки "ДанныеПечати"
	
КонецПроцедуры

#КонецОбласти

#Область Печать_РасходнаяНакладная

Функция СформироватьПечатнуюФормуРасходнаяНакладная(СтруктураТипов, ОбъектыПечати, ПараметрыПечати, ПараметрыВывода, КомплектыПечати = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасходнаяНакладная";
	
	НомерТипаДокумента = 0;
	
	Для Каждого СтруктураОбъектов Из СтруктураТипов Цикл
		
		НомерТипаДокумента = НомерТипаДокумента + 1;
		Если НомерТипаДокумента > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(СтруктураОбъектов.Ключ);
		
		ДанныеДляПечати = МенеджерОбъекта.ПолучитьДанныеДляПечатнойФормыРасходнаяНакладная(ПараметрыПечати, СтруктураОбъектов.Значение);
		
		ЗаполнитьТабличныйДокументРасходнаяНакладная(
			ТабличныйДокумент,
			ДанныеДляПечати,
			ОбъектыПечати,
			КомплектыПечати,
			ПараметрыПечати,
			ПараметрыВывода
		);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;

КонецФункции

Функция ЗаполнитьТабличныйДокументРасходнаяНакладная(ТабличныйДокумент, ДанныеДляПечати, ОбъектыПечати, КомплектыПечати, ПараметрыПечати, ПараметрыВывода)

	Перем КомплектПечатиПоСсылке;
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;	
	
	ДанныеПечати      	= ДанныеДляПечати.РезультатПоШапке.Выбрать();
	ВыборкаПоДокументам = ДанныеДляПечати.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);


	Если ПараметрыПечати <> Неопределено И ПараметрыПечати.Свойство("ОтображатьСкидки") Тогда
		ОтображатьСкидки = ПараметрыПечати.ОтображатьСкидки;
	Иначе
		ОтображатьСкидки = (Константы.ОтображениеСкидокВПечатныхФормахДокументовПродажи.Получить()
			<> Перечисления.ВариантыВыводаСкидокВПечатныхФормах.НеВыводитьСкидки);
	КонецЕсли; 
	
	КолонкаКодов = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьКоды = ЗначениеЗаполнено(КолонкаКодов);
	
	ИспользоватьРучныеСкидки         = ПолучитьФункциональнуюОпцию("ИспользоватьРучныеСкидкиВПродажах");
	ИспользоватьАвтоматическиеСкидки = ПолучитьФункциональнуюОпцию("ИспользоватьАвтоматическиеСкидкиВПродажах");
	
	ПоказыватьНДС = Константы.ВыводитьДопКолонкиНДС.Получить();	
		
	ПервыйДокумент = Истина;
	
	Пока ДанныеПечати.Следующий() Цикл
		
		//Для печати комплектов
		Отказ = Ложь;
		
		ПодготовкаДляПечатиКомплектов(ДанныеПечати, КомплектыПечати, КомплектПечатиПоСсылке, Отказ);
		Если Отказ Тогда
			Продолжить;
		КонецЕсли;
		
		// Найдем в выборке товары по текущему документу
		СтруктураПоиска = Новый Структура("Ссылка", ДанныеПечати.Ссылка);
		НайденСледующий = ВыборкаПоДокументам.НайтиСледующий(СтруктураПоиска);
		
        // В одном вызове этой функции обрабатываются документы одного типа
		Если ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.РеализацияУслугПрочихАктивов")
		 ИЛИ ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.ВыкупВозвратнойТарыКлиентом") 
		 ИЛИ ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.ПередачаТоваровМеждуОрганизациями") Тогда
			ИспользоватьРучныеСкидки = Ложь;
			ИспользоватьАвтоматическиеСкидки = Ложь;
		КонецЕсли;
		
		Если ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.РеализацияУслугПрочихАктивов") Тогда
			ВыводитьКоды = Ложь;
		КонецЕсли;

		// Если в накладной только услуги - перейдем к следующему документу
		Если НайденСледующий Тогда
			ВыборкаПоТоварам = ВыборкаПоДокументам.Выбрать();			
			ЗаголовокСкидки = ФормированиеПечатныхФорм.НужноВыводитьСкидки(ВыборкаПоТоварам, ИспользоватьРучныеСкидки Или ИспользоватьАвтоматическиеСкидки, КодЯзыкаПечать);
			ЕстьСкидки = ЗаголовокСкидки.ЕстьСкидки;
			ЕстьНДС = ДанныеПечати.УчитыватьНДС;
			ВыборкаПоТоварам.Сбросить();
		Иначе
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='В документе %1 отсутствуют товары. Печать накладной не требуется';uk='У документі %1 відсутні товари. Друк накладної не потрібний'"),
				ДанныеПечати.Ссылка
				);
				
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				Текст,
				ДанныеПечати.Ссылка
			);
			Продолжить;
		КонецЕсли;
		
		// Макет необходимо получать для каждого документа, т.к. размеры колонок изменяются динамически
		Макет = УправлениеПечатью.МакетПечатнойФормы("Обработка.ПечатьОбщихФорм.ПФ_MXL_РасходнаяНакладная", КодЯзыкаПечать);
		
		Если Не ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент    = Ложь;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// Выводим шапку накладной
		
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет, ОбластьМакета, ДанныеПечати.Ссылка);
		
		ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(ДанныеПечати, НСтр("ru='Расходная накладная';uk='Видаткова накладна'", КодЯзыкаПечать), КодЯзыкаПечать);
		
		СтруктураДанныхШапки = Новый Структура;
		СтруктураДанныхШапки.Вставить("ТекстЗаголовка", ТекстЗаголовка);
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхШапки);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		СведенияОПоставщике	= ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Организация, ДанныеПечати.Дата,,ДанныеПечати.БанковскийСчетОрганизации);	
		СведенияОПокупателе = ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ДанныеПечати.Получатель,  ДанныеПечати.Дата,,ДанныеПечати.БанковскийСчетКонтрагента);

		ОбластьМакета                                   = Макет.ПолучитьОбласть("Поставщик");
		ПредставлениеПоставщика                         = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование",,КодЯзыкаПечать);
		РеквизитыПоставщика                             = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПоставщике, "НомерСчета,Банк,МФО,/,ЮридическийАдрес,Телефоны,/,КодПоЕДРПОУ,КодПоДРФО,ИНН,НомерСвидетельства,/,ИнформацияОСтатусеПлательщикаНалогов,",,КодЯзыкаПечать);
		
		СтруктураДанныхПоставщик = Новый Структура;
		СтруктураДанныхПоставщик.Вставить("ПредставлениеПоставщика", ПредставлениеПоставщика);
		СтруктураДанныхПоставщик.Вставить("Поставщик", ДанныеПечати.Организация);
		СтруктураДанныхПоставщик.Вставить("РеквизитыПоставщика", РеквизитыПоставщика);
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхПоставщик);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ОбластьМакета                                   = Макет.ПолучитьОбласть("Покупатель");
		ПредставлениеПолучателя                         = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование",,КодЯзыкаПечать);
		РеквизитыПокупателя                             = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОПокупателе, "ФактическийАдрес,Телефоны,",,КодЯзыкаПечать);
		СтруктураДанныхПокупатель = Новый Структура;
		СтруктураДанныхПокупатель.Вставить("ПредставлениеПолучателя", ПредставлениеПолучателя);
		СтруктураДанныхПокупатель.Вставить("Получатель", ДанныеПечати.Получатель);
		СтруктураДанныхПокупатель.Вставить("РеквизитыПокупателя", РеквизитыПокупателя);
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхПокупатель);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Выводим дополнительно информацию о договоре и заказе
		СписокДополнительныхПараметров = "ДоговорНаименованиеДляПечати,";
		Если ДанныеПечати.ПечататьЗаказ Тогда
			// Реализацию и договор уже вывели
			СписокДополнительныхПараметров = СписокДополнительныхПараметров + "Заказ,";
		КонецЕсли;
		СписокДополнительныхПараметров = СписокДополнительныхПараметров + "АдресДоставки,";
		
		МассивСтруктурСтрок = ФормированиеПечатныхФорм.ДополнительнаяИнформация(ДанныеПечати, СписокДополнительныхПараметров, КодЯзыкаПечать);
		ОбластьМакета = Макет.ПолучитьОбласть("ДопИнформация");
		Для каждого СтруктураСтроки Из МассивСтруктурСтрок Цикл
			ОбластьМакета.Параметры.Заполнить(СтруктураСтроки);
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЦикла;		

		// Выводим заголовок таблицы Товары
		
		СуффиксОбластиСтроки = ?(ЕстьСкидки, "СоСкидкой", "") + ?(ЕстьНДС И ПоказыватьНДС, "СНДС", "");
		СуффиксОбластиКолонки = ?(ЕстьСкидки И ЕстьНДС И ПоказыватьНДС, "СоСкидкойСНДС", ?(ЕстьСкидки Или (ЕстьНДС И ПоказыватьНДС), "СоСкидкойИлиСНДС", ""));
		
		ОбластьКолонкаТовар = Макет.Область("ПерваяКолонкаТовара");
		ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки
			+ ?(ВыводитьКоды, 0, Макет.Область("КолонкаКодов").ШиринаКолонки)
		;
		
		ОбластьНомера  = Макет.ПолучитьОбласть("ШапкаТаблицы" + СуффиксОбластиСтроки + "|НомерСтроки");
		ОбластьКодов   = Макет.ПолучитьОбласть("ШапкаТаблицы" + СуффиксОбластиСтроки + "|КолонкаКодов");
		ОбластьТовар   = Макет.ПолучитьОбласть("ШапкаТаблицы" + СуффиксОбластиСтроки + "|Товар" + СуффиксОбластиКолонки);
		ОбластьДанных  = Макет.ПолучитьОбласть("ШапкаТаблицы" + СуффиксОбластиСтроки + "|Данные" + СуффиксОбластиКолонки);
		
		ТабличныйДокумент.Вывести(ОбластьНомера);
			
		Если ВыводитьКоды Тогда
			ОбластьКодов.Параметры.ИмяКолонкиКодов = КолонкаКодов;
			ТабличныйДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ОбластьДанных.Параметры, ФормированиеПечатныхФорм.СформироватьЗаголовкиДляСуммовыхПоказателей(ДанныеПечати, КодЯзыкаПечать));
		
		Если ЕстьСкидки Тогда
			СтруктураЗаголовокСкидки = Новый Структура("Скидка, СуммаБезСкидки", 
				ЗаголовокСкидки.Скидка,
				ЗаголовокСкидки.СуммаСкидки);
			ОбластьДанных.Параметры.Заполнить(СтруктураЗаголовокСкидки);
		КонецЕсли; 
		
		ТабличныйДокумент.Присоединить(ОбластьТовар);
		ТабличныйДокумент.Присоединить(ОбластьДанных);
		
		ОбластьНомераСтрокиСтандарт = Макет.ПолучитьОбласть("СтрокаТаблицы" + СуффиксОбластиСтроки + "|НомерСтроки");
		ОбластьКодовСтрокиСтандарт  = Макет.ПолучитьОбласть("СтрокаТаблицы" + СуффиксОбластиСтроки + "|КолонкаКодов");
		ОбластьТоварСтрокиСтандарт  = Макет.ПолучитьОбласть("СтрокаТаблицы" + СуффиксОбластиСтроки + "|Товар" + СуффиксОбластиКолонки);
		ОбластьДанныхСтрокиСтандарт = Макет.ПолучитьОбласть("СтрокаТаблицы" + СуффиксОбластиСтроки + "|Данные" + СуффиксОбластиКолонки);
		
		ИспользоватьНаборы = Ложь;
		Если ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(ВыборкаПоДокументам, "ЭтоНабор") Тогда
			ИспользоватьНаборы = Истина;
			ОбластьНомераСтрокиНабор         = Макет.ПолучитьОбласть("СтрокаТаблицы" + СуффиксОбластиСтроки + "Набор"         + "|НомерСтроки");
			ОбластьНомераСтрокиКомплектующие = Макет.ПолучитьОбласть("СтрокаТаблицы" + СуффиксОбластиСтроки + "Комплектующие" + "|НомерСтроки");
			ОбластьКодовСтрокиНабор          = Макет.ПолучитьОбласть("СтрокаТаблицы" + СуффиксОбластиСтроки + "Набор"         + "|КолонкаКодов");
			ОбластьКодовСтрокиКомплектующие  = Макет.ПолучитьОбласть("СтрокаТаблицы" + СуффиксОбластиСтроки + "Комплектующие" + "|КолонкаКодов");
			ОбластьТоварСтрокиНабор          = Макет.ПолучитьОбласть("СтрокаТаблицы" + СуффиксОбластиСтроки + "Набор"         + "|Товар"  + СуффиксОбластиКолонки);
			ОбластьТоварСтрокиКомплектующие  = Макет.ПолучитьОбласть("СтрокаТаблицы" + СуффиксОбластиСтроки + "Комплектующие" + "|Товар"  + СуффиксОбластиКолонки);
			ОбластьДанныхСтрокиНабор         = Макет.ПолучитьОбласть("СтрокаТаблицы" + СуффиксОбластиСтроки + "Набор"         + "|Данные" + СуффиксОбластиКолонки);
			ОбластьДанныхСтрокиКомплектующие = Макет.ПолучитьОбласть("СтрокаТаблицы" + СуффиксОбластиСтроки + "Комплектующие" + "|Данные" + СуффиксОбластиКолонки);
		КонецЕсли;
		
		Сумма          = 0;
		СуммаНДС       = 0;
		ВсегоСкидок    = 0;
		НомерСтроки    = 0;
		ВсегоБезСкидок = 0;
		
		ПустыеДанные = НаборыСервер.ПустыеДанные();
		
		// Выводим строки таблицы Товары
			
		Пока ВыборкаПоТоварам.Следующий() Цикл
			
			Если НаборыСервер.ИспользоватьОбластьНабор(ВыборкаПоТоварам, ИспользоватьНаборы) Тогда
				ОбластьКодовСтроки   = ОбластьКодовСтрокиНабор;
				ОбластьНомераСтроки  = ОбластьНомераСтрокиНабор;
				ОбластьДанныхСтроки  = ОбластьДанныхСтрокиНабор;
				ОбластьТоварСтроки   = ОбластьТоварСтрокиНабор;
			ИначеЕсли НаборыСервер.ИспользоватьОбластьКомплектующие(ВыборкаПоТоварам, ИспользоватьНаборы) Тогда
				ОбластьКодовСтроки   = ОбластьКодовСтрокиКомплектующие;
				ОбластьНомераСтроки  = ОбластьНомераСтрокиКомплектующие;
				ОбластьДанныхСтроки  = ОбластьДанныхСтрокиКомплектующие;
				ОбластьТоварСтроки   = ОбластьТоварСтрокиКомплектующие;
			Иначе
				ОбластьКодовСтроки   = ОбластьКодовСтрокиСтандарт;
				ОбластьНомераСтроки  = ОбластьНомераСтрокиСтандарт;
				ОбластьДанныхСтроки  = ОбластьДанныхСтрокиСтандарт;
				ОбластьТоварСтроки   = ОбластьТоварСтрокиСтандарт;
			КонецЕсли;
			
			Если НаборыСервер.ВыводитьТолькоЗаголовок(ВыборкаПоТоварам, ИспользоватьНаборы) Тогда
				УстановитьПараметр(ОбластьНомераСтроки, "НомерСтроки", Неопределено);
			Иначе
				НомерСтроки = НомерСтроки + 1;
				УстановитьПараметр(ОбластьНомераСтроки, "НомерСтроки", НомерСтроки);
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьНомераСтроки);
			
			Если ВыводитьКоды Тогда
				СтруктураДанныхКоды = Новый Структура("Артикул", ВыборкаПоТоварам[КолонкаКодов]);
				ОбластьКодовСтроки.Параметры.Заполнить(СтруктураДанныхКоды);
				ТабличныйДокумент.Присоединить(ОбластьКодовСтроки);
			КонецЕсли;
			
			ПрефиксИПостфикс = НаборыСервер.ПолучитьПрефиксИПостфикс(ВыборкаПоТоварам, ИспользоватьНаборы);
			
			ОбластьТоварСтроки.Параметры.Заполнить(ВыборкаПоТоварам);
			Если ТипЗнч(ДанныеПечати.Ссылка) = Тип("ДокументСсылка.РеализацияУслугПрочихАктивов") Тогда	
            	Товар = ВыборкаПоТоварам.Содержание;
				СтруктураДанныхТовар = Новый Структура("Товар", Товар);
				ОбластьТоварСтроки.Параметры.Заполнить(СтруктураДанныхТовар);
			Иначе	
				Товар = ПрефиксИПостфикс.Префикс + НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					ВыборкаПоТоварам.ТоварНаименованиеПолное,
					ВыборкаПоТоварам.Характеристика,
					,
					,
					,
					ВыборкаПоТоварам.ЭтоВозвратнаяТара, 
					КодЯзыкаПечать) + ПрефиксИПостфикс.Постфикс;
				СтруктураДанныхТовар = Новый Структура("Товар", Товар);
				ОбластьТоварСтроки.Параметры.Заполнить(СтруктураДанныхТовар);
			КонецЕсли;
			
			ТабличныйДокумент.Присоединить(ОбластьТоварСтроки);
			
			Если ЗаголовокСкидки.ЕстьСкидки Тогда
				СтруктураДанныхСуммаСкидки = Новый Структура("СуммаСкидки", 
					?(ЗаголовокСкидки.ТолькоНаценка,- ВыборкаПоТоварам.СуммаСкидки,ВыборкаПоТоварам.СуммаСкидки));
				ОбластьДанныхСтроки.Параметры.Заполнить(СтруктураДанныхСуммаСкидки);
			КонецЕсли;
			
			Если НаборыСервер.ВыводитьТолькоЗаголовок(ВыборкаПоТоварам, ИспользоватьНаборы) Тогда
				ОбластьДанныхСтроки.Параметры.Заполнить(ПустыеДанные);
			Иначе
				ОбластьДанныхСтроки.Параметры.Заполнить(ВыборкаПоТоварам);
			КонецЕсли;
			
			ТабличныйДокумент.Присоединить(ОбластьДанныхСтроки);
			
			Если Не НаборыСервер.ИспользоватьОбластьКомплектующие(ВыборкаПоТоварам, ИспользоватьНаборы) Тогда
				Сумма          = Сумма          + ВыборкаПоТоварам.Сумма;
				СуммаНДС       = СуммаНДС       + ВыборкаПоТоварам.СуммаНДС;
				
				Если ЕстьСкидки Тогда
					ВсегоСкидок    = ВсегоСкидок    + ВыборкаПоТоварам.СуммаСкидки;
					ВсегоБезСкидок = ВсегоБезСкидок + ВыборкаПоТоварам.СуммаБезСкидки;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
		// Выводим подвал
		
		ОбластьНомера  = Макет.ПолучитьОбласть("ПодвалТаблицы" + СуффиксОбластиСтроки + "|НомерСтроки");
		ОбластьКодов   = Макет.ПолучитьОбласть("ПодвалТаблицы" + СуффиксОбластиСтроки + "|КолонкаКодов");
		ОбластьТовар   = Макет.ПолучитьОбласть("ПодвалТаблицы" + СуффиксОбластиСтроки + "|Товар" + СуффиксОбластиКолонки);
		ОбластьДанных  = Макет.ПолучитьОбласть("ПодвалТаблицы" + СуффиксОбластиСтроки + "|Данные" + СуффиксОбластиКолонки);
		
		ТабличныйДокумент.Вывести(ОбластьНомера);
		
		Если ВыводитьКоды Тогда
			ТабличныйДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		
		ТабличныйДокумент.Присоединить(ОбластьТовар);
		
		СтруктураДанныхВсегоСкидки = Новый Структура;
		Если ЕстьСкидки Тогда
			СтруктураДанныхВсегоСкидки.Вставить("ВсегоСкидок", ?(ЗаголовокСкидки.ТолькоНаценка,-ВсегоСкидок, ВсегоСкидок));
			СтруктураДанныхВсегоСкидки.Вставить("ВсегоБезСкидок", ВсегоБезСкидок);
		КонецЕсли;
		СтруктураДанныхВсегоСкидки.Вставить("Всего",  ФормированиеПечатныхФорм.ФорматСумм(Сумма));
		ОбластьДанных.Параметры.Заполнить(СтруктураДанныхВсегоСкидки);
		ТабличныйДокумент.Присоединить(ОбластьДанных);
		
		// Выводим ИтогоНДС
		
		Область = Макет.ПолучитьОбласть("ПодвалНДС");
		СтруктураДанныхПодвалНДС = Новый Структура;
		СтруктураДанныхПодвалНДС.Вставить("ВсегоНДС", СуммаНДС);
		Если ЕстьНДС Тогда
			СтруктураДанныхПодвалНДС.Вставить("НДС", ?(ДанныеПечати.ЦенаВключаетНДС, НСтр("ru='В том числе НДС:';uk= 'У тому числі ПДВ:'", КодЯзыкаПечать), НСтр("ru='Сумма НДС:';uk= 'Сума ПДВ:'", КодЯзыкаПечать)));
			Если Не ДанныеПечати.ЦенаВключаетНДС Тогда
				Область.Параметры.Заполнить(СтруктураДанныхПодвалНДС);
				ТабличныйДокумент.Вывести(Область);
				СтруктураДанныхПодвалНДС = Новый Структура;
				СтруктураДанныхПодвалНДС.Вставить("НДС", НСтр("ru='Всего с НДС:';uk='Усього з ПДВ:'", КодЯзыкаПечать));
				СтруктураДанныхПодвалНДС.Вставить("ВсегоНДС", Сумма + СуммаНДС);
			КонецЕсли;
		Иначе
			СтруктураДанныхПодвалНДС.Вставить("НДС", НСтр("ru='Без налога (НДС)';uk= 'Без податку (ПДВ)'", КодЯзыкаПечать));
		КонецЕсли;
		Область.Параметры.Заполнить(СтруктураДанныхПодвалНДС);
		ТабличныйДокумент.Присоединить(Область);
		
		// Выводим Сумму прописью
		
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		СуммаКПрописи = Сумма + ?(ДанныеПечати.ЦенаВключаетНДС, 0, СуммаНДС);
		СтруктураДанныхСуммаПрописью = Новый Структура;
		
		ИтоговаяСтрока = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Всего наименований %1, на сумму %2';uk= 'Всього найменувань %1, на суму %2'", КодЯзыкаПечать),
			ВыборкаПоТоварам.Количество(),
			ФормированиеПечатныхФорм.ФорматСумм(СуммаКПрописи, ДанныеПечати.Валюта));
		
		СтруктураДанныхСуммаПрописью.Вставить("ИтоговаяСтрока", ИтоговаяСтрока);
		СтруктураДанныхСуммаПрописью.Вставить("СуммаПрописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(СуммаКПрописи, ДанныеПечати.Валюта, , КодЯзыкаПечать));
		ОбластьМакета.Параметры.Заполнить(СтруктураДанныхСуммаПрописью);
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		Если ЗначениеЗаполнено(ДанныеПечати.МестоСоставленияДокумента) Тогда
			ОбластьМакета = Макет.ПолучитьОбласть("МестоСоставления");
			СтруктураДанныхМестоСоставления = Новый Структура;
			СтруктураДанныхМестоСоставления.Вставить("МестоСоставления", СокрЛП(ДанныеПечати.МестоСоставленияДокумента));
			ОбластьМакета.Параметры.Заполнить(СтруктураДанныхМестоСоставления);
			ТабличныйДокумент.Вывести(ОбластьМакета);
		КонецЕсли;
		
		// Выводим подписи
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		
	    ОбластьМакета.Параметры.Заполнить(ФормированиеПечатныхФорм.СведенияОбОтветсвенныхЛицах(ДанныеПечати, КодЯзыкаПечать));
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ЗавершениеДляПечатиКомплектов(КомплектыПечати, КомплектПечатиПоСсылке, ТабличныйДокумент, НомерСтрокиНачало);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеПечати.Ссылка);
		
	КонецЦикла;
	
КонецФункции

#КонецОбласти




#КонецОбласти

#Область Прочее

Процедура УстановитьПараметр(ОбластьМакета, ИмяПараметра, ЗначениеПараметра)
	ОбластьМакета.Параметры.Заполнить(Новый Структура(ИмяПараметра, ЗначениеПараметра));
КонецПроцедуры

Процедура ПодготовкаДляПечатиКомплектов(ДанныеПечати, КомплектыПечати, КомплектПечатиПоСсылке, Отказ)
	
	Если КомплектыПечати <> Неопределено И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено Тогда
		КомплектПечатиПоСсылке = КомплектыПечати.Найти(ДанныеПечати.Ссылка,"Ссылка");
		Если КомплектПечатиПоСсылке = Неопределено Тогда
			КомплектПечатиПоСсылке = КомплектыПечати[0];
		КонецЕсли;
		Если КомплектПечатиПоСсылке.Экземпляров = 0 Тогда
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗавершениеДляПечатиКомплектов(КомплектыПечати, КомплектПечатиПоСсылке, ТабличныйДокумент, НомерСтрокиНачало)
	
	// Выведем нужное количество экземпляров (при печати комплектов)
	Если КомплектыПечати <> Неопределено И КомплектыПечати.Колонки.Найти("Ссылка") <> Неопределено И КомплектПечатиПоСсылке.Экземпляров > 1 Тогда
		ОбластьКопирования = ТабличныйДокумент.ПолучитьОбласть(НомерСтрокиНачало,,ТабличныйДокумент.ВысотаТаблицы);
		Для Итератор = 2 По КомплектПечатиПоСсылке.Экземпляров Цикл
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабличныйДокумент.Вывести(ОбластьКопирования);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли
