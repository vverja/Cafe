#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Функция определяет группу финансового учета по умолчанию.
//
// Возвращает группу финансового учета, если найден один элемент справочника.
// Возвращает ПустуюСсылку в противном случае
//
// Параметры:
//	ПорядокОплаты - ПеречислениеСсылка.ПорядокОплатыПоСоглашениям - Порядок оплаты,
//	для которого определяется группа финансового учета
//
// Возвращаемое значение:
//	СправочникСсылка.ГруппыФинансовогоУчетаРасчетов
//
Функция ПолучитьГруппуФинансовогоУчетаПоУмолчанию(ПорядокОплаты) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 2
	|	ДанныеСправочника.Ссылка КАК ГруппаФинансовогоУчета
	|ИЗ
	|	Справочник.ГруппыФинансовогоУчетаРасчетов КАК ДанныеСправочника
	|ГДЕ
	|	НЕ ДанныеСправочника.ПометкаУдаления
	|	И Не ДанныеСправочника.ЭтоГруппа
	|	И ДанныеСправочника.ПорядокОплаты = &ПорядокОплаты;
	|");
	Запрос.УстановитьПараметр("ПорядокОплаты", ПорядокОплаты);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 1 
	   И Выборка.Следующий()
	Тогда
		ГруппаФинансовогоУчета = Выборка.ГруппаФинансовогоУчета;
	Иначе
		ГруппаФинансовогоУчета = Справочники.ГруппыФинансовогоУчетаРасчетов.ПустаяСсылка();
	КонецЕсли;
	
	Возврат ГруппаФинансовогоУчета;

КонецФункции

// Функция определяет реквизиты выбранной группы финансового учета.
//
// Параметры:
//  ГруппаФинансовогоУчета - СправочникСсылка.ГруппыФинансовогоУчетаРасчетов - Ссылка на группу финансового учета
//
// Возвращое значение:
//	Структура - реквизиты группы финансового учета
//
Функция ПолучитьРеквизитыГруппыФинансовогоУчета(ГруппаФинансовогоУчета) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеСправочника.ПорядокОплаты КАК ПорядокОплаты
	|ИЗ
	|	Справочник.ГруппыФинансовогоУчетаРасчетов КАК ДанныеСправочника
	|ГДЕ
	|	ДанныеСправочника.Ссылка = &ГруппаФинансовогоУчета
	|");
	
	Запрос.УстановитьПараметр("ГруппаФинансовогоУчета", ГруппаФинансовогоУчета);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ПорядокОплаты = Выборка.ПорядокОплаты;
	Иначе
		ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.ПустаяСсылка();
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("ПорядокОплаты", ПорядокОплаты);
	
	Возврат СтруктураРеквизитов;
	
КонецФункции

#КонецОбласти

#Область ОбновлениеИнформационнойБазы


#КонецОбласти

#КонецЕсли
