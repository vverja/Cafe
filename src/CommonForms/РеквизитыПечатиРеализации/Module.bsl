#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	МассивЭлементов = Новый Массив();
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры,,"ЗакрыватьПриВыборе,ЗакрыватьПриЗакрытииВладельца,КлючНазначенияИспользования");
	Если Параметры.Свойство("ДоверенностьАльтернативныйВидДокумента") И ЗначениеЗаполнено(Параметры.ДоверенностьАльтернативныйВидДокумента) Тогда
		ДоверенностьВидДокумента = "Паспорт";
	ИначеЕсли Параметры.Свойство("ПолучилПоДругомуДокументу") И Параметры.ПолучилПоДругомуДокументу Тогда
		ДоверенностьВидДокумента = "Прочее";
	Иначе
		ДоверенностьВидДокумента = "Доверенность";
		ЭтаФорма.ДоверенностьАльтернативныйВидДокумента = ПредопределенноеЗначение("Справочник.ВидыДокументовФизическихЛиц.Паспорт");
		
	КонецЕсли;
	ЭтаФорма.ДоверенностьВидДокумента = ДоверенностьВидДокумента;
	
	
	Если ТолькоПросмотр Тогда
		
		СтруктураПараметров = ИзменяемыеРеквизиты(Параметры);
		МассивЭлементов = Новый Массив();
		
		Для Каждого ЭлементСтруктуры из СтруктураПараметров Цикл
			МассивЭлементов.Добавить(ЭлементСтруктуры.Ключ);
		КонецЦикла;
		
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "ТолькоПросмотр", Истина);
		
	КонецЕсли;
	
	
	Если Параметры.ТипОбъекта = "ВозвратТоваровМеждуОрганизациями" 
	 ИЛИ Параметры.ТипОбъекта = "ПередачаТоваровМеждуОрганизациями"
	 ИЛИ Параметры.ТипОбъекта = "ОтчетПоКомиссииМеждуОрганизациями" Тогда
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "БанковскийСчетОрганизацииПолучателя", "Видимость", Параметры.РасчетыЧерезОрганизацию);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "БанковскийСчетКонтрагента", "Видимость", Не Параметры.РасчетыЧерезОрганизацию);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаПредставительОрганизации", "Заголовок", "Представитель организации отправителя");
		Если Параметры.РасчетыЧерезОрганизацию Тогда
			ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаПредставительПартнера", "Заголовок", "Представитель организации получателя");
		КонецЕсли;		
		
		Если Параметры.ТипОбъекта = "ОтчетПоКомиссииМеждуОрганизациями" И НЕ Параметры.РасчетыЧерезОрганизацию Тогда
			// Сложный случай. Должна быть возможность ввода должности и ФИО контрагента, а так должности и ФИО представителя оранизации получателя 
			ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПредставительОрганизацииПолучателя",          "Видимость", Истина);
			ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПредставительОрганизацииПолучателяДолжность", "Видимость", Истина);
			
			ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаПредставительОрганизацииПолучателя", "ОтображатьЗаголовок", Истина);
			ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ГруппаПредставительОрганизацииПолучателя", "Отображение", ОтображениеОбычнойГруппы.СлабоеВыделение);
		Иначе
			// Все остальные случаи
			ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПредставительКонтрагента", "Видимость", НЕ Параметры.РасчетыЧерезОрганизацию);
			
			ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПредставительОрганизацииПолучателя",          "Видимость", Параметры.РасчетыЧерезОрганизацию);
			ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ПредставительОрганизацииПолучателяДолжность", "Видимость", Параметры.РасчетыЧерезОрганизацию);
		КонецЕсли;
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьУправлениеДоставкой") 
		ИЛИ Параметры.ТипОбъекта = "ВозвратТоваровПоставщику" Тогда
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "АдресДоставки", "Видимость", Ложь);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "ДекорацияОтступПечатьЛево", "Видимость", Ложь);
	КонецЕсли;
	
	ПродажиСервер.ЗаполнитьСписокВыбораАдреса(Элементы.АдресДоставки, Партнер);
	
	// Реквизиты доверенности
	УстановитьДоступностьАльтернативногоВидаДокумента(ЭтаФорма);	
	
	Если Параметры.НеПоказыватьРеквизиты <> Неопределено Тогда
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, Параметры.НеПоказыватьРеквизиты, "Видимость", Ложь);
	КонецЕсли;
	
	ЗаполнитьСписокВыбораМестоСоставленияДокумента();
	ЗаполнитьСписокВыбораПредставительОрганизацииДолжность();
	ЗаполнитьСписокВыбораПредставительОрганизацииПолучателяДолжность();
	ЗаполнитьСписокВыбораПредставительКонтрагента();
	
	
	// Размеры формы должны быть уникальны, в зависимости от скрытых реквизитов 
	ЭтаФорма.КлючСохраненияПоложенияОкна = Параметры.ТипОбъекта;

КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ЗакрытьФормуПринудительно Тогда
		Возврат;
	КонецЕсли;

	Если Модифицированность И Не СохранитьПараметры Тогда
		
		СписокКнопок = Новый СписокЗначений();
		СписокКнопок.Добавить("Закрыть", НСтр("ru='Закрыть';uk='Закрити'"));
		СписокКнопок.Добавить("НеЗакрывать", НСтр("ru='Не закрывать';uk='Не закривати'"));
		
		Отказ = Истина; 
		
		ПоказатьВопрос(
			Новый ОписаниеОповещения("ПередЗакрытиемВопросЗавершение", ЭтотОбъект),
			НСтр("ru='Реквизиты печати реализации товаров и услуг были изменены. Закрыть форму без сохранения реквизитов?';uk='Реквізити друку реалізації товарів і послуг були змінені. Закрити форму без збереження реквізитів?'"),
			СписокКнопок);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемВопросЗавершение(ОтветНаВопрос, ДополнительныеПараметры) Экспорт
	
	Если ОтветНаВопрос = "НеЗакрывать" Тогда
		СохранитьПараметры = Ложь;
	ИначеЕсли ОтветНаВопрос = "Закрыть" Тогда
		ЗакрытьФормуПринудительно = Истина;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПриЗакрытии()
	
	Если СохранитьПараметры Тогда

		СтруктураПараметров = ИзменяемыеРеквизиты(ЭтаФорма);
		Если ДоверенностьВидДокумента = "Доверенность" Тогда
			СтруктураПараметров.ДоверенностьАльтернативныйВидДокумента = Неопределено;
			СтруктураПараметров.ПолучилПоДругомуДокументу = Ложь;
		ИначеЕсли ДоверенностьВидДокумента = "Паспорт" Тогда
			СтруктураПараметров.ПолучилПоДругомуДокументу = Истина;
		ИначеЕсли ДоверенностьВидДокумента = "Прочее" Тогда
			СтруктураПараметров.ДоверенностьАльтернативныйВидДокумента = Неопределено;
			СтруктураПараметров.ДоверенностьСерия = Неопределено;
			СтруктураПараметров.ДоверенностьНомер = Неопределено;
			СтруктураПараметров.ДоверенностьДата = Неопределено;
			СтруктураПараметров.ДоверенностьВыдана = Неопределено;
			СтруктураПараметров.ПолучилПоДругомуДокументу = Истина;
		КонецЕсли;
		ОповеститьОВыборе(СтруктураПараметров);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы




&НаКлиенте
Процедура ГрузоотправительПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Грузоотправитель) Тогда
		БанковскийСчетГрузоотправителя = ПолучитьБанковскийСчетКонтрагентаПоУмолчаниюСервер(Грузоотправитель);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГрузополучательПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Грузополучатель) Тогда
		БанковскийСчетГрузополучателя = ПолучитьБанковскийСчетКонтрагентаПоУмолчаниюСервер(Грузополучатель);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставительОрганизацииПриИзменении(Элемент)
	ЗаполнитьСписокВыбораПредставительОрганизацииДолжность(Истина);
КонецПроцедуры


&НаКлиенте
Процедура ПредставительОрганизацииПолучателяПриИзменении(Элемент)
	ЗаполнитьСписокВыбораПредставительОрганизацииПолучателяДолжность(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ДоверенностьВидДокументаПриИзменении(Элемент)
	УстановитьДоступностьАльтернативногоВидаДокумента(ЭтаФорма);	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	Если Не ТолькоПросмотр Тогда
		СохранитьПараметры = Истина;
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаКлиентеНаСервереБезКонтекста
Функция ИзменяемыеРеквизиты(Источник)
	
	СтруктураПараметров = Новый Структура();
	СтруктураПараметров.Вставить("АдресДоставки",                  Источник.АдресДоставки);
	СтруктураПараметров.Вставить("БанковскийСчетГрузоотправителя", Источник.БанковскийСчетГрузоотправителя);
	СтруктураПараметров.Вставить("БанковскийСчетГрузополучателя",  Источник.БанковскийСчетГрузополучателя);
	СтруктураПараметров.Вставить("БанковскийСчетКонтрагента",      Источник.БанковскийСчетКонтрагента);
	СтруктураПараметров.Вставить("БанковскийСчетОрганизацииПолучателя", Источник.БанковскийСчетОрганизацииПолучателя);
	СтруктураПараметров.Вставить("Грузоотправитель",               Источник.Грузоотправитель);
	СтруктураПараметров.Вставить("Грузополучатель",                Источник.Грузополучатель);
	СтруктураПараметров.Вставить("ДоверенностьВыдана",             Источник.ДоверенностьВыдана);
	СтруктураПараметров.Вставить("ДоверенностьДата",               Источник.ДоверенностьДата);
	СтруктураПараметров.Вставить("ДоверенностьАльтернативныйВидДокумента", Источник.ДоверенностьАльтернативныйВидДокумента);
	СтруктураПараметров.Вставить("ДоверенностьСерия",              Источник.ДоверенностьСерия);
	СтруктураПараметров.Вставить("ДоверенностьНомер",              Источник.ДоверенностьНомер);
	СтруктураПараметров.Вставить("ПолучилПоДругомуДокументу",      Источник.ПолучилПоДругомуДокументу);
	СтруктураПараметров.Вставить("ДоверенностьПримечание",         Источник.ДоверенностьПримечание);
	СтруктураПараметров.Вставить("МестоСоставленияДокумента",      Источник.МестоСоставленияДокумента);
	СтруктураПараметров.Вставить("ПредставительОрганизации",       Источник.ПредставительОрганизации);
	СтруктураПараметров.Вставить("ПредставительОрганизацииДолжность",           Источник.ПредставительОрганизацииДолжность);
	СтруктураПараметров.Вставить("ПредставительОрганизацииПолучателя",          Источник.ПредставительОрганизацииПолучателя);
	СтруктураПараметров.Вставить("ПредставительОрганизацииПолучателяДолжность", Источник.ПредставительОрганизацииПолучателяДолжность);
	СтруктураПараметров.Вставить("ПредставительКонтрагента",       Источник.ПредставительКонтрагента);
	СтруктураПараметров.Вставить("БанковскийСчетОрганизации",      Источник.БанковскийСчетОрганизации);
	
	Возврат СтруктураПараметров;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьБанковскийСчетКонтрагентаПоУмолчаниюСервер(Контрагент)
	
	Возврат ЗначениеНастроекПовтИсп.ПолучитьБанковскийСчетКонтрагентаПоУмолчанию(Контрагент);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСписокВыбораМестСоставленияДокумента(ТипОбъекта, Менеджер, Склад)
	
	СписокЗначений = Новый СписокЗначений;
	Запрос = Новый Запрос;
	
	Если ТипОбъекта = "ПомощникПродаж" ИЛИ ТипОбъекта = "РеализацияТоваровУслуг" Тогда	 
	 	МестоСоставленияДокументаПоУмолчанию = ПродажиСервер.ПолучитьМестоСоставленияДокумента("РеализацияТоваровУслуг", Менеджер, Склад);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 5
		|	РеализацияТоваровУслуг.МестоСоставленияДокумента КАК МестоСоставленияДокумента,
		|	РеализацияТоваровУслуг.МоментВремени КАК МоментВремени
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Склад = &Склад
		|	И РеализацияТоваровУслуг.Менеджер = &Менеджер
		|	И РеализацияТоваровУслуг.МестоСоставленияДокумента <> """"
		|	И РеализацияТоваровУслуг.МестоСоставленияДокумента <> &МестоСоставленияДокументаПоУмолчанию
		|	И РеализацияТоваровУслуг.Проведен = ИСТИНА
		|
		|УПОРЯДОЧИТЬ ПО
		|	РеализацияТоваровУслуг.МоментВремени УБЫВ";
	Иначе
	 	МестоСоставленияДокументаПоУмолчанию = ПродажиСервер.ПолучитьМестоСоставленияДокумента(ТипОбъекта, Менеджер);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 5
		|	Документ.МестоСоставленияДокумента КАК МестоСоставленияДокумента,
		|	Документ.МоментВремени КАК МоментВремени
		|ИЗ
		|	%ИмяТаблицы% КАК Документ
		|ГДЕ
		|	Документ.Менеджер = &Менеджер
		|	И Документ.МестоСоставленияДокумента <> """"
		|	И Документ.МестоСоставленияДокумента <> &МестоСоставленияДокументаПоУмолчанию
		|	И Документ.Проведен = ИСТИНА
		|
		|УПОРЯДОЧИТЬ ПО
		|	Документ.МоментВремени УБЫВ";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "%ИмяТаблицы%", "Документ."+ТипОбъекта);
	КонецЕсли;
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Менеджер", Менеджер);
	Запрос.УстановитьПараметр("МестоСоставленияДокументаПоУмолчанию", МестоСоставленияДокументаПоУмолчанию);
	
	Если ЗначениеЗаполнено(МестоСоставленияДокументаПоУмолчанию) Тогда
		СписокЗначений.Добавить(МестоСоставленияДокументаПоУмолчанию);
	КонецЕсли;		
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокЗначений.Добавить(СокрЛП(Выборка.МестоСоставленияДокумента));
	КонецЦикла;
	
	Возврат СписокЗначений;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста 
Процедура УстановитьДоступностьАльтернативногоВидаДокумента(ЭтаФорма)
	
	Если ЭтаФорма.ДоверенностьВидДокумента = "Доверенность" Тогда
		
		ЭтаФорма.Элементы.ДоверенностьАльтернативныйВидДокумента.Доступность = Ложь;
		ЭтаФорма.Элементы.ДоверенностьСерия.Доступность = Истина;
		ЭтаФорма.Элементы.ДоверенностьНомер.Доступность = Истина;
		ЭтаФорма.Элементы.ДоверенностьДата.Доступность = Истина;
		ЭтаФорма.Элементы.ДоверенностьВыдана.Доступность = Истина;
		
		ЭтаФорма.Элементы.ДоверенностьПримечание.Заголовок = НСтр("ru='Примечание';uk='Примітка'");
		ЭтаФорма.Элементы.ДоверенностьПримечание.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Авто;
		ЭтаФорма.Элементы.ДоверенностьПримечание.МногострочныйРежим = Ложь;
		ЭтаФорма.Элементы.ДоверенностьПримечание.Высота = 0;
		
		ЭтаФорма.Элементы.ДоверенностьПримечаниеДекорация.Видимость = Истина;
		
	ИначеЕсли ЭтаФорма.ДоверенностьВидДокумента = "Паспорт" Тогда
		
		ЭтаФорма.Элементы.ДоверенностьАльтернативныйВидДокумента.Доступность = Истина;
		ЭтаФорма.Элементы.ДоверенностьСерия.Доступность = Истина;
		ЭтаФорма.Элементы.ДоверенностьНомер.Доступность = Истина;
		ЭтаФорма.Элементы.ДоверенностьДата.Доступность = Истина;
		ЭтаФорма.Элементы.ДоверенностьВыдана.Доступность = Истина;
		
		ЭтаФорма.Элементы.ДоверенностьПримечание.Заголовок = НСтр("ru='Примечание';uk='Примітка'");
		ЭтаФорма.Элементы.ДоверенностьПримечание.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Авто;
		ЭтаФорма.Элементы.ДоверенностьПримечание.МногострочныйРежим = Ложь;
		ЭтаФорма.Элементы.ДоверенностьПримечание.Высота = 0;
		
		ЭтаФорма.Элементы.ДоверенностьПримечаниеДекорация.Видимость = Истина;
		
	ИначеЕсли ЭтаФорма.ДоверенностьВидДокумента = "Прочее" Тогда
		
		ЭтаФорма.Элементы.ДоверенностьАльтернативныйВидДокумента.Доступность = Ложь;
		ЭтаФорма.Элементы.ДоверенностьСерия.Доступность = Ложь;
		ЭтаФорма.Элементы.ДоверенностьНомер.Доступность = Ложь;
		ЭтаФорма.Элементы.ДоверенностьДата.Доступность = Ложь;
		ЭтаФорма.Элементы.ДоверенностьВыдана.Доступность = Ложь;
		
		ЭтаФорма.Элементы.ДоверенностьПримечание.Заголовок = НСтр("ru='По документу';uk='По документу'");
		ЭтаФорма.Элементы.ДоверенностьПримечание.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		ЭтаФорма.Элементы.ДоверенностьПримечание.МногострочныйРежим = Истина;
		ЭтаФорма.Элементы.ДоверенностьПримечание.Высота = 2;
		
		ЭтаФорма.Элементы.ДоверенностьПримечаниеДекорация.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокВыбораПредставителяКонтрагента(Партнер)
	
	СписокЗначений = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КонтактныеЛицаПартнеров.ДолжностьПоВизитке + "" "" + КонтактныеЛицаПартнеров.Наименование КАК ДоверенноеЛицо
	|ИЗ
	|	Справочник.КонтактныеЛицаПартнеров КАК КонтактныеЛицаПартнеров
	|ГДЕ
	|	КонтактныеЛицаПартнеров.Владелец = &Владелец
	|	И КонтактныеЛицаПартнеров.ПометкаУдаления = ЛОЖЬ";
	Запрос.УстановитьПараметр("Владелец", Партнер);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокЗначений.Добавить(СокрЛП(Выборка.ДоверенноеЛицо));
	КонецЦикла;
	
	Возврат СписокЗначений;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСписокДолжностейФизическогоЛица(Физлицо, Организация, Дата)
	Возврат ДолжностиДляПечатиВызовСервера.СписокДолжностейФизическогоЛица(Физлицо, Организация, Дата);
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокВыбораМестоСоставленияДокумента()
	Элементы.МестоСоставленияДокумента.СписокВыбора.Очистить();
	ДанныеДляВыбора = ПолучитьСписокВыбораМестСоставленияДокумента(ТипОбъекта, Менеджер, Склад);
	Для Каждого ЭлементСпискаЗначений Из ДанныеДляВыбора Цикл	
		Элементы.МестоСоставленияДокумента.СписокВыбора.Добавить(ЭлементСпискаЗначений.Значение, ЭлементСпискаЗначений.Значение);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораПредставительОрганизацииДолжность(ПриИзменении = Ложь)
	Элементы.ПредставительОрганизацииДолжность.СписокВыбора.Очистить();
	ДанныеДляВыбора = ПолучитьСписокДолжностейФизическогоЛица(ПредставительОрганизации, Организация, Дата);
	Если ПриИзменении И ДанныеДляВыбора.Количество() = 1 Тогда
		ПредставительОрганизацииДолжность = ДанныеДляВыбора[0];
	КонецЕсли;
	Для Каждого ЭлементСпискаЗначений Из ДанныеДляВыбора Цикл	
		Элементы.ПредставительОрганизацииДолжность.СписокВыбора.Добавить(ЭлементСпискаЗначений.Значение, ЭлементСпискаЗначений.Значение);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораПредставительОрганизацииПолучателяДолжность(ПриИзменении = Ложь)
	Элементы.ПредставительОрганизацииПолучателяДолжность.СписокВыбора.Очистить();
	ДанныеДляВыбора = ПолучитьСписокДолжностейФизическогоЛица(ПредставительОрганизацииПолучателя, ОрганизацияПолучатель, Дата);
	Если ПриИзменении И ДанныеДляВыбора.Количество() = 1 Тогда
		ПредставительОрганизацииПолучателяДолжность = ДанныеДляВыбора[0];
	КонецЕсли;
	Для Каждого ЭлементСпискаЗначений Из ДанныеДляВыбора Цикл	
		Элементы.ПредставительОрганизацииПолучателяДолжность.СписокВыбора.Добавить(ЭлементСпискаЗначений.Значение, ЭлементСпискаЗначений.Значение);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораПредставительКонтрагента()
	Элементы.ПредставительКонтрагента.СписокВыбора.Очистить();
	ДанныеДляВыбора = ПолучитьСписокВыбораПредставителяКонтрагента(Партнер);
	Для Каждого ЭлементСпискаЗначений Из ДанныеДляВыбора Цикл	
		Элементы.ПредставительКонтрагента.СписокВыбора.Добавить(ЭлементСпискаЗначений.Значение, ЭлементСпискаЗначений.Значение);
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#КонецОбласти
