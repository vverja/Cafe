
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Обработчик подсистемы "Дополнительные отчеты и обработки"
	ДополнительныеОтчетыИОбработки.ПриСозданииНаСервере(ЭтаФорма);
	Если Параметры.Свойство("Организация") Тогда
		 Организация = Параметры.Организация;
		 ЭтаФорма.Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаРаспоряженияНаОформление;
		 УстановитьОтборДинамическихСписков();
	КонецЕсли;
	Если Параметры.Свойство("ПериодРегистрации") Тогда
		 ДатаНачала.Вариант = ВариантСтандартнойДатыНачала.ПроизвольнаяДата;
		 ДатаНачала.Дата = КонецМесяца(Параметры.ПериодРегистрации);
	КонецЕсли;
	УстановитьПараметрыДинамическихСписков();
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций") Тогда
		ОрганизацияПоУмолчанию = Справочники.Организации.ОрганизацияПоУмолчанию();
	КонецЕсли;
	ИспользоватьНесколькоВалют = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВалют");
	Элементы.Валюта.Видимость = ИспользоватьНесколькоВалют;
	Элементы.РасходыКРаспределениюВалюта.Видимость = ИспользоватьНесколькоВалют;
	Валюта = Константы.ВалютаУправленческогоУчета.Получить();
	ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	ТекстЗаголовкаУпр = НСтр("ru='Упр. учет с НДС (%1)';uk='Упр. облік з ПДВ (%1)'");
	ТекстЗаголовкаРегл = НСтр("ru='Регл. учет (%1)';uk='Регл. облік (%1)'");
	ТекстЗаголовкаРеглБезНДС = НСтр("ru='Регл. учет без НДС (%1)';uk='Регл. облік без ПДВ (%1)'");
	ТекстЗаголовкаНДСРегл = НСтр("ru='Регл. учет НДС (%1)';uk='Регл. облік ПДВ (%1)'");
	Элементы.РасходыКРаспределениюСумма.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовкаУпр, Валюта);
	Элементы.РасходыКРаспределениюСуммаРегл.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовкаРегл, ВалютаРегламентированногоУчета);
	Элементы.РасходыКРаспределениюСуммаРеглБезНДС.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовкаРеглБезНДС, ВалютаРегламентированногоУчета);
	Элементы.РасходыКРаспределениюНДСРегл.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовкаНДСРегл, ВалютаРегламентированногоУчета);
	// СтандартныеПодсистемы.Печать
	УправлениеПечатью.ПриСозданииНаСервере(ЭтаФорма, Элементы.ПодменюПечать);
	// Конец СтандартныеПодсистемы.Печать
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма, Элементы.ГруппаГлобальныеКоманды);
	// Конец ИнтеграцияС1СДокументооборотом

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

	// ВводНаОсновании
	ВводНаОсновании.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюСоздатьНаОсновании);
	// Конец ВводНаОсновании

	// МенюОтчеты
	МенюОтчеты.ПриСозданииНаСервере(ЭтотОбъект, Элементы.ПодменюОтчеты);
	// Конец МенюОтчеты
	
	ОбщегоНазначенияУТ.УстановитьУсловноеОформлениеПоляДата(ЭтотОбъект, "Список", "СписокДата");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_РаспределениеРасходовБудущихПериодов" Тогда
		Элементы.РасходыКРаспределению.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Если Параметры.Свойство("Организация") Тогда
		 Организация = Параметры.Организация;
	Иначе 
		 Организация = Настройки.Получить("Организация");
	КонецЕсли;
	УстановитьОтборДинамическихСписков();
	
	Если Параметры.Свойство("ПериодРегистрации") Тогда
		 ДатаНачала.Дата = КонецМесяца(Параметры.ПериодРегистрации);
		 ДатаНачала.Вариант = ВариантСтандартнойДатыНачала.ПроизвольнаяДата;
	Иначе 
		Вариант = Настройки.Получить("ДатаНачала.Вариант");
		Если Вариант <> Неопределено Тогда
			ДатаНачала.Вариант = Вариант;
		КонецЕсли;
	КонецЕсли;
	
	УстановитьПараметрыДинамическихСписков();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УстановитьОтборДинамическихСписков();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаВариантПриИзменении(Элемент)
	
	УстановитьПараметрыДинамическихСписков();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаДатаПриИзменении(Элемент)
	
	УстановитьПараметрыДинамическихСписков();
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница = Элементы.СтраницаРаспоряженияНаОформление Тогда
		Элементы.РасходыКРаспределению.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// ВводНаОсновании
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуСоздатьНаОсновании(Команда)
	
	ВводНаОснованииКлиент.ВыполнитьПодключаемуюКомандуСоздатьНаОсновании(Команда, ЭтотОбъект, Элементы.Список);
	
КонецПроцедуры
// Конец ВводНаОсновании

// МенюОтчеты
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуОтчет(Команда)
	
	МенюОтчетыКлиент.ВыполнитьПодключаемуюКомандуОтчет(Команда, ЭтотОбъект, Элементы.Список);
	
КонецПроцедуры
// Конец МенюОтчеты


&НаКлиенте
Процедура СоздатьРаспределениеРасходов(Команда)
	
	Строка = Элементы.РасходыКРаспределению.ТекущиеДанные;
	Если Строка <> Неопределено Тогда
		СтруктураОснование = Новый Структура("Дата, Организация, НалоговоеНазначение, Подразделение, СтатьяРасходов, АналитикаРасходов, СуммаДокумента, СуммаДокументаРегл, СуммаДокументаРеглБезНДС, СуммаДокументаНДСРегл, СуммаДокументаПР, СуммаДокументаВР",
			ДатаНачала.Дата,
			Строка.Организация,
			Строка.НалоговоеНазначение,
			Строка.Подразделение,
			Строка.СтатьяРасходов,
			Строка.АналитикаРасходов,
			Строка.Сумма,
			Строка.СуммаРегл,
			Строка.СуммаРеглБезНДС,
			Строка.НДСРегл,
			Строка.ПостояннаяРазница,
			Строка.ВременнаяРазница);
		ПараметрыСтатьи = Новый Структура;
		ПараметрыСтатьи.Вставить("ДатаОкончания", ДатаНачала.Дата);
		ПараметрыСтатьи.Вставить("Организация",
			?(ЗначениеЗаполнено(Строка.Организация),
				Строка.Организация,
				ОрганизацияПоУмолчанию));
		ПараметрыСтатьи.Вставить("НалоговоеНазначение", Строка.НалоговоеНазначение);
		ПараметрыСтатьи.Вставить("Подразделение", Строка.Подразделение);
		ПараметрыСтатьи.Вставить("СтатьяРасходов", Строка.СтатьяРасходов);
		ПараметрыСтатьи.Вставить("АналитикаРасходов", Строка.АналитикаРасходов);
		ДокументРаспределения = ДокументРаспределенияСтатьи(ПараметрыСтатьи);
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ДокументРаспределения", ДокументРаспределения);
		ДополнительныеПараметры.Вставить("Сумма", Строка.Сумма);
		ДополнительныеПараметры.Вставить("СуммаРегл", Строка.СуммаРегл);
		ДополнительныеПараметры.Вставить("СуммаРеглБезНДС", Строка.СуммаРеглБезНДС);
		ДополнительныеПараметры.Вставить("НДСРегл", Строка.НДСРегл);
		ДополнительныеПараметры.Вставить("ПостояннаяРазница", Строка.ПостояннаяРазница);
		ДополнительныеПараметры.Вставить("ВременнаяРазница", Строка.ВременнаяРазница);
		ДополнительныеПараметры.Вставить("СтруктураОснование", СтруктураОснование);
		Если ДокументРаспределения <> Неопределено Тогда
			ТекстВопроса = НСтр("ru='Для данной статьи расходов существует документ распределения в периоде с %1 по %2.';uk='Для даної статті витрат існує документ розподілу в періоді з %1 з %2.'");;
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, 
																										Формат(НачалоМесяца(ДатаНачала.Дата), "ДЛФ=Д"),
																										Формат(ДатаНачала.Дата, "ДЛФ=Д"));
			СписокКнопок = Новый СписокЗначений;
			СписокКнопок.Добавить(КодВозвратаДиалога.Да, НСтр("ru='Открыть существующий документ';uk='Відкрити існуючий документ'"));
			СписокКнопок.Добавить(КодВозвратаДиалога.Нет, НСтр("ru='Создать новый';uk='Створити новий'"));
			СписокКнопок.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru='Отмена';uk='Відмінити'"));
			ПоказатьВопрос(Новый ОписаниеОповещения("СоздатьРаспределениеРасходовЗавершение", ЭтотОбъект, ДополнительныеПараметры), ТекстВопроса, СписокКнопок);
		Иначе
			СтруктураПараметры = Новый Структура;
			СтруктураПараметры.Вставить("Основание", СтруктураОснование);
			ОткрытьФорму("Документ.РаспределениеРасходовБудущихПериодов.ФормаОбъекта", СтруктураПараметры, Элементы.Список);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// СтандартныеПодсистемы.Печать
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуПечати(Команда)
	
	УправлениеПечатьюКлиент.ВыполнитьПодключаемуюКомандуПечати(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.Печать

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Элементы.Список);
	
КонецПроцедуры
//Конец ИнтеграцияС1СДокументооборотом

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаСервере
Процедура УстановитьПараметрыДинамическихСписков()
	
	ДатаОкончания = ?(ЗначениеЗаполнено(ДатаНачала.Дата), ДатаНачала.Дата, Дата(2399, 1, 1));
	РасходыКРаспределению.Параметры.УстановитьЗначениеПараметра("ДатаОкончания", ДатаОкончания);
	РасходыКРаспределению.Параметры.УстановитьЗначениеПараметра("ВалютаУправленческогоУчета", Константы.ВалютаУправленческогоУчета.Получить());
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборДинамическихСписков()
	
	Для Каждого ДинамическийСписок Из МассивДинамическихСписков() Цикл
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(ДинамическийСписок, "Организация", Организация, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(Организация));
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция МассивДинамическихСписков()

	МассивСписков = Новый Массив;
	МассивСписков.Добавить(Список);
	МассивСписков.Добавить(РасходыКРаспределению);
	
	Возврат МассивСписков;

КонецФункции

&НаСервереБезКонтекста
Функция ДокументРаспределенияСтатьи(Параметры)
	
	Запрос = Новый Запрос("
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	Т.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.РаспределениеРасходовБудущихПериодов КАК Т
		|ГДЕ
		|	Т.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И Т.Организация = &Организация
		|	И Т.НалоговоеНазначение = &НалоговоеНазначение 
		|	И Т.Подразделение = &Подразделение
		|	И Т.СтатьяРасходов = &СтатьяРасходов
		|	И Т.АналитикаРасходов = &АналитикаРасходов
		|	И Т.Проведен");
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Параметры.ДатаОкончания));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Параметры.ДатаОкончания));
	Запрос.УстановитьПараметр("Организация", Параметры.Организация);
	Запрос.УстановитьПараметр("НалоговоеНазначение", Параметры.НалоговоеНазначение);
	Запрос.УстановитьПараметр("Подразделение", Параметры.Подразделение);
	Запрос.УстановитьПараметр("СтатьяРасходов", Параметры.СтатьяРасходов);
	Запрос.УстановитьПараметр("АналитикаРасходов", Параметры.АналитикаРасходов);
	Результат = Запрос.Выполнить().Выбрать();
	Возврат ?(Результат.Следующий(), Результат.Ссылка, Неопределено);
	
КонецФункции

&НаКлиенте
Процедура СоздатьРаспределениеРасходовЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Ключ", ДополнительныеПараметры.ДокументРаспределения);
		ПараметрыФормы.Вставить("Сумма", ДополнительныеПараметры.Сумма);
		ПараметрыФормы.Вставить("СуммаРегл", ДополнительныеПараметры.СуммаРегл);
		ПараметрыФормы.Вставить("СуммаРеглБезНДС", ДополнительныеПараметры.СуммаРеглБезНДС);
		ПараметрыФормы.Вставить("НДСРегл", ДополнительныеПараметры.НДСРегл);
		ПараметрыФормы.Вставить("ПостояннаяРазница", ДополнительныеПараметры.ПостояннаяРазница);
		ПараметрыФормы.Вставить("ВременнаяРазница", ДополнительныеПараметры.ВременнаяРазница);
		Форма = ПолучитьФорму("Документ.РаспределениеРасходовБудущихПериодов.ФормаОбъекта", ПараметрыФормы);
		Форма.Открыть();
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		СтруктураПараметры = Новый Структура;
		СтруктураПараметры.Вставить("Основание", ДополнительныеПараметры.СтруктураОснование);
		ОткрытьФорму("Документ.РаспределениеРасходовБудущихПериодов.ФормаОбъекта", СтруктураПараметры, Элементы.Список);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
