
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(Параметры.ПолноеИмяОбъекта);
	
	Если ОбщегоНазначенияБТС.ЭтоКонстанта(ОбъектМетаданных) Тогда
		ПредставлениеТипаОбъекта = НСтр("ru='константе';uk='константі'");
	ИначеЕсли ОбщегоНазначенияБТС.ЭтоСправочник(ОбъектМетаданных) Тогда
		ПредставлениеТипаОбъекта = НСтр("ru='справочнику';uk='довіднику'");
	ИначеЕсли ОбщегоНазначенияБТС.ЭтоДокумент(ОбъектМетаданных) Тогда
		ПредставлениеТипаОбъекта = НСтр("ru='документу';uk='документу'");
	ИначеЕсли ОбщегоНазначенияБТС.ЭтоНаборЗаписейПоследовательности(ОбъектМетаданных) Тогда
		ПредставлениеТипаОбъекта = НСтр("ru='последовательности';uk='послідовності'");
	ИначеЕсли ОбщегоНазначенияБТС.ЭтоЖурналДокументов(ОбъектМетаданных) Тогда
		ПредставлениеТипаОбъекта = НСтр("ru='журналу документов';uk='журналу документів'");
	ИначеЕсли ОбщегоНазначенияБТС.ЭтоПеречисление(ОбъектМетаданных) Тогда
		ПредставлениеТипаОбъекта = НСтр("ru='перечислению';uk='перерахуванню'");
	ИначеЕсли ОбщегоНазначенияБТС.ЭтоПланВидовХарактеристик(ОбъектМетаданных) Тогда
		ПредставлениеТипаОбъекта = НСтр("ru='плану видов характеристик';uk='плану видів характеристик'");
	ИначеЕсли ОбщегоНазначенияБТС.ЭтоПланСчетов(ОбъектМетаданных) Тогда
		ПредставлениеТипаОбъекта = НСтр("ru='плану счетов';uk='плану рахунків'");
	ИначеЕсли ОбщегоНазначенияБТС.ЭтоПланВидовРасчета(ОбъектМетаданных) Тогда
		ПредставлениеТипаОбъекта = НСтр("ru='плану видов расчета';uk='плану видів розрахунку'");
	ИначеЕсли ОбщегоНазначенияБТС.ЭтоРегистрСведений(ОбъектМетаданных) Тогда
		ПредставлениеТипаОбъекта = НСтр("ru='регистру сведений';uk='регістру відомостей'");
	ИначеЕсли ОбщегоНазначенияБТС.ЭтоРегистрНакопления(ОбъектМетаданных) Тогда
		ПредставлениеТипаОбъекта = НСтр("ru='регистру накопления';uk='регістру накопичення'");
	ИначеЕсли ОбщегоНазначенияБТС.ЭтоРегистрБухгалетрии(ОбъектМетаданных) Тогда
		ПредставлениеТипаОбъекта = НСтр("ru='регистру бухгалтерии';uk='регістру бухгалтерії'");
	ИначеЕсли ОбщегоНазначенияБТС.ЭтоРегистрРасчета(ОбъектМетаданных) Тогда
		ПредставлениеТипаОбъекта = НСтр("ru='регистру расчета';uk='регістру розрахунку'");
	ИначеЕсли ОбщегоНазначенияБТС.ЭтоНаборЗаписейПерерасчета(ОбъектМетаданных) Тогда
		ПредставлениеТипаОбъекта = НСтр("ru='перерасчету';uk='перерахунку'");
	ИначеЕсли ОбщегоНазначенияБТС.ЭтоБизнесПроцесс(ОбъектМетаданных) Тогда
		ПредставлениеТипаОбъекта = НСтр("ru='бизнес-процессу';uk='бізнес-процесу'");
	ИначеЕсли ОбщегоНазначенияБТС.ЭтоЗадача(ОбъектМетаданных) Тогда
		ПредставлениеТипаОбъекта = НСтр("ru='задаче';uk='задачі'");
	ИначеЕсли ОбщегоНазначенияБТС.ЭтоПланОбмена(ОбъектМетаданных) Тогда
		ПредставлениеТипаОбъекта = НСтр("ru='плану обмена';uk='плану обміну'");
	КонецЕсли;
	
	Если Параметры.Добавление Тогда
		
		Элементы.ГруппаСтраницыШапка.ТекущаяСтраница = Элементы.ГруппаСтраницаШапкаДобавление;
		Элементы.ГруппаСтраницыПодвал.ТекущаяСтраница = Элементы.ГруппаСтраницаПодвалДобавление;
		Элементы.ДекорацияЗаголовокШапкаДобавление.Заголовок = СтрШаблон(Элементы.ДекорацияЗаголовокШапкаДобавление.Заголовок,
			ПредставлениеТипаОбъекта,
			ОбъектМетаданных.Представление()
		);
		
	Иначе
		
		Элементы.ГруппаСтраницыШапка.ТекущаяСтраница = Элементы.ГруппаСтраницаШапкаУдаление;
		Элементы.ГруппаСтраницыПодвал.ТекущаяСтраница = Элементы.ГруппаСтраницаПодвалУдаление;
		Элементы.ДекорацияЗаголовокШапкаУдаление.Заголовок = СтрШаблон(
			Элементы.ДекорацияЗаголовокШапкаУдаление.Заголовок,
			ПредставлениеТипаОбъекта,
			ОбъектМетаданных.Представление()
		);
		
	КонецЕсли;
	
	ЭтотОбъект.Заголовок = СтрШаблон(
		ЭтотОбъект.Заголовок, ОбъектМетаданных.Представление());
	
	// Заполнение дерева
	
	Дерево = Новый ДеревоЗначений();
	
	Дерево.Колонки.Добавить("ПолноеИмя", Новый ОписаниеТипов("Строка"));
	Дерево.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	Дерево.Колонки.Добавить("Класс", Новый ОписаниеТипов("Число", , Новый КвалификаторыЧисла(10, 0, ДопустимыйЗнак.Неотрицательный)));
	Дерево.Колонки.Добавить("Картинка", Новый ОписаниеТипов("Картинка"));
	
	ДобавитьКорневуюСтрокуДерева(Дерево, "Константа", НСтр("ru='Константы';uk='Константи'"), 1, БиблиотекаКартинок.Константа);
	ДобавитьКорневуюСтрокуДерева(Дерево, "Справочник", НСтр("ru='Справочники';uk='Довідники'"), 2, БиблиотекаКартинок.Справочник);
	ДобавитьКорневуюСтрокуДерева(Дерево, "Документ", НСтр("ru='Документы';uk='Документи'"), 3, БиблиотекаКартинок.Документ);
	ДобавитьКорневуюСтрокуДерева(Дерево, "ЖурналДокументов", НСтр("ru='Журналы документов';uk='Журнали документів'"), 4, БиблиотекаКартинок.ЖурналДокументов);
	ДобавитьКорневуюСтрокуДерева(Дерево, "Перечисление", НСтр("ru='Перечисление';uk='Перелічення'"), 5, БиблиотекаКартинок.Перечисление);
	ДобавитьКорневуюСтрокуДерева(Дерево, "ПланВидовХарактеристик", НСтр("ru='Планы видов характеристик';uk='Плани видів характеристик'"), 6, БиблиотекаКартинок.ПланВидовХарактеристик);
	ДобавитьКорневуюСтрокуДерева(Дерево, "ПланСчетов", НСтр("ru='Планы счетов';uk='Плани рахунків'"), 7, БиблиотекаКартинок.ПланСчетов);
	ДобавитьКорневуюСтрокуДерева(Дерево, "ПланВидовРасчета", НСтр("ru='Планы видов расчета';uk='Плани видів розрахунку'"), 8, БиблиотекаКартинок.ПланВидовРасчета);
	ДобавитьКорневуюСтрокуДерева(Дерево, "РегистрСведений", НСтр("ru='Регистры сведений';uk='Регістри відомостей'"), 9, БиблиотекаКартинок.РегистрСведений);
	ДобавитьКорневуюСтрокуДерева(Дерево, "РегистрНакопления", НСтр("ru='Регистры накопления';uk='Регістри накопичення'"), 10, БиблиотекаКартинок.РегистрНакопления);
	ДобавитьКорневуюСтрокуДерева(Дерево, "РегистрБухгалтерии", НСтр("ru='Регистры бухгалтерии';uk='Регістри бухгалтерії'"), 11, БиблиотекаКартинок.РегистрБухгалтерии);
	ДобавитьКорневуюСтрокуДерева(Дерево, "РегистрРасчета", НСтр("ru='Регистры расчета';uk='Регістри розрахунку'"), 12, БиблиотекаКартинок.РегистрРасчета);
	ДобавитьКорневуюСтрокуДерева(Дерево, "БизнесПроцесс", НСтр("ru='Бизнес-процессы';uk='Бізнес-процеси'"), 13, БиблиотекаКартинок.БизнесПроцесс);
	ДобавитьКорневуюСтрокуДерева(Дерево, "Задача", НСтр("ru='Задачи';uk='Задачі'"), 14, БиблиотекаКартинок.Задача);
	ДобавитьКорневуюСтрокуДерева(Дерево, "ПланОбмена", НСтр("ru='Планы обмена';uk='Плани обміну'"), 15, БиблиотекаКартинок.ПланОбмена);
	
	Для Каждого Зависимость Из Параметры.ЗависимостиОбъекта Цикл
		ДобавитьВложеннуюСтрокуДерева(Дерево, Метаданные.НайтиПоПолномуИмени(Зависимость));
	КонецЦикла;
	
	Дерево.Колонки.Удалить(Дерево.Колонки["ПолноеИмя"]);
	Дерево.Колонки.Удалить(Дерево.Колонки["Класс"]);
	
	УдаляемыеСтроки = Новый Массив();
	Для Каждого СтрокаДерева Из Дерево.Строки Цикл
		Если СтрокаДерева.Строки.Количество() = 0 Тогда
			УдаляемыеСтроки.Добавить(СтрокаДерева);
		КонецЕсли;
	КонецЦикла;
	Для Каждого УдаляемаяСтрока Из УдаляемыеСтроки Цикл
		Дерево.Строки.Удалить(УдаляемаяСтрока);
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(Дерево, "ОбъектыМетаданных");
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьКорневуюСтрокуДерева(Дерево,Знач ПолноеИмя, Знач Представление, Знач Класс, Знач Картинка)
	
	НоваяСтрока = Дерево.Строки.Добавить();
	НоваяСтрока.ПолноеИмя = ПолноеИмя;
	НоваяСтрока.Представление = Представление;
	НоваяСтрока.Класс = Класс;
	НоваяСтрока.Картинка = Картинка;
	
КонецПроцедуры

Процедура ДобавитьВложеннуюСтрокуДерева(Дерево, Знач ОбъектМетаданных)
	
	ПолноеИмя = ОбъектМетаданных.ПолноеИмя();
	
	СтруктураИмени = СтрРазделить(ПолноеИмя, ".");
	КлассОбъекта = СтруктураИмени[0];
	
	СтрокаВладелец = Неопределено;
	Для Каждого СтрокаДерева Из Дерево.Строки Цикл
		Если СтрокаДерева.ПолноеИмя = КлассОбъекта Тогда
			СтрокаВладелец = СтрокаДерева;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если СтрокаВладелец = Неопределено Тогда
		ВызватьИсключение СтрШаблон(НСтр("ru='Неизвестный объект метаданных: %1';uk='Невідомий об''єкт метаданих: %1'"), ПолноеИмя);
	КонецЕсли;
	
	НоваяСтрока = СтрокаВладелец.Строки.Добавить();
	
	НоваяСтрока.Представление = ОбъектМетаданных.Представление();
	НоваяСтрока.Класс = СтрокаВладелец.Класс;
	НоваяСтрока.Картинка = СтрокаВладелец.Картинка;
	
КонецПроцедуры
