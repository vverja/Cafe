#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда


#Область ОбновлениеИнформационнойБазы


Процедура КорректироватьОплатуВДругуюОрганизацию_ДанныеДляОбновления(Параметры) Экспорт
    
	ПолноеИмяРегистра = "РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент";
    
	Запрос = Новый Запрос("
	|ВЫБРАТЬ 
	|	РасшифровкаПлатежа.Ссылка,
	|	МАКСИМУМ(РасшифровкаПлатежа.НомерСтроки) КАК ВсегоСтрок
	|ПОМЕСТИТЬ втТабЧасть
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасшифровкаПлатежа.Ссылка
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(РасшифровкаПлатежа.НомерСтроки) > 1
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|	ДанныеРегистра.Период,
	|	ДанныеРегистра.Регистратор КАК Регистратор,
	|	СУММА(1) КАК ВсегоСтрок
	|ПОМЕСТИТЬ втДанныеРегистра
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДанныеРегистра
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ДанныеРегистра.Регистратор) = ТИП(Документ.СписаниеБезналичныхДенежныхСредств)
	|	И ВЫРАЗИТЬ(ДанныеРегистра.Регистратор КАК Документ.СписаниеБезналичныхДенежныхСредств).ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРегистра.Регистратор,
	|	ДанныеРегистра.Период
	|
	|ИМЕЮЩИЕ
	|	СУММА(1) > 4
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ 
	|	втДанныеРегистра.Регистратор КАК Ссылка
	|ИЗ
	|	втДанныеРегистра КАК втДанныеРегистра
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втТабЧасть КАК втТабЧасть
	|		ПО втДанныеРегистра.Регистратор = втТабЧасть.Ссылка
	|			И (втДанныеРегистра.ВсегоСтрок > втТабЧасть.ВсегоСтрок * 4)
	|");
    
	Регистраторы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
    
    ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(
        Параметры, 
        Регистраторы, 
        ПолноеИмяРегистра
    );
	
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.1
// Корректировка движений регистра ""Движения ""Денежные средства - Контрагент"" по хоз. операции ""Оплата в другую организацию""
Процедура КорректироватьОплатуВДругуюОрганизацию(Параметры) Экспорт
    
    ПолноеИмяРегистра = "РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент";
	ПолноеИмяДокумента = "Документ.СписаниеБезналичныхДенежныхСредств";
    
    Запрос = Новый Запрос(ТекстЗапросаСвернутыхДвиженийОплатыВДругуюОрганизацию());
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Результат = ОбновлениеИнформационнойБазы.СоздатьВременнуюТаблицуРегистраторовРегистраДляОбработки(
        Параметры.Очередь,
        ПолноеИмяДокумента,
		ПолноеИмяРегистра,
		Запрос.МенеджерВременныхТаблиц
    );
	
	Если НЕ Результат.ЕстьДанныеДляОбработки Тогда
		Параметры.ОбработкаЗавершена = Истина;
		Возврат;
    КонецЕсли;
    
	Если НЕ Результат.ЕстьЗаписиВоВременнойТаблице Тогда
		Параметры.ОбработкаЗавершена = Ложь;
		Возврат;
	КонецЕсли;
	
	ВыборкаПоДокументу = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоДокументу.Следующий() Цикл
		
		Регистратор = ВыборкаПоДокументу.Регистратор;
		
		НачатьТранзакцию();
		
		Попытка
			
			Блокировка = Новый БлокировкаДанных;
			
			БлокировкаДокумента = Блокировка.Добавить(ПолноеИмяДокумента);
			БлокировкаДокумента.УстановитьЗначение("Ссылка", Регистратор);
			БлокировкаДокумента.Режим = РежимБлокировкиДанных.Разделяемый;
            
            БлокировкаРегистра = Блокировка.Добавить(ПолноеИмяРегистра + ".НаборЗаписей");
			БлокировкаРегистра.УстановитьЗначение("Регистратор", Регистратор);
			
			Блокировка.Заблокировать();
		
			// Записать правильные движения
			Набор = РегистрыНакопления.ДвиженияДенежныеСредстваКонтрагент.СоздатьНаборЗаписей();
			Набор.Отбор.Регистратор.Установить(Регистратор);
			
			Выборка = ВыборкаПоДокументу.Выбрать();
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(Набор.Добавить(), Выборка);
            КонецЦикла;
            
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(Набор);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстСообщения = НСтр("ru='Не удалось обработать %Документ% по причине: %Причина%';uk='Не вдалося обробити %Документ% з причини: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Документ%", Регистратор);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Ошибка,
									Регистратор.Метаданные(),
									Регистратор,
									ТекстСообщения);
		КонецПопытки;
	
	КонецЦикла;
	
	ОбработкаЗавершена = НЕ ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки(
        Параметры.Очередь, 
        ПолноеИмяРегистра
    );
    
	Параметры.ОбработкаЗавершена = ОбработкаЗавершена;
	
КонецПроцедуры

Функция ТекстЗапросаСвернутыхДвиженийОплатыВДругуюОрганизацию()
	
	Возврат
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДвиженияДенежныеСредстваКонтрагент.Период,
	|	ДвиженияДенежныеСредстваКонтрагент.Регистратор,
	|	ДвиженияДенежныеСредстваКонтрагент.Активность,
    |
	|	ДвиженияДенежныеСредстваКонтрагент.ХозяйственнаяОперация,
	|	ДвиженияДенежныеСредстваКонтрагент.Организация,
	|	ДвиженияДенежныеСредстваКонтрагент.Подразделение,
	|	ДвиженияДенежныеСредстваКонтрагент.ДенежныеСредства,
	|	ДвиженияДенежныеСредстваКонтрагент.ТипДенежныхСредств,
	|	ДвиженияДенежныеСредстваКонтрагент.СтатьяДвиженияДенежныхСредств,
	|	ДвиженияДенежныеСредстваКонтрагент.ВалютаПлатежа,
	|	ДвиженияДенежныеСредстваКонтрагент.Партнер,
	|	ДвиженияДенежныеСредстваКонтрагент.Контрагент,
	|	ДвиженияДенежныеСредстваКонтрагент.Договор,
	|	ДвиженияДенежныеСредстваКонтрагент.ОбъектРасчетов,
	|	ДвиженияДенежныеСредстваКонтрагент.РасчетныйДокумент,
    |
	|	ДвиженияДенежныеСредстваКонтрагент.СуммаОплаты,
	|	ДвиженияДенежныеСредстваКонтрагент.СуммаОплатыРегл,
	|	ДвиженияДенежныеСредстваКонтрагент.СуммаОплатыВВалютеПлатежа,
	|	ДвиженияДенежныеСредстваКонтрагент.СуммаПостоплаты,
	|	ДвиженияДенежныеСредстваКонтрагент.СуммаПостоплатыРегл,
	|	ДвиженияДенежныеСредстваКонтрагент.СуммаПостоплатыВВалютеПлатежа,
	|	ДвиженияДенежныеСредстваКонтрагент.СуммаПредоплаты,
	|	ДвиженияДенежныеСредстваКонтрагент.СуммаПредоплатыРегл,
	|	ДвиженияДенежныеСредстваКонтрагент.СуммаПредоплатыВВалютеПлатежа,
    |	ДвиженияДенежныеСредстваКонтрагент.СуммаКВыплатеВРамкахЛимита,
    |	ДвиженияДенежныеСредстваКонтрагент.СуммаКВыплатеСверхЛимита,
    |
	|	ДвиженияДенежныеСредстваКонтрагент.ВалютаВзаиморасчетов,
	|	ДвиженияДенежныеСредстваКонтрагент.СуммаОплатыВВалютеВзаиморасчетов,
	|	ДвиженияДенежныеСредстваКонтрагент.СуммаПостоплатыВВалютеВзаиморасчетов,
	|	ДвиженияДенежныеСредстваКонтрагент.СуммаПредоплатыВВалютеВзаиморасчетов,
	|	ДвиженияДенежныеСредстваКонтрагент.ИсточникГФУДенежныхСредств,
	|	ДвиженияДенежныеСредстваКонтрагент.ИсточникГФУРасчетов,
	|	ДвиженияДенежныеСредстваКонтрагент.ОтложенноеПроведение
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДвиженияДенежныеСредстваКонтрагент
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втДляОбработкиДвиженияДенежныеСредстваКонтрагент КАК РегистраторыДляОбработки
	|			ПО ДвиженияДенежныеСредстваКонтрагент.Регистратор = РегистраторыДляОбработки.Регистратор
    |
	|УПОРЯДОЧИТЬ ПО
	|	ДвиженияДенежныеСредстваКонтрагент.Период,
	|	ДвиженияДенежныеСредстваКонтрагент.Регистратор
	|
	|ИТОГИ ПО
	|	ДвиженияДенежныеСредстваКонтрагент.Регистратор
    |";
	
КонецФункции

Процедура ИсправитьДвижения_ДанныеДляОбновления(Параметры) Экспорт
	
	ПолноеИмяРегистра = "РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент";
	
	Запрос = Новый Запрос(
	// Движения по подарочным сертификатам
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Регистратор
	|ИЗ
	|	Документ.РеализацияПодарочныхСертификатов КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДанныеРегистра
	|		ПО ДанныеДокумента.Ссылка = ДанныеРегистра.Регистратор
	|ГДЕ
	|	ДанныеДокумента.Проведен
	|	И ДанныеРегистра.Регистратор ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка
	|ИЗ
	|	Документ.ВозвратПодарочныхСертификатов КАК ДанныеДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДанныеРегистра
	|		ПО ДанныеДокумента.Ссылка = ДанныеРегистра.Регистратор
	|ГДЕ
	|	ДанныеДокумента.Проведен
	|	И ДанныеРегистра.Регистратор ЕСТЬ NULL
	|
	// Движения по лимитам
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Регистратор
	|	
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДанныеРегистра
	|	ПО
	|		ДанныеРегистра.Регистратор = ДанныеДокумента.Ссылка
	|	
	|ГДЕ
	|	ДанныеДокумента.Проведен
	|	И ДанныеРегистра.Регистратор ЕСТЬ NULL
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов)
	|	)
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Регистратор
	|	
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДанныеРегистра
	|	ПО
	|		ДанныеРегистра.Регистратор = ДанныеДокумента.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК РКОРасшифровкаПлатежа
	|	ПО
	|		РКОРасшифровкаПлатежа.Ссылка = ДанныеДокумента.Ссылка
	|	
	|ГДЕ
	|	ДанныеДокумента.Проведен
	|	И ДанныеРегистра.Регистратор ЕСТЬ NULL
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов)
	|	)
	|	И ЕСТЬNULL(РКОРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств, ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств)
	|		= ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ДанныеРегистра.Регистратор
	|	
	|ИМЕЮЩИЕ
	|	ДанныеРегистра.Регистратор ЕСТЬ NULL
	|		ИЛИ СУММА(ДанныеРегистра.СуммаКВыплатеСверхЛимита) = 0
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Регистратор
	|	
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК ДанныеДокумента
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК ДанныеРегистра
	|	ПО
	|		ДанныеРегистра.Регистратор = ДанныеДокумента.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК СписаниеРасшифровкаПлатежа
	|	ПО
	|		СписаниеРасшифровкаПлатежа.Ссылка = ДанныеДокумента.Ссылка
	|
	|ГДЕ
	|	ДанныеДокумента.Проведен
	|	И ДанныеРегистра.Регистратор ЕСТЬ NULL
	|	И ДанныеДокумента.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоставщику),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОплатыКлиенту),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратДенежныхСредствВДругуюОрганизацию),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеТаможне),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВнутренняяПередачаДенежныхСредств),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОплатаПоКредитам),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыдачаЗаймов)
	|	)
	|	И ЕСТЬNULL(СписаниеРасшифровкаПлатежа.ЗаявкаНаРасходованиеДенежныхСредств, ДанныеДокумента.ЗаявкаНаРасходованиеДенежныхСредств)
	|		= ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеДенежныхСредств.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Ссылка,
	|	ДанныеРегистра.Регистратор
	|	
	|ИМЕЮЩИЕ
	|	ДанныеРегистра.Регистратор ЕСТЬ NULL
	|		ИЛИ СУММА(ДанныеРегистра.СуммаКВыплатеСверхЛимита) = 0
	|");
	
	ДанныеКОбработке = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Регистратор");
	ОбновлениеИнформационнойБазы.ОтметитьРегистраторыКОбработке(Параметры, ДанныеКОбработке, ПолноеИмяРегистра);

КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.2
// Формирует движения по документам:
//  - РеализацияПодарочныхСертификатов
//  - ВозвратПодарочныхСертификатов
//  - ЗаявкаНаРасходованиеДенежныхСредств
//  - РасходныйКассовыйОрдер
//  - СписаниеБезналичныхДенежныхСредств;
Процедура ИсправитьДвижения(Параметры) Экспорт
	
	Регистраторы = Новый Массив;
	Регистраторы.Добавить("Документ.ВозвратПодарочныхСертификатов");
	Регистраторы.Добавить("Документ.РеализацияПодарочныхСертификатов");
	Регистраторы.Добавить("Документ.ЗаявкаНаРасходованиеДенежныхСредств");
	Регистраторы.Добавить("Документ.РасходныйКассовыйОрдер");
	Регистраторы.Добавить("Документ.СписаниеБезналичныхДенежныхСредств");
	
	Параметры.ОбработкаЗавершена = ОбновлениеИнформационнойБазыУТ.ПерезаписатьДвиженияИзОчереди(
        Регистраторы,
		"РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент",
		Параметры.Очередь
    );
	
КонецПроцедуры


#КонецОбласти

#КонецЕсли