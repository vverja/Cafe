
////////////////////////////////////////////////////////////////////////////////
// Модуль "РасхожденияКлиент" содержит серверные процедуры и функции для 
// работы документов отражения расхождений после отгрузки.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограмныйИнтерфейс

// Изменяет документ основание Акта о расхождениях в соотвествии с актом.
// Перед изменением выполняется проверка, что изменения требуются.
//
// Параметры:
//  АктОРасхождениях  - Документ.АктОРасхожденияхПослеОтгрузки - акт о расхождениях.
//  Основание         - Документ.РеализацияТоваровУслуг,
//                    - Документ.ВозвратТоваровПоставщику - основание акта, которое подлежит изменению.
//
Процедура ИзменитьДокументОснованиеАктаОРасхождених(АктОРасхождениях, Основание) Экспорт
	
	РезультатПроверки = ДокументОснованиеСоответствуетАкту(АктОРасхождениях, Основание, Истина);
	Если РезультатПроверки.СостояниеДокумента = "ТребуютсяИзменения" Тогда
		
		Если РезультатПроверки.ТаблицаИзменяемыхСтрок = Неопределено
			И РезультатПроверки.ТаблицаИзменяемыхСерий = Неопределено Тогда
			Возврат
		КонецЕсли;
		
		ИзменитьОснованиеАкта(АктОРасхождениях, Основание, 
		                      РезультатПроверки.ТаблицаИзменяемыхСтрок,
		                      РезультатПроверки.ТаблицаИзменяемыхСерий);
	КонецЕсли;

КонецПроцедуры

// Проверяет доступно ли изменение основания акта
//
// Параметры:
//  АктОРасхождениях  - Документ.АктОРасхожденияхПослеОтгрузки - акт о расхождениях.
//  Основание         - Документ.РеализацияТоваровУслуг,
//                    - Документ.ВозвратТоваровПоставщику - основание акта, которое проверяется на возможность изменений.
//
// Возвращаемое значение:
//   Строка   - состояние доступности изменений. Может принимать следующие значения :
//              "ИзмененияНеТребуются", "ИзмененияВыполнены", "ТребуютсяИзменения", "ОснованиеНеСоответствуетАкту"
//
Функция ДокументОснованиеСоответствуетАкту(АктОРасхождениях, Основание, ИзменениеДокумента = Ложь) Экспорт
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("СостояниеДокумента", "ОснованиеНеСоответствуетАкту");
	СтруктураВозврата.Вставить("ТаблицаИзменяемыхСтрок", Неопределено);
	СтруктураВозврата.Вставить("ТаблицаИзменяемыхСерий", Неопределено);
	
	ТекстЗапросаПоШапке = ТекстЗапросаПоШапкеАкта(АктОРасхождениях);
	Если ТекстЗапросаПоШапке = "" Тогда
		Возврат СтруктураВозврата;
	КонецЕсли;
	
	ТекстЗапросаПоШапке = ТекстЗапросаПоШапке + "
	|;
	|
	|//////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапросаПоШапкеОснования = ТекстЗапросаПоШапкеОснования(Основание);
	
	Если ТекстЗапросаПоШапкеОснования = "" Тогда
		Возврат СтруктураВозврата;
	КонецЕсли;
		
	ТекстЗапросаПоШапке = ТекстЗапросаПоШапке + ТекстЗапросаПоШапкеОснования;
	
	ЗапросПоШапке = Новый Запрос(ТекстЗапросаПоШапке);
	ЗапросПоШапке.УстановитьПараметр("АктОРасхождениях", АктОРасхождениях);
	ЗапросПоШапке.УстановитьПараметр("Основание", Основание);
	
	РезультатЗапросаПоШапке = ЗапросПоШапке.ВыполнитьПакет();
	
	Если НЕ ШапкаАктаИОснованиеСоотвествуют(РезультатЗапросаПоШапке, АктОРасхождениях, Основание) Тогда
		Возврат СтруктураВозврата;
	КонецЕсли;
	
	ПроверитьТабличныеЧастиАктаИОснования(АктОРасхождениях, Основание, СтруктураВозврата, ИзменениеДокумента);
	
	Возврат СтруктураВозврата;
	
КонецФункции

// Структура содержащая соответствия имен полей в акте и накладной, служебные признаки
// 
// Возвращаемое значение:
//   - Структура
//
Функция ОписаниеМетаданныхПроверкиВозможностиВнесенияИзлишкаВНакладную() Экспорт
	
	Структура = Новый Структура();
	// Соответствие имен полей
	Структура.Вставить("ИмяПоляНакладнойЗаказ");
	Структура.Вставить("ИмяПоляАктаЗаказ");
	Структура.Вставить("ИмяПоляАктаНакладная");
	
	// Признак отсутствия поля Заказ в табличной части Товары накладной
	Структура.Вставить("ЗаказВШапке", Ложь);
	
	Возврат Структура;
	
КонецФункции

// Процедура - Проверка возможности внесения избытка в накладную
//
// Параметры:
//  Акт					 - ДокументОбъект	 - Текущий акт
//  ИмяРегистра			 - Строка			 - Имя регистра Заказ, соответствующий типу накладной используемой в акте
//  ОписаниеМетаданных	 - Структура		 - Описание соответствий имен полей в акте и накладной, служебные признаки
//  Отказ				 - Булево			 - 
//
Процедура ПроверкаВозможностиВнесенияИзлишкаВНакладную(Акт, ИмяРегистра, ОписаниеМетаданных, Отказ) Экспорт
	
	ДействияСИзлишком = Новый Массив();
	// Оформить перепоставленное
	ДействияСИзлишком.Добавить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ПокупкаПерепоставленного);
	ДействияСИзлишком.Добавить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленное);
	// Оформить перепоставленное и вернуть
	ДействияСИзлишком.Добавить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ВозвратПерепоставленного);
	ДействияСИзлишком.Добавить(Перечисления.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленноеИВернуть);
	
	МассивНакладных = НеобходимоВноситьИзбытокВНакладную(Акт, ОписаниеМетаданных.ИмяПоляАктаНакладная, ДействияСИзлишком);
	
	ИзмененныеТЧТовары = Новый Массив();
	МассивНакладныхДляИзменений = Новый Массив();
	
	// Получение таблицы измененных ТЧ Товары накладных
	Для Каждого Накладная Из МассивНакладных Цикл
		НакладнаяОбъект = Накладная.ПолучитьОбъект();
		
		ИзмененияНакладной = ПодготовитьИзмененияВТЧТоварыНакладной(Акт, Накладная, ОписаниеМетаданных, ДействияСИзлишком);
		Если ИзмененияНакладной.ЕстьИзменения Тогда
			ИзмененныеТЧТовары.Добавить(ИзмененияНакладной.ТоварыНакладной);
			МассивНакладныхДляИзменений.Добавить(Накладная);
		КонецЕсли;
	КонецЦикла;
	
	Если ИзмененныеТЧТовары.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТЗИзмененныеТоварыНакладных = ИзмененныеТЧТовары[0].СкопироватьКолонки();
	Для Каждого ТЗТоварыНакладной Из ИзмененныеТЧТовары Цикл
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТЗТоварыНакладной, ТЗИзмененныеТоварыНакладных);
	КонецЦикла;
	
	СтруктураДействий = Новый Структура();
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(ТЗИзмененныеТоварыНакладных, СтруктураДействий, Неопределено);
	
	НакладнаяДляЗаполненияСлужебныхДанных = МассивНакладныхДляИзменений[0];
	ТипНакладной = ТипЗнч(НакладнаяДляЗаполненияСлужебныхДанных);
	МетаданныеНакладной = Метаданные.НайтиПоТипу(ТипНакладной);
	ИмяНакладной = МетаданныеНакладной.Имя;
	
	// Получение таблицы движений накладных
	ТаблицаДвижений = ПолучитьНовыеДвиженияНакладныхПоРегиструЗаказы(ИмяРегистра, ИмяНакладной, ТЗИзмененныеТоварыНакладных);
	
	СтрокиСОшибками = ВыполнитьКонтрольДобавленияИзлишкаВНакладную(ИмяРегистра, ОписаниеМетаданных.ИмяПоляНакладнойЗаказ, ТаблицаДвижений, МассивНакладныхДляИзменений);
	
	СообщитьОшибкиДобавленияИзлишкаВНакладную(Акт, СтрокиСОшибками, ОписаниеМетаданных.ИмяПоляАктаЗаказ, Отказ);
	
КонецПроцедуры

Функция УстановитьВариантДействияВСтроках(Форма, РезультатВыбораПользователя, КоличествоИзмененныхСтрокСоответствие) Экспорт
	
	КоличествоИзмененныхСтрок = 0;
	КэшированныеЗначения = Неопределено;
	
	Для Каждого ИДСтроки Из Форма.Элементы.Товары.ВыделенныеСтроки Цикл
		ТекущаяСтрока = Форма.Объект.Товары.НайтиПоИдентификатору(ИДСтроки);
		НоменклатураКлиентСервер.ОбновитьКешированныеЗначенияДляУчетаСерий(ТекущаяСтрока, КэшированныеЗначения, Форма.ПараметрыУказанияСерий);
		Если ЗначениеЗаполнено(РезультатВыбораПользователя.ДействиеНедостачи)
			И ТекущаяСтрока.КоличествоУпаковокРасхождения < 0 Тогда
			ВариантДействия = РезультатВыбораПользователя.ДействиеНедостачи;
		Иначе
			ВариантДействия = РезультатВыбораПользователя.ДействиеИзлишки;
		КонецЕсли;
		Если РасхожденияКлиентСервер.ИзменитьДействиеВСтроке(ТекущаяСтрока, РезультатВыбораПользователя) Тогда
			КоличествоИзмененныхСтрокСоответствие[ВариантДействия] = КоличествоИзмененныхСтрокСоответствие[ВариантДействия] + 1;
			НоменклатураСервер.ЗаполнитьСтатусыУказанияСерийПриОкончанииРедактированияСтрокиТЧ(Форма.Объект, Форма.ПараметрыУказанияСерий, ИДСтроки, КэшированныеЗначения);
		КонецЕсли;
	КонецЦикла;
	
	Возврат КоличествоИзмененныхСтрок;
	
КонецФункции

Функция НеобходимоВноситьИзбытокВНакладную(Акт, ИмяПоляАктаНакладная, ДействияСИзлишком)
	
	МассивНакладных = Новый Массив();
	
	// Поиск излишков не выделенных в отдельные строки и получение накладных этих строк
	Для Каждого Строка Из Акт.Товары Цикл
		Если Строка.КодСтроки > 0 
			И Строка.Количество > Строка.КоличествоПоДокументу 
			И ДействияСИзлишком.Найти(Строка.Действие) <> Неопределено Тогда
			
			Накладная = Строка[ИмяПоляАктаНакладная];
			
			Если МассивНакладных.Найти(Накладная) = Неопределено Тогда
				МассивНакладных.Добавить(Накладная);
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивНакладных;
	
КонецФункции

Функция ПодготовитьИзмененияВТЧТоварыНакладной(Акт, Накладная, ОписаниеМетаданных, ДействияСИзлишком)
	
	МассивТиповНакладных = Новый Массив();
	МассивТиповНакладных.Добавить(ТипЗнч(Накладная));
	
	ТоварыАкта = Акт.Товары.Выгрузить();
	
	ТоварыНакладной = Накладная.Товары.Выгрузить();
	ТоварыНакладной.Колонки.Добавить("Ссылка", Новый ОписаниеТипов(МассивТиповНакладных));
	ТоварыНакладной.ЗаполнитьЗначения(Накладная, "Ссылка");
	
	Если ОписаниеМетаданных.ЗаказВШапке Тогда
		
		Заказ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Накладная, ОписаниеМетаданных.ИмяПоляНакладнойЗаказ);
		
		МассивТиповЗаказов = Новый Массив();
		МассивТиповЗаказов.Добавить(ТипЗнч(Заказ));
		
		ТоварыНакладной.Колонки.Добавить(ОписаниеМетаданных.ИмяПоляНакладнойЗаказ, Новый ОписаниеТипов(МассивТиповЗаказов));
		ТоварыНакладной.ЗаполнитьЗначения(Заказ, ОписаниеМетаданных.ИмяПоляНакладнойЗаказ);
		
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Таблица.КодСтроки,
	|	Таблица.ИмяПоляАктаЗаказ КАК Заказ,
	|	Таблица.ИмяПоляАктаНакладная КАК Накладная,
	|	Таблица.КоличествоУпаковок КАК КоличествоАкта
	|ПОМЕСТИТЬ ВТТоварыАктаНесвернутая
	|ИЗ
	|	&ТоварыАкта КАК Таблица
	|ГДЕ
	|	Таблица.КодСтроки > 0
	|	И Таблица.Действие В(&ДействияСИзлишком)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.КодСтроки,
	|	Таблица.Заказ,
	|	Таблица.Накладная,
	|	СУММА(Таблица.КоличествоАкта) КАК КоличествоАкта
	|ПОМЕСТИТЬ ВТТоварыАкта
	|ИЗ
	|	ВТТоварыАктаНесвернутая КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Накладная,
	|	Таблица.КодСтроки,
	|	Таблица.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.КодСтроки,
	|	Таблица.ИмяПоляНакладнойЗаказ КАК Заказ,
	|	Таблица.Ссылка КАК Накладная,
	|	Таблица.КоличествоУпаковок КАК КоличествоНакладной
	|ПОМЕСТИТЬ ВТТоварыНакладнойНесвернутая
	|ИЗ
	|	&ТоварыНакладной КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.КодСтроки,
	|	Таблица.Заказ,
	|	Таблица.Накладная,
	|	СУММА(Таблица.КоличествоНакладной) КАК КоличествоНакладной
	|ПОМЕСТИТЬ ВТТоварыНакладной
	|ИЗ
	|	ВТТоварыНакладнойНесвернутая КАК Таблица
	|
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Заказ,
	|	Таблица.Накладная,
	|	Таблица.КодСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТоварыАкта.КодСтроки,
	|	ВТТоварыАкта.Заказ КАК ИмяПоляНакладнойЗаказ,
	|	ВТТоварыАкта.Накладная,
	|	ВТТоварыАкта.КоличествоАкта,
	|	ВТТоварыНакладной.КоличествоНакладной КАК КоличествоУпаковок
	|ИЗ
	|	ВТТоварыАкта КАК ВТТоварыАкта
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТоварыНакладной КАК ВТТоварыНакладной
	|		ПО ВТТоварыАкта.КодСтроки = ВТТоварыНакладной.КодСтроки
	|			И ВТТоварыАкта.Заказ = ВТТоварыНакладной.Заказ
	|			И ВТТоварыАкта.Накладная = ВТТоварыНакладной.Накладная
	|ГДЕ
	|	ВТТоварыАкта.КоличествоАкта <> ВТТоварыНакладной.КоличествоНакладной";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяПоляНакладнойЗаказ", ОписаниеМетаданных.ИмяПоляНакладнойЗаказ);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяПоляАктаЗаказ", ОписаниеМетаданных.ИмяПоляАктаЗаказ);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяПоляАктаНакладная", ОписаниеМетаданных.ИмяПоляАктаНакладная);

	Запрос = Новый Запрос();
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ДействияСИзлишком", ДействияСИзлишком);
	Запрос.УстановитьПараметр("ТоварыАкта", ТоварыАкта);
	Запрос.УстановитьПараметр("ТоварыНакладной", ТоварыНакладной);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() > 0 Тогда
		ЕстьИзменения = Истина;
	Иначе
		ЕстьИзменения = Ложь;
	КонецЕсли;
	
	СтруктураПоиска = Новый Структура("КодСтроки, КоличествоУпаковок, " + ОписаниеМетаданных.ИмяПоляНакладнойЗаказ);
	
	// Внесение изменений в таблицу накладной
	Для Каждого Строка Из Результат Цикл
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, Строка);
		НайденныеСтроки = ТоварыНакладной.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() > 0 Тогда
			НайденнаяСтрока = НайденныеСтроки[0];
			НайденнаяСтрока.КоличествоУпаковок = Строка.КоличествоАкта;
		КонецЕсли;
	КонецЦикла;
	
	СтруктураВозврата = Новый Структура("ЕстьИзменения, ТоварыНакладной", ЕстьИзменения, ТоварыНакладной);
	
	Возврат СтруктураВозврата;
	
КонецФункции

Функция ПолучитьНовыеДвиженияНакладныхПоРегиструЗаказы(ИмяРегистра, ИмяНакладной, ИзмененныеТЧТоварыНакладных)
	
	ТекстЗапросаВТТовары = ВременнаяТаблицаИзТаблицыЗначений(ИзмененныеТЧТоварыНакладных, "Таблица");
	
	СтруктураАдаптированногоЗапросаМеханизмаПроведения = Документы[ИмяНакладной].АдаптированныйТекстЗапросаДвиженийПоРегистру(ИмяРегистра);
	ТекстЗапросаДвиженийПоРегистру = СтрЗаменить(СтруктураАдаптированногоЗапросаМеханизмаПроведения.ТекстЗапроса, "Документ." + ИмяНакладной + ".Товары", "ВтТаблица");
	
	ТекстЗапроса = ТекстЗапросаВТТовары + ТекстЗапросаДвиженийПоРегистру;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Таблица", ИзмененныеТЧТоварыНакладных);
	
	Для Каждого КлючЗначение Из СтруктураАдаптированногоЗапросаМеханизмаПроведения.ЗначенияПараметров Цикл
		Запрос.УстановитьПараметр(КлючЗначение.Ключ, КлючЗначение.Значение);
	КонецЦикла;
	
	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

Функция ВыполнитьКонтрольДобавленияИзлишкаВНакладную(ИмяРегистра, ИмяПоляЗаказ, ТаблицаДвижений, МассивНакладных)
	
	Заказы = ТаблицаДвижений.ВыгрузитьКолонку(ИмяПоляЗаказ);
	ОбщегоНазначенияКлиентСервер.СвернутьМассив(Заказы);
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Регистраторы", МассивНакладных);
	Запрос.УстановитьПараметр("ТаблицаНовыхДвижений", ТаблицаДвижений);
	Запрос.УстановитьПараметр("Заказы", Заказы);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РегистрЗаказы.ИмяПоляЗаказ,
	|	РегистрЗаказы.КодСтроки,
	|	РегистрЗаказы.КОформлению
	|ПОМЕСТИТЬ ВтДвиженияНакладных
	|ИЗ
	|	ИмяРегистра КАК РегистрЗаказы
	|ГДЕ
	|	РегистрЗаказы.Регистратор В(&Регистраторы)
	|	И РегистрЗаказы.Активность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НовыеДвижения.ИмяПоляЗаказ,
	|	НовыеДвижения.КодСтроки,
	|	НовыеДвижения.КОформлению
	|ПОМЕСТИТЬ ВтНовыеДвиженияНакладных
	|ИЗ
	|	&ТаблицаНовыхДвижений КАК НовыеДвижения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрЗаказыОстатки.ИмяПоляЗаказ,
	|	РегистрЗаказыОстатки.КодСтроки,
	|	РегистрЗаказыОстатки.КОформлениюОстаток
	|ПОМЕСТИТЬ ВтНовыеОстаткиРегистраЗаказы
	|ИЗ
	|	ИмяРегистра.Остатки(, ИмяПоляЗаказ В (&Заказы)) КАК РегистрЗаказыОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Сторнирование остатков регистра (вычитание существующих движений накладных)
	|ВЫБРАТЬ
	|	ВтДвиженияНакладных.ИмяПоляЗаказ,
	|	ВтДвиженияНакладных.КодСтроки,
	|	ВтДвиженияНакладных.КОформлению
	|ИЗ
	|	ВтДвиженияНакладных КАК ВтДвиженияНакладных
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Добавление новых движений накладных
	|ВЫБРАТЬ
	|	ВтНовыеДвиженияНакладных.ИмяПоляЗаказ,
	|	ВтНовыеДвиженияНакладных.КодСтроки,
	|	-ВтНовыеДвиженияНакладных.КОформлению
	|ИЗ
	|	ВтНовыеДвиженияНакладных КАК ВтНовыеДвиженияНакладных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтНовыеОстаткиРегистраЗаказы.ИмяПоляЗаказ КАК Заказ,
	|	ВтНовыеОстаткиРегистраЗаказы.КодСтроки,
	|	СУММА(ВтНовыеОстаткиРегистраЗаказы.КОформлениюОстаток) КАК Количество
	|ИЗ
	|	ВтНовыеОстаткиРегистраЗаказы КАК ВтНовыеОстаткиРегистраЗаказы
	|
	|СГРУППИРОВАТЬ ПО
	|	ИмяПоляЗаказ,
	|	КодСтроки
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВтНовыеОстаткиРегистраЗаказы.КОформлениюОстаток) < 0";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИмяРегистра", "РегистрНакопления." + ИмяРегистра);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИмяПоляЗаказ", ИмяПоляЗаказ);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура СообщитьОшибкиДобавленияИзлишкаВНакладную(Акт, СтрокиСОшибками, ИмяПоляЗаказ, Отказ)
	
	Для Каждого Строка Из СтрокиСОшибками Цикл
		
		// Номер строки заранее неизвестен, т.к. запросы работают с накладной и регистром, но не актом
		ПараметрыОтбора = Новый Структура();
		ПараметрыОтбора.Вставить("КодСтроки", Строка.КодСтроки);
		ПараметрыОтбора.Вставить(ИмяПоляЗаказ, Строка.Заказ);
		
		НайденныеСтроки = Акт.Товары.НайтиСтроки(ПараметрыОтбора);
		
		Если НайденныеСтроки.Количество() > 0 Тогда
			СтрокаНакладной = НайденныеСтроки[0];
		Иначе
			Продолжить;
		КонецЕсли;
		
		ЕдиницаИзмерения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаНакладной.Номенклатура, "ЕдиницаИзмерения");
		
		ШаблонСообщения = НСтр("ru='Номенклатура %НоменклатураХарактеристика% 
        |По строке %НомерСтроки% оформлено больше, чем указано в распоряжении на оформление, на %Количество% %Единица%. Рекомендуется разбить строку, чтобы излишек был внесен ""Сверх заказа""'
        |;uk='Номенклатура %НоменклатураХарактеристика% 
        |По рядку %НомерСтроки% оформлено більше, ніж зазначено в розпорядженні на оформлення, %Количество% %Единица%. Рекомендується розбити рядок, щоб надлишок був внесений ""Понад замовлення""'");
		
		ТекстОшибки = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристика%",
						НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрокаНакладной.Номенклатура, СтрокаНакладной.Характеристика, СтрокаНакладной.Серия));
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НомерСтроки%", СтрокаНакладной.НомерСтроки);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Количество%", Строка(-Строка.Количество));
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Единица%",    Строка(ЕдиницаИзмерения));
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ТекстОшибки,
			Акт,
			ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", СтрокаНакладной.НомерСтроки, "КоличествоУпаковок"),
			,
			Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ВременнаяТаблицаИзТаблицыЗначений(Таблица, ИмяТаблицы)
	
	ШаблонПоле   = "Т.Поле КАК Поле";
	ТекстВсеПоля = "";
	Разделитель  = "";
	Для Каждого Колонка Из Таблица.Колонки Цикл
		ТекстВсеПоля = ТекстВсеПоля + Разделитель + СтрЗаменить(ШаблонПоле, "Поле", Колонка.Имя);
		Разделитель = "," + Символы.ПС + Символы.Таб;
	КонецЦикла;
	
	Текст =
	"ВЫБРАТЬ
	|	Т.Поле КАК Поле
	|ПОМЕСТИТЬ ВтТаблица
	|ИЗ
	|	&Таблица КАК Т
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	Текст = СтрЗаменить(Текст, "Т.Поле КАК Поле", ТекстВсеПоля);
	Текст = СтрЗаменить(Текст, "Таблица", ИмяТаблицы);
	
	Возврат Текст;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область АктыОРасхожденияхПослеОтгрузки

Процедура АктОРасхожденияхСписокОбработатьПараметрОснования(Форма, ЭтоАктыОРасхожденияПослеОтгрузки) Экспорт
	
	Если Форма.Параметры.Свойство("ТипОснованияАктаОРасхождении") И ЗначениеЗаполнено(Форма.Параметры.ТипОснованияАктаОРасхождении) Тогда 
		Форма.ТипОснованияАктаОРасхождении = Форма.Параметры.ТипОснованияАктаОРасхождении;
	ИначеЕсли Форма.Параметры.Отбор.Свойство("ТипОснованияАктаОРасхождении") И ЗначениеЗаполнено(Форма.Параметры.Отбор.ТипОснованияАктаОРасхождении) Тогда
		Форма.ТипОснованияАктаОРасхождении = Форма.Параметры.Отбор.ТипОснованияАктаОРасхождении;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Форма.ТипОснованияАктаОРасхождении) Тогда
		Если ЭтоАктыОРасхожденияПослеОтгрузки Тогда
			Форма.ТипОснованияАктаОРасхождении = Перечисления.ТипыОснованияАктаОРасхождении.РеализацияТоваровУслуг;
		Иначе
			Форма.ТипОснованияАктаОРасхождении = Перечисления.ТипыОснованияАктаОРасхождении.ПоступлениеТоваровУслуг;
		КонецЕсли;
	КонецЕсли;
	
	МассивДопустимыхТипов = Новый Массив;
	Если Форма.ТипОснованияАктаОРасхождении = Перечисления.ТипыОснованияАктаОРасхождении.РеализацияТоваровУслуг Тогда
		МассивДопустимыхТипов.Добавить(Перечисления.ТипыОснованияАктаОРасхождении.ПустаяСсылка());
		Форма.Заголовок = НСтр("ru='Акты о расхождениях после реализации';uk='Акти про розбіжності після реалізації'");
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "Партнер", "Заголовок", НСтр("ru='Клиент';uk='Клієнт'"));
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Форма.Список, "СтатусИзменение", НСтр("ru='Изменение реализации';uk='Зміна реалізації'"));
	ИначеЕсли Форма.ТипОснованияАктаОРасхождении = Перечисления.ТипыОснованияАктаОРасхождении.ВозвратПоставщику Тогда
		Форма.Заголовок = НСтр("ru='Акты о расхождениях после возвратов поставщикам';uk='Акти про розбіжності після повернень постачальникам'");
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "Партнер", "Заголовок", НСтр("ru='Поставщик';uk='Постачальник'"));
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Форма.Список, "СтатусИзменение", НСтр("ru='Изменение возврата';uk='Зміна повернення'"));
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы,"СпособОтраженияРасхождений", "Видимость", Ложь);
	ИначеЕсли Форма.ТипОснованияАктаОРасхождении = Перечисления.ТипыОснованияАктаОРасхождении.ПоступлениеТоваровУслуг Тогда
		Форма.Заголовок = НСтр("ru='Акты о расхождениях после поступления';uk='Акти про розбіжності після надходження'");
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "Партнер", "Заголовок", НСтр("ru='Поставщик';uk='Постачальник'"));
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Форма.Список, "СтатусИзменение", НСтр("ru='Изменение поступления';uk='Зміна надходження'"));
	Иначе
		Форма.Заголовок = НСтр("ru='Акты о расхождениях после возвратов от клиентов';uk='Акти про розбіжності після повернень від клієнтів'");
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы, "Партнер", "Заголовок", НСтр("ru='Клиент';uk='Клієнт'"));
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Форма.Список, "СтатусИзменение", НСтр("ru='Изменение возврата';uk='Зміна повернення'"));
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Форма.Элементы,"СпособОтраженияРасхождений", "Видимость", Ложь);
	КонецЕсли;
	МассивДопустимыхТипов.Добавить(Форма.ТипОснованияАктаОРасхождении);
	
	Если ЭтоАктыОРасхожденияПослеОтгрузки Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		      Форма.Список,
		      "СтатусКорректировкаКакНовые",
		      НСтр("ru='Оформление корректировок (реализация перепоставленного/возврат недопоставленного товара)';uk='Оформлення коригувань (реалізація перепоставленого/повернення недопоставленого товару)'"));
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		      Форма.Список, 
		      "СтатусКорректировкаКакИсправление", 
		      НСтр("ru='Оформление корректировки (исправление ошибок)';uk='Оформлення коригування (виправлення помилок)'"));
	Иначе
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		      Форма.Список, 
		      "СтатусКорректировкаКакИсправление", 
		      НСтр("ru='Оформление корректировки поступления';uk='Оформлення коригування надходження'"));
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Форма.Список,
	                                                                   "ТипОснованияАктаОРасхождении", 
	                                                                   МассивДопустимыхТипов, 
	                                                                   Истина);

КонецПроцедуры

Процедура ЗаполнитьЗависимыеРеквизитыТоваровРасхожденияПослеОтгрузки(Объект) Экспорт
	
	СтруктураДействий = РасхожденияКлиентСервер.СтруктураДействийЗаполнитьЗависимыеРеквизитыТоваровРасхожденияПослеОтгрузки();
	
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Объект.Товары,СтруктураДействий, Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область АктыОРасхожденияхПослеПриемки

Процедура ЗаполнитьЗависимыеРеквизитыТоваровРасхожденияПослеПриемки(Объект) Экспорт
	
	СтруктураДействий = РасхожденияКлиентСервер.СтруктураДействийЗаполнитьЗависимыеРеквизитыТоваровРасхожденияПослеПриемки();
	
	ОбработкаТабличнойЧастиСервер.ОбработатьТЧ(Объект.Товары,СтруктураДействий, Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область АктыОРасхожденияхПослеПеремещений

Процедура ОбработкаВыбораПодборНаСервереПеремещение(ТаблицаТовары, ДокументыОснования, ВыбранноеЗначение) Экспорт
	
	ВременнаяТаблицаТоваров = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресТоваровВХранилище);
	
	КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();

	Для каждого СтрокаТовара Из ВременнаяТаблицаТоваров Цикл
		
		ТекущаяСтрока = ТаблицаТовары.Добавить();
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара);
		РасхожденияКлиентСервер.ЗаполнитьДокументОснованиеВСтроке(ТекущаяСтрока, ДокументыОснования);
		
		СтруктураДействий = РасхожденияКлиентСервер.СтруктураДействийПриИзмененииКоличестваУпаковок();
		СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры", Новый Структура("Номенклатура", "ТипНоменклатуры"));
		
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	КонецЦикла;

КонецПроцедуры

// Возвращает таблицу, содержащую переданные документы основания, плюс заказы и склады по этим документам
//
// Параметры:
//  МассивДокументовОснований	 - Массив - 
// 
// Возвращаемое значение:
//   - ТаблицаЗначений
//
Функция СформироватьТаблицуДокументовОснованийПеремещение(МассивДокументовОснований) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = Документы.АктОРасхожденияхПослеПеремещения.ТекстЗапросаДокументыОснованияЗаказНаПеремещение();
	
	Запрос.УстановитьПараметр("МассивОснований", МассивДокументовОснований);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаДокументовОснований = Новый ТаблицаЗначений();
	ТаблицаДокументовОснований.Колонки.Добавить("ДокументОснование",
		Новый ОписаниеТипов("ДокументСсылка.ПеремещениеТоваров, ДокументСсылка.РеализацияТоваровУслуг, ДокументСсылка.ВозвратТоваровПоставщику"));
	ТаблицаДокументовОснований.Колонки.Добавить("ЗаказыОснования", Новый ОписаниеТипов("СписокЗначений"));
	ТаблицаДокументовОснований.Колонки.Добавить("СкладыОснования", Новый ОписаниеТипов("СписокЗначений"));
	
	ВыборкаОснования = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаОснования.Следующий() Цикл
		НоваяСтрока = ТаблицаДокументовОснований.Добавить();
		НоваяСтрока.ДокументОснование = ВыборкаОснования.ДокументОснование;
		ВыборкаЗаказы = ВыборкаОснования.Выбрать();
		Пока ВыборкаЗаказы.Следующий() Цикл
			Если ВыборкаЗаказы.Заказ <> Неопределено И НЕ ВыборкаЗаказы.Заказ.Пустая() Тогда
				НоваяСтрока.ЗаказыОснования.Добавить(ВыборкаЗаказы.Заказ);
			КонецЕсли;
			Если ВыборкаЗаказы.Склад <> Неопределено И НЕ ВыборкаЗаказы.Склад.Пустая() Тогда
				НоваяСтрока.СкладыОснования.Добавить(ВыборкаЗаказы.Склад);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТаблицаДокументовОснований;
	
КонецФункции

// Модифицирует элемент формы "ДокументыОснованиеПредставление".
//  Возвращает расчитанную строку для
//
// Параметры:
//  Элемент							 - ЭлементФормы	 - Элемент формы "ДокументыОснованиеПредставление"
//  КоличествоДокументовОснований	 - Число		 - 
//  КоличествоТоваров				 - Число		 - 
//  ПредставлениеДокументаОснования	 - Строка		 - Представление первого документа основания
// 
// Возвращаемое значение:
//   - Строка
//
Функция ФормированиеНадписиДокументыОснованиеПеремещение(Элемент, КоличествоДокументовОснований, КоличествоТоваров, ПредставлениеДокументаОснования = "") Экспорт

	ДокументыОснованиеПредставление = НСтр("ru='Не выбрано';uk='Не вибрано'");
	
	Если КоличествоТоваров = 0 Тогда
		ДокументыОснованиеПредставление = НСтр("ru='Не выбрано';uk='Не вибрано'"); 
		Элемент.Ширина = 8;
		Элемент.Гиперссылка = Ложь;
	Иначе
		
		Если КоличествоДокументовОснований = 0 Тогда
			ДокументыОснованиеПредставление = НСтр("ru='Не выбрано';uk='Не вибрано'");
			Элемент.Ширина = 8;
			Элемент.Гиперссылка = Ложь;
		ИначеЕсли КоличествоДокументовОснований = 1 Тогда
			ДокументыОснованиеПредставление = ПредставлениеДокументаОснования;
			Элемент.Ширина = 42;
			Элемент.Гиперссылка = Истина;
		Иначе
			ДокументыОснованиеПредставление = НСтр("ru='Всего перемещений';uk='Всього переміщень'") + ": " + Строка(КоличествоДокументовОснований);
			Элемент.Ширина = 14;
			Элемент.Гиперссылка = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ДокументыОснованиеПредставление;

КонецФункции

#КонецОбласти

#Область УправлениеЗависимостями

#КонецОбласти

#Область ОбщиеПроцедурыИФункцииАктовОРасхождениях

Процедура УправлениеАвтоЗаголовкомПослеЗаписи(Форма) Экспорт
	
	Если Форма.АвтоЗаголовок = Ложь Тогда
		Форма.Заголовок = "";
		Форма.АвтоЗаголовок = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоОснованиям(Форма, ВызыватьУправлениеДоступностью = Истина) Экспорт
	
	Если Форма.ДокументыОснования.Количество() = 0 Тогда
		Форма.Объект.Товары.Очистить();
	Иначе
		
		Запрос = Новый Запрос;
		
		Если РасхожденияКлиентСервер.ТипОснованияРеализацияТоваровУслуг(Форма.Объект.ТипОснованияАктаОРасхождении) Тогда
		
			Запрос.Текст = "
			|ВЫБРАТЬ
			|	РеализацияТоваровУслугТовары.Номенклатура,
			|	РеализацияТоваровУслугТовары.Характеристика,
			|	РеализацияТоваровУслугТовары.Серия,
			|	РеализацияТоваровУслугТовары.Назначение,
			|	РеализацияТоваровУслугТовары.Упаковка,
			|	РеализацияТоваровУслугТовары.КоличествоУпаковок,
			|	РеализацияТоваровУслугТовары.Количество,
			|	РеализацияТоваровУслугТовары.ВидЦены,
			|	ВЫБОР
			|		КОГДА РеализацияТоваровУслугТовары.КоличествоУпаковок = 0
			|			ТОГДА РеализацияТоваровУслугТовары.Цена
			|		ИНАЧЕ ВЫРАЗИТЬ(РеализацияТоваровУслугТовары.Сумма / РеализацияТоваровУслугТовары.КоличествоУпаковок КАК ЧИСЛО(15, 2))
			|	КОНЕЦ КАК Цена,
			|	РеализацияТоваровУслугТовары.Сумма,
			|	РеализацияТоваровУслугТовары.СтавкаНДС,
			|	РеализацияТоваровУслугТовары.Склад,
			|	РеализацияТоваровУслугТовары.СуммаНДС,
			|	РеализацияТоваровУслугТовары.СуммаСНДС,
			|	РеализацияТоваровУслугТовары.СтатусУказанияСерий,
			|	РеализацияТоваровУслугТовары.Ссылка КАК Реализация,
			|	ИСТИНА КАК ЗаполненоПоРеализации,
			|	РеализацияТоваровУслугТовары.КоличествоУпаковок КАК КоличествоУпаковокПоДокументу,
			|	РеализацияТоваровУслугТовары.Количество КАК КоличествоПоДокументу,
			|	РеализацияТоваровУслугТовары.Сумма КАК СуммаПоДокументу,
			|	РеализацияТоваровУслугТовары.СуммаНДС КАК СуммаНДСПоДокументу,
			|	РеализацияТоваровУслугТовары.СуммаСНДС КАК СуммаСНДСПоДокументу,
			|	РеализацияТоваровУслугТовары.ЗаказКлиента,
			|	РеализацияТоваровУслугТовары.КодСтроки
			|ИЗ
			|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
			|ГДЕ
			|	РеализацияТоваровУслугТовары.Ссылка В(&ДокументыОснования)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	РеализацияТоваровУслугСерии.Серия          КАК Серия,
			|	РеализацияТоваровУслугСерии.Количество     КАК Количество,
			|	РеализацияТоваровУслугСерии.Количество     КАК КоличествоПоДокументу,
			|	РеализацияТоваровУслугСерии.Номенклатура   КАК Номенклатура,
			|	РеализацияТоваровУслугСерии.Характеристика КАК Характеристика,
			|	РеализацияТоваровУслугСерии.Назначение     КАК Назначение,
			|	РеализацияТоваровУслугСерии.Склад          КАК Склад,
			|	РеализацияТоваровУслугСерии.Ссылка         КАК Реализация,
			|	Истина                                     КАК ЗаполненоПоРеализации
			|ИЗ
			|	Документ.РеализацияТоваровУслуг.Серии КАК РеализацияТоваровУслугСерии
			|ГДЕ
			|	РеализацияТоваровУслугСерии.Ссылка В(&ДокументыОснования)
			|";
			
		ИначеЕсли Форма.Объект.ТипОснованияАктаОРасхождении = Перечисления.ТипыОснованияАктаОРасхождении.ПоступлениеТоваровУслуг Тогда
			
			Запрос.Текст = "
			|ВЫБРАТЬ
			|	ПоступлениеТоваровУслугТовары.Номенклатура           КАК Номенклатура,
			|	ПоступлениеТоваровУслугТовары.НоменклатураПоставщика КАК НоменклатураПоставщика,
			|	ПоступлениеТоваровУслугТовары.Характеристика         КАК Характеристика,
			|	ПоступлениеТоваровУслугТовары.Серия                  КАК Серия,
			|	ПоступлениеТоваровУслугТовары.Назначение             КАК Назначение,
			|	ПоступлениеТоваровУслугТовары.Упаковка               КАК Упаковка,
			|	ПоступлениеТоваровУслугТовары.КоличествоУпаковок     КАК КоличествоУпаковок,
			|	ПоступлениеТоваровУслугТовары.Количество             КАК Количество,
			|	ПоступлениеТоваровУслугТовары.ВидЦеныПоставщика      КАК ВидЦеныПоставщика,
			|
			|	ВЫБОР
			|		КОГДА ПоступлениеТоваровУслугТовары.КоличествоУпаковок = 0
			|			ТОГДА ПоступлениеТоваровУслугТовары.Цена
			|		ИНАЧЕ  ВЫРАЗИТЬ(ПоступлениеТоваровУслугТовары.Сумма / ПоступлениеТоваровУслугТовары.КоличествоУпаковок КАК ЧИСЛО(15, 2))
			|	КОНЕЦ                                             КАК Цена,
			|
			|	ПоступлениеТоваровУслугТовары.Сумма               КАК Сумма,
			|	ПоступлениеТоваровУслугТовары.СтавкаНДС           КАК СтавкаНДС,
			|	ПоступлениеТоваровУслугТовары.Склад               КАК Склад,
			|	ПоступлениеТоваровУслугТовары.СуммаНДС            КАК СуммаНДС,
			|	ПоступлениеТоваровУслугТовары.СуммаСНДС           КАК СуммаСНДС,
			|	ПоступлениеТоваровУслугТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
			|	ПоступлениеТоваровУслугТовары.Ссылка              КАК ДокументОснование,
			|	ИСТИНА                                            КАК ЗаполненоПоОснованию,
			|	ПоступлениеТоваровУслугТовары.КоличествоУпаковок  КАК КоличествоУпаковокПоДокументу,
			|	ПоступлениеТоваровУслугТовары.Количество          КАК КоличествоПоДокументу,
			|	ПоступлениеТоваровУслугТовары.Сумма               КАК СуммаПоДокументу,
			|	ПоступлениеТоваровУслугТовары.СуммаНДС            КАК СуммаНДСПоДокументу,
			|	ПоступлениеТоваровУслугТовары.СуммаСНДС           КАК СуммаСНДСПоДокументу,
			|	ПоступлениеТоваровУслугТовары.ЗаказПоставщику     КАК ЗаказПоставщику,
			|	ПоступлениеТоваровУслугТовары.КодСтроки           КАК КодСтроки,
			|	ПоступлениеТоваровУслугТовары.СписатьНаРасходы    КАК СписатьНаРасходы,
			|	ПоступлениеТоваровУслугТовары.СтатьяРасходов      КАК СтатьяРасходов,
			|	ПоступлениеТоваровУслугТовары.АналитикаРасходов   КАК АналитикаРасходов,
			|	ПоступлениеТоваровУслугТовары.Подразделение       КАК Подразделение,
			|	ПоступлениеТоваровУслугТовары.Сделка              КАК Сделка,
			|	ПоступлениеТоваровУслугТовары.НомерГТД            КАК НомерГТД,
			|	ПоступлениеТоваровУслугТовары.Сертификат          КАК Сертификат
			|ИЗ
			|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
			|ГДЕ
			|	ПоступлениеТоваровУслугТовары.Ссылка В(&ДокументыОснования)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ПоступлениеТоваровУслугСерии.Серия          КАК Серия,
			|	ПоступлениеТоваровУслугСерии.Количество     КАК Количество,
			|	ПоступлениеТоваровУслугСерии.Количество     КАК КоличествоПоДокументу,
			|	ПоступлениеТоваровУслугСерии.Номенклатура   КАК Номенклатура,
			|	ПоступлениеТоваровУслугСерии.Характеристика КАК Характеристика,
			|	ПоступлениеТоваровУслугСерии.Назначение     КАК Назначение,
			|	ПоступлениеТоваровУслугСерии.Склад          КАК Склад,
			|	ПоступлениеТоваровУслугСерии.Ссылка         КАК ДокументОснование,
			|	Истина                                      КАК ЗаполненоПоОснованию
			|ИЗ
			|	Документ.ПоступлениеТоваровУслуг.Серии КАК ПоступлениеТоваровУслугСерии
			|ГДЕ
			|	ПоступлениеТоваровУслугСерии.Ссылка В(&ДокументыОснования)
			|";
			
		ИначеЕсли Форма.Объект.ТипОснованияАктаОРасхождении = Перечисления.ТипыОснованияАктаОРасхождении.ВозвратТоваровОтКлиента Тогда
			
			Запрос.Текст = "
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ВЫБОР
			|		КОГДА ВозвратТоваровОтКлиентаТовары.Порча
			|			ТОГДА ВозвратТоваровОтКлиентаТовары.НоменклатураОприходование
			|		ИНАЧЕ ВозвратТоваровОтКлиентаТовары.Номенклатура
			|	КОНЕЦ КАК Номенклатура,
			|	ВЫБОР
			|		КОГДА ВозвратТоваровОтКлиентаТовары.Порча
			|			ТОГДА ВозвратТоваровОтКлиентаТовары.ХарактеристикаОприходование
			|		ИНАЧЕ ВозвратТоваровОтКлиентаТовары.Характеристика
			|	КОНЕЦ КАК Характеристика,
			|	ВозвратТоваровОтКлиентаТовары.Серия,
			|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
			|	ВозвратТоваровОтКлиентаТовары.Упаковка КАК Упаковка,
			|	ВозвратТоваровОтКлиентаТовары.КоличествоУпаковок КАК КоличествоУпаковок,
			|	ВозвратТоваровОтКлиентаТовары.Количество КАК Количество,
			|	ВозвратТоваровОтКлиентаТовары.Цена КАК Цена,
			|	ВозвратТоваровОтКлиентаТовары.Сумма КАК Сумма,
			|	ВозвратТоваровОтКлиентаТовары.СтавкаНДС КАК СтавкаНДС,
			|	ВозвратТоваровОтКлиентаТовары.СуммаНДС КАК СуммаНДС,
			|	ВозвратТоваровОтКлиентаТовары.СуммаСНДС КАК СуммаСНДС,
			|	ВозвратТоваровОтКлиентаТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
			|	ВозвратТоваровОтКлиентаТовары.Ссылка КАК ДокументОснование,
			|	ИСТИНА КАК ЗаполненоПоОснованию,
			|	ВозвратТоваровОтКлиентаТовары.КоличествоУпаковок КАК КоличествоУпаковокПоДокументу,
			|	ВозвратТоваровОтКлиентаТовары.Количество КАК КоличествоПоДокументу,
			|	ВозвратТоваровОтКлиентаТовары.Сумма КАК СуммаПоДокументу,
			|	ВозвратТоваровОтКлиентаТовары.СуммаНДС КАК СуммаНДСПоДокументу,
			|	ВозвратТоваровОтКлиентаТовары.СуммаСНДС КАК СуммаСНДСПоДокументу,
			|	ВозвратТоваровОтКлиентаТовары.ДокументРеализации КАК ДокументРеализации,
			|	ВозвратТоваровОтКлиентаТовары.КодСтроки КАК КодСтроки,
			|	ВозвратТоваровОтКлиента.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаказПоставщику,
			|	ВозвратТоваровОтКлиента.Склад КАК Склад
			|ИЗ
			|	Документ.ВозвратТоваровОтКлиента.Товары КАК ВозвратТоваровОтКлиентаТовары
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
			|		ПО ВозвратТоваровОтКлиентаТовары.Ссылка = ВозвратТоваровОтКлиента.Ссылка
			|ГДЕ
			|	ВозвратТоваровОтКлиентаТовары.Ссылка В(&ДокументыОснования)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ТаблицаСерии.Серия КАК Серия,
			|	ТаблицаСерии.Количество КАК Количество,
			|	ТаблицаСерии.Количество КАК КоличествоПоДокументу,
			|	ВЫБОР
			|		КОГДА ТаблицаТовары.Порча
			|			ТОГДА ТаблицаСерии.НоменклатураОприходование
			|		ИНАЧЕ ТаблицаСерии.Номенклатура
			|	КОНЕЦ КАК Номенклатура,
			|	ВЫБОР
			|		КОГДА ТаблицаТовары.Порча
			|			ТОГДА ТаблицаСерии.ХарактеристикаОприходование
			|		ИНАЧЕ ТаблицаСерии.Характеристика
			|	КОНЕЦ КАК Характеристика,
			|	ТаблицаСерии.Ссылка.Склад КАК Склад,
			|	ТаблицаСерии.Ссылка КАК ДокументОснование,
			|	ИСТИНА КАК ЗаполненоПоОснованию,
			|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
			|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) КАК СтатусУказанияСерий
			|ИЗ
			|	Документ.ВозвратТоваровОтКлиента.Серии КАК ТаблицаСерии
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента.Товары КАК ТаблицаТовары
			|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
			|			И ТаблицаСерии.Номенклатура = ТаблицаТовары.Номенклатура
			|			И ТаблицаСерии.Характеристика = ТаблицаТовары.Характеристика
			|			И ТаблицаСерии.НоменклатураОприходование = ТаблицаТовары.НоменклатураОприходование
			|			И ТаблицаСерии.ХарактеристикаОприходование = ТаблицаТовары.ХарактеристикаОприходование
			|ГДЕ
			|	ТаблицаСерии.Ссылка В(&ДокументыОснования)
			|	И ТаблицаТовары.Ссылка В(&ДокументыОснования)
			|	И ТаблицаСерии.Количество <> 0
			|
			|СГРУППИРОВАТЬ ПО
			|	ТаблицаСерии.Номенклатура,
			|	ТаблицаСерии.Характеристика,
			|	ТаблицаСерии.Серия,
			|	ТаблицаСерии.НоменклатураОприходование,
			|	ТаблицаСерии.ХарактеристикаОприходование,
			|	ТаблицаТовары.Порча,
			|	ТаблицаСерии.Количество,
			|	ТаблицаСерии.Ссылка.Склад,
			|	ТаблицаСерии.Ссылка,
			|	ТаблицаСерии.Количество
			|
			|ИМЕЮЩИЕ
			|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В (4, 6, 8, 10)";
			
		Иначе
			
			Запрос.Текст = "
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ВозвратТоваровПоставщикуТовары.Номенклатура,
			|	ВозвратТоваровПоставщикуТовары.Характеристика,
			|	ВозвратТоваровПоставщикуТовары.Серия,
			|	ВозвратТоваровПоставщикуТовары.Назначение,
			|	ВозвратТоваровПоставщикуТовары.Упаковка,
			|	ВозвратТоваровПоставщикуТовары.КоличествоУпаковок,
			|	ВозвратТоваровПоставщикуТовары.Количество,
			|	ВозвратТоваровПоставщикуТовары.Цена КАК Цена,
			|	ВозвратТоваровПоставщикуТовары.Сумма,
			|	ВозвратТоваровПоставщикуТовары.СтавкаНДС,
			|	ВозвратТоваровПоставщикуТовары.Ссылка.Склад,
			|	ВозвратТоваровПоставщикуТовары.СуммаНДС,
			|	ВозвратТоваровПоставщикуТовары.СуммаСНДС,
			|	ВозвратТоваровПоставщикуТовары.СтатусУказанияСерий,
			|	ВозвратТоваровПоставщикуТовары.Ссылка КАК Реализация,
			|	ЗНАЧЕНИЕ(Документ.ЗаказКлиента.ПустаяСсылка) КАК ЗаказКлиента,
			|	ИСТИНА КАК ЗаполненоПоРеализации,
			|	ВозвратТоваровПоставщикуТовары.КоличествоУпаковок КАК КоличествоУпаковокПоДокументу,
			|	ВозвратТоваровПоставщикуТовары.Количество КАК КоличествоПоДокументу,
			|	ВозвратТоваровПоставщикуТовары.Сумма КАК СуммаПоДокументу,
			|	ВозвратТоваровПоставщикуТовары.СуммаНДС КАК СуммаНДСПоДокументу,
			|	ВозвратТоваровПоставщикуТовары.СуммаСНДС КАК СуммаСНДСПоДокументу,
			|	ВозвратТоваровПоставщикуТовары.ДокументПоступления
			|ИЗ
			|	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
			|ГДЕ
			|	ВозвратТоваровПоставщикуТовары.Ссылка В(&ДокументыОснования)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ВозвратТоваровПоставщикуСерии.Серия          КАК Серия,
			|	ВозвратТоваровПоставщикуСерии.Количество     КАК Количество,
			|	ВозвратТоваровПоставщикуСерии.Количество     КАК КоличествоПоДокументу,
			|	ВозвратТоваровПоставщикуСерии.Номенклатура   КАК Номенклатура,
			|	ВозвратТоваровПоставщикуСерии.Характеристика КАК Характеристика,
			|	ВозвратТоваровПоставщикуСерии.Назначение     КАК Назначение,
			|	ВозвратТоваровПоставщикуСерии.Ссылка.Склад   КАК Склад,
			|	ВозвратТоваровПоставщикуСерии.Ссылка         КАК Реализация,
			|	Истина                                       КАК ЗаполненоПоРеализации
			|ИЗ
			|	Документ.ВозвратТоваровПоставщику.Серии КАК ВозвратТоваровПоставщикуСерии
			|ГДЕ
			|	ВозвратТоваровПоставщикуСерии.Ссылка В(&ДокументыОснования)
			|";
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ДокументыОснования", Форма.ДокументыОснования.Выгрузить().ВыгрузитьКолонку("Реализация"));
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		Если РезультатЗапроса[0].Пустой() Тогда
			Форма.Объект.Товары.Очистить();
			Форма.Объект.Серии.Очистить();
		Иначе
			Форма.Объект.Товары.Загрузить(РезультатЗапроса[0].Выгрузить());
			Форма.Объект.Серии.Загрузить(РезультатЗапроса[1].Выгрузить());
		КонецЕсли;
		
	КонецЕсли;
	
	Форма.Модифицированность = Истина;
	ЗаполнитьСлужебныеРеквизитыПоНоменклатуре(Форма.Объект);
	ФормированиеНадписиДокументыОснование(Форма);
	
	Если РасхожденияКлиентСервер.ЭтоАктОРасхожденияхПослеОтгрузки(Форма.Объект.ТипОснованияАктаОРасхождении) Тогда
		РасхожденияСервер.ЗаполнитьЗависимыеРеквизитыТоваровРасхожденияПослеОтгрузки(Форма.Объект);
	Иначе
		РасхожденияСервер.ЗаполнитьЗависимыеРеквизитыТоваровРасхожденияПослеПриемки(Форма.Объект);
	КонецЕсли;
	РасхожденияКлиентСервер.РассчитатьИтоговыеПоказателиФормы(Форма);
	
	Если ВызыватьУправлениеДоступностью Тогда
		РасхожденияКлиентСервер.УправлениеДоступностью(Форма);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСлужебныеРеквизитыПоНоменклатуре(Объект) Экспорт
	
	ПараметрыЗаполненияРеквизитов = Новый Структура;
	ПараметрыЗаполненияРеквизитов.Вставить("ЗаполнитьПризнакХарактеристикиИспользуются",
	                                       Новый Структура("Номенклатура", "ХарактеристикиИспользуются"));
	ПараметрыЗаполненияРеквизитов.Вставить("ЗаполнитьПризнакТипНоменклатуры",
	                                       Новый Структура("Номенклатура", "ТипНоменклатуры"));
	ПараметрыЗаполненияРеквизитов.Вставить("ЗаполнитьПризнакАртикул",
	                                       Новый Структура("Номенклатура", "Артикул"));
	
	Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.АктОРасхожденияхПослеПриемки") 
		И Объект.ТипОснованияАктаОРасхождении = Перечисления.ТипыОснованияАктаОРасхождении.ПоступлениеТоваровУслуг Тогда
		
		ПараметрыЗаполненияРеквизитов.Вставить("ЗаполнитьПризнакВедетсяУчетПоГТД",
		                                       Новый Структура("Номенклатура", "ВедетсяУчетПоГТД"));
		
	КонецЕсли;
	
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(Объект.Товары,ПараметрыЗаполненияРеквизитов);
	
КонецПроцедуры

Процедура ПолучитьЗагруженныеТоварыИзХранилища(ТаблицаТовары, ДокументыОснования ,АдресТоваровВХранилище) Экспорт

	СтруктураДействий = РасхожденияКлиентСервер.СтруктураДействийПриИзмененииКоличестваУпаковок();

	КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();

	ТоварыИзХранилища = ПолучитьИзВременногоХранилища(АдресТоваровВХранилище);

	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеИзВнешнегоИсточника.Номенклатура,
	|	ДанныеИзВнешнегоИсточника.Характеристика,
	|	ДанныеИзВнешнегоИсточника.Упаковка,
	|	ДанныеИзВнешнегоИсточника.КоличествоУпаковок,
	|	ЕстьNull(ДанныеИзВнешнегоИсточника.Цена, 0) КАК Цена,
	|	ДанныеИзВнешнегоИсточника.СтавкаНДС,
	|	ДанныеИзВнешнегоИсточника.ХарактеристикиИспользуются
	|ПОМЕСТИТЬ ДанныеВнешнегоИсточника
	|ИЗ
	|	&ДанныеИзВнешнегоИсточника КАК ДанныеИзВнешнегоИсточника
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Номенклатура,
	|	ДанныеДокумента.Характеристика,
	|	ДанныеДокумента.Упаковка,
	|	ДанныеДокумента.КоличествоУпаковок,
	|	ЕстьNull(ДанныеДокумента.Цена, 0) КАК Цена,
	|	ДанныеДокумента.НомерСтроки
	|ПОМЕСТИТЬ ДанныеДокумента
	|ИЗ
	|	&ДанныеДокумента КАК ДанныеДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеВнешнегоИсточника.Номенклатура,
	|	ДанныеВнешнегоИсточника.Характеристика,
	|	ДанныеВнешнегоИсточника.Упаковка,
	|	ДанныеВнешнегоИсточника.КоличествоУпаковок,
	|	ДанныеВнешнегоИсточника.Цена,
	|	ЕСТЬNULL(ДанныеДокумента.НомерСтроки, 0) КАК НомерСтроки,
	|	ДанныеВнешнегоИсточника.СтавкаНДС,
	|	ДанныеВнешнегоИсточника.ХарактеристикиИспользуются
	|ИЗ
	|	ДанныеВнешнегоИсточника КАК ДанныеВнешнегоИсточника
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеДокумента КАК ДанныеДокумента
	|		ПО ДанныеВнешнегоИсточника.Номенклатура = ДанныеДокумента.Номенклатура
	|			И ДанныеВнешнегоИсточника.Характеристика = ДанныеДокумента.Характеристика
	|			И ДанныеВнешнегоИсточника.Упаковка = ДанныеДокумента.Упаковка
	|			И ДанныеВнешнегоИсточника.Цена = ДанныеДокумента.Цена
	|ГДЕ
	|	ДанныеВнешнегоИсточника.КоличествоУпаковок <> ЕСТЬNULL(ДанныеДокумента.КоличествоУпаковок, 0)";
	
	ДокументТовары = ТаблицаТовары.Выгрузить();
	
	Если ДокументТовары.Колонки.Найти("Цена") = Неопределено Тогда
		ДокументТовары.Колонки.Добавить("Цена", Новый ОписаниеТипов("Число"));
	КонецЕсли;

	Запрос.УстановитьПараметр("ДанныеИзВнешнегоИсточника", ТоварыИзХранилища);
	Запрос.УстановитьПараметр("ДанныеДокумента", ДокументТовары);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		Если Выборка.НомерСтроки > 0 Тогда
			
			СтрокаТЧТовары = ТаблицаТовары[Выборка.НомерСтроки - 1];
			СтрокаТЧТовары.КоличествоУпаковок = Выборка.КоличествоУпаковок;
			
		Иначе
			
			СтрокаТЧТовары = ТаблицаТовары.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТЧТовары, Выборка);
			РасхожденияКлиентСервер.ЗаполнитьДокументОснованиеВСтроке(СтрокаТЧТовары, ДокументыОснования);
		КонецЕсли;
		
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(СтрокаТЧТовары, СтруктураДействий, КэшированныеЗначения);
	
	КонецЦикла;

КонецПроцедуры

Процедура ОбработкаВыбораПодборНаСервере(Форма, КэшированныеЗначения, ВыбранноеЗначение, ЭтоАктОРасхожденияПослеОтгрузки) Экспорт
	
	ТаблицаТоваров = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресТоваровВХранилище);
	
	КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
	
	СписокСвойств = "Номенклатура, Характеристика, Упаковка, Цена, КоличествоУпаковок";
	
	Если РасхожденияКлиентСервер.ТипОснованияРеализацияТоваровУслуг(Форма.Объект.ТипОснованияАктаОРасхождении) Тогда
		СписокСвойств = СписокСвойств + ", ВидЦены";
	ИначеЕсли Форма.Объект.ТипОснованияАктаОРасхождении = ПредопределенноеЗначение("Перечисление.ТипыОснованияАктаОРасхождении.ПоступлениеТоваровУслуг") Тогда
		СписокСвойств = СписокСвойств + ", НоменклатураПоставщика";
	КонецЕсли;
	
	Для каждого СтрокаТовара Из ТаблицаТоваров Цикл
		
		ТекущаяСтрока = Форма.Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, СтрокаТовара, СписокСвойств);
		СамообслуживаниеКлиентСервер.ЗаполнитьДокументОснованиеВСтроке(ТекущаяСтрока, Форма.ДокументыОснования, ЭтоАктОРасхожденияПослеОтгрузки);
		Если Форма.Объект.ТипОснованияАктаОРасхождении = ПредопределенноеЗначение("Перечисление.ТипыОснованияАктаОРасхождении.ПоступлениеТоваровУслуг") Тогда
			РасхожденияКлиентСервер.ЗаполнитьСделкуВСтроке(ТекущаяСтрока, Форма.ЗаказыСделки);
		КонецЕсли;
		
		СтруктураДействий = Новый Структура;
		СтруктураДействий.Вставить("ЗаполнитьПризнакТипНоменклатуры", Новый Структура("Номенклатура", "ТипНоменклатуры"));
 		СтруктураДействий.Вставить("ЗаполнитьСтавкуНДС", Форма.НалогообложениеНДСПоУмолчанию);
		СамообслуживаниеКлиентСервер.ДобавитьВСтруктуруДействияПриИзмененииКоличестваУпаковок(СтруктураДействий, Форма.Объект);
		
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
	
	КонецЦикла;
	
	РасхожденияСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуре(Форма.Объект);
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(Форма.Объект, Форма.ПараметрыУказанияСерий);
	РасхожденияКлиентСервер.РассчитатьИтоговыеПоказателиФормы(Форма);

КонецПроцедуры

Функция МассивДопустимыхСтатусовАктовОРасхожденияхПриСозданииНаОсновании() Экспорт

	МассивДопустимыхСтатусов = Новый Массив;
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыАктаОРасхождениях.КВыполнению);
	МассивДопустимыхСтатусов.Добавить(Перечисления.СтатусыАктаОРасхождениях.Отработано);
	
	Возврат МассивДопустимыхСтатусов;

КонецФункции

Функция СтрокаАктаСодержитДействияТребующиеОбработки(ТекСтрока, ТипАкта)
	
	Если ТипАкта = Тип("ДокументСсылка.АктОРасхожденияхПослеОтгрузки") Или ТипАкта = Тип("ДокументСсылка.АктОРасхожденияхПослеПеремещения") Тогда
		
		Если ТекСтрока.Действие = ПредопределенноеЗначение("Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ПустаяСсылка") 
				Или ТекСтрока.Действие = ПредопределенноеЗначение("Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ВозвратПерепоставленного") 
				Или ТекСтрока.Действие = ПредопределенноеЗначение("Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ДопоставкаНеТребуется")
				Или ТекСтрока.Действие = ПредопределенноеЗначение("Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ТребуетсяДопоставка")
				Или ТекСтрока.Действие = ПредопределенноеЗначение("Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ПокупкаПерепоставленного") Тогда
				
				Возврат Истина;
				
		Иначе
			
			Возврат Ложь;
			
		КонецЕсли;
			
	Иначе
			
		Если ТекСтрока.Действие <> ПредопределенноеЗначение("Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ВернутьПерепоставленноеБезОформления")
			И ТекСтрока.Действие <> ПредопределенноеЗначение("Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОжидатьДопоставкуБезОформления") Тогда
			
			Возврат Истина;
			
		Иначе
			
			Возврат Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции

// Проверяет доступно ли изменение основания акта
//
// Параметры:
//  Товары              - табличная часть акта о расхождениях.
//  НадписьРасхождения  - элементы формы, в котором необходимо отобразить информационную надпись
//
Процедура СформироватьНадписьСпособаОтраженияРасхождений(Товары, НадписьРасхождения, НадписьОформитьДокументы, ТипАкта) Экспорт
	
	КоличествоСтрокРасхождений = 0;
	
	Для Каждого ТекСтрока Из Товары Цикл
		
		Если ТекСтрока.КоличествоУпаковокРасхождения <> 0 И СтрокаАктаСодержитДействияТребующиеОбработки(ТекСтрока, ТипАкта) Тогда
			
			КоличествоСтрокРасхождений = КоличествоСтрокРасхождений + 1;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если КоличествоСтрокРасхождений > 0 Тогда
		
		ТекстСтрока = ОбщегоНазначенияУТКлиентСервер.СклонениеСлова(
		КоличествоСтрокРасхождений,
		НСтр("ru='строке';uk='рядку'"), НСтр("ru='строках';uk='рядках'"), НСтр("ru='строках';uk='рядках'"), НСтр("ru='ж';uk='ж'"));

		ТекстРасхождений = НСтр("ru='Оформление расхождений в %КоличествоСтрокРасхождений% акта';uk='Оформлення розбіжностей у %КоличествоСтрокРасхождений% акта'");
		ТекстРасхождений = СтрЗаменить(ТекстРасхождений, "%КоличествоСтрокРасхождений%", Строка(КоличествоСтрокРасхождений)  + " " + ТекстСтрока);
		
		НадписьОформитьДокументы.Доступность = Истина;
		
	Иначе
		
		ТекстРасхождений = НСтр("ru='В акте отсутствуют строки с расхождениями, по которым требуется оформление документов';uk='В акті відсутні рядки з розбіжностями, за якими необхідне оформлення документів'");
		НадписьОформитьДокументы.Доступность = Ложь;
		
	КонецЕсли;
	
	НадписьРасхождения.Заголовок = ТекстРасхождений;
	
КонецПроцедуры

Процедура АктОРасхожденияхУстановитьУсловноеОформлениеФормыДокумента(Форма) Экспорт
	
	УсловноеОформление = Форма.УсловноеОформление;
	ЭлементыФормы      = Форма.Элементы;
	
	// Упаковка
	
	НоменклатураСервер.УстановитьУсловноеОформлениеЕдиницИзмерения(Форма);
	
	// Использование характеристик
	
	НоменклатураСервер.УстановитьУсловноеОформлениеХарактеристикНоменклатуры(Форма);
	
	// ТоварыДействие нет расхождений
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы.ТоварыДействие.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.ЕстьРасхождения");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаОтмененнойСтрокиДокумента);
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru='<не требуется>';uk='<не потрібно>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

	// ТоварыДействие документ не согласован
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы.ТоварыДействие.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Статус");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.СтатусыАктаОРасхождениях.НеСогласовано;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
	// Тип номенклатуры не тара и не товар
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы.ТоварыСклад.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.ТипНоменклатуры");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке;
	СписокЗначений = Новый СписокЗначений;
	СписокЗначений.Добавить(Перечисления.ТипыНоменклатуры.Товар);
	СписокЗначений.Добавить(Перечисления.ТипыНоменклатуры.МногооборотнаяТара);
	ОтборЭлемента.ПравоеЗначение = СписокЗначений;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.НезаполненноеПолеТаблицы);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru='<для товаров>';uk='<для товарів>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
	// Тип номенклатуры тара или товара

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы.ТоварыСклад.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.ТипНоменклатуры");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	СписокЗначений = Новый СписокЗначений;
	СписокЗначений.Добавить(Перечисления.ТипыНоменклатуры.Товар);
	СписокЗначений.Добавить(Перечисления.ТипыНоменклатуры.МногооборотнаяТара);
	ОтборЭлемента.ПравоеЗначение = СписокЗначений;

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.Склад");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
	// Склад отметка незаполненного

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы.ТоварыСклад.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Объект.Статус");
	ОтборЭлемента.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.СтатусыАктаОРасхождениях.НеСогласовано;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
	// Сумма

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы.ТоварыСумма.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.Сумма");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;

	ГруппаОтбора1 = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора1.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;

	ОтборЭлемента = ГруппаОтбора1.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.ТипНоменклатуры");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	СписокЗначений = Новый СписокЗначений;
	СписокЗначений.Добавить(Перечисления.ТипыНоменклатуры.Товар);
	СписокЗначений.Добавить(Перечисления.ТипыНоменклатуры.Работа);
	ОтборЭлемента.ПравоеЗначение = СписокЗначений;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
	//Расхождение количество

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы.ТоварыКоличествоРасхождения.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.КоличествоУпаковокРасхождения");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Кирпичный);
	
	//Недоступность документов оснований

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы.ДокументыОснованиеПредставление.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КоличествоДокументовОснований");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ЦветТекстаОтмененнойСтрокиДокумента);
	
	//Расхождение сумма
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы.ТоварыСуммаРасхождения.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.СуммаРасхождения");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Кирпичный);
	
	//Расхождение сумма НДС

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы.ТоварыСуммаНДСРасхождения.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.СуммаНДСРасхождения");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Кирпичный);
	
	//Расхождение сумма с НДС

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы.ТоварыСуммаСНДСРасхождения.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Товары.СуммаСНДСРасхождения");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = 0;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Кирпичный);
	
КонецПроцедуры

Процедура ЗаполнитьДоговорПоУмолчанию(Объект, ХозяйственнаяОперацияДоговора) Экспорт
	
	Если РасхожденияКлиентСервер.ТипОснованияРеализацияТоваровУслуг(Объект.ТипОснованияАктаОРасхождении) Тогда
		Объект.Договор = ПродажиСервер.ПолучитьДоговорПоУмолчанию(Объект, Объект.ХозяйственнаяОперация, Объект.Валюта);
	ИначеЕсли Объект.ТипОснованияАктаОРасхождении = Перечисления.ТипыОснованияАктаОРасхождении.ВозвратТоваровОтКлиента Тогда 
		Объект.Договор = ПродажиСервер.ПолучитьДоговорПоУмолчанию(Объект, ХозяйственнаяОперацияДоговора, Объект.Валюта);
	ИначеЕсли  Объект.ТипОснованияАктаОРасхождении = Перечисления.ТипыОснованияАктаОРасхождении.ПоступлениеТоваровУслуг Тогда
		Объект.Договор = ЗакупкиСервер.ПолучитьДоговорПоУмолчанию(Объект, Объект.ХозяйственнаяОперация, Объект.Валюта);
	Иначе
		Объект.Договор = ЗакупкиСервер.ПолучитьДоговорПоУмолчанию(Объект, ХозяйственнаяОперацияДоговора, Объект.Валюта);
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьТаблицуДокументовОснований(Форма, МассивДокументовОснований = Неопределено) Экспорт
	
	ТипЗнчАктаОРасхождениях = ТипЗнч(Форма.Объект.Ссылка);
	ИменаРеквизитов = РасхожденияКлиентСервер.ИменаРеквизитовВЗависимостиОтТипаАкта(ТипЗнчАктаОРасхождениях = Тип("ДокументСсылка.АктОРасхожденияхПослеОтгрузки"));
	
	Форма.ДокументыОснования.Очистить();
	Форма.Элементы.ТоварыДокументОснование.СписокВыбора.Очистить();
	
	Если МассивДокументовОснований = Неопределено Тогда
		МассивДокументовОснований = Форма.Объект.Товары.Выгрузить(, ИменаРеквизитов.Основание).ВыгрузитьКолонку(ИменаРеквизитов.Основание);
	КонецЕсли;

	Если МассивДокументовОснований.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Если РасхожденияКлиентСервер.ТипОснованияРеализацияТоваровУслуг(Форма.Объект.ТипОснованияАктаОРасхождении) Тогда
		
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	РеализацияТоваровУслуг.Ссылка КАК Реализация,
		|	РеализацияТоваровУслуг.Дата КАК Дата,
		|	ЕСТЬNULL(РеализацияТоваровУслугТовары.ЗаказКлиента, НЕОПРЕДЕЛЕНО) КАК ЗаказКлиента,
		|	ЕСТЬNULL(РеализацияТоваровУслугТовары.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) КАК Склад,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НаправленияДеятельности.ВариантОбособления, ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленияПоНаправлениюДеятельности.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленияПоНаправлениюДеятельности.ПоНаправлениюВЦелом)
		|			ТОГДА НаправленияДеятельности.Назначение
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|	КОНЕЦ КАК Назначение
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
		|		ПО (РеализацияТоваровУслугТовары.Ссылка = РеализацияТоваровУслуг.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НаправленияДеятельности КАК НаправленияДеятельности
		|		ПО РеализацияТоваровУслуг.НаправлениеДеятельности = НаправленияДеятельности.Ссылка
		|ГДЕ
		|	РеализацияТоваровУслуг.Ссылка В(&МассивОснований)
		|ИТОГИ ПО
		|	Реализация";
		
	ИначеЕсли Форма.Объект.ТипОснованияАктаОРасхождении = Перечисления.ТипыОснованияАктаОРасхождении.ПоступлениеТоваровУслуг Тогда
		
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ПоступлениеТоваровУслуг.Ссылка КАК Реализация,
		|	ПоступлениеТоваровУслуг.Дата КАК Дата,
		|	ЕСТЬNULL(ПоступлениеТоваровУслугТовары.ЗаказПоставщику, НЕОПРЕДЕЛЕНО) КАК ЗаказКлиента,
		|	ЕСТЬNULL(ПоступлениеТоваровУслугТовары.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) КАК Склад,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НаправленияДеятельности.ВариантОбособления, ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленияПоНаправлениюДеятельности.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленияПоНаправлениюДеятельности.ПоНаправлениюВЦелом)
		|			ТОГДА НаправленияДеятельности.Назначение
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|	КОНЕЦ КАК Назначение
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
		|		ПО (ПоступлениеТоваровУслуг.Ссылка = ПоступлениеТоваровУслугТовары.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НаправленияДеятельности КАК НаправленияДеятельности
		|		ПО ПоступлениеТоваровУслуг.НаправлениеДеятельности = НаправленияДеятельности.Ссылка
		|ГДЕ
		|	ПоступлениеТоваровУслуг.Ссылка В(&МассивОснований)
		|ИТОГИ ПО
		|	Реализация";
		
	ИначеЕсли Форма.Объект.ТипОснованияАктаОРасхождении = Перечисления.ТипыОснованияАктаОРасхождении.ВозвратПоставщику Тогда
		
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	ВозвратТоваровПоставщику.Ссылка КАК Реализация,
		|	ВозвратТоваровПоставщику.Дата КАК Дата,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказКлиента,
		|	ВозвратТоваровПоставщику.Склад,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НаправленияДеятельности.ВариантОбособления, ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленияПоНаправлениюДеятельности.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленияПоНаправлениюДеятельности.ПоНаправлениюВЦелом)
		|			ТОГДА НаправленияДеятельности.Назначение
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|	КОНЕЦ КАК Назначение
		|ИЗ
		|	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НаправленияДеятельности КАК НаправленияДеятельности
		|		ПО ВозвратТоваровПоставщику.НаправлениеДеятельности = НаправленияДеятельности.Ссылка
		|ГДЕ
		|	ВозвратТоваровПоставщику.Ссылка В (&МассивОснований)
		|ИТОГИ ПО
		|	Реализация";
		
	Иначе
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
		|	ВозвратТоваровОтКлиента.Ссылка КАК Реализация,
		|	ВозвратТоваровОтКлиента.Дата КАК Дата,
		|	НЕОПРЕДЕЛЕНО КАК ЗаказКлиента,
		|	ВозвратТоваровОтКлиента.Склад,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НаправленияДеятельности.ВариантОбособления, ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленияПоНаправлениюДеятельности.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленияПоНаправлениюДеятельности.ПоНаправлениюВЦелом)
		|			ТОГДА НаправленияДеятельности.Назначение
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|	КОНЕЦ КАК Назначение
		|ИЗ
		|	Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НаправленияДеятельности КАК НаправленияДеятельности
		|		ПО ВозвратТоваровОтКлиента.НаправлениеДеятельности = НаправленияДеятельности.Ссылка
		|ГДЕ
		|	ВозвратТоваровОтКлиента.Ссылка В (&МассивОснований)
		|ИТОГИ ПО
		|	Реализация";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МассивОснований", МассивДокументовОснований);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаРеализации = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаРеализации.Следующий() Цикл
		НоваяСтрока = Форма.ДокументыОснования.Добавить();
		НоваяСтрока.Реализация = ВыборкаРеализации.Реализация;
		Форма.Элементы.ТоварыДокументОснование.СписокВыбора.Добавить(ВыборкаРеализации.Реализация);
		ВыборкаЗаказы = ВыборкаРеализации.Выбрать();
		Пока ВыборкаЗаказы.Следующий() Цикл
			Если ЗначениеЗаполнено(ВыборкаЗаказы.ЗаказКлиента) И НоваяСтрока.ЗаказыОснования.НайтиПоЗначению(ВыборкаЗаказы.ЗаказКлиента) = Неопределено Тогда
				НоваяСтрока.ЗаказыОснования.Добавить(ВыборкаЗаказы.ЗаказКлиента);
			КонецЕсли;
			Если ЗначениеЗаполнено(ВыборкаЗаказы.Склад) И НоваяСтрока.СкладыОснования.НайтиПоЗначению(ВыборкаЗаказы.Склад) = Неопределено Тогда
				НоваяСтрока.СкладыОснования.Добавить(ВыборкаЗаказы.Склад);
			КонецЕсли;
			Если Форма.Объект.ТипОснованияАктаОРасхождении = Перечисления.ТипыОснованияАктаОРасхождении.ПоступлениеТоваровУслуг
				Или Форма.Объект.ТипОснованияАктаОРасхождении = Перечисления.ТипыОснованияАктаОРасхождении.ВозвратТоваровОтКлиента Тогда
				НоваяСтрока.ДатаДокументаОснования = ВыборкаЗаказы.Дата;
			КонецЕсли;
			
			НоваяСтрока.Назначение = ВыборкаЗаказы.Назначение;
			
		КонецЦикла;
	КонецЦикла;
	
	Для Каждого СтрокаДокументыОснования Из Форма.ДокументыОснования Цикл
		Если СтрокаДокументыОснования.ЗаказыОснования.Количество() > 0 Тогда
			НайденныеСтроки = Форма.Объект.Товары.НайтиСтроки(Новый Структура(ИменаРеквизитов.Основание, СтрокаДокументыОснования.Реализация));
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
				НайденнаяСтрока[ИменаРеквизитов.ОснованиеПоЗаказам] = Истина;
			КонецЦикла
		КонецЕсли;
	КонецЦикла
	
КонецПроцедуры

Процедура УправлениеВидимостьюНДС(Форма) Экспорт
	
	Ценообразование.УстановитьУсловноеОформлениеСуммНДС(Форма);
	Ценообразование.УстановитьУсловноеОформлениеЦенаВключаетНДС(Форма);

КонецПроцедуры

Процедура УстановитьДоступностьДоговора(Форма) Экспорт

	Если РасхожденияКлиентСервер.ТипОснованияРеализацияТоваровУслуг(Форма.Объект.ТипОснованияАктаОРасхождении)
		Или Форма.Объект.ТипОснованияАктаОРасхождении = Перечисления.ТипыОснованияАктаОРасхождении.ВозвратТоваровОтКлиента Тогда
		ПродажиСервер.УстановитьДоступностьДоговора(Форма.Объект, Форма.Элементы.Договор.Доступность, Форма.Элементы.Договор.Видимость);
	Иначе
		ЗакупкиСервер.УстановитьДоступностьДоговора(Форма.Объект, Форма.Элементы.Договор.Доступность, Форма.Элементы.Договор.Видимость, Форма.Объект.Договор);
	КонецЕсли;

КонецПроцедуры

Процедура УстановитьЗначенияКешируемыхРеквизитовФормыАкта(Форма) Экспорт
	
	Форма.ИспользоватьСоглашенияСКлиентами    = ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами");
	Форма.ИспользоватьДоговорыСКлиентами      = ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыСКлиентами");
	Форма.ИспользоватьСоглашенияСПоставщиками = ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСПоставщиками");
	Форма.ИспользоватьДоговорыСПоставщиками   = ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыСПоставщиками");
	Форма.ПравоНаРедактирование               = ПравоДоступа("Изменение", Форма.Объект.Ссылка.Метаданные());
	
КонецПроцедуры

Процедура ФормированиеНадписиДокументыОснование(Форма, ТребуетсяОбновлениеСпискаОснований = Истина) Экспорт

	Если Форма.Объект.Товары.Количество() = 0 Тогда
		
		Форма.КоличествоДокументовОснований = 0;
		Форма.ДокументыОснованиеПредставление = НСтр("ru='Не выбрано';uk='Не вибрано'");
		Форма.ДокументыОснования.Очистить();
		Форма.Элементы.ДокументыОснованиеПредставление.Ширина = 8;
		Форма.Элементы.ТоварыДокументОснование.Видимость = Ложь;
		Форма.Элементы.ДокументыОснованиеПредставление.Гиперссылка = Ложь;
		
	Иначе
		
		Если ТребуетсяОбновлениеСпискаОснований Тогда
			
			СформироватьТаблицуДокументовОснований(Форма);
			
		КонецЕсли;
		
		Форма.КоличествоДокументовОснований = Форма.ДокументыОснования.Количество();
		Если Форма.КоличествоДокументовОснований = 0 Тогда
			
			Форма.ДокументыОснованиеПредставление = НСтр("ru='Не выбрано';uk='Не вибрано'");
			Форма.Элементы.ДокументыОснованиеПредставление.Ширина = 8;
			Форма.Элементы.ДокументыОснованиеПредставление.Гиперссылка = Ложь;
			
		ИначеЕсли Форма.КоличествоДокументовОснований = 1 Тогда
			
			Форма.ДокументыОснованиеПредставление = Форма.ДокументыОснования[0].Реализация;
			Форма.Элементы.ДокументыОснованиеПредставление.Ширина = 42;
			Форма.Элементы.ДокументыОснованиеПредставление.Гиперссылка = Истина;
			
		Иначе
			
			ТекстПредставление = НСтр("ru='Всего';uk='Всього'");
			Если РасхожденияКлиентСервер.ТипОснованияРеализацияТоваровУслуг(Форма.Объект.ТипОснованияАктаОРасхождении) Тогда
				
				ТекстПредставление = ТекстПредставление + " " + НСтр("ru='реализаций';uk='реалізацій'");
				
			ИначеЕсли Форма.Объект.ТипОснованияАктаОРасхождении = Перечисления.ТипыОснованияАктаОРасхождении.ВозвратПоставщику 
				ИЛИ Форма.Объект.ТипОснованияАктаОРасхождении = Перечисления.ТипыОснованияАктаОРасхождении.ВозвратТоваровОтКлиента  Тогда
				
				ТекстПредставление = ТекстПредставление + " " + НСтр("ru='возвратов';uk='повернень'");
				
			ИначеЕсли Форма.Объект.ТипОснованияАктаОРасхождении = Перечисления.ТипыОснованияАктаОРасхождении.ПоступлениеТоваровУслуг Тогда 
				
				ТекстПредставление = ТекстПредставление + " " + НСтр("ru='поступлений';uk='надходжень'");
				
			КонецЕсли;
			Форма.ДокументыОснованиеПредставление = ТекстПредставление + ": " + Строка(Форма.КоличествоДокументовОснований);
			Форма.Элементы.ДокументыОснованиеПредставление.Ширина = 11 + Форма.КоличествоДокументовОснований;
			Форма.Элементы.ДокументыОснованиеПредставление.Гиперссылка = Истина;
		КонецЕсли;
		
		Форма.Элементы.ТоварыДокументОснование.Видимость = Форма.ДокументыОснования.Количество() > 1;
		
	КонецЕсли;

КонецПроцедуры

Процедура УправлениеСтраницамиВыборДействия(Форма, Параметры) Экспорт

	Если Не Параметры.ГрупповоеИзменение Тогда
		Форма.Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	Иначе
		РеквизитыФормы = Форма.ПолучитьРеквизиты();
		Для Каждого РеквизитФормы Из РеквизитыФормы Цикл
			Если РеквизитФормы.Имя = "ДействиеИзлишки"
				Или РеквизитФормы.Имя = "ДействиеНедостачи" Тогда
				РеквизитФормы.СохраняемыеДанные = Ложь;
			КонецЕсли;
		КонецЦикла;
		
		Форма.Элементы.Недостачи.Видимость = Параметры.ЕстьНедостачи;
		Форма.Элементы.Излишки.Видимость   = Параметры.ЕстьИзлишки;
		
		Если Не Параметры.ЕстьНедостачи Или Не Параметры.ЕстьИзлишки Тогда
			Форма.Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		КонецЕсли;
		
		Форма.ДействиеИзлишки   = Параметры.ДействиеИзлишки;
		Форма.ДействиеНедостачи = Параметры.ДействиеНедостачи;
		
	КонецЕсли;

КонецПроцедуры

Функция КлючевыеПоляВЗависимостиОтДействия(Действие, КлючевыеПоля) Экспорт
	
	КлючевыеПоляССерией = КлючевыеПоля;
	КлючевыеПоляБезСерии = СтрЗаменить(КлючевыеПоля, ", Серия", "");
	
	КлючевыеПоляДляПоискаСуществующихСтрок = "";
	КлючевыеПоляДляПоискаНовыхСтрок = "";
	КлючевыеПоляДляОтнесенияНовыхСтрок = "";
	
	Если Действие = "А0" Или Действие = "А3" Тогда
		КлючевыеПоляДляПоискаСуществующихСтрок = КлючевыеПоляБезСерии;
		КлючевыеПоляДляПоискаНовыхСтрок = КлючевыеПоляБезСерии;
		КлючевыеПоляДляОтнесенияНовыхСтрок = КлючевыеПоляБезСерии;
	ИначеЕсли Действие = "А1" Тогда
		КлючевыеПоляДляПоискаСуществующихСтрок = КлючевыеПоляССерией;
		КлючевыеПоляДляПоискаНовыхСтрок = КлючевыеПоляБезСерии;
		КлючевыеПоляДляОтнесенияНовыхСтрок = КлючевыеПоляБезСерии;
	ИначеЕсли Действие = "А2" Тогда
		КлючевыеПоляДляПоискаСуществующихСтрок = КлючевыеПоляССерией;
		КлючевыеПоляДляПоискаНовыхСтрок = КлючевыеПоляССерией;
		КлючевыеПоляДляОтнесенияНовыхСтрок = КлючевыеПоляССерией;
	ИначеЕсли Действие = "А4" Тогда
		КлючевыеПоляДляПоискаСуществующихСтрок = КлючевыеПоляССерией;
		КлючевыеПоляДляПоискаНовыхСтрок = КлючевыеПоляБезСерии;
		КлючевыеПоляДляОтнесенияНовыхСтрок = КлючевыеПоляССерией;
	КонецЕсли;
	
	СтруктураВозврата = Новый Структура();
	СтруктураВозврата.Вставить("КлючевыеПоляДляПоискаСуществующихСтрок", КлючевыеПоляДляПоискаСуществующихСтрок);
	СтруктураВозврата.Вставить("КлючевыеПоляДляПоискаНовыхСтрок", КлючевыеПоляДляПоискаНовыхСтрок);
	СтруктураВозврата.Вставить("КлючевыеПоляДляОтнесенияНовыхСтрок", КлючевыеПоляДляОтнесенияНовыхСтрок);
	
	Возврат СтруктураВозврата;
	
КонецФункции

Процедура ОтнестиНовыеСтрокиНаСуществующие(ТаблицаСуществующихСтрок, ТаблицаНовыхСтрок, КлючевыеПоля) Экспорт
	
	Отбор = Новый Структура(КлючевыеПоля);
	Для Каждого Строка Из ТаблицаНовыхСтрок Цикл
		Если Строка.Количество > 0 Тогда
			ЗаполнитьЗначенияСвойств(Отбор, Строка);
			// Поиск существующих строк, аналитика которых полностью совпадает
			НайденныеСтроки = ТаблицаСуществующихСтрок.НайтиСтроки(Отбор);
			Если НайденныеСтроки.Количество() > 0 Тогда
				НайденнаяСтрока = НайденныеСтроки[0];
				НайденнаяСтрока.Количество = НайденнаяСтрока.Количество + Строка.Количество;
				Строка.Количество = 0;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ИзменениеОснованийАктаОРасхождениях

Процедура ИзменитьОснованиеАкта(АктОРасхождениях, Основание, ТаблицаИзменяемыхСтрок, ТаблицаИзменяемыхСерий)
	
	Попытка
		
		ЗаблокироватьДанныеДляРедактирования(Основание);
		
	Исключение
		
		ТекстОшибки = НСтр("ru='Не удалось заблокировать для изменения %Элемент%. %ОписаниеОшибки%';uk='Не вдалося заблокувати для зміни %Элемент%. %ОписаниеОшибки%'");
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Элемент%",        Основание);
		ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ОписаниеОшибки%", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ВызватьИсключение ТекстОшибки;
		
	КонецПопытки;
	
	ДокументОснование = Основание.ПолучитьОбъект();
	
	// Табличная часть "Товары"
	ИзменяемаяТЧТовары = ДокументОснование.Товары;
	СтруктураДействий = СтруктураДействийПоТЧОснованияАкта(Основание);
	ЕстьСуммаВзаиморасчетов = НЕ ДокументОснование.Метаданные().ТабличныеЧасти.Товары.Реквизиты.Найти("СуммаВзаиморасчетов") = Неопределено;
	
	Для Каждого СтрокаКИзменениюПоАкту Из ТаблицаИзменяемыхСтрок Цикл
		
		ПараметрыПоиска = ПараметрыПоискаПоДокументуОснованию(Основание, СтрокаКИзменениюПоАкту);
		
		НайденныеСтроки = ИзменяемаяТЧТовары.НайтиСтроки(ПараметрыПоиска);
		
		Если НайденныеСтроки <> Неопределено Тогда
			
			Если НайденныеСтроки.Количество() = 1 Тогда
				
				ИзменяемаяСтрока = НайденныеСтроки[0];
				КоличествоУпаковокДоИзменения = ИзменяемаяСтрока.КоличествоУпаковок;
				ИзменяемаяСтрока.КоличествоУпаковок = СтрокаКИзменениюПоАкту.КоличествоУпаковокПоАкту;
				
				Если ИзменяемаяСтрока.КоличествоУпаковок = 0 Тогда
					ИзменяемаяТЧТовары.Удалить(ИзменяемаяСтрока);
				Иначе
					Если ЕстьСуммаВзаиморасчетов И ИзменяемаяСтрока.СуммаВзаиморасчетов > 0 Тогда
						ИзменяемаяСтрока.СуммаВзаиморасчетов = ИзменяемаяСтрока.СуммаВзаиморасчетов / КоличествоУпаковокДоИзменения * ИзменяемаяСтрока.КоличествоУпаковок;
					КонецЕсли;
					ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ИзменяемаяСтрока, СтруктураДействий, Неопределено);
				КонецЕсли;
				
			ИначеЕсли НайденныеСтроки.Количество() = 0 Тогда
				
				ИзменяемаяСтрока = ИзменяемаяТЧТовары.Добавить();
				ЗаполнитьЗначенияСвойств(ИзменяемаяСтрока, СтрокаКИзменениюПоАкту);
				ИзменяемаяСтрока.КоличествоУпаковок = СтрокаКИзменениюПоАкту.КоличествоУпаковокПоАкту;
				ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ИзменяемаяСтрока, СтруктураДействий, Неопределено);
				
			ИначеЕсли НайденныеСтроки.Количество() > 1 Тогда
				
				КоличествоКИзменению = СтрокаКИзменениюПоАкту.КоличествоУпаковокПоАкту - СтрокаКИзменениюПоАкту.КоличествоУпаковокПоОснованиюАкт;
				Если КоличествоКИзменению < 0 Тогда
					
					КоличествоКИзменению = - КоличествоКИзменению;
					Для Каждого ИзменяемаяСтрока Из НайденныеСтроки Цикл
						Если КоличествоКИзменению <= 0 Тогда
							Прервать;
						КонецЕсли;
						
						Если КоличествоКИзменению >= ИзменяемаяСтрока.КоличествоУпаковок Тогда
							КоличествоКИзменению = КоличествоКИзменению -ИзменяемаяСтрока.КоличествоУпаковок; 
							ИзменяемаяТЧТовары.Удалить(ИзменяемаяСтрока);
						Иначе
							КоличествоУпаковокДоИзменения = ИзменяемаяСтрока.КоличествоУпаковок;
							ИзменяемаяСтрока.КоличествоУпаковок = ИзменяемаяСтрока.КоличествоУпаковок - КоличествоКИзменению;
							Если ЕстьСуммаВзаиморасчетов И ИзменяемаяСтрока.СуммаВзаиморасчетов > 0 Тогда
								ИзменяемаяСтрока.СуммаВзаиморасчетов = ИзменяемаяСтрока.СуммаВзаиморасчетов / КоличествоУпаковокДоИзменения * ИзменяемаяСтрока.КоличествоУпаковок;
							КонецЕсли;
							ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ИзменяемаяСтрока, СтруктураДействий, Неопределено);
							КоличествоКИзменению = 0;
						КонецЕсли;
						
					КонецЦикла;
					
				ИначеЕсли КоличествоКИзменению > 0 Тогда
					
					ИзменяемаяСтрока = НайденныеСтроки[0];
					ИзменяемаяСтрока.КоличествоУпаковок = ИзменяемаяСтрока.КоличествоУпаковок + КоличествоКИзменению;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Табличная часть "Серии"
	ИзменяемаяТЧСерии = ДокументОснование.Серии;

	Для Каждого СтрокаКИзменениюПоАкту Из ТаблицаИзменяемыхСерий Цикл
		
		ПараметрыПоиска = ПараметрыПоискаПоТЧСерииДокументаОснования(Основание, СтрокаКИзменениюПоАкту);
		
		НайденныеСтроки = ИзменяемаяТЧСерии.НайтиСтроки(ПараметрыПоиска);
		
		Если НайденныеСтроки <> Неопределено Тогда
			
			Если НайденныеСтроки.Количество() = 1 Тогда
				
				ИзменяемаяСтрока = НайденныеСтроки[0];
				ИзменяемаяСтрока.Количество = СтрокаКИзменениюПоАкту.КоличествоПоАкту;
				
				Если ИзменяемаяСтрока.Количество = 0 Тогда
					ИзменяемаяТЧСерии.Удалить(ИзменяемаяСтрока);
				КонецЕсли;
				
			ИначеЕсли НайденныеСтроки.Количество() = 0 Тогда
				
				ИзменяемаяСтрока = ИзменяемаяТЧСерии.Добавить();
				ЗаполнитьЗначенияСвойств(ИзменяемаяСтрока, СтрокаКИзменениюПоАкту);
				ИзменяемаяСтрока.Количество = СтрокаКИзменениюПоАкту.КоличествоПоАкту;
				
			ИначеЕсли НайденныеСтроки.Количество() > 1 Тогда
				
				КоличествоКИзменению = СтрокаКИзменениюПоАкту.КоличествоПоАкту - СтрокаКИзменениюПоАкту.КоличествоПоОснованиюАкт;
				Если КоличествоКИзменению < 0 Тогда
					
					КоличествоКИзменению = - КоличествоКИзменению;
					Для Каждого ИзменяемаяСтрока Из НайденныеСтроки Цикл
						Если КоличествоКИзменению <= 0 Тогда
							Прервать;
						КонецЕсли;
						
						Если КоличествоКИзменению >= ИзменяемаяСтрока.Количество Тогда
							КоличествоКИзменению = КоличествоКИзменению - ИзменяемаяСтрока.Количество; 
							ИзменяемаяТЧСерии.Удалить(ИзменяемаяСтрока);
						Иначе
							ИзменяемаяСтрока.КоличествоУпаковок = ИзменяемаяСтрока.Количество - КоличествоКИзменению;
							КоличествоКИзменению = 0;
						КонецЕсли;
						
					КонецЦикла;
					
				ИначеЕсли КоличествоКИзменению > 0 Тогда
					
					ИзменяемаяСтрока = НайденныеСтроки[0];
					ИзменяемаяСтрока.Количество = ИзменяемаяСтрока.Количество + КоличествоКИзменению;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ОбработатьШапкуДокументаОснованияАктаПриИзменении(ДокументОснование);
	
	ПараметрыУказанияСерий = ОбщегоНазначения.МенеджерОбъектаПоСсылке(ДокументОснование.Ссылка).ПараметрыУказанияСерий(ДокументОснование);
	НоменклатураСервер.ЗаполнитьСтатусыУказанияСерий(ДокументОснование, ПараметрыУказанияСерий);
	Попытка
		ДокументОснование.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ИнформацияОбОшибке().Описание);
	КонецПопытки;
	
КонецПроцедуры

Процедура ОбработатьШапкуДокументаОснованияАктаПриИзменении(Основание)

	Если ТипЗнч(Основание) = Тип("ДокументОбъект.РеализацияТоваровУслуг") Тогда
		
		РеализацияСверхЗаказа = Ложь;
		Если Основание.РеализацияПоЗаказам Тогда
			Для Каждого СтрокаТЧ Из Основание.Товары Цикл
				Если СтрокаТЧ.КодСтроки = 0 Тогда
					РеализацияСверхЗаказа = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Если Основание.РеализацияПоЗаказам Тогда
			СкидкиНаценкиСервер.РассчитатьПоРеализацииТоваровУслугПоЗаказу(Основание);
		КонецЕсли;
		Если РеализацияСверхЗаказа Или Не Основание.РеализацияПоЗаказам Тогда
			
			СтруктураПараметры = Новый Структура;
			СтруктураПараметры.Вставить("ПрименятьКОбъекту",                Истина);
			СтруктураПараметры.Вставить("ТолькоПредварительныйРасчет",      Ложь);
			СтруктураПараметры.Вставить("ВосстанавливатьУправляемыеСкидки", Истина);
			СтруктураПараметры.Вставить("УправляемыеСкидки", Новый СписокЗначений);
			СтруктураПараметры.Вставить("РеализацияСверхЗаказа", РеализацияСверхЗаказа И Основание.РеализацияПоЗаказам);
			
			СкидкиНаценкиСервер.Рассчитать(Основание, СтруктураПараметры);
			
		КонецЕсли;
		
		Документы.РеализацияТоваровУслуг.ПересчитатьСуммуПредоплаты(Основание);
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументОбъект.ВозвратТоваровПоставщику")
		ИЛИ ТипЗнч(Основание) = Тип("ДокументОбъект.ВозвратТоваровОтКлиента") Тогда
		
		СуммаПоДокументу = Основание.ПолучитьСуммуДокумента();
		ФинансыКлиентСервер.ПересчитатьСуммыВСтрокеРасшифровкиПлатежа(Основание, СуммаПоДокументу);
		
	КонецЕсли;

КонецПроцедуры

Функция ПараметрыПоискаПоДокументуОснованию(Основание, СтрокаКИзменениюПоАкту)
	
	ПараметрыПоиска = Новый Структура;
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		ПараметрыПоиска.Вставить("Номенклатура",        СтрокаКИзменениюПоАкту.Номенклатура);
		ПараметрыПоиска.Вставить("Характеристика",      СтрокаКИзменениюПоАкту.Характеристика);
		ПараметрыПоиска.Вставить("Упаковка",            СтрокаКИзменениюПоАкту.Упаковка);
		ПараметрыПоиска.Вставить("Назначение",          СтрокаКИзменениюПоАкту.Назначение);
		ПараметрыПоиска.Вставить("ЗаказКлиента",        СтрокаКИзменениюПоАкту.ЗаказКлиента);
		ПараметрыПоиска.Вставить("КодСтроки",           СтрокаКИзменениюПоАкту.КодСтроки);
		ПараметрыПоиска.Вставить("Серия",               СтрокаКИзменениюПоАкту.Серия);
		ПараметрыПоиска.Вставить("Склад",               СтрокаКИзменениюПоАкту.Склад);
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		
		ПараметрыПоиска.Вставить("Номенклатура",           СтрокаКИзменениюПоАкту.Номенклатура);
		ПараметрыПоиска.Вставить("НоменклатураПоставщика", СтрокаКИзменениюПоАкту.НоменклатураПоставщика);
		ПараметрыПоиска.Вставить("Характеристика",         СтрокаКИзменениюПоАкту.Характеристика);
		ПараметрыПоиска.Вставить("Упаковка",               СтрокаКИзменениюПоАкту.Упаковка);
		ПараметрыПоиска.Вставить("Назначение",             СтрокаКИзменениюПоАкту.Назначение);
		ПараметрыПоиска.Вставить("ЗаказПоставщику",        СтрокаКИзменениюПоАкту.ЗаказПоставщику);
		ПараметрыПоиска.Вставить("КодСтроки",              СтрокаКИзменениюПоАкту.КодСтроки);
		ПараметрыПоиска.Вставить("Серия",                  СтрокаКИзменениюПоАкту.Серия);
		ПараметрыПоиска.Вставить("НомерГТД",               СтрокаКИзменениюПоАкту.НомерГТД);
		ПараметрыПоиска.Вставить("Склад",                  СтрокаКИзменениюПоАкту.Склад);
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		
		ПараметрыПоиска.Вставить("Номенклатура",        СтрокаКИзменениюПоАкту.Номенклатура);
		ПараметрыПоиска.Вставить("Характеристика",      СтрокаКИзменениюПоАкту.Характеристика);
		ПараметрыПоиска.Вставить("Упаковка",            СтрокаКИзменениюПоАкту.Упаковка);
		ПараметрыПоиска.Вставить("ДокументПоступления", СтрокаКИзменениюПоАкту.ДокументПоступления);
		ПараметрыПоиска.Вставить("Назначение",          СтрокаКИзменениюПоАкту.Назначение);
		ПараметрыПоиска.Вставить("Серия",               СтрокаКИзменениюПоАкту.Серия);
		ПараметрыПоиска.Вставить("Цена",                СтрокаКИзменениюПоАкту.Цена);
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		
		ПараметрыПоиска.Вставить("Номенклатура",         СтрокаКИзменениюПоАкту.Номенклатура);
		ПараметрыПоиска.Вставить("Характеристика",       СтрокаКИзменениюПоАкту.Характеристика);
		ПараметрыПоиска.Вставить("Упаковка",             СтрокаКИзменениюПоАкту.Упаковка);
		ПараметрыПоиска.Вставить("Назначение",           СтрокаКИзменениюПоАкту.Назначение);
		ПараметрыПоиска.Вставить("НазначениеОтправителя",СтрокаКИзменениюПоАкту.НазначениеОтправителя);
		ПараметрыПоиска.Вставить("ЗаказНаПеремещение",   СтрокаКИзменениюПоАкту.ЗаказНаПеремещение);
		ПараметрыПоиска.Вставить("КодСтроки",            СтрокаКИзменениюПоАкту.КодСтроки);
		ПараметрыПоиска.Вставить("Серия",                СтрокаКИзменениюПоАкту.Серия);
		ПараметрыПоиска.Вставить("СтатусУказанияСерий",  СтрокаКИзменениюПоАкту.СтатусУказанияСерий);
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") Тогда
		
		ПараметрыПоиска.Вставить("Номенклатура",        СтрокаКИзменениюПоАкту.Номенклатура);
		ПараметрыПоиска.Вставить("Характеристика",      СтрокаКИзменениюПоАкту.Характеристика);
		ПараметрыПоиска.Вставить("Упаковка",            СтрокаКИзменениюПоАкту.Упаковка);
		ПараметрыПоиска.Вставить("ДокументРеализации",  СтрокаКИзменениюПоАкту.ДокументРеализации);
		ПараметрыПоиска.Вставить("КодСтроки",           СтрокаКИзменениюПоАкту.КодСтроки);
		ПараметрыПоиска.Вставить("Серия",               СтрокаКИзменениюПоАкту.Серия);
		
	КонецЕсли;
	
	Возврат ПараметрыПоиска;
	
КонецФункции

Функция ПараметрыПоискаПоТЧСерииДокументаОснования(Основание, СтрокаКИзменениюПоАкту)

	ПараметрыПоиска = Новый Структура;
	
	ПараметрыПоиска.Вставить("Номенклатура",   СтрокаКИзменениюПоАкту.Номенклатура);
	ПараметрыПоиска.Вставить("Серия",          СтрокаКИзменениюПоАкту.Серия);
	ПараметрыПоиска.Вставить("Характеристика", СтрокаКИзменениюПоАкту.Характеристика);
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.РеализацияТоваровУслуг") 
		Или ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		ПараметрыПоиска.Вставить("Склад", СтрокаКИзменениюПоАкту.Склад);
		ПараметрыПоиска.Вставить("Назначение",     СтрокаКИзменениюПоАкту.Назначение);
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		ПараметрыПоиска.Вставить("НазначениеОтправителя", СтрокаКИзменениюПоАкту.НазначениеОтправителя);
		ПараметрыПоиска.Вставить("Назначение",     СтрокаКИзменениюПоАкту.Назначение);
	КонецЕсли;

	Возврат ПараметрыПоиска;
	
КонецФункции

Функция СтруктураДействийПоТЧОснованияАкта(Основание)

	СтруктураДействий = Новый Структура;
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		ДополнитьСтруктруДействийПоТЧТоварыРеализации(СтруктураДействий, Основание);
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		
		ДополнитьСтруктуруДействийПоТЧТоварыПоступления(СтруктураДействий, Основание);
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		
		ДополнитьСтруктруДействийПоТЧТоварыВозвратаПоставщику(СтруктураДействий, Основание);
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") Тогда
		
		ДополнитьСтруктуруДействийПоТЧТоварыВозвратОтКлиента(СтруктураДействий, Основание);
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		
		ДополнитьСтруктруДействийПоТЧТоварыПеремещение(СтруктураДействий, Основание);
		
	КонецЕсли;
	
	Возврат СтруктураДействий;

КонецФункции 

Процедура ДополнитьСтруктруДействийПоТЧТоварыРеализации(СтруктураДействий, Объект)
	
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(Объект);
	
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСумму");
	СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомРучнойСкидки", Новый Структура("Очищать", Ложь));
	СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомАвтоматическойСкидки", Новый Структура("Очищать", Истина));
	
КонецПроцедуры

Процедура ДополнитьСтруктруДействийПоТЧТоварыВозвратаПоставщику(СтруктураДействий, Объект)
	
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(Объект);
	
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСумму");
	
КонецПроцедуры 

Процедура ДополнитьСтруктуруДействийПоТЧТоварыВозвратОтКлиента(СтруктураДействий, Объект)
	
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(Объект);
	
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСумму");
	
КонецПроцедуры

Процедура ДополнитьСтруктруДействийПоТЧТоварыПеремещение(СтруктураДействий, Основание)
	
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	
КонецПроцедуры

Процедура ДополнитьСтруктуруДействийПоТЧТоварыПоступления(СтруктураДействий, Объект)
	
	СтруктураПересчетаСуммы = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруПересчетаСуммыНДСВСтрокеТЧ(Объект);
	
	СтруктураДействий.Вставить("ПересчитатьКоличествоЕдиниц");
	СтруктураДействий.Вставить("ПересчитатьСуммуНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСуммуСНДС", СтруктураПересчетаСуммы);
	СтруктураДействий.Вставить("ПересчитатьСумму");
	СтруктураДействий.Вставить("ПересчитатьСуммуСУчетомРучнойСкидки", Новый Структура("Очищать", Ложь));
	
КонецПроцедуры

#КонецОбласти

#Область ПроверкаСоответствияАктаОРасхожденияхИОснования

Функция  ШапкаАктаИОснованиеСоотвествуют(РезультатЗапросаПоШапке, АктОРасхождениях, Основание) 
	
	ВыборкаАкт       = РезультатЗапросаПоШапке[0].Выбрать();
	Если Не ВыборкаАкт.Следующий() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ВыборкаОснование = РезультатЗапросаПоШапке[1].Выбрать();
	Если НЕ ВыборкаОснование.Следующий() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ВыборкаАкт.Проведен ИЛИ НЕ ВыборкаОснование.Проведен Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ВыборкаАкт.Статус = Перечисления.СтатусыАктаОРасхождениях.НеСогласовано
		Или ВыборкаАкт.Статус = Перечисления.СтатусыАктаОРасхождениях.Согласовано Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если ТипЗнч(АктОРасхождениях) = Тип("ДокументСсылка.АктОРасхожденияхПослеОтгрузки")
		Или ТипЗнч(АктОРасхождениях) = Тип("ДокументСсылка.АктОРасхожденияхПослеПриемки") Тогда
		
		Если ВыборкаАкт.СпособОтраженияРасхождений <> Перечисления.СпособыОтраженияРасхожденийАктПриемкиКлиента.ИсправлениеПервичныхДокументов
			И ВыборкаАкт.СпособОтраженияРасхождений <> Перечисления.СпособыОтраженияАктовОРасхожденияПослеПоступления.ИсправлениеПервичныхДокументов Тогда
			Возврат Ложь;
		КонецЕсли;
		
		Если ТипЗнч(Основание) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			
			Если НЕ РасхожденияКлиентСервер.ТипОснованияРеализацияТоваровУслуг(ВыборкаАкт.ТипОснованияАктаОРасхождении) Тогда
				Возврат Ложь;
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
			
			Если ВыборкаАкт.ТипОснованияАктаОРасхождении <> Перечисления.ТипыОснованияАктаОРасхождении.ВозвратПоставщику Тогда
				Возврат Ложь;
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(Основание) =  Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
			
			Если ВыборкаАкт.ТипОснованияАктаОРасхождении <>  Перечисления.ТипыОснованияАктаОРасхождении.ПоступлениеТоваровУслуг Тогда
				Возврат Ложь;
			КонецЕсли;
		
		ИначеЕсли ТипЗнч(Основание) =  Тип("ДокументСсылка.ВозвратТоваровОтКлиента") Тогда
			
			Если ВыборкаАкт.ТипОснованияАктаОРасхождении <>  Перечисления.ТипыОснованияАктаОРасхождении.ВозвратТоваровОтКлиента Тогда
				Возврат Ложь;
			КонецЕсли;
			
		Иначе
		
			Возврат Ложь;
		
		КонецЕсли;
		
		Если ВыборкаАкт.Организация              <> ВыборкаОснование.Организация
			Или ВыборкаАкт.Партнер               <> ВыборкаОснование.Партнер 
			Или ВыборкаАкт.Контрагент            <> ВыборкаОснование.Контрагент
			Или ((ЗначениеЗаполнено(ВыборкаАкт.Соглашение) Или ЗначениеЗаполнено(ВыборкаОснование.Соглашение)) И ВыборкаАкт.Соглашение <> ВыборкаОснование.Соглашение)
			Или ВыборкаАкт.Договор               <> ВыборкаОснование.Договор
			Или ВыборкаАкт.ХозяйственнаяОперация <> ВыборкаОснование.ХозяйственнаяОперация
			Или ВыборкаАкт.ЦенаВключаетНДС       <> ВыборкаОснование.ЦенаВключаетНДС
 			Тогда
			
			Возврат Ложь;
			
		КонецЕсли;
		
		Возврат Истина;
		
	ИначеЕсли ТипЗнч(АктОРасхождениях) = Тип("ДокументСсылка.АктОРасхожденияхПослеПеремещения") Тогда
		
		 Если ВыборкаАкт.Организация             <> ВыборкаОснование.Организация
			Или ВыборкаАкт.ОрганизацияПолучатель <> ВыборкаОснование.ОрганизацияПолучатель 
			Или ВыборкаАкт.СкладОтправитель      <> ВыборкаОснование.СкладОтправитель
			Или ВыборкаАкт.СкладПолучатель       <> ВыборкаОснование.СкладПолучатель
			Или ВыборкаАкт.ХозяйственнаяОперация <> ВыборкаОснование.ХозяйственнаяОперация Тогда
			
			Возврат Ложь;
			
		КонецЕсли;
		
		Возврат Истина;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Процедура ПроверитьТабличныеЧастиАктаИОснования(АктОРасхождениях, Основание, СтруктураВозврата, ИзменениеДокумента)
	
	Запрос = Новый Запрос;
	
	Если ТипЗнч(АктОРасхождениях) = Тип("ДокументСсылка.АктОРасхожденияхПослеОтгрузки") Тогда
		
		Если ТипЗнч(Основание) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
			
			Запрос.Текст = ТекстЗапросаТабличныеЧастиАктаОРасхожденияхПослеОтгрузкиИРеализации(АктОРасхождениях, Основание, СтруктураВозврата);
			
		ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
			
			Запрос.Текст = ТекстЗапросаТабличныеЧастиАктаОРасхожденияхПослеОтгрузкиИВозвратаПоставщику(АктОРасхождениях, Основание, СтруктураВозврата, ИзменениеДокумента);
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(АктОРасхождениях) = Тип("ДокументСсылка.АктОРасхожденияхПослеПриемки") Тогда
		
		Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
			
			Запрос.Текст = ТекстЗапросаТабличныеЧастиАктаОРасхожденияхПослеПриемкиИПоступления(АктОРасхождениях, Основание, СтруктураВозврата, ИзменениеДокумента);
			
		ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") Тогда
			
			Запрос.Текст = ТекстЗапросаТабличныеЧастиАктаОРасхожденияхПослеПриемкиИВозвратаОтКлиента(АктОРасхождениях, Основание, СтруктураВозврата, ИзменениеДокумента);
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(АктОРасхождениях) = Тип("ДокументСсылка.АктОРасхожденияхПослеПеремещения") Тогда
		
		Запрос.Текст = ТекстЗапросаТабличныеЧастиАктаОРасхожденияхПослеОтгрузкиИПеремещения(АктОРасхождениях, Основание, СтруктураВозврата);
		
	КонецЕсли;
	
	Если ПустаяСтрока(Запрос.Текст) Тогда
		Возврат;
	КонецЕсли;	
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,
		"&ТекстЗапросаКоэффициентУпаковки",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
		"ТоварыСостояния.Упаковка",
		"ТоварыСостояния.Номенклатура"));
	Запрос.УстановитьПараметр("АктОРасхождениях", АктОРасхождениях);
	Запрос.УстановитьПараметр("Основание", Основание);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаДействия = РезультатЗапроса[6].Выбрать();
	СостояниеДокумента = "ИзмененияНеТребуются";
	
	Пока ВыборкаДействия.Следующий() Цикл 
		Если ВыборкаДействия.СостояниеСтроки = "ОснованиеНеСоответствуетАкту" Тогда
			СостояниеДокумента = ВыборкаДействия.СостояниеСтроки;
			Прервать;
		КонецЕсли;
		Если ВыборкаДействия.СостояниеСтроки = "ТребуютсяИзменения" 
			И СостояниеДокумента <> "ТребуютсяИзменения" Тогда
			СостояниеДокумента = ВыборкаДействия.СостояниеСтроки;
		КонецЕсли;
		Если ВыборкаДействия.СостояниеСтроки = "ИзмененияВыполнены" 
			И СостояниеДокумента = "ИзмененияНеТребуются" Тогда
			СостояниеДокумента = ВыборкаДействия.СостояниеСтроки;
		КонецЕсли;
	КонецЦикла;
	
	СтруктураВозврата.СостояниеДокумента = СостояниеДокумента;
	
	Если СостояниеДокумента = "ТребуютсяИзменения" Тогда
		
		ТаблицаИзменяемыхСтрок = РезультатЗапроса[7].Выгрузить();
		Если ИзменениеДокумента Тогда
			Отказ = Ложь;
			
			Если ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
				ЗакупкиСервер.ПроверитьКорректностьВозвращаемыхТоваров(АктОРасхождениях, Отказ, ТаблицаИзменяемыхСтрок);
			ИначеЕсли  ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") Тогда
				ПродажиСервер.ПроверитьКорректностьВозвращаемыхТоваров(АктОРасхождениях, "", Отказ, ТаблицаИзменяемыхСтрок);
			КонецЕсли;
			Если Отказ Тогда
				Возврат
			КонецЕсли;
		КонецЕсли;
		
		СтруктураВозврата.ТаблицаИзменяемыхСтрок = ТаблицаИзменяемыхСтрок;
		СтруктураВозврата.ТаблицаИзменяемыхСерий = РезультатЗапроса[8].Выгрузить();
	КонецЕсли;
	
КонецПроцедуры

Функция ТекстЗапросаПоШапкеОснования(Основание)
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		
		Возврат ТекстЗапросаПоШапкеРеализацияТоваровУслуг(Основание);
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		
		Возврат ТекстЗапросаПоШапкеПоступлениеТоваровУслуг(Основание);
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		
		Возврат ТекстЗапросаПоШапкеВозвратПоставщику(Основание);
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") Тогда
		
		Возврат ТекстЗапросаПоШапкеВозвратТоваровОтКлиента(Основание);
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
		
		Возврат ТекстЗапросаПоШапкеПеремещениеТоваров(Основание);
		
	Иначе
		
		Возврат "";
		
	КонецЕсли;
	
КонецФункции

Функция ТекстЗапросаПоШапкеРеализацияТоваровУслуг(Основание)
	
	Возврат "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслуг.Организация,
	|	РеализацияТоваровУслуг.Партнер,
	|	РеализацияТоваровУслуг.Контрагент,
	|	РеализацияТоваровУслуг.Соглашение,
	|	РеализацияТоваровУслуг.Валюта,
	|	РеализацияТоваровУслуг.ХозяйственнаяОперация,
	|	РеализацияТоваровУслуг.Договор,
	|	РеализацияТоваровУслуг.ЦенаВключаетНДС,
	|	РеализацияТоваровУслуг.Проведен
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка = &Основание";
	
КонецФункции 

Функция ТекстЗапросаПоШапкеВозвратПоставщику(Основание)

	Возврат "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВозвратТоваровПоставщику.Организация,
	|	ВозвратТоваровПоставщику.Партнер,
	|	ВозвратТоваровПоставщику.Контрагент,
	|	ВозвратТоваровПоставщику.Соглашение,
	|	ВозвратТоваровПоставщику.Валюта,
	|	ВозвратТоваровПоставщику.ХозяйственнаяОперация,
	|	ВозвратТоваровПоставщику.Договор,
	|	ВозвратТоваровПоставщику.ЦенаВключаетНДС,
	|	ВозвратТоваровПоставщику.Проведен
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|ГДЕ
	|	ВозвратТоваровПоставщику.Ссылка = &Основание";


КонецФункции

Функция ТекстЗапросаПоШапкеПоступлениеТоваровУслуг(Основание)

	Возврат "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПоступлениеТоваровУслуг.Организация,
	|	ПоступлениеТоваровУслуг.Партнер,
	|	ПоступлениеТоваровУслуг.Контрагент,
	|	ПоступлениеТоваровУслуг.Соглашение,
	|	ПоступлениеТоваровУслуг.Валюта,
	|	ПоступлениеТоваровУслуг.ХозяйственнаяОперация,
	|	ПоступлениеТоваровУслуг.Договор,
	|	ПоступлениеТоваровУслуг.ЦенаВключаетНДС,
	|	ПоступлениеТоваровУслуг.Проведен
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка = &Основание";

КонецФункции 

Функция ТекстЗапросаПоШапкеПеремещениеТоваров(АктОРасхождениях)

	Возврат "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПеремещениеТоваров.Организация,
	|	ПеремещениеТоваров.ОрганизацияПолучатель,
	|	ПеремещениеТоваров.СкладОтправитель,
	|	ПеремещениеТоваров.СкладПолучатель,
	|	ПеремещениеТоваров.ХозяйственнаяОперация,
	|	ПеремещениеТоваров.Проведен
	|ИЗ
	|	Документ.ПеремещениеТоваров КАК ПеремещениеТоваров
	|ГДЕ
	|	ПеремещениеТоваров.Ссылка = &Основание";

КонецФункции

Функция ТекстЗапросаПоШапкеАкта(АктОРасхождениях)
	
	Если ТипЗнч(АктОРасхождениях) = Тип("ДокументСсылка.АктОРасхожденияхПослеОтгрузки") Тогда
		
		Возврат ТекстЗапросаПоШапкеАктаОРасхожденияхПослеОтгрузки(АктОРасхождениях);
		
	ИначеЕсли ТипЗнч(АктОРасхождениях) = Тип("ДокументСсылка.АктОРасхожденияхПослеПеремещения") Тогда
		
		Возврат ТекстЗапросаПоШапкеАктаОРасхожденияхПослеПеремещения(АктОРасхождениях);
		
	ИначеЕсли ТипЗнч(АктОРасхождениях) = Тип("ДокументСсылка.АктОРасхожденияхПослеПриемки") Тогда
		
		Возврат ТекстЗапросаПоШапкеАктаОРасхожденияхПослеПриемки(АктОРасхождениях);
		
	Иначе
		
		Возврат "";
		
	КонецЕсли;

КонецФункции

Функция ТекстЗапросаПоШапкеАктаОРасхожденияхПослеПриемки(АктОРасхождениях)

	Возврат "
	|ВЫБРАТЬ
	|	АктОРасхожденияхПослеПриемки.Организация,
	|	АктОРасхожденияхПослеПриемки.Партнер,
	|	АктОРасхожденияхПослеПриемки.Контрагент,
	|	АктОРасхожденияхПослеПриемки.Соглашение,
	|	АктОРасхожденияхПослеПриемки.Договор,
	|	АктОРасхожденияхПослеПриемки.Валюта,
	|	АктОРасхожденияхПослеПриемки.ХозяйственнаяОперация,
	|	АктОРасхожденияхПослеПриемки.ЦенаВключаетНДС,
	|	АктОРасхожденияхПослеПриемки.Статус,
	|	АктОРасхожденияхПослеПриемки.ТипОснованияАктаОРасхождении,
	|	АктОРасхожденияхПослеПриемки.СпособОтраженияРасхождений,
	|	АктОРасхожденияхПослеПриемки.Проведен
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки КАК АктОРасхожденияхПослеПриемки
	|ГДЕ
	|	АктОРасхожденияхПослеПриемки.Ссылка = &АктОРасхождениях";
	
КонецФункции

Функция ТекстЗапросаПоШапкеВозвратТоваровОтКлиента(Основание)
	
	Возврат "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВозвратТоваровОтКлиента.Организация,
	|	ВозвратТоваровОтКлиента.Партнер,
	|	ВозвратТоваровОтКлиента.Контрагент,
	|	ВозвратТоваровОтКлиента.Соглашение,
	|	ВозвратТоваровОтКлиента.Валюта,
	|	ВозвратТоваровОтКлиента.ХозяйственнаяОперация,
	|	ВозвратТоваровОтКлиента.Договор,
	|	ВозвратТоваровОтКлиента.ЦенаВключаетНДС,
	|	ВозвратТоваровОтКлиента.Проведен
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
	|ГДЕ
	|	ВозвратТоваровОтКлиента.Ссылка = &Основание";
	
КонецФункции

Функция ТекстЗапросаПоШапкеАктаОРасхожденияхПослеОтгрузки(АктОРасхождениях)

	Возврат "
	|ВЫБРАТЬ
	|	АктОРасхожденияхПослеОтгрузки.Организация,
	|	АктОРасхожденияхПослеОтгрузки.Партнер,
	|	АктОРасхожденияхПослеОтгрузки.Контрагент,
	|	АктОРасхожденияхПослеОтгрузки.Соглашение,
	|	АктОРасхожденияхПослеОтгрузки.Договор,
	|	АктОРасхожденияхПослеОтгрузки.Валюта,
	|	АктОРасхожденияхПослеОтгрузки.ХозяйственнаяОперация,
	|	АктОРасхожденияхПослеОтгрузки.ЦенаВключаетНДС,
	|	АктОРасхожденияхПослеОтгрузки.Статус,
	|	АктОРасхожденияхПослеОтгрузки.ТипОснованияАктаОРасхождении,
	|	АктОРасхожденияхПослеОтгрузки.СпособОтраженияРасхождений,
	|	АктОРасхожденияхПослеОтгрузки.Проведен
	|ИЗ
	|	Документ.АктОРасхожденияхПослеОтгрузки КАК АктОРасхожденияхПослеОтгрузки
	|ГДЕ
	|	АктОРасхожденияхПослеОтгрузки.Ссылка = &АктОРасхождениях";

КонецФункции

Функция ТекстЗапросаПоШапкеАктаОРасхожденияхПослеПеремещения(АктОРасхождениях)

	Возврат "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АктОРасхожденияхПослеПеремещения.Организация,
	|	АктОРасхожденияхПослеПеремещения.ОрганизацияПолучатель,
	|	АктОРасхожденияхПослеПеремещения.СкладОтправитель,
	|	АктОРасхожденияхПослеПеремещения.СкладПолучатель,
	|	АктОРасхожденияхПослеПеремещения.ХозяйственнаяОперация,
	|	АктОРасхожденияхПослеПеремещения.Статус,
	|	АктОРасхожденияхПослеПеремещения.Проведен
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПеремещения КАК АктОРасхожденияхПослеПеремещения
	|ГДЕ
	|	АктОРасхожденияхПослеПеремещения.Ссылка = &АктОРасхождениях";

КонецФункции

Функция ТекстЗапросаТабличныеЧастиАктаОРасхожденияхПослеОтгрузкиИВозвратаПоставщику(АктОРасхождениях, Основание, СтруктураВозврата, ИзменениеДокумента)
	
	Возврат "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АктОРасхожденияхПослеОтгрузкиТовары.Номенклатура КАК Номенклатура,
	|	АктОРасхожденияхПослеОтгрузкиТовары.Характеристика КАК Характеристика,
	|	АктОРасхожденияхПослеОтгрузкиТовары.Назначение КАК Назначение,
	|	АктОРасхожденияхПослеОтгрузкиТовары.Упаковка КАК Упаковка,
	|	АктОРасхожденияхПослеОтгрузкиТовары.Серия КАК Серия,
	|	АктОРасхожденияхПослеОтгрузкиТовары.ДокументПоступления,
	|	АктОРасхожденияхПослеОтгрузкиТовары.Цена КАК Цена,
	|	АктОРасхожденияхПослеОтгрузкиТовары.СтавкаНДС КАК СтавкаНДС,
	|	СУММА(ВЫБОР
	|			КОГДА АктОРасхожденияхПослеОтгрузкиТовары.Действие В (ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ПокупкаПерепоставленного), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ВозвратПерепоставленного), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ДопоставкаНеТребуется), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ТребуетсяДопоставка))
	|				ТОГДА АктОРасхожденияхПослеОтгрузкиТовары.КоличествоУпаковок
	|			ИНАЧЕ АктОРасхожденияхПослеОтгрузкиТовары.КоличествоУпаковокПоДокументу
	|		КОНЕЦ) КАК КоличествоУпаковок,
	|	СУММА(АктОРасхожденияхПослеОтгрузкиТовары.КоличествоУпаковокПоДокументу) КАК КоличествоУпаковокПоДокументу
	|ПОМЕСТИТЬ АктОРасхожденияПриОтгрузке
	|ИЗ
	|	Документ.АктОРасхожденияхПослеОтгрузки.Товары КАК АктОРасхожденияхПослеОтгрузкиТовары
	|ГДЕ
	|	АктОРасхожденияхПослеОтгрузкиТовары.Ссылка = &АктОРасхождениях
	|	И АктОРасхожденияхПослеОтгрузкиТовары.Реализация = &Основание
	|
	|СГРУППИРОВАТЬ ПО
	|	АктОРасхожденияхПослеОтгрузкиТовары.Упаковка,
	|	АктОРасхожденияхПослеОтгрузкиТовары.Серия,
	|	АктОРасхожденияхПослеОтгрузкиТовары.СтавкаНДС,
	|	АктОРасхожденияхПослеОтгрузкиТовары.Номенклатура,
	|	АктОРасхожденияхПослеОтгрузкиТовары.Назначение,
	|	АктОРасхожденияхПослеОтгрузкиТовары.Характеристика,
	|	АктОРасхожденияхПослеОтгрузкиТовары.Цена,
	|	АктОРасхожденияхПослеОтгрузкиТовары.ДокументПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АктОРасхожденияхПослеОтгрузкиСерии.Серия КАК Серия,
	|	АктОРасхожденияхПослеОтгрузкиСерии.Номенклатура КАК Номенклатура,
	|	АктОРасхожденияхПослеОтгрузкиСерии.Характеристика КАК Характеристика,
	|	АктОРасхожденияхПослеОтгрузкиСерии.Назначение КАК Назначение,
	|	СУММА(ВЫБОР
	|			КОГДА АктОРасхожденияхПослеОтгрузкиСерии.Действие В (ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ПокупкаПерепоставленного), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ВозвратПерепоставленного), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ДопоставкаНеТребуется), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ТребуетсяДопоставка))
	|				ТОГДА АктОРасхожденияхПослеОтгрузкиСерии.Количество
	|			ИНАЧЕ АктОРасхожденияхПослеОтгрузкиСерии.КоличествоПоДокументу
	|		КОНЕЦ) КАК Количество,
	|	СУММА(АктОРасхожденияхПослеОтгрузкиСерии.КоличествоПоДокументу) КАК КоличествоПоДокументу
	|ПОМЕСТИТЬ АктОРасхожденияхСерии
	|ИЗ
	|	Документ.АктОРасхожденияхПослеОтгрузки.Серии КАК АктОРасхожденияхПослеОтгрузкиСерии
	|ГДЕ
	|	АктОРасхожденияхПослеОтгрузкиСерии.Ссылка = &АктОРасхождениях
	|	И АктОРасхожденияхПослеОтгрузкиСерии.Реализация = &Основание
	|
	|СГРУППИРОВАТЬ ПО
	|	АктОРасхожденияхПослеОтгрузкиСерии.Серия,
	|	АктОРасхожденияхПослеОтгрузкиСерии.Номенклатура,
	|	АктОРасхожденияхПослеОтгрузкиСерии.Назначение,
	|	АктОРасхожденияхПослеОтгрузкиСерии.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ 
	|	ВозвратТоваровПоставщикуТовары.Номенклатура,
	|	ВозвратТоваровПоставщикуТовары.Характеристика,
	|	ВозвратТоваровПоставщикуТовары.Назначение,
	|	ВозвратТоваровПоставщикуТовары.Упаковка,
	|	ВозвратТоваровПоставщикуТовары.Серия,
	|	ВозвратТоваровПоставщикуТовары.Цена,
	|	ВозвратТоваровПоставщикуТовары.СтавкаНДС,
	|	ВозвратТоваровПоставщикуТовары.ДокументПоступления,
	|	СУММА(ВозвратТоваровПоставщикуТовары.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ВозвратТоваровПоставщику
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
	|ГДЕ
	|	ВозвратТоваровПоставщикуТовары.Ссылка = &Основание
	|
	|СГРУППИРОВАТЬ ПО
	|	ВозвратТоваровПоставщикуТовары.Упаковка,
	|	ВозвратТоваровПоставщикуТовары.Номенклатура,
	|	ВозвратТоваровПоставщикуТовары.Серия,
	|	ВозвратТоваровПоставщикуТовары.ДокументПоступления,
	|	ВозвратТоваровПоставщикуТовары.Назначение,
	|	ВозвратТоваровПоставщикуТовары.Характеристика,
	|	ВозвратТоваровПоставщикуТовары.Цена,
	|	ВозвратТоваровПоставщикуТовары.СтавкаНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВозвратТоваровПоставщикуСерии.Номенклатура,
	|	ВозвратТоваровПоставщикуСерии.Характеристика,
	|	ВозвратТоваровПоставщикуСерии.Назначение,
	|	ВозвратТоваровПоставщикуСерии.Серия,
	|	СУММА(ВозвратТоваровПоставщикуСерии.Количество) КАК Количество
	|ПОМЕСТИТЬ ВозвратПоставщикуСерии
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Серии КАК ВозвратТоваровПоставщикуСерии
	|ГДЕ
	|	ВозвратТоваровПоставщикуСерии.Ссылка = &Основание
	|
	|СГРУППИРОВАТЬ ПО
	|	ВозвратТоваровПоставщикуСерии.Номенклатура,
	|	ВозвратТоваровПоставщикуСерии.Серия,
	|	ВозвратТоваровПоставщикуСерии.Назначение,
	|	ВозвратТоваровПоставщикуСерии.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Назначение,
	|	ВложенныйЗапрос.Упаковка,
	|	ВложенныйЗапрос.ДокументПоступления,
	|	ВложенныйЗапрос.Серия,
	|	ВложенныйЗапрос.Цена,
	|	ВложенныйЗапрос.СтавкаНДС,
	|	ВложенныйЗапрос.КоличествоУпаковокПоАкту,
	|	ВложенныйЗапрос.КоличествоУпаковокПоОснованиюАкт,
	|	ВложенныйЗапрос.КоличествоУпаковокОснование,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоУпаковокПоАкту = ВложенныйЗапрос.КоличествоУпаковокОснование
	|				И ВложенныйЗапрос.КоличествоУпаковокПоОснованиюАкт = ВложенныйЗапрос.КоличествоУпаковокОснование
	|			ТОГДА ""ИзмененияНеТребуются""
	|		КОГДА ВложенныйЗапрос.КоличествоУпаковокПоАкту = ВложенныйЗапрос.КоличествоУпаковокОснование
	|				И ВложенныйЗапрос.КоличествоУпаковокПоОснованиюАкт <> ВложенныйЗапрос.КоличествоУпаковокОснование
	|			ТОГДА ""ИзмененияВыполнены""
	|		КОГДА ВложенныйЗапрос.КоличествоУпаковокПоОснованиюАкт = ВложенныйЗапрос.КоличествоУпаковокОснование
	|				И ВложенныйЗапрос.КоличествоУпаковокПоАкту <> ВложенныйЗапрос.КоличествоУпаковокОснование
	|			ТОГДА ""ТребуютсяИзменения""
	|		ИНАЧЕ ""ОснованиеНеСоответствуетАкту""
	|	КОНЕЦ КАК СостояниеСтроки
	|ПОМЕСТИТЬ ТоварыСостояния
	|ИЗ
	|	(ВЫБРАТЬ
	|		АктОРасхожденияхПослеОтгрузкиТовары.Номенклатура КАК Номенклатура,
	|		АктОРасхожденияхПослеОтгрузкиТовары.Характеристика КАК Характеристика,
	|		АктОРасхожденияхПослеОтгрузкиТовары.Назначение КАК Назначение,
	|		АктОРасхожденияхПослеОтгрузкиТовары.Упаковка КАК Упаковка,
	|		АктОРасхожденияхПослеОтгрузкиТовары.ДокументПоступления КАК ДокументПоступления,
	|		АктОРасхожденияхПослеОтгрузкиТовары.Серия КАК Серия,
	|		АктОРасхожденияхПослеОтгрузкиТовары.Цена КАК Цена,
	|		АктОРасхожденияхПослеОтгрузкиТовары.СтавкаНДС КАК СтавкаНДС,
	|		СУММА(АктОРасхожденияхПослеОтгрузкиТовары.КоличествоУпаковок) КАК КоличествоУпаковокПоАкту,
	|		СУММА(АктОРасхожденияхПослеОтгрузкиТовары.КоличествоУпаковокПоДокументу) КАК КоличествоУпаковокПоОснованиюАкт,
	|		СУММА(ЕСТЬNULL(ВозвратТоваровПоставщикуТовары.КоличествоУпаковок, 0)) КАК КоличествоУпаковокОснование
	|	ИЗ
	|		АктОРасхожденияПриОтгрузке КАК АктОРасхожденияхПослеОтгрузкиТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщикуТовары
	|			ПО АктОРасхожденияхПослеОтгрузкиТовары.Номенклатура = ВозвратТоваровПоставщикуТовары.Номенклатура
	|				И АктОРасхожденияхПослеОтгрузкиТовары.Характеристика = ВозвратТоваровПоставщикуТовары.Характеристика
	|				И АктОРасхожденияхПослеОтгрузкиТовары.Назначение = ВозвратТоваровПоставщикуТовары.Назначение
	|				И АктОРасхожденияхПослеОтгрузкиТовары.Упаковка = ВозвратТоваровПоставщикуТовары.Упаковка
	|				И АктОРасхожденияхПослеОтгрузкиТовары.ДокументПоступления = ВозвратТоваровПоставщикуТовары.ДокументПоступления
	|				И АктОРасхожденияхПослеОтгрузкиТовары.Серия = ВозвратТоваровПоставщикуТовары.Серия
	|				И АктОРасхожденияхПослеОтгрузкиТовары.Цена = ВозвратТоваровПоставщикуТовары.Цена
	|				И АктОРасхожденияхПослеОтгрузкиТовары.СтавкаНДС = ВозвратТоваровПоставщикуТовары.СтавкаНДС
	|	
	|	СГРУППИРОВАТЬ ПО
	|		АктОРасхожденияхПослеОтгрузкиТовары.Назначение,
	|		АктОРасхожденияхПослеОтгрузкиТовары.Характеристика,
	|		АктОРасхожденияхПослеОтгрузкиТовары.Серия,
	|		АктОРасхожденияхПослеОтгрузкиТовары.Упаковка,
	|		АктОРасхожденияхПослеОтгрузкиТовары.Номенклатура,
	|		АктОРасхожденияхПослеОтгрузкиТовары.ДокументПоступления,
	|		АктОРасхожденияхПослеОтгрузкиТовары.Цена,
	|		АктОРасхожденияхПослеОтгрузкиТовары.СтавкаНДС
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВозвратТоваровПоставщикуТовары.Номенклатура,
	|		ВозвратТоваровПоставщикуТовары.Характеристика,
	|		ВозвратТоваровПоставщикуТовары.Назначение,
	|		ВозвратТоваровПоставщикуТовары.Упаковка,
	|		ВозвратТоваровПоставщикуТовары.ДокументПоступления,
	|		ВозвратТоваровПоставщикуТовары.Серия,
	|		ВозвратТоваровПоставщикуТовары.Цена,
	|		ВозвратТоваровПоставщикуТовары.СтавкаНДС,
	|		СУММА(0),
	|		СУММА(0),
	|		СУММА(ВозвратТоваровПоставщикуТовары.КоличествоУпаковок)
	|	ИЗ
	|		ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщикуТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ АктОРасхожденияПриОтгрузке КАК АктОРасхожденияхПослеОтгрузкиТовары
	|			ПО ВозвратТоваровПоставщикуТовары.Номенклатура = АктОРасхожденияхПослеОтгрузкиТовары.Номенклатура
	|				И ВозвратТоваровПоставщикуТовары.Характеристика = АктОРасхожденияхПослеОтгрузкиТовары.Характеристика
	|				И ВозвратТоваровПоставщикуТовары.Назначение = АктОРасхожденияхПослеОтгрузкиТовары.Назначение
	|				И ВозвратТоваровПоставщикуТовары.Упаковка = АктОРасхожденияхПослеОтгрузкиТовары.Упаковка
	|				И ВозвратТоваровПоставщикуТовары.ДокументПоступления = АктОРасхожденияхПослеОтгрузкиТовары.ДокументПоступления
	|				И ВозвратТоваровПоставщикуТовары.Серия = АктОРасхожденияхПослеОтгрузкиТовары.Серия
	|				И ВозвратТоваровПоставщикуТовары.Цена = АктОРасхожденияхПослеОтгрузкиТовары.Цена
	|				И ВозвратТоваровПоставщикуТовары.СтавкаНДС = АктОРасхожденияхПослеОтгрузкиТовары.СтавкаНДС
	|	ГДЕ
	|		АктОРасхожденияхПослеОтгрузкиТовары.КоличествоУпаковокПоДокументу ЕСТЬ NULL 
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВозвратТоваровПоставщикуТовары.Упаковка,
	|		ВозвратТоваровПоставщикуТовары.Номенклатура,
	|		ВозвратТоваровПоставщикуТовары.Серия,
	|		ВозвратТоваровПоставщикуТовары.ДокументПоступления,
	|		ВозвратТоваровПоставщикуТовары.Назначение,
	|		ВозвратТоваровПоставщикуТовары.Характеристика,
	|		ВозвратТоваровПоставщикуТовары.Цена,
	|		ВозвратТоваровПоставщикуТовары.СтавкаНДС) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Назначение,
	|	ВложенныйЗапрос.Серия,
	|	ВложенныйЗапрос.КоличествоПоАкту,
	|	ВложенныйЗапрос.КоличествоПоОснованиюАкт,
	|	ВложенныйЗапрос.КоличествоОснование,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоПоАкту = ВложенныйЗапрос.КоличествоОснование
	|				И ВложенныйЗапрос.КоличествоПоОснованиюАкт = ВложенныйЗапрос.КоличествоОснование
	|			ТОГДА ""ИзмененияНеТребуются""
	|		КОГДА ВложенныйЗапрос.КоличествоПоАкту = ВложенныйЗапрос.КоличествоОснование
	|				И ВложенныйЗапрос.КоличествоПоОснованиюАкт <> ВложенныйЗапрос.КоличествоОснование
	|			ТОГДА ""ИзмененияВыполнены""
	|		КОГДА ВложенныйЗапрос.КоличествоПоОснованиюАкт = ВложенныйЗапрос.КоличествоОснование
	|				И ВложенныйЗапрос.КоличествоПоАкту <> ВложенныйЗапрос.КоличествоОснование
	|			ТОГДА ""ТребуютсяИзменения""
	|		ИНАЧЕ ""ОснованиеНеСоответствуетАкту""
	|	КОНЕЦ КАК СостояниеСтроки
	|ПОМЕСТИТЬ ТоварыСостоянияСерии
	|ИЗ
	|	(ВЫБРАТЬ
	|		АктОРасхожденияхСерии.Номенклатура КАК Номенклатура,
	|		АктОРасхожденияхСерии.Характеристика КАК Характеристика,
	|		АктОРасхожденияхСерии.Назначение КАК Назначение,
	|		АктОРасхожденияхСерии.Серия КАК Серия,
	|		СУММА(АктОРасхожденияхСерии.Количество) КАК КоличествоПоАкту,
	|		СУММА(АктОРасхожденияхСерии.КоличествоПоДокументу) КАК КоличествоПоОснованиюАкт,
	|		СУММА(ЕСТЬNULL(ВозвратПоставщикуСерии.Количество, 0)) КАК КоличествоОснование
	|	ИЗ
	|		АктОРасхожденияхСерии КАК АктОРасхожденияхСерии
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВозвратПоставщикуСерии КАК ВозвратПоставщикуСерии
	|			ПО АктОРасхожденияхСерии.Номенклатура = ВозвратПоставщикуСерии.Номенклатура
	|				И АктОРасхожденияхСерии.Характеристика = ВозвратПоставщикуСерии.Характеристика
	|				И АктОРасхожденияхСерии.Назначение = ВозвратПоставщикуСерии.Назначение
	|				И АктОРасхожденияхСерии.Серия = ВозвратПоставщикуСерии.Серия
	|	
	|	СГРУППИРОВАТЬ ПО
	|		АктОРасхожденияхСерии.Назначение,
	|		АктОРасхожденияхСерии.Характеристика,
	|		АктОРасхожденияхСерии.Серия,
	|		АктОРасхожденияхСерии.Номенклатура
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВозвратПоставщикуСерии.Номенклатура,
	|		ВозвратПоставщикуСерии.Характеристика,
	|		ВозвратПоставщикуСерии.Назначение,
	|		ВозвратПоставщикуСерии.Серия,
	|		СУММА(0),
	|		СУММА(0),
	|		СУММА(ВозвратПоставщикуСерии.Количество)
	|	ИЗ
	|		ВозвратПоставщикуСерии КАК ВозвратПоставщикуСерии
	|			ЛЕВОЕ СОЕДИНЕНИЕ АктОРасхожденияхСерии КАК АктОРасхожденияхСерии
	|			ПО ВозвратПоставщикуСерии.Номенклатура = АктОРасхожденияхСерии.Номенклатура
	|				И ВозвратПоставщикуСерии.Характеристика = АктОРасхожденияхСерии.Характеристика
	|				И ВозвратПоставщикуСерии.Назначение = АктОРасхожденияхСерии.Назначение
	|				И ВозвратПоставщикуСерии.Серия = АктОРасхожденияхСерии.Серия
	|	ГДЕ
	|		АктОРасхожденияхСерии.КоличествоПоДокументу ЕСТЬ NULL 
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВозвратПоставщикуСерии.Номенклатура,
	|		ВозвратПоставщикуСерии.Серия,
	|		ВозвратПоставщикуСерии.Назначение,
	|		ВозвратПоставщикуСерии.Характеристика) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыСостояния.СостояниеСтроки
	|ИЗ
	|	ТоварыСостояния КАК ТоварыСостояния
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыСостоянияСерии.СостояниеСтроки
	|ИЗ
	|	ТоварыСостоянияСерии КАК ТоварыСостоянияСерии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСостояния.Номенклатура,
	|	ТоварыСостояния.Характеристика,
	|	ТоварыСостояния.Назначение,
	|	ТоварыСостояния.Упаковка КАК Упаковка,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоэффициентУпаковки,
	|	ТоварыСостояния.ДокументПоступления,
	|	ТоварыСостояния.Серия,
	|	ТоварыСостояния.Цена,
	|	ТоварыСостояния.СтавкаНДС,
	|	ТоварыСостояния.КоличествоУпаковокПоАкту,
	|	ТоварыСостояния.КоличествоУпаковокПоОснованиюАкт,
	|	ТоварыСостояния.КоличествоУпаковокОснование
	|ИЗ
	|	ТоварыСостояния КАК ТоварыСостояния
	|ГДЕ
	|	ТоварыСостояния.СостояниеСтроки = ""ТребуютсяИзменения""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСостоянияСерии.Номенклатура,
	|	ТоварыСостоянияСерии.Характеристика,
	|	ТоварыСостоянияСерии.Назначение,
	|	ТоварыСостоянияСерии.Серия,
	|	ТоварыСостоянияСерии.КоличествоПоАкту,
	|	ТоварыСостоянияСерии.КоличествоПоОснованиюАкт,
	|	ТоварыСостоянияСерии.КоличествоОснование
	|ИЗ
	|	ТоварыСостоянияСерии КАК ТоварыСостоянияСерии
	|ГДЕ
	|	ТоварыСостоянияСерии.СостояниеСтроки = ""ТребуютсяИзменения""";
	
КонецФункции

Функция ТекстЗапросаТабличныеЧастиАктаОРасхожденияхПослеОтгрузкиИПеремещения(АктОРасхождениях, Основание, СтруктураВозврата)

	Возврат "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АктОРасхожденияхПослеПеремещенияТовары.Номенклатура КАК Номенклатура,
	|	АктОРасхожденияхПослеПеремещенияТовары.Характеристика КАК Характеристика,
	|	АктОРасхожденияхПослеПеремещенияТовары.Назначение КАК Назначение,
	|	АктОРасхожденияхПослеПеремещенияТовары.НазначениеОтправителя КАК НазначениеОтправителя,
	|	АктОРасхожденияхПослеПеремещенияТовары.Упаковка КАК Упаковка,
	|	АктОРасхожденияхПослеПеремещенияТовары.Заказ КАК Заказ,
	|	АктОРасхожденияхПослеПеремещенияТовары.КодСтроки КАК КодСтроки,
	|	АктОРасхожденияхПослеПеремещенияТовары.Серия КАК Серия,
	|	АктОРасхожденияхПослеПеремещенияТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	СУММА(ВЫБОР
	|			КОГДА АктОРасхожденияхПослеПеремещенияТовары.Действие В (ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ПокупкаПерепоставленного), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ВозвратПерепоставленного), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ДопоставкаНеТребуется), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ТребуетсяДопоставка))
	|				ТОГДА АктОРасхожденияхПослеПеремещенияТовары.КоличествоУпаковок
	|			ИНАЧЕ АктОРасхожденияхПослеПеремещенияТовары.КоличествоУпаковокПоДокументу
	|		КОНЕЦ) КАК КоличествоУпаковок,
	|	СУММА(АктОРасхожденияхПослеПеремещенияТовары.КоличествоУпаковокПоДокументу) КАК КоличествоУпаковокПоДокументу
	|ПОМЕСТИТЬ АктОРасхожденияПослеПеремещения
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПеремещения.Товары КАК АктОРасхожденияхПослеПеремещенияТовары
	|ГДЕ
	|	АктОРасхожденияхПослеПеремещенияТовары.Ссылка = &АктОРасхождениях
	|	И АктОРасхожденияхПослеПеремещенияТовары.ДокументОснование = &Основание
	|
	|СГРУППИРОВАТЬ ПО
	|	АктОРасхожденияхПослеПеремещенияТовары.Характеристика,
	|	АктОРасхожденияхПослеПеремещенияТовары.НазначениеОтправителя,
	|	АктОРасхожденияхПослеПеремещенияТовары.Номенклатура,
	|	АктОРасхожденияхПослеПеремещенияТовары.Назначение,
	|	АктОРасхожденияхПослеПеремещенияТовары.Упаковка,
	|	АктОРасхожденияхПослеПеремещенияТовары.Заказ,
	|	АктОРасхожденияхПослеПеремещенияТовары.Серия,
	|	АктОРасхожденияхПослеПеремещенияТовары.КодСтроки,
	|	АктОРасхожденияхПослеПеремещенияТовары.СтатусУказанияСерий
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АктОРасхожденияхПослеПеремещенияСерии.Серия КАК Серия,
	|	АктОРасхожденияхПослеПеремещенияСерии.Номенклатура КАК Номенклатура,
	|	АктОРасхожденияхПослеПеремещенияСерии.Характеристика КАК Характеристика,
	|	АктОРасхожденияхПослеПеремещенияСерии.Назначение КАК Назначение,
	|	АктОРасхожденияхПослеПеремещенияСерии.НазначениеОтправителя КАК НазначениеОтправителя,
	|	СУММА(ВЫБОР
	|			КОГДА АктОРасхожденияхПослеПеремещенияСерии.Действие В (ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ПокупкаПерепоставленного), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ВозвратПерепоставленного), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ДопоставкаНеТребуется), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ТребуетсяДопоставка))
	|				ТОГДА АктОРасхожденияхПослеПеремещенияСерии.Количество
	|			ИНАЧЕ АктОРасхожденияхПослеПеремещенияСерии.КоличествоПоДокументу
	|		КОНЕЦ) КАК Количество,
	|	СУММА(АктОРасхожденияхПослеПеремещенияСерии.КоличествоПоДокументу) КАК КоличествоПоДокументу
	|ПОМЕСТИТЬ АктОРасхожденияхСерии
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПеремещения.Серии КАК АктОРасхожденияхПослеПеремещенияСерии
	|ГДЕ
	|	АктОРасхожденияхПослеПеремещенияСерии.Ссылка = &АктОРасхождениях
	|	И АктОРасхожденияхПослеПеремещенияСерии.ДокументОснование = &Основание
	|
	|СГРУППИРОВАТЬ ПО
	|	АктОРасхожденияхПослеПеремещенияСерии.НазначениеОтправителя,
	|	АктОРасхожденияхПослеПеремещенияСерии.Серия,
	|	АктОРасхожденияхПослеПеремещенияСерии.Номенклатура,
	|	АктОРасхожденияхПослеПеремещенияСерии.Назначение,
	|	АктОРасхожденияхПослеПеремещенияСерии.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПеремещениеТоваровТовары.Номенклатура,
	|	ПеремещениеТоваровТовары.Характеристика,
	|	ПеремещениеТоваровТовары.Назначение,
	|	ПеремещениеТоваровТовары.Упаковка,
	|	ПеремещениеТоваровТовары.НазначениеОтправителя,
	|	ПеремещениеТоваровТовары.Серия,
	|	ПеремещениеТоваровТовары.СтатусУказанияСерий,
	|	ПеремещениеТоваровТовары.ЗаказНаПеремещение КАК Заказ,
	|	ПеремещениеТоваровТовары.КодСтроки КАК КодСтроки,
	|	СУММА(ПеремещениеТоваровТовары.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ПеремещениеТоваров
	|ИЗ
	|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
	|ГДЕ
	|	ПеремещениеТоваровТовары.Ссылка = &Основание
	|
	|СГРУППИРОВАТЬ ПО
	|	ПеремещениеТоваровТовары.Упаковка,
	|	ПеремещениеТоваровТовары.Номенклатура,
	|	ПеремещениеТоваровТовары.Серия,
	|	ПеремещениеТоваровТовары.НазначениеОтправителя,
	|	ПеремещениеТоваровТовары.Назначение,
	|	ПеремещениеТоваровТовары.Характеристика,
	|	ПеремещениеТоваровТовары.СтатусУказанияСерий,
	|	ПеремещениеТоваровТовары.ЗаказНаПеремещение,
	|	ПеремещениеТоваровТовары.КодСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПеремещениеТоваровСерии.Номенклатура,
	|	ПеремещениеТоваровСерии.Характеристика,
	|	ПеремещениеТоваровСерии.Назначение,
	|	ПеремещениеТоваровСерии.НазначениеОтправителя,
	|	ПеремещениеТоваровСерии.Серия,
	|	СУММА(ПеремещениеТоваровСерии.Количество) КАК Количество
	|ПОМЕСТИТЬ ПеремещениеСерии
	|ИЗ
	|	Документ.ПеремещениеТоваров.Серии КАК ПеремещениеТоваровСерии
	|ГДЕ
	|	ПеремещениеТоваровСерии.Ссылка = &Основание
	|
	|СГРУППИРОВАТЬ ПО
	|	ПеремещениеТоваровСерии.Номенклатура,
	|	ПеремещениеТоваровСерии.Серия,
	|	ПеремещениеТоваровСерии.НазначениеОтправителя,
	|	ПеремещениеТоваровСерии.Назначение,
	|	ПеремещениеТоваровСерии.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Назначение,
	|	ВложенныйЗапрос.Упаковка,
	|	ВложенныйЗапрос.НазначениеОтправителя,
	|	ВложенныйЗапрос.Серия,
	|	ВложенныйЗапрос.СтатусУказанияСерий,
	|	ВложенныйЗапрос.КодСтроки,
	|	ВложенныйЗапрос.Заказ,
	|	ВложенныйЗапрос.КоличествоУпаковокПоАкту,
	|	ВложенныйЗапрос.КоличествоУпаковокПоОснованиюАкт,
	|	ВложенныйЗапрос.КоличествоУпаковокОснование,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоУпаковокПоАкту = ВложенныйЗапрос.КоличествоУпаковокОснование
	|				И ВложенныйЗапрос.КоличествоУпаковокПоОснованиюАкт = ВложенныйЗапрос.КоличествоУпаковокОснование
	|			ТОГДА ""ИзмененияНеТребуются""
	|		КОГДА ВложенныйЗапрос.КоличествоУпаковокПоАкту = ВложенныйЗапрос.КоличествоУпаковокОснование
	|				И ВложенныйЗапрос.КоличествоУпаковокПоОснованиюАкт <> ВложенныйЗапрос.КоличествоУпаковокОснование
	|			ТОГДА ""ИзмененияВыполнены""
	|		КОГДА ВложенныйЗапрос.КоличествоУпаковокПоОснованиюАкт = ВложенныйЗапрос.КоличествоУпаковокОснование
	|				И ВложенныйЗапрос.КоличествоУпаковокПоАкту <> ВложенныйЗапрос.КоличествоУпаковокОснование
	|			ТОГДА ""ТребуютсяИзменения""
	|		ИНАЧЕ ""ОснованиеНеСоответствуетАкту""
	|	КОНЕЦ КАК СостояниеСтроки
	|ПОМЕСТИТЬ ТоварыСостояния
	|ИЗ
	|	(ВЫБРАТЬ
	|		АктОРасхожденияПослеПеремещенияТовары.Номенклатура КАК Номенклатура,
	|		АктОРасхожденияПослеПеремещенияТовары.Характеристика КАК Характеристика,
	|		АктОРасхожденияПослеПеремещенияТовары.Назначение КАК Назначение,
	|		АктОРасхожденияПослеПеремещенияТовары.Упаковка КАК Упаковка,
	|		АктОРасхожденияПослеПеремещенияТовары.НазначениеОтправителя КАК НазначениеОтправителя,
	|		АктОРасхожденияПослеПеремещенияТовары.Серия КАК Серия,
	|		АктОРасхожденияПослеПеремещенияТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|		АктОРасхожденияПослеПеремещенияТовары.КодСтроки КАК КодСтроки,
	|		АктОРасхожденияПослеПеремещенияТовары.Заказ КАК Заказ,
	|		СУММА(АктОРасхожденияПослеПеремещенияТовары.КоличествоУпаковок) КАК КоличествоУпаковокПоАкту,
	|		СУММА(АктОРасхожденияПослеПеремещенияТовары.КоличествоУпаковокПоДокументу) КАК КоличествоУпаковокПоОснованиюАкт,
	|		СУММА(ЕСТЬNULL(ПеремещениеТоваровТовары.КоличествоУпаковок, 0)) КАК КоличествоУпаковокОснование
	|	ИЗ
	|		АктОРасхожденияПослеПеремещения КАК АктОРасхожденияПослеПеремещенияТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПеремещениеТоваров КАК ПеремещениеТоваровТовары
	|			ПО АктОРасхожденияПослеПеремещенияТовары.Номенклатура = ПеремещениеТоваровТовары.Номенклатура
	|				И АктОРасхожденияПослеПеремещенияТовары.Характеристика = ПеремещениеТоваровТовары.Характеристика
	|				И АктОРасхожденияПослеПеремещенияТовары.Назначение = ПеремещениеТоваровТовары.Назначение
	|				И АктОРасхожденияПослеПеремещенияТовары.Упаковка = ПеремещениеТоваровТовары.Упаковка
	|				И АктОРасхожденияПослеПеремещенияТовары.НазначениеОтправителя = ПеремещениеТоваровТовары.НазначениеОтправителя
	|				И АктОРасхожденияПослеПеремещенияТовары.СтатусУказанияСерий = ПеремещениеТоваровТовары.СтатусУказанияСерий
	|				И АктОРасхожденияПослеПеремещенияТовары.Серия = ПеремещениеТоваровТовары.Серия
	|				И АктОРасхожденияПослеПеремещенияТовары.КодСтроки = ПеремещениеТоваровТовары.КодСтроки
	|				И АктОРасхожденияПослеПеремещенияТовары.Заказ = ПеремещениеТоваровТовары.Заказ
	|	
	|	СГРУППИРОВАТЬ ПО
	|		АктОРасхожденияПослеПеремещенияТовары.Назначение,
	|		АктОРасхожденияПослеПеремещенияТовары.Характеристика,
	|		АктОРасхожденияПослеПеремещенияТовары.Серия,
	|		АктОРасхожденияПослеПеремещенияТовары.Упаковка,
	|		АктОРасхожденияПослеПеремещенияТовары.Номенклатура,
	|		АктОРасхожденияПослеПеремещенияТовары.НазначениеОтправителя,
	|		АктОРасхожденияПослеПеремещенияТовары.СтатусУказанияСерий,
	|		АктОРасхожденияПослеПеремещенияТовары.КодСтроки,
	|		АктОРасхожденияПослеПеремещенияТовары.Заказ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПеремещениеТоваровТовары.Номенклатура,
	|		ПеремещениеТоваровТовары.Характеристика,
	|		ПеремещениеТоваровТовары.Назначение,
	|		ПеремещениеТоваровТовары.Упаковка,
	|		ПеремещениеТоваровТовары.НазначениеОтправителя,
	|		ПеремещениеТоваровТовары.Серия,
	|		ПеремещениеТоваровТовары.СтатусУказанияСерий,
	|		ПеремещениеТоваровТовары.КодСтроки,
	|		ПеремещениеТоваровТовары.Заказ,
	|		СУММА(0),
	|		СУММА(0),
	|		СУММА(ПеремещениеТоваровТовары.КоличествоУпаковок)
	|	ИЗ
	|		ПеремещениеТоваров КАК ПеремещениеТоваровТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ АктОРасхожденияПослеПеремещения КАК АктОРасхожденияПослеПеремещенияТовары
	|			ПО ПеремещениеТоваровТовары.Номенклатура = АктОРасхожденияПослеПеремещенияТовары.Номенклатура
	|				И ПеремещениеТоваровТовары.Характеристика = АктОРасхожденияПослеПеремещенияТовары.Характеристика
	|				И ПеремещениеТоваровТовары.Назначение = АктОРасхожденияПослеПеремещенияТовары.Назначение
	|				И ПеремещениеТоваровТовары.Упаковка = АктОРасхожденияПослеПеремещенияТовары.Упаковка
	|				И ПеремещениеТоваровТовары.НазначениеОтправителя = АктОРасхожденияПослеПеремещенияТовары.НазначениеОтправителя
	|				И ПеремещениеТоваровТовары.Серия = АктОРасхожденияПослеПеремещенияТовары.Серия
	|				И ПеремещениеТоваровТовары.СтатусУказанияСерий = АктОРасхожденияПослеПеремещенияТовары.СтатусУказанияСерий
	|				И ПеремещениеТоваровТовары.КодСтроки = АктОРасхожденияПослеПеремещенияТовары.КодСтроки
	|				И ПеремещениеТоваровТовары.Заказ = АктОРасхожденияПослеПеремещенияТовары.Заказ
	|	ГДЕ
	|		АктОРасхожденияПослеПеремещенияТовары.КоличествоУпаковокПоДокументу ЕСТЬ NULL 
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПеремещениеТоваровТовары.Упаковка,
	|		ПеремещениеТоваровТовары.Номенклатура,
	|		ПеремещениеТоваровТовары.Серия,
	|		ПеремещениеТоваровТовары.Назначение,
	|		ПеремещениеТоваровТовары.НазначениеОтправителя,
	|		ПеремещениеТоваровТовары.Характеристика,
	|		ПеремещениеТоваровТовары.СтатусУказанияСерий,
	|		ПеремещениеТоваровТовары.КодСтроки,
	|		ПеремещениеТоваровТовары.Заказ) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Назначение,
	|	ВложенныйЗапрос.НазначениеОтправителя,
	|	ВложенныйЗапрос.Серия,
	|	ВложенныйЗапрос.КоличествоПоАкту,
	|	ВложенныйЗапрос.КоличествоПоОснованиюАкт,
	|	ВложенныйЗапрос.КоличествоОснование,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоПоАкту = ВложенныйЗапрос.КоличествоОснование
	|				И ВложенныйЗапрос.КоличествоПоОснованиюАкт = ВложенныйЗапрос.КоличествоОснование
	|			ТОГДА ""ИзмененияНеТребуются""
	|		КОГДА ВложенныйЗапрос.КоличествоПоАкту = ВложенныйЗапрос.КоличествоОснование
	|				И ВложенныйЗапрос.КоличествоПоОснованиюАкт <> ВложенныйЗапрос.КоличествоОснование
	|			ТОГДА ""ИзмененияВыполнены""
	|		КОГДА ВложенныйЗапрос.КоличествоПоОснованиюАкт = ВложенныйЗапрос.КоличествоОснование
	|				И ВложенныйЗапрос.КоличествоПоАкту <> ВложенныйЗапрос.КоличествоОснование
	|			ТОГДА ""ТребуютсяИзменения""
	|		ИНАЧЕ ""ОснованиеНеСоответствуетАкту""
	|	КОНЕЦ КАК СостояниеСтроки
	|ПОМЕСТИТЬ ТоварыСостоянияСерии
	|ИЗ
	|	(ВЫБРАТЬ
	|		АктОРасхожденияхСерии.Номенклатура КАК Номенклатура,
	|		АктОРасхожденияхСерии.Характеристика КАК Характеристика,
	|		АктОРасхожденияхСерии.Назначение КАК Назначение,
	|		АктОРасхожденияхСерии.НазначениеОтправителя КАК НазначениеОтправителя,
	|		АктОРасхожденияхСерии.Серия КАК Серия,
	|		СУММА(АктОРасхожденияхСерии.Количество) КАК КоличествоПоАкту,
	|		СУММА(АктОРасхожденияхСерии.КоличествоПоДокументу) КАК КоличествоПоОснованиюАкт,
	|		СУММА(ЕСТЬNULL(ПеремещениеСерии.Количество, 0)) КАК КоличествоОснование
	|	ИЗ
	|		АктОРасхожденияхСерии КАК АктОРасхожденияхСерии
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПеремещениеСерии КАК ПеремещениеСерии
	|			ПО АктОРасхожденияхСерии.Номенклатура = ПеремещениеСерии.Номенклатура
	|				И АктОРасхожденияхСерии.Характеристика = ПеремещениеСерии.Характеристика
	|				И АктОРасхожденияхСерии.Назначение = ПеремещениеСерии.Назначение
	|				И АктОРасхожденияхСерии.НазначениеОтправителя = ПеремещениеСерии.НазначениеОтправителя
	|				И АктОРасхожденияхСерии.Серия = ПеремещениеСерии.Серия
	|	
	|	СГРУППИРОВАТЬ ПО
	|		АктОРасхожденияхСерии.Назначение,
	|		АктОРасхожденияхСерии.Характеристика,
	|		АктОРасхожденияхСерии.Серия,
	|		АктОРасхожденияхСерии.НазначениеОтправителя,
	|		АктОРасхожденияхСерии.Номенклатура
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПеремещениеСерии.Номенклатура,
	|		ПеремещениеСерии.Характеристика,
	|		ПеремещениеСерии.Назначение,
	|		ПеремещениеСерии.НазначениеОтправителя,
	|		ПеремещениеСерии.Серия,
	|		СУММА(0),
	|		СУММА(0),
	|		СУММА(ПеремещениеСерии.Количество)
	|	ИЗ
	|		ПеремещениеСерии КАК ПеремещениеСерии
	|			ЛЕВОЕ СОЕДИНЕНИЕ АктОРасхожденияхСерии КАК АктОРасхожденияхСерии
	|			ПО ПеремещениеСерии.Номенклатура = АктОРасхожденияхСерии.Номенклатура
	|				И ПеремещениеСерии.Характеристика = АктОРасхожденияхСерии.Характеристика
	|				И ПеремещениеСерии.Назначение = АктОРасхожденияхСерии.Назначение
	|				И ПеремещениеСерии.НазначениеОтправителя = АктОРасхожденияхСерии.НазначениеОтправителя
	|				И ПеремещениеСерии.Серия = АктОРасхожденияхСерии.Серия
	|	ГДЕ
	|		АктОРасхожденияхСерии.КоличествоПоДокументу ЕСТЬ NULL 
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПеремещениеСерии.Номенклатура,
	|		ПеремещениеСерии.Серия,
	|		ПеремещениеСерии.НазначениеОтправителя,
	|		ПеремещениеСерии.Назначение,
	|		ПеремещениеСерии.Характеристика) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыСостояния.СостояниеСтроки
	|ИЗ
	|	ТоварыСостояния КАК ТоварыСостояния
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыСостоянияСерии.СостояниеСтроки
	|ИЗ
	|	ТоварыСостоянияСерии КАК ТоварыСостоянияСерии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСостояния.Номенклатура,
	|	ТоварыСостояния.Характеристика,
	|	ТоварыСостояния.Назначение,
	|	ТоварыСостояния.Упаковка,
	|	ТоварыСостояния.НазначениеОтправителя,
	|	ТоварыСостояния.СтатусУказанияСерий,
	|	ТоварыСостояния.Серия,
	|	ТоварыСостояния.КодСтроки,
	|	ТоварыСостояния.Заказ КАК ЗаказНаПеремещение,
	|	ТоварыСостояния.КоличествоУпаковокПоАкту,
	|	ТоварыСостояния.КоличествоУпаковокПоОснованиюАкт,
	|	ТоварыСостояния.КоличествоУпаковокОснование
	|ИЗ
	|	ТоварыСостояния КАК ТоварыСостояния
	|ГДЕ
	|	ТоварыСостояния.СостояниеСтроки = ""ТребуютсяИзменения""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСостоянияСерии.Номенклатура,
	|	ТоварыСостоянияСерии.Характеристика,
	|	ТоварыСостоянияСерии.Назначение,
	|	ТоварыСостоянияСерии.НазначениеОтправителя,
	|	ТоварыСостоянияСерии.Серия,
	|	ТоварыСостоянияСерии.КоличествоПоАкту,
	|	ТоварыСостоянияСерии.КоличествоПоОснованиюАкт,
	|	ТоварыСостоянияСерии.КоличествоОснование
	|ИЗ
	|	ТоварыСостоянияСерии КАК ТоварыСостоянияСерии
	|ГДЕ
	|	ТоварыСостоянияСерии.СостояниеСтроки = ""ТребуютсяИзменения""";
	
КонецФункции

Функция ТекстЗапросаТабличныеЧастиАктаОРасхожденияхПослеОтгрузкиИРеализации(АктОРасхождениях, Основание, СтруктураВозврата)

	Возврат "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АктОРасхожденияхПослеОтгрузкиТовары.Номенклатура КАК Номенклатура,
	|	АктОРасхожденияхПослеОтгрузкиТовары.Характеристика КАК Характеристика,
	|	АктОРасхожденияхПослеОтгрузкиТовары.Назначение КАК Назначение,
	|	АктОРасхожденияхПослеОтгрузкиТовары.Упаковка КАК Упаковка,
	|	АктОРасхожденияхПослеОтгрузкиТовары.ЗаказКлиента КАК ЗаказКлиента,
	|	АктОРасхожденияхПослеОтгрузкиТовары.КодСтроки КАК КодСтроки,
	|	АктОРасхожденияхПослеОтгрузкиТовары.Склад КАК Склад,
	|	АктОРасхожденияхПослеОтгрузкиТовары.Серия КАК Серия,
	|	АктОРасхожденияхПослеОтгрузкиТовары.СтавкаНДС КАК СтавкаНДС,
	|	МАКСИМУМ(АктОРасхожденияхПослеОтгрузкиТовары.Цена) КАК Цена,
	|	МАКСИМУМ(АктОРасхожденияхПослеОтгрузкиТовары.ВидЦены) КАК ВидЦены,
	|	СУММА(ВЫБОР
	|			КОГДА АктОРасхожденияхПослеОтгрузкиТовары.Действие В (ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ПокупкаПерепоставленного), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ВозвратПерепоставленного), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ДопоставкаНеТребуется), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ТребуетсяДопоставка))
	|				ТОГДА АктОРасхожденияхПослеОтгрузкиТовары.КоличествоУпаковок
	|			ИНАЧЕ АктОРасхожденияхПослеОтгрузкиТовары.КоличествоУпаковокПоДокументу
	|		КОНЕЦ) КАК КоличествоУпаковок,
	|	СУММА(АктОРасхожденияхПослеОтгрузкиТовары.КоличествоУпаковокПоДокументу) КАК КоличествоУпаковокПоДокументу
	|ПОМЕСТИТЬ АктОРасхожденияПриОтгрузке
	|ИЗ
	|	Документ.АктОРасхожденияхПослеОтгрузки.Товары КАК АктОРасхожденияхПослеОтгрузкиТовары
	|ГДЕ
	|	АктОРасхожденияхПослеОтгрузкиТовары.Ссылка = &АктОРасхождениях
	|	И АктОРасхожденияхПослеОтгрузкиТовары.Реализация = &Основание
	|
	|СГРУППИРОВАТЬ ПО
	|	АктОРасхожденияхПослеОтгрузкиТовары.Склад,
	|	АктОРасхожденияхПослеОтгрузкиТовары.Упаковка,
	|	АктОРасхожденияхПослеОтгрузкиТовары.Серия,
	|	АктОРасхожденияхПослеОтгрузкиТовары.СтавкаНДС,
	|	АктОРасхожденияхПослеОтгрузкиТовары.Номенклатура,
	|	АктОРасхожденияхПослеОтгрузкиТовары.Назначение,
	|	АктОРасхожденияхПослеОтгрузкиТовары.Характеристика,
	|	АктОРасхожденияхПослеОтгрузкиТовары.ЗаказКлиента,
	|	АктОРасхожденияхПослеОтгрузкиТовары.КодСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АктОРасхожденияхПослеОтгрузкиСерии.Серия КАК Серия,
	|	АктОРасхожденияхПослеОтгрузкиСерии.Номенклатура КАК Номенклатура,
	|	АктОРасхожденияхПослеОтгрузкиСерии.Характеристика КАК Характеристика,
	|	АктОРасхожденияхПослеОтгрузкиСерии.Назначение КАК Назначение,
	|	АктОРасхожденияхПослеОтгрузкиСерии.Склад КАК Склад,
	|	СУММА(ВЫБОР
	|			КОГДА АктОРасхожденияхПослеОтгрузкиСерии.Действие В (ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ПокупкаПерепоставленного), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ВозвратПерепоставленного), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ДопоставкаНеТребуется), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ТребуетсяДопоставка))
	|				ТОГДА АктОРасхожденияхПослеОтгрузкиСерии.Количество
	|			ИНАЧЕ АктОРасхожденияхПослеОтгрузкиСерии.КоличествоПоДокументу
	|		КОНЕЦ) КАК Количество,
	|	СУММА(АктОРасхожденияхПослеОтгрузкиСерии.КоличествоПоДокументу) КАК КоличествоПоДокументу
	|ПОМЕСТИТЬ АктОРасхожденияхСерии
	|ИЗ
	|	Документ.АктОРасхожденияхПослеОтгрузки.Серии КАК АктОРасхожденияхПослеОтгрузкиСерии
	|ГДЕ
	|	АктОРасхожденияхПослеОтгрузкиСерии.Ссылка = &АктОРасхождениях
	|	И АктОРасхожденияхПослеОтгрузкиСерии.Реализация = &Основание
	|
	|СГРУППИРОВАТЬ ПО
	|	АктОРасхожденияхПослеОтгрузкиСерии.Склад,
	|	АктОРасхожденияхПослеОтгрузкиСерии.Серия,
	|	АктОРасхожденияхПослеОтгрузкиСерии.Номенклатура,
	|	АктОРасхожденияхПослеОтгрузкиСерии.Назначение,
	|	АктОРасхожденияхПослеОтгрузкиСерии.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслугТовары.Номенклатура,
	|	РеализацияТоваровУслугТовары.Характеристика,
	|	РеализацияТоваровУслугТовары.Назначение,
	|	РеализацияТоваровУслугТовары.Упаковка,
	|	РеализацияТоваровУслугТовары.ЗаказКлиента,
	|	РеализацияТоваровУслугТовары.КодСтроки,
	|	РеализацияТоваровУслугТовары.Склад,
	|	РеализацияТоваровУслугТовары.Серия,
	|	РеализацияТоваровУслугТовары.СтавкаНДС,
	|	СУММА(РеализацияТоваровУслугТовары.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ РеализацияТоваровУслуг
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|ГДЕ
	|	РеализацияТоваровУслугТовары.Ссылка = &Основание
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслугТовары.Упаковка,
	|	РеализацияТоваровУслугТовары.Номенклатура,
	|	РеализацияТоваровУслугТовары.Серия,
	|	РеализацияТоваровУслугТовары.Склад,
	|	РеализацияТоваровУслугТовары.ЗаказКлиента,
	|	РеализацияТоваровУслугТовары.Назначение,
	|	РеализацияТоваровУслугТовары.Характеристика,
	|	РеализацияТоваровУслугТовары.КодСтроки,
	|	РеализацияТоваровУслугТовары.СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РеализацияТоваровУслугСерии.Номенклатура,
	|	РеализацияТоваровУслугСерии.Характеристика,
	|	РеализацияТоваровУслугСерии.Назначение,
	|	РеализацияТоваровУслугСерии.Склад,
	|	РеализацияТоваровУслугСерии.Серия,
	|	СУММА(РеализацияТоваровУслугСерии.Количество) КАК Количество
	|ПОМЕСТИТЬ РеализацияТоваровУслугСерии
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Серии КАК РеализацияТоваровУслугСерии
	|ГДЕ
	|	РеализацияТоваровУслугСерии.Ссылка = &Основание
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслугСерии.Номенклатура,
	|	РеализацияТоваровУслугСерии.Серия,
	|	РеализацияТоваровУслугСерии.Склад,
	|	РеализацияТоваровУслугСерии.Назначение,
	|	РеализацияТоваровУслугСерии.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Назначение,
	|	ВложенныйЗапрос.Упаковка,
	|	ВложенныйЗапрос.ЗаказКлиента,
	|	ВложенныйЗапрос.КодСтроки,
	|	ВложенныйЗапрос.Склад,
	|	ВложенныйЗапрос.Серия,
	|	ВложенныйЗапрос.СтавкаНДС,
	|	ВложенныйЗапрос.Цена,
	|	ВложенныйЗапрос.ВидЦены,
	|	ВложенныйЗапрос.СтавкаНДС,
	|	ВложенныйЗапрос.КоличествоУпаковокПоАкту,
	|	ВложенныйЗапрос.КоличествоУпаковокПоОснованиюАкт,
	|	ВложенныйЗапрос.КоличествоУпаковокОснование,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоУпаковокПоАкту = ВложенныйЗапрос.КоличествоУпаковокОснование
	|				И ВложенныйЗапрос.КоличествоУпаковокПоОснованиюАкт = ВложенныйЗапрос.КоличествоУпаковокОснование
	|			ТОГДА ""ИзмененияНеТребуются""
	|		КОГДА ВложенныйЗапрос.КоличествоУпаковокПоАкту = ВложенныйЗапрос.КоличествоУпаковокОснование
	|				И ВложенныйЗапрос.КоличествоУпаковокПоОснованиюАкт <> ВложенныйЗапрос.КоличествоУпаковокОснование
	|			ТОГДА ""ИзмененияВыполнены""
	|		КОГДА ВложенныйЗапрос.КоличествоУпаковокПоОснованиюАкт = ВложенныйЗапрос.КоличествоУпаковокОснование
	|				И ВложенныйЗапрос.КоличествоУпаковокПоАкту <> ВложенныйЗапрос.КоличествоУпаковокОснование
	|			ТОГДА ""ТребуютсяИзменения""
	|		ИНАЧЕ ""ОснованиеНеСоответствуетАкту""
	|	КОНЕЦ КАК СостояниеСтроки
	|ПОМЕСТИТЬ ТоварыСостояния
	|ИЗ
	|	(ВЫБРАТЬ
	|		АктОРасхожденияхПослеОтгрузкиТовары.Номенклатура КАК Номенклатура,
	|		АктОРасхожденияхПослеОтгрузкиТовары.Характеристика КАК Характеристика,
	|		АктОРасхожденияхПослеОтгрузкиТовары.Назначение КАК Назначение,
	|		АктОРасхожденияхПослеОтгрузкиТовары.Упаковка КАК Упаковка,
	|		АктОРасхожденияхПослеОтгрузкиТовары.ЗаказКлиента КАК ЗаказКлиента,
	|		АктОРасхожденияхПослеОтгрузкиТовары.КодСтроки КАК КодСтроки,
	|		АктОРасхожденияхПослеОтгрузкиТовары.Склад КАК Склад,
	|		АктОРасхожденияхПослеОтгрузкиТовары.Серия КАК Серия,
	|		АктОРасхожденияхПослеОтгрузкиТовары.СтавкаНДС КАК СтавкаНДС,
	|		МАКСИМУМ(АктОРасхожденияхПослеОтгрузкиТовары.Цена) КАК Цена,
	|		МАКСИМУМ(АктОРасхожденияхПослеОтгрузкиТовары.ВидЦены) КАК ВидЦены,
	|		СУММА(АктОРасхожденияхПослеОтгрузкиТовары.КоличествоУпаковок) КАК КоличествоУпаковокПоАкту,
	|		СУММА(АктОРасхожденияхПослеОтгрузкиТовары.КоличествоУпаковокПоДокументу) КАК КоличествоУпаковокПоОснованиюАкт,
	|		СУММА(ЕСТЬNULL(РеализацияТоваровУслугТовары.КоличествоУпаковок, 0)) КАК КоличествоУпаковокОснование
	|	ИЗ
	|		АктОРасхожденияПриОтгрузке КАК АктОРасхожденияхПослеОтгрузкиТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ РеализацияТоваровУслуг КАК РеализацияТоваровУслугТовары
	|			ПО АктОРасхожденияхПослеОтгрузкиТовары.Номенклатура = РеализацияТоваровУслугТовары.Номенклатура
	|				И АктОРасхожденияхПослеОтгрузкиТовары.Характеристика = РеализацияТоваровУслугТовары.Характеристика
	|				И АктОРасхожденияхПослеОтгрузкиТовары.Назначение = РеализацияТоваровУслугТовары.Назначение
	|				И АктОРасхожденияхПослеОтгрузкиТовары.Упаковка = РеализацияТоваровУслугТовары.Упаковка
	|				И АктОРасхожденияхПослеОтгрузкиТовары.ЗаказКлиента = РеализацияТоваровУслугТовары.ЗаказКлиента
	|				И АктОРасхожденияхПослеОтгрузкиТовары.КодСтроки = РеализацияТоваровУслугТовары.КодСтроки
	|				И АктОРасхожденияхПослеОтгрузкиТовары.Склад = РеализацияТоваровУслугТовары.Склад
	|				И АктОРасхожденияхПослеОтгрузкиТовары.Серия = РеализацияТоваровУслугТовары.Серия
	|				И АктОРасхожденияхПослеОтгрузкиТовары.СтавкаНДС = РеализацияТоваровУслугТовары.СтавкаНДС
	|	
	|	СГРУППИРОВАТЬ ПО
	|		АктОРасхожденияхПослеОтгрузкиТовары.Назначение,
	|		АктОРасхожденияхПослеОтгрузкиТовары.Характеристика,
	|		АктОРасхожденияхПослеОтгрузкиТовары.Серия,
	|		АктОРасхожденияхПослеОтгрузкиТовары.Упаковка,
	|		АктОРасхожденияхПослеОтгрузкиТовары.Склад,
	|		АктОРасхожденияхПослеОтгрузкиТовары.ЗаказКлиента,
	|		АктОРасхожденияхПослеОтгрузкиТовары.Номенклатура,
	|		АктОРасхожденияхПослеОтгрузкиТовары.КодСтроки,
	|		АктОРасхожденияхПослеОтгрузкиТовары.СтавкаНДС
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РеализацияТоваровУслугТовары.Номенклатура,
	|		РеализацияТоваровУслугТовары.Характеристика,
	|		РеализацияТоваровУслугТовары.Назначение,
	|		РеализацияТоваровУслугТовары.Упаковка,
	|		РеализацияТоваровУслугТовары.ЗаказКлиента,
	|		РеализацияТоваровУслугТовары.КодСтроки,
	|		РеализацияТоваровУслугТовары.Склад,
	|		РеализацияТоваровУслугТовары.Серия,
	|		РеализацияТоваровУслугТовары.СтавкаНДС,
	|		0,
	|		МАКСИМУМ(ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)),
	|		СУММА(0),
	|		СУММА(0),
	|		СУММА(РеализацияТоваровУслугТовары.КоличествоУпаковок)
	|	ИЗ
	|		РеализацияТоваровУслуг КАК РеализацияТоваровУслугТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ АктОРасхожденияПриОтгрузке КАК АктОРасхожденияхПослеОтгрузкиТовары
	|			ПО РеализацияТоваровУслугТовары.Номенклатура = АктОРасхожденияхПослеОтгрузкиТовары.Номенклатура
	|				И РеализацияТоваровУслугТовары.Характеристика = АктОРасхожденияхПослеОтгрузкиТовары.Характеристика
	|				И РеализацияТоваровУслугТовары.Назначение = АктОРасхожденияхПослеОтгрузкиТовары.Назначение
	|				И РеализацияТоваровУслугТовары.Упаковка = АктОРасхожденияхПослеОтгрузкиТовары.Упаковка
	|				И РеализацияТоваровУслугТовары.ЗаказКлиента = АктОРасхожденияхПослеОтгрузкиТовары.ЗаказКлиента
	|				И РеализацияТоваровУслугТовары.КодСтроки = АктОРасхожденияхПослеОтгрузкиТовары.КодСтроки
	|				И РеализацияТоваровУслугТовары.Склад = АктОРасхожденияхПослеОтгрузкиТовары.Склад
	|				И РеализацияТоваровУслугТовары.Серия = АктОРасхожденияхПослеОтгрузкиТовары.Серия
	|				И РеализацияТоваровУслугТовары.СтавкаНДС = АктОРасхожденияхПослеОтгрузкиТовары.СтавкаНДС
	|	ГДЕ
	|		АктОРасхожденияхПослеОтгрузкиТовары.КоличествоУпаковокПоДокументу ЕСТЬ NULL 
	|	
	|	СГРУППИРОВАТЬ ПО
	|		РеализацияТоваровУслугТовары.Упаковка,
	|		РеализацияТоваровУслугТовары.Номенклатура,
	|		РеализацияТоваровУслугТовары.Серия,
	|		РеализацияТоваровУслугТовары.Склад,
	|		РеализацияТоваровУслугТовары.ЗаказКлиента,
	|		РеализацияТоваровУслугТовары.Назначение,
	|		РеализацияТоваровУслугТовары.Характеристика,
	|		РеализацияТоваровУслугТовары.КодСтроки,
	|		РеализацияТоваровУслугТовары.СтавкаНДС) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Назначение,
	|	ВложенныйЗапрос.Склад,
	|	ВложенныйЗапрос.Серия,
	|	ВложенныйЗапрос.КоличествоПоАкту,
	|	ВложенныйЗапрос.КоличествоПоОснованиюАкт,
	|	ВложенныйЗапрос.КоличествоОснование,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоПоАкту = ВложенныйЗапрос.КоличествоОснование
	|				И ВложенныйЗапрос.КоличествоПоОснованиюАкт = ВложенныйЗапрос.КоличествоОснование
	|			ТОГДА ""ИзмененияНеТребуются""
	|		КОГДА ВложенныйЗапрос.КоличествоПоАкту = ВложенныйЗапрос.КоличествоОснование
	|				И ВложенныйЗапрос.КоличествоПоОснованиюАкт <> ВложенныйЗапрос.КоличествоОснование
	|			ТОГДА ""ИзмененияВыполнены""
	|		КОГДА ВложенныйЗапрос.КоличествоПоОснованиюАкт = ВложенныйЗапрос.КоличествоОснование
	|				И ВложенныйЗапрос.КоличествоПоАкту <> ВложенныйЗапрос.КоличествоОснование
	|			ТОГДА ""ТребуютсяИзменения""
	|		ИНАЧЕ ""ОснованиеНеСоответствуетАкту""
	|	КОНЕЦ КАК СостояниеСтроки
	|ПОМЕСТИТЬ ТоварыСостоянияСерии
	|ИЗ
	|	(ВЫБРАТЬ
	|		АктОРасхожденияхСерии.Номенклатура КАК Номенклатура,
	|		АктОРасхожденияхСерии.Характеристика КАК Характеристика,
	|		АктОРасхожденияхСерии.Назначение КАК Назначение,
	|		АктОРасхожденияхСерии.Склад КАК Склад,
	|		АктОРасхожденияхСерии.Серия КАК Серия,
	|		СУММА(АктОРасхожденияхСерии.Количество) КАК КоличествоПоАкту,
	|		СУММА(АктОРасхожденияхСерии.КоличествоПоДокументу) КАК КоличествоПоОснованиюАкт,
	|		СУММА(ЕСТЬNULL(РеализацияТоваровУслугСерии.Количество, 0)) КАК КоличествоОснование
	|	ИЗ
	|		АктОРасхожденияхСерии КАК АктОРасхожденияхСерии
	|			ЛЕВОЕ СОЕДИНЕНИЕ РеализацияТоваровУслугСерии КАК РеализацияТоваровУслугСерии
	|			ПО АктОРасхожденияхСерии.Номенклатура = РеализацияТоваровУслугСерии.Номенклатура
	|				И АктОРасхожденияхСерии.Характеристика = РеализацияТоваровУслугСерии.Характеристика
	|				И АктОРасхожденияхСерии.Назначение = РеализацияТоваровУслугСерии.Назначение
	|				И АктОРасхожденияхСерии.Склад = РеализацияТоваровУслугСерии.Склад
	|				И АктОРасхожденияхСерии.Серия = РеализацияТоваровУслугСерии.Серия
	|	
	|	СГРУППИРОВАТЬ ПО
	|		АктОРасхожденияхСерии.Назначение,
	|		АктОРасхожденияхСерии.Характеристика,
	|		АктОРасхожденияхСерии.Серия,
	|		АктОРасхожденияхСерии.Склад,
	|		АктОРасхожденияхСерии.Номенклатура
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РеализацияТоваровУслугСерии.Номенклатура,
	|		РеализацияТоваровУслугСерии.Характеристика,
	|		РеализацияТоваровУслугСерии.Назначение,
	|		РеализацияТоваровУслугСерии.Склад,
	|		РеализацияТоваровУслугСерии.Серия,
	|		СУММА(0),
	|		СУММА(0),
	|		СУММА(РеализацияТоваровУслугСерии.Количество)
	|	ИЗ
	|		РеализацияТоваровУслугСерии КАК РеализацияТоваровУслугСерии
	|			ЛЕВОЕ СОЕДИНЕНИЕ АктОРасхожденияхСерии КАК АктОРасхожденияхСерии
	|			ПО РеализацияТоваровУслугСерии.Номенклатура = АктОРасхожденияхСерии.Номенклатура
	|				И РеализацияТоваровУслугСерии.Характеристика = АктОРасхожденияхСерии.Характеристика
	|				И РеализацияТоваровУслугСерии.Назначение = АктОРасхожденияхСерии.Назначение
	|				И РеализацияТоваровУслугСерии.Склад = АктОРасхожденияхСерии.Склад
	|				И РеализацияТоваровУслугСерии.Серия = АктОРасхожденияхСерии.Серия
	|	ГДЕ
	|		АктОРасхожденияхСерии.КоличествоПоДокументу ЕСТЬ NULL 
	|	
	|	СГРУППИРОВАТЬ ПО
	|		РеализацияТоваровУслугСерии.Номенклатура,
	|		РеализацияТоваровУслугСерии.Серия,
	|		РеализацияТоваровУслугСерии.Склад,
	|		РеализацияТоваровУслугСерии.Назначение,
	|		РеализацияТоваровУслугСерии.Характеристика) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыСостояния.СостояниеСтроки
	|ИЗ
	|	ТоварыСостояния КАК ТоварыСостояния
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыСостоянияСерии.СостояниеСтроки
	|ИЗ
	|	ТоварыСостоянияСерии КАК ТоварыСостоянияСерии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСостояния.Номенклатура,
	|	ТоварыСостояния.Характеристика,
	|	ТоварыСостояния.Назначение,
	|	ТоварыСостояния.Упаковка,
	|	ТоварыСостояния.ЗаказКлиента,
	|	ТоварыСостояния.КодСтроки,
	|	ТоварыСостояния.Склад,
	|	ТоварыСостояния.Серия,
	|	ТоварыСостояния.СтавкаНДС,
	|	ТоварыСостояния.Цена,
	|	ТоварыСостояния.ВидЦены,
	|	ТоварыСостояния.КоличествоУпаковокПоАкту,
	|	ТоварыСостояния.КоличествоУпаковокПоОснованиюАкт,
	|	ТоварыСостояния.КоличествоУпаковокОснование
	|ИЗ
	|	ТоварыСостояния КАК ТоварыСостояния
	|ГДЕ
	|	ТоварыСостояния.СостояниеСтроки = ""ТребуютсяИзменения""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСостоянияСерии.Номенклатура,
	|	ТоварыСостоянияСерии.Характеристика,
	|	ТоварыСостоянияСерии.Назначение,
	|	ТоварыСостоянияСерии.Склад,
	|	ТоварыСостоянияСерии.Серия,
	|	ТоварыСостоянияСерии.КоличествоПоАкту,
	|	ТоварыСостоянияСерии.КоличествоПоОснованиюАкт,
	|	ТоварыСостоянияСерии.КоличествоОснование
	|ИЗ
	|	ТоварыСостоянияСерии КАК ТоварыСостоянияСерии
	|ГДЕ
	|	ТоварыСостоянияСерии.СостояниеСтроки = ""ТребуютсяИзменения""";
	
КонецФункции

Функция ТекстЗапросаТабличныеЧастиАктаОРасхожденияхПослеПриемкиИВозвратаОтКлиента(АктОРасхождениях, Основание, СтруктураВозврата, ИзменениеДокумента)
	
	Возврат "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АктОРасхожденияхПослеПриемкиТовары.Номенклатура КАК Номенклатура,
	|	АктОРасхожденияхПослеПриемкиТовары.Характеристика КАК Характеристика,
	|	АктОРасхожденияхПослеПриемкиТовары.Упаковка КАК Упаковка,
	|	АктОРасхожденияхПослеПриемкиТовары.Серия КАК Серия,
	|	АктОРасхожденияхПослеПриемкиТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	АктОРасхожденияхПослеПриемкиТовары.КодСтроки КАК КодСтроки,
	|	АктОРасхожденияхПослеПриемкиТовары.ДокументРеализации КАК ДокументРеализации,
	|	АктОРасхожденияхПослеПриемкиТовары.Склад КАК Склад,
	|	АктОРасхожденияхПослеПриемкиТовары.СтавкаНДС КАК СтавкаНДС,
	|	МАКСИМУМ(АктОРасхожденияхПослеПриемкиТовары.Цена) КАК Цена,
	|	СУММА(ВЫБОР
	|			КОГДА АктОРасхожденияхПослеПриемкиТовары.Действие В (ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленноеИВернуть), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленное), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачу), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку))
	|				ТОГДА АктОРасхожденияхПослеПриемкиТовары.КоличествоУпаковок
	|			ИНАЧЕ АктОРасхожденияхПослеПриемкиТовары.КоличествоУпаковокПоДокументу
	|		КОНЕЦ) КАК КоличествоУпаковок,
	|	СУММА(АктОРасхожденияхПослеПриемкиТовары.КоличествоУпаковокПоДокументу) КАК КоличествоУпаковокПоДокументу
	|ПОМЕСТИТЬ АктОРасхожденияхТовары
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки.Товары КАК АктОРасхожденияхПослеПриемкиТовары
	|ГДЕ
	|	АктОРасхожденияхПослеПриемкиТовары.Ссылка = &АктОРасхождениях
	|	И АктОРасхожденияхПослеПриемкиТовары.ДокументОснование = &Основание
	|
	|СГРУППИРОВАТЬ ПО
	|	АктОРасхожденияхПослеПриемкиТовары.Упаковка,
	|	АктОРасхожденияхПослеПриемкиТовары.Серия,
	|	АктОРасхожденияхПослеПриемкиТовары.СтатусУказанияСерий,
	|	АктОРасхожденияхПослеПриемкиТовары.СтавкаНДС,
	|	АктОРасхожденияхПослеПриемкиТовары.Номенклатура,
	|	АктОРасхожденияхПослеПриемкиТовары.Характеристика,
	|	АктОРасхожденияхПослеПриемкиТовары.ДокументРеализации,
	|	АктОРасхожденияхПослеПриемкиТовары.Склад,
	|	АктОРасхожденияхПослеПриемкиТовары.КодСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////1
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АктОРасхожденияхПослеПриемкиСерии.Серия КАК Серия,
	|	АктОРасхожденияхПослеПриемкиСерии.Номенклатура КАК Номенклатура,
	|	АктОРасхожденияхПослеПриемкиСерии.Характеристика КАК Характеристика,
	|	СУММА(ВЫБОР
	|			КОГДА АктОРасхожденияхПослеПриемкиСерии.Действие В (ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленноеИВернуть), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленное), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачу), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку))
	|				ТОГДА АктОРасхожденияхПослеПриемкиСерии.Количество
	|			ИНАЧЕ АктОРасхожденияхПослеПриемкиСерии.КоличествоПоДокументу
	|		КОНЕЦ) КАК Количество,
	|	СУММА(АктОРасхожденияхПослеПриемкиСерии.КоличествоПоДокументу) КАК КоличествоПоДокументу
	|ПОМЕСТИТЬ АктОРасхожденияхСерии
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки.Серии КАК АктОРасхожденияхПослеПриемкиСерии
	|ГДЕ
	|	АктОРасхожденияхПослеПриемкиСерии.Ссылка = &АктОРасхождениях
	|	И АктОРасхожденияхПослеПриемкиСерии.ДокументОснование = &Основание
	|
	|СГРУППИРОВАТЬ ПО
	|	АктОРасхожденияхПослеПриемкиСерии.Серия,
	|	АктОРасхожденияхПослеПриемкиСерии.Номенклатура,
	|	АктОРасхожденияхПослеПриемкиСерии.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////2
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ 
	|	ВЫБОР 
	|		КОГДА ВозвратТоваровОтКлиентаТовары.Порча ТОГДА  ВозвратТоваровОтКлиентаТовары.НоменклатураОприходование
	|		ИНАЧЕ ВозвратТоваровОтКлиентаТовары.Номенклатура 
	|	КОНЕЦ КАК Номенклатура,
	|	ВЫБОР 
	|		КОГДА ВозвратТоваровОтКлиентаТовары.Порча ТОГДА  ВозвратТоваровОтКлиентаТовары.ХарактеристикаОприходование
	|		ИНАЧЕ ВозвратТоваровОтКлиентаТовары.Характеристика 
	|	КОНЕЦ КАК Характеристика,
	|	ВозвратТоваровОтКлиентаТовары.Упаковка,
	|	ВозвратТоваровОтКлиентаТовары.Серия,
	|	ВозвратТоваровОтКлиентаТовары.СтатусУказанияСерий,
	|	ВозвратТоваровОтКлиентаТовары.КодСтроки,
	|	ВозвратТоваровОтКлиентаТовары.ДокументРеализации,
	|	ВозвратТоваровОтКлиентаТовары.Ссылка.Склад,
	|	ВозвратТоваровОтКлиентаТовары.СтавкаНДС,
	|	СУММА(ВозвратТоваровОтКлиентаТовары.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ВозвратТоваровОтКлиентаТовары
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Товары КАК ВозвратТоваровОтКлиентаТовары
	|ГДЕ
	|	ВозвратТоваровОтКлиентаТовары.Ссылка = &Основание
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР 
	|		КОГДА ВозвратТоваровОтКлиентаТовары.Порча ТОГДА  ВозвратТоваровОтКлиентаТовары.НоменклатураОприходование
	|		ИНАЧЕ ВозвратТоваровОтКлиентаТовары.Номенклатура 
	|	КОНЕЦ,
	|	ВЫБОР 
	|		КОГДА ВозвратТоваровОтКлиентаТовары.Порча ТОГДА  ВозвратТоваровОтКлиентаТовары.ХарактеристикаОприходование
	|		ИНАЧЕ ВозвратТоваровОтКлиентаТовары.Характеристика 
	|	КОНЕЦ,
	|	ВозвратТоваровОтКлиентаТовары.Номенклатура,
	|	ВозвратТоваровОтКлиентаТовары.Упаковка,
	|	ВозвратТоваровОтКлиентаТовары.Серия,
	|	ВозвратТоваровОтКлиентаТовары.СтатусУказанияСерий,
	|	ВозвратТоваровОтКлиентаТовары.КодСтроки,
	|	ВозвратТоваровОтКлиентаТовары.ДокументРеализации,
	|	ВозвратТоваровОтКлиентаТовары.Ссылка.Склад,
	|	ВозвратТоваровОтКлиентаТовары.СтавкаНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////3
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество
	|ПОМЕСТИТЬ ВозвратТоваровОтКлиентаСерии
	|ИЗ 
	|	(ВЫБРАТЬ
	|		ВЫБОР 
	|			КОГДА ТаблицаТовары.Порча ТОГДА  ТаблицаСерии.НоменклатураОприходование
	|			ИНАЧЕ ТаблицаСерии.Номенклатура 
	|		КОНЕЦ                                        КАК Номенклатура,
	|		ВЫБОР 
	|			КОГДА ТаблицаТовары.Порча ТОГДА  ТаблицаСерии.ХарактеристикаОприходование
	|			ИНАЧЕ ТаблицаСерии.Характеристика 
	|		КОНЕЦ                                        КАК Характеристика,
	|		ТаблицаСерии.Серия                           КАК Серия,
	|		ТаблицаСерии.Количество                      КАК Количество,
	|		МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий)  КАК СтатусУказанияСерий
	|		ИЗ
	|		Документ.ВозвратТоваровОтКлиента.Серии КАК ТаблицаСерии
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента.Товары КАК ТаблицаТовары
	|		ПО ТаблицаСерии.Ссылка = ТаблицаТовары.Ссылка
	|			И ТаблицаСерии.Номенклатура                = ТаблицаТовары.Номенклатура
	|			И ТаблицаСерии.Характеристика              = ТаблицаТовары.Характеристика
	|			И ТаблицаСерии.НоменклатураОприходование   = ТаблицаТовары.НоменклатураОприходование
	|			И ТаблицаСерии.ХарактеристикаОприходование = ТаблицаТовары.ХарактеристикаОприходование
	|	ГДЕ
	|		ТаблицаСерии.Ссылка = &Основание
	|		И ТаблицаТовары.Ссылка = &Основание
	|		И ТаблицаСерии.Количество <> 0
	|
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаСерии.Номенклатура,
	|		ТаблицаСерии.Серия,
	|		ТаблицаТовары.Порча,
	|		ТаблицаСерии.Количество, 
	|		ТаблицаСерии.Характеристика,
	|		ТаблицаСерии.НоменклатураОприходование,
	|		ТаблицаСерии.ХарактеристикаОприходование
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ТаблицаТовары.СтатусУказанияСерий) В  (4, 6, 8, 10)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////4
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Упаковка,
	|	ВложенныйЗапрос.Серия,
	|	ВложенныйЗапрос.СтатусУказанияСерий,
	|	ВложенныйЗапрос.КодСтроки,
	|	ВложенныйЗапрос.ДокументРеализации,
	|	ВложенныйЗапрос.Цена,
	|	ВложенныйЗапрос.СтавкаНДС,
	|	ВложенныйЗапрос.КоличествоУпаковокПоАкту,
	|	ВложенныйЗапрос.КоличествоУпаковокПоОснованиюАкт,
	|	ВложенныйЗапрос.КоличествоУпаковокОснование,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоУпаковокПоАкту = ВложенныйЗапрос.КоличествоУпаковокОснование
	|				И ВложенныйЗапрос.КоличествоУпаковокПоОснованиюАкт = ВложенныйЗапрос.КоличествоУпаковокОснование
	|			ТОГДА ""ИзмененияНеТребуются""
	|		КОГДА ВложенныйЗапрос.КоличествоУпаковокПоАкту = ВложенныйЗапрос.КоличествоУпаковокОснование
	|				И ВложенныйЗапрос.КоличествоУпаковокПоОснованиюАкт <> ВложенныйЗапрос.КоличествоУпаковокОснование
	|			ТОГДА ""ИзмененияВыполнены""
	|		КОГДА ВложенныйЗапрос.КоличествоУпаковокПоОснованиюАкт = ВложенныйЗапрос.КоличествоУпаковокОснование
	|				И ВложенныйЗапрос.КоличествоУпаковокПоАкту <> ВложенныйЗапрос.КоличествоУпаковокОснование
	|			ТОГДА ""ТребуютсяИзменения""
	|		ИНАЧЕ ""ОснованиеНеСоответствуетАкту""
	|	КОНЕЦ КАК СостояниеСтроки
	|ПОМЕСТИТЬ ТоварыСостояния
	|ИЗ
	|	(ВЫБРАТЬ
	|		АктОРасхожденияхТовары.Номенклатура КАК Номенклатура,
	|		АктОРасхожденияхТовары.Характеристика КАК Характеристика,
	|		АктОРасхожденияхТовары.Упаковка КАК Упаковка,
	|		АктОРасхожденияхТовары.Серия КАК Серия,
	|		АктОРасхожденияхТовары.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|		АктОРасхожденияхТовары.КодСтроки КАК КодСтроки,
	|		АктОРасхожденияхТовары.ДокументРеализации КАК ДокументРеализации,
	|		АктОРасхожденияхТовары.Склад КАК Склад,
	|		АктОРасхожденияхТовары.СтавкаНДС КАК СтавкаНДС,
	|		МАКСИМУМ(АктОРасхожденияхТовары.Цена) КАК Цена,
	|		СУММА(АктОРасхожденияхТовары.КоличествоУпаковок) КАК КоличествоУпаковокПоАкту,
	|		СУММА(АктОРасхожденияхТовары.КоличествоУпаковокПоДокументу) КАК КоличествоУпаковокПоОснованиюАкт,
	|		СУММА(ЕСТЬNULL(ВозвратТоваровОтКлиентаТовары.КоличествоУпаковок, 0)) КАК КоличествоУпаковокОснование
	|	ИЗ
	|		АктОРасхожденияхТовары КАК АктОРасхожденияхТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВозвратТоваровОтКлиентаТовары КАК ВозвратТоваровОтКлиентаТовары
	|			ПО АктОРасхожденияхТовары.Номенклатура = ВозвратТоваровОтКлиентаТовары.Номенклатура
	|				И АктОРасхожденияхТовары.Характеристика = ВозвратТоваровОтКлиентаТовары.Характеристика
	|				И АктОРасхожденияхТовары.Упаковка = ВозвратТоваровОтКлиентаТовары.Упаковка
	|				И АктОРасхожденияхТовары.Серия = ВозвратТоваровОтКлиентаТовары.Серия
	|				И АктОРасхожденияхТовары.СтатусУказанияСерий = ВозвратТоваровОтКлиентаТовары.СтатусУказанияСерий
	|				И АктОРасхожденияхТовары.КодСтроки = ВозвратТоваровОтКлиентаТовары.КодСтроки
	|				И АктОРасхожденияхТовары.ДокументРеализации = ВозвратТоваровОтКлиентаТовары.ДокументРеализации
	|				И АктОРасхожденияхТовары.Склад = ВозвратТоваровОтКлиентаТовары.Склад
	|				И АктОРасхожденияхТовары.СтавкаНДС = ВозвратТоваровОтКлиентаТовары.СтавкаНДС
	|	
	|	СГРУППИРОВАТЬ ПО
	|		АктОРасхожденияхТовары.Характеристика,
	|		АктОРасхожденияхТовары.Серия,
	|		АктОРасхожденияхТовары.СтатусУказанияСерий,
	|		АктОРасхожденияхТовары.Упаковка,
	|		АктОРасхожденияхТовары.Номенклатура,
	|		АктОРасхожденияхТовары.КодСтроки,
	|		АктОРасхожденияхТовары.ДокументРеализации,
	|		АктОРасхожденияхТовары.Склад,
	|		АктОРасхожденияхТовары.СтавкаНДС
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВозвратТоваровОтКлиентаТовары.Номенклатура,
	|		ВозвратТоваровОтКлиентаТовары.Характеристика,
	|		ВозвратТоваровОтКлиентаТовары.Упаковка,
	|		ВозвратТоваровОтКлиентаТовары.Серия,
	|		ВозвратТоваровОтКлиентаТовары.СтатусУказанияСерий,
	|		ВозвратТоваровОтКлиентаТовары.КодСтроки,
	|		ВозвратТоваровОтКлиентаТовары.ДокументРеализации,
	|		ВозвратТоваровОтКлиентаТовары.Склад,
	|		ВозвратТоваровОтКлиентаТовары.СтавкаНДС,
	|		МАКСИМУМ(0) КАК Цена,
	|		СУММА(0),
	|		СУММА(0),
	|		СУММА(ВозвратТоваровОтКлиентаТовары.КоличествоУпаковок)
	|	ИЗ
	|		ВозвратТоваровОтКлиентаТовары КАК ВозвратТоваровОтКлиентаТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ АктОРасхожденияхТовары КАК АктОРасхожденияхТовары
	|			ПО ВозвратТоваровОтКлиентаТовары.Номенклатура = АктОРасхожденияхТовары.Номенклатура
	|				И ВозвратТоваровОтКлиентаТовары.Характеристика = АктОРасхожденияхТовары.Характеристика
	|				И ВозвратТоваровОтКлиентаТовары.Упаковка = АктОРасхожденияхТовары.Упаковка
	|				И ВозвратТоваровОтКлиентаТовары.Серия = АктОРасхожденияхТовары.Серия
	|				И ВозвратТоваровОтКлиентаТовары.СтатусУказанияСерий = АктОРасхожденияхТовары.СтатусУказанияСерий
	|				И ВозвратТоваровОтКлиентаТовары.КодСтроки = АктОРасхожденияхТовары.КодСтроки
	|				И ВозвратТоваровОтКлиентаТовары.ДокументРеализации = АктОРасхожденияхТовары.ДокументРеализации
	|				И ВозвратТоваровОтКлиентаТовары.Склад = АктОРасхожденияхТовары.Склад
	|				И ВозвратТоваровОтКлиентаТовары.СтавкаНДС = АктОРасхожденияхТовары.СтавкаНДС
	|	ГДЕ
	|		АктОРасхожденияхТовары.КоличествоУпаковокПоДокументу ЕСТЬ NULL 
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВозвратТоваровОтКлиентаТовары.Упаковка,
	|		ВозвратТоваровОтКлиентаТовары.Номенклатура,
	|		ВозвратТоваровОтКлиентаТовары.Серия,
	|		ВозвратТоваровОтКлиентаТовары.СтатусУказанияСерий,
	|		ВозвратТоваровОтКлиентаТовары.Характеристика,
	|		ВозвратТоваровОтКлиентаТовары.КодСтроки,
	|		ВозвратТоваровОтКлиентаТовары.ДокументРеализации,
	|		ВозвратТоваровОтКлиентаТовары.Склад,
	|		ВозвратТоваровОтКлиентаТовары.СтавкаНДС) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////5
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия,
	|	ВложенныйЗапрос.КоличествоПоАкту,
	|	ВложенныйЗапрос.КоличествоПоОснованиюАкт,
	|	ВложенныйЗапрос.КоличествоОснование,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоПоАкту = ВложенныйЗапрос.КоличествоОснование
	|				И ВложенныйЗапрос.КоличествоПоОснованиюАкт = ВложенныйЗапрос.КоличествоОснование
	|			ТОГДА ""ИзмененияНеТребуются""
	|		КОГДА ВложенныйЗапрос.КоличествоПоАкту = ВложенныйЗапрос.КоличествоОснование
	|				И ВложенныйЗапрос.КоличествоПоОснованиюАкт <> ВложенныйЗапрос.КоличествоОснование
	|			ТОГДА ""ИзмененияВыполнены""
	|		КОГДА ВложенныйЗапрос.КоличествоПоОснованиюАкт = ВложенныйЗапрос.КоличествоОснование
	|				И ВложенныйЗапрос.КоличествоПоАкту <> ВложенныйЗапрос.КоличествоОснование
	|			ТОГДА ""ТребуютсяИзменения""
	|		ИНАЧЕ ""ОснованиеНеСоответствуетАкту""
	|	КОНЕЦ КАК СостояниеСтроки
	|ПОМЕСТИТЬ ТоварыСостоянияСерии
	|ИЗ
	|	(ВЫБРАТЬ
	|		АктОРасхожденияхСерии.Номенклатура КАК Номенклатура,
	|		АктОРасхожденияхСерии.Характеристика КАК Характеристика,
	|		АктОРасхожденияхСерии.Серия КАК Серия,
	|		СУММА(АктОРасхожденияхСерии.Количество) КАК КоличествоПоАкту,
	|		СУММА(АктОРасхожденияхСерии.КоличествоПоДокументу) КАК КоличествоПоОснованиюАкт,
	|		СУММА(ЕСТЬNULL(ВозвратТоваровОтКлиентаСерии.Количество, 0)) КАК КоличествоОснование
	|	ИЗ
	|		АктОРасхожденияхСерии КАК АктОРасхожденияхСерии
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВозвратТоваровОтКлиентаСерии КАК ВозвратТоваровОтКлиентаСерии
	|			ПО АктОРасхожденияхСерии.Номенклатура  = ВозвратТоваровОтКлиентаСерии.Номенклатура
	|				И АктОРасхожденияхСерии.Характеристика = ВозвратТоваровОтКлиентаСерии.Характеристика
	|				И АктОРасхожденияхСерии.Серия = ВозвратТоваровОтКлиентаСерии.Серия
	|	
	|	СГРУППИРОВАТЬ ПО
	|		АктОРасхожденияхСерии.Характеристика,
	|		АктОРасхожденияхСерии.Серия,
	|		АктОРасхожденияхСерии.Номенклатура
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВозвратТоваровОтКлиентаСерии.Номенклатура,
	|		ВозвратТоваровОтКлиентаСерии.Характеристика,
	|		ВозвратТоваровОтКлиентаСерии.Серия,
	|		СУММА(0),
	|		СУММА(0),
	|		СУММА(ВозвратТоваровОтКлиентаСерии.Количество)
	|	ИЗ
	|		ВозвратТоваровОтКлиентаСерии КАК ВозвратТоваровОтКлиентаСерии
	|			ЛЕВОЕ СОЕДИНЕНИЕ АктОРасхожденияхСерии КАК АктОРасхожденияхСерии
	|			ПО ВозвратТоваровОтКлиентаСерии.Номенклатура = АктОРасхожденияхСерии.Номенклатура
	|				И ВозвратТоваровОтКлиентаСерии.Характеристика = АктОРасхожденияхСерии.Характеристика
	|				И ВозвратТоваровОтКлиентаСерии.Серия = АктОРасхожденияхСерии.Серия
	|	ГДЕ
	|		АктОРасхожденияхСерии.КоличествоПоДокументу ЕСТЬ NULL 
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВозвратТоваровОтКлиентаСерии.Номенклатура,
	|		ВозвратТоваровОтКлиентаСерии.Серия,
	|		ВозвратТоваровОтКлиентаСерии.Характеристика) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////5
	|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыСостояния.СостояниеСтроки
	|ИЗ
	|	ТоварыСостояния КАК ТоварыСостояния
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыСостоянияСерии.СостояниеСтроки
	|ИЗ
	|	ТоварыСостоянияСерии КАК ТоварыСостоянияСерии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////7
	|	
	|ВЫБРАТЬ
	|	ТоварыСостояния.Номенклатура,
	|	ТоварыСостояния.Характеристика,
	|	ТоварыСостояния.Упаковка КАК Упаковка,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоэффициентУпаковки,
	|	ТоварыСостояния.Серия,
	|	ТоварыСостояния.СтатусУказанияСерий,
	|	ТоварыСостояния.Цена,
	|	ТоварыСостояния.КодСтроки,
	|	ТоварыСостояния.ДокументРеализации,
	|	ТоварыСостояния.СтавкаНДС,
	|	ТоварыСостояния.КоличествоУпаковокПоАкту,
	|	ТоварыСостояния.КоличествоУпаковокПоОснованиюАкт,
	|	ТоварыСостояния.КоличествоУпаковокОснование
	|ИЗ
	|	ТоварыСостояния КАК ТоварыСостояния
	|ГДЕ
	|	ТоварыСостояния.СостояниеСтроки = ""ТребуютсяИзменения""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////8
	|ВЫБРАТЬ
	|	ТоварыСостоянияСерии.Номенклатура,
	|	ТоварыСостоянияСерии.Характеристика,
	|	ТоварыСостоянияСерии.Серия,
	|	ТоварыСостоянияСерии.КоличествоПоАкту,
	|	ТоварыСостоянияСерии.КоличествоПоОснованиюАкт,
	|	ТоварыСостоянияСерии.КоличествоОснование
	|ИЗ
	|	ТоварыСостоянияСерии КАК ТоварыСостоянияСерии
	|ГДЕ
	|	ТоварыСостоянияСерии.СостояниеСтроки = ""ТребуютсяИзменения""
	|";
	
КонецФункции

Функция ТекстЗапросаТабличныеЧастиАктаОРасхожденияхПослеПриемкиИПоступления(АктОРасхождениях, Основание, СтруктураВозврата, ИзменениеДокумента)

	Возврат "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АктОРасхожденияхПослеПриемкиТовары.Номенклатура КАК Номенклатура,
	|	АктОРасхожденияхПослеПриемкиТовары.НоменклатураПоставщика КАК НоменклатураПоставщика,
	|	АктОРасхожденияхПослеПриемкиТовары.Характеристика КАК Характеристика,
	|	АктОРасхожденияхПослеПриемкиТовары.Назначение КАК Назначение,
	|	АктОРасхожденияхПослеПриемкиТовары.Упаковка КАК Упаковка,
	|	АктОРасхожденияхПослеПриемкиТовары.Серия КАК Серия,
	|	АктОРасхожденияхПослеПриемкиТовары.НомерГТД КАК НомерГТД,
	|	АктОРасхожденияхПослеПриемкиТовары.КодСтроки КАК КодСтроки,
	|	ВЫБОР
	|		КОГДА АктОРасхожденияхПослеПриемкиТовары.ЗаказПоставщику = НЕОПРЕДЕЛЕНО
	|			ТОГДА ЗНАЧЕНИЕ(Документ.ЗаказПоставщику.ПустаяСсылка)
	|		ИНАЧЕ АктОРасхожденияхПослеПриемкиТовары.ЗаказПоставщику
	|	КОНЕЦ КАК ЗаказПоставщику,
	|	АктОРасхожденияхПослеПриемкиТовары.Склад КАК Склад,
	|	АктОРасхожденияхПослеПриемкиТовары.СтавкаНДС КАК СтавкаНДС,
	|	МАКСИМУМ(АктОРасхожденияхПослеПриемкиТовары.ВидЦеныПоставщика) КАК ВидЦеныПоставщика,
	|	МАКСИМУМ(АктОРасхожденияхПослеПриемкиТовары.Цена) КАК Цена,
	|	МАКСИМУМ(АктОРасхожденияхПослеПриемкиТовары.СписатьНаРасходы) КАК СписатьНаРасходы,
	|	МАКСИМУМ(АктОРасхожденияхПослеПриемкиТовары.СтатьяРасходов) КАК СтатьяРасходов,
	|	МАКСИМУМ(АктОРасхожденияхПослеПриемкиТовары.АналитикаРасходов) КАК АналитикаРасходов,
	|	МАКСИМУМ(АктОРасхожденияхПослеПриемкиТовары.Подразделение) КАК Подразделение,
	|	МАКСИМУМ(АктОРасхожденияхПослеПриемкиТовары.Сделка) КАК Сделка,
	|	МАКСИМУМ(АктОРасхожденияхПослеПриемкиТовары.Сертификат) КАК Сертификат,
	|	СУММА(ВЫБОР
	|			КОГДА АктОРасхожденияхПослеПриемкиТовары.Действие В (ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленноеИВернуть), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленное), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачу), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку))
	|				ТОГДА АктОРасхожденияхПослеПриемкиТовары.КоличествоУпаковок
	|			ИНАЧЕ АктОРасхожденияхПослеПриемкиТовары.КоличествоУпаковокПоДокументу
	|		КОНЕЦ) КАК КоличествоУпаковок,
	|	СУММА(АктОРасхожденияхПослеПриемкиТовары.КоличествоУпаковокПоДокументу) КАК КоличествоУпаковокПоДокументу
	|ПОМЕСТИТЬ АктОРасхожденияхТовары
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки.Товары КАК АктОРасхожденияхПослеПриемкиТовары
	|ГДЕ
	|	АктОРасхожденияхПослеПриемкиТовары.Ссылка = &АктОРасхождениях
	|	И АктОРасхожденияхПослеПриемкиТовары.ДокументОснование = &Основание
	|
	|СГРУППИРОВАТЬ ПО
	|	АктОРасхожденияхПослеПриемкиТовары.Упаковка,
	|	АктОРасхожденияхПослеПриемкиТовары.Серия,
	|	АктОРасхожденияхПослеПриемкиТовары.НомерГТД,
	|	АктОРасхожденияхПослеПриемкиТовары.СтавкаНДС,
	|	АктОРасхожденияхПослеПриемкиТовары.Номенклатура,
	|	АктОРасхожденияхПослеПриемкиТовары.НоменклатураПоставщика,
	|	АктОРасхожденияхПослеПриемкиТовары.Назначение,
	|	АктОРасхожденияхПослеПриемкиТовары.Характеристика,
	|	АктОРасхожденияхПослеПриемкиТовары.ЗаказПоставщику,
	|	АктОРасхожденияхПослеПриемкиТовары.Склад,
	|	АктОРасхожденияхПослеПриемкиТовары.КодСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////1
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АктОРасхожденияхПослеПриемкиСерии.Серия КАК Серия,
	|	АктОРасхожденияхПослеПриемкиСерии.Номенклатура КАК Номенклатура,
	|	АктОРасхожденияхПослеПриемкиСерии.Характеристика КАК Характеристика,
	|	АктОРасхожденияхПослеПриемкиСерии.Назначение КАК Назначение,
	|	АктОРасхожденияхПослеПриемкиСерии.Склад КАК Склад,
	|	СУММА(ВЫБОР
	|			КОГДА АктОРасхожденияхПослеПриемкиСерии.Действие В (ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленноеИВернуть), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьПерепоставленное), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачу), ЗНАЧЕНИЕ(Перечисление.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ОформитьНедостачуИОжидатьДопоставку))
	|				ТОГДА АктОРасхожденияхПослеПриемкиСерии.Количество
	|			ИНАЧЕ АктОРасхожденияхПослеПриемкиСерии.КоличествоПоДокументу
	|		КОНЕЦ) КАК Количество,
	|	СУММА(АктОРасхожденияхПослеПриемкиСерии.КоличествоПоДокументу) КАК КоличествоПоДокументу
	|ПОМЕСТИТЬ АктОРасхожденияхСерии
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки.Серии КАК АктОРасхожденияхПослеПриемкиСерии
	|ГДЕ
	|	АктОРасхожденияхПослеПриемкиСерии.Ссылка = &АктОРасхождениях
	|	И АктОРасхожденияхПослеПриемкиСерии.ДокументОснование = &Основание
	|
	|СГРУППИРОВАТЬ ПО
	|	АктОРасхожденияхПослеПриемкиСерии.Серия,
	|	АктОРасхожденияхПослеПриемкиСерии.Номенклатура,
	|	АктОРасхожденияхПослеПриемкиСерии.Назначение,
	|	АктОРасхожденияхПослеПриемкиСерии.Склад,
	|	АктОРасхожденияхПослеПриемкиСерии.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////2
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ 
	|	ПоступлениеТоваровУслугТовары.Номенклатура,
	|	ПоступлениеТоваровУслугТовары.НоменклатураПоставщика,
	|	ПоступлениеТоваровУслугТовары.Характеристика,
	|	ПоступлениеТоваровУслугТовары.Назначение,
	|	ПоступлениеТоваровУслугТовары.Упаковка,
	|	ПоступлениеТоваровУслугТовары.Серия,
	|	ПоступлениеТоваровУслугТовары.НомерГТД,
	|	ПоступлениеТоваровУслугТовары.КодСтроки,
	|	ПоступлениеТоваровУслугТовары.ЗаказПоставщику,
	|	ПоступлениеТоваровУслугТовары.Склад,
	|	ПоступлениеТоваровУслугТовары.СтавкаНДС,
	|	СУММА(ПоступлениеТоваровУслугТовары.КоличествоУпаковок) КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ПоступлениеТоваровУслугТовары
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|ГДЕ
	|	ПоступлениеТоваровУслугТовары.Ссылка = &Основание
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровУслугТовары.Упаковка,
	|	ПоступлениеТоваровУслугТовары.Номенклатура,
	|	ПоступлениеТоваровУслугТовары.НоменклатураПоставщика,
	|	ПоступлениеТоваровУслугТовары.Серия,
	|	ПоступлениеТоваровУслугТовары.НомерГТД,
	|	ПоступлениеТоваровУслугТовары.Назначение,
	|	ПоступлениеТоваровУслугТовары.Характеристика,
	|	ПоступлениеТоваровУслугТовары.КодСтроки,
	|	ПоступлениеТоваровУслугТовары.ЗаказПоставщику,
	|	ПоступлениеТоваровУслугТовары.Склад,
	|	ПоступлениеТоваровУслугТовары.СтавкаНДС
	|;
	|////////////////////////////////////////////////////////////////////////////////3
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПоступлениеТоваровУслугСерии.Номенклатура,
	|	ПоступлениеТоваровУслугСерии.Характеристика,
	|	ПоступлениеТоваровУслугСерии.Назначение,
	|	ПоступлениеТоваровУслугСерии.Склад,
	|	ПоступлениеТоваровУслугСерии.Серия,
	|	СУММА(ПоступлениеТоваровУслугСерии.Количество) КАК Количество
	|ПОМЕСТИТЬ ПоступлениеТоваровУслугСерии
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Серии КАК ПоступлениеТоваровУслугСерии
	|ГДЕ
	|	ПоступлениеТоваровУслугСерии.Ссылка = &Основание
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровУслугСерии.Номенклатура,
	|	ПоступлениеТоваровУслугСерии.Серия,
	|	ПоступлениеТоваровУслугСерии.Назначение,
	|	ПоступлениеТоваровУслугСерии.Склад,
	|	ПоступлениеТоваровУслугСерии.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////4
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.НоменклатураПоставщика,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Назначение,
	|	ВложенныйЗапрос.Упаковка,
	|	ВложенныйЗапрос.Серия,
	|	ВложенныйЗапрос.КодСтроки,
	|	ВложенныйЗапрос.ЗаказПоставщику,
	|	ВложенныйЗапрос.Склад,
	|	ВложенныйЗапрос.Цена,
	|	ВложенныйЗапрос.ВидЦеныПоставщика,
	|	ВложенныйЗапрос.СписатьНаРасходы,
	|	ВложенныйЗапрос.СтатьяРасходов,
	|	ВложенныйЗапрос.АналитикаРасходов,
	|	ВложенныйЗапрос.Подразделение,
	|	ВложенныйЗапрос.Сделка,
	|	ВложенныйЗапрос.НомерГТД,
	|	ВложенныйЗапрос.Сертификат,
	|	ВложенныйЗапрос.СтавкаНДС,
	|	ВложенныйЗапрос.КоличествоУпаковокПоАкту,
	|	ВложенныйЗапрос.КоличествоУпаковокПоОснованиюАкт,
	|	ВложенныйЗапрос.КоличествоУпаковокОснование,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоУпаковокПоАкту = ВложенныйЗапрос.КоличествоУпаковокОснование
	|				И ВложенныйЗапрос.КоличествоУпаковокПоОснованиюАкт = ВложенныйЗапрос.КоличествоУпаковокОснование
	|			ТОГДА ""ИзмененияНеТребуются""
	|		КОГДА ВложенныйЗапрос.КоличествоУпаковокПоАкту = ВложенныйЗапрос.КоличествоУпаковокОснование
	|				И ВложенныйЗапрос.КоличествоУпаковокПоОснованиюАкт <> ВложенныйЗапрос.КоличествоУпаковокОснование
	|			ТОГДА ""ИзмененияВыполнены""
	|		КОГДА ВложенныйЗапрос.КоличествоУпаковокПоОснованиюАкт = ВложенныйЗапрос.КоличествоУпаковокОснование
	|				И ВложенныйЗапрос.КоличествоУпаковокПоАкту <> ВложенныйЗапрос.КоличествоУпаковокОснование
	|			ТОГДА ""ТребуютсяИзменения""
	|		ИНАЧЕ ""ОснованиеНеСоответствуетАкту""
	|	КОНЕЦ КАК СостояниеСтроки
	|ПОМЕСТИТЬ ТоварыСостояния
	|ИЗ
	|	(ВЫБРАТЬ
	|		АктОРасхожденияхТовары.Номенклатура КАК Номенклатура,
	|		АктОРасхожденияхТовары.НоменклатураПоставщика КАК НоменклатураПоставщика,
	|		АктОРасхожденияхТовары.Характеристика КАК Характеристика,
	|		АктОРасхожденияхТовары.Назначение КАК Назначение,
	|		АктОРасхожденияхТовары.Упаковка КАК Упаковка,
	|		АктОРасхожденияхТовары.Серия КАК Серия,
	|		АктОРасхожденияхТовары.НомерГТД КАК НомерГТД,
	|		АктОРасхожденияхТовары.КодСтроки КАК КодСтроки,
	|		АктОРасхожденияхТовары.ЗаказПоставщику КАК ЗаказПоставщику,
	|		АктОРасхожденияхТовары.Склад КАК Склад,
	|		АктОРасхожденияхТовары.СтавкаНДС КАК СтавкаНДС,
	|		МАКСИМУМ(АктОРасхожденияхТовары.Цена) КАК Цена,
	|		МАКСИМУМ(АктОРасхожденияхТовары.ВидЦеныПоставщика) КАК ВидЦеныПоставщика,
	|		МАКСИМУМ(АктОРасхожденияхТовары.СписатьНаРасходы) КАК СписатьНаРасходы,
	|		МАКСИМУМ(АктОРасхожденияхТовары.СтатьяРасходов) КАК СтатьяРасходов,
	|		МАКСИМУМ(АктОРасхожденияхТовары.АналитикаРасходов) КАК АналитикаРасходов,
	|		МАКСИМУМ(АктОРасхожденияхТовары.Подразделение) КАК Подразделение,
	|		МАКСИМУМ(АктОРасхожденияхТовары.Сделка) КАК Сделка,
	|		МАКСИМУМ(АктОРасхожденияхТовары.Сертификат) КАК Сертификат,
	|		СУММА(АктОРасхожденияхТовары.КоличествоУпаковок) КАК КоличествоУпаковокПоАкту,
	|		СУММА(АктОРасхожденияхТовары.КоличествоУпаковокПоДокументу) КАК КоличествоУпаковокПоОснованиюАкт,
	|		СУММА(ЕСТЬNULL(ПоступлениеТоваровУслугТовары.КоличествоУпаковок, 0)) КАК КоличествоУпаковокОснование
	|	ИЗ
	|		АктОРасхожденияхТовары КАК АктОРасхожденияхТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПоступлениеТоваровУслугТовары КАК ПоступлениеТоваровУслугТовары
	|			ПО АктОРасхожденияхТовары.Номенклатура = ПоступлениеТоваровУслугТовары.Номенклатура
	|				И АктОРасхожденияхТовары.НоменклатураПоставщика = ПоступлениеТоваровУслугТовары.НоменклатураПоставщика
	|				И АктОРасхожденияхТовары.Характеристика = ПоступлениеТоваровУслугТовары.Характеристика
	|				И АктОРасхожденияхТовары.Назначение = ПоступлениеТоваровУслугТовары.Назначение
	|				И АктОРасхожденияхТовары.Упаковка = ПоступлениеТоваровУслугТовары.Упаковка
	|				И АктОРасхожденияхТовары.Серия = ПоступлениеТоваровУслугТовары.Серия
	|				И АктОРасхожденияхТовары.КодСтроки = ПоступлениеТоваровУслугТовары.КодСтроки
	|				И АктОРасхожденияхТовары.ЗаказПоставщику = ПоступлениеТоваровУслугТовары.ЗаказПоставщику
	|				И АктОРасхожденияхТовары.Склад = ПоступлениеТоваровУслугТовары.Склад
	|				И АктОРасхожденияхТовары.СтавкаНДС = ПоступлениеТоваровУслугТовары.СтавкаНДС
	|				И АктОРасхожденияхТовары.НомерГТД = ПоступлениеТоваровУслугТовары.НомерГТД
	|	
	|	СГРУППИРОВАТЬ ПО
	|		АктОРасхожденияхТовары.Назначение,
	|		АктОРасхожденияхТовары.Характеристика,
	|		АктОРасхожденияхТовары.Серия,
	|		АктОРасхожденияхТовары.НомерГТД,
	|		АктОРасхожденияхТовары.Упаковка,
	|		АктОРасхожденияхТовары.Номенклатура,
	|		АктОРасхожденияхТовары.НоменклатураПоставщика,
	|		АктОРасхожденияхТовары.КодСтроки,
	|		АктОРасхожденияхТовары.ЗаказПоставщику,
	|		АктОРасхожденияхТовары.Склад,
	|		АктОРасхожденияхТовары.СтавкаНДС
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПоступлениеТоваровУслугТовары.Номенклатура,
	|		ПоступлениеТоваровУслугТовары.НоменклатураПоставщика,
	|		ПоступлениеТоваровУслугТовары.Характеристика,
	|		ПоступлениеТоваровУслугТовары.Назначение,
	|		ПоступлениеТоваровУслугТовары.Упаковка,
	|		ПоступлениеТоваровУслугТовары.Серия,
	|		ПоступлениеТоваровУслугТовары.НомерГТД, 
	|		ПоступлениеТоваровУслугТовары.КодСтроки,
	|		ПоступлениеТоваровУслугТовары.ЗаказПоставщику,
	|		ПоступлениеТоваровУслугТовары.Склад,
	|		ПоступлениеТоваровУслугТовары.СтавкаНДС,
	|		МАКСИМУМ(ЗНАЧЕНИЕ(Справочник.ВидыЦенПоставщиков.ПустаяСсылка)),
	|		МАКСИМУМ(0),
	|		МАКСИМУМ(Ложь), //СписатьНаРасходы
	|		МАКСИМУМ(ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка)), //СтатьяРасходов
	|		МАКСИМУМ(НЕОПРЕДЕЛЕНО), //АналитикаРасходов
	|		МАКСИМУМ(ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)), //Подразделение
	|		МАКСИМУМ(ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка)), //Сделка
	|		МАКСИМУМ(""""), //Сертификат
	|		СУММА(0),
	|		СУММА(0),
	|		СУММА(ПоступлениеТоваровУслугТовары.КоличествоУпаковок)
	|	ИЗ
	|		ПоступлениеТоваровУслугТовары КАК ПоступлениеТоваровУслугТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ АктОРасхожденияхТовары КАК АктОРасхожденияхТовары
	|			ПО ПоступлениеТоваровУслугТовары.Номенклатура = АктОРасхожденияхТовары.Номенклатура
	|				И ПоступлениеТоваровУслугТовары.НоменклатураПоставщика = АктОРасхожденияхТовары.НоменклатураПоставщика
	|				И ПоступлениеТоваровУслугТовары.Характеристика = АктОРасхожденияхТовары.Характеристика
	|				И ПоступлениеТоваровУслугТовары.Назначение = АктОРасхожденияхТовары.Назначение
	|				И ПоступлениеТоваровУслугТовары.Упаковка = АктОРасхожденияхТовары.Упаковка
	|				И ПоступлениеТоваровУслугТовары.Серия = АктОРасхожденияхТовары.Серия
	|				И ПоступлениеТоваровУслугТовары.КодСтроки = АктОРасхожденияхТовары.КодСтроки
	|				И ПоступлениеТоваровУслугТовары.ЗаказПоставщику = АктОРасхожденияхТовары.ЗаказПоставщику
	|				И ПоступлениеТоваровУслугТовары.Склад = АктОРасхожденияхТовары.Склад
	|				И ПоступлениеТоваровУслугТовары.СтавкаНДС = АктОРасхожденияхТовары.СтавкаНДС
	|				И ПоступлениеТоваровУслугТовары.НомерГТД = АктОРасхожденияхТовары.НомерГТД
	|	ГДЕ
	|		АктОРасхожденияхТовары.КоличествоУпаковокПоДокументу ЕСТЬ NULL 
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПоступлениеТоваровУслугТовары.Упаковка,
	|		ПоступлениеТоваровУслугТовары.Номенклатура,
	|		ПоступлениеТоваровУслугТовары.НоменклатураПоставщика,
	|		ПоступлениеТоваровУслугТовары.Серия,
	|		ПоступлениеТоваровУслугТовары.НомерГТД,
	|		ПоступлениеТоваровУслугТовары.Назначение,
	|		ПоступлениеТоваровУслугТовары.Характеристика,
	|		ПоступлениеТоваровУслугТовары.КодСтроки,
	|		ПоступлениеТоваровУслугТовары.ЗаказПоставщику,
	|		ПоступлениеТоваровУслугТовары.Склад,
	|		ПоступлениеТоваровУслугТовары.СтавкаНДС) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////5
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Назначение,
	|	ВложенныйЗапрос.Склад,
	|	ВложенныйЗапрос.Серия,
	|	ВложенныйЗапрос.КоличествоПоАкту,
	|	ВложенныйЗапрос.КоличествоПоОснованиюАкт,
	|	ВложенныйЗапрос.КоличествоОснование,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КоличествоПоАкту = ВложенныйЗапрос.КоличествоОснование
	|				И ВложенныйЗапрос.КоличествоПоОснованиюАкт = ВложенныйЗапрос.КоличествоОснование
	|			ТОГДА ""ИзмененияНеТребуются""
	|		КОГДА ВложенныйЗапрос.КоличествоПоАкту = ВложенныйЗапрос.КоличествоОснование
	|				И ВложенныйЗапрос.КоличествоПоОснованиюАкт <> ВложенныйЗапрос.КоличествоОснование
	|			ТОГДА ""ИзмененияВыполнены""
	|		КОГДА ВложенныйЗапрос.КоличествоПоОснованиюАкт = ВложенныйЗапрос.КоличествоОснование
	|				И ВложенныйЗапрос.КоличествоПоАкту <> ВложенныйЗапрос.КоличествоОснование
	|			ТОГДА ""ТребуютсяИзменения""
	|		ИНАЧЕ ""ОснованиеНеСоответствуетАкту""
	|	КОНЕЦ КАК СостояниеСтроки
	|ПОМЕСТИТЬ ТоварыСостоянияСерии
	|ИЗ
	|	(ВЫБРАТЬ
	|		АктОРасхожденияхСерии.Номенклатура КАК Номенклатура,
	|		АктОРасхожденияхСерии.Характеристика КАК Характеристика,
	|		АктОРасхожденияхСерии.Назначение КАК Назначение,
	|		АктОРасхожденияхСерии.Склад КАК Склад,
	|		АктОРасхожденияхСерии.Серия КАК Серия,
	|		СУММА(АктОРасхожденияхСерии.Количество) КАК КоличествоПоАкту,
	|		СУММА(АктОРасхожденияхСерии.КоличествоПоДокументу) КАК КоличествоПоОснованиюАкт,
	|		СУММА(ЕСТЬNULL(ПоступлениеТоваровУслугСерии.Количество, 0)) КАК КоличествоОснование
	|	ИЗ
	|		АктОРасхожденияхСерии КАК АктОРасхожденияхСерии
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПоступлениеТоваровУслугСерии КАК ПоступлениеТоваровУслугСерии
	|			ПО АктОРасхожденияхСерии.Номенклатура = ПоступлениеТоваровУслугСерии.Номенклатура
	|				И АктОРасхожденияхСерии.Характеристика = ПоступлениеТоваровУслугСерии.Характеристика
	|				И АктОРасхожденияхСерии.Назначение = ПоступлениеТоваровУслугСерии.Назначение
	|				И АктОРасхожденияхСерии.Склад = ПоступлениеТоваровУслугСерии.Склад
	|				И АктОРасхожденияхСерии.Серия = ПоступлениеТоваровУслугСерии.Серия
	|	
	|	СГРУППИРОВАТЬ ПО
	|		АктОРасхожденияхСерии.Назначение,
	|		АктОРасхожденияхСерии.Характеристика,
	|		АктОРасхожденияхСерии.Серия,
	|		АктОРасхожденияхСерии.Склад,
	|		АктОРасхожденияхСерии.Номенклатура
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПоступлениеТоваровУслугСерии.Номенклатура,
	|		ПоступлениеТоваровУслугСерии.Характеристика,
	|		ПоступлениеТоваровУслугСерии.Назначение,
	|		ПоступлениеТоваровУслугСерии.Склад,
	|		ПоступлениеТоваровУслугСерии.Серия,
	|		СУММА(0),
	|		СУММА(0),
	|		СУММА(ПоступлениеТоваровУслугСерии.Количество)
	|	ИЗ
	|		ПоступлениеТоваровУслугСерии КАК ПоступлениеТоваровУслугСерии
	|			ЛЕВОЕ СОЕДИНЕНИЕ АктОРасхожденияхСерии КАК АктОРасхожденияхСерии
	|			ПО ПоступлениеТоваровУслугСерии.Номенклатура = АктОРасхожденияхСерии.Номенклатура
	|				И ПоступлениеТоваровУслугСерии.Характеристика = АктОРасхожденияхСерии.Характеристика
	|				И ПоступлениеТоваровУслугСерии.Назначение = АктОРасхожденияхСерии.Назначение
	|				И ПоступлениеТоваровУслугСерии.Склад = АктОРасхожденияхСерии.Склад
	|				И ПоступлениеТоваровУслугСерии.Серия = АктОРасхожденияхСерии.Серия
	|	ГДЕ
	|		АктОРасхожденияхСерии.КоличествоПоДокументу ЕСТЬ NULL 
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ПоступлениеТоваровУслугСерии.Номенклатура,
	|		ПоступлениеТоваровУслугСерии.Серия,
	|		ПоступлениеТоваровУслугСерии.Назначение,
	|		ПоступлениеТоваровУслугСерии.Склад,
	|		ПоступлениеТоваровУслугСерии.Характеристика) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////6
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыСостояния.СостояниеСтроки
	|ИЗ
	|	ТоварыСостояния КАК ТоварыСостояния
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыСостоянияСерии.СостояниеСтроки
	|ИЗ
	|	ТоварыСостоянияСерии КАК ТоварыСостоянияСерии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////7
	|	
	|ВЫБРАТЬ
	|	ТоварыСостояния.Номенклатура,
	|	ТоварыСостояния.НоменклатураПоставщика,
	|	ТоварыСостояния.Характеристика,
	|	ТоварыСостояния.Назначение,
	|	ТоварыСостояния.Упаковка КАК Упаковка,
	|	ЕСТЬNULL(&ТекстЗапросаКоэффициентУпаковки, 1) КАК КоэффициентУпаковки,
	|	ТоварыСостояния.Серия,
	|	ТоварыСостояния.Склад,
	|	ТоварыСостояния.Цена,
	|	ТоварыСостояния.ВидЦеныПоставщика,
	|	ТоварыСостояния.КодСтроки,
	|	ТоварыСостояния.ЗаказПоставщику,
	|	ТоварыСостояния.СтавкаНДС,
	|	ТоварыСостояния.СписатьНаРасходы,
	|	ТоварыСостояния.СтатьяРасходов,
	|	ТоварыСостояния.АналитикаРасходов,
	|	ТоварыСостояния.Подразделение,
	|	ТоварыСостояния.Сделка,
	|	ТоварыСостояния.НомерГТД,
	|	ТоварыСостояния.Сертификат,
	|	ТоварыСостояния.КоличествоУпаковокПоАкту,
	|	ТоварыСостояния.КоличествоУпаковокПоОснованиюАкт,
	|	ТоварыСостояния.КоличествоУпаковокОснование
	|ИЗ
	|	ТоварыСостояния КАК ТоварыСостояния
	|ГДЕ
	|	ТоварыСостояния.СостояниеСтроки = ""ТребуютсяИзменения""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыСостоянияСерии.Номенклатура,
	|	ТоварыСостоянияСерии.Характеристика,
	|	ТоварыСостоянияСерии.Назначение,
	|	ТоварыСостоянияСерии.Серия,
	|	ТоварыСостоянияСерии.Склад,
	|	ТоварыСостоянияСерии.КоличествоПоАкту,
	|	ТоварыСостоянияСерии.КоличествоПоОснованиюАкт,
	|	ТоварыСостоянияСерии.КоличествоОснование
	|ИЗ
	|	ТоварыСостоянияСерии КАК ТоварыСостоянияСерии
	|ГДЕ
	|	ТоварыСостоянияСерии.СостояниеСтроки = ""ТребуютсяИзменения""
	|";
	
КонецФункции

#КонецОбласти

#Область Серии

Процедура ОбработатьУказаниеСерий(Форма, ПараметрыФормыУказанияСерий, СтруктураДействий) Экспорт
	
	ИменаРеквизитов = РасхожденияКлиентСервер.ИменаРеквизитовВЗависимостиОтТипаАкта(ТипЗнч(Форма.Объект.Ссылка) = Тип("ДокументСсылка.АктОРасхожденияхПослеОтгрузки"));
	
	ПараметрыУказанияСерий = Форма.ПараметрыУказанияСерий;
	КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшируемыеЗначения();
	
	ТекущаяСтрока = Форма.Объект.Товары.НайтиПоИдентификатору(Форма.Элементы.Товары.ТекущаяСтрока);
	ИсходноеДействие = ТекущаяСтрока.Действие;
	
	НоменклатураСервер.ОбработатьУказаниеСерий(Форма.Объект, ПараметрыУказанияСерий, ПараметрыФормыУказанияСерий, СтруктураДействий, КэшированныеЗначения);
	
	Если Не НоменклатураКлиентСервер.ВЭтомСтатусеСерииУказываютсяВТЧСерии(ПараметрыФормыУказанияСерий.СтатусУказанияСерий, ПараметрыУказанияСерий) Тогда
		Возврат;
	КонецЕсли;
	
	// После обработки может сброситься действие, надо его сбросить для всех строк
	Если ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.АктОРасхожденияхПослеПеремещения"
		Или ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.АктОРасхожденияхПослеОтгрузки" Тогда
		ПустоеДействие = Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ПустаяСсылка();
	Иначе
		ПустоеДействие = Перечисления.ВариантыДействийПоРасхождениямВАктеПослеПриемки.ПустаяСсылка();
	КонецЕсли;
	СброситьДействие = (ТекущаяСтрока.Действие = ПустоеДействие);
	
	Если СтруктураДействий.Свойство("ПересчитатьКоличествоЕдиниц") Тогда
		СтруктураДействий.Удалить("ПересчитатьКоличествоЕдиниц");
	КонецЕсли;
	СтруктураДействий.Вставить("ПересчитатьКоличествоУпаковок");
	
	ТекстПоляСвязи = "";
	Для Каждого СтрМас из ПараметрыУказанияСерий.ПоляСвязи Цикл
		ТекстПоляСвязи = ТекстПоляСвязи + "," + СтрМас;
	КонецЦикла;
	СтруктураПоиска = Новый Структура("Номенклатура,Характеристика"+ТекстПоляСвязи);
	
	// Распределим излишек по дублям строк товаров, чтобы весь излишек не попадал в одну строку
	ЗаполнитьЗначенияСвойств(СтруктураПоиска,ТекущаяСтрока);
	НайденныеСтрокиТоваров = Форма.Объект.Товары.НайтиСтроки(СтруктураПоиска);
	Если НайденныеСтрокиТоваров.Количество() > 1 Тогда
		КоличествоКРаспределению = 0;
		Для Каждого Стр Из НайденныеСтрокиТоваров Цикл
			Если Стр.Количество > Стр.КоличествоПоДокументу Тогда
				КоличествоКРаспределению = Стр.Количество - Стр.КоличествоПоДокументу;
				Стр.Количество = Стр.КоличествоПоДокументу;
				ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(Стр, СтруктураДействий, КэшированныеЗначения);
				СброситьДействие = (Стр.Действие = ПустоеДействие);
			КонецЕсли;
		КонецЦикла;
		Если КоличествоКРаспределению > 0 Тогда
			Для Каждого Стр Из НайденныеСтрокиТоваров Цикл
				Если Стр.Количество < Стр.КоличествоПоДокументу Тогда
					Стр.Количество = Мин(Стр.КоличествоПоДокументу, КоличествоКРаспределению);
					ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(Стр, СтруктураДействий, КэшированныеЗначения);
					СброситьДействие = (Стр.Действие = ПустоеДействие);
					КоличествоКРаспределению = КоличествоКРаспределению - Стр.Количество;
					Если КоличествоКРаспределению = 0 Тогда
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Если КоличествоКРаспределению > 0 Тогда
			ТекущаяСтрока.Количество = ТекущаяСтрока.Количество + КоличествоКРаспределению;
			ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
			СброситьДействие = (ТекущаяСтрока.Действие = ПустоеДействие);
		КонецЕсли;
	КонецЕсли;
	
	// В случае одновременного возникновения недостачи и излишка по строкам серий из документа-основания,
	// излишки выделим в отдельные строки серий и товаров
	СтруктураПоиска.Действие = ИсходноеДействие;
	НайденныеСтрокиСерий = Форма.Объект.Серии.НайтиСтроки(СтруктураПоиска);
	СтрокиСНедостачей = Новый Массив;
	СтрокиСИзлишками = Новый Массив;
	СтрокиУдалить = Новый Массив;
	Для Каждого Стр Из НайденныеСтрокиСерий Цикл
		Дельта = Стр.Количество - Стр.КоличествоПоДокументу;
		Если Дельта > 0 Тогда
			СтрокиСИзлишками.Добавить(Стр);
		ИначеЕсли Дельта < 0 Тогда
			СтрокиСНедостачей.Добавить(Стр);
		КонецЕсли;
		Если Стр.Количество = 0
			И Стр.КоличествоПоДокументу = 0 Тогда
			СтрокиУдалить.Добавить(Стр);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Стр Из СтрокиУдалить Цикл
		Форма.Объект.Серии.Удалить(Стр);
	КонецЦикла;
	
	Если СтрокиСИзлишками.Количество() > 0 И СтрокиСНедостачей.Количество() > 0 Тогда
		
		ВсегоИзлишек = 0;
		Для Каждого Стр Из СтрокиСИзлишками Цикл
			НоваяСтрокаСерии = Форма.Объект.Серии.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаСерии, Стр);
			НоваяСтрокаСерии[ИменаРеквизитов.ЗаполненоПоОснованию] = Ложь;
			НоваяСтрокаСерии.КоличествоПоДокументу = 0;
			Дельта = Стр.Количество - Стр.КоличествоПоДокументу;
			НоваяСтрокаСерии.Количество = Дельта;
			НоваяСтрокаСерии.Действие = ПустоеДействие;
			Стр.Количество = Стр.КоличествоПоДокументу;
			ВсегоИзлишек = ВсегоИзлишек + Дельта;
		КонецЦикла;
		
		НоваяСтрокаТовары = Форма.Объект.Товары.Вставить(ТекущаяСтрока.НомерСтроки);
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары, ТекущаяСтрока);
		
		СтруктураИнициализации = Новый Структура;
		СтруктураИнициализации.Вставить("КоличествоПоДокументу", 0);
		СтруктураИнициализации.Вставить("КоличествоУпаковокПоДокументу", 0);
		СтруктураИнициализации.Вставить("СуммаПоДокументу", 0);
		СтруктураИнициализации.Вставить("СуммаНДСПоДокументу", 0);
		СтруктураИнициализации.Вставить("СуммаСНДСПоДокументу", 0);
		СтруктураИнициализации.Вставить(ИменаРеквизитов.ЗаполненоПоОснованию, Ложь);
		СтруктураИнициализации.Вставить("Действие", ПустоеДействие);
		
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТовары, СтруктураИнициализации);
		НоваяСтрокаТовары.Количество = ВсегоИзлишек;
		
		ТекущаяСтрока.Количество = ТекущаяСтрока.Количество - ВсегоИзлишек;
		
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(ТекущаяСтрока, СтруктураДействий, КэшированныеЗначения);
		СброситьДействие = (ТекущаяСтрока.Действие = ПустоеДействие);
		ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТЧ(НоваяСтрокаТовары, СтруктураДействий, КэшированныеЗначения);
	КонецЕсли;
	
	Если Не ИсходноеДействие = ПустоеДействие
		И СброситьДействие Тогда
		НайденныеСтрокиТоваров = Форма.Объект.Товары.НайтиСтроки(СтруктураПоиска);
		Для Каждого Стр Из НайденныеСтрокиТоваров Цикл
			Стр.Действие = ПустоеДействие;
		КонецЦикла;
		НайденныеСтрокиСерий = Форма.Объект.Серии.НайтиСтроки(СтруктураПоиска);
		Для Каждого Стр Из НайденныеСтрокиСерий Цикл
			Стр.Действие = ПустоеДействие;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьУсловноеОформлениеСерий(Форма, ОсобыйВариантУказанияСерий) Экспорт
	
	НоменклатураСервер.УстановитьУсловноеОформлениеСерийНоменклатуры(Форма, ОсобыйВариантУказанияСерий);
	
	НоменклатураСервер.УстановитьУсловноеОформлениеСтатусовУказанияСерий(Форма, Ложь);
	
	// Нельзя редактировать количество товаров,
	// если серии по такому товару указываются в отдельной ТЧ.
	// Количество будет отредактировано в форме подбора серий.
	Элемент = Форма.УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Форма.Элементы.ТоварыКоличествоУпаковок.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение   = Новый ПолеКомпоновкиДанных("Объект.Товары.СтатусУказанияСерий");
	ОтборЭлемента.ВидСравнения    = ВидСравненияКомпоновкиДанных.Больше;
	ОтборЭлемента.ПравоеЗначение  = 0;
	
	Если ОсобыйВариантУказанияСерий = "СерииПриПланированииОтгрузкиУказываютсяВТЧТовары" Тогда
		ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение   = Новый ПолеКомпоновкиДанных("Объект.Товары.СтатусУказанияСерий");
		ОтборЭлемента.ВидСравнения    = ВидСравненияКомпоновкиДанных.Меньше;
		ОтборЭлемента.ПравоеЗначение  = 9;
	Иначе
		ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборЭлемента.ЛевоеЗначение   = Новый ПолеКомпоновкиДанных("Объект.Товары.СтатусУказанияСерий");
		ОтборЭлемента.ВидСравнения    = ВидСравненияКомпоновкиДанных.Меньше;
		ОтборЭлемента.ПравоеЗначение  = 13;
	КонецЕсли;
		
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы


// Обработчик обновления BAS УТ 3.2.2
Процедура ПеренестиРасхожденияВКорректировкиРегистров(Выборка, Параметры, МетаданныеДокумента) Экспорт
	
	СтруктураПоиска = Новый Структура("Номенклатура, Характеристика, Назначение, ДокументРезерваСерий");
	Пока Выборка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Попытка
			
			НачатьТранзакцию();
			
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить(МетаданныеДокумента.ПолноеИмя());
			ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.Ссылка);
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			Блокировка.Заблокировать();
			
		Исключение
			
			ОтменитьТранзакцию();
			Продолжить;
			ТекстСообщения = НСтр("ru='Не удалось заблокировать документ: %Регистратор% по причине: %Причина%';uk='Не вдалося заблокувати документ: %Регистратор% по причині: %Причина%'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", Выборка.Ссылка);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
									УровеньЖурналаРегистрации.Предупреждение,
									МетаданныеДокумента,
									Выборка.Ссылка,
									ТекстСообщения);
			
		КонецПопытки;
		
		ДокументОбъект = ОбновлениеИнформационнойБазыУТ.ПроверитьПолучитьОбъект(
            Выборка.Ссылка, 
            Выборка.ВерсияДанных, 
            Параметры.Очередь
        );
        
		Если ДокументОбъект = Неопределено Тогда
			ОтменитьТранзакцию();
			Продолжить;
		КонецЕсли;
	
		НовыйОбъект = Документы.КорректировкаРегистров.СоздатьДокумент();
		НовыйОбъект.Комментарий = НСтр("ru='Автоматически создан по расхождениям документа %Документ при обновлении информационной базы.';uk='Автоматично створений за розбіжностями документа %Документ при оновленні інформаційної бази.'");
		НовыйОбъект.Комментарий = СтрЗаменить(НовыйОбъект.Комментарий, "%Документ", Выборка.Ссылка);
		НовыйОбъект.Дата = ТекущаяДата();
		НовыйОбъект.УстановитьНовыйНомер();
		
		НоваяСтрока = НовыйОбъект.ТаблицаРегистров.Добавить();
		НоваяСтрока.Имя = "ТоварыКОтгрузке";
		НоваяСтрока = НовыйОбъект.ТаблицаРегистров.Добавить();
		НоваяСтрока.Имя = "СвободныеОстатки";
		НоваяСтрока = НовыйОбъект.ТаблицаРегистров.Добавить();
		НоваяСтрока.Имя = "ТоварыКОформлениюИзлишковНедостач";
		
		НаборЗаписейТоварыКОтгрузке  = РегистрыНакопления.ТоварыКОтгрузке.СоздатьНаборЗаписей();
		НаборЗаписейСвободныеОстатки = РегистрыНакопления.СвободныеОстатки.СоздатьНаборЗаписей();
		НаборЗаписейИзлишкиНедостачи = РегистрыНакопления.ТоварыКОформлениюИзлишковНедостач.СоздатьНаборЗаписей();
		
		Попытка
		
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(НовыйОбъект, Истина); // Запишем корректировку сразу, чтобы получить ссылку
			
			НаборЗаписейТоварыКОтгрузке.Отбор.Регистратор.Установить(НовыйОбъект.Ссылка);
			НаборЗаписейСвободныеОстатки.Отбор.Регистратор.Установить(НовыйОбъект.Ссылка);
			НаборЗаписейИзлишкиНедостачи.Отбор.Регистратор.Установить(НовыйОбъект.Ссылка);
			
			Пока Выборка.Следующий() Цикл
				
				ТекущаяСтрока = ДокументОбъект.УдалитьРасхожденияТовары[Выборка.НомерСтроки - 1];
				Если Выборка.СтатусУказанияСерий = 10 Тогда
					ЗаполнитьЗначенияСвойств(СтруктураПоиска, ТекущаяСтрока);
					НайденныеСтроки = ДокументОбъект.УдалитьРасхожденияСерии.НайтиСтроки(СтруктураПоиска);
					Для Каждого СтрокаСерий Из НайденныеСтроки Цикл
						НоваяЗапись = НаборЗаписейТоварыКОтгрузке.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяЗапись,Выборка);
						НоваяЗапись.Серия = СтрокаСерий.Серия;
						НоваяЗапись.КОтгрузке = СтрокаСерий.КоличествоРасхождение;
						ДокументОбъект.УдалитьРасхожденияСерии.Удалить(СтрокаСерий);
					КонецЦикла;
				Иначе
					НоваяЗапись = НаборЗаписейТоварыКОтгрузке.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяЗапись,Выборка);
					НоваяЗапись.КОтгрузке = Выборка.Количество;
				КонецЕсли;
				
				ДокументОбъект.УдалитьРасхожденияТовары.Удалить(ТекущаяСтрока);
				
				НоваяЗапись = НаборЗаписейСвободныеОстатки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяЗапись,Выборка);
				НоваяЗапись.ВНаличии = - Выборка.Количество;
				
				НоваяЗапись = НаборЗаписейИзлишкиНедостачи.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяЗапись,Выборка);
				Если Выборка.Количество > 0 Тогда
					НоваяЗапись.ВидДвижения = ВидДвиженияНакопления.Приход;
					НоваяЗапись.КОформлениюАктов = Выборка.Количество;
				Иначе
					НоваяЗапись.КОформлениюАктов = - Выборка.Количество;
				КонецЕсли;
				
			КонецЦикла;
			
			Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВнутреннееПотреблениеТоваров") Тогда
				
				ДокументОбъект.УдалитьСтатус = Неопределено;
				
			ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.СборкаТоваров") Тогда
				
				Если ДокументОбъект.Статус = Перечисления.СтатусыСборокТоваров.УдалитьКСборкеРазборке Тогда
					ДокументОбъект.Статус = Перечисления.СтатусыСборокТоваров.ВРаботе;
				КонецЕсли;
				
			КонецЕсли;
		
			ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ДокументОбъект, Истина);
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписейТоварыКОтгрузке,  Истина);
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписейСвободныеОстатки, Истина);
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(НаборЗаписейИзлишкиНедостачи, Истина);
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ОбновлениеИнформационнойБазыУТ.СообщитьОНеудачнойОбработке(ДокументОбъект.Ссылка);
			ВызватьИсключение;
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

// Обработчик обновления BAS УТ 3.2.2
Процедура ЗаполнитьАктПоРасхождениямПриОбновлении(Выборка, НовыйАкт, НакладнаяОбъект, СтруктураПоиска, Параметры) Экспорт
	
	Попытка
	
		ЗаполнитьЗначенияСвойств(НовыйАкт, Выборка);
		НовыйАкт.Комментарий = НСтр("ru='Автоматически создан по расхождениям документа %Документ при обновлении информационной базы.';uk='Автоматично створений за розбіжностями документа %Документ при оновленні інформаційної бази.'");
		НовыйАкт.Комментарий = СтрЗаменить(НовыйАкт.Комментарий, "%Документ", НакладнаяОбъект.Ссылка);
		НовыйАкт.УстановитьНовыйНомер();
		НовыйАкт.Проведен = Истина;
		НовыйАкт.Товары.Очистить();
		
		Пока Выборка.Следующий() Цикл
			Если Выборка.НеизвестенЗаказВСтрокеНакладнойВведеннойПоЗаказу Тогда
				// Только для реализаций
				ЗаказДляРасхождений = Документы.ЗаказКлиента.СоздатьДокумент();
				ЗаполнитьЗначенияСвойств(ЗаказДляРасхождений, НакладнаяОбъект);
				ЗаказДляРасхождений.Проведен = Ложь;
				ЗаказДляРасхождений.Дата = ТекущаяДатаСеанса();
				ЗаказДляРасхождений.УстановитьНовыйНомер();
				ЗаказДляРасхождений.Комментарий = НСтр("ru='Автоматически создан для движений по расхождениям документа %Документ при обновлении информационной базы.';uk='Автоматично створений для рухів щодо розбіжностей документа %Документ при оновленні інформаційної бази.'");
				ЗаказДляРасхождений.Комментарий = СтрЗаменить(НовыйАкт.Комментарий, "%Документ", Выборка.Реализация);
				ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ЗаказДляРасхождений);
				ЗаказКлиента = ЗаказДляРасхождений.Ссылка;
			КонецЕсли;
			
			ТекущаяСтрока = НакладнаяОбъект.УдалитьРасхожденияТовары[Выборка.НомерСтроки - 1];
			Если Выборка.СтатусУказанияСерий = 10 Тогда // В реализации в ТЧ Серии на ордерном на отгрузку складе серии только со статусом 10
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, ТекущаяСтрока);
				НайденныеСтроки = НакладнаяОбъект.УдалитьРасхожденияСерии.НайтиСтроки(СтруктураПоиска);
				
				Для Каждого СтрокаСерий Из НайденныеСтроки Цикл
					НоваяСтрока = НовыйАкт.Товары.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
					НоваяСтрока.Серия = СтрокаСерий.Серия;
					КоличествоПоДокументу = СтрокаСерий.КоличествоПринято - СтрокаСерий.КоличествоРасхождение;
					Количество            = СтрокаСерий.КоличествоПринято;
					НоваяСтрока.КоличествоПоДокументу         = КоличествоПоДокументу;
					НоваяСтрока.Количество                    = Количество;
					НоваяСтрока.КоличествоУпаковокПоДокументу = КоличествоПоДокументу;
					НоваяСтрока.КоличествоУпаковок            = Количество;
					Если КоличествоПоДокументу > Количество Тогда
						НоваяСтрока.Действие = Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ДопоставкаНеТребуется;
					Иначе
						НоваяСтрока.Действие = Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ПокупкаПерепоставленного;						
					КонецЕсли;
					Если Выборка.НеизвестенЗаказВСтрокеНакладнойВведеннойПоЗаказу Тогда
						НоваяСтрока.ЗаказКлиента = ЗаказКлиента;
					КонецЕсли;
					НакладнаяОбъект.УдалитьРасхожденияСерии.Удалить(СтрокаСерий);
				КонецЦикла;
				
			Иначе
				
				НоваяСтрока = НовыйАкт.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				Если НоваяСтрока.КоличествоПоДокументу > НоваяСтрока.Количество Тогда
					НоваяСтрока.Действие = Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ДопоставкаНеТребуется;
				Иначе
					НоваяСтрока.Действие = Перечисления.ВариантыДействийПоРасхождениямВАктеПослеОтгрузки.ПокупкаПерепоставленного;
				КонецЕсли;
				Если Выборка.НеизвестенЗаказВСтрокеНакладнойВведеннойПоЗаказу Тогда
					НоваяСтрока.ЗаказКлиента = ЗаказКлиента;
				КонецЕсли;
			КонецЕсли;
			НакладнаяОбъект.УдалитьРасхожденияТовары.Удалить(ТекущаяСтрока);
		КонецЦикла;
		
		МетаданныеДокумента = Метаданные.НайтиПоТипу(ТипЗнч(НакладнаяОбъект));
		
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(НовыйАкт, Истина, , РежимЗаписиДокумента.Проведение);
		
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(НакладнаяОбъект, Истина);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		ТекстСообщения = НСтр("ru='Не удалось обработать документ: %Регистратор% по причине: %Причина%';uk='Не вдалося обробити документ: %Регистратор% по причині: %Причина%'");
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", Выборка.ДокументОснование);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		ЗаписьЖурналаРегистрации(ОбновлениеИнформационнойБазы.СобытиеЖурналаРегистрации(),
			УровеньЖурналаРегистрации.Предупреждение,
			МетаданныеДокумента,
			Выборка.ДокументОснование,
			ТекстСообщения);
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры


#КонецОбласти

#Область Прочее

#КонецОбласти

#КонецОбласти
