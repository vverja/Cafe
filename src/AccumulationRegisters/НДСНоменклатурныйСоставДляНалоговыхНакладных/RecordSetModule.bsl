#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	// Ниже приведеный код, должен выполняться до проверки:
	// Если ОбменДанными.Загрузка Тогда
	//	Возврат
	// КонецЕсли;
	// т.к. существет проверка на доп. свойство ДляПроведения, и 
	// данный объект в РИБ при записи должен создавать запись р/с Задания.
	
	Если Не ДополнительныеСвойства.Свойство("ДляПроведения") Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ОтменаПроверкиИзменений") И ДополнительныеСвойства.ОтменаПроверкиИзменений Тогда
		Возврат;
	КонецЕсли;
	
	БлокироватьДляИзменения = Истина;
	
	// Текущее состояние набора помещается во временную таблицу,
	// чтобы при записи получить изменение нового набора относительно текущего.

	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Расчеты.Регистратор                  КАК Регистратор,
	|	Расчеты.Период                       КАК Период,
	|	Расчеты.АналитикаУчетаПоПартнерам    КАК АналитикаУчетаПоПартнерам,
	|	Расчеты.ОбъектРасчетов               КАК ОбъектРасчетов,
	|	Расчеты.ВидПоставки                  КАК ВидПоставки,
	|	Расчеты.Валюта                       КАК Валюта,
	|	Расчеты.СпособЗаполнения             КАК СпособЗаполнения,
	|	Расчеты.СтавкаНДС                    КАК СтавкаНДС,
	|	Расчеты.НомерГТД                     КАК НомерГТД,
	|	Расчеты.Номенклатура                 КАК Номенклатура,
	|	Расчеты.Характеристика               КАК Характеристика,
	|	Расчеты.Упаковка                     КАК Упаковка,
	|	Расчеты.ЦенаНН                       КАК ЦенаНН,
	|	Расчеты.ДокументПоставки             КАК ДокументПоставки,
	|	Расчеты.ДокументПоставкиДляВозвратов КАК ДокументПоставкиДляВозвратов,
	|
	|	Расчеты.КоличествоУпаковок        КАК КоличествоУпаковок,
	|	Расчеты.СуммаВзаиморасчетов       КАК СуммаВзаиморасчетов
	|ПОМЕСТИТЬ РасчетыИсходныеДвижения
	|ИЗ
	|	РегистрНакопления.НДСНоменклатурныйСоставДляНалоговыхНакладных КАК Расчеты
	|ГДЕ
	|	Расчеты.Регистратор = &Регистратор
	|	И Расчеты.СуммаВзаиморасчетов <> 0
	|");
	
	Запрос.УстановитьПараметр("Регистратор",              Отбор.Регистратор.Значение);
	Запрос.МенеджерВременныхТаблиц = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	// Проверка:
	// Если ОбменДанными.Загрузка Тогда
	//	Возврат
	// КонецЕсли;
	// Не требуется, т.к. существет проверка на доп. свойство ДляПроведения,
	// а данный объект в РИБ при записи должен создавать запись р/с Задания.
	
	Если Не ДополнительныеСвойства.Свойство("ДляПроведения") Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ОтменаПроверкиИзменений") И ДополнительныеСвойства.ОтменаПроверкиИзменений Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ЕСТЬNULL(НДСНачальныеПериодыНОДляДокументовПоставки.Дата, Таблица.Период), ДЕНЬ) КАК День,
	|	Таблица.АналитикаУчетаПоПартнерам    КАК АналитикаУчетаПоПартнерам,
	|	Таблица.ОбъектРасчетов               КАК ОбъектРасчетов,
	|	Таблица.Регистратор                  КАК Документ
	|ИЗ
	|	(ВЫБРАТЬ
	|		Расчеты.Регистратор                  КАК Регистратор,
	|		Расчеты.Период                       КАК Период,
	|		Расчеты.АналитикаУчетаПоПартнерам    КАК АналитикаУчетаПоПартнерам,
	|		Расчеты.ОбъектРасчетов               КАК ОбъектРасчетов,
	|		Расчеты.ВидПоставки                  КАК ВидПоставки,
	|		Расчеты.Валюта                       КАК Валюта,
	|		Расчеты.СпособЗаполнения             КАК СпособЗаполнения,
	|		Расчеты.СтавкаНДС                    КАК СтавкаНДС,
	|		Расчеты.НомерГТД                     КАК НомерГТД,
	|		Расчеты.Номенклатура                 КАК Номенклатура,
	|		Расчеты.Характеристика               КАК Характеристика,
	|		Расчеты.Упаковка                     КАК Упаковка,
	|		Расчеты.ЦенаНН                       КАК ЦенаНН,
	|		Расчеты.ДокументПоставки             КАК ДокументПоставки,
	|		Расчеты.ДокументПоставкиДляВозвратов КАК ДокументПоставкиДляВозвратов,
	|
	|		Расчеты.КоличествоУпаковок        КАК КоличествоУпаковок,
	|		Расчеты.СуммаВзаиморасчетов       КАК СуммаВзаиморасчетов
	|	ИЗ РасчетыИсходныеДвижения КАК Расчеты
	|		
	|	ОБЪЕДИНИТЬ ВСЕ
	|		
	|	ВЫБРАТЬ
	|		Расчеты.Регистратор                  КАК Регистратор,
	|		Расчеты.Период                       КАК Период,
	|		Расчеты.АналитикаУчетаПоПартнерам    КАК АналитикаУчетаПоПартнерам,
	|		Расчеты.ОбъектРасчетов               КАК ОбъектРасчетов,
	|		Расчеты.ВидПоставки                  КАК ВидПоставки,
	|		Расчеты.Валюта                       КАК Валюта,
	|		Расчеты.СпособЗаполнения             КАК СпособЗаполнения,
	|		Расчеты.СтавкаНДС                    КАК СтавкаНДС,
	|		Расчеты.НомерГТД                     КАК НомерГТД,
	|		Расчеты.Номенклатура                 КАК Номенклатура,
	|		Расчеты.Характеристика               КАК Характеристика,
	|		Расчеты.Упаковка                     КАК Упаковка,
	|		Расчеты.ЦенаНН                       КАК ЦенаНН,
	|		Расчеты.ДокументПоставки             КАК ДокументПоставки,
	|		Расчеты.ДокументПоставкиДляВозвратов КАК ДокументПоставкиДляВозвратов,
	|
	|		-Расчеты.КоличествоУпаковок        КАК КоличествоУпаковок,
	|		-Расчеты.СуммаВзаиморасчетов       КАК СуммаВзаиморасчетов
	|	ИЗ РегистрНакопления.НДСНоменклатурныйСоставДляНалоговыхНакладных КАК Расчеты
	|	ГДЕ Расчеты.Регистратор = &Регистратор
	|		И Расчеты.СуммаВзаиморасчетов <> 0
	|) КАК Таблица
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НДСНачальныеПериодыНОДляДокументовПоставки КАК НДСНачальныеПериодыНОДляДокументовПоставки
	|	ПО Таблица.Регистратор = НДСНачальныеПериодыНОДляДокументовПоставки.ДокументПоставки
	|СГРУППИРОВАТЬ ПО
	|	НДСНачальныеПериодыНОДляДокументовПоставки.Дата,
	|	Таблица.Период,
	|	Таблица.Регистратор,
	|	Таблица.АналитикаУчетаПоПартнерам,
	|	Таблица.ОбъектРасчетов,
	|	Таблица.ВидПоставки,
	|	Таблица.Валюта,
	|	Таблица.СпособЗаполнения,
	|	Таблица.СтавкаНДС,
	|	Таблица.НомерГТД,
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	Таблица.Упаковка,
	|	Таблица.ЦенаНН,
	|	Таблица.ДокументПоставки,
	|	Таблица.ДокументПоставкиДляВозвратов
	|ИМЕЮЩИЕ
	|	СУММА(Таблица.СуммаВзаиморасчетов) <> 0
	|;
	|////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РасчетыИсходныеДвижения;
	|");
	
	Запрос.УстановитьПараметр("Регистратор",              Отбор.Регистратор.Значение);
	
	СтруктураВременныеТаблицы = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы;
	Запрос.МенеджерВременныхТаблиц = СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;

	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	Если ПланыОбмена.ГлавныйУзел() = Неопределено Тогда
		Выборка = МассивРезультатов[0].Выбрать();
		Пока Выборка.Следующий() Цикл
			Блокировка = Новый БлокировкаДанных;
			ЭлементБлокировки = Блокировка.Добавить("Константа.НомерЗаданияКФормированиюИсходящихНалоговыхДокументов");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Разделяемый;
			Блокировка.Заблокировать();
			
			НаборЗаписей = РегистрыСведений.ЗаданияКФормированиюИсходящихНалоговыхДокументов.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(НаборЗаписей, Выборка);
			НаборЗаписей.НомерЗадания = Константы.НомерЗаданияКФормированиюИсходящихНалоговыхДокументов.Получить();
			НаборЗаписей.КодОтслеживаемогоРегистра = 1;
			Если ТипЗнч(Выборка.Документ) = Тип("ДокументСсылка.Приложение2КНалоговойНакладной") Тогда
				БазовыйДокумент = НДСИсходящийКлиентСервер.ПолучитьБазовыйНалоговыйДокументДляП2(Выборка.Документ);
				Если НЕ БазовыйДокумент = Неопределено Тогда
					НаборЗаписей.День = НачалоДня(БазовыйДокумент.Дата);
				КонецЕсли;
			КонецЕсли;
			НаборЗаписей.Записать();
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
