
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	РежимОтображенияСерий = "ТолькоОстатки";
	
	ПараметрыУказанияСерий = Параметры.ПараметрыУказанияСерий;
	Склад = Параметры.Склад;
	
    Количество = Параметры.Количество;
    
	АвторизованВнешнийПользователь = ОбщегоНазначенияУТКлиентСервер.АвторизованВнешнийПользователь();
	
	РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.Номенклатура, "ВидНоменклатуры,ЕдиницаИзмерения");	
	
	НастройкиИспользованияСерий = Новый ФиксированнаяСтруктура(ЗначениеНастроекПовтИсп.НастройкиИспользованияСерий(
																							РеквизитыНоменклатуры.ВидНоменклатуры,
																							Склад));
                                                                                            
	Если Не НастройкиИспользованияСерий.ИспользоватьСерии Тогда
		ТекстИсключения = НСтр("ru='Для вида номенклатуры ""%ВидНоменклатуры%"" серии не используются';uk='Для виду номенклатури ""%ВидНоменклатуры%"" серії не використовуються'");
		
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ВидНоменклатуры%",НастройкиИспользованияСерий.ВидНоменклатуры);
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
                                                                                            
	ВидНоменклатуры = НастройкиИспользованияСерий.ВладелецСерий;
	
	ШаблонСерии = НастройкиИспользованияСерий.ШаблонЭтикеткиСерии;
	
	Если Не ЗначениеЗаполнено(ШаблонСерии) Тогда
		ШаблонСерии = Справочники.ШаблоныЭтикетокИЦенников.ШаблонПоУмолчанию(Перечисления.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаСерииНоменклатуры);
	КонецЕсли;
	
	Распоряжение = Обработки.ПодборСерийВДокументы.РаспоряжениеПоПараметрамФормы(Параметры);
	
	ПараметрыЗапросаВрем = Новый Структура;
	ПараметрыЗапросаВрем.Вставить("Номенклатура", Параметры.Номенклатура);
	ПараметрыЗапросаВрем.Вставить("Характеристика", Параметры.Характеристика);
	Если Параметры.Свойство("Назначение") Тогда
		ПараметрыЗапросаВрем.Вставить("БезНазначения", Ложь);
		
		Назначение = Параметры.Назначение;
		
		Если ПараметрыУказанияСерий.ИмяПоляСкладОтправитель <> Неопределено
			И ПараметрыУказанияСерий.ИмяПоляСкладПолучатель <> Неопределено Тогда //это перемещение товаров
			Если ПараметрыУказанияСерий.СкладскиеОперации.Найти(Перечисления.СкладскиеОперации.ПередачаВПроизводствоОтгрузка)=Неопределено Тогда
				Назначение = Параметры.НазначениеОтправителя;
			КонецЕсли;	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Назначение) Тогда 
			Если ТипЗнч(Склад) = Тип("СправочникСсылка.Склады") Тогда
				ДвиженияПоСкладскимРегистрам = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Назначение, "ДвиженияПоСкладскимРегистрам");
				Если ДвиженияПоСкладскимРегистрам Тогда
					ПараметрыЗапросаВрем.Вставить("Назначение", Назначение);
				Иначе
					ПараметрыЗапросаВрем.Вставить("Назначение", Справочники.Назначения.ПустаяСсылка());
				КонецЕсли;
			Иначе
				ПараметрыЗапросаВрем.Вставить("Назначение", Назначение);
			КонецЕсли; 
		Иначе
			ПараметрыЗапросаВрем.Вставить("Назначение", Справочники.Назначения.ПустаяСсылка());
		КонецЕсли;
	Иначе
		ПараметрыЗапросаВрем.Вставить("Назначение", Справочники.Назначения.ПустаяСсылка());
		ПараметрыЗапросаВрем.Вставить("БезНазначения", Истина);
		
		ПараметрыЗапросаВрем.Вставить("БезДвиженийПоНазначению", Ложь);
	КонецЕсли;	
	ПараметрыЗапросаВрем.Вставить("Склад", Параметры.Склад);
	ПараметрыЗапросаВрем.Вставить("Помещение", Параметры.Помещение);
	ПараметрыЗапросаВрем.Вставить("Регистратор", Параметры.Регистратор);
	ПараметрыЗапросаВрем.Вставить("Распоряжение", Распоряжение);
	
	ПараметрыЗапроса = Новый ФиксированнаяСтруктура(ПараметрыЗапросаВрем);
	
    ВариантПолучениеДанныхИзРегистров = Обработки.ПодборСерийВДокументы.ВариантПолучениеДанныхИзРегистровПоПараметрамФормы(ПараметрыУказанияСерий, Распоряжение, Параметры.Склад, ВидНоменклатуры);    
	ВыполнитьЗапросЗаполненияТаблицыОстатков();
	
	Заголовки = Обработки.ПодборСерийВДокументы.ЗаголовкиПоВариантуПолучениеДанныхИзРегистров(ВариантПолучениеДанныхИзРегистров);
	
	Элементы.РежимОтображенияСерий.СписокВыбора[0].Представление = Заголовки.ЗаголовокКнопки;
	
	Если ВариантПолучениеДанныхИзРегистров <> "ВсеСерииНоменклатуры" Тогда
		ЗаголовокСвободногоОстатка = СтрЗаменить(Заголовки.ЗаголовокСвободногоОстатка,"%ЕдиницаИзмерения%", РеквизитыНоменклатуры.ЕдиницаИзмерения);
		Элементы.ОстаткиСерийСвободныйОстаток.Заголовок = ЗаголовокСвободногоОстатка;
	Иначе
		Элементы.ОстаткиСерийСвободныйОстаток.Видимость = Ложь;
		Элементы.РежимОтображенияСерий.Видимость = Ложь;
    КонецЕсли;
    
    Серия = Параметры.Серия;
    
    Элементы.ПанельНавигации.ТекущаяСтраница = Элементы.СтраницаНавигацииОкончание;
    Элементы.ГруппаНазад.Видимость = Ложь;
    
    НайденныеСтроки = ОстаткиСерий.НайтиСтроки(Новый Структура("Серия",Серия));
    Если НайденныеСтроки.Количество() > 0 Тогда
        Элементы.ОстаткиСерий.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
    КонецЕсли;
    
	Элементы.СгенерироватьНомер.Видимость = Истина;
	Элементы.ГруппаНомер.Видимость = НастройкиИспользованияСерий.ИспользоватьНомерСерии;
    Элементы.ГоденДо.Видимость = НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии;
	
	Элементы.Номер.ТолькоПросмотр = Ложь;
	
	Элементы.ПечатьЭтикетки.Видимость = Истина;
	
	Элементы.ОстаткиСерийГоденДо.Видимость = НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии;
	Элементы.ОстаткиСерийНомер.Видимость = НастройкиИспользованияСерий.ИспользоватьНомерСерии;
	
	Если НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии Тогда
		Элементы.ГоденДо.Формат               = НастройкиИспользованияСерий.ФорматнаяСтрокаСрокаГодности;
		Элементы.ГоденДо.ФорматРедактирования = НастройкиИспользованияСерий.ФорматнаяСтрокаСрокаГодности;
		Элементы.ОстаткиСерийГоденДо.Формат   = НастройкиИспользованияСерий.ФорматнаяСтрокаСрокаГодности;
	КонецЕсли;
	
	ИдентификаторТекущейСтроки = Параметры.ИдентификаторТекущейСтроки;
	
	Если Параметры.ТолькоПросмотр Тогда
		Параметры.ТолькоПросмотр = Ложь; //Для исключения платформенной обработки
		
		Элементы.Номер.ТолькоПросмотр   = Истина;
		Элементы.ГоденДо.ТолькоПросмотр = Истина;
		Элементы.ОК.Доступность         = Ложь;
		
		РежимПросмотра = Истина;
	КонецЕсли;
	
	ЗакрыватьПриВыборе = Ложь;
	
	ЗаполнитьРеквизитыПоСерии(ЭтаФорма,Серия);
	
	Если ЗначениеЗаполнено(Параметры.Текст)
	 И (Не ЗначениеЗаполнено(Серия) ИЛИ Параметры.Текст <> Наименование) Тогда
	 	РеквизитыСерииИзСтроки = РеквизитыСерииИзСтроки(Параметры.Текст, НастройкиИспользованияСерий);
		ЗаполнитьЗначенияСвойств(ЭтаФорма,РеквизитыСерииИзСтроки);
	КонецЕсли;
	
	Если Не ПустаяСтрока(Номер) Тогда
		Номер = Номер + " ";
	КонецЕсли;
	
	ПравоДобавленияСерий = ПравоДоступа("Добавление", Метаданные.Справочники.СерииНоменклатуры);
	
	Если ПравоДобавленияСерий Тогда
		
		// Выведем поля для заполнения доп. реквизитов серий 
		Если ЗначениеЗаполнено(Параметры.Серия) Тогда
			СерияОбъект = Параметры.Серия.ПолучитьОбъект();
		Иначе
			СерияОбъект = Обработки.ПодборСерийВДокументы.ВладелецСвойствСерий(ВидНоменклатуры);
		КонецЕсли;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Объект", СерияОбъект);
		ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
		УправлениеСвойствами.ПриСозданииНаСервере(ЭтаФорма, ДополнительныеПараметры);
		
		УправлениеСвойствамиУТ.УстановитьОтметкуНезаполненныхСвойств(ЭтаФорма, СерияОбъект);
		
    КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ПравоДобавленияСерий Тогда
		// СтандартныеПодсистемы.Свойства
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
		// Конец СтандартныеПодсистемы.Свойства
	КонецЕсли;
	
	Если СтрДлина(Номер) > 0 Тогда
		Элементы.Номер.УстановитьГраницыВыделения(СтрДлина(Номер),СтрДлина(Номер));
	КонецЕсли;
	
	МенеджерОборудованияКлиентПереопределяемый.НачатьПодключениеОборудованиеПриОткрытииФормы(ЭтаФорма, "СканерШтрихкода");

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()

	МенеджерОборудованияКлиентПереопределяемый.НачатьОтключениеОборудованиеПриЗакрытииФормы(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
    Если Источник = "ПодключаемоеОборудование" И ВводДоступен() И НЕ ТолькоПросмотр Тогда
        ЗавершитьПодбор = Ложь;
		Если ИмяСобытия = "ScanData" Тогда
			Если РежимПросмотра Тогда
				Возврат;
			КонецЕсли;
			
			Если ОбработатьШтрихкоды(МенеджерОборудованияКлиент.ПреобразоватьДанныеСоСканераВМассив(Параметр)) Тогда
                ЗавершитьПодбор = Истина;
			КонецЕсли;
			
        КонецЕсли;
        
		Если ЗавершитьПодбор
			И ОбязательныеРеквизитыЗаполнены(Ложь) Тогда
			ПодключитьОбработчикОжидания("ПодобратьСериюЗавершитьВвод",0.1, Истина);
		КонецЕсли;
        
    КонецЕсли;
    
	Если ИмяСобытия = "Запись_СерииНоменклатуры" Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма,Параметр);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ПравоДобавленияСерий Тогда
		// Проверим заполнение обязательных доп. реквизитов серий
		УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтаФорма, Отказ, ПроверяемыеРеквизиты);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

&НаКлиенте
Процедура РежимПросмотраПриИзменении(Элемент)
	ВыполнитьЗапросЗаполненияТаблицыОстатков();
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиСерийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОстаткиСерийВыборКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиСерийВыборКлиент()

	ТекущиеДанные = Элементы.ОстаткиСерий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ТекстПредупреждения = НСтр("ru='Выберите серию или введите новую.';uk='Виберіть серію або введіть нову.'");	
		ПоказатьПредупреждение(Неопределено, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
    
    ПодобратьСериюЗавершитьВвод();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
    
    ПодобратьСериюЗавершитьВвод();
    
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Далее(Команда)
	
	Если Элементы.СтраницыСерий.ТекущаяСтраница = Элементы.СтраницаОстаткиСерий Тогда
		ОстаткиСерийВыборКлиент();
	Иначе
		
		
        Если Не ОбязательныеРеквизитыЗаполнены() Тогда    
			Возврат;
		КонецЕсли;
		ПерейтиНаСледующийШаг();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	ВернутьсяНаПредыдущийШаг();
	
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьНомер(Команда)
	
	СгенерироватьНомерСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЭтикетки(Команда)
	
	КоличествоЭтикеток = Количество;
	
	Если Не ЗначениеЗаполнено(ШаблонСерии) Тогда
		
		Отбор = Новый Структура;
		Отбор.Вставить("Назначение", ПредопределенноеЗначение("Перечисление.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаСерииНоменклатуры"));
		
		ПараметрыФормы = Новый Структура("Отбор",Отбор);
		
		ОткрытьФорму(
			"Справочник.ШаблоныЭтикетокИЦенников.ФормаВыбора",
			ПараметрыФормы,ЭтаФорма,,,,
			Новый ОписаниеОповещения("ПечатьЗавершение", 
				ЭтотОбъект,
				Новый Структура("КоличествоЭтикеток", КоличествоЭтикеток)),
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
		Возврат;
		
	КонецЕсли;
	
	ПечатьФрагмент(КоличествоЭтикеток);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

#Область Печать

&НаСервере
Функция НайтиСерию()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СерииНоменклатуры.Ссылка КАК Серия
	|ИЗ
	|	Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|ГДЕ
	|	СерииНоменклатуры.ВидНоменклатуры = &ВидНоменклатуры
	|	И СерииНоменклатуры.ГоденДо = &ГоденДо
	|	И СерииНоменклатуры.Номер = &Номер";
	
	Запрос.УстановитьПараметр("ВидНоменклатуры", ВидНоменклатуры);
	
	Если НастройкиИспользованияСерий.ИспользоватьНомерСерии Тогда
		Запрос.УстановитьПараметр("Номер", СокрЛП(Номер));
	Иначе
		Запрос.УстановитьПараметр("Номер", "");
	КонецЕсли;
		
	Если НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии Тогда
		Запрос.УстановитьПараметр("ГоденДо", ГоденДо);
	Иначе
		Запрос.УстановитьПараметр("ГоденДо", '00010101000000');
	КонецЕсли;	
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Серия;
	КонецЕсли;
	
	Возврат Справочники.СерииНоменклатуры.ПустаяСсылка();
	
КонецФункции

&НаКлиенте
Процедура ПечатьЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    ШаблонСерии = Результат;
    
    Если Не ЗначениеЗаполнено(ШаблонСерии) Тогда
        Возврат;
    КонецЕсли;
    
    ПечатьФрагмент(ДополнительныеПараметры.КоличествоЭтикеток);

КонецПроцедуры

&НаКлиенте
Процедура ПечатьФрагмент(КоличествоЭтикеток)
    
	Если Не НайтиСоздатьСерию() Тогда
	    Возврат;
	КонецЕсли;
	
	ПоказатьВводЧисла(
		Новый ОписаниеОповещения(
			"ПечатьФрагментЗавершение", 
			ЭтотОбъект,
			Новый Структура("Серия", Серия)),
		КоличествоЭтикеток,
		НСтр("ru='Количество экземпляров';uk='Кількість екземплярів'"),
		8,
		0);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьФрагментЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Результат) ИЛИ Результат < 1 Тогда
		Возврат;
	КонецЕсли;
	
    СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("АдресВХранилище", ПодготовитьДанныеДляПечати(Результат, ДополнительныеПараметры.Серия));
    
    СтруктураПараметров.Вставить("ШаблонЭтикетки", ШаблонСерии); 
    СтруктураПараметров.Вставить("НазначениеШаблона", ПредопределенноеЗначение("Перечисление.НазначенияШаблоновЭтикетокИЦенников.ЭтикеткаСерииНоменклатуры"));
    СтруктураПараметров.Вставить("КоличествоЭкземпляров", 1);
    
    ПараметрКоманды = Новый Массив;
    ПараметрКоманды.Добавить(ПредопределенноеЗначение("Справочник.СерииНоменклатуры.ПустаяСсылка"));
    
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
        "Обработка.ПечатьЭтикетокИЦенников",
        "ЭтикеткаСерииНоменклатуры",
        ПараметрКоманды,
        ЭтаФорма,
        СтруктураПараметров);
    
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьДанныеДляПечати(КоличествоЭтикеток, Знач Серия)
	
	СерииНоменклатуры = Новый ТаблицаЗначений;
	СерииНоменклатуры.Колонки.Добавить("Серия",Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	СерииНоменклатуры.Колонки.Добавить("Штрихкод",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(16)));
	
	КоличествоЭкз = КоличествоЭтикеток;
	
	Пока КоличествоЭкз > 0 Цикл
		
		КоличествоЭкз = КоличествоЭкз - 1;
		
		НоваяСтрока = СерииНоменклатуры.Добавить();
		НоваяСтрока.Серия = Серия;
		Если НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии	И НастройкиИспользованияСерий.ИспользоватьНомерСерии Тогда
			НоваяСтрока.ШтрихКод = СокрЛП(Номер) + Формат(ГоденДо, "ДФ=""ддММггЧЧ""");
		ИначеЕсли НастройкиИспользованияСерий.ИспользоватьНомерСерии Тогда
			НоваяСтрока.ШтрихКод = СокрЛП(Номер);
		Иначе
			НоваяСтрока.ШтрихКод = Формат(ГоденДо, "ДФ=""ддММггЧЧ""");
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ПоместитьВоВременноеХранилище(СерииНоменклатуры);
	
КонецФункции

#КонецОбласти

#Область ШтрихкодыИТорговоеОборудование

&НаКлиенте
Функция ОбработатьШтрихкоды(ДанныеШтрихкодов)
	
	Если ДанныеШтрихкодов.Количество() <> 1 Тогда
		
		ТекстСообщения = НСтр("ru='Не поддерживается одновременное распознование нескольких штрих-кодов серий. Сканируйте серии по одной.';uk='Не підтримується одночасне розпізнавання декількох штрих-кодів серій. Скануйте серії по одній.'");
		ПоказатьПредупреждение(,ТекстСообщения);
		Возврат Ложь;
		
	КонецЕсли;
	
	ОбработатьШтрихкодыСервер(ДанныеШтрихкодов);
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура ОбработатьШтрихкодыСервер(ДанныеШтрихкодов)
	
	ШтрихкодыПоТипам = ШтрихкодированиеНоменклатурыСервер.СтруктураПоТипамШтрихкодов(ДанныеШтрихкодов);
	
	Если ШтрихкодыПоТипам.БезТипа.Количество() > 0 Тогда
		Штрихкод = ДанныеШтрихкодов[0].Штрихкод;
		
		ПоляИзШтрихкода = НоменклатураКлиентСервер.ИнформацияОСерииИзШтрихкода(Штрихкод, 
																				НастройкиИспользованияСерий.ИспользоватьНомерСерии,
																				НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии);
		Номер   = ПоляИзШтрихкода.Номер;
		ГоденДо = ПоляИзШтрихкода.ГоденДо;
		
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура СгенерироватьНомерСервер()
	
	НомерЧислом = Справочники.СерииНоменклатуры.ВычислитьМаксимальныйНомерСерии(ВидНоменклатуры) + 1;
	Номер = Формат(НомерЧислом, "ЧЦ=8; ЧВН=; ЧГ=");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ДанныеСерии(ДанныеДляЗаполнения)
	
	ДанныеСерии = РеквизитыВводаСерии();
	ЗаполнитьЗначенияСвойств(ДанныеСерии, ДанныеДляЗаполнения);
	
	Возврат ДанныеСерии;
	
КонецФункции

&НаКлиенте
Процедура ПодобратьСериюЗавершитьВвод()
	
	Если РежимПросмотра Тогда
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	
	ВозвращаемоеЗначение = НоменклатураКлиентСервер.ВыбраннаяСерия();
	
	Если Элементы.СтраницыСерий.ТекущаяСтраница = Элементы.СтраницаОстаткиСерий Тогда
		
		Если Элементы.ОстаткиСерий.ТекущиеДанные <> Неопределено Тогда
			Серия = Элементы.ОстаткиСерий.ТекущиеДанные.Серия;
		Иначе
			Серия = ПредопределенноеЗначение("Справочник.СерииНоменклатуры.ПустаяСсылка");
		КонецЕсли;
		
	ИначеЕсли НЕ ОбязательныеРеквизитыЗаполнены()
		Или НЕ НайтиСоздатьСерию() Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ВозвращаемоеЗначение.ИдентификаторТекущейСтроки = ИдентификаторТекущейСтроки;
	ВозвращаемоеЗначение.Значение = Серия;
	ОповеститьОВыборе(ВозвращаемоеЗначение);
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Функция ОбязательныеРеквизитыЗаполнены(ВыводитьСообщения = Истина)
	
	ОчиститьСообщения();
	
	Результат = Истина;
	
	Если НастройкиИспользованияСерий.ИспользоватьНомерСерии И Не ЗначениеЗаполнено(СокрЛП(Номер)) Тогда
		Результат = Ложь;
		Если ВыводитьСообщения Тогда
			ТекстСообщения = НСтр("ru='Поле ""Номер"" не заполнено';uk='Поле ""Номер"" не заповнено'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"Номер");
		КонецЕсли;
	КонецЕсли;
	
	Если НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии	И Не ЗначениеЗаполнено(ГоденДо) Тогда
		Результат = Ложь;
		Если ВыводитьСообщения Тогда
			ТекстСообщения = НСтр("ru='Поле ""Годен до"" не заполнено';uk='Поле ""Придатний до"" не заповнено'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"ГоденДо");
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция НайтиСоздатьСерию()
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат Ложь;
	КонецЕсли;
		
	Серия = НайтиСерию();
	
	Если Не ЗначениеЗаполнено(Серия) Тогда
		
		СоздатьСерию();
		
	ИначеЕсли ПравоДобавленияСерий Тогда
	
		СерияОбъект = Серия.ПолучитьОбъект();
		
		// Запишем доп. реквизиты серии
		УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, СерияОбъект);
		
		СерияОбъект.Номер    = Номер;
		СерияОбъект.ГоденДо  = ГоденДо;
		СерияОбъект.Записать();
		
		Серия = СерияОбъект.Ссылка;
		
	КонецЕсли;
	
	Возврат ЗначениеЗаполнено(Серия);
	
КонецФункции

&НаСервере
Функция СоздатьСерию()
		
	Если Не ПравоДобавленияСерий Тогда
		
		ТекстСообщения = НСтр("ru='В программе еще не зарегистрирована серия %ПредставлениеСерии%. Недостаточно прав для регистрации новой серии.';uk='В програмі ще не зареєстрована серія %ПредставлениеСерии%. Недостатньо прав для реєстрації нової серії.'");
		
		ПредставлениеСерии = НоменклатураКлиентСервер.ПредставлениеСерии(НастройкиИспользованияСерий, ЭтаФорма);
		
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеСерии%", ПредставлениеСерии);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		Возврат Ложь;
		
	Иначе
	
		СерияОбъект = Справочники.СерииНоменклатуры.СоздатьЭлемент();
		СерияОбъект.Номер           = Номер;
		СерияОбъект.ВидНоменклатуры = ВидНоменклатуры;
		СерияОбъект.ГоденДо         = ГоденДо;
			
		// Запишем доп. реквизиты серии
		УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтаФорма, СерияОбъект);
		
		СерияОбъект.Номер          = Номер;
		
		СерияОбъект.Записать();
		
		Серия = СерияОбъект.Ссылка;
		
		Возврат Истина;
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ВыполнитьЗапросЗаполненияТаблицыОстатков()
	ТекстЗапроса = Обработки.ПодборСерийВДокументы.ТекстЗапросаФормированияТаблицыДанныеРегистров(ВариантПолучениеДанныхИзРегистров, Склад);
	
	ТекстЗапроса = ТекстЗапроса + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	ТекстЗапроса = ТекстЗапроса + 
	"ВЫБРАТЬ
	|	ДанныеРегистров.Серия КАК Серия,
	|	ВЫРАЗИТЬ(ДанныеРегистров.Серия КАК Справочник.СерииНоменклатуры).Номер КАК Номер,
	|	ВЫРАЗИТЬ(ДанныеРегистров.Серия КАК Справочник.СерииНоменклатуры).ГоденДо КАК ГоденДо,
	|	ДанныеРегистров.СвободныйОстаток КАК СвободныйОстаток
	|ИЗ
	|	ДанныеРегистров КАК ДанныеРегистров
	|ГДЕ
	|	ДанныеРегистров.СвободныйОстаток > 0
	|	ИЛИ &ВсеСерии
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоденДо,
	|	Номер";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Для Каждого Параметр из ПараметрыЗапроса Цикл
		Запрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);
	КонецЦикла;
	
	Если ВариантПолучениеДанныхИзРегистров <> "ВсеСерииНоменклатуры" Тогда
		Запрос.УстановитьПараметр("ВсеСерии", РежимОтображенияСерий = "ВсеСерии");
	Иначе
		Запрос.УстановитьПараметр("ВсеСерии", Истина);
	КонецЕсли;
	
	ОстаткиСерий.Загрузить(Запрос.Выполнить().Выгрузить());
	
	КоличествоСерий = ОстаткиСерий.Количество();
	
	// Доп. реквизиты
	УправлениеСвойствамиУТ.ДобавитьКолонкиДополнительныхРеквизитов(
		Обработки.ПодборСерийВДокументы.ВладелецСвойствСерий(ВидНоменклатуры),
		ЭтаФорма,
		"ОстаткиСерий",
		"ОстаткиСерий",
		"ОстаткиСерийСвободныйОстаток",
		Истина);
	УправлениеСвойствамиУТ.ЗаполнитьКолонкиДополнительныхРеквизитов(
		ЭтаФорма,
		"ОстаткиСерий",
		"Серия");

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция РеквизитыСерииИзСтроки(Знач Строка, НастройкиИспользованияСерий)
	
    РеквизитыСерии = Новый Структура("Номер,ГоденДо","",'00010101');
	ГоденДо = Неопределено;
	Номер   = Неопределено;
	
	Строка = СтрЗаменить(Строка, " "+" "," ");
	
	Если НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии Тогда
		СтрокаГоденДо = "";
		Если НастройкиИспользованияСерий.ТочностьУказанияСрокаГодностиСерии 
				= ПредопределенноеЗначение("Перечисление.ТочностиУказанияСрокаГодности.СТочностьюДоЧасов") Тогда
			ДлинаСтрокиГоденДо = СтрДлина(НастройкиИспользованияСерий.ФорматнаяСтрокаСрокаГодности) - 5; // 5 = СтрДлина("ДФ=''")	
		Иначе	
			ДлинаСтрокиГоденДо = СтрДлина(НастройкиИспользованияСерий.ФорматнаяСтрокаСрокаГодности) - 3; // 3 = СтрДлина("ДФ=")
		КонецЕсли;
        
        СтрокаГоденДо = Прав(СокрЛП(Строка), ДлинаСтрокиГоденДо);
		
	КонецЕсли;
	
	Если НастройкиИспользованияСерий.ИспользоватьСрокГодностиСерии Тогда
		
		Если СтрДлина(СтрокаГоденДо) <> ДлинаСтрокиГоденДо Тогда
			ГоденДо = '00010101';
		КонецЕсли;
		
		Если ГоденДо = Неопределено Тогда
			МассивЧастей = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаГоденДо,".");
			
			Если МассивЧастей.Количество() < 3 Тогда
				ГоденДо = '00010101';
			КонецЕсли;
		КонецЕсли;
		
		Если ГоденДо = Неопределено Тогда
			День  = МассивЧастей[0];
			Месяц = МассивЧастей[1];
			
			Если НастройкиИспользованияСерий.ТочностьУказанияСрокаГодностиСерии 
				= ПредопределенноеЗначение("Перечисление.ТочностиУказанияСрокаГодности.СТочностьюДоЧасов") Тогда
				ГодЧас =  СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(МассивЧастей[2]," ");
				Если ГодЧас.Количество() = 2 Тогда
					Год = ГодЧас[0];
					Час = ГодЧас[1];
				ИначеЕсли ГодЧас.Количество() = 1 Тогда
					Год = ГодЧас[0];
					Час = "00";
				Иначе
					Год = "00";
					Час = "00";
				КонецЕсли;
			Иначе	
				Год = МассивЧастей[2];
				Час = "00";
			КонецЕсли;
			
			Если СтрНайти(Час, ":") > 0 Тогда
				Час = Лев(Час, СтрНайти(Час, ":") - 1);
			КонецЕсли;
			
			Попытка
 				ГоденДо = Дата("20" + Год + Месяц + День + Час + "0000");
			Исключение	
			КонецПопытки;
		КонецЕсли;
		
	КонецЕсли;
	
	Если НастройкиИспользованияСерий.ИспользоватьНомерСерии Тогда
		Если ЗначениеЗаполнено(ГоденДо) Тогда
			Номер = СтрЗаменить(Строка," " + НСтр("ru='до';uk='до'") + " " + СтрокаГоденДо, "");
		Иначе
			Номер = Строка;
		КонецЕсли; 	
	КонецЕсли;
	
	
	Если Номер <> Неопределено Тогда
		РеквизитыСерии.Номер = Номер;
	КонецЕсли;
	
	Если ГоденДо <> Неопределено Тогда
		РеквизитыСерии.ГоденДо = ГоденДо;
	КонецЕсли;
	
	
	Возврат РеквизитыСерии; 
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция РеквизитыВводаСерии()
	РеквизитыВводаСерии = Новый Структура("Серия,
		|ГоденДо,
		|Номер");
	Возврат РеквизитыВводаСерии;
КонецФункции

&НаСервере
Процедура ПерейтиНаСледующийШаг()
	
	Если Элементы.СтраницыСерий.ТекущаяСтраница = Элементы.СтраницаВводСерии Тогда
		Если НЕ НайтиСоздатьСерию() Тогда
			Возврат;
		КонецЕсли;
		СерияСписываемая = Серия;
	Иначе
		ТекущиеДанные    = ОстаткиСерий.НайтиПоИдентификатору(Элементы.ОстаткиСерий.ТекущаяСтрока);
		СерияСписываемая = ТекущиеДанные.Серия;
	КонецЕсли;
	
	СерияСписываемаяКешВвода = Новый ФиксированнаяСтруктура(ДанныеСерии(ЭтаФорма));
	
	НастроитьФормуПоШагу("Шаг2");
	
КонецПроцедуры

&НаСервере
Процедура ВернутьсяНаПредыдущийШаг()
	
	Если Элементы.СтраницыСерий.ТекущаяСтраница = Элементы.СтраницаВводСерии Тогда
		СерияНовая = Серия;
	Иначе
		ТекущиеДанные =ОстаткиСерий.НайтиПоИдентификатору(Элементы.ОстаткиСерий.ТекущаяСтрока);
		СерияНовая = ТекущиеДанные.Серия;
	КонецЕсли;
	
	СерияНоваяКешВвода = Новый ФиксированнаяСтруктура(ДанныеСерии(ЭтаФорма));
	
	НастроитьФормуПоШагу("Шаг1");
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФормуПоШагу(Шаг)
	
	Если Шаг = "Шаг1" Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтаФорма, СерияСписываемаяКешВвода);
		
		Элементы.ПанельНавигации.ТекущаяСтраница = Элементы.СтраницаНавигацииНачало;
		Элементы.Далее.КнопкаПоУмолчанию = Истина;
		
		Элементы.Номер.ПодсказкаВвода = "";
		Элементы.Номер.Подсказка = "";
		
		Элементы.ГоденДо.ТолькоПросмотр = Истина;
		Элементы.ГоденДо.АвтоОтметкаНезаполненного = Ложь;
		
		ЭтаФорма.Заголовок = НСтр("ru='Укажите списываемую серию';uk='Вкажіть серію, що списується'");
		Элементы.СтраницыСерий.ТекущаяСтраница = Элементы.СтраницаОстаткиСерий;
		ИскомаяСерия = СерияСписываемая;
		
	Иначе
		
		ЗаполнитьЗначенияСвойств(ЭтаФорма, СерияНоваяКешВвода);
		
		Элементы.ПанельНавигации.ТекущаяСтраница = Элементы.СтраницаНавигацииОкончание;
		Элементы.ОК.КнопкаПоУмолчанию = Истина;
		
		
		Элементы.ГоденДо.ТолькоПросмотр = Ложь;
		Элементы.ГоденДо.АвтоОтметкаНезаполненного = Истина;
		
		ЭтаФорма.Заголовок = НСтр("ru='Укажите новую серию';uk='Вкажіть нову серію'");
		Элементы.СтраницыСерий.ТекущаяСтраница = Элементы.СтраницаВводСерии;
		ИскомаяСерия = СерияНовая;
		
	КонецЕсли;
	
	
	НайденныеСтроки = ОстаткиСерий.НайтиСтроки(Новый Структура("Серия",ИскомаяСерия));
	Если НайденныеСтроки.Количество() > 0 Тогда
		Элементы.ОстаткиСерий.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьРеквизитыПоСерии(Приемник, Знач СерияДляЗаполнения)
	
	Если ЗначениеЗаполнено(СерияДляЗаполнения) Тогда
		Если ТипЗнч(СерияДляЗаполнения) = Тип("СправочникСсылка.СерииНоменклатуры") Тогда
			Приемник.Серия = СерияДляЗаполнения;
			СерияСсылка = СерияДляЗаполнения;
		Иначе
			ЗаполнитьЗначенияСвойств(Приемник, СерияДляЗаполнения);
			СерияСсылка = СерияДляЗаполнения.Серия;
		КонецЕсли;
		Если ЗначениеЗаполнено(СерияСсылка) Тогда
			РеквизитыСерии = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СерияСсылка,
            	"Наименование,Номер,ГоденДо");
			ЗаполнитьЗначенияСвойств(Приемник, РеквизитыСерии);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
