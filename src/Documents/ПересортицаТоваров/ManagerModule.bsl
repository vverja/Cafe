#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов


// Заполняет список команд создания на основании.
// 
// Параметры:
//   КомандыСоздатьНаОсновании - ТаблицаЗначений - состав полей см. в функции ВводНаОсновании.СоздатьКоллекциюКомандСоздатьНаОсновании
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСоздатьНаОсновании) Экспорт


	ВводНаОснованииПереопределяемый.ДобавитьКомандуСоздатьНаОснованииБизнесПроцессЗадание(КомандыСоздатьНаОсновании);


КонецПроцедуры

Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСоздатьНаОсновании) Экспорт

	 
	Если ПравоДоступа("Добавление", Метаданные.Документы.ПересортицаТоваров) Тогда
		КомандаСоздатьНаОсновании = КомандыСоздатьНаОсновании.Добавить();
		КомандаСоздатьНаОсновании.Идентификатор = Метаданные.Документы.ПересортицаТоваров.ПолноеИмя();
		КомандаСоздатьНаОсновании.Представление = ВводНаОсновании.ПредставлениеОбъекта(Метаданные.Документы.ПересортицаТоваров);
		КомандаСоздатьНаОсновании.ПроверкаПроведенияПередСозданиемНаОсновании = Истина;
		
		Возврат КомандаСоздатьНаОсновании;
	КонецЕсли;

	Возврат Неопределено;
КонецФункции

// Заполняет список команд отчетов.
// 
// Параметры:
//   КомандыОтчетов - ТаблицаЗначений - состав полей см. в функции МенюОтчеты.СоздатьКоллекциюКомандОтчетов
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов) Экспорт

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуСтруктураПодчиненности(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуДвиженияДокумента(КомандыОтчетов);

	ВариантыОтчетовУТПереопределяемый.ДобавитьКомандуОстаткиТоваровОрганизаций(КомандыОтчетов);

КонецПроцедуры


#Область Серии

//Имена реквизитов, от значений которых зависят параметры указания серий
//
//	Возвращаемое значение:
//		Строка - имена реквизитов, перечисленные через запятую
//
Функция ИменаРеквизитовДляЗаполненияПараметровУказанияСерий() Экспорт
	ИменаРеквизитов = "Склад,Дата";
	
	Возврат ИменаРеквизитов;
КонецФункции

//Возвращает параметры указания серий для товаров, указанных в документе
//
//	Параметры
//			Объект - Структура - структура значений реквизитов объекта, необходимых для заполнения параметров указания серий
//	Возвращаемое значение
//			Тип Структура
//				Состав полей задается в функции ОбработкаТабличнойЧастиКлиентСервер.ПараметрыУказанияСерий
//
Функция ПараметрыУказанияСерий(Объект) Экспорт
	
	ПараметрыУказанияСерий = НоменклатураКлиентСервер.ПараметрыУказанияСерий();
	
	ПараметрыУказанияСерий.ПолноеИмяОбъекта = "Документ.ПересортицаТоваров";
	
	ПараметрыСерийСклада = СкладыСервер.ИспользованиеСерийНаСкладе(Объект.Склад, Ложь);
	
	ПараметрыУказанияСерий.ИмяТЧСерии = "Товары";
	ПараметрыУказанияСерий.УчитыватьСебестоимостьПоСериям = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	ПараметрыУказанияСерий.ИспользоватьСерииНоменклатуры  = ПараметрыСерийСклада.УчитыватьСебестоимостьПоСериям;
	
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтражениеИзлишков);
	ПараметрыУказанияСерий.СкладскиеОперации.Добавить(Перечисления.СкладскиеОперации.ОтражениеНедостач);
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("НоменклатураОприходование");
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("ХарактеристикаОприходование");
	
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("Назначение");
	ПараметрыУказанияСерий.ПоляСвязи.Добавить("НазначениеОприходование");
	
	ПараметрыУказанияСерий.ЭтоНакладная = Истина;
	
	ПараметрыУказанияСерий.ТолькоСерииДляСебестоимости = Истина;
	ПараметрыУказанияСерий.Дата = Объект.Дата;
	
	ПараметрыУказанияСерий.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерий");
	ПараметрыУказанияСерий.ИменаПолейСтатусУказанияСерий.Добавить("СтатусУказанияСерийОприходование");
	ПараметрыУказанияСерий.ОсобеннаяПроверкаСтатусовУказанияСерий = Истина;
	
	Возврат ПараметрыУказанияСерий;
КонецФункции

// Возвращает текст запроса расчета статусов указания серий
//		
Функция ТекстЗапросаЗаполненияСтатусовУказанияСерий(ПараметрыУказанияСерий) Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.Характеристика,
	|	Товары.Серия,
	|	Товары.НоменклатураОприходование,
	|	Товары.ХарактеристикаОприходование,
	|	Товары.СерияОприходование,
	|	Товары.Количество,
	|	Товары.СтатусУказанияСерий,
	|	Товары.СтатусУказанияСерийОприходование,
	|	Товары.НомерСтроки
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.СтатусУказанияСерий КАК СтарыйСтатусУказанияСерий,
	|	Товары.СтатусУказанияСерийОприходование КАК СтарыйСтатусУказанияСерийОприходование,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПолитикиУчетаСерий.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|					ТОГДА ВЫБОР
	|							КОГДА Товары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 14
	|							ИНАЧЕ 13
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерий,
	|	ВЫБОР
	|		КОГДА ПолитикиУчетаСерийОприходование.ПолитикаУчетаСерий ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПолитикиУчетаСерийОприходование.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям
	|					ТОГДА ВЫБОР
	|							КОГДА Товары.СерияОприходование <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|								ТОГДА 14
	|							ИНАЧЕ 13
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК СтатусУказанияСерийОприходование
	|ПОМЕСТИТЬ Статусы
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерий
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	|			ПО ПолитикиУчетаСерий.Склад = Склады.Ссылка
	|		ПО (ПолитикиУчетаСерий.Склад = &Склад)
	|			И (ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерий.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры.ПолитикиУчетаСерий КАК ПолитикиУчетаСерийОприходование
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК СкладыОприходование
	|			ПО ПолитикиУчетаСерийОприходование.Склад = СкладыОприходование.Ссылка
	|		ПО (ПолитикиУчетаСерийОприходование.Склад = &Склад)
	|			И (ВЫРАЗИТЬ(Товары.НоменклатураОприходование КАК Справочник.Номенклатура).ВидНоменклатуры = ПолитикиУчетаСерийОприходование.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Статусы.НомерСтроки КАК НомерСтроки,
	|	Статусы.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	Статусы.СтатусУказанияСерийОприходование КАК СтатусУказанияСерийОприходование
	|ИЗ
	|	Статусы КАК Статусы
	|ГДЕ
	|	(Статусы.СтатусУказанияСерий <> Статусы.СтарыйСтатусУказанияСерий
	|			ИЛИ Статусы.СтатусУказанияСерийОприходование <> Статусы.СтарыйСтатусУказанияСерийОприходование)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;

КонецФункции

// Возвращает текст запроса для получениях доступных назначений
//	Параметры:
//		ПараметрыФормированияЗапроса - Структура - параметры для формирования текстов запросов
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаДоступныхНазначений(ПараметрыФормированияЗапроса) Экспорт
	
	Возврат Справочники.Назначения.ТекстЗапросаНеобеспеченныхНазначенийОбеспечено(ПараметрыФормированияЗапроса);
	
КонецФункции

// Возвращает текст запроса для проверки заполнения серий
//	Параметры:
//		ПараметрыУказанияСерий - Структура - состав полей задается в функции НоменклатураКлиентСервер.ПараметрыУказанияСерий
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаПроверкиЗаполненияСерий(ПараметрыУказанияСерий) Экспорт
	// Не нужно проверять количество, т.к. в пересортице не может быть серий, идентифицирующих экземпляр
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаСерий.НомерСтроки КАК НомерСтроки,
	|	ТаблицаСерий.Серия КАК Серия,
	|	ТаблицаСерий.СерияОприходование КАК СерияОприходование,
	|	ТаблицаСерий.СтатусУказанияСерий КАК СтатусУказанияСерий,
	|	ТаблицаСерий.СтатусУказанияСерийОприходование КАК СтатусУказанияСерийОприходование,
	|	ТаблицаСерий.Номенклатура КАК Номенклатура,
	|	ТаблицаСерий.НоменклатураОприходование КАК НоменклатураОприходование,
	|	ТаблицаСерий.Количество КАК КоличествоУпаковок
	|ПОМЕСТИТЬ ТаблицаСерий
	|ИЗ
	|	&ТаблицаСерий КАК ТаблицаСерий
	|ГДЕ
	|	(ТаблицаСерий.СтатусУказанияСерий <> 0
	|			ИЛИ ТаблицаСерий.СтатусУказанияСерийОприходование <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.ТоварПредставление,
	|	МАКСИМУМ(ВложенныйЗапрос.СерияНеЗаполнена) КАК СерияНеЗаполнена,
	|	ЛОЖЬ КАК ОшибкаКоличества,
	|	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	|	ВложенныйЗапрос.ИмяПоляСерия КАК ИмяПоляСерия
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПРЕДСТАВЛЕНИЕ(ТаблицаСерий.Номенклатура) КАК ТоварПредставление,
	|		""Серия"" КАК ИмяПоляСерия,
	|		ТаблицаСерий.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК СерияНеЗаполнена,
	|		ТаблицаСерий.НомерСтроки КАК НомерСтроки
	|	ИЗ
	|		ТаблицаСерий КАК ТаблицаСерий
	|	ГДЕ
	|		ТаблицаСерий.СтатусУказанияСерий <> 0
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПРЕДСТАВЛЕНИЕ(ТаблицаСерий.НоменклатураОприходование),
	|		""СерияОприходование"",
	|		ТаблицаСерий.СерияОприходование = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка),
	|		ТаблицаСерий.НомерСтроки
	|	ИЗ
	|		ТаблицаСерий КАК ТаблицаСерий
	|	ГДЕ
	|		ТаблицаСерий.СтатусУказанияСерийОприходование <> 0) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.НомерСтроки,
	|	ВложенныйЗапрос.ИмяПоляСерия,
	|	ВложенныйЗапрос.ТоварПредставление
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ВложенныйЗапрос.СерияНеЗаполнена) = ИСТИНА
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВложенныйЗапрос.НомерСтроки";
	
	
	Возврат ТекстЗапроса;
КонецФункции
#КонецОбласти


// Возвращает текст запроса для записи данных в регистр сведений ДанныеВнутреннихДокументов
//
//	Возвращаемое значение:
//		Строка - текст запроса
//
Функция ТекстЗапросаДанныеВнутреннихДокументов() Экспорт
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер,
	|	Документ.Дата,
	|	Документ.Организация,
	|	Документ.Склад,
	|	Документ.Подразделение,
	|	Документ.Ответственный,
	|	Документ.Комментарий,
	|	"""" КАК Дополнительно,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваров) КАК ХозяйственнаяОперация,
	|	"""" КАК Статус,
	|	Документ.Проведен,
	|	Документ.ПометкаУдаления
	|ИЗ
	|	Документ.ПересортицаТоваров КАК Документ
	|ГДЕ
	|	Документ.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Функция ДополнительныеИсточникиДанныхДляДвижений(ИмяРегистра) Экспорт

	ИсточникиДанных = Новый Соответствие;

	Возврат ИсточникиДанных; 

КонецФункции

Процедура ИнициализироватьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства, Регистры = Неопределено) Экспорт
	
	// Создание запроса инициализации движений и заполенение его параметров.
	Запрос = Новый Запрос;
	ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка);
	
	// Формирование текста запроса.
	ТекстыЗапроса = Новый СписокЗначений;
	
	ТекстЗапросаТаблицаТоварыКОформлениюИзлишковНедостач(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры);
	
	// Исполнение запроса и выгрузка полученных таблиц для движений.
	ПроведениеСервер.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапроса, ДополнительныеСвойства.ТаблицыДляДвижений, Истина);
	
КонецПроцедуры

Процедура ИнициализироватьКлючиАналитикиНоменклатуры(Запрос)
	
	Если Запрос.Параметры.Свойство("КлючиАналитикиНоменклатурыИнициализированы") Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросАналитик = Новый Запрос;
	ЗапросАналитик.УстановитьПараметр("Ссылка", Запрос.Параметры.Ссылка);
	ЗапросАналитик.УстановитьПараметр("Склад",  Запрос.Параметры.Склад);
	ЗапросАналитик.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТовары.Склад          КАК Склад,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ТаблицаТовары.Серия          КАК Серия 
	|ИЗ (
	|	ВЫБРАТЬ
	|		ТаблицаВидыЗапасов.ВидЗапасов.Комитент КАК Склад,
	|		Аналитика.Номенклатура                 КАК Номенклатура,
	|		Аналитика.Характеристика               КАК Характеристика,
	|		ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия
	|	ИЗ
	|		Документ.ПересортицаТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|			РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО
	|			ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = Аналитика.КлючАналитики
	|	ГДЕ
	|		ТаблицаВидыЗапасов.Ссылка = &Ссылка
	|		И ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		&Склад                                     КАК Склад,
	|		ТаблицаТовары.НоменклатураОприходование    КАК Номенклатура,
	|		ТаблицаТовары.ХарактеристикаОприходование  КАК Характеристика,
	|		ТаблицаТовары.СерияОприходование           КАК Серия
	|	ИЗ
	|		Документ.ПересортицаТоваров.Товары КАК ТаблицаТовары
	|	ГДЕ
	|		ТаблицаТовары.Ссылка = &Ссылка
	|
	|	) КАК ТаблицаТовары
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		ТаблицаТовары.Номенклатура = Аналитика.Номенклатура
	|		И ТаблицаТовары.Характеристика = Аналитика.Характеристика
	|		И ТаблицаТовары.Серия = Аналитика.Серия
	|		И ТаблицаТовары.Склад = Аналитика.Склад
	|ГДЕ
	|	Аналитика.Номенклатура ЕСТЬ NULL";
	
	Выборка = ЗапросАналитик.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		РегистрыСведений.АналитикаУчетаНоменклатуры.СоздатьКлючАналитики(Выборка)
	КонецЦикла;
	
	Запрос.УстановитьПараметр("КлючиАналитикиНоменклатурыИнициализированы", Истина);
	
КонецПроцедуры 

Процедура ЗаполнитьПараметрыИнициализации(Запрос, ДокументСсылка)
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка            КАК Ссылка,
	|	ДанныеДокумента.Дата              КАК Период,
	|	ДанныеДокумента.Склад             КАК Склад,
	|	ДанныеДокумента.Организация       КАК Организация,
	|	ДанныеДокумента.ПриходоватьТоварыПоСебестоимостиСписания КАК ПриходПоСебестоимости,
	|	ДанныеДокумента.АналитикаРасходов КАК АналитикаРасходов,
	|	ДанныеДокумента.СтатьяРасходов    КАК СтатьяРасходов,
	|	ДанныеДокумента.АналитикаДоходов  КАК АналитикаДоходов,
	|	ДанныеДокумента.СтатьяДоходов     КАК СтатьяДоходов,
	|	ДанныеДокумента.Подразделение     КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.Склад.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|				И ДанныеДокумента.Дата >= ДанныеДокумента.Склад.ДатаНачалаОрдернойСхемыПриОтраженииИзлишковНедостач
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|ИЗ
	|	Документ.ПересортицаТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка";
	
	Реквизиты = Запрос.Выполнить().Выбрать();
	Реквизиты.Следующий();
	
	Запрос.УстановитьПараметр("Период",                Реквизиты.Период);
	Запрос.УстановитьПараметр("Склад",                 Реквизиты.Склад);
	Запрос.УстановитьПараметр("Организация",           Реквизиты.Организация);
	Запрос.УстановитьПараметр("ПриходПоСебестоимости", Реквизиты.ПриходПоСебестоимости);
	Запрос.УстановитьПараметр("Подразделение",         Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("СтатьяДоходов",         Реквизиты.СтатьяДоходов);
	Запрос.УстановитьПараметр("АналитикаДоходов",      Реквизиты.АналитикаДоходов);
	Запрос.УстановитьПараметр("СтатьяРасходов",        Реквизиты.СтатьяРасходов);
	Запрос.УстановитьПараметр("АналитикаРасходов",     Реквизиты.АналитикаРасходов);
	Запрос.УстановитьПараметр("ХозяйственнаяОперация", Перечисления.ХозяйственныеОперации.ПересортицаТоваров);
	Запрос.УстановитьПараметр("НалогообложениеНДС",    Перечисления.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС);
	Запрос.УстановитьПараметр("УчитыватьСебестоимостьТоваровПоВидамЗапасов",           
	                                                   ПолучитьФункциональнуюОпцию("УчитыватьСебестоимостьТоваровПоВидамЗапасов"));
	Запрос.УстановитьПараметр("ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач", 
	                                                   Реквизиты.ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач);
	Запрос.УстановитьПараметр("ВалютаУпрУчета",        Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ВалютаРеглУчета",       Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("ИспользоватьПартионныйУчет", 
	                                                   ПолучитьФункциональнуюОпцию("ИспользоватьПартионныйУчет"));
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", 
	                                                   ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаТоварыКОформлениюИзлишковНедостач(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюИзлишковНедостач";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки              КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаТовары.Серия      КАК Серия,
	|	&Склад                   КАК Склад,
	|	ТаблицаТовары.Количество КАК КОформлениюАктов
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	&ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|   И ТаблицаТовары.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход),
	|	&Период,
	|	ТаблицаТовары.НоменклатураОприходование,
	|	ТаблицаТовары.ХарактеристикаОприходование,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.НазначениеОприходование.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.НазначениеОприходование
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаТовары.СерияОприходование,
	|	&Склад,
	|	ТаблицаТовары.Количество
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	&ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|	И ТаблицаТовары.Ссылка = &Ссылка
	|   И ТаблицаТовары.Количество <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыНаСкладах(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыНаСкладах";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки    КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                                  КАК Назначение,
	|	ТаблицаТовары.Серия                    КАК Серия,
	|	ТаблицаТовары.Количество               КАК ВНаличии,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|   И ТаблицаТовары.Количество <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки,
	|	ТаблицаТовары.НоменклатураОприходование,
	|	ТаблицаТовары.ХарактеристикаОприходование,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.НазначениеОприходование.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.НазначениеОприходование
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ,
	|	ТаблицаТовары.СерияОприходование,
	|	ТаблицаТовары.Количество,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач
	|   И ТаблицаТовары.Количество <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСвободныеОстатки(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СвободныеОстатки";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаТовары.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура          КАК Номенклатура,
	|	ТаблицаТовары.Характеристика        КАК Характеристика,
	|	СУММА(ТаблицаТовары.Количество)     КАК ВНаличии,
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ТОГДА ТаблицаТовары.Количество
	|		КОНЕЦ)                               КАК ВРезервеПодЗаказ,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И (НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач)
	|	И ТаблицаТовары.Количество <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.Характеристика
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаТовары.НомерСтроки),
	|	ТаблицаТовары.НоменклатураОприходование,
	|	ТаблицаТовары.ХарактеристикаОприходование,
	|	СУММА(ТаблицаТовары.Количество),
	|	СУММА(ВЫБОР
	|			КОГДА ТаблицаТовары.НазначениеОприходование <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ТОГДА ТаблицаТовары.Количество
	|		КОНЕЦ),
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход),
	|	&Период,
	|	&Склад
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И (НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач)
	|	И ТаблицаТовары.Количество <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.НоменклатураОприходование,
	|	ТаблицаТовары.ХарактеристикаОприходование
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияСерийТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияСерийТоваров";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура   КАК Номенклатура,
	|	ТаблицаТовары.Характеристика КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.Назначение.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.Назначение
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ                    КАК Назначение,
	|	ТаблицаТовары.Серия      КАК Серия,
	|	ТаблицаТовары.Количество КАК Количество,
	|	&Склад                   КАК Отправитель,
	|	НЕОПРЕДЕЛЕНО             КАК Получатель,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка)       КАК Помещение,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтражениеНедостач) КАК СкладскаяОперация,
	|	&Ссылка                  КАК Документ,
	|	&Период                  КАК Период,
	|	НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач  КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Серия <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.НоменклатураОприходование КАК Номенклатура,
	|	ТаблицаТовары.ХарактеристикаОприходование КАК Характеристика,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаТовары.НазначениеОприходование.ДвиженияПоСкладскимРегистрам, ЛОЖЬ)
	|			ТОГДА ТаблицаТовары.НазначениеОприходование
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ КАК Назначение,
	|	ТаблицаТовары.СерияОприходование КАК Серия,
	|	ТаблицаТовары.Количество КАК Количество,
	|	НЕОПРЕДЕЛЕНО КАК Отправитель,
	|	&Склад КАК Получатель,
	|	ЗНАЧЕНИЕ(Справочник.СкладскиеПомещения.ПустаяСсылка) КАК Помещение,
	|	ЗНАЧЕНИЕ(Перечисление.СкладскиеОперации.ОтражениеИзлишков) КАК СкладскаяОперация,
	|	&Ссылка КАК Документ,
	|	&Период КАК Период,
	|	НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач КАК ЭтоСкладскоеДвижение
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.СерияОприходование <> ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура УстановитьПараметрКоэффициентПересчетаВВалютуРегл(Запрос)
	
	Если Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуРегл") Тогда
		Возврат;
	КонецЕсли;
	
	Коэффициенты = РаботаСКурсамивалютУТ.ПолучитьКоэффициентыПересчетаВалюты(Запрос.Параметры.ВалютаУпрУчета,
	                                                                         Запрос.Параметры.ВалютаУпрУчета, 
	                                                                         Запрос.Параметры.Период);
	
	Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", Коэффициенты.КоэффициентПересчетаВВалютуРегл);
	
КонецПроцедуры

Процедура УстановитьПараметрКорВидЗапасов(Запрос)
  	
  	Если Запрос.Параметры.Свойство("КорВидЗапасов") Тогда
  		Возврат;
  	КонецЕсли;
  
  	КорВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(Запрос.Параметры.Организация, 
  	                                                            Перечисления.ХозяйственныеОперации.ПересортицаТоваров,
																Неопределено,
																Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность
																);
  	
  	Запрос.УстановитьПараметр("КорВидЗапасов", КорВидЗапасов);
  	
КонецПроцедуры


Функция ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса)
	
	ИмяРегистра = "ВтВидыЗапасов";
	
	УстановитьПараметрКоэффициентПересчетаВВалютуРегл(Запрос);
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаСписания,
	|	КлючиКомитента.КлючАналитики КАК АналитикаНоменклатурыКомитента,
	|	КлючиСписания.Номенклатура КАК Номенклатура,
	|	КлючиСписания.Характеристика КАК Характеристика,
	|
	|	ТаблицаВидыЗапасов.НоменклатураОприходование КАК НоменклатураОприходование,
	|	ТаблицаВидыЗапасов.ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|	КлючиОприходования.КлючАналитики  КАК АналитикаОприходования,
	|
	|	СправочникВидЗапасов.РеализацияЗапасовДругойОрганизации КАК РеализацияЗапасовДругойОрганизации,
	|	СправочникВидЗапасов.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность) КАК ЦелевоеНалоговоеНазначение,
	|	ТаблицаВидыЗапасов.ВидЗапасовОприходование.НалоговоеНазначение КАК НалоговоеНазначениеОприходование,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов КАК ТипЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Валюта КАК Валюта,
	|	ТаблицаВидыЗапасов.ВидЗапасовОприходование КАК ВидЗапасовОприходование,
	|	ТаблицаВидыЗапасов.ВидЗапасовОприходование.ТипЗапасов КАК ТипЗапасовОприходование,
	|	ТаблицаВидыЗапасов.АналитикаУчетаПартий КАК АналитикаУчетаПартий,
	|	ВЫБОР КОГДА СправочникВидЗапасов.Комитент ССЫЛКА Справочник.Организации
	|		ТОГДА АналитикаРасчетовИнтеркампани.КлючАналитики
	|		ИНАЧЕ АналитикаРасчетов.КлючАналитики
	|	КОНЕЦ КАК АналитикаРасчетовСКомитентом,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаВидыЗапасов.Сумма КАК Сумма,
	|	ВЫРАЗИТЬ(ТаблицаВидыЗапасов.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2)) КАК СуммаРегл
	|
	|ПОМЕСТИТЬ ВтВидыЗапасов
	|ИЗ
	|	Документ.ПересортицаТоваров.ВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.ВидыЗапасов КАК СправочникВидЗапасов
	|	ПО
	|		ТаблицаВидыЗапасов.ВидЗапасов = СправочникВидЗапасов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиСписания
	|	ПО
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = КлючиСписания.КлючАналитики
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиКомитента
	|	ПО
	|		КлючиСписания.Номенклатура = КлючиКомитента.Номенклатура
	|		И КлючиСписания.Характеристика = КлючиКомитента.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = КлючиКомитента.Серия
	|		И ТаблицаВидыЗапасов.ВидЗапасов.Комитент = КлючиКомитента.Склад
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиОприходования
	|	ПО
	|		ТаблицаВидыЗапасов.НоменклатураОприходование = КлючиОприходования.Номенклатура
	|		И ТаблицаВидыЗапасов.ХарактеристикаОприходование = КлючиОприходования.Характеристика
	|		И ТаблицаВидыЗапасов.СерияОприходование = КлючиОприходования.Серия
	|		И &Склад = КлючиОприходования.Склад
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетов
	|		ПО АналитикаРасчетов.Организация = &Организация
	|		И АналитикаРасчетов.Партнер = СправочникВидЗапасов.Комитент
	|		И АналитикаРасчетов.Контрагент = СправочникВидЗапасов.Контрагент
	|		И АналитикаРасчетов.Договор = СправочникВидЗапасов.Договор 
	|		И АналитикаРасчетов.НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаРасчетовИнтеркампани
	|		ПО АналитикаРасчетовИнтеркампани.Организация = &Организация
	|		И АналитикаРасчетовИнтеркампани.Партнер = ЗНАЧЕНИЕ(Справочник.Партнеры.НашеПредприятие)
	|		И АналитикаРасчетовИнтеркампани.Контрагент = СправочникВидЗапасов.Контрагент
	|		И АналитикаРасчетовИнтеркампани.Договор = СправочникВидЗапасов.Договор
	|	
	|ГДЕ
	|	ТаблицаВидыЗапасов.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизаций";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	УстановитьПараметрКорВидЗапасов(Запрос);
	ИнициализироватьКлючиАналитикиНоменклатуры(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВидыЗапасов.НомерСтроки                  КАК НомерСтроки,
	|	&Период                                  КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)   КАК ВидДвижения,
	|	ВидыЗапасов.АналитикаСписания            КАК АналитикаУчетаНоменклатуры,
	|
	|	ВЫБОР КОГДА ВидыЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
	|		ВидыЗапасов.ВидЗапасовВладельца.Организация
	|	ИНАЧЕ
	|		&Организация
	|	КОНЕЦ КАК Организация,
	|
	|	ВЫБОР КОГДА ВидыЗапасов.РеализацияЗапасовДругойОрганизации ТОГДА
	|		ВидыЗапасов.ВидЗапасовВладельца
	|	ИНАЧЕ
	|		ВидыЗапасов.ВидЗапасов
	|	КОНЕЦ КАК ВидЗапасов,
	|
	|	ВидыЗапасов.НомерГТД                     КАК НомерГТД,
	|
	|	ВидыЗапасов.Количество КАК Количество,
	|
	|	&ХозяйственнаяОперация                   КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность) КАК НалоговоеНазначение,
	|	&Организация                             КАК ОрганизацияОтгрузки,
	|	ВидыЗапасов.Номенклатура                 КАК Номенклатура,
	|	ВидыЗапасов.Характеристика               КАК Характеристика,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ВидыЗапасов.АналитикаНоменклатурыКомитента
	|	ИНАЧЕ
	|		ВидыЗапасов.АналитикаОприходования
	|	КОНЕЦ КАК КорАналитикаУчетаНоменклатуры,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		&КорВидЗапасов
	|	ИНАЧЕ
	|		ВидыЗапасов.ВидЗапасовОприходование
	|	КОНЕЦ КАК КорВидЗапасов,
	|	ЛОЖЬ                                     КАК Первичное
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Товары.НомерСтроки                        КАК НомерСтроки,
	|	&Период                                   КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	Аналитика.КлючАналитики                   КАК АналитикаУчетаНоменклатуры,
	|	&Организация                              КАК Организация,
	|	Товары.ВидЗапасов                         КАК ВидЗапасов,
	|	Товары.НомерГТД                           КАК НомерГТД,
	|
	|	Товары.Количество                         КАК Количество,
	|
	|	&ХозяйственнаяОперация                    КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                              КАК НалоговоеНазначение,
	|	НЕОПРЕДЕЛЕНО                              КАК ОрганизацияОтгрузки,
	|	Товары.НоменклатураОприходование          КАК Номенклатура,
	|	Товары.ХарактеристикаОприходование        КАК Характеристика,
	|	НЕОПРЕДЕЛЕНО                              КАК КорАналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО                              КАК КорВидЗапасов,
	|	НЕ &ПриходПоСебестоимости                 КАК Первичное
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК Товары
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО
	|		Товары.НоменклатураОприходование = Аналитика.Номенклатура
	|		И Товары.ХарактеристикаОприходование = Аналитика.Характеристика
	|		И Товары.СерияОприходование = Аналитика.Серия
	|		И &Склад = Аналитика.Склад
	|ГДЕ
	|	Товары.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыКОформлениюОтчетовКомитенту(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыКОформлениюОтчетовКомитенту";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	УстановитьПараметрКорВидЗапасов(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                     КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)             КАК ВидДвижения,
	|	&Период                                            КАК Период,
	|	ТаблицаВидыЗапасов.ВидЗапасов                      КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.АналитикаНоменклатурыКомитента  КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.Валюта                          КАК Валюта,
	|	ТаблицаВидыЗапасов.НомерГТД                        КАК НомерГТД,
	|
	|	0                                                  КАК Количество,
	|	0                                                  КАК СуммаВыручки,
	|	ТаблицаВидыЗапасов.Количество                      КАК КоличествоСписано,
	|
	|	&ХозяйственнаяОперация                             КАК ХозяйственнаяОперация,
	|	&КорВидЗапасов                                     КАК КорВидЗапасов,
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение      КАК НалоговоеНазначение,
	|	ТаблицаВидыЗапасов.АналитикаОприходования          КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.Номенклатура                    КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика                  КАК Характеристика
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки                     КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)             КАК ВидДвижения,
	|	&Период                                            КАК Период,
	|	ВидыЗапасовВладельца.Ссылка                        КАК ВидЗапасов,
	|	КлючиКомитента.КлючАналитики                       КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.Валюта                          КАК Валюта,
	|	ТаблицаВидыЗапасов.НомерГТД                        КАК НомерГТД,
	|
	|	0                                                  КАК Количество,
	|	0                                                  КАК СуммаВыручки,
	|	ТаблицаВидыЗапасов.Количество                      КАК КоличествоСписано,
	|
	|	&ХозяйственнаяОперация                             КАК ХозяйственнаяОперация,
	|	&КорВидЗапасов                                     КАК КорВидЗапасов,
	|	ТаблицаВидыЗапасов.ЦелевоеНалоговоеНазначение      КАК НалоговоеНазначение, 
	|	НЕОПРЕДЕЛЕНО                                       КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.Номенклатура                    КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика                  КАК Характеристика
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасовВладельца
	|	ПО ТаблицаВидыЗапасов.ВидЗапасов.ВидЗапасовВладельца = ВидыЗапасовВладельца.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиКомитента
	|	ПО ТаблицаВидыЗапасов.Номенклатура = КлючиКомитента.Номенклатура
	|		И ТаблицаВидыЗапасов.Характеристика = КлючиКомитента.Характеристика
	|		И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = КлючиКомитента.Серия
	|		И ВидыЗапасовВладельца.Комитент = КлючиКомитента.Склад
	|ГДЕ
	|	ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	И ВидыЗапасовВладельца.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСебестоимостьТоваров(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СебестоимостьТоваров";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	УстановитьПараметрКорВидЗапасов(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	1                                      КАК Порядок,
	|	ВидыЗапасов.НомерСтроки                КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ВидыЗапасов.АналитикаНоменклатурыКомитента
	|	ИНАЧЕ
	|		ВидыЗапасов.АналитикаСписания
	|	КОНЕЦ                                  КАК АналитикаУчетаНоменклатуры,
	|
	|	&Организация                           КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|			&КорВидЗапасов
	|		ИНАЧЕ
	|			ВидыЗапасов.ВидЗапасов
	|		КОНЕЦ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ                                   КАК ВидЗапасов,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность) 
	|	ИНАЧЕ
	|		ВидыЗапасов.НалоговоеНазначение
	|	КОНЕЦ КАК НалоговоеНазначение,
	|
	|	ВидыЗапасов.Количество                  КАК Количество,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК СтоимостьРегл,
	|	0 КАК СтоимостьРеглБезНДС,
	|	0 КАК НДСРегл,
	|	0 КАК КорСтоимость,
	|
	|	ВидыЗапасов.АналитикаОприходования КАК КорАналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК КорРазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВидыЗапасов.ВидЗапасовОприходование
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК КорВидЗапасов,
	|	ВидыЗапасов.НалоговоеНазначениеОприходование КАК КорНалоговоеНазначение,
	|	ВидыЗапасов.АналитикаРасчетовСКомитентом КАК АналитикаУчетаПоПартнерам,
	|	
	|	&Подразделение КАК Подразделение,
	|	Неопределено   КАК СтатьяДоходов,
	|	Неопределено   КАК АналитикаДоходов,
	|	Неопределено   КАК СтатьяРасходовСписания,
	|	Неопределено   КАК АналитикаРасходов,
	|
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	&ПриходПоСебестоимости
	|	И ВидыЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ВидыЗапасов.НомерСтроки КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ВидыЗапасов.АналитикаНоменклатурыКомитента
	|	ИНАЧЕ
	|		ВидыЗапасов.АналитикаСписания
	|	КОНЕЦ КАК АналитикаУчетаНоменклатуры,
	|
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВЫБОР
	|			КОГДА
	|				ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА
	|				&КорВидЗапасов
	|			ИНАЧЕ
	|				ВидыЗапасов.ВидЗапасов
	|		КОНЕЦ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) ТОГДА
	|		ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность) 
	|	ИНАЧЕ
	|		ВидыЗапасов.НалоговоеНазначение
	|	КОНЕЦ КАК НалоговоеНазначение,
	|
	|	ВидыЗапасов.Количество КАК Количество,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	ВидыЗапасов.СуммаРегл КАК СтоимостьРегл,
	|	ВидыЗапасов.СуммаРегл КАК СтоимостьРеглБезНДС,
	|	0 КАК НДСРегл,
	|	ВидыЗапасов.Сумма КАК КорСтоимость,
	|
	|	ВидыЗапасов.АналитикаОприходования КАК КорАналитикаУчетаНоменклатуры,
	|	Неопределено КАК КорРазделУчета,
	|	Неопределено КАК КорВидЗапасов,
	|	ВидыЗапасов.ЦелевоеНалоговоеНазначение КАК КорНалоговоеНазначение,
	|	ВидыЗапасов.АналитикаРасчетовСКомитентом КАК АналитикаУчетаПоПартнерам,
	|	
	|	&Подразделение КАК Подразделение,
	|	&СтатьяДоходов КАК СтатьяДоходов,
	|	&АналитикаДоходов КАК АналитикаДоходов,
	|	&СтатьяРасходов КАК СтатьяРасходовСписания,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой) КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	Не &ПриходПоСебестоимости
	|	И ВидыЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	1 КАК Порядок,
	|	ВидыЗапасов.НомерСтроки КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период,
	|
	|	ВидыЗапасов.АналитикаСписания КАК АналитикаУчетаНоменклатуры,
	|
	|	&Организация КАК Организация,
	|	ВЫБОР КОГДА ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыПринятыеНаКомиссию)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.МатериалыПринятыеВПереработку)
	|	КОНЕЦ КАК РазделУчета,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|	ВидыЗапасов.НалоговоеНазначение КАК НалоговоеНазначение,
	|
	|	ВидыЗапасов.Количество КАК Количество,
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК СтоимостьРегл,
	|	0 КАК СтоимостьРеглБезНДС,
	|	0 КАК НДСРегл,
	|	0 КАК КорСтоимость,
	|
	|	Неопределено КАК КорАналитикаУчетаНоменклатуры,
	|	Неопределено КАК КорРазделУчета,
	|	Неопределено КАК КорВидЗапасов,
	|	ВидыЗапасов.ЦелевоеНалоговоеНазначение КАК КорНалоговоеНазначение,
	|	ВидыЗапасов.АналитикаРасчетовСКомитентом КАК АналитикаУчетаПоПартнерам,
	|
	|	&Подразделение КАК Подразделение,
	|	&СтатьяДоходов КАК СтатьяДоходов,
	|	&АналитикаДоходов КАК АналитикаДоходов,
	|	&СтатьяРасходов КАК СтатьяРасходовСписания,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|
	|	ВЫБОР КОГДА &ПриходПоСебестоимости ТОГДА
	|		&ХозяйственнаяОперация
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой)
	|	КОНЕЦ КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	ВидыЗапасов.ТипЗапасов В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2 КАК Порядок,
	|	ВидыЗапасов.НомерСтроки КАК НомерСтрокиДокумента,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период КАК Период,
	|	ВидыЗапасов.АналитикаОприходования КАК АналитикаУчетаНоменклатуры,
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ТоварыНаСкладах) КАК РазделУчета,
	|
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|		ВидыЗапасов.ВидЗапасовОприходование
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ВидЗапасов,
	|	ВидыЗапасов.НалоговоеНазначениеОприходование КАК НалоговоеНазначение,
	|
	|	ВидыЗапасов.Количество КАК Количество,
	|	ВидыЗапасов.Сумма КАК Стоимость,
	|	ВидыЗапасов.Сумма КАК СтоимостьБезНДС,
	|	ВидыЗапасов.СуммаРегл КАК СтоимостьРегл,
	|	ВидыЗапасов.СуммаРегл КАК СтоимостьРеглБезНДС,
	|	0 КАК НДСРегл,
	|	0 КАК КорСтоимость,
	|
	|	ВидыЗапасов.АналитикаСписания КАК КорАналитикаУчетаНоменклатуры,
	|	Неопределено КАК КорРазделУчета,
	|	Неопределено КАК КорВидЗапасов,
	|	Неопределено КАК КорНалоговоеНазначение,
	|	ВидыЗапасов.АналитикаРасчетовСКомитентом КАК АналитикаУчетаПоПартнерам,
	|
	|	&Подразделение КАК Подразделение,
	|	Неопределено КАК СтатьяДоходов,
	|	Неопределено КАК АналитикаДоходов,
	|	Неопределено КАК СтатьяРасходовСписания,
	|	Неопределено КАК АналитикаРасходов,
	|
	|	ВЫБОР КОГДА &ПриходПоСебестоимости ТОГДА
	|		&ХозяйственнаяОперация
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой)
	|	КОНЕЦ КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Порядок, НомерСтрокиДокумента";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПартииТоваровОрганизаций(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПартииТоваровОрганизаций";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	УстановитьПараметрКоэффициентПересчетаВВалютуРегл(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)      КАК ВидДвижения,
	|	&Период                                     КАК Период,
	|	&Организация                                КАК Организация,
	|	ТаблицаВидыЗапасов.АналитикаОприходования   КАК АналитикаУчетаНоменклатуры,
	|	&Ссылка                                     КАК ДокументПоступления,
	|	ТаблицаВидыЗапасов.ВидЗапасовОприходование  КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.АналитикаУчетаПартий     КАК АналитикаУчетаПартий,
	|
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	(ВЫБОР КОГДА &ПриходПоСебестоимости ТОГДА 0. ИНАЧЕ ТаблицаВидыЗапасов.Сумма КОНЕЦ) КАК Стоимость,
	|	(ВЫБОР КОГДА &ПриходПоСебестоимости ТОГДА 0. ИНАЧЕ ТаблицаВидыЗапасов.Сумма КОНЕЦ) КАК СтоимостьБезНДС,
	|	(ВЫБОР КОГДА &ПриходПоСебестоимости ТОГДА 0.
	|		ИНАЧЕ ВЫРАЗИТЬ(ТаблицаВидыЗапасов.Сумма * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(15,2))
	|		КОНЕЦ) КАК СтоимостьРегл,
	|	0. КАК НДСРегл,
	|
	|	ТаблицаВидыЗапасов.НоменклатураОприходование КАК Номенклатура,
	|	ТаблицаВидыЗапасов.ХарактеристикаОприходование КАК Характеристика,
	|	&ХозяйственнаяОперация                      КАК ХозяйственнаяОперация,
	|	ИСТИНА КАК Первичное,
	|	(ВЫБОР КОГДА &ПриходПоСебестоимости ТОГДА &Ссылка ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК ДокументИсточник
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|ГДЕ
	|	&ИспользоватьПартионныйУчет";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаСуммыДокументовВВалютеРегл(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СуммыДокументовВВалютеРегл";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	УстановитьПараметрКоэффициентПересчетаВВалютуРегл(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапсов.НомерСтроки         КАК НомерСтроки,
	|	&Период                               КАК Период,
	|	&ВалютаУпрУчета                       КАК Валюта,
	|	ТаблицаВидыЗапсов.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ТаблицаВидыЗапсов.Сумма               КАК СуммаБезНДС,
	|	НЕОПРЕДЕЛЕНО                          КАК СтавкаНДС,
	|	0                                     КАК СуммаНДС,
	|	ТаблицаВидыЗапсов.Сумма * &КоэффициентПересчетаВВалютуРегл КАК СуммаБезНДСРегл,
	|	0                                     КАК СуммаНДСРегл,
	|	НЕОПРЕДЕЛЕНО                          КАК ТипРасчетов
	|
	|ИЗ
	|	Документ.ПересортицаТоваров.ВидыЗапасов КАК ТаблицаВидыЗапсов
	|
	|ГДЕ
	|	ТаблицаВидыЗапсов.Ссылка = &Ссылка
	|	И &ВалютаУпрУчета <> &ВалютаРеглУчета
	|	И НЕ &ПриходПоСебестоимости
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаДвиженияНоменклатураНоменклатура(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ДвиженияНоменклатураНоменклатура";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	УстановитьПараметрКорВидЗапасов(Запрос);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	&Период        КАК Период,
	|	ВЫБОР КОГДА &ПриходПоСебестоимости
	|		ТОГДА &ХозяйственнаяОперация
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПересортицаТоваровСПереоценкой)
	|	КОНЕЦ          КАК ХозяйственнаяОперация,
	|	&Организация   КАК Организация,
	|	&Подразделение КАК Подразделение,
	|
	|	ВидыЗапасов.АналитикаСписания КАК АналитикаУчетаНоменклатуры,
	|	&Склад                        КАК Склад,
	|	ВидыЗапасов.ТипЗапасов        КАК ТипЗапасов,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|   	ВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ                         КАК ВидЗапасов,
	|
	|	ВидыЗапасов.АналитикаОприходования КАК КорАналитикаУчетаНоменклатуры,
	|	&Склад КАК КорСклад,
	|	ВидыЗапасов.ТипЗапасовОприходование КАК КорТипЗапасов,
	|	ВЫБОР КОГДА &УчитыватьСебестоимостьТоваровПоВидамЗапасов ТОГДА
	|   	ВидыЗапасов.ВидЗапасовОприходование
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК КорВидЗапасов,
	|
	|	ВидыЗапасов.Количество КАК Количество,
	|	ВидыЗапасов.Количество КАК КорКоличество,
	|
	|	ВЫБОР КОГДА &ПриходПоСебестоимости
	|		ТОГДА 0
	|		ИНАЧЕ ВидыЗапасов.Сумма
	|	КОНЕЦ КАК Стоимость,
	|	ВЫБОР КОГДА &ПриходПоСебестоимости
	|		ТОГДА 0
	|		ИНАЧЕ ВидыЗапасов.Сумма
	|	КОНЕЦ КАК СтоимостьБезНДС,
	|	ВЫБОР КОГДА &ПриходПоСебестоимости
	|		ТОГДА 0
	|		ИНАЧЕ ВидыЗапасов.СуммаРегл
	|	КОНЕЦ КАК СтоимостьРегл,
	|
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ВидыЗапасов.ВидЗапасов
	|	ИНАЧЕ 
	|		ВидыЗапасов.Номенклатура
	|	КОНЕЦ КАК ИсточникГФУНоменклатуры,
	|	ВЫБОР КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета ТОГДА
	|		ВидыЗапасов.ВидЗапасовОприходование
	|	ИНАЧЕ 
	|		ВидыЗапасов.НоменклатураОприходование
	|	КОНЕЦ КАК КорИсточникГФУНоменклатуры
	|
	|ИЗ
	|	ВтВидыЗапасов КАК ВидыЗапасов";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаТоварыОрганизацийКПередаче(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ТоварыОрганизацийКПередаче";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если Не ПроведениеСервер.ЕстьТаблицаЗапроса("ВтВидыЗапасов", ТекстыЗапроса) Тогда
		ТекстЗапросаВтВидыЗапасов(Запрос, ТекстыЗапроса);
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки         КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	&Склад                                 КАК Склад,
	|	ТаблицаВидыЗапасов.ВидЗапасовВладельца.Организация КАК ОрганизацияВладелец,
	|	ТаблицаВидыЗапасов.АналитикаСписания   КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов          КАК ВидЗапасовПродавца,
	|	ТаблицаВидыЗапасов.НомерГТД            КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Номенклатура        КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика      КАК Характеристика,
	|	ТаблицаВидыЗапасов.Количество          КАК Количество,
	|	&ХозяйственнаяОперация                 КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяНеХозДеятельность) КАК НалоговоеНазначение
	|ИЗ
	|	ВтВидыЗапасов КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	ТаблицаВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОбеспечениеЗаказов(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОбеспечениеЗаказов";
	
	Если Не ПроведениеСервер.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период                                КАК Период,
	|	ТаблицаТовары.Номенклатура             КАК Номенклатура,
	|	ТаблицаТовары.Характеристика           КАК Характеристика,
	|	&Склад                                 КАК Склад,
	|	ТаблицаТовары.Назначение               КАК Назначение,
	|	-ТаблицаТовары.Количество              КАК КЗаказу,
	|	ТаблицаТовары.Количество               КАК НаличиеПодЗаказ
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)	
	|	И ТаблицаТовары.Количество <> 0
	|	И (НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)    КАК ВидДвижения,
	|	&Период                                   КАК Период,
	|	ТаблицаТовары.НоменклатураОприходование   КАК Номенклатура,
	|	ТаблицаТовары.ХарактеристикаОприходование КАК Характеристика,
	|	&Склад                                    КАК Склад,
	|	ТаблицаТовары.НазначениеОприходование     КАК Назначение,
	|	-ТаблицаТовары.Количество                 КАК КЗаказу,
	|	ТаблицаТовары.Количество                  КАК НаличиеПодЗаказ
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Ссылка
	|	И ТаблицаТовары.НазначениеОприходование <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	И ТаблицаТовары.Количество <> 0
	|	И (НЕ &ИспользоватьОрдернуюСхемуПриОтраженииИзлишковНедостач)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Акт о пересортице товаров
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктПересортицыТоваров";
	КомандаПечати.Представление = НСтр("ru='Акт о пересортице товаров';uk='Акт про пересортицю товарів'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктПересортицыТоваров") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"АктПересортицыТоваров",
			НСтр("ru='Акт о пересортице товаров';uk='Акт про пересортицю товарів'"),
			ПечатьАктаПересортицыТоваров(МассивОбъектов, ОбъектыПечати, ПараметрыВывода),
			,
			"Документ.ПересортицаТоваров.ПФ_MXL_АктОПересортицеТоваров",
			,
			Истина // ЭтоМногоязычнаяПечатнаяФорма
			);

	КонецЕсли;

КонецПроцедуры

Функция ПечатьАктаПересортицыТоваров(МассивОбъектов, ОбъектыПечати, ПараметрыВывода)
	
	УстановитьПривилегированныйРежим(Истина);
	
	КодЯзыкаПечать = ПараметрыВывода.КодЯзыкаДляМногоязычныхПечатныхФорм;
	
	ДопКолонка = ФормированиеПечатныхФорм.ИмяДополнительнойКолонки();
	ВыводитьДопКолонку = ЗначениеЗаполнено(ДопКолонка);

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Склад КАК Склад,
	|	Документ.Подразделение КАК Подразделение,
	|	Документ.Организация КАК Организация,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Склад) КАК СкладПредставление,
	|	ПРЕДСТАВЛЕНИЕ(Документ.Подразделение) КАК ПодразделениеПредставление,
	|	Документ.Организация.НаименованиеСокращенное КАК ОрганизацияПредставление,
	|	Документ.Организация.Префикс КАК Префикс,
	|	Документ.Склад.ТекущийОтветственный КАК Кладовщик,
	|	Документ.Ответственный.ФизическоеЛицо КАК Ответственный
	|ИЗ
	|	Документ.ПересортицаТоваров КАК Документ
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Номенклатура КАК НоменклатураСписание,
	|	ТаблицаТовары.Номенклатура.НаименованиеПолное КАК НоменклатураСписаниеПредставление,
	|	ТаблицаТовары.Характеристика.НаименованиеПолное КАК ХарактеристикаСписаниеПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Серия) КАК СерияСписаниеПредставление,
	|	" + ?(ВыводитьДопКолонку, "ТаблицаТовары.Номенклатура." + ДопКолонка +" КАК ДопКолонкаСписание,", "") + "
	|	ТаблицаТовары.НоменклатураОприходование КАК НоменклатураОприходование,
	|	" + ?(ВыводитьДопКолонку, "ТаблицаТовары.НоменклатураОприходование." + ДопКолонка +" КАК ДопКолонкаОприходование,", "") + "
	|	ТаблицаТовары.НоменклатураОприходование.НаименованиеПолное КАК НоменклатураОприходованиеПредставление,
	|	ТаблицаТовары.ХарактеристикаОприходование.НаименованиеПолное КАК ХарактеристикаОприходованиеПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.СерияОприходование) КАК СерияОприходованиеПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияСписаниеПредставление,
	|	ПРЕДСТАВЛЕНИЕ(ТаблицаТовары.НоменклатураОприходование.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияОприходованиеПредставление,
	|	ТаблицаТовары.Количество КАК Количество,
	|	ТаблицаТовары.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПересортицаТоваров.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка В(&МассивОбъектов)
	|	И ТаблицаТовары.Ссылка.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ ПО
	|	Ссылка";

	ВалютаУпр = Константы.ВалютаУправленческогоУчета.Получить();	
	РеквизитыДокумента = Новый Структура("Номер, Дата, Префикс");
	СинонимДокумента = НСтр("ru='Акт о пересортице товаров';uk='Акт про пересортицю товарів'",КодЯзыкаПечать);

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПересортицаТоваров_АктОПересортицеТоваров";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПересортицаТоваров.ПФ_MXL_АктОПересортицеТоваров", КодЯзыкаПечать);
	Если ПолучитьФункциональнуюОпцию("ИспользоватьПодразделения") Тогда
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Иначе
		ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокБезПодразделения");
	КонецЕсли;
	ОбластьОснование  = Макет.ПолучитьОбласть("Основание");

	ОбластьНомераШапка              = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
	ОбластьКодовСписаниеШапка       = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодовСписание");
	ОбластьКодовОприходованиеШапка  = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодовОприходование");
	ОбластьТоварСписаниеШапка       = Макет.ПолучитьОбласть("ШапкаТаблицы|ТоварСписание");
	ОбластьТоварОприходованиеШапка  = Макет.ПолучитьОбласть("ШапкаТаблицы|ТоварОприходование");
	ОбластьЕдИзмСписаниеШапка       = Макет.ПолучитьОбласть("ШапкаТаблицы|ЕдиницаИзмеренияСписание");
	ОбластьЕдИзмОприходованиеШапка  = Макет.ПолучитьОбласть("ШапкаТаблицы|ЕдиницаИзмеренияОприходование");
	ОбластьДанныеШапка              = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");

	Если Не ВыводитьДопКолонку Тогда

		Макет.Область("ТоварСписание").ШиринаКолонки = Макет.Область("ТоварСписание").ШиринаКолонки
				+ Макет.Область("КолонкаКодовСписание").ШиринаКолонки;
		Макет.Область("ТоварОприходование").ШиринаКолонки = Макет.Область("ТоварОприходование").ШиринаКолонки
				+ Макет.Область("КолонкаКодовОприходование").ШиринаКолонки;

	КонецЕсли;

	ОбластьНомераСтрока              = Макет.ПолучитьОбласть("Строка|НомерСтроки");
	ОбластьКодовСписаниеСтрока       = Макет.ПолучитьОбласть("Строка|КолонкаКодовСписание");
	ОбластьКодовОприходованиеСтрока  = Макет.ПолучитьОбласть("Строка|КолонкаКодовОприходование");
	ОбластьТоварСписаниеСтрока       = Макет.ПолучитьОбласть("Строка|ТоварСписание");
	ОбластьТоварОприходованиеСтрока  = Макет.ПолучитьОбласть("Строка|ТоварОприходование");
	ОбластьЕдИзмСписаниеСтрока       = Макет.ПолучитьОбласть("Строка|ЕдиницаИзмеренияСписание");
	ОбластьЕдИзмОприходованиеСтрока  = Макет.ПолучитьОбласть("Строка|ЕдиницаИзмеренияОприходование");
	ОбластьДанныхСтрока              = Макет.ПолучитьОбласть("Строка|Данные");

	ОбластьПодвалТаблицы  = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьПодписи        = Макет.ПолучитьОбласть("Подписи");
	ОбластьСуммаПрописью  = Макет.ПолучитьОбласть("СуммаПрописью");
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаДокументы = РезультатыЗапроса[0].Выбрать();
	ВыборкаПоТабличнымЧастям = РезультатыЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	Пока ВыборкаДокументы.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

		// Выводим шапку накладной.
		ЗаполнитьЗначенияСвойств(РеквизитыДокумента, ВыборкаДокументы);
		ОбластьЗаголовок.Параметры.Заполнить(ВыборкаДокументы);
		ОбластьЗаголовок.Параметры.ТекстЗаголовка = ОбщегоНазначенияУТКлиентСервер.СформироватьЗаголовокДокумента(РеквизитыДокумента, СинонимДокумента, КодЯзыкаПечать);
		ОбластьЗаголовок.Параметры.СкладПредставление = СкладыСервер.ПолучитьПредставлениеСклада(ВыборкаДокументы.СкладПредставление);
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабДокумент, Макет, ОбластьЗаголовок, ВыборкаДокументы.Ссылка);
		ТабДокумент.Вывести(ОбластьЗаголовок);

		// Вывод шапки.
		ТабДокумент.Вывести(ОбластьНомераШапка);

		Если ВыводитьДопКолонку Тогда

			ТабДокумент.Присоединить(ОбластьКодовСписаниеШапка);

		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьТоварСписаниеШапка);
		ТабДокумент.Присоединить(ОбластьЕдИзмСписаниеШапка);
		
		Если ВыводитьДопКолонку Тогда

			ТабДокумент.Присоединить(ОбластьКодовОприходованиеШапка);

		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьТоварОприходованиеШапка);
  		ТабДокумент.Присоединить(ОбластьЕдИзмОприходованиеШапка);

		ТабДокумент.Присоединить(ОбластьДанныеШапка);

		СуммаВсего = 0;
		ВсегоНаименований = 0;

		// Вывод строк.
		ВыборкаПоТабличнымЧастям.НайтиСледующий(Новый Структура("Ссылка",ВыборкаДокументы.Ссылка));
		
		ВыборкаПоСтрокам = ВыборкаПоТабличнымЧастям.Выбрать();
		
		Пока ВыборкаПоСтрокам.Следующий() Цикл

			ОбластьНомераСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
			ТабДокумент.Вывести(ОбластьНомераСтрока);

			Если ВыводитьДопКолонку Тогда

				ОбластьКодовСписаниеСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
				ТабДокумент.Присоединить(ОбластьКодовСписаниеСтрока);

			КонецЕсли;

			// Номенклатура.
			ОбластьТоварСписаниеСтрока.Параметры.НоменклатураСписание = ВыборкаПоСтрокам.НоменклатураСписание;
			ОбластьТоварСписаниеСтрока.Параметры.НоменклатураСписаниеПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					ВыборкаПоСтрокам.НоменклатураСписаниеПредставление,
					ВыборкаПоСтрокам.ХарактеристикаСписаниеПредставление,
					ВыборкаПоСтрокам.СерияСписаниеПредставление);
					
			ТабДокумент.Присоединить(ОбластьТоварСписаниеСтрока);
			
			ОбластьЕдИзмСписаниеСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
			ТабДокумент.Присоединить(ОбластьЕдИзмСписаниеСтрока);
			
			Если ВыводитьДопКолонку Тогда

				ОбластьКодовОприходованиеСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
				ТабДокумент.Присоединить(ОбластьКодовОприходованиеСтрока);

			КонецЕсли;

			// Номенклатура.
			ОбластьТоварОприходованиеСтрока.Параметры.НоменклатураОприходование = ВыборкаПоСтрокам.НоменклатураОприходование;
			ОбластьТоварОприходованиеСтрока.Параметры.НоменклатураОприходованиеПредставление = НоменклатураКлиентСервер.ПредставлениеНоменклатурыДляПечати(
					ВыборкаПоСтрокам.НоменклатураОприходованиеПредставление,
					ВыборкаПоСтрокам.ХарактеристикаОприходованиеПредставление,
					ВыборкаПоСтрокам.СерияОприходованиеПредставление);
					
			ТабДокумент.Присоединить(ОбластьТоварОприходованиеСтрока);
			
			ОбластьЕдИзмОприходованиеСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
			ТабДокумент.Присоединить(ОбластьЕдИзмОприходованиеСтрока);

			// Данные количестве.
			ОбластьДанныхСтрока.Параметры.Заполнить(ВыборкаПоСтрокам);
			
			ТабДокумент.Присоединить(ОбластьДанныхСтрока);

			ВсегоНаименований = ВсегоНаименований + 1;

		КонецЦикла;

		// Вывод подвала.
		ТабДокумент.Вывести(ОбластьПодвалТаблицы);
		// Вывод Суммы прописью.
		
		ТекстИтоговойСтроки = НСтр("ru='Всего наименований %ВсегоНаименований%';uk='Всього найменувань %ВсегоНаименований%'",КодЯзыкаПечать);
		
		ТекстИтоговойСтроки = СтрЗаменить(ТекстИтоговойСтроки,"%ВсегоНаименований%", ВсегоНаименований);
		
		ОбластьСуммаПрописью.Параметры.ИтоговаяСтрока = ТекстИтоговойСтроки;

		ТабДокумент.Вывести(ОбластьСуммаПрописью);

		// Вывод подписей.
		ОбластьПодписи.Параметры.Ответственный = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ВыборкаДокументы.Ответственный, ВыборкаДокументы.Дата);
		ОбластьПодписи.Параметры.Кладовщик = ФизическиеЛицаУТ.ФамилияИнициалыФизЛица(ВыборкаДокументы.Кладовщик, ВыборкаДокументы.Дата);
		ТабДокумент.Вывести(ОбластьПодписи);

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);

	КонецЦикла;
	
	Если ПривилегированныйРежим() Тогда
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции

// Функция определяет реквизиты выбранного документа.
//
// Параметры:
//  ДокументСсылка - ДокументСсылка.ВнутреннееПотреблениеТоваров - Ссылка на документ
//
// Возвращаемое значение:
//	Структура - реквизиты внутреннего потребления товаров
//
Функция РеквизитыДокумента(ДокументСсылка) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Дата КАК Дата,
	|	ДанныеДокумента.Организация КАК Организация
	|ИЗ
	|	Документ.ПересортицаТоваров КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументСсылка
	|");
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Дата = Выборка.Дата;
		Организация = Выборка.Организация;
	Иначе
		Дата = Дата(1,1,1);
		Организация = Неопределено;
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура("Дата, Организация",
		Дата,
		Организация,);
	
	Возврат СтруктураРеквизитов;

КонецФункции


#КонецОбласти

#Область ОбновлениеИнформационнойБазы

#КонецОбласти

#КонецОбласти

#КонецЕсли
