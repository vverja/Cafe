&НаКлиенте
Перем ИмяРедактируемогоРеквизита;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	// подсистема запрета редактирования ключевых реквизитов объектов	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборот.ПриСозданииНаСервере(ЭтаФорма);
	// Конец ИнтеграцияС1СДокументооборотом
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(РезультатВыбора, ИсточникВыбора)

	Если (ИсточникВыбора.ИмяФормы = "Справочник.БанковскиеСчетаКонтрагентов.Форма.РеквизитыБанка") Тогда
		Если Не ПустаяСтрока(РезультатВыбора) Тогда
			Если РезультатВыбора.Реквизит = "КодБанка" Тогда	
				Объект.РучноеИзменениеРеквизитовБанка = РезультатВыбора.РучноеИзменение;
				Если РезультатВыбора.РучноеИзменение Тогда
					Объект.Банк				 = "";
					Объект.КодБанка			 = РезультатВыбора.ЗначенияПолей.КодБанка;
					Объект.НаименованиеБанка = РезультатВыбора.ЗначенияПолей.Наименование;
					Объект.ГородБанка		 = РезультатВыбора.ЗначенияПолей.Город;
					Объект.АдресБанка		 = РезультатВыбора.ЗначенияПолей.Адрес;
					Объект.ТелефоныБанка	 = РезультатВыбора.ЗначенияПолей.Телефоны;
					
					КодБанка		  = РезультатВыбора.ЗначенияПолей.КодБанка;
					НаименованиеБанка = РезультатВыбора.ЗначенияПолей.Наименование;
					ГородБанка		  = РезультатВыбора.ЗначенияПолей.Город;
				Иначе
					Объект.Банк				 = РезультатВыбора.Банк;
					Объект.КодБанка			 = "";
					Объект.НаименованиеБанка = "";
					Объект.ГородБанка		 = "";
					Объект.АдресБанка		 = "";
					Объект.ТелефоныБанка	 = "";
					
                    ЗаполнитьРеквизитыБанкаПоБанку(Объект.Банк, "Банк", Ложь);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли (ИсточникВыбора.ИмяФормы = "Справочник.КлассификаторБанков.Форма.ФормаВыбора") Тогда		
		Если ТипЗнч(РезультатВыбора) = Тип("СправочникСсылка.КлассификаторБанков") Тогда
			Если ИмяРедактируемогоРеквизита = "КодБанка" Тогда	
				Объект.Банк				 = РезультатВыбора;
				Объект.КодБанка			 = "";
				Объект.НаименованиеБанка = "";
				Объект.ГородБанка		 = "";
				Объект.АдресБанка		 = "";
				Объект.ТелефоныБанка	 = "";

				ЗаполнитьРеквизитыБанкаПоБанку(РезультатВыбора, "Банк", Ложь);
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	
	Если Окно <> Неопределено Тогда
		Окно.Активизировать();
	КонецЕсли;
	
	УправлениеЭлементамиФормы();
       
КонецПроцедуры 

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// подсистема запрета редактирования ключевых реквизитов объектов	
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтаФорма);

	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ)
	
	Если Объект.РучноеИзменениеРеквизитовБанка Тогда
		Если КодБанка <> Объект.КодБанка Тогда
			Объект.КодБанка = КодБанка;
		КонецЕсли;	
		Если НаименованиеБанка <> Объект.НаименованиеБанка Тогда
			Объект.НаименованиеБанка = НаименованиеБанка;
		КонецЕсли;	
        Если ГородБанка <> Объект.ГородБанка Тогда
			Объект.ГородБанка = ГородБанка;
		КонецЕсли;	
	КонецЕсли;
	
	
	// Заполним текст корреспондента.
	Если ИспользоватьТекстКорреспондента Тогда
		Объект.ТекстКорреспондента = ТекстКорреспондента;
	Иначе
		Объект.ТекстКорреспондента = "";
	КонецЕсли;
	
	Если ПустаяСтрока(Объект.Наименование) Тогда
		Объект.Наименование = СформироватьАвтоНаименование();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НомерСчетаПриИзменении(Элемент)
	
	Если Не ПустаяСтрока(Объект.НомерСчета) Тогда
		НомерСчетаПриИзмененииСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользуетсяБанкДляРасчетовПриИзменении(Элемент)

	Элементы.СчетВБанкеДляРасчетов.Доступность			= ИспользуетсяБанкДляРасчетов;
	Элементы.СВИФТБанкаДляРасчетов.Доступность			= ИспользуетсяБанкДляРасчетов;
	Элементы.НаименованиеБанкаДляРасчетов.Доступность	= ИспользуетсяБанкДляРасчетов;
	Элементы.АдресБанкаДляРасчетов.Доступность			= ИспользуетсяБанкДляРасчетов;
	Элементы.ТелефоныБанкаДляРасчетов.Доступность		= ИспользуетсяБанкДляРасчетов;

	Если НЕ ИспользуетсяБанкДляРасчетов Тогда
		Объект.НаименованиеБанкаДляРасчетов				 = "";
		Объект.АдресБанкаДляРасчетов					 = "";
		Объект.ТелефоныБанкаДляРасчетов					 = "";
		Объект.СчетВБанкеДляРасчетов						 = "";
		Объект.СВИФТБанкаДляРасчетов						 = "";
	КонецЕсли;
	
	ИспользуетсяБанкДляРасчетовПриИзмененииНаСервере();
	
КонецПроцедуры

Процедура ИспользуетсяБанкДляРасчетовПриИзмененииНаСервере()
	
	УстановитьПараметрыРедактированияРеквизитов();
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура КодБанкаПриИзменении(Элемент)	
	
	ИмяРедактируемогоРеквизита = "КодБанка";
	РеквизитБанкаПриИзменении(Новый ОписаниеОповещения("КодБанкаПриИзмененииЗавершение", ЭтотОбъект), "КодБанка");
	
КонецПроцедуры

&НаКлиенте
Процедура КодБанкаПриИзмененииЗавершение(Результат, ДополнительныеПараметры) Экспорт	
	
	Если Не Объект.РучноеИзменениеРеквизитовБанка Тогда
		ЗаполнитьРеквизитыБанкаПоБанку(Объект.Банк, "Банк", Ложь);
	КонецЕсли;
	
	СформироватьАвтоНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура КодБанкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)	
	
	ИмяРедактируемогоРеквизита = "КодБанка";
	РеквизитБанкаПриВыборе("КодБанка", ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура КодБанкаОткрытие(Элемент, СтандартнаяОбработка)	
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(КодБанка) Тогда
		ИмяРедактируемогоРеквизита = "КодБанка";
		РеквизитБанкаОткрытие("КодБанка");
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ИспользоватьТекстКорреспондентаПриИзменении(Элемент)

	Элементы.ТекстКорреспондента.Доступность = ИспользоватьТекстКорреспондента;
	
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеБанкаПриИзменении(Элемент)
	
	СформироватьАвтоНаименование();
	
КонецПроцедуры

&НаКлиенте
Процедура ВалютаДенежныхСредствПриИзменении(Элемент)
	
	ВалютныйСчет = (ЗначениеЗаполнено(Объект.ВалютаДенежныхСредств) И Объект.ВалютаДенежныхСредств <> ВалютаРеглУчета);
	
	ВалютаДенежныхСредствПриИзмененииСервер();
	
КонецПроцедуры

&НаСервере
Процедура ВалютаДенежныхСредствПриИзмененииСервер()
	
	СформироватьАвтоНаименование();
	
	УстановитьПараметрыРедактированияРеквизитов();
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура НомерСчетаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	ТекстОшибки = "";
	ОчиститьСообщения();
	Валютный = (Объект.ВалютаДенежныхСредств <> ВалютаРеглУчета);
	
	Если НЕ ПустаяСтрока(Текст)
		И Не Объект.ИностранныйБанк
		И НЕ РегламентированныеДанныеКлиентСервер.ПроверитьКорректностьНомераСчета(Текст, Валютный, ТекстОшибки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "НомерСчета", "Объект");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИностранныйБанкПриИзменении(Элемент)
	
	Объект.ИностранныйБанк = (ИностранныйБанк = 1);
	
	ИностранныйБанкПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ИностранныйБанкПриИзмененииНаСервере()
	
	УстановитьПараметрыРедактированияРеквизитов();
	
	УправлениеЭлементамиФормы();
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	Если Не Объект.Ссылка.Пустая() Тогда
		ОткрытьФорму("Справочник.БанковскиеСчетаКонтрагентов.Форма.РазблокированиеРеквизитов",,,,,, 
			Новый ОписаниеОповещения("Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение", ЭтотОбъект), 
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение(Результат, ДополнительныеПараметры) Экспорт
    
    Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда
        ЗапретРедактированияРеквизитовОбъектовКлиент.УстановитьДоступностьЭлементовФормы(ЭтаФорма, Результат);
    КонецЕсли;

КонецПроцедуры

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(Команда, ЭтаФорма, Объект);
	
КонецПроцедуры
//Конец ИнтеграцияС1СДокументооборотом

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ТекстКорреспондента.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИспользоватьТекстКорреспондента");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.FormBackColor);
	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.BorderColor);

КонецПроцедуры

#Область ПриИзмененииРеквизитов

&НаСервере
Процедура ЗаполнитьТекстКорреспондента()
	
	Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.Контрагенты") Тогда
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	ДанныеСправочника.НаименованиеПолное КАК НаименованиеПолное
		|ИЗ
		|	Справочник.Контрагенты КАК ДанныеСправочника
		|ГДЕ
		|	ДанныеСправочника.Ссылка = &Ссылка
		|");
	ИначеЕсли ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	ДанныеСправочника.Наименование КАК НаименованиеПолное
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ДанныеСправочника
		|ГДЕ
		|	ДанныеСправочника.Ссылка = &Ссылка
		|");
	Иначе
		Запрос = Неопределено;
	КонецЕсли;
	
	Если Запрос <> Неопределено Тогда
	
		Запрос.УстановитьПараметр("Ссылка", Объект.Владелец);
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		Если Выборка.Следующий() Тогда
			ТекстКорреспондента = СокрЛП(Выборка.НаименованиеПолное);
		КонецЕсли;
		
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ЗаполнитьРеквизитыБанкаПоКоду(Код = "", ТипБанка, ПеренестиЗначенияРеквизитов = Ложь)	
	
	НашлиПоКоду	 = Ложь;
	ЗаписьОБанке = "";
	
	Если ТипБанка = "Банк" Тогда
		КодБанка		  = "";
		НаименованиеБанка = "";
		ГородБанка		  = "";
		РаботаСБанками.ПолучитьДанныеКлассификатора(Код,,ЗаписьОБанке);
		Если НЕ ПустаяСтрока(ЗаписьОБанке) Тогда
			КодБанка		  = ЗаписьОБанке.Код;
			НаименованиеБанка = ЗаписьОБанке.Наименование;
			ГородБанка		  = ЗаписьОБанке.Город;
			НашлиПоКоду		  = Истина;
			Если ПеренестиЗначенияРеквизитов Тогда
				Объект.КодБанка			 = "";
				Объект.НаименованиеБанка = "";
				Объект.ГородБанка		 = "";
				Объект.АдресБанка		 = "";
				Объект.ТелефоныБанка	 = "";
				Объект.Банк				 = ЗаписьОБанке;
			КонецЕсли;
			Если Не Объект.ИностранныйБанк Тогда
				Объект.СВИФТБанка = СВИФТпоМФО(КодБанка);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат НашлиПоКоду;
	
КонецФункции

&НаСервере
Функция ЗаполнитьРеквизитыБанкаПоБанку(Банк = "", ТипБанка, ПеренестиЗначенияРеквизитов = Ложь)
	
	Если ТипЗнч(Банк) = Тип("СправочникСсылка.КлассификаторБанков") Тогда	
		Если ТипБанка = "Банк" Тогда
			
			КодБанка		  = Банк.Код;
			НаименованиеБанка = Банк.Наименование;
			ГородБанка		  = Банк.Город;
			Если ПеренестиЗначенияРеквизитов Тогда
				Объект.КодБанка			 = Банк.Код;
				Объект.НаименованиеБанка = Банк.Наименование;
				Объект.ГородБанка		 = Банк.Город;
				Объект.АдресБанка		 = Банк.Адрес;
				Объект.ТелефоныБанка	 = Банк.Телефоны;
				Объект.Банк				 = "";
			КонецЕсли;
			
			Если Не Объект.ИностранныйБанк Тогда
				Объект.СВИФТБанка = СВИФТпоМФО(КодБанка);
			КонецЕсли;
			
			
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура НомерСчетаПриИзмененииСервер()
	
	
	Если НЕ Объект.Ссылка.Пустая()
		И НЕ ЗначениеЗаполнено(Объект.Ссылка.НомерСчетаУстаревший)
		И Объект.НомерСчета <> Объект.Ссылка.НомерСчета
		И РегламентированныеДанныеКлиентСервер.НомерБанковскогоСчетаСоответствуетСтандартуIBAN(Объект.НомерСчета)
		И НЕ РегламентированныеДанныеКлиентСервер.НомерБанковскогоСчетаСоответствуетСтандартуIBAN(Объект.Ссылка.НомерСчета) Тогда
		
		Объект.НомерСчетаУстаревший = Объект.Ссылка.НомерСчета;
		
	КонецЕсли;
	
	БанкПоСчету = РаботаСБанками.ПолучитьБанкПоНомеруСчетаIBAN(Объект.НомерСчета);
	Если ЗначениеЗаполнено(БанкПоСчету) Тогда
		Объект.Банк = БанкПоСчету;
		ЗаполнитьРеквизитыБанка();
	КонецЕсли;
	
	СформироватьАвтоНаименование();
	
КонецПроцедуры

#КонецОбласти

#Область УправлениеЭлементамиФормы

&НаСервере
Процедура УправлениеЭлементамиФормы()
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Владелец", "ТолькоПросмотр", Истина);
	Иначе
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы, "Владелец", "ТолькоПросмотр", Ложь);
	КонецЕсли;
	
	Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		Элементы.Владелец.Заголовок = НСтр("ru='Физическое лицо';uk='Фізична особа'");
	КонецЕсли;
	
	Элементы.ИспользуетсяБанкДляРасчетов.Доступность = ВалютныйСчет;
	
	
	// Банковские реквизиты
	Элементы.ИностранныйБанк.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоВалют");
	
	Элементы.НаименованиеБанка.Доступность = Объект.РучноеИзменениеРеквизитовБанка;
	Элементы.ГородБанка.Доступность        = Объект.РучноеИзменениеРеквизитовБанка;
	Элементы.АдресБанка.Доступность        = Объект.РучноеИзменениеРеквизитовБанка;
	
	Элементы.СчетВБанкеДляРасчетов.Доступность        = ВалютныйСчет И ИспользуетсяБанкДляРасчетов;
	Элементы.СВИФТБанкаДляРасчетов.Доступность        = ВалютныйСчет И ИспользуетсяБанкДляРасчетов;
	Элементы.НаименованиеБанкаДляРасчетов.Доступность = ВалютныйСчет И ИспользуетсяБанкДляРасчетов;
	Элементы.АдресБанкаДляРасчетов.Доступность        = ВалютныйСчет И ИспользуетсяБанкДляРасчетов;
	Элементы.ТелефоныБанкаДляРасчетов.Доступность     = ВалютныйСчет И ИспользуетсяБанкДляРасчетов;
	
	Если Не Объект.ИностранныйБанк Тогда
		
		Элементы.НомерСчета.Маска = "!!999999999999999999999999999";

		Элементы.РучноеИзменениеРеквизитовБанка.Видимость = Истина;
		
		Элементы.КодБанка.Заголовок = НСтр("ru='МФО';uk='МФО'");
		Элементы.КодБанка.КнопкаОткрытия = Истина;
		
		
		Элементы.АдресБанка.Видимость = ВалютныйСчет;
		Элементы.ГородБанка.Видимость = Не ВалютныйСчет;
		
		
		Элементы.Переместить(Элементы.КодБанка, Элементы.КодБанка.Родитель, Элементы.СВИФТБанка);
		
	Иначе
		
		Элементы.НомерСчета.Маска = "";
		
		Элементы.РучноеИзменениеРеквизитовБанка.Видимость = Ложь;
		
		Элементы.КодБанка.Заголовок = НСтр("ru='Национальный код банка';uk='Національний код банку'");
		Элементы.КодБанка.КнопкаОткрытия = Ложь;
		
		
		Элементы.АдресБанка.Видимость = Истина;
		Элементы.ГородБанка.Видимость = Ложь;
		
		
		Элементы.Переместить(Элементы.СВИФТБанка, Элементы.СВИФТБанка.Родитель, Элементы.КодБанка);
		
	КонецЕсли;
	
	Элементы.ИспользуетсяБанкДляРасчетов.Видимость = ВалютныйСчет;
	Элементы.ГруппаБанкДляРасчетов.Видимость       = ВалютныйСчет;
	
	// Редактирование текста наименования организации
	ИспользоватьТекстКорреспондента = ЗначениеЗаполнено(Объект.ТекстКорреспондента);
	Элементы.ТекстКорреспондента.Доступность = ИспользоватьТекстКорреспондента;
	
	Если ИспользоватьТекстКорреспондента Тогда
		ТекстКорреспондента = Объект.ТекстКорреспондента;
	Иначе
		ЗаполнитьТекстКорреспондента();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	
	ВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	ВалютныйСчет = (ЗначениеЗаполнено(Объект.ВалютаДенежныхСредств) И Объект.ВалютаДенежныхСредств <> ВалютаРеглУчета);
	
	ИностранныйБанк = ?(Объект.ИностранныйБанк, 1, 0);
	
	ЗаполнитьСписокВидовСчета();
	
	ПрочитатьТаблицуСоответствияМФОСВИФТ();
	ЗаполнитьРеквизитыБанка();
	СформироватьАвтоНаименование();
	УправлениеЭлементамиФормы();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВидовСчета()
	
	СписокВидСчета = Элементы.ВидСчета.СписокВыбора;
	СписокВидСчета.Очистить();
	
	ЯзыкИБ = Локализация.КодЯзыкаИнформационнойБазы(); 

	СписокВидСчета.Добавить(НСтр("ru='Текущий';uk='Поточний'",ЯзыкИБ));
	СписокВидСчета.Добавить(НСтр("ru='Депозитный';uk='Депозитний'",ЯзыкИБ));
	СписокВидСчета.Добавить(НСтр("ru='Инвестиционный';uk='Інвестиційний'",ЯзыкИБ));
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыБанка()
	
	КодБанка		  = "";
	НаименованиеБанка = "";
	ГородБанка		  = "";
	
	
	Если Объект.РучноеИзменениеРеквизитовБанка Тогда
		КодБанка		  = Объект.КодБанка;
		НаименованиеБанка = Объект.НаименованиеБанка;
		ГородБанка		  = Объект.ГородБанка;
	Иначе
		Если НЕ Объект.Банк.Пустая() Тогда
			ЗаполнитьРеквизитыБанкаПоБанку(Объект.Банк, "Банк", Ложь);
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьСписокВидовСчета();
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.ВидСчета = Элементы.ВидСчета.СписокВыбора[0];
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если ЗначениеЗаполнено(Объект.СВИФТБанкаДляРасчетов) Тогда
			ИспользуетсяБанкДляРасчетов = Истина;
		Иначе
			ИспользуетсяБанкДляРасчетов = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Функция СформироватьАвтоНаименование()
	
	Элементы.Наименование.СписокВыбора.Очистить();
	
	Если Объект.РучноеИзменениеРеквизитовБанка Тогда
		
		СтрокаНаименования = Прав(СокрЛП(Объект.НомерСчета), 4) 
		+ ?(ЗначениеЗаполнено(НаименованиеБанка), " в " + Строка(НаименованиеБанка), "")
		+ " (" + Строка(Объект.ВалютаДенежныхСредств) + ")";
		СтрокаНаименования = Лев(СтрокаНаименования, 150);
		
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		
		СтрокаНаименования = ?(ЗначениеЗаполнено(НаименованиеБанка), Строка(НаименованиеБанка), "")
		+ " (" + Строка(Объект.ВалютаДенежныхСредств) + ")";
		СтрокаНаименования = Лев(СтрокаНаименования, 150);
		
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		
	Иначе
		
		СтрокаНаименования = Прав(СокрЛП(Объект.НомерСчета), 4) 
		+ ?(ЗначениеЗаполнено(Объект.Банк), " в " + Строка(Объект.Банк), "")
		+ " (" + Строка(Объект.ВалютаДенежныхСредств) + ")";
		СтрокаНаименования = Лев(СтрокаНаименования, 150);
		
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		
		СтрокаНаименования = ?(ЗначениеЗаполнено(Объект.Банк), Строка(Объект.Банк), "")
		+ " (" + Строка(Объект.ВалютаДенежныхСредств) + ")";
		СтрокаНаименования = Лев(СтрокаНаименования, 150);
		
		Элементы.Наименование.СписокВыбора.Добавить(СтрокаНаименования);
		
	КонецЕсли;
	
	Возврат СтрокаНаименования;

КонецФункции

&НаКлиенте
Процедура РучноеИзменениеРеквизитовБанкаПриИзменении(Элемент)
	ЗаписьОБанке = "";
	Если Объект.РучноеИзменениеРеквизитовБанка Тогда
		Если НЕ Объект.Банк.Пустая() Тогда
			ЗаполнитьРеквизитыБанкаПоБанку(Объект.Банк, "Банк", Истина);
		КонецЕсли;	
		Объект.Банк = "";
	Иначе
		ЗаполнитьРеквизитыБанкаПоКоду(Объект.КодБанка, "Банк", Истина);
		Объект.КодБанка			 = "";
		Объект.НаименованиеБанка = "";
		Объект.ГородБанка		 = "";
		Объект.АдресБанка		 = "";
		Объект.ТелефоныБанка	 = "";
    КонецЕсли;
	
	УправлениеЭлементамиФормы();

КонецПроцедуры


&НаКлиенте
Процедура РеквизитБанкаПриВыборе(ИмяЭлемента, Форма)
	
	Если ИмяЭлемента = "КодБанка" Тогда	
		Если Не Объект.РучноеИзменениеРеквизитовБанка Тогда
			СтруктураПараметров = Новый Структура;
			СтруктураПараметров.Вставить("Реквизит", ИмяЭлемента);
			СтруктураПараметров.Вставить("ТекущаяСтрока", Объект.Банк);
			СтруктураПараметров.Вставить("ПараметрВыборГруппИЭлементов", ИспользованиеГруппИЭлементов.Элементы);
			ОткрытьФорму("Справочник.КлассификаторБанков.Форма.ФормаВыбора", СтруктураПараметров, Форма);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитБанкаОткрытие(ИмяЭлемента)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Реквизит", ИмяЭлемента);
	ЗначенияПараметров = Новый Структура;
	
	Если ИмяЭлемента = "КодБанка" Тогда	
		
		СтруктураПараметров.Вставить("РучноеИзменение", Объект.РучноеИзменениеРеквизитовБанка);
		
		Если Объект.РучноеИзменениеРеквизитовБанка Тогда
			ЗначенияПараметров.Вставить("КодБанка", КодБанка);
			ЗначенияПараметров.Вставить("Наименование", НаименованиеБанка);
			ЗначенияПараметров.Вставить("Город", ГородБанка);
			ЗначенияПараметров.Вставить("Адрес", Объект.АдресБанка);
			ЗначенияПараметров.Вставить("Телефоны", Объект.ТелефоныБанка);
		Иначе
			СтруктураПараметров.Вставить("Банк", Объект.Банк);
		КонецЕсли;
		
		
	КонецЕсли;
	
	СтруктураПараметров.Вставить("ЗначенияПолей", ЗначенияПараметров);
	ОткрытьФорму("Справочник.БанковскиеСчетаКонтрагентов.Форма.РеквизитыБанка",СтруктураПараметров, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитБанкаПриИзменении(Знач Оповещение, ИмяЭлемента)
	
	Если (ИмяЭлемента = "КодБанка") Тогда	
		Если Не Объект.РучноеИзменениеРеквизитовБанка И Не Объект.ИностранныйБанк Тогда
			Если Не ЗаполнитьРеквизитыБанкаПоКоду(КодБанка, "Банк", Истина) Тогда	
				СписокВариантовОтветовНаВопрос = Новый СписокЗначений;
				СписокВариантовОтветовНаВопрос.Добавить("ВыбратьИзСписка", НСтр("ru='Выбрать из списка';uk='Вибрати зі списку'"));
				СписокВариантовОтветовНаВопрос.Добавить("ПродолжитьВвод",  НСтр("ru='Продолжить ввод';uk='Продовжити введення'"));
				СписокВариантовОтветовНаВопрос.Добавить("ОтменитьВвод",	   НСтр("ru='Отменить ввод';uk='Скасувати введення'"));
				
				ТекстВопроса = НСтр("ru='Банк с МФО %Значение% не найден в классификаторе банков.';uk='Банк з МФО %Значение% не найдено у класифікаторі банків.'");
				ТекстВопроса = СтрЗаменить(ТекстВопроса,"%Значение%", КодБанка);
				
				Ответ = Неопределено;

				
				ПоказатьВопрос(Новый ОписаниеОповещения("РеквизитБанкаПриИзмененииЗавершение", ЭтотОбъект, Новый Структура("ИмяЭлемента, Оповещение, СписокВариантовОтветовНаВопрос, ТекстВопроса", ИмяЭлемента, Оповещение, СписокВариантовОтветовНаВопрос, ТекстВопроса)), ТекстВопроса, СписокВариантовОтветовНаВопрос, 0,,НСтр("ru='Выбор банка из классификатора';uk='Вибір банку з класифікатора'"));
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	РеквизитБанкаПриИзмененииФрагмент(Оповещение);
	
КонецПроцедуры


&НаКлиенте
Процедура РеквизитБанкаПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
    
    ИмяЭлемента = ДополнительныеПараметры.ИмяЭлемента;
    Оповещение = ДополнительныеПараметры.Оповещение;
    СписокВариантовОтветовНаВопрос = ДополнительныеПараметры.СписокВариантовОтветовНаВопрос;
    ТекстВопроса = ДополнительныеПараметры.ТекстВопроса;
    
    
    Ответ = РезультатВопроса;
    
    Если Ответ = "ОтменитьВвод" Тогда
		КодБанка = "";
    ИначеЕсли Ответ = "ПродолжитьВвод" Тогда
        Объект.РучноеИзменениеРеквизитовБанка = Истина;
		Объект.КодБанка = КодБанка;
	ИначеЕсли Ответ = "ВыбратьИзСписка" Тогда
        СтруктураПараметров = Новый Структура;
        СтруктураПараметров.Вставить("Реквизит", "КодБанка");
        ОткрытьФорму("Справочник.КлассификаторБанков.Форма.ФормаВыбора", СтруктураПараметров, ЭтаФорма);
    КонецЕсли;
    
    РеквизитБанкаПриИзмененииФрагмент(Оповещение);

КонецПроцедуры

&НаКлиенте
Процедура РеквизитБанкаПриИзмененииФрагмент(Знач Оповещение)
	
	УправлениеЭлементамиФормы();
	ВыполнитьОбработкуОповещения(Оповещение);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыРедактированияРеквизитов()
	
	Если Объект.ИностранныйБанк Тогда
		Объект.РучноеИзменениеРеквизитовБанка = Истина;
	Иначе
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьТаблицуСоответствияМФОСВИФТ()	
	
	СоответствиеМФОСВИФТXML = Справочники.БанковскиеСчетаОрганизаций.ПолучитьМакет("СоответствиеМФОSWIFT").ПолучитьТекст();
	СоответствиеМФОСВИФТ.Загрузить(ОбщегоНазначения.ПрочитатьXMLВТаблицу(СоответствиеМФОСВИФТXML).Данные);
	
КонецПроцедуры

&НаСервере
Функция СВИФТпоМФО(МФО)	
	
	СтрокиСоответствия = СоответствиеМФОСВИФТ.НайтиСтроки(Новый Структура("МФО", СокрЛП(МФО)));
	Если СтрокиСоответствия.Количество() = 1 Тогда
		Возврат СтрокиСоответствия[0].SWIFT;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#КонецОбласти
